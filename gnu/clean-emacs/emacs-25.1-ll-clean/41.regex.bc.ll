; ModuleID = './src/regex.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.buffer = type { %struct.vectorlike_header, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.buffer_text, %struct.buffer_text*, %struct.buffer*, i64, i64, i64, i64, i64, i64, %struct.buffer*, i32, i32, [50 x i8], %struct.timespec, i64, i64, i64, i64, i64, %struct.region_cache*, %struct.region_cache*, %struct.region_cache*, i8, %struct.Lisp_Overlay*, %struct.Lisp_Overlay*, i64, i64 }
%struct.vectorlike_header = type { i64 }
%struct.buffer_text = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.interval*, %struct.Lisp_Marker*, i8 }
%struct.interval = type opaque
%struct.Lisp_Marker = type { i32, %struct.buffer*, %struct.Lisp_Marker*, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.region_cache = type opaque
%struct.Lisp_Overlay = type { i32, %struct.Lisp_Overlay*, i64, i64, i64 }
%struct.gl_state_s = type { i64, i64, i64, i8, i64, i64, i64, i64, i64, i8, %struct.interval*, %struct.interval*, i64 }
%struct.emacs_globals = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.re_pattern_buffer = type { i8*, i64, i64, i64, i8*, i64, i64, i16, i32 }
%struct.re_registers = type { i32, i64*, i64* }
%struct.fail_stack_type = type { %union.fail_stack_elt*, i64, i64, i64 }
%union.fail_stack_elt = type { i8* }
%struct.compile_stack_type = type { %struct.compile_stack_elt_t*, i64, i64 }
%struct.compile_stack_elt_t = type { i64, i64, i64, i32 }
%struct.range_table_work_area = type { i32*, i32, i32, i32 }

@re_syntax_options = common global i64 0, align 8
@whitespace_regexp = internal global i8* null, align 8
@re_max_failures = global i64 40000, align 8
@.str = private unnamed_addr constant [6 x i8] c"alnum\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"nonascii\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"graph\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"punct\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"space\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"unibyte\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"multibyte\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"digit\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"xdigit\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"cntrl\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"blank\00", align 1
@current_buffer = external global %struct.buffer*, align 8
@re_match_object = common global i64 0, align 8
@gl_state = external global %struct.gl_state_s, align 8
@re_error_msgid = internal global [18 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0)], align 16
@immediate_quit = external global i8, align 1
@globals = external global %struct.emacs_globals, align 8
@pending_signals = external global i8, align 1
@syntax_spec_code = external constant [256 x i8], align 16
@.str.17 = private unnamed_addr constant [8 x i8] c"Success\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"No match\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"Invalid regular expression\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Invalid collation character\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"Invalid character class name\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"Trailing backslash\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Invalid back reference\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"Unmatched [ or [^\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"Unmatched ( or \5C(\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"Unmatched \5C{\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"Invalid content of \5C{\5C}\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"Invalid range end\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"Memory exhausted\00", align 1
@.str.30 = private unnamed_addr constant [37 x i8] c"Invalid preceding regular expression\00", align 1
@.str.31 = private unnamed_addr constant [36 x i8] c"Premature end of regular expression\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"Regular expression too big\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"Unmatched ) or \5C)\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"Range striding over charsets\00", align 1

; Function Attrs: nounwind uwtable
define i64 @re_set_syntax(i64 %syntax) #0 {
entry:
  %syntax.addr = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %syntax, i64* %syntax.addr, align 8
  %0 = load i64, i64* @re_syntax_options, align 8
  store i64 %0, i64* %ret, align 8
  %1 = load i64, i64* %syntax.addr, align 8
  store i64 %1, i64* @re_syntax_options, align 8
  %2 = load i64, i64* %ret, align 8
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define void @re_set_whitespace_regexp(i8* %regexp) #0 {
entry:
  %regexp.addr = alloca i8*, align 8
  store i8* %regexp, i8** %regexp.addr, align 8
  %0 = load i8*, i8** %regexp.addr, align 8
  store i8* %0, i8** @whitespace_regexp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @re_wctype(i8* %str) #0 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %string = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  %0 = load i8*, i8** %str.addr, align 8
  store i8* %0, i8** %string, align 8
  %1 = load i8*, i8** %string, align 8
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0)) #5
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %string, align 8
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0)) #5
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %if.then.3, label %if.else.4

if.then.3:                                        ; preds = %if.else
  store i32 2, i32* %retval
  br label %return

if.else.4:                                        ; preds = %if.else
  %3 = load i8*, i8** %string, align 8
  %call5 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0)) #5
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %if.then.7, label %if.else.8

if.then.7:                                        ; preds = %if.else.4
  store i32 3, i32* %retval
  br label %return

if.else.8:                                        ; preds = %if.else.4
  %4 = load i8*, i8** %string, align 8
  %call9 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0)) #5
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %if.else.8
  store i32 16, i32* %retval
  br label %return

if.else.12:                                       ; preds = %if.else.8
  %5 = load i8*, i8** %string, align 8
  %call13 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)) #5
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then.15, label %if.else.16

if.then.15:                                       ; preds = %if.else.12
  store i32 15, i32* %retval
  br label %return

if.else.16:                                       ; preds = %if.else.12
  %6 = load i8*, i8** %string, align 8
  %call17 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0)) #5
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then.19, label %if.else.20

if.then.19:                                       ; preds = %if.else.16
  store i32 4, i32* %retval
  br label %return

if.else.20:                                       ; preds = %if.else.16
  %7 = load i8*, i8** %string, align 8
  %call21 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)) #5
  %cmp22 = icmp eq i32 %call21, 0
  br i1 %cmp22, label %if.then.23, label %if.else.24

if.then.23:                                       ; preds = %if.else.20
  store i32 6, i32* %retval
  br label %return

if.else.24:                                       ; preds = %if.else.20
  %8 = load i8*, i8** %string, align 8
  %call25 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)) #5
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %if.else.24
  store i32 5, i32* %retval
  br label %return

if.else.28:                                       ; preds = %if.else.24
  %9 = load i8*, i8** %string, align 8
  %call29 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0)) #5
  %cmp30 = icmp eq i32 %call29, 0
  br i1 %cmp30, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %if.else.28
  store i32 8, i32* %retval
  br label %return

if.else.32:                                       ; preds = %if.else.28
  %10 = load i8*, i8** %string, align 8
  %call33 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0)) #5
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %if.else.32
  store i32 13, i32* %retval
  br label %return

if.else.36:                                       ; preds = %if.else.32
  %11 = load i8*, i8** %string, align 8
  %call37 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0)) #5
  %cmp38 = icmp eq i32 %call37, 0
  br i1 %cmp38, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %if.else.36
  store i32 7, i32* %retval
  br label %return

if.else.40:                                       ; preds = %if.else.36
  %12 = load i8*, i8** %string, align 8
  %call41 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0)) #5
  %cmp42 = icmp eq i32 %call41, 0
  br i1 %cmp42, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %if.else.40
  store i32 17, i32* %retval
  br label %return

if.else.44:                                       ; preds = %if.else.40
  %13 = load i8*, i8** %string, align 8
  %call45 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0)) #5
  %cmp46 = icmp eq i32 %call45, 0
  br i1 %cmp46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %if.else.44
  store i32 14, i32* %retval
  br label %return

if.else.48:                                       ; preds = %if.else.44
  %14 = load i8*, i8** %string, align 8
  %call49 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0)) #5
  %cmp50 = icmp eq i32 %call49, 0
  br i1 %cmp50, label %if.then.51, label %if.else.52

if.then.51:                                       ; preds = %if.else.48
  store i32 10, i32* %retval
  br label %return

if.else.52:                                       ; preds = %if.else.48
  %15 = load i8*, i8** %string, align 8
  %call53 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)) #5
  %cmp54 = icmp eq i32 %call53, 0
  br i1 %cmp54, label %if.then.55, label %if.else.56

if.then.55:                                       ; preds = %if.else.52
  store i32 11, i32* %retval
  br label %return

if.else.56:                                       ; preds = %if.else.52
  %16 = load i8*, i8** %string, align 8
  %call57 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0)) #5
  %cmp58 = icmp eq i32 %call57, 0
  br i1 %cmp58, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %if.else.56
  store i32 9, i32* %retval
  br label %return

if.else.60:                                       ; preds = %if.else.56
  %17 = load i8*, i8** %string, align 8
  %call61 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0)) #5
  %cmp62 = icmp eq i32 %call61, 0
  br i1 %cmp62, label %if.then.63, label %if.else.64

if.then.63:                                       ; preds = %if.else.60
  store i32 12, i32* %retval
  br label %return

if.else.64:                                       ; preds = %if.else.60
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else.64, %if.then.63, %if.then.59, %if.then.55, %if.then.51, %if.then.47, %if.then.43, %if.then.39, %if.then.35, %if.then.31, %if.then.27, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.7, %if.then.3, %if.then
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define signext i8 @re_iswctype(i32 %ch, i32 %cc) #0 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i32, align 4
  %cc.addr = alloca i32, align 4
  store i32 %ch, i32* %ch.addr, align 4
  store i32 %cc, i32* %cc.addr, align 4
  %0 = load i32, i32* %cc.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.14
    i32 12, label %sw.bb.40
    i32 9, label %sw.bb.51
    i32 10, label %sw.bb.57
    i32 4, label %sw.bb.67
    i32 6, label %sw.bb.97
    i32 5, label %sw.bb.103
    i32 8, label %sw.bb.135
    i32 13, label %sw.bb.178
    i32 7, label %sw.bb.185
    i32 11, label %sw.bb.191
    i32 16, label %sw.bb.216
    i32 15, label %sw.bb.222
    i32 17, label %sw.bb.227
    i32 14, label %sw.bb.234
    i32 3, label %sw.bb.241
    i32 0, label %sw.bb.248
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %ch.addr, align 4
  %cmp = icmp slt i32 %1, 128
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %2 = load i32, i32* %ch.addr, align 4
  %cmp1 = icmp sge i32 %2, 97
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %3 = load i32, i32* %ch.addr, align 4
  %cmp2 = icmp sle i32 %3, 122
  br i1 %cmp2, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %4 = load i32, i32* %ch.addr, align 4
  %cmp3 = icmp sge i32 %4, 65
  br i1 %cmp3, label %land.lhs.true.4, label %lor.rhs

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %5 = load i32, i32* %ch.addr, align 4
  %cmp5 = icmp sle i32 %5, 90
  br i1 %cmp5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true.4, %lor.lhs.false
  %6 = load i32, i32* %ch.addr, align 4
  %cmp6 = icmp sge i32 %6, 48
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %7 = load i32, i32* %ch.addr, align 4
  %cmp7 = icmp sle i32 %7, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %8 = phi i1 [ false, %lor.rhs ], [ %cmp7, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.lhs.true.4, %land.lhs.true
  %9 = phi i1 [ true, %land.lhs.true.4 ], [ true, %land.lhs.true ], [ %8, %land.end ]
  %lor.ext = zext i1 %9 to i32
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  %10 = load i32, i32* %ch.addr, align 4
  %call = call zeroext i1 @alphabeticp(i32 %10)
  br i1 %call, label %lor.end.10, label %lor.rhs.8

lor.rhs.8:                                        ; preds = %cond.false
  %11 = load i32, i32* %ch.addr, align 4
  %call9 = call zeroext i1 @decimalnump(i32 %11)
  br label %lor.end.10

lor.end.10:                                       ; preds = %lor.rhs.8, %cond.false
  %12 = phi i1 [ true, %cond.false ], [ %call9, %lor.rhs.8 ]
  %lor.ext11 = zext i1 %12 to i32
  br label %cond.end

cond.end:                                         ; preds = %lor.end.10, %lor.end
  %cond = phi i32 [ %lor.ext, %lor.end ], [ %lor.ext11, %lor.end.10 ]
  %cmp12 = icmp ne i32 %cond, 0
  %conv = zext i1 %cmp12 to i32
  %conv13 = trunc i32 %conv to i8
  store i8 %conv13, i8* %retval
  br label %return

sw.bb.14:                                         ; preds = %entry
  %13 = load i32, i32* %ch.addr, align 4
  %cmp15 = icmp slt i32 %13, 128
  br i1 %cmp15, label %cond.true.17, label %cond.false.32

cond.true.17:                                     ; preds = %sw.bb.14
  %14 = load i32, i32* %ch.addr, align 4
  %cmp18 = icmp sge i32 %14, 97
  br i1 %cmp18, label %land.lhs.true.20, label %lor.rhs.23

land.lhs.true.20:                                 ; preds = %cond.true.17
  %15 = load i32, i32* %ch.addr, align 4
  %cmp21 = icmp sle i32 %15, 122
  br i1 %cmp21, label %lor.end.30, label %lor.rhs.23

lor.rhs.23:                                       ; preds = %land.lhs.true.20, %cond.true.17
  %16 = load i32, i32* %ch.addr, align 4
  %cmp24 = icmp sge i32 %16, 65
  br i1 %cmp24, label %land.rhs.26, label %land.end.29

land.rhs.26:                                      ; preds = %lor.rhs.23
  %17 = load i32, i32* %ch.addr, align 4
  %cmp27 = icmp sle i32 %17, 90
  br label %land.end.29

land.end.29:                                      ; preds = %land.rhs.26, %lor.rhs.23
  %18 = phi i1 [ false, %lor.rhs.23 ], [ %cmp27, %land.rhs.26 ]
  br label %lor.end.30

lor.end.30:                                       ; preds = %land.end.29, %land.lhs.true.20
  %19 = phi i1 [ true, %land.lhs.true.20 ], [ %18, %land.end.29 ]
  %lor.ext31 = zext i1 %19 to i32
  br label %cond.end.35

cond.false.32:                                    ; preds = %sw.bb.14
  %20 = load i32, i32* %ch.addr, align 4
  %call33 = call zeroext i1 @alphabeticp(i32 %20)
  %conv34 = zext i1 %call33 to i32
  br label %cond.end.35

cond.end.35:                                      ; preds = %cond.false.32, %lor.end.30
  %cond36 = phi i32 [ %lor.ext31, %lor.end.30 ], [ %conv34, %cond.false.32 ]
  %cmp37 = icmp ne i32 %cond36, 0
  %conv38 = zext i1 %cmp37 to i32
  %conv39 = trunc i32 %conv38 to i8
  store i8 %conv39, i8* %retval
  br label %return

sw.bb.40:                                         ; preds = %entry
  %21 = load i32, i32* %ch.addr, align 4
  %cmp41 = icmp eq i32 %21, 32
  br i1 %cmp41, label %lor.end.46, label %lor.rhs.43

lor.rhs.43:                                       ; preds = %sw.bb.40
  %22 = load i32, i32* %ch.addr, align 4
  %cmp44 = icmp eq i32 %22, 9
  br label %lor.end.46

lor.end.46:                                       ; preds = %lor.rhs.43, %sw.bb.40
  %23 = phi i1 [ true, %sw.bb.40 ], [ %cmp44, %lor.rhs.43 ]
  %lor.ext47 = zext i1 %23 to i32
  %cmp48 = icmp ne i32 %lor.ext47, 0
  %conv49 = zext i1 %cmp48 to i32
  %conv50 = trunc i32 %conv49 to i8
  store i8 %conv50, i8* %retval
  br label %return

sw.bb.51:                                         ; preds = %entry
  %24 = load i32, i32* %ch.addr, align 4
  %cmp52 = icmp slt i32 %24, 32
  %conv53 = zext i1 %cmp52 to i32
  %cmp54 = icmp ne i32 %conv53, 0
  %conv55 = zext i1 %cmp54 to i32
  %conv56 = trunc i32 %conv55 to i8
  store i8 %conv56, i8* %retval
  br label %return

sw.bb.57:                                         ; preds = %entry
  %25 = load i32, i32* %ch.addr, align 4
  %cmp58 = icmp sge i32 %25, 48
  br i1 %cmp58, label %land.rhs.60, label %land.end.63

land.rhs.60:                                      ; preds = %sw.bb.57
  %26 = load i32, i32* %ch.addr, align 4
  %cmp61 = icmp sle i32 %26, 57
  br label %land.end.63

land.end.63:                                      ; preds = %land.rhs.60, %sw.bb.57
  %27 = phi i1 [ false, %sw.bb.57 ], [ %cmp61, %land.rhs.60 ]
  %land.ext = zext i1 %27 to i32
  %cmp64 = icmp ne i32 %land.ext, 0
  %conv65 = zext i1 %cmp64 to i32
  %conv66 = trunc i32 %conv65 to i8
  store i8 %conv66, i8* %retval
  br label %return

sw.bb.67:                                         ; preds = %entry
  br i1 true, label %cond.true.68, label %cond.false.71

cond.true.68:                                     ; preds = %sw.bb.67
  %28 = load i32, i32* %ch.addr, align 4
  %add = add i32 %28, 0
  %cmp69 = icmp ult i32 %add, 256
  br i1 %cmp69, label %cond.true.76, label %cond.false.89

cond.false.71:                                    ; preds = %sw.bb.67
  %29 = load i32, i32* %ch.addr, align 4
  %conv72 = sext i32 %29 to i64
  %add73 = add i64 %conv72, 0
  %cmp74 = icmp ult i64 %add73, 256
  br i1 %cmp74, label %cond.true.76, label %cond.false.89

cond.true.76:                                     ; preds = %cond.false.71, %cond.true.68
  %30 = load i32, i32* %ch.addr, align 4
  %cmp77 = icmp sgt i32 %30, 32
  br i1 %cmp77, label %land.rhs.79, label %land.end.87

land.rhs.79:                                      ; preds = %cond.true.76
  %31 = load i32, i32* %ch.addr, align 4
  %cmp80 = icmp sge i32 %31, 127
  br i1 %cmp80, label %land.rhs.82, label %land.end.85

land.rhs.82:                                      ; preds = %land.rhs.79
  %32 = load i32, i32* %ch.addr, align 4
  %cmp83 = icmp sle i32 %32, 160
  br label %land.end.85

land.end.85:                                      ; preds = %land.rhs.82, %land.rhs.79
  %33 = phi i1 [ false, %land.rhs.79 ], [ %cmp83, %land.rhs.82 ]
  %lnot = xor i1 %33, true
  br label %land.end.87

land.end.87:                                      ; preds = %land.end.85, %cond.true.76
  %34 = phi i1 [ false, %cond.true.76 ], [ %lnot, %land.end.85 ]
  %land.ext88 = zext i1 %34 to i32
  br label %cond.end.92

cond.false.89:                                    ; preds = %cond.false.71, %cond.true.68
  %35 = load i32, i32* %ch.addr, align 4
  %call90 = call zeroext i1 @graphicp(i32 %35)
  %conv91 = zext i1 %call90 to i32
  br label %cond.end.92

cond.end.92:                                      ; preds = %cond.false.89, %land.end.87
  %cond93 = phi i32 [ %land.ext88, %land.end.87 ], [ %conv91, %cond.false.89 ]
  %cmp94 = icmp ne i32 %cond93, 0
  %conv95 = zext i1 %cmp94 to i32
  %conv96 = trunc i32 %conv95 to i8
  store i8 %conv96, i8* %retval
  br label %return

sw.bb.97:                                         ; preds = %entry
  %36 = load i32, i32* %ch.addr, align 4
  %call98 = call zeroext i1 @lowercasep(i32 %36)
  %conv99 = zext i1 %call98 to i32
  %cmp100 = icmp ne i32 %conv99, 0
  %conv101 = zext i1 %cmp100 to i32
  %conv102 = trunc i32 %conv101 to i8
  store i8 %conv102, i8* %retval
  br label %return

sw.bb.103:                                        ; preds = %entry
  br i1 true, label %cond.true.104, label %cond.false.108

cond.true.104:                                    ; preds = %sw.bb.103
  %37 = load i32, i32* %ch.addr, align 4
  %add105 = add i32 %37, 0
  %cmp106 = icmp ult i32 %add105, 256
  br i1 %cmp106, label %cond.true.113, label %cond.false.127

cond.false.108:                                   ; preds = %sw.bb.103
  %38 = load i32, i32* %ch.addr, align 4
  %conv109 = sext i32 %38 to i64
  %add110 = add i64 %conv109, 0
  %cmp111 = icmp ult i64 %add110, 256
  br i1 %cmp111, label %cond.true.113, label %cond.false.127

cond.true.113:                                    ; preds = %cond.false.108, %cond.true.104
  %39 = load i32, i32* %ch.addr, align 4
  %cmp114 = icmp sge i32 %39, 32
  br i1 %cmp114, label %land.rhs.116, label %land.end.125

land.rhs.116:                                     ; preds = %cond.true.113
  %40 = load i32, i32* %ch.addr, align 4
  %cmp117 = icmp sge i32 %40, 127
  br i1 %cmp117, label %land.rhs.119, label %land.end.122

land.rhs.119:                                     ; preds = %land.rhs.116
  %41 = load i32, i32* %ch.addr, align 4
  %cmp120 = icmp sle i32 %41, 159
  br label %land.end.122

land.end.122:                                     ; preds = %land.rhs.119, %land.rhs.116
  %42 = phi i1 [ false, %land.rhs.116 ], [ %cmp120, %land.rhs.119 ]
  %lnot124 = xor i1 %42, true
  br label %land.end.125

land.end.125:                                     ; preds = %land.end.122, %cond.true.113
  %43 = phi i1 [ false, %cond.true.113 ], [ %lnot124, %land.end.122 ]
  %land.ext126 = zext i1 %43 to i32
  br label %cond.end.130

cond.false.127:                                   ; preds = %cond.false.108, %cond.true.104
  %44 = load i32, i32* %ch.addr, align 4
  %call128 = call zeroext i1 @printablep(i32 %44)
  %conv129 = zext i1 %call128 to i32
  br label %cond.end.130

cond.end.130:                                     ; preds = %cond.false.127, %land.end.125
  %cond131 = phi i32 [ %land.ext126, %land.end.125 ], [ %conv129, %cond.false.127 ]
  %cmp132 = icmp ne i32 %cond131, 0
  %conv133 = zext i1 %cmp132 to i32
  %conv134 = trunc i32 %conv133 to i8
  store i8 %conv134, i8* %retval
  br label %return

sw.bb.135:                                        ; preds = %entry
  %45 = load i32, i32* %ch.addr, align 4
  %cmp136 = icmp slt i32 %45, 128
  br i1 %cmp136, label %cond.true.138, label %cond.false.169

cond.true.138:                                    ; preds = %sw.bb.135
  %46 = load i32, i32* %ch.addr, align 4
  %cmp139 = icmp sgt i32 %46, 32
  br i1 %cmp139, label %land.lhs.true.141, label %land.end.167

land.lhs.true.141:                                ; preds = %cond.true.138
  %47 = load i32, i32* %ch.addr, align 4
  %cmp142 = icmp slt i32 %47, 127
  br i1 %cmp142, label %land.rhs.144, label %land.end.167

land.rhs.144:                                     ; preds = %land.lhs.true.141
  %48 = load i32, i32* %ch.addr, align 4
  %cmp145 = icmp sge i32 %48, 97
  br i1 %cmp145, label %land.lhs.true.147, label %lor.lhs.false.150

land.lhs.true.147:                                ; preds = %land.rhs.144
  %49 = load i32, i32* %ch.addr, align 4
  %cmp148 = icmp sle i32 %49, 122
  br i1 %cmp148, label %lor.end.164, label %lor.lhs.false.150

lor.lhs.false.150:                                ; preds = %land.lhs.true.147, %land.rhs.144
  %50 = load i32, i32* %ch.addr, align 4
  %cmp151 = icmp sge i32 %50, 65
  br i1 %cmp151, label %land.lhs.true.153, label %lor.rhs.156

land.lhs.true.153:                                ; preds = %lor.lhs.false.150
  %51 = load i32, i32* %ch.addr, align 4
  %cmp154 = icmp sle i32 %51, 90
  br i1 %cmp154, label %lor.end.164, label %lor.rhs.156

lor.rhs.156:                                      ; preds = %land.lhs.true.153, %lor.lhs.false.150
  %52 = load i32, i32* %ch.addr, align 4
  %cmp157 = icmp sge i32 %52, 48
  br i1 %cmp157, label %land.rhs.159, label %land.end.162

land.rhs.159:                                     ; preds = %lor.rhs.156
  %53 = load i32, i32* %ch.addr, align 4
  %cmp160 = icmp sle i32 %53, 57
  br label %land.end.162

land.end.162:                                     ; preds = %land.rhs.159, %lor.rhs.156
  %54 = phi i1 [ false, %lor.rhs.156 ], [ %cmp160, %land.rhs.159 ]
  br label %lor.end.164

lor.end.164:                                      ; preds = %land.end.162, %land.lhs.true.153, %land.lhs.true.147
  %55 = phi i1 [ true, %land.lhs.true.153 ], [ true, %land.lhs.true.147 ], [ %54, %land.end.162 ]
  %lnot166 = xor i1 %55, true
  br label %land.end.167

land.end.167:                                     ; preds = %lor.end.164, %land.lhs.true.141, %cond.true.138
  %56 = phi i1 [ false, %land.lhs.true.141 ], [ false, %cond.true.138 ], [ %lnot166, %lor.end.164 ]
  %land.ext168 = zext i1 %56 to i32
  br label %cond.end.173

cond.false.169:                                   ; preds = %sw.bb.135
  %57 = load i32, i32* %ch.addr, align 4
  %call170 = call i32 @syntax_property(i32 %57, i1 zeroext true)
  %cmp171 = icmp ne i32 %call170, 2
  %conv172 = zext i1 %cmp171 to i32
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.false.169, %land.end.167
  %cond174 = phi i32 [ %land.ext168, %land.end.167 ], [ %conv172, %cond.false.169 ]
  %cmp175 = icmp ne i32 %cond174, 0
  %conv176 = zext i1 %cmp175 to i32
  %conv177 = trunc i32 %conv176 to i8
  store i8 %conv177, i8* %retval
  br label %return

sw.bb.178:                                        ; preds = %entry
  %58 = load i32, i32* %ch.addr, align 4
  %call179 = call i32 @syntax_property(i32 %58, i1 zeroext true)
  %cmp180 = icmp eq i32 %call179, 0
  %conv181 = zext i1 %cmp180 to i32
  %cmp182 = icmp ne i32 %conv181, 0
  %conv183 = zext i1 %cmp182 to i32
  %conv184 = trunc i32 %conv183 to i8
  store i8 %conv184, i8* %retval
  br label %return

sw.bb.185:                                        ; preds = %entry
  %59 = load i32, i32* %ch.addr, align 4
  %call186 = call zeroext i1 @uppercasep(i32 %59)
  %conv187 = zext i1 %call186 to i32
  %cmp188 = icmp ne i32 %conv187, 0
  %conv189 = zext i1 %cmp188 to i32
  %conv190 = trunc i32 %conv189 to i8
  store i8 %conv190, i8* %retval
  br label %return

sw.bb.191:                                        ; preds = %entry
  %60 = load i32, i32* %ch.addr, align 4
  %cmp192 = icmp sge i32 %60, 48
  br i1 %cmp192, label %land.lhs.true.194, label %lor.lhs.false.197

land.lhs.true.194:                                ; preds = %sw.bb.191
  %61 = load i32, i32* %ch.addr, align 4
  %cmp195 = icmp sle i32 %61, 57
  br i1 %cmp195, label %lor.end.211, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %land.lhs.true.194, %sw.bb.191
  %62 = load i32, i32* %ch.addr, align 4
  %cmp198 = icmp sge i32 %62, 97
  br i1 %cmp198, label %land.lhs.true.200, label %lor.rhs.203

land.lhs.true.200:                                ; preds = %lor.lhs.false.197
  %63 = load i32, i32* %ch.addr, align 4
  %cmp201 = icmp sle i32 %63, 102
  br i1 %cmp201, label %lor.end.211, label %lor.rhs.203

lor.rhs.203:                                      ; preds = %land.lhs.true.200, %lor.lhs.false.197
  %64 = load i32, i32* %ch.addr, align 4
  %cmp204 = icmp sge i32 %64, 65
  br i1 %cmp204, label %land.rhs.206, label %land.end.209

land.rhs.206:                                     ; preds = %lor.rhs.203
  %65 = load i32, i32* %ch.addr, align 4
  %cmp207 = icmp sle i32 %65, 70
  br label %land.end.209

land.end.209:                                     ; preds = %land.rhs.206, %lor.rhs.203
  %66 = phi i1 [ false, %lor.rhs.203 ], [ %cmp207, %land.rhs.206 ]
  br label %lor.end.211

lor.end.211:                                      ; preds = %land.end.209, %land.lhs.true.200, %land.lhs.true.194
  %67 = phi i1 [ true, %land.lhs.true.200 ], [ true, %land.lhs.true.194 ], [ %66, %land.end.209 ]
  %lor.ext212 = zext i1 %67 to i32
  %cmp213 = icmp ne i32 %lor.ext212, 0
  %conv214 = zext i1 %cmp213 to i32
  %conv215 = trunc i32 %conv214 to i8
  store i8 %conv215, i8* %retval
  br label %return

sw.bb.216:                                        ; preds = %entry
  %68 = load i32, i32* %ch.addr, align 4
  %cmp217 = icmp slt i32 %68, 128
  %conv218 = zext i1 %cmp217 to i32
  %cmp219 = icmp ne i32 %conv218, 0
  %conv220 = zext i1 %cmp219 to i32
  %conv221 = trunc i32 %conv220 to i8
  store i8 %conv221, i8* %retval
  br label %return

sw.bb.222:                                        ; preds = %entry
  %69 = load i32, i32* %ch.addr, align 4
  %cmp223 = icmp slt i32 %69, 128
  %lnot225 = xor i1 %cmp223, true
  %lnot.ext = zext i1 %lnot225 to i32
  %conv226 = trunc i32 %lnot.ext to i8
  store i8 %conv226, i8* %retval
  br label %return

sw.bb.227:                                        ; preds = %entry
  %70 = load i32, i32* %ch.addr, align 4
  %add228 = add i32 %70, 0
  %cmp229 = icmp ult i32 %add228, 256
  %conv230 = zext i1 %cmp229 to i32
  %cmp231 = icmp ne i32 %conv230, 0
  %conv232 = zext i1 %cmp231 to i32
  %conv233 = trunc i32 %conv232 to i8
  store i8 %conv233, i8* %retval
  br label %return

sw.bb.234:                                        ; preds = %entry
  %71 = load i32, i32* %ch.addr, align 4
  %add235 = add i32 %71, 0
  %cmp236 = icmp ult i32 %add235, 256
  %lnot238 = xor i1 %cmp236, true
  %lnot.ext239 = zext i1 %lnot238 to i32
  %conv240 = trunc i32 %lnot.ext239 to i8
  store i8 %conv240, i8* %retval
  br label %return

sw.bb.241:                                        ; preds = %entry
  %72 = load i32, i32* %ch.addr, align 4
  %call242 = call i32 @syntax_property(i32 %72, i1 zeroext true)
  %cmp243 = icmp eq i32 %call242, 2
  %conv244 = zext i1 %cmp243 to i32
  %cmp245 = icmp ne i32 %conv244, 0
  %conv246 = zext i1 %cmp245 to i32
  %conv247 = trunc i32 %conv246 to i8
  store i8 %conv247, i8* %retval
  br label %return

sw.bb.248:                                        ; preds = %entry
  store i8 0, i8* %retval
  br label %return

sw.default:                                       ; preds = %entry
  call void @abort() #6
  unreachable

return:                                           ; preds = %sw.bb.248, %sw.bb.241, %sw.bb.234, %sw.bb.227, %sw.bb.222, %sw.bb.216, %lor.end.211, %sw.bb.185, %sw.bb.178, %cond.end.173, %cond.end.130, %sw.bb.97, %cond.end.92, %land.end.63, %sw.bb.51, %lor.end.46, %cond.end.35, %cond.end
  %73 = load i8, i8* %retval
  ret i8 %73
}

declare zeroext i1 @alphabeticp(i32) #2

declare zeroext i1 @decimalnump(i32) #2

declare zeroext i1 @graphicp(i32) #2

declare zeroext i1 @lowercasep(i32) #2

declare zeroext i1 @printablep(i32) #2

declare i32 @syntax_property(i32, i1 zeroext) #2

declare zeroext i1 @uppercasep(i32) #2

; Function Attrs: noreturn nounwind
declare void @abort() #3

; Function Attrs: nounwind uwtable
define i32 @re_compile_fastmap(%struct.re_pattern_buffer* %bufp) #0 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %fastmap = alloca i8*, align 8
  %analysis = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %fastmap1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 4
  %1 = load i8*, i8** %fastmap1, align 8
  store i8* %1, i8** %fastmap, align 8
  %2 = load i8*, i8** %fastmap, align 8
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 256, i32 1, i1 false)
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 7
  %bf.load = load i16, i16* %fastmap_accurate, align 8
  %bf.clear = and i16 %bf.load, -9
  %bf.set = or i16 %bf.clear, 8
  store i16 %bf.set, i16* %fastmap_accurate, align 8
  %4 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %4, i32 0, i32 0
  %5 = load i8*, i8** %buffer, align 8
  %6 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %6, i32 0, i32 0
  %7 = load i8*, i8** %buffer2, align 8
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 2
  %9 = load i64, i64* %used, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %9
  %10 = load i8*, i8** %fastmap, align 8
  %11 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %multibyte = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %11, i32 0, i32 7
  %bf.load3 = load i16, i16* %multibyte, align 8
  %bf.lshr = lshr i16 %bf.load3, 8
  %bf.clear4 = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear4 to i32
  %call = call i32 @analyze_first(i8* %5, i8* %add.ptr, i8* %10, i32 %bf.cast)
  store i32 %call, i32* %analysis, align 4
  %12 = load i32, i32* %analysis, align 4
  %cmp = icmp ne i32 %12, 0
  %conv = zext i1 %cmp to i32
  %13 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %can_be_null = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %13, i32 0, i32 7
  %14 = trunc i32 %conv to i16
  %bf.load5 = load i16, i16* %can_be_null, align 8
  %bf.value = and i16 %14, 1
  %bf.clear6 = and i16 %bf.load5, -2
  %bf.set7 = or i16 %bf.clear6, %bf.value
  store i16 %bf.set7, i16* %can_be_null, align 8
  %bf.result.cast = zext i16 %bf.value to i32
  ret i32 0
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @analyze_first(i8* %p, i8* %pend, i8* %fastmap, i32 %multibyte) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %pend.addr = alloca i8*, align 8
  %fastmap.addr = alloca i8*, align 8
  %multibyte.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %not = alloca i8, align 1
  %match_any_multibyte_characters = alloca i8, align 1
  %p1 = alloca i8*, align 8
  %c = alloca i32, align 4
  %c166 = alloca i32, align 4
  %count = alloca i32, align 4
  %lc1 = alloca i8, align 1
  %lc2 = alloca i8, align 1
  %r = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  store i8* %pend, i8** %pend.addr, align 8
  store i8* %fastmap, i8** %fastmap.addr, align 8
  store i32 %multibyte, i32* %multibyte.addr, align 4
  store i8 0, i8* %match_any_multibyte_characters, align 1
  br label %while.cond

while.cond:                                       ; preds = %sw.bb.375, %sw.bb.373, %sw.bb.371, %sw.bb.369, %if.end.368, %sw.default, %sw.bb.342, %sw.bb.1, %entry
  %0 = load i8*, i8** %p.addr, align 8
  %1 = load i8*, i8** %pend.addr, align 8
  %cmp = icmp ult i8* %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %p.addr, align 8
  store i8* %2, i8** %p1, align 8
  %3 = load i8*, i8** %p.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %p.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv = zext i8 %4 to i32
  switch i32 %conv, label %sw.default.377 [
    i32 1, label %sw.bb
    i32 8, label %sw.bb.1
    i32 2, label %sw.bb.3
    i32 3, label %sw.bb.62
    i32 5, label %sw.bb.66
    i32 4, label %sw.bb.78
    i32 28, label %sw.bb.297
    i32 29, label %sw.bb.297
    i32 33, label %sw.bb.301
    i32 34, label %sw.bb.301
    i32 30, label %sw.bb.342
    i32 31, label %sw.bb.342
    i32 32, label %sw.bb.342
    i32 0, label %sw.bb.342
    i32 9, label %sw.bb.342
    i32 10, label %sw.bb.342
    i32 11, label %sw.bb.342
    i32 12, label %sw.bb.342
    i32 24, label %sw.bb.342
    i32 25, label %sw.bb.342
    i32 22, label %sw.bb.342
    i32 23, label %sw.bb.342
    i32 26, label %sw.bb.342
    i32 27, label %sw.bb.342
    i32 13, label %sw.bb.343
    i32 14, label %sw.bb.354
    i32 15, label %sw.bb.354
    i32 17, label %sw.bb.354
    i32 16, label %sw.bb.354
    i32 18, label %sw.bb.354
    i32 20, label %sw.bb.369
    i32 19, label %sw.bb.371
    i32 21, label %sw.bb.373
    i32 6, label %sw.bb.375
    i32 7, label %sw.bb.375
  ]

sw.bb:                                            ; preds = %while.body
  store i32 1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8
  %incdec.ptr2 = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr2, i8** %p.addr, align 8
  br label %while.cond

sw.bb.3:                                          ; preds = %while.body
  %6 = load i8*, i8** %fastmap.addr, align 8
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %if.then, label %if.end.61

if.then:                                          ; preds = %sw.bb.3
  %7 = load i8*, i8** %p.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx, align 1
  %idxprom = zext i8 %8 to i64
  %9 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx4 = getelementptr inbounds i8, i8* %9, i64 %idxprom
  store i8 1, i8* %arrayidx4, align 1
  %10 = load i32, i32* %multibyte.addr, align 4
  %tobool5 = icmp ne i32 %10, 0
  br i1 %tobool5, label %if.end, label %if.then.6

if.then.6:                                        ; preds = %if.then
  br i1 true, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.6
  %11 = load i8*, i8** %p.addr, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx7, align 1
  %conv8 = zext i8 %12 to i32
  %add = add i32 %conv8, 0
  %cmp9 = icmp ult i32 %add, 128
  br i1 %cmp9, label %cond.true.16, label %cond.false.19

cond.false:                                       ; preds = %if.then.6
  %13 = load i8*, i8** %p.addr, align 8
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx11, align 1
  %conv12 = zext i8 %14 to i64
  %add13 = add i64 %conv12, 0
  %cmp14 = icmp ult i64 %add13, 128
  br i1 %cmp14, label %cond.true.16, label %cond.false.19

cond.true.16:                                     ; preds = %cond.false, %cond.true
  %15 = load i8*, i8** %p.addr, align 8
  %arrayidx17 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %16 to i32
  br label %cond.end

cond.false.19:                                    ; preds = %cond.false, %cond.true
  %17 = load i8*, i8** %p.addr, align 8
  %arrayidx20 = getelementptr inbounds i8, i8* %17, i64 1
  %18 = load i8, i8* %arrayidx20, align 1
  %conv21 = zext i8 %18 to i32
  %add22 = add nsw i32 %conv21, 4194048
  br label %cond.end

cond.end:                                         ; preds = %cond.false.19, %cond.true.16
  %cond = phi i32 [ %conv18, %cond.true.16 ], [ %add22, %cond.false.19 ]
  store i32 %cond, i32* %c, align 4
  %19 = load i32, i32* %c, align 4
  %cmp23 = icmp sle i32 %19, 127
  br i1 %cmp23, label %cond.true.25, label %cond.false.26

cond.true.25:                                     ; preds = %cond.end
  %20 = load i32, i32* %c, align 4
  br label %cond.end.57

cond.false.26:                                    ; preds = %cond.end
  %21 = load i32, i32* %c, align 4
  %cmp27 = icmp sle i32 %21, 2047
  br i1 %cmp27, label %cond.true.29, label %cond.false.30

cond.true.29:                                     ; preds = %cond.false.26
  %22 = load i32, i32* %c, align 4
  %shr = ashr i32 %22, 6
  %or = or i32 192, %shr
  br label %cond.end.55

cond.false.30:                                    ; preds = %cond.false.26
  %23 = load i32, i32* %c, align 4
  %cmp31 = icmp sle i32 %23, 65535
  br i1 %cmp31, label %cond.true.33, label %cond.false.36

cond.true.33:                                     ; preds = %cond.false.30
  %24 = load i32, i32* %c, align 4
  %shr34 = ashr i32 %24, 12
  %or35 = or i32 224, %shr34
  br label %cond.end.53

cond.false.36:                                    ; preds = %cond.false.30
  %25 = load i32, i32* %c, align 4
  %cmp37 = icmp sle i32 %25, 2097151
  br i1 %cmp37, label %cond.true.39, label %cond.false.42

cond.true.39:                                     ; preds = %cond.false.36
  %26 = load i32, i32* %c, align 4
  %shr40 = ashr i32 %26, 18
  %or41 = or i32 240, %shr40
  br label %cond.end.51

cond.false.42:                                    ; preds = %cond.false.36
  %27 = load i32, i32* %c, align 4
  %cmp43 = icmp sle i32 %27, 4194175
  br i1 %cmp43, label %cond.true.45, label %cond.false.46

cond.true.45:                                     ; preds = %cond.false.42
  br label %cond.end.49

cond.false.46:                                    ; preds = %cond.false.42
  %28 = load i32, i32* %c, align 4
  %shr47 = ashr i32 %28, 6
  %and = and i32 %shr47, 1
  %or48 = or i32 192, %and
  br label %cond.end.49

cond.end.49:                                      ; preds = %cond.false.46, %cond.true.45
  %cond50 = phi i32 [ 248, %cond.true.45 ], [ %or48, %cond.false.46 ]
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.end.49, %cond.true.39
  %cond52 = phi i32 [ %or41, %cond.true.39 ], [ %cond50, %cond.end.49 ]
  br label %cond.end.53

cond.end.53:                                      ; preds = %cond.end.51, %cond.true.33
  %cond54 = phi i32 [ %or35, %cond.true.33 ], [ %cond52, %cond.end.51 ]
  br label %cond.end.55

cond.end.55:                                      ; preds = %cond.end.53, %cond.true.29
  %cond56 = phi i32 [ %or, %cond.true.29 ], [ %cond54, %cond.end.53 ]
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.end.55, %cond.true.25
  %cond58 = phi i32 [ %20, %cond.true.25 ], [ %cond56, %cond.end.55 ]
  %idxprom59 = sext i32 %cond58 to i64
  %29 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx60 = getelementptr inbounds i8, i8* %29, i64 %idxprom59
  store i8 1, i8* %arrayidx60, align 1
  br label %if.end

if.end:                                           ; preds = %cond.end.57, %if.then
  br label %if.end.61

if.end.61:                                        ; preds = %if.end, %sw.bb.3
  br label %sw.epilog.378

sw.bb.62:                                         ; preds = %while.body
  %30 = load i8*, i8** %fastmap.addr, align 8
  %tobool63 = icmp ne i8* %30, null
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %sw.bb.62
  br label %sw.epilog.378

if.end.65:                                        ; preds = %sw.bb.62
  store i32 -1, i32* %retval
  br label %return

sw.bb.66:                                         ; preds = %while.body
  %31 = load i8*, i8** %fastmap.addr, align 8
  %tobool67 = icmp ne i8* %31, null
  br i1 %tobool67, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %sw.bb.66
  br label %sw.epilog.378

if.end.69:                                        ; preds = %sw.bb.66
  %32 = load i8*, i8** %p.addr, align 8
  %arrayidx70 = getelementptr inbounds i8, i8* %32, i64 -1
  %arrayidx71 = getelementptr inbounds i8, i8* %arrayidx70, i64 1
  %33 = load i8, i8* %arrayidx71, align 1
  %conv72 = zext i8 %33 to i32
  %and73 = and i32 %conv72, 127
  %mul = mul nsw i32 %and73, 8
  store i32 %mul, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.69
  %34 = load i32, i32* %j, align 4
  %cmp74 = icmp slt i32 %34, 256
  br i1 %cmp74, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %j, align 4
  %idxprom76 = sext i32 %35 to i64
  %36 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx77 = getelementptr inbounds i8, i8* %36, i64 %idxprom76
  store i8 1, i8* %arrayidx77, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %j, align 4
  %inc = add nsw i32 %37, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.bb.78

sw.bb.78:                                         ; preds = %while.body, %for.end
  %38 = load i8*, i8** %fastmap.addr, align 8
  %tobool79 = icmp ne i8* %38, null
  br i1 %tobool79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %sw.bb.78
  br label %sw.epilog.378

if.end.81:                                        ; preds = %sw.bb.78
  %39 = load i8*, i8** %p.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 -1
  %40 = load i8, i8* %add.ptr, align 1
  %conv82 = zext i8 %40 to i32
  %cmp83 = icmp eq i32 %conv82, 5
  %conv84 = zext i1 %cmp83 to i32
  %conv85 = trunc i32 %conv84 to i8
  store i8 %conv85, i8* %not, align 1
  %41 = load i8*, i8** %p.addr, align 8
  %arrayidx86 = getelementptr inbounds i8, i8* %41, i64 -1
  %arrayidx87 = getelementptr inbounds i8, i8* %arrayidx86, i64 1
  %42 = load i8, i8* %arrayidx87, align 1
  %conv88 = zext i8 %42 to i32
  %and89 = and i32 %conv88, 127
  %mul90 = mul nsw i32 %and89, 8
  %sub = sub nsw i32 %mul90, 1
  store i32 %sub, i32* %j, align 4
  %43 = load i8*, i8** %p.addr, align 8
  %incdec.ptr91 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr91, i8** %p.addr, align 8
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc.108, %if.end.81
  %44 = load i32, i32* %j, align 4
  %cmp93 = icmp sge i32 %44, 0
  br i1 %cmp93, label %for.body.95, label %for.end.109

for.body.95:                                      ; preds = %for.cond.92
  %45 = load i32, i32* %j, align 4
  %div = sdiv i32 %45, 8
  %idxprom96 = sext i32 %div to i64
  %46 = load i8*, i8** %p.addr, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %46, i64 %idxprom96
  %47 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %47 to i32
  %48 = load i32, i32* %j, align 4
  %rem = srem i32 %48, 8
  %shl = shl i32 1, %rem
  %and99 = and i32 %conv98, %shl
  %tobool100 = icmp ne i32 %and99, 0
  %lnot = xor i1 %tobool100, true
  %lnot101 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot101 to i32
  %49 = load i8, i8* %not, align 1
  %conv102 = sext i8 %49 to i32
  %xor = xor i32 %lnot.ext, %conv102
  %tobool103 = icmp ne i32 %xor, 0
  br i1 %tobool103, label %if.then.104, label %if.end.107

if.then.104:                                      ; preds = %for.body.95
  %50 = load i32, i32* %j, align 4
  %idxprom105 = sext i32 %50 to i64
  %51 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx106 = getelementptr inbounds i8, i8* %51, i64 %idxprom105
  store i8 1, i8* %arrayidx106, align 1
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.104, %for.body.95
  br label %for.inc.108

for.inc.108:                                      ; preds = %if.end.107
  %52 = load i32, i32* %j, align 4
  %dec = add nsw i32 %52, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.92

for.end.109:                                      ; preds = %for.cond.92
  %53 = load i8, i8* %not, align 1
  %conv110 = sext i8 %53 to i32
  %tobool111 = icmp ne i32 %conv110, 0
  br i1 %tobool111, label %if.then.139, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end.109
  %54 = load i8*, i8** %p.addr, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %54, i64 -2
  %arrayidx113 = getelementptr inbounds i8, i8* %arrayidx112, i64 1
  %55 = load i8, i8* %arrayidx113, align 1
  %conv114 = zext i8 %55 to i32
  %and115 = and i32 %conv114, 128
  %tobool116 = icmp ne i32 %and115, 0
  br i1 %tobool116, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %56 = load i8*, i8** %p.addr, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %56, i64 -2
  %arrayidx118 = getelementptr inbounds i8, i8* %arrayidx117, i64 1
  %57 = load i8, i8* %arrayidx118, align 1
  %conv119 = zext i8 %57 to i32
  %and120 = and i32 %conv119, 127
  %add121 = add nsw i32 2, %and120
  %idxprom122 = sext i32 %add121 to i64
  %58 = load i8*, i8** %p.addr, align 8
  %arrayidx123 = getelementptr inbounds i8, i8* %58, i64 -2
  %arrayidx124 = getelementptr inbounds i8, i8* %arrayidx123, i64 %idxprom122
  %59 = load i8, i8* %arrayidx124, align 1
  %conv125 = zext i8 %59 to i32
  %60 = load i8*, i8** %p.addr, align 8
  %arrayidx126 = getelementptr inbounds i8, i8* %60, i64 -2
  %arrayidx127 = getelementptr inbounds i8, i8* %arrayidx126, i64 1
  %61 = load i8, i8* %arrayidx127, align 1
  %conv128 = zext i8 %61 to i32
  %and129 = and i32 %conv128, 127
  %add130 = add nsw i32 3, %and129
  %idxprom131 = sext i32 %add130 to i64
  %62 = load i8*, i8** %p.addr, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %62, i64 -2
  %arrayidx133 = getelementptr inbounds i8, i8* %arrayidx132, i64 %idxprom131
  %63 = load i8, i8* %arrayidx133, align 1
  %conv134 = zext i8 %63 to i32
  %mul135 = mul nsw i32 %conv134, 256
  %add136 = add nsw i32 %conv125, %mul135
  %cmp137 = icmp ne i32 %add136, 0
  br i1 %cmp137, label %if.then.139, label %if.else

if.then.139:                                      ; preds = %land.lhs.true, %for.end.109
  %64 = load i8, i8* %match_any_multibyte_characters, align 1
  %conv140 = sext i8 %64 to i32
  %cmp141 = icmp eq i32 %conv140, 0
  br i1 %cmp141, label %if.then.143, label %if.end.153

if.then.143:                                      ; preds = %if.then.139
  store i32 192, i32* %j, align 4
  br label %for.cond.144

for.cond.144:                                     ; preds = %for.inc.150, %if.then.143
  %65 = load i32, i32* %j, align 4
  %cmp145 = icmp sle i32 %65, 248
  br i1 %cmp145, label %for.body.147, label %for.end.152

for.body.147:                                     ; preds = %for.cond.144
  %66 = load i32, i32* %j, align 4
  %idxprom148 = sext i32 %66 to i64
  %67 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx149 = getelementptr inbounds i8, i8* %67, i64 %idxprom148
  store i8 1, i8* %arrayidx149, align 1
  br label %for.inc.150

for.inc.150:                                      ; preds = %for.body.147
  %68 = load i32, i32* %j, align 4
  %inc151 = add nsw i32 %68, 1
  store i32 %inc151, i32* %j, align 4
  br label %for.cond.144

for.end.152:                                      ; preds = %for.cond.144
  store i8 1, i8* %match_any_multibyte_characters, align 1
  br label %if.end.153

if.end.153:                                       ; preds = %for.end.152, %if.then.139
  br label %if.end.296

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %69 = load i8, i8* %not, align 1
  %tobool154 = icmp ne i8 %69, 0
  br i1 %tobool154, label %if.end.295, label %land.lhs.true.155

land.lhs.true.155:                                ; preds = %if.else
  %70 = load i8*, i8** %p.addr, align 8
  %arrayidx156 = getelementptr inbounds i8, i8* %70, i64 -2
  %arrayidx157 = getelementptr inbounds i8, i8* %arrayidx156, i64 1
  %71 = load i8, i8* %arrayidx157, align 1
  %conv158 = zext i8 %71 to i32
  %and159 = and i32 %conv158, 128
  %tobool160 = icmp ne i32 %and159, 0
  br i1 %tobool160, label %land.lhs.true.161, label %if.end.295

land.lhs.true.161:                                ; preds = %land.lhs.true.155
  %72 = load i8, i8* %match_any_multibyte_characters, align 1
  %conv162 = sext i8 %72 to i32
  %cmp163 = icmp eq i32 %conv162, 0
  br i1 %cmp163, label %if.then.165, label %if.end.295

if.then.165:                                      ; preds = %land.lhs.true.161
  %73 = load i8*, i8** %p.addr, align 8
  %arrayidx167 = getelementptr inbounds i8, i8* %73, i64 -2
  %arrayidx168 = getelementptr inbounds i8, i8* %arrayidx167, i64 1
  %74 = load i8, i8* %arrayidx168, align 1
  %conv169 = zext i8 %74 to i32
  %and170 = and i32 %conv169, 127
  %add171 = add nsw i32 %and170, 2
  %75 = load i8*, i8** %p.addr, align 8
  %idx.ext = sext i32 %add171 to i64
  %add.ptr172 = getelementptr inbounds i8, i8* %75, i64 %idx.ext
  store i8* %add.ptr172, i8** %p.addr, align 8
  %call = call i32 @extract_number_and_incr(i8** %p.addr)
  store i32 %call, i32* %count, align 4
  br label %for.cond.173

for.cond.173:                                     ; preds = %for.inc.291, %if.then.165
  %76 = load i32, i32* %count, align 4
  %cmp174 = icmp sgt i32 %76, 0
  br i1 %cmp174, label %for.body.176, label %for.end.294

for.body.176:                                     ; preds = %for.cond.173
  br label %do.body

do.body:                                          ; preds = %for.body.176
  %77 = load i8*, i8** %p.addr, align 8
  %arrayidx177 = getelementptr inbounds i8, i8* %77, i64 0
  %78 = load i8, i8* %arrayidx177, align 1
  %conv178 = zext i8 %78 to i32
  %79 = load i8*, i8** %p.addr, align 8
  %arrayidx179 = getelementptr inbounds i8, i8* %79, i64 1
  %80 = load i8, i8* %arrayidx179, align 1
  %conv180 = zext i8 %80 to i32
  %shl181 = shl i32 %conv180, 8
  %or182 = or i32 %conv178, %shl181
  %81 = load i8*, i8** %p.addr, align 8
  %arrayidx183 = getelementptr inbounds i8, i8* %81, i64 2
  %82 = load i8, i8* %arrayidx183, align 1
  %conv184 = zext i8 %82 to i32
  %shl185 = shl i32 %conv184, 16
  %or186 = or i32 %or182, %shl185
  store i32 %or186, i32* %c166, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  %83 = load i32, i32* %c166, align 4
  %cmp187 = icmp sle i32 %83, 127
  br i1 %cmp187, label %cond.true.189, label %cond.false.190

cond.true.189:                                    ; preds = %do.end
  %84 = load i32, i32* %c166, align 4
  br label %cond.end.224

cond.false.190:                                   ; preds = %do.end
  %85 = load i32, i32* %c166, align 4
  %cmp191 = icmp sle i32 %85, 2047
  br i1 %cmp191, label %cond.true.193, label %cond.false.196

cond.true.193:                                    ; preds = %cond.false.190
  %86 = load i32, i32* %c166, align 4
  %shr194 = ashr i32 %86, 6
  %or195 = or i32 192, %shr194
  br label %cond.end.222

cond.false.196:                                   ; preds = %cond.false.190
  %87 = load i32, i32* %c166, align 4
  %cmp197 = icmp sle i32 %87, 65535
  br i1 %cmp197, label %cond.true.199, label %cond.false.202

cond.true.199:                                    ; preds = %cond.false.196
  %88 = load i32, i32* %c166, align 4
  %shr200 = ashr i32 %88, 12
  %or201 = or i32 224, %shr200
  br label %cond.end.220

cond.false.202:                                   ; preds = %cond.false.196
  %89 = load i32, i32* %c166, align 4
  %cmp203 = icmp sle i32 %89, 2097151
  br i1 %cmp203, label %cond.true.205, label %cond.false.208

cond.true.205:                                    ; preds = %cond.false.202
  %90 = load i32, i32* %c166, align 4
  %shr206 = ashr i32 %90, 18
  %or207 = or i32 240, %shr206
  br label %cond.end.218

cond.false.208:                                   ; preds = %cond.false.202
  %91 = load i32, i32* %c166, align 4
  %cmp209 = icmp sle i32 %91, 4194175
  br i1 %cmp209, label %cond.true.211, label %cond.false.212

cond.true.211:                                    ; preds = %cond.false.208
  br label %cond.end.216

cond.false.212:                                   ; preds = %cond.false.208
  %92 = load i32, i32* %c166, align 4
  %shr213 = ashr i32 %92, 6
  %and214 = and i32 %shr213, 1
  %or215 = or i32 192, %and214
  br label %cond.end.216

cond.end.216:                                     ; preds = %cond.false.212, %cond.true.211
  %cond217 = phi i32 [ 248, %cond.true.211 ], [ %or215, %cond.false.212 ]
  br label %cond.end.218

cond.end.218:                                     ; preds = %cond.end.216, %cond.true.205
  %cond219 = phi i32 [ %or207, %cond.true.205 ], [ %cond217, %cond.end.216 ]
  br label %cond.end.220

cond.end.220:                                     ; preds = %cond.end.218, %cond.true.199
  %cond221 = phi i32 [ %or201, %cond.true.199 ], [ %cond219, %cond.end.218 ]
  br label %cond.end.222

cond.end.222:                                     ; preds = %cond.end.220, %cond.true.193
  %cond223 = phi i32 [ %or195, %cond.true.193 ], [ %cond221, %cond.end.220 ]
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.end.222, %cond.true.189
  %cond225 = phi i32 [ %84, %cond.true.189 ], [ %cond223, %cond.end.222 ]
  %conv226 = trunc i32 %cond225 to i8
  store i8 %conv226, i8* %lc1, align 1
  %93 = load i8*, i8** %p.addr, align 8
  %add.ptr227 = getelementptr inbounds i8, i8* %93, i64 3
  store i8* %add.ptr227, i8** %p.addr, align 8
  br label %do.body.228

do.body.228:                                      ; preds = %cond.end.224
  %94 = load i8*, i8** %p.addr, align 8
  %arrayidx229 = getelementptr inbounds i8, i8* %94, i64 0
  %95 = load i8, i8* %arrayidx229, align 1
  %conv230 = zext i8 %95 to i32
  %96 = load i8*, i8** %p.addr, align 8
  %arrayidx231 = getelementptr inbounds i8, i8* %96, i64 1
  %97 = load i8, i8* %arrayidx231, align 1
  %conv232 = zext i8 %97 to i32
  %shl233 = shl i32 %conv232, 8
  %or234 = or i32 %conv230, %shl233
  %98 = load i8*, i8** %p.addr, align 8
  %arrayidx235 = getelementptr inbounds i8, i8* %98, i64 2
  %99 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %99 to i32
  %shl237 = shl i32 %conv236, 16
  %or238 = or i32 %or234, %shl237
  store i32 %or238, i32* %c166, align 4
  br label %do.end.239

do.end.239:                                       ; preds = %do.body.228
  %100 = load i32, i32* %c166, align 4
  %cmp240 = icmp sle i32 %100, 127
  br i1 %cmp240, label %cond.true.242, label %cond.false.243

cond.true.242:                                    ; preds = %do.end.239
  %101 = load i32, i32* %c166, align 4
  br label %cond.end.277

cond.false.243:                                   ; preds = %do.end.239
  %102 = load i32, i32* %c166, align 4
  %cmp244 = icmp sle i32 %102, 2047
  br i1 %cmp244, label %cond.true.246, label %cond.false.249

cond.true.246:                                    ; preds = %cond.false.243
  %103 = load i32, i32* %c166, align 4
  %shr247 = ashr i32 %103, 6
  %or248 = or i32 192, %shr247
  br label %cond.end.275

cond.false.249:                                   ; preds = %cond.false.243
  %104 = load i32, i32* %c166, align 4
  %cmp250 = icmp sle i32 %104, 65535
  br i1 %cmp250, label %cond.true.252, label %cond.false.255

cond.true.252:                                    ; preds = %cond.false.249
  %105 = load i32, i32* %c166, align 4
  %shr253 = ashr i32 %105, 12
  %or254 = or i32 224, %shr253
  br label %cond.end.273

cond.false.255:                                   ; preds = %cond.false.249
  %106 = load i32, i32* %c166, align 4
  %cmp256 = icmp sle i32 %106, 2097151
  br i1 %cmp256, label %cond.true.258, label %cond.false.261

cond.true.258:                                    ; preds = %cond.false.255
  %107 = load i32, i32* %c166, align 4
  %shr259 = ashr i32 %107, 18
  %or260 = or i32 240, %shr259
  br label %cond.end.271

cond.false.261:                                   ; preds = %cond.false.255
  %108 = load i32, i32* %c166, align 4
  %cmp262 = icmp sle i32 %108, 4194175
  br i1 %cmp262, label %cond.true.264, label %cond.false.265

cond.true.264:                                    ; preds = %cond.false.261
  br label %cond.end.269

cond.false.265:                                   ; preds = %cond.false.261
  %109 = load i32, i32* %c166, align 4
  %shr266 = ashr i32 %109, 6
  %and267 = and i32 %shr266, 1
  %or268 = or i32 192, %and267
  br label %cond.end.269

cond.end.269:                                     ; preds = %cond.false.265, %cond.true.264
  %cond270 = phi i32 [ 248, %cond.true.264 ], [ %or268, %cond.false.265 ]
  br label %cond.end.271

cond.end.271:                                     ; preds = %cond.end.269, %cond.true.258
  %cond272 = phi i32 [ %or260, %cond.true.258 ], [ %cond270, %cond.end.269 ]
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.end.271, %cond.true.252
  %cond274 = phi i32 [ %or254, %cond.true.252 ], [ %cond272, %cond.end.271 ]
  br label %cond.end.275

cond.end.275:                                     ; preds = %cond.end.273, %cond.true.246
  %cond276 = phi i32 [ %or248, %cond.true.246 ], [ %cond274, %cond.end.273 ]
  br label %cond.end.277

cond.end.277:                                     ; preds = %cond.end.275, %cond.true.242
  %cond278 = phi i32 [ %101, %cond.true.242 ], [ %cond276, %cond.end.275 ]
  %conv279 = trunc i32 %cond278 to i8
  store i8 %conv279, i8* %lc2, align 1
  %110 = load i8, i8* %lc1, align 1
  %conv280 = zext i8 %110 to i32
  store i32 %conv280, i32* %j, align 4
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.288, %cond.end.277
  %111 = load i32, i32* %j, align 4
  %112 = load i8, i8* %lc2, align 1
  %conv282 = zext i8 %112 to i32
  %cmp283 = icmp sle i32 %111, %conv282
  br i1 %cmp283, label %for.body.285, label %for.end.290

for.body.285:                                     ; preds = %for.cond.281
  %113 = load i32, i32* %j, align 4
  %idxprom286 = sext i32 %113 to i64
  %114 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx287 = getelementptr inbounds i8, i8* %114, i64 %idxprom286
  store i8 1, i8* %arrayidx287, align 1
  br label %for.inc.288

for.inc.288:                                      ; preds = %for.body.285
  %115 = load i32, i32* %j, align 4
  %inc289 = add nsw i32 %115, 1
  store i32 %inc289, i32* %j, align 4
  br label %for.cond.281

for.end.290:                                      ; preds = %for.cond.281
  br label %for.inc.291

for.inc.291:                                      ; preds = %for.end.290
  %116 = load i32, i32* %count, align 4
  %dec292 = add nsw i32 %116, -1
  store i32 %dec292, i32* %count, align 4
  %117 = load i8*, i8** %p.addr, align 8
  %add.ptr293 = getelementptr inbounds i8, i8* %117, i64 3
  store i8* %add.ptr293, i8** %p.addr, align 8
  br label %for.cond.173

for.end.294:                                      ; preds = %for.cond.173
  br label %if.end.295

if.end.295:                                       ; preds = %for.end.294, %land.lhs.true.161, %land.lhs.true.155, %if.else
  br label %if.end.296

if.end.296:                                       ; preds = %if.end.295, %if.end.153
  br label %sw.epilog.378

sw.bb.297:                                        ; preds = %while.body, %while.body
  %118 = load i8*, i8** %fastmap.addr, align 8
  %tobool298 = icmp ne i8* %118, null
  br i1 %tobool298, label %if.end.300, label %if.then.299

if.then.299:                                      ; preds = %sw.bb.297
  br label %sw.epilog.378

if.end.300:                                       ; preds = %sw.bb.297
  store i32 -1, i32* %retval
  br label %return

sw.bb.301:                                        ; preds = %while.body, %while.body
  %119 = load i8*, i8** %fastmap.addr, align 8
  %tobool302 = icmp ne i8* %119, null
  br i1 %tobool302, label %if.end.304, label %if.then.303

if.then.303:                                      ; preds = %sw.bb.301
  br label %sw.epilog.378

if.end.304:                                       ; preds = %sw.bb.301
  %120 = load i8*, i8** %p.addr, align 8
  %arrayidx305 = getelementptr inbounds i8, i8* %120, i64 -1
  %121 = load i8, i8* %arrayidx305, align 1
  %conv306 = zext i8 %121 to i32
  %cmp307 = icmp eq i32 %conv306, 34
  %conv308 = zext i1 %cmp307 to i32
  %conv309 = trunc i32 %conv308 to i8
  store i8 %conv309, i8* %not, align 1
  %122 = load i8*, i8** %p.addr, align 8
  %incdec.ptr310 = getelementptr inbounds i8, i8* %122, i32 1
  store i8* %incdec.ptr310, i8** %p.addr, align 8
  %123 = load i8, i8* %122, align 1
  %conv311 = zext i8 %123 to i32
  store i32 %conv311, i32* %k, align 4
  store i32 256, i32* %j, align 4
  br label %for.cond.312

for.cond.312:                                     ; preds = %for.inc.325, %if.end.304
  %124 = load i32, i32* %j, align 4
  %cmp313 = icmp sge i32 %124, 0
  br i1 %cmp313, label %for.body.315, label %for.end.327

for.body.315:                                     ; preds = %for.cond.312
  %125 = load i32, i32* %j, align 4
  %126 = load i32, i32* %k, align 4
  %call316 = call zeroext i1 @CHAR_HAS_CATEGORY(i32 %125, i32 %126)
  %conv317 = zext i1 %call316 to i32
  %127 = load i8, i8* %not, align 1
  %conv318 = sext i8 %127 to i32
  %xor319 = xor i32 %conv317, %conv318
  %tobool320 = icmp ne i32 %xor319, 0
  br i1 %tobool320, label %if.then.321, label %if.end.324

if.then.321:                                      ; preds = %for.body.315
  %128 = load i32, i32* %j, align 4
  %idxprom322 = sext i32 %128 to i64
  %129 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx323 = getelementptr inbounds i8, i8* %129, i64 %idxprom322
  store i8 1, i8* %arrayidx323, align 1
  br label %if.end.324

if.end.324:                                       ; preds = %if.then.321, %for.body.315
  br label %for.inc.325

for.inc.325:                                      ; preds = %if.end.324
  %130 = load i32, i32* %j, align 4
  %dec326 = add nsw i32 %130, -1
  store i32 %dec326, i32* %j, align 4
  br label %for.cond.312

for.end.327:                                      ; preds = %for.cond.312
  %131 = load i8, i8* %match_any_multibyte_characters, align 1
  %conv328 = sext i8 %131 to i32
  %cmp329 = icmp eq i32 %conv328, 0
  br i1 %cmp329, label %if.then.331, label %if.end.341

if.then.331:                                      ; preds = %for.end.327
  store i32 192, i32* %j, align 4
  br label %for.cond.332

for.cond.332:                                     ; preds = %for.inc.338, %if.then.331
  %132 = load i32, i32* %j, align 4
  %cmp333 = icmp sle i32 %132, 248
  br i1 %cmp333, label %for.body.335, label %for.end.340

for.body.335:                                     ; preds = %for.cond.332
  %133 = load i32, i32* %j, align 4
  %idxprom336 = sext i32 %133 to i64
  %134 = load i8*, i8** %fastmap.addr, align 8
  %arrayidx337 = getelementptr inbounds i8, i8* %134, i64 %idxprom336
  store i8 1, i8* %arrayidx337, align 1
  br label %for.inc.338

for.inc.338:                                      ; preds = %for.body.335
  %135 = load i32, i32* %j, align 4
  %inc339 = add nsw i32 %135, 1
  store i32 %inc339, i32* %j, align 4
  br label %for.cond.332

for.end.340:                                      ; preds = %for.cond.332
  store i8 1, i8* %match_any_multibyte_characters, align 1
  br label %if.end.341

if.end.341:                                       ; preds = %for.end.340, %for.end.327
  br label %sw.epilog.378

sw.bb.342:                                        ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  br label %while.cond

sw.bb.343:                                        ; preds = %while.body
  %call344 = call i32 @extract_number_and_incr(i8** %p.addr)
  store i32 %call344, i32* %j, align 4
  %136 = load i32, i32* %j, align 4
  %cmp345 = icmp slt i32 %136, 0
  br i1 %cmp345, label %if.then.347, label %if.end.348

if.then.347:                                      ; preds = %sw.bb.343
  br label %sw.epilog.378

if.end.348:                                       ; preds = %sw.bb.343
  %137 = load i32, i32* %j, align 4
  %138 = load i8*, i8** %p.addr, align 8
  %idx.ext349 = sext i32 %137 to i64
  %add.ptr350 = getelementptr inbounds i8, i8* %138, i64 %idx.ext349
  store i8* %add.ptr350, i8** %p.addr, align 8
  %139 = load i8*, i8** %p.addr, align 8
  %140 = load i8, i8* %139, align 1
  %conv351 = zext i8 %140 to i32
  switch i32 %conv351, label %sw.default [
    i32 14, label %sw.bb.352
    i32 15, label %sw.bb.352
    i32 16, label %sw.bb.352
    i32 17, label %sw.bb.352
    i32 18, label %sw.bb.352
  ]

sw.bb.352:                                        ; preds = %if.end.348, %if.end.348, %if.end.348, %if.end.348, %if.end.348
  %141 = load i8*, i8** %p.addr, align 8
  %incdec.ptr353 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr353, i8** %p.addr, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.348
  br label %while.cond

sw.epilog:                                        ; preds = %sw.bb.352
  br label %sw.bb.354

sw.bb.354:                                        ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %sw.epilog
  %call355 = call i32 @extract_number_and_incr(i8** %p.addr)
  store i32 %call355, i32* %j, align 4
  %142 = load i8*, i8** %p.addr, align 8
  %143 = load i32, i32* %j, align 4
  %idx.ext356 = sext i32 %143 to i64
  %add.ptr357 = getelementptr inbounds i8, i8* %142, i64 %idx.ext356
  %144 = load i8*, i8** %p1, align 8
  %cmp358 = icmp ule i8* %add.ptr357, %144
  br i1 %cmp358, label %if.then.360, label %if.else.361

if.then.360:                                      ; preds = %sw.bb.354
  br label %if.end.368

if.else.361:                                      ; preds = %sw.bb.354
  %145 = load i8*, i8** %p.addr, align 8
  %146 = load i8*, i8** %pend.addr, align 8
  %147 = load i8*, i8** %fastmap.addr, align 8
  %148 = load i32, i32* %multibyte.addr, align 4
  %call362 = call i32 @analyze_first(i8* %145, i8* %146, i8* %147, i32 %148)
  store i32 %call362, i32* %r, align 4
  %149 = load i32, i32* %r, align 4
  %tobool363 = icmp ne i32 %149, 0
  br i1 %tobool363, label %if.then.364, label %if.end.365

if.then.364:                                      ; preds = %if.else.361
  %150 = load i32, i32* %r, align 4
  store i32 %150, i32* %retval
  br label %return

if.end.365:                                       ; preds = %if.else.361
  %151 = load i32, i32* %j, align 4
  %152 = load i8*, i8** %p.addr, align 8
  %idx.ext366 = sext i32 %151 to i64
  %add.ptr367 = getelementptr inbounds i8, i8* %152, i64 %idx.ext366
  store i8* %add.ptr367, i8** %p.addr, align 8
  br label %if.end.368

if.end.368:                                       ; preds = %if.end.365, %if.then.360
  br label %while.cond

sw.bb.369:                                        ; preds = %while.body
  %153 = load i8*, i8** %p.addr, align 8
  %add.ptr370 = getelementptr inbounds i8, i8* %153, i64 4
  store i8* %add.ptr370, i8** %p.addr, align 8
  br label %while.cond

sw.bb.371:                                        ; preds = %while.body
  %154 = load i8*, i8** %p.addr, align 8
  %add.ptr372 = getelementptr inbounds i8, i8* %154, i64 4
  store i8* %add.ptr372, i8** %p.addr, align 8
  br label %while.cond

sw.bb.373:                                        ; preds = %while.body
  %155 = load i8*, i8** %p.addr, align 8
  %add.ptr374 = getelementptr inbounds i8, i8* %155, i64 4
  store i8* %add.ptr374, i8** %p.addr, align 8
  br label %while.cond

sw.bb.375:                                        ; preds = %while.body, %while.body
  %156 = load i8*, i8** %p.addr, align 8
  %add.ptr376 = getelementptr inbounds i8, i8* %156, i64 1
  store i8* %add.ptr376, i8** %p.addr, align 8
  br label %while.cond

sw.default.377:                                   ; preds = %while.body
  call void @abort() #6
  unreachable

sw.epilog.378:                                    ; preds = %if.then.347, %if.end.341, %if.then.303, %if.then.299, %if.end.296, %if.then.80, %if.then.68, %if.then.64, %if.end.61
  store i32 0, i32* %retval
  br label %return

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %sw.epilog.378, %if.then.364, %if.end.300, %if.end.65, %sw.bb
  %157 = load i32, i32* %retval
  ret i32 %157
}

; Function Attrs: nounwind uwtable
define void @re_set_registers(%struct.re_pattern_buffer* %bufp, %struct.re_registers* %regs, i32 %num_regs, i64* %starts, i64* %ends) #0 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  %num_regs.addr = alloca i32, align 4
  %starts.addr = alloca i64*, align 8
  %ends.addr = alloca i64*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  store i32 %num_regs, i32* %num_regs.addr, align 4
  store i64* %starts, i64** %starts.addr, align 8
  store i64* %ends, i64** %ends.addr, align 8
  %0 = load i32, i32* %num_regs.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 7
  %bf.load = load i16, i16* %regs_allocated, align 8
  %bf.clear = and i16 %bf.load, -7
  %bf.set = or i16 %bf.clear, 2
  store i16 %bf.set, i16* %regs_allocated, align 8
  %2 = load i32, i32* %num_regs.addr, align 4
  %3 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs1 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %3, i32 0, i32 0
  store i32 %2, i32* %num_regs1, align 4
  %4 = load i64*, i64** %starts.addr, align 8
  %5 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start = getelementptr inbounds %struct.re_registers, %struct.re_registers* %5, i32 0, i32 1
  store i64* %4, i64** %start, align 8
  %6 = load i64*, i64** %ends.addr, align 8
  %7 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end = getelementptr inbounds %struct.re_registers, %struct.re_registers* %7, i32 0, i32 2
  store i64* %6, i64** %end, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 7
  %bf.load3 = load i16, i16* %regs_allocated2, align 8
  %bf.clear4 = and i16 %bf.load3, -7
  store i16 %bf.clear4, i16* %regs_allocated2, align 8
  %9 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs5 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %9, i32 0, i32 0
  store i32 0, i32* %num_regs5, align 4
  %10 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end6 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %10, i32 0, i32 2
  store i64* null, i64** %end6, align 8
  %11 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start7 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %11, i32 0, i32 1
  store i64* null, i64** %start7, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @re_search(%struct.re_pattern_buffer* %bufp, i8* %string, i64 %size, i64 %startpos, i64 %range, %struct.re_registers* %regs) #0 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %startpos.addr = alloca i64, align 8
  %range.addr = alloca i64, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store i8* %string, i8** %string.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i64 %startpos, i64* %startpos.addr, align 8
  store i64 %range, i64* %range.addr, align 8
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %1 = load i8*, i8** %string.addr, align 8
  %2 = load i64, i64* %size.addr, align 8
  %3 = load i64, i64* %startpos.addr, align 8
  %4 = load i64, i64* %range.addr, align 8
  %5 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %6 = load i64, i64* %size.addr, align 8
  %call = call i64 @re_search_2(%struct.re_pattern_buffer* %0, i8* null, i64 0, i8* %1, i64 %2, i64 %3, i64 %4, %struct.re_registers* %5, i64 %6)
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define i64 @re_search_2(%struct.re_pattern_buffer* %bufp, i8* %str1, i64 %size1, i8* %str2, i64 %size2, i64 %startpos, i64 %range, %struct.re_registers* %regs, i64 %stop) #0 {
entry:
  %retval = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %str1.addr = alloca i8*, align 8
  %size1.addr = alloca i64, align 8
  %str2.addr = alloca i8*, align 8
  %size2.addr = alloca i64, align 8
  %startpos.addr = alloca i64, align 8
  %range.addr = alloca i64, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i64, align 8
  %val = alloca i64, align 8
  %string1 = alloca i8*, align 8
  %string2 = alloca i8*, align 8
  %fastmap = alloca i8*, align 8
  %translate = alloca i64, align 8
  %total_size = alloca i64, align 8
  %endpos = alloca i64, align 8
  %anchored_start = alloca i8, align 1
  %multibyte = alloca i8, align 1
  %charpos = alloca i64, align 8
  %d = alloca i8*, align 8
  %buf_ch = alloca i32, align 4
  %irange = alloca i64, align 8
  %lim = alloca i64, align 8
  %buf_charlen = alloca i32, align 4
  %ch = alloca i32, align 4
  %translated = alloca i32, align 4
  %buf_charlen290 = alloca i32, align 4
  %ch518 = alloca i32, align 4
  %translated519 = alloca i32, align 4
  %p = alloca i8*, align 8
  %len = alloca i32, align 4
  %p667 = alloca i8*, align 8
  %p0 = alloca i8*, align 8
  %phead = alloca i8*, align 8
  %chp = alloca i8*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store i8* %str1, i8** %str1.addr, align 8
  store i64 %size1, i64* %size1.addr, align 8
  store i8* %str2, i8** %str2.addr, align 8
  store i64 %size2, i64* %size2.addr, align 8
  store i64 %startpos, i64* %startpos.addr, align 8
  store i64 %range, i64* %range.addr, align 8
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  store i64 %stop, i64* %stop.addr, align 8
  %0 = load i8*, i8** %str1.addr, align 8
  store i8* %0, i8** %string1, align 8
  %1 = load i8*, i8** %str2.addr, align 8
  store i8* %1, i8** %string2, align 8
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %fastmap1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 4
  %3 = load i8*, i8** %fastmap1, align 8
  store i8* %3, i8** %fastmap, align 8
  %4 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %translate2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %4, i32 0, i32 5
  %5 = load i64, i64* %translate2, align 8
  store i64 %5, i64* %translate, align 8
  %6 = load i64, i64* %size1.addr, align 8
  %7 = load i64, i64* %size2.addr, align 8
  %add = add i64 %6, %7
  store i64 %add, i64* %total_size, align 8
  %8 = load i64, i64* %startpos.addr, align 8
  %9 = load i64, i64* %range.addr, align 8
  %add3 = add nsw i64 %8, %9
  store i64 %add3, i64* %endpos, align 8
  %10 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %target_multibyte = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %10, i32 0, i32 7
  %bf.load = load i16, i16* %target_multibyte, align 8
  %bf.lshr = lshr i16 %bf.load, 9
  %bf.clear = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear to i32
  %conv = trunc i32 %bf.cast to i8
  store i8 %conv, i8* %multibyte, align 1
  %11 = load i64, i64* %startpos.addr, align 8
  %cmp = icmp slt i64 %11, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %12 = load i64, i64* %startpos.addr, align 8
  %13 = load i64, i64* %total_size, align 8
  %cmp5 = icmp ugt i64 %12, %13
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %14 = load i64, i64* %endpos, align 8
  %cmp7 = icmp slt i64 %14, 0
  br i1 %cmp7, label %if.then.9, label %if.else

if.then.9:                                        ; preds = %if.end
  %15 = load i64, i64* %startpos.addr, align 8
  %sub = sub nsw i64 0, %15
  store i64 %sub, i64* %range.addr, align 8
  br label %if.end.15

if.else:                                          ; preds = %if.end
  %16 = load i64, i64* %endpos, align 8
  %17 = load i64, i64* %total_size, align 8
  %cmp10 = icmp ugt i64 %16, %17
  br i1 %cmp10, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %if.else
  %18 = load i64, i64* %total_size, align 8
  %19 = load i64, i64* %startpos.addr, align 8
  %sub13 = sub i64 %18, %19
  store i64 %sub13, i64* %range.addr, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.12, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.9
  %20 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %20, i32 0, i32 2
  %21 = load i64, i64* %used, align 8
  %cmp16 = icmp ugt i64 %21, 0
  br i1 %cmp16, label %land.lhs.true, label %if.end.30

land.lhs.true:                                    ; preds = %if.end.15
  %22 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %22, i32 0, i32 0
  %23 = load i8*, i8** %buffer, align 8
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 0
  %24 = load i8, i8* %arrayidx, align 1
  %conv18 = zext i8 %24 to i32
  %cmp19 = icmp eq i32 %conv18, 11
  br i1 %cmp19, label %land.lhs.true.21, label %if.end.30

land.lhs.true.21:                                 ; preds = %land.lhs.true
  %25 = load i64, i64* %range.addr, align 8
  %cmp22 = icmp sgt i64 %25, 0
  br i1 %cmp22, label %if.then.24, label %if.end.30

if.then.24:                                       ; preds = %land.lhs.true.21
  %26 = load i64, i64* %startpos.addr, align 8
  %cmp25 = icmp sgt i64 %26, 0
  br i1 %cmp25, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %if.then.24
  store i64 -1, i64* %retval
  br label %return

if.else.28:                                       ; preds = %if.then.24
  store i64 0, i64* %range.addr, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.28
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %land.lhs.true.21, %land.lhs.true, %if.end.15
  %27 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used31 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %27, i32 0, i32 2
  %28 = load i64, i64* %used31, align 8
  %cmp32 = icmp ugt i64 %28, 0
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.51

land.lhs.true.34:                                 ; preds = %if.end.30
  %29 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer35 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %29, i32 0, i32 0
  %30 = load i8*, i8** %buffer35, align 8
  %arrayidx36 = getelementptr inbounds i8, i8* %30, i64 0
  %31 = load i8, i8* %arrayidx36, align 1
  %conv37 = zext i8 %31 to i32
  %cmp38 = icmp eq i32 %conv37, 31
  br i1 %cmp38, label %land.lhs.true.40, label %if.end.51

land.lhs.true.40:                                 ; preds = %land.lhs.true.34
  %32 = load i64, i64* %range.addr, align 8
  %cmp41 = icmp sgt i64 %32, 0
  br i1 %cmp41, label %if.then.43, label %if.end.51

if.then.43:                                       ; preds = %land.lhs.true.40
  %33 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %pt_byte = getelementptr inbounds %struct.buffer, %struct.buffer* %33, i32 0, i32 76
  %34 = load i64, i64* %pt_byte, align 8
  %add44 = add nsw i64 %34, 0
  %35 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %begv_byte = getelementptr inbounds %struct.buffer, %struct.buffer* %35, i32 0, i32 78
  %36 = load i64, i64* %begv_byte, align 8
  %sub45 = sub nsw i64 %add44, %36
  %37 = load i64, i64* %startpos.addr, align 8
  %sub46 = sub nsw i64 %sub45, %37
  store i64 %sub46, i64* %range.addr, align 8
  %38 = load i64, i64* %range.addr, align 8
  %cmp47 = icmp slt i64 %38, 0
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.then.43
  store i64 -1, i64* %retval
  br label %return

if.end.50:                                        ; preds = %if.then.43
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %land.lhs.true.40, %land.lhs.true.34, %if.end.30
  %39 = load i8*, i8** %fastmap, align 8
  %tobool = icmp ne i8* %39, null
  br i1 %tobool, label %land.lhs.true.52, label %if.end.59

land.lhs.true.52:                                 ; preds = %if.end.51
  %40 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %40, i32 0, i32 7
  %bf.load53 = load i16, i16* %fastmap_accurate, align 8
  %bf.lshr54 = lshr i16 %bf.load53, 3
  %bf.clear55 = and i16 %bf.lshr54, 1
  %bf.cast56 = zext i16 %bf.clear55 to i32
  %tobool57 = icmp ne i32 %bf.cast56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %land.lhs.true.52
  %41 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %call = call i32 @re_compile_fastmap(%struct.re_pattern_buffer* %41)
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %land.lhs.true.52, %if.end.51
  %42 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer60 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %42, i32 0, i32 0
  %43 = load i8*, i8** %buffer60, align 8
  %arrayidx61 = getelementptr inbounds i8, i8* %43, i64 0
  %44 = load i8, i8* %arrayidx61, align 1
  %conv62 = zext i8 %44 to i32
  %cmp63 = icmp eq i32 %conv62, 9
  %conv64 = zext i1 %cmp63 to i32
  %conv65 = trunc i32 %conv64 to i8
  store i8 %conv65, i8* %anchored_start, align 1
  %45 = load i64, i64* @re_match_object, align 8
  store i64 %45, i64* getelementptr inbounds (%struct.gl_state_s, %struct.gl_state_s* @gl_state, i32 0, i32 0), align 8
  %46 = load i64, i64* %startpos.addr, align 8
  %47 = load i64, i64* @re_match_object, align 8
  %call66 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp67 = icmp eq i64 %47, %call66
  br i1 %cmp67, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.59
  %48 = load i64, i64* @re_match_object, align 8
  %call69 = call zeroext i1 @BUFFERP(i64 %48)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.59
  %49 = phi i1 [ true, %if.end.59 ], [ %call69, %lor.rhs ]
  %lor.ext = zext i1 %49 to i32
  %conv71 = sext i32 %lor.ext to i64
  %add72 = add nsw i64 %46, %conv71
  %call73 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %add72)
  store i64 %call73, i64* %charpos, align 8
  %50 = load i64, i64* @re_match_object, align 8
  %51 = load i64, i64* %charpos, align 8
  call void @SETUP_SYNTAX_TABLE_FOR_OBJECT(i64 %50, i64 %51, i64 1)
  br label %for.cond

for.cond:                                         ; preds = %if.end.751, %lor.end
  %52 = load i8, i8* %anchored_start, align 1
  %conv74 = sext i8 %52 to i32
  %tobool75 = icmp ne i32 %conv74, 0
  br i1 %tobool75, label %land.lhs.true.76, label %if.end.93

land.lhs.true.76:                                 ; preds = %for.cond
  %53 = load i64, i64* %startpos.addr, align 8
  %cmp77 = icmp sgt i64 %53, 0
  br i1 %cmp77, label %if.then.79, label %if.end.93

if.then.79:                                       ; preds = %land.lhs.true.76
  %54 = load i64, i64* %startpos.addr, align 8
  %55 = load i64, i64* %size1.addr, align 8
  %cmp80 = icmp ule i64 %54, %55
  br i1 %cmp80, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.79
  %56 = load i64, i64* %startpos.addr, align 8
  %sub82 = sub nsw i64 %56, 1
  %57 = load i8*, i8** %string1, align 8
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i64 %sub82
  %58 = load i8, i8* %arrayidx83, align 1
  %conv84 = zext i8 %58 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then.79
  %59 = load i64, i64* %startpos.addr, align 8
  %60 = load i64, i64* %size1.addr, align 8
  %sub85 = sub i64 %59, %60
  %sub86 = sub i64 %sub85, 1
  %61 = load i8*, i8** %string2, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %61, i64 %sub86
  %62 = load i8, i8* %arrayidx87, align 1
  %conv88 = zext i8 %62 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv84, %cond.true ], [ %conv88, %cond.false ]
  %cmp89 = icmp eq i32 %cond, 10
  br i1 %cmp89, label %if.end.92, label %if.then.91

if.then.91:                                       ; preds = %cond.end
  br label %advance

if.end.92:                                        ; preds = %cond.end
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %land.lhs.true.76, %for.cond
  %63 = load i8*, i8** %fastmap, align 8
  %tobool94 = icmp ne i8* %63, null
  br i1 %tobool94, label %land.lhs.true.95, label %if.end.583

land.lhs.true.95:                                 ; preds = %if.end.93
  %64 = load i64, i64* %startpos.addr, align 8
  %65 = load i64, i64* %total_size, align 8
  %cmp96 = icmp ult i64 %64, %65
  br i1 %cmp96, label %land.lhs.true.98, label %if.end.583

land.lhs.true.98:                                 ; preds = %land.lhs.true.95
  %66 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %can_be_null = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %66, i32 0, i32 7
  %bf.load99 = load i16, i16* %can_be_null, align 8
  %bf.clear100 = and i16 %bf.load99, 1
  %bf.cast101 = zext i16 %bf.clear100 to i32
  %tobool102 = icmp ne i32 %bf.cast101, 0
  br i1 %tobool102, label %if.end.583, label %if.then.103

if.then.103:                                      ; preds = %land.lhs.true.98
  %67 = load i64, i64* %startpos.addr, align 8
  %68 = load i64, i64* %size1.addr, align 8
  %cmp104 = icmp uge i64 %67, %68
  br i1 %cmp104, label %cond.true.106, label %cond.false.107

cond.true.106:                                    ; preds = %if.then.103
  %69 = load i8*, i8** %string2, align 8
  %70 = load i64, i64* %size1.addr, align 8
  %idx.neg = sub i64 0, %70
  %add.ptr = getelementptr inbounds i8, i8* %69, i64 %idx.neg
  br label %cond.end.108

cond.false.107:                                   ; preds = %if.then.103
  %71 = load i8*, i8** %string1, align 8
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.107, %cond.true.106
  %cond109 = phi i8* [ %add.ptr, %cond.true.106 ], [ %71, %cond.false.107 ]
  %72 = load i64, i64* %startpos.addr, align 8
  %add.ptr110 = getelementptr inbounds i8, i8* %cond109, i64 %72
  store i8* %add.ptr110, i8** %d, align 8
  %73 = load i64, i64* %range.addr, align 8
  %cmp111 = icmp sgt i64 %73, 0
  br i1 %cmp111, label %if.then.113, label %if.else.409

if.then.113:                                      ; preds = %cond.end.108
  %74 = load i64, i64* %range.addr, align 8
  store i64 %74, i64* %irange, align 8
  store i64 0, i64* %lim, align 8
  %75 = load i64, i64* %startpos.addr, align 8
  %76 = load i64, i64* %size1.addr, align 8
  %cmp114 = icmp ult i64 %75, %76
  br i1 %cmp114, label %land.lhs.true.116, label %if.end.123

land.lhs.true.116:                                ; preds = %if.then.113
  %77 = load i64, i64* %startpos.addr, align 8
  %78 = load i64, i64* %range.addr, align 8
  %add117 = add nsw i64 %77, %78
  %79 = load i64, i64* %size1.addr, align 8
  %cmp118 = icmp uge i64 %add117, %79
  br i1 %cmp118, label %if.then.120, label %if.end.123

if.then.120:                                      ; preds = %land.lhs.true.116
  %80 = load i64, i64* %range.addr, align 8
  %81 = load i64, i64* %size1.addr, align 8
  %82 = load i64, i64* %startpos.addr, align 8
  %sub121 = sub i64 %81, %82
  %sub122 = sub i64 %80, %sub121
  store i64 %sub122, i64* %lim, align 8
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.120, %land.lhs.true.116, %if.then.113
  %83 = load i64, i64* %translate, align 8
  %cmp124 = icmp eq i64 %83, 2
  br i1 %cmp124, label %if.else.283, label %if.then.126

if.then.126:                                      ; preds = %if.end.123
  %84 = load i8, i8* %multibyte, align 1
  %tobool127 = icmp ne i8 %84, 0
  br i1 %tobool127, label %if.then.128, label %if.else.228

if.then.128:                                      ; preds = %if.then.126
  br label %while.cond

while.cond:                                       ; preds = %if.end.224, %if.then.128
  %85 = load i64, i64* %range.addr, align 8
  %86 = load i64, i64* %lim, align 8
  %cmp129 = icmp sgt i64 %85, %86
  br i1 %cmp129, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %87 = load i8*, i8** %d, align 8
  %arrayidx131 = getelementptr inbounds i8, i8* %87, i64 0
  %88 = load i8, i8* %arrayidx131, align 1
  %conv132 = zext i8 %88 to i32
  %and = and i32 %conv132, 128
  %tobool133 = icmp ne i32 %and, 0
  br i1 %tobool133, label %cond.false.137, label %cond.true.134

cond.true.134:                                    ; preds = %while.body
  store i32 1, i32* %buf_charlen, align 4
  %89 = load i8*, i8** %d, align 8
  %arrayidx135 = getelementptr inbounds i8, i8* %89, i64 0
  %90 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %90 to i32
  br label %cond.end.180

cond.false.137:                                   ; preds = %while.body
  %91 = load i8*, i8** %d, align 8
  %arrayidx138 = getelementptr inbounds i8, i8* %91, i64 0
  %92 = load i8, i8* %arrayidx138, align 1
  %conv139 = zext i8 %92 to i32
  %and140 = and i32 %conv139, 32
  %tobool141 = icmp ne i32 %and140, 0
  br i1 %tobool141, label %cond.false.155, label %cond.true.142

cond.true.142:                                    ; preds = %cond.false.137
  store i32 2, i32* %buf_charlen, align 4
  %93 = load i8*, i8** %d, align 8
  %arrayidx143 = getelementptr inbounds i8, i8* %93, i64 0
  %94 = load i8, i8* %arrayidx143, align 1
  %conv144 = zext i8 %94 to i32
  %and145 = and i32 %conv144, 31
  %shl = shl i32 %and145, 6
  %95 = load i8*, i8** %d, align 8
  %arrayidx146 = getelementptr inbounds i8, i8* %95, i64 1
  %96 = load i8, i8* %arrayidx146, align 1
  %conv147 = zext i8 %96 to i32
  %and148 = and i32 %conv147, 63
  %or = or i32 %shl, %and148
  %97 = load i8*, i8** %d, align 8
  %arrayidx149 = getelementptr inbounds i8, i8* %97, i64 0
  %98 = load i8, i8* %arrayidx149, align 1
  %conv150 = zext i8 %98 to i32
  %cmp151 = icmp slt i32 %conv150, 194
  %cond153 = select i1 %cmp151, i32 4194176, i32 0
  %add154 = add nsw i32 %or, %cond153
  br label %cond.end.178

cond.false.155:                                   ; preds = %cond.false.137
  %99 = load i8*, i8** %d, align 8
  %arrayidx156 = getelementptr inbounds i8, i8* %99, i64 0
  %100 = load i8, i8* %arrayidx156, align 1
  %conv157 = zext i8 %100 to i32
  %and158 = and i32 %conv157, 16
  %tobool159 = icmp ne i32 %and158, 0
  br i1 %tobool159, label %cond.false.174, label %cond.true.160

cond.true.160:                                    ; preds = %cond.false.155
  store i32 3, i32* %buf_charlen, align 4
  %101 = load i8*, i8** %d, align 8
  %arrayidx161 = getelementptr inbounds i8, i8* %101, i64 0
  %102 = load i8, i8* %arrayidx161, align 1
  %conv162 = zext i8 %102 to i32
  %and163 = and i32 %conv162, 15
  %shl164 = shl i32 %and163, 12
  %103 = load i8*, i8** %d, align 8
  %arrayidx165 = getelementptr inbounds i8, i8* %103, i64 1
  %104 = load i8, i8* %arrayidx165, align 1
  %conv166 = zext i8 %104 to i32
  %and167 = and i32 %conv166, 63
  %shl168 = shl i32 %and167, 6
  %or169 = or i32 %shl164, %shl168
  %105 = load i8*, i8** %d, align 8
  %arrayidx170 = getelementptr inbounds i8, i8* %105, i64 2
  %106 = load i8, i8* %arrayidx170, align 1
  %conv171 = zext i8 %106 to i32
  %and172 = and i32 %conv171, 63
  %or173 = or i32 %or169, %and172
  br label %cond.end.176

cond.false.174:                                   ; preds = %cond.false.155
  %107 = load i8*, i8** %d, align 8
  %call175 = call i32 @string_char(i8* %107, i8** null, i32* %buf_charlen)
  br label %cond.end.176

cond.end.176:                                     ; preds = %cond.false.174, %cond.true.160
  %cond177 = phi i32 [ %or173, %cond.true.160 ], [ %call175, %cond.false.174 ]
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.end.176, %cond.true.142
  %cond179 = phi i32 [ %add154, %cond.true.142 ], [ %cond177, %cond.end.176 ]
  br label %cond.end.180

cond.end.180:                                     ; preds = %cond.end.178, %cond.true.134
  %cond181 = phi i32 [ %conv136, %cond.true.134 ], [ %cond179, %cond.end.178 ]
  store i32 %cond181, i32* %buf_ch, align 4
  %108 = load i64, i64* %translate, align 8
  %109 = load i32, i32* %buf_ch, align 4
  %call182 = call i32 @char_table_translate(i64 %108, i32 %109)
  store i32 %call182, i32* %buf_ch, align 4
  %110 = load i32, i32* %buf_ch, align 4
  %cmp183 = icmp sle i32 %110, 127
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %cond.end.180
  %111 = load i32, i32* %buf_ch, align 4
  br label %cond.end.219

cond.false.186:                                   ; preds = %cond.end.180
  %112 = load i32, i32* %buf_ch, align 4
  %cmp187 = icmp sle i32 %112, 2047
  br i1 %cmp187, label %cond.true.189, label %cond.false.191

cond.true.189:                                    ; preds = %cond.false.186
  %113 = load i32, i32* %buf_ch, align 4
  %shr = ashr i32 %113, 6
  %or190 = or i32 192, %shr
  br label %cond.end.217

cond.false.191:                                   ; preds = %cond.false.186
  %114 = load i32, i32* %buf_ch, align 4
  %cmp192 = icmp sle i32 %114, 65535
  br i1 %cmp192, label %cond.true.194, label %cond.false.197

cond.true.194:                                    ; preds = %cond.false.191
  %115 = load i32, i32* %buf_ch, align 4
  %shr195 = ashr i32 %115, 12
  %or196 = or i32 224, %shr195
  br label %cond.end.215

cond.false.197:                                   ; preds = %cond.false.191
  %116 = load i32, i32* %buf_ch, align 4
  %cmp198 = icmp sle i32 %116, 2097151
  br i1 %cmp198, label %cond.true.200, label %cond.false.203

cond.true.200:                                    ; preds = %cond.false.197
  %117 = load i32, i32* %buf_ch, align 4
  %shr201 = ashr i32 %117, 18
  %or202 = or i32 240, %shr201
  br label %cond.end.213

cond.false.203:                                   ; preds = %cond.false.197
  %118 = load i32, i32* %buf_ch, align 4
  %cmp204 = icmp sle i32 %118, 4194175
  br i1 %cmp204, label %cond.true.206, label %cond.false.207

cond.true.206:                                    ; preds = %cond.false.203
  br label %cond.end.211

cond.false.207:                                   ; preds = %cond.false.203
  %119 = load i32, i32* %buf_ch, align 4
  %shr208 = ashr i32 %119, 6
  %and209 = and i32 %shr208, 1
  %or210 = or i32 192, %and209
  br label %cond.end.211

cond.end.211:                                     ; preds = %cond.false.207, %cond.true.206
  %cond212 = phi i32 [ 248, %cond.true.206 ], [ %or210, %cond.false.207 ]
  br label %cond.end.213

cond.end.213:                                     ; preds = %cond.end.211, %cond.true.200
  %cond214 = phi i32 [ %or202, %cond.true.200 ], [ %cond212, %cond.end.211 ]
  br label %cond.end.215

cond.end.215:                                     ; preds = %cond.end.213, %cond.true.194
  %cond216 = phi i32 [ %or196, %cond.true.194 ], [ %cond214, %cond.end.213 ]
  br label %cond.end.217

cond.end.217:                                     ; preds = %cond.end.215, %cond.true.189
  %cond218 = phi i32 [ %or190, %cond.true.189 ], [ %cond216, %cond.end.215 ]
  br label %cond.end.219

cond.end.219:                                     ; preds = %cond.end.217, %cond.true.185
  %cond220 = phi i32 [ %111, %cond.true.185 ], [ %cond218, %cond.end.217 ]
  %idxprom = sext i32 %cond220 to i64
  %120 = load i8*, i8** %fastmap, align 8
  %arrayidx221 = getelementptr inbounds i8, i8* %120, i64 %idxprom
  %121 = load i8, i8* %arrayidx221, align 1
  %tobool222 = icmp ne i8 %121, 0
  br i1 %tobool222, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %cond.end.219
  br label %while.end

if.end.224:                                       ; preds = %cond.end.219
  %122 = load i32, i32* %buf_charlen, align 4
  %conv225 = sext i32 %122 to i64
  %123 = load i64, i64* %range.addr, align 8
  %sub226 = sub nsw i64 %123, %conv225
  store i64 %sub226, i64* %range.addr, align 8
  %124 = load i32, i32* %buf_charlen, align 4
  %125 = load i8*, i8** %d, align 8
  %idx.ext = sext i32 %124 to i64
  %add.ptr227 = getelementptr inbounds i8, i8* %125, i64 %idx.ext
  store i8* %add.ptr227, i8** %d, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then.223, %while.cond
  br label %if.end.282

if.else.228:                                      ; preds = %if.then.126
  br label %while.cond.229

while.cond.229:                                   ; preds = %if.end.280, %if.else.228
  %126 = load i64, i64* %range.addr, align 8
  %127 = load i64, i64* %lim, align 8
  %cmp230 = icmp sgt i64 %126, %127
  br i1 %cmp230, label %while.body.232, label %while.end.281

while.body.232:                                   ; preds = %while.cond.229
  %128 = load i8*, i8** %d, align 8
  %129 = load i8, i8* %128, align 1
  %conv233 = zext i8 %129 to i32
  store i32 %conv233, i32* %buf_ch, align 4
  br i1 true, label %cond.true.234, label %cond.false.238

cond.true.234:                                    ; preds = %while.body.232
  %130 = load i32, i32* %buf_ch, align 4
  %add235 = add i32 %130, 0
  %cmp236 = icmp ult i32 %add235, 128
  br i1 %cmp236, label %cond.true.243, label %cond.false.244

cond.false.238:                                   ; preds = %while.body.232
  %131 = load i32, i32* %buf_ch, align 4
  %conv239 = sext i32 %131 to i64
  %add240 = add i64 %conv239, 0
  %cmp241 = icmp ult i64 %add240, 128
  br i1 %cmp241, label %cond.true.243, label %cond.false.244

cond.true.243:                                    ; preds = %cond.false.238, %cond.true.234
  %132 = load i32, i32* %buf_ch, align 4
  br label %cond.end.246

cond.false.244:                                   ; preds = %cond.false.238, %cond.true.234
  %133 = load i32, i32* %buf_ch, align 4
  %add245 = add nsw i32 %133, 4194048
  br label %cond.end.246

cond.end.246:                                     ; preds = %cond.false.244, %cond.true.243
  %cond247 = phi i32 [ %132, %cond.true.243 ], [ %add245, %cond.false.244 ]
  store i32 %cond247, i32* %ch, align 4
  %134 = load i64, i64* %translate, align 8
  %135 = load i32, i32* %ch, align 4
  %call248 = call i32 @char_table_translate(i64 %134, i32 %135)
  store i32 %call248, i32* %translated, align 4
  %136 = load i32, i32* %translated, align 4
  %137 = load i32, i32* %ch, align 4
  %cmp249 = icmp ne i32 %136, %137
  br i1 %cmp249, label %land.lhs.true.251, label %if.end.275

land.lhs.true.251:                                ; preds = %cond.end.246
  br i1 true, label %cond.true.252, label %cond.false.256

cond.true.252:                                    ; preds = %land.lhs.true.251
  %138 = load i32, i32* %translated, align 4
  %add253 = add i32 %138, 0
  %cmp254 = icmp ult i32 %add253, 128
  br i1 %cmp254, label %cond.true.261, label %cond.false.262

cond.false.256:                                   ; preds = %land.lhs.true.251
  %139 = load i32, i32* %translated, align 4
  %conv257 = sext i32 %139 to i64
  %add258 = add i64 %conv257, 0
  %cmp259 = icmp ult i64 %add258, 128
  br i1 %cmp259, label %cond.true.261, label %cond.false.262

cond.true.261:                                    ; preds = %cond.false.256, %cond.true.252
  %140 = load i32, i32* %translated, align 4
  br label %cond.end.270

cond.false.262:                                   ; preds = %cond.false.256, %cond.true.252
  %141 = load i32, i32* %translated, align 4
  %cmp263 = icmp sgt i32 %141, 4194175
  br i1 %cmp263, label %cond.true.265, label %cond.false.267

cond.true.265:                                    ; preds = %cond.false.262
  %142 = load i32, i32* %translated, align 4
  %sub266 = sub nsw i32 %142, 4194048
  br label %cond.end.268

cond.false.267:                                   ; preds = %cond.false.262
  br label %cond.end.268

cond.end.268:                                     ; preds = %cond.false.267, %cond.true.265
  %cond269 = phi i32 [ %sub266, %cond.true.265 ], [ -1, %cond.false.267 ]
  br label %cond.end.270

cond.end.270:                                     ; preds = %cond.end.268, %cond.true.261
  %cond271 = phi i32 [ %140, %cond.true.261 ], [ %cond269, %cond.end.268 ]
  store i32 %cond271, i32* %ch, align 4
  %cmp272 = icmp sge i32 %cond271, 0
  br i1 %cmp272, label %if.then.274, label %if.end.275

if.then.274:                                      ; preds = %cond.end.270
  %143 = load i32, i32* %ch, align 4
  store i32 %143, i32* %buf_ch, align 4
  br label %if.end.275

if.end.275:                                       ; preds = %if.then.274, %cond.end.270, %cond.end.246
  %144 = load i32, i32* %buf_ch, align 4
  %idxprom276 = sext i32 %144 to i64
  %145 = load i8*, i8** %fastmap, align 8
  %arrayidx277 = getelementptr inbounds i8, i8* %145, i64 %idxprom276
  %146 = load i8, i8* %arrayidx277, align 1
  %tobool278 = icmp ne i8 %146, 0
  br i1 %tobool278, label %if.then.279, label %if.end.280

if.then.279:                                      ; preds = %if.end.275
  br label %while.end.281

if.end.280:                                       ; preds = %if.end.275
  %147 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %147, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  %148 = load i64, i64* %range.addr, align 8
  %dec = add nsw i64 %148, -1
  store i64 %dec, i64* %range.addr, align 8
  br label %while.cond.229

while.end.281:                                    ; preds = %if.then.279, %while.cond.229
  br label %if.end.282

if.end.282:                                       ; preds = %while.end.281, %while.end
  br label %if.end.406

if.else.283:                                      ; preds = %if.end.123
  %149 = load i8, i8* %multibyte, align 1
  %tobool284 = icmp ne i8 %149, 0
  br i1 %tobool284, label %if.then.285, label %if.else.394

if.then.285:                                      ; preds = %if.else.283
  br label %while.cond.286

while.cond.286:                                   ; preds = %if.end.388, %if.then.285
  %150 = load i64, i64* %range.addr, align 8
  %151 = load i64, i64* %lim, align 8
  %cmp287 = icmp sgt i64 %150, %151
  br i1 %cmp287, label %while.body.289, label %while.end.393

while.body.289:                                   ; preds = %while.cond.286
  %152 = load i8*, i8** %d, align 8
  %arrayidx291 = getelementptr inbounds i8, i8* %152, i64 0
  %153 = load i8, i8* %arrayidx291, align 1
  %conv292 = zext i8 %153 to i32
  %and293 = and i32 %conv292, 128
  %tobool294 = icmp ne i32 %and293, 0
  br i1 %tobool294, label %cond.false.298, label %cond.true.295

cond.true.295:                                    ; preds = %while.body.289
  store i32 1, i32* %buf_charlen290, align 4
  %154 = load i8*, i8** %d, align 8
  %arrayidx296 = getelementptr inbounds i8, i8* %154, i64 0
  %155 = load i8, i8* %arrayidx296, align 1
  %conv297 = zext i8 %155 to i32
  br label %cond.end.343

cond.false.298:                                   ; preds = %while.body.289
  %156 = load i8*, i8** %d, align 8
  %arrayidx299 = getelementptr inbounds i8, i8* %156, i64 0
  %157 = load i8, i8* %arrayidx299, align 1
  %conv300 = zext i8 %157 to i32
  %and301 = and i32 %conv300, 32
  %tobool302 = icmp ne i32 %and301, 0
  br i1 %tobool302, label %cond.false.318, label %cond.true.303

cond.true.303:                                    ; preds = %cond.false.298
  store i32 2, i32* %buf_charlen290, align 4
  %158 = load i8*, i8** %d, align 8
  %arrayidx304 = getelementptr inbounds i8, i8* %158, i64 0
  %159 = load i8, i8* %arrayidx304, align 1
  %conv305 = zext i8 %159 to i32
  %and306 = and i32 %conv305, 31
  %shl307 = shl i32 %and306, 6
  %160 = load i8*, i8** %d, align 8
  %arrayidx308 = getelementptr inbounds i8, i8* %160, i64 1
  %161 = load i8, i8* %arrayidx308, align 1
  %conv309 = zext i8 %161 to i32
  %and310 = and i32 %conv309, 63
  %or311 = or i32 %shl307, %and310
  %162 = load i8*, i8** %d, align 8
  %arrayidx312 = getelementptr inbounds i8, i8* %162, i64 0
  %163 = load i8, i8* %arrayidx312, align 1
  %conv313 = zext i8 %163 to i32
  %cmp314 = icmp slt i32 %conv313, 194
  %cond316 = select i1 %cmp314, i32 4194176, i32 0
  %add317 = add nsw i32 %or311, %cond316
  br label %cond.end.341

cond.false.318:                                   ; preds = %cond.false.298
  %164 = load i8*, i8** %d, align 8
  %arrayidx319 = getelementptr inbounds i8, i8* %164, i64 0
  %165 = load i8, i8* %arrayidx319, align 1
  %conv320 = zext i8 %165 to i32
  %and321 = and i32 %conv320, 16
  %tobool322 = icmp ne i32 %and321, 0
  br i1 %tobool322, label %cond.false.337, label %cond.true.323

cond.true.323:                                    ; preds = %cond.false.318
  store i32 3, i32* %buf_charlen290, align 4
  %166 = load i8*, i8** %d, align 8
  %arrayidx324 = getelementptr inbounds i8, i8* %166, i64 0
  %167 = load i8, i8* %arrayidx324, align 1
  %conv325 = zext i8 %167 to i32
  %and326 = and i32 %conv325, 15
  %shl327 = shl i32 %and326, 12
  %168 = load i8*, i8** %d, align 8
  %arrayidx328 = getelementptr inbounds i8, i8* %168, i64 1
  %169 = load i8, i8* %arrayidx328, align 1
  %conv329 = zext i8 %169 to i32
  %and330 = and i32 %conv329, 63
  %shl331 = shl i32 %and330, 6
  %or332 = or i32 %shl327, %shl331
  %170 = load i8*, i8** %d, align 8
  %arrayidx333 = getelementptr inbounds i8, i8* %170, i64 2
  %171 = load i8, i8* %arrayidx333, align 1
  %conv334 = zext i8 %171 to i32
  %and335 = and i32 %conv334, 63
  %or336 = or i32 %or332, %and335
  br label %cond.end.339

cond.false.337:                                   ; preds = %cond.false.318
  %172 = load i8*, i8** %d, align 8
  %call338 = call i32 @string_char(i8* %172, i8** null, i32* %buf_charlen290)
  br label %cond.end.339

cond.end.339:                                     ; preds = %cond.false.337, %cond.true.323
  %cond340 = phi i32 [ %or336, %cond.true.323 ], [ %call338, %cond.false.337 ]
  br label %cond.end.341

cond.end.341:                                     ; preds = %cond.end.339, %cond.true.303
  %cond342 = phi i32 [ %add317, %cond.true.303 ], [ %cond340, %cond.end.339 ]
  br label %cond.end.343

cond.end.343:                                     ; preds = %cond.end.341, %cond.true.295
  %cond344 = phi i32 [ %conv297, %cond.true.295 ], [ %cond342, %cond.end.341 ]
  store i32 %cond344, i32* %buf_ch, align 4
  %173 = load i32, i32* %buf_ch, align 4
  %cmp345 = icmp sle i32 %173, 127
  br i1 %cmp345, label %cond.true.347, label %cond.false.348

cond.true.347:                                    ; preds = %cond.end.343
  %174 = load i32, i32* %buf_ch, align 4
  br label %cond.end.382

cond.false.348:                                   ; preds = %cond.end.343
  %175 = load i32, i32* %buf_ch, align 4
  %cmp349 = icmp sle i32 %175, 2047
  br i1 %cmp349, label %cond.true.351, label %cond.false.354

cond.true.351:                                    ; preds = %cond.false.348
  %176 = load i32, i32* %buf_ch, align 4
  %shr352 = ashr i32 %176, 6
  %or353 = or i32 192, %shr352
  br label %cond.end.380

cond.false.354:                                   ; preds = %cond.false.348
  %177 = load i32, i32* %buf_ch, align 4
  %cmp355 = icmp sle i32 %177, 65535
  br i1 %cmp355, label %cond.true.357, label %cond.false.360

cond.true.357:                                    ; preds = %cond.false.354
  %178 = load i32, i32* %buf_ch, align 4
  %shr358 = ashr i32 %178, 12
  %or359 = or i32 224, %shr358
  br label %cond.end.378

cond.false.360:                                   ; preds = %cond.false.354
  %179 = load i32, i32* %buf_ch, align 4
  %cmp361 = icmp sle i32 %179, 2097151
  br i1 %cmp361, label %cond.true.363, label %cond.false.366

cond.true.363:                                    ; preds = %cond.false.360
  %180 = load i32, i32* %buf_ch, align 4
  %shr364 = ashr i32 %180, 18
  %or365 = or i32 240, %shr364
  br label %cond.end.376

cond.false.366:                                   ; preds = %cond.false.360
  %181 = load i32, i32* %buf_ch, align 4
  %cmp367 = icmp sle i32 %181, 4194175
  br i1 %cmp367, label %cond.true.369, label %cond.false.370

cond.true.369:                                    ; preds = %cond.false.366
  br label %cond.end.374

cond.false.370:                                   ; preds = %cond.false.366
  %182 = load i32, i32* %buf_ch, align 4
  %shr371 = ashr i32 %182, 6
  %and372 = and i32 %shr371, 1
  %or373 = or i32 192, %and372
  br label %cond.end.374

cond.end.374:                                     ; preds = %cond.false.370, %cond.true.369
  %cond375 = phi i32 [ 248, %cond.true.369 ], [ %or373, %cond.false.370 ]
  br label %cond.end.376

cond.end.376:                                     ; preds = %cond.end.374, %cond.true.363
  %cond377 = phi i32 [ %or365, %cond.true.363 ], [ %cond375, %cond.end.374 ]
  br label %cond.end.378

cond.end.378:                                     ; preds = %cond.end.376, %cond.true.357
  %cond379 = phi i32 [ %or359, %cond.true.357 ], [ %cond377, %cond.end.376 ]
  br label %cond.end.380

cond.end.380:                                     ; preds = %cond.end.378, %cond.true.351
  %cond381 = phi i32 [ %or353, %cond.true.351 ], [ %cond379, %cond.end.378 ]
  br label %cond.end.382

cond.end.382:                                     ; preds = %cond.end.380, %cond.true.347
  %cond383 = phi i32 [ %174, %cond.true.347 ], [ %cond381, %cond.end.380 ]
  %idxprom384 = sext i32 %cond383 to i64
  %183 = load i8*, i8** %fastmap, align 8
  %arrayidx385 = getelementptr inbounds i8, i8* %183, i64 %idxprom384
  %184 = load i8, i8* %arrayidx385, align 1
  %tobool386 = icmp ne i8 %184, 0
  br i1 %tobool386, label %if.then.387, label %if.end.388

if.then.387:                                      ; preds = %cond.end.382
  br label %while.end.393

if.end.388:                                       ; preds = %cond.end.382
  %185 = load i32, i32* %buf_charlen290, align 4
  %conv389 = sext i32 %185 to i64
  %186 = load i64, i64* %range.addr, align 8
  %sub390 = sub nsw i64 %186, %conv389
  store i64 %sub390, i64* %range.addr, align 8
  %187 = load i32, i32* %buf_charlen290, align 4
  %188 = load i8*, i8** %d, align 8
  %idx.ext391 = sext i32 %187 to i64
  %add.ptr392 = getelementptr inbounds i8, i8* %188, i64 %idx.ext391
  store i8* %add.ptr392, i8** %d, align 8
  br label %while.cond.286

while.end.393:                                    ; preds = %if.then.387, %while.cond.286
  br label %if.end.405

if.else.394:                                      ; preds = %if.else.283
  br label %while.cond.395

while.cond.395:                                   ; preds = %while.body.401, %if.else.394
  %189 = load i64, i64* %range.addr, align 8
  %190 = load i64, i64* %lim, align 8
  %cmp396 = icmp sgt i64 %189, %190
  br i1 %cmp396, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.395
  %191 = load i8*, i8** %d, align 8
  %192 = load i8, i8* %191, align 1
  %idxprom398 = zext i8 %192 to i64
  %193 = load i8*, i8** %fastmap, align 8
  %arrayidx399 = getelementptr inbounds i8, i8* %193, i64 %idxprom398
  %194 = load i8, i8* %arrayidx399, align 1
  %tobool400 = icmp ne i8 %194, 0
  %lnot = xor i1 %tobool400, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.395
  %195 = phi i1 [ false, %while.cond.395 ], [ %lnot, %land.rhs ]
  br i1 %195, label %while.body.401, label %while.end.404

while.body.401:                                   ; preds = %land.end
  %196 = load i8*, i8** %d, align 8
  %incdec.ptr402 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %incdec.ptr402, i8** %d, align 8
  %197 = load i64, i64* %range.addr, align 8
  %dec403 = add nsw i64 %197, -1
  store i64 %dec403, i64* %range.addr, align 8
  br label %while.cond.395

while.end.404:                                    ; preds = %land.end
  br label %if.end.405

if.end.405:                                       ; preds = %while.end.404, %while.end.393
  br label %if.end.406

if.end.406:                                       ; preds = %if.end.405, %if.end.282
  %198 = load i64, i64* %irange, align 8
  %199 = load i64, i64* %range.addr, align 8
  %sub407 = sub nsw i64 %198, %199
  %200 = load i64, i64* %startpos.addr, align 8
  %add408 = add nsw i64 %200, %sub407
  store i64 %add408, i64* %startpos.addr, align 8
  br label %if.end.582

if.else.409:                                      ; preds = %cond.end.108
  %201 = load i8, i8* %multibyte, align 1
  %tobool410 = icmp ne i8 %201, 0
  br i1 %tobool410, label %if.then.411, label %if.else.517

if.then.411:                                      ; preds = %if.else.409
  %202 = load i8*, i8** %d, align 8
  %arrayidx412 = getelementptr inbounds i8, i8* %202, i64 0
  %203 = load i8, i8* %arrayidx412, align 1
  %conv413 = zext i8 %203 to i32
  %and414 = and i32 %conv413, 128
  %tobool415 = icmp ne i32 %and414, 0
  br i1 %tobool415, label %cond.false.419, label %cond.true.416

cond.true.416:                                    ; preds = %if.then.411
  %204 = load i8*, i8** %d, align 8
  %arrayidx417 = getelementptr inbounds i8, i8* %204, i64 0
  %205 = load i8, i8* %arrayidx417, align 1
  %conv418 = zext i8 %205 to i32
  br label %cond.end.464

cond.false.419:                                   ; preds = %if.then.411
  %206 = load i8*, i8** %d, align 8
  %arrayidx420 = getelementptr inbounds i8, i8* %206, i64 0
  %207 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %207 to i32
  %and422 = and i32 %conv421, 32
  %tobool423 = icmp ne i32 %and422, 0
  br i1 %tobool423, label %cond.false.439, label %cond.true.424

cond.true.424:                                    ; preds = %cond.false.419
  %208 = load i8*, i8** %d, align 8
  %arrayidx425 = getelementptr inbounds i8, i8* %208, i64 0
  %209 = load i8, i8* %arrayidx425, align 1
  %conv426 = zext i8 %209 to i32
  %and427 = and i32 %conv426, 31
  %shl428 = shl i32 %and427, 6
  %210 = load i8*, i8** %d, align 8
  %arrayidx429 = getelementptr inbounds i8, i8* %210, i64 1
  %211 = load i8, i8* %arrayidx429, align 1
  %conv430 = zext i8 %211 to i32
  %and431 = and i32 %conv430, 63
  %or432 = or i32 %shl428, %and431
  %212 = load i8*, i8** %d, align 8
  %arrayidx433 = getelementptr inbounds i8, i8* %212, i64 0
  %213 = load i8, i8* %arrayidx433, align 1
  %conv434 = zext i8 %213 to i32
  %cmp435 = icmp slt i32 %conv434, 194
  %cond437 = select i1 %cmp435, i32 4194176, i32 0
  %add438 = add nsw i32 %or432, %cond437
  br label %cond.end.462

cond.false.439:                                   ; preds = %cond.false.419
  %214 = load i8*, i8** %d, align 8
  %arrayidx440 = getelementptr inbounds i8, i8* %214, i64 0
  %215 = load i8, i8* %arrayidx440, align 1
  %conv441 = zext i8 %215 to i32
  %and442 = and i32 %conv441, 16
  %tobool443 = icmp ne i32 %and442, 0
  br i1 %tobool443, label %cond.false.458, label %cond.true.444

cond.true.444:                                    ; preds = %cond.false.439
  %216 = load i8*, i8** %d, align 8
  %arrayidx445 = getelementptr inbounds i8, i8* %216, i64 0
  %217 = load i8, i8* %arrayidx445, align 1
  %conv446 = zext i8 %217 to i32
  %and447 = and i32 %conv446, 15
  %shl448 = shl i32 %and447, 12
  %218 = load i8*, i8** %d, align 8
  %arrayidx449 = getelementptr inbounds i8, i8* %218, i64 1
  %219 = load i8, i8* %arrayidx449, align 1
  %conv450 = zext i8 %219 to i32
  %and451 = and i32 %conv450, 63
  %shl452 = shl i32 %and451, 6
  %or453 = or i32 %shl448, %shl452
  %220 = load i8*, i8** %d, align 8
  %arrayidx454 = getelementptr inbounds i8, i8* %220, i64 2
  %221 = load i8, i8* %arrayidx454, align 1
  %conv455 = zext i8 %221 to i32
  %and456 = and i32 %conv455, 63
  %or457 = or i32 %or453, %and456
  br label %cond.end.460

cond.false.458:                                   ; preds = %cond.false.439
  %222 = load i8*, i8** %d, align 8
  %call459 = call i32 @string_char(i8* %222, i8** null, i32* null)
  br label %cond.end.460

cond.end.460:                                     ; preds = %cond.false.458, %cond.true.444
  %cond461 = phi i32 [ %or457, %cond.true.444 ], [ %call459, %cond.false.458 ]
  br label %cond.end.462

cond.end.462:                                     ; preds = %cond.end.460, %cond.true.424
  %cond463 = phi i32 [ %add438, %cond.true.424 ], [ %cond461, %cond.end.460 ]
  br label %cond.end.464

cond.end.464:                                     ; preds = %cond.end.462, %cond.true.416
  %cond465 = phi i32 [ %conv418, %cond.true.416 ], [ %cond463, %cond.end.462 ]
  store i32 %cond465, i32* %buf_ch, align 4
  %223 = load i64, i64* %translate, align 8
  %cmp466 = icmp eq i64 %223, 2
  br i1 %cmp466, label %cond.false.470, label %cond.true.468

cond.true.468:                                    ; preds = %cond.end.464
  %224 = load i64, i64* %translate, align 8
  %225 = load i32, i32* %buf_ch, align 4
  %call469 = call i32 @char_table_translate(i64 %224, i32 %225)
  br label %cond.end.471

cond.false.470:                                   ; preds = %cond.end.464
  %226 = load i32, i32* %buf_ch, align 4
  br label %cond.end.471

cond.end.471:                                     ; preds = %cond.false.470, %cond.true.468
  %cond472 = phi i32 [ %call469, %cond.true.468 ], [ %226, %cond.false.470 ]
  store i32 %cond472, i32* %buf_ch, align 4
  %227 = load i32, i32* %buf_ch, align 4
  %cmp473 = icmp sle i32 %227, 127
  br i1 %cmp473, label %cond.true.475, label %cond.false.476

cond.true.475:                                    ; preds = %cond.end.471
  %228 = load i32, i32* %buf_ch, align 4
  br label %cond.end.510

cond.false.476:                                   ; preds = %cond.end.471
  %229 = load i32, i32* %buf_ch, align 4
  %cmp477 = icmp sle i32 %229, 2047
  br i1 %cmp477, label %cond.true.479, label %cond.false.482

cond.true.479:                                    ; preds = %cond.false.476
  %230 = load i32, i32* %buf_ch, align 4
  %shr480 = ashr i32 %230, 6
  %or481 = or i32 192, %shr480
  br label %cond.end.508

cond.false.482:                                   ; preds = %cond.false.476
  %231 = load i32, i32* %buf_ch, align 4
  %cmp483 = icmp sle i32 %231, 65535
  br i1 %cmp483, label %cond.true.485, label %cond.false.488

cond.true.485:                                    ; preds = %cond.false.482
  %232 = load i32, i32* %buf_ch, align 4
  %shr486 = ashr i32 %232, 12
  %or487 = or i32 224, %shr486
  br label %cond.end.506

cond.false.488:                                   ; preds = %cond.false.482
  %233 = load i32, i32* %buf_ch, align 4
  %cmp489 = icmp sle i32 %233, 2097151
  br i1 %cmp489, label %cond.true.491, label %cond.false.494

cond.true.491:                                    ; preds = %cond.false.488
  %234 = load i32, i32* %buf_ch, align 4
  %shr492 = ashr i32 %234, 18
  %or493 = or i32 240, %shr492
  br label %cond.end.504

cond.false.494:                                   ; preds = %cond.false.488
  %235 = load i32, i32* %buf_ch, align 4
  %cmp495 = icmp sle i32 %235, 4194175
  br i1 %cmp495, label %cond.true.497, label %cond.false.498

cond.true.497:                                    ; preds = %cond.false.494
  br label %cond.end.502

cond.false.498:                                   ; preds = %cond.false.494
  %236 = load i32, i32* %buf_ch, align 4
  %shr499 = ashr i32 %236, 6
  %and500 = and i32 %shr499, 1
  %or501 = or i32 192, %and500
  br label %cond.end.502

cond.end.502:                                     ; preds = %cond.false.498, %cond.true.497
  %cond503 = phi i32 [ 248, %cond.true.497 ], [ %or501, %cond.false.498 ]
  br label %cond.end.504

cond.end.504:                                     ; preds = %cond.end.502, %cond.true.491
  %cond505 = phi i32 [ %or493, %cond.true.491 ], [ %cond503, %cond.end.502 ]
  br label %cond.end.506

cond.end.506:                                     ; preds = %cond.end.504, %cond.true.485
  %cond507 = phi i32 [ %or487, %cond.true.485 ], [ %cond505, %cond.end.504 ]
  br label %cond.end.508

cond.end.508:                                     ; preds = %cond.end.506, %cond.true.479
  %cond509 = phi i32 [ %or481, %cond.true.479 ], [ %cond507, %cond.end.506 ]
  br label %cond.end.510

cond.end.510:                                     ; preds = %cond.end.508, %cond.true.475
  %cond511 = phi i32 [ %228, %cond.true.475 ], [ %cond509, %cond.end.508 ]
  %idxprom512 = sext i32 %cond511 to i64
  %237 = load i8*, i8** %fastmap, align 8
  %arrayidx513 = getelementptr inbounds i8, i8* %237, i64 %idxprom512
  %238 = load i8, i8* %arrayidx513, align 1
  %tobool514 = icmp ne i8 %238, 0
  br i1 %tobool514, label %if.end.516, label %if.then.515

if.then.515:                                      ; preds = %cond.end.510
  br label %advance

if.end.516:                                       ; preds = %cond.end.510
  br label %if.end.581

if.else.517:                                      ; preds = %if.else.409
  %239 = load i8*, i8** %d, align 8
  %240 = load i8, i8* %239, align 1
  %conv520 = zext i8 %240 to i32
  store i32 %conv520, i32* %buf_ch, align 4
  br i1 true, label %cond.true.521, label %cond.false.525

cond.true.521:                                    ; preds = %if.else.517
  %241 = load i32, i32* %buf_ch, align 4
  %add522 = add i32 %241, 0
  %cmp523 = icmp ult i32 %add522, 128
  br i1 %cmp523, label %cond.true.530, label %cond.false.531

cond.false.525:                                   ; preds = %if.else.517
  %242 = load i32, i32* %buf_ch, align 4
  %conv526 = sext i32 %242 to i64
  %add527 = add i64 %conv526, 0
  %cmp528 = icmp ult i64 %add527, 128
  br i1 %cmp528, label %cond.true.530, label %cond.false.531

cond.true.530:                                    ; preds = %cond.false.525, %cond.true.521
  %243 = load i32, i32* %buf_ch, align 4
  br label %cond.end.533

cond.false.531:                                   ; preds = %cond.false.525, %cond.true.521
  %244 = load i32, i32* %buf_ch, align 4
  %add532 = add nsw i32 %244, 4194048
  br label %cond.end.533

cond.end.533:                                     ; preds = %cond.false.531, %cond.true.530
  %cond534 = phi i32 [ %243, %cond.true.530 ], [ %add532, %cond.false.531 ]
  store i32 %cond534, i32* %ch518, align 4
  %245 = load i64, i64* %translate, align 8
  %cmp535 = icmp eq i64 %245, 2
  br i1 %cmp535, label %cond.false.539, label %cond.true.537

cond.true.537:                                    ; preds = %cond.end.533
  %246 = load i64, i64* %translate, align 8
  %247 = load i32, i32* %ch518, align 4
  %call538 = call i32 @char_table_translate(i64 %246, i32 %247)
  br label %cond.end.540

cond.false.539:                                   ; preds = %cond.end.533
  %248 = load i32, i32* %ch518, align 4
  br label %cond.end.540

cond.end.540:                                     ; preds = %cond.false.539, %cond.true.537
  %cond541 = phi i32 [ %call538, %cond.true.537 ], [ %248, %cond.false.539 ]
  store i32 %cond541, i32* %translated519, align 4
  %249 = load i32, i32* %translated519, align 4
  %250 = load i32, i32* %ch518, align 4
  %cmp542 = icmp ne i32 %249, %250
  br i1 %cmp542, label %land.lhs.true.544, label %if.end.568

land.lhs.true.544:                                ; preds = %cond.end.540
  br i1 true, label %cond.true.545, label %cond.false.549

cond.true.545:                                    ; preds = %land.lhs.true.544
  %251 = load i32, i32* %translated519, align 4
  %add546 = add i32 %251, 0
  %cmp547 = icmp ult i32 %add546, 128
  br i1 %cmp547, label %cond.true.554, label %cond.false.555

cond.false.549:                                   ; preds = %land.lhs.true.544
  %252 = load i32, i32* %translated519, align 4
  %conv550 = sext i32 %252 to i64
  %add551 = add i64 %conv550, 0
  %cmp552 = icmp ult i64 %add551, 128
  br i1 %cmp552, label %cond.true.554, label %cond.false.555

cond.true.554:                                    ; preds = %cond.false.549, %cond.true.545
  %253 = load i32, i32* %translated519, align 4
  br label %cond.end.563

cond.false.555:                                   ; preds = %cond.false.549, %cond.true.545
  %254 = load i32, i32* %translated519, align 4
  %cmp556 = icmp sgt i32 %254, 4194175
  br i1 %cmp556, label %cond.true.558, label %cond.false.560

cond.true.558:                                    ; preds = %cond.false.555
  %255 = load i32, i32* %translated519, align 4
  %sub559 = sub nsw i32 %255, 4194048
  br label %cond.end.561

cond.false.560:                                   ; preds = %cond.false.555
  br label %cond.end.561

cond.end.561:                                     ; preds = %cond.false.560, %cond.true.558
  %cond562 = phi i32 [ %sub559, %cond.true.558 ], [ -1, %cond.false.560 ]
  br label %cond.end.563

cond.end.563:                                     ; preds = %cond.end.561, %cond.true.554
  %cond564 = phi i32 [ %253, %cond.true.554 ], [ %cond562, %cond.end.561 ]
  store i32 %cond564, i32* %ch518, align 4
  %cmp565 = icmp sge i32 %cond564, 0
  br i1 %cmp565, label %if.then.567, label %if.end.568

if.then.567:                                      ; preds = %cond.end.563
  %256 = load i32, i32* %ch518, align 4
  store i32 %256, i32* %buf_ch, align 4
  br label %if.end.568

if.end.568:                                       ; preds = %if.then.567, %cond.end.563, %cond.end.540
  %257 = load i64, i64* %translate, align 8
  %cmp569 = icmp eq i64 %257, 2
  br i1 %cmp569, label %cond.false.573, label %cond.true.571

cond.true.571:                                    ; preds = %if.end.568
  %258 = load i64, i64* %translate, align 8
  %259 = load i32, i32* %buf_ch, align 4
  %call572 = call i32 @char_table_translate(i64 %258, i32 %259)
  br label %cond.end.574

cond.false.573:                                   ; preds = %if.end.568
  %260 = load i32, i32* %buf_ch, align 4
  br label %cond.end.574

cond.end.574:                                     ; preds = %cond.false.573, %cond.true.571
  %cond575 = phi i32 [ %call572, %cond.true.571 ], [ %260, %cond.false.573 ]
  %idxprom576 = sext i32 %cond575 to i64
  %261 = load i8*, i8** %fastmap, align 8
  %arrayidx577 = getelementptr inbounds i8, i8* %261, i64 %idxprom576
  %262 = load i8, i8* %arrayidx577, align 1
  %tobool578 = icmp ne i8 %262, 0
  br i1 %tobool578, label %if.end.580, label %if.then.579

if.then.579:                                      ; preds = %cond.end.574
  br label %advance

if.end.580:                                       ; preds = %cond.end.574
  br label %if.end.581

if.end.581:                                       ; preds = %if.end.580, %if.end.516
  br label %if.end.582

if.end.582:                                       ; preds = %if.end.581, %if.end.406
  br label %if.end.583

if.end.583:                                       ; preds = %if.end.582, %land.lhs.true.98, %land.lhs.true.95, %if.end.93
  %263 = load i64, i64* %range.addr, align 8
  %cmp584 = icmp sge i64 %263, 0
  br i1 %cmp584, label %land.lhs.true.586, label %if.end.598

land.lhs.true.586:                                ; preds = %if.end.583
  %264 = load i64, i64* %startpos.addr, align 8
  %265 = load i64, i64* %total_size, align 8
  %cmp587 = icmp eq i64 %264, %265
  br i1 %cmp587, label %land.lhs.true.589, label %if.end.598

land.lhs.true.589:                                ; preds = %land.lhs.true.586
  %266 = load i8*, i8** %fastmap, align 8
  %tobool590 = icmp ne i8* %266, null
  br i1 %tobool590, label %land.lhs.true.591, label %if.end.598

land.lhs.true.591:                                ; preds = %land.lhs.true.589
  %267 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %can_be_null592 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %267, i32 0, i32 7
  %bf.load593 = load i16, i16* %can_be_null592, align 8
  %bf.clear594 = and i16 %bf.load593, 1
  %bf.cast595 = zext i16 %bf.clear594 to i32
  %tobool596 = icmp ne i32 %bf.cast595, 0
  br i1 %tobool596, label %if.end.598, label %if.then.597

if.then.597:                                      ; preds = %land.lhs.true.591
  store i64 -1, i64* %retval
  br label %return

if.end.598:                                       ; preds = %land.lhs.true.591, %land.lhs.true.589, %land.lhs.true.586, %if.end.583
  %268 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %269 = load i8*, i8** %string1, align 8
  %270 = load i64, i64* %size1.addr, align 8
  %271 = load i8*, i8** %string2, align 8
  %272 = load i64, i64* %size2.addr, align 8
  %273 = load i64, i64* %startpos.addr, align 8
  %274 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %275 = load i64, i64* %stop.addr, align 8
  %call599 = call i64 @re_match_2_internal(%struct.re_pattern_buffer* %268, i8* %269, i64 %270, i8* %271, i64 %272, i64 %273, %struct.re_registers* %274, i64 %275)
  store i64 %call599, i64* %val, align 8
  %276 = load i64, i64* %val, align 8
  %cmp600 = icmp sge i64 %276, 0
  br i1 %cmp600, label %if.then.602, label %if.end.603

if.then.602:                                      ; preds = %if.end.598
  %277 = load i64, i64* %startpos.addr, align 8
  store i64 %277, i64* %retval
  br label %return

if.end.603:                                       ; preds = %if.end.598
  %278 = load i64, i64* %val, align 8
  %cmp604 = icmp eq i64 %278, -2
  br i1 %cmp604, label %if.then.606, label %if.end.607

if.then.606:                                      ; preds = %if.end.603
  store i64 -2, i64* %retval
  br label %return

if.end.607:                                       ; preds = %if.end.603
  br label %advance

advance:                                          ; preds = %if.end.607, %if.then.579, %if.then.515, %if.then.91
  %279 = load i64, i64* %range.addr, align 8
  %tobool608 = icmp ne i64 %279, 0
  br i1 %tobool608, label %if.else.610, label %if.then.609

if.then.609:                                      ; preds = %advance
  br label %for.end

if.else.610:                                      ; preds = %advance
  %280 = load i64, i64* %range.addr, align 8
  %cmp611 = icmp sgt i64 %280, 0
  br i1 %cmp611, label %if.then.613, label %if.else.662

if.then.613:                                      ; preds = %if.else.610
  %281 = load i8, i8* %multibyte, align 1
  %tobool614 = icmp ne i8 %281, 0
  br i1 %tobool614, label %if.then.615, label %if.else.659

if.then.615:                                      ; preds = %if.then.613
  %282 = load i64, i64* %startpos.addr, align 8
  %283 = load i64, i64* %size1.addr, align 8
  %cmp616 = icmp uge i64 %282, %283
  br i1 %cmp616, label %cond.true.618, label %cond.false.621

cond.true.618:                                    ; preds = %if.then.615
  %284 = load i8*, i8** %string2, align 8
  %285 = load i64, i64* %size1.addr, align 8
  %idx.neg619 = sub i64 0, %285
  %add.ptr620 = getelementptr inbounds i8, i8* %284, i64 %idx.neg619
  br label %cond.end.622

cond.false.621:                                   ; preds = %if.then.615
  %286 = load i8*, i8** %string1, align 8
  br label %cond.end.622

cond.end.622:                                     ; preds = %cond.false.621, %cond.true.618
  %cond623 = phi i8* [ %add.ptr620, %cond.true.618 ], [ %286, %cond.false.621 ]
  %287 = load i64, i64* %startpos.addr, align 8
  %add.ptr624 = getelementptr inbounds i8, i8* %cond623, i64 %287
  store i8* %add.ptr624, i8** %p, align 8
  %288 = load i8*, i8** %p, align 8
  %289 = load i8, i8* %288, align 1
  %conv625 = zext i8 %289 to i32
  %and626 = and i32 %conv625, 128
  %tobool627 = icmp ne i32 %and626, 0
  br i1 %tobool627, label %cond.false.629, label %cond.true.628

cond.true.628:                                    ; preds = %cond.end.622
  br label %cond.end.649

cond.false.629:                                   ; preds = %cond.end.622
  %290 = load i8*, i8** %p, align 8
  %291 = load i8, i8* %290, align 1
  %conv630 = zext i8 %291 to i32
  %and631 = and i32 %conv630, 32
  %tobool632 = icmp ne i32 %and631, 0
  br i1 %tobool632, label %cond.false.634, label %cond.true.633

cond.true.633:                                    ; preds = %cond.false.629
  br label %cond.end.647

cond.false.634:                                   ; preds = %cond.false.629
  %292 = load i8*, i8** %p, align 8
  %293 = load i8, i8* %292, align 1
  %conv635 = zext i8 %293 to i32
  %and636 = and i32 %conv635, 16
  %tobool637 = icmp ne i32 %and636, 0
  br i1 %tobool637, label %cond.false.639, label %cond.true.638

cond.true.638:                                    ; preds = %cond.false.634
  br label %cond.end.645

cond.false.639:                                   ; preds = %cond.false.634
  %294 = load i8*, i8** %p, align 8
  %295 = load i8, i8* %294, align 1
  %conv640 = zext i8 %295 to i32
  %and641 = and i32 %conv640, 8
  %tobool642 = icmp ne i32 %and641, 0
  %lnot643 = xor i1 %tobool642, true
  %cond644 = select i1 %lnot643, i32 4, i32 5
  br label %cond.end.645

cond.end.645:                                     ; preds = %cond.false.639, %cond.true.638
  %cond646 = phi i32 [ 3, %cond.true.638 ], [ %cond644, %cond.false.639 ]
  br label %cond.end.647

cond.end.647:                                     ; preds = %cond.end.645, %cond.true.633
  %cond648 = phi i32 [ 2, %cond.true.633 ], [ %cond646, %cond.end.645 ]
  br label %cond.end.649

cond.end.649:                                     ; preds = %cond.end.647, %cond.true.628
  %cond650 = phi i32 [ 1, %cond.true.628 ], [ %cond648, %cond.end.647 ]
  store i32 %cond650, i32* %len, align 4
  %296 = load i32, i32* %len, align 4
  %conv651 = sext i32 %296 to i64
  %297 = load i64, i64* %range.addr, align 8
  %sub652 = sub nsw i64 %297, %conv651
  store i64 %sub652, i64* %range.addr, align 8
  %298 = load i64, i64* %range.addr, align 8
  %cmp653 = icmp slt i64 %298, 0
  br i1 %cmp653, label %if.then.655, label %if.end.656

if.then.655:                                      ; preds = %cond.end.649
  br label %for.end

if.end.656:                                       ; preds = %cond.end.649
  %299 = load i32, i32* %len, align 4
  %conv657 = sext i32 %299 to i64
  %300 = load i64, i64* %startpos.addr, align 8
  %add658 = add nsw i64 %300, %conv657
  store i64 %add658, i64* %startpos.addr, align 8
  br label %if.end.661

if.else.659:                                      ; preds = %if.then.613
  %301 = load i64, i64* %range.addr, align 8
  %dec660 = add nsw i64 %301, -1
  store i64 %dec660, i64* %range.addr, align 8
  %302 = load i64, i64* %startpos.addr, align 8
  %inc = add nsw i64 %302, 1
  store i64 %inc, i64* %startpos.addr, align 8
  br label %if.end.661

if.end.661:                                       ; preds = %if.else.659, %if.end.656
  br label %if.end.750

if.else.662:                                      ; preds = %if.else.610
  %303 = load i64, i64* %range.addr, align 8
  %inc663 = add nsw i64 %303, 1
  store i64 %inc663, i64* %range.addr, align 8
  %304 = load i64, i64* %startpos.addr, align 8
  %dec664 = add nsw i64 %304, -1
  store i64 %dec664, i64* %startpos.addr, align 8
  %305 = load i8, i8* %multibyte, align 1
  %tobool665 = icmp ne i8 %305, 0
  br i1 %tobool665, label %if.then.666, label %if.end.749

if.then.666:                                      ; preds = %if.else.662
  %306 = load i64, i64* %startpos.addr, align 8
  %307 = load i64, i64* %size1.addr, align 8
  %cmp668 = icmp uge i64 %306, %307
  br i1 %cmp668, label %cond.true.670, label %cond.false.673

cond.true.670:                                    ; preds = %if.then.666
  %308 = load i8*, i8** %string2, align 8
  %309 = load i64, i64* %size1.addr, align 8
  %idx.neg671 = sub i64 0, %309
  %add.ptr672 = getelementptr inbounds i8, i8* %308, i64 %idx.neg671
  br label %cond.end.674

cond.false.673:                                   ; preds = %if.then.666
  %310 = load i8*, i8** %string1, align 8
  br label %cond.end.674

cond.end.674:                                     ; preds = %cond.false.673, %cond.true.670
  %cond675 = phi i8* [ %add.ptr672, %cond.true.670 ], [ %310, %cond.false.673 ]
  %311 = load i64, i64* %startpos.addr, align 8
  %add.ptr676 = getelementptr inbounds i8, i8* %cond675, i64 %311
  %add.ptr677 = getelementptr inbounds i8, i8* %add.ptr676, i64 1
  store i8* %add.ptr677, i8** %p667, align 8
  %312 = load i8*, i8** %p667, align 8
  store i8* %312, i8** %p0, align 8
  %313 = load i64, i64* %startpos.addr, align 8
  %314 = load i64, i64* %size1.addr, align 8
  %cmp678 = icmp uge i64 %313, %314
  br i1 %cmp678, label %cond.true.680, label %cond.false.681

cond.true.680:                                    ; preds = %cond.end.674
  %315 = load i8*, i8** %string2, align 8
  br label %cond.end.682

cond.false.681:                                   ; preds = %cond.end.674
  %316 = load i8*, i8** %string1, align 8
  br label %cond.end.682

cond.end.682:                                     ; preds = %cond.false.681, %cond.true.680
  %cond683 = phi i8* [ %315, %cond.true.680 ], [ %316, %cond.false.681 ]
  store i8* %cond683, i8** %phead, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end.682
  %317 = load i8*, i8** %p667, align 8
  %318 = load i8*, i8** %phead, align 8
  %cmp684 = icmp ugt i8* %317, %318
  br i1 %cmp684, label %if.then.686, label %if.end.732

if.then.686:                                      ; preds = %do.body
  %319 = load i8*, i8** %p667, align 8
  store i8* %319, i8** %chp, align 8
  br label %do.body.687

do.body.687:                                      ; preds = %land.end.697, %if.then.686
  %320 = load i8*, i8** %chp, align 8
  %incdec.ptr688 = getelementptr inbounds i8, i8* %320, i32 -1
  store i8* %incdec.ptr688, i8** %chp, align 8
  br label %do.cond

do.cond:                                          ; preds = %do.body.687
  %321 = load i8*, i8** %chp, align 8
  %322 = load i8*, i8** %phead, align 8
  %cmp689 = icmp uge i8* %321, %322
  br i1 %cmp689, label %land.rhs.691, label %land.end.697

land.rhs.691:                                     ; preds = %do.cond
  %323 = load i8*, i8** %chp, align 8
  %324 = load i8, i8* %323, align 1
  %conv692 = zext i8 %324 to i32
  %and693 = and i32 %conv692, 192
  %cmp694 = icmp ne i32 %and693, 128
  %lnot696 = xor i1 %cmp694, true
  br label %land.end.697

land.end.697:                                     ; preds = %land.rhs.691, %do.cond
  %325 = phi i1 [ false, %do.cond ], [ %lnot696, %land.rhs.691 ]
  br i1 %325, label %do.body.687, label %do.end

do.end:                                           ; preds = %land.end.697
  %326 = load i8*, i8** %chp, align 8
  %327 = load i8, i8* %326, align 1
  %conv698 = zext i8 %327 to i32
  %and699 = and i32 %conv698, 128
  %tobool700 = icmp ne i32 %and699, 0
  br i1 %tobool700, label %cond.false.702, label %cond.true.701

cond.true.701:                                    ; preds = %do.end
  br label %cond.end.722

cond.false.702:                                   ; preds = %do.end
  %328 = load i8*, i8** %chp, align 8
  %329 = load i8, i8* %328, align 1
  %conv703 = zext i8 %329 to i32
  %and704 = and i32 %conv703, 32
  %tobool705 = icmp ne i32 %and704, 0
  br i1 %tobool705, label %cond.false.707, label %cond.true.706

cond.true.706:                                    ; preds = %cond.false.702
  br label %cond.end.720

cond.false.707:                                   ; preds = %cond.false.702
  %330 = load i8*, i8** %chp, align 8
  %331 = load i8, i8* %330, align 1
  %conv708 = zext i8 %331 to i32
  %and709 = and i32 %conv708, 16
  %tobool710 = icmp ne i32 %and709, 0
  br i1 %tobool710, label %cond.false.712, label %cond.true.711

cond.true.711:                                    ; preds = %cond.false.707
  br label %cond.end.718

cond.false.712:                                   ; preds = %cond.false.707
  %332 = load i8*, i8** %chp, align 8
  %333 = load i8, i8* %332, align 1
  %conv713 = zext i8 %333 to i32
  %and714 = and i32 %conv713, 8
  %tobool715 = icmp ne i32 %and714, 0
  %lnot716 = xor i1 %tobool715, true
  %cond717 = select i1 %lnot716, i32 4, i32 5
  br label %cond.end.718

cond.end.718:                                     ; preds = %cond.false.712, %cond.true.711
  %cond719 = phi i32 [ 3, %cond.true.711 ], [ %cond717, %cond.false.712 ]
  br label %cond.end.720

cond.end.720:                                     ; preds = %cond.end.718, %cond.true.706
  %cond721 = phi i32 [ 2, %cond.true.706 ], [ %cond719, %cond.end.718 ]
  br label %cond.end.722

cond.end.722:                                     ; preds = %cond.end.720, %cond.true.701
  %cond723 = phi i32 [ 1, %cond.true.701 ], [ %cond721, %cond.end.720 ]
  %conv724 = sext i32 %cond723 to i64
  %334 = load i8*, i8** %p667, align 8
  %335 = load i8*, i8** %chp, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %334 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %335 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp725 = icmp eq i64 %conv724, %sub.ptr.sub
  br i1 %cmp725, label %cond.true.727, label %cond.false.728

cond.true.727:                                    ; preds = %cond.end.722
  %336 = load i8*, i8** %chp, align 8
  br label %cond.end.730

cond.false.728:                                   ; preds = %cond.end.722
  %337 = load i8*, i8** %p667, align 8
  %add.ptr729 = getelementptr inbounds i8, i8* %337, i64 -1
  br label %cond.end.730

cond.end.730:                                     ; preds = %cond.false.728, %cond.true.727
  %cond731 = phi i8* [ %336, %cond.true.727 ], [ %add.ptr729, %cond.false.728 ]
  store i8* %cond731, i8** %p667, align 8
  br label %if.end.732

if.end.732:                                       ; preds = %cond.end.730, %do.body
  br label %do.end.734

do.end.734:                                       ; preds = %if.end.732
  %338 = load i8*, i8** %p0, align 8
  %add.ptr735 = getelementptr inbounds i8, i8* %338, i64 -1
  %339 = load i8*, i8** %p667, align 8
  %sub.ptr.lhs.cast736 = ptrtoint i8* %add.ptr735 to i64
  %sub.ptr.rhs.cast737 = ptrtoint i8* %339 to i64
  %sub.ptr.sub738 = sub i64 %sub.ptr.lhs.cast736, %sub.ptr.rhs.cast737
  %340 = load i64, i64* %range.addr, align 8
  %add739 = add nsw i64 %340, %sub.ptr.sub738
  store i64 %add739, i64* %range.addr, align 8
  %341 = load i64, i64* %range.addr, align 8
  %cmp740 = icmp sgt i64 %341, 0
  br i1 %cmp740, label %if.then.742, label %if.end.743

if.then.742:                                      ; preds = %do.end.734
  br label %for.end

if.end.743:                                       ; preds = %do.end.734
  %342 = load i8*, i8** %p0, align 8
  %add.ptr744 = getelementptr inbounds i8, i8* %342, i64 -1
  %343 = load i8*, i8** %p667, align 8
  %sub.ptr.lhs.cast745 = ptrtoint i8* %add.ptr744 to i64
  %sub.ptr.rhs.cast746 = ptrtoint i8* %343 to i64
  %sub.ptr.sub747 = sub i64 %sub.ptr.lhs.cast745, %sub.ptr.rhs.cast746
  %344 = load i64, i64* %startpos.addr, align 8
  %sub748 = sub nsw i64 %344, %sub.ptr.sub747
  store i64 %sub748, i64* %startpos.addr, align 8
  br label %if.end.749

if.end.749:                                       ; preds = %if.end.743, %if.else.662
  br label %if.end.750

if.end.750:                                       ; preds = %if.end.749, %if.end.661
  br label %if.end.751

if.end.751:                                       ; preds = %if.end.750
  br label %for.cond

for.end:                                          ; preds = %if.then.742, %if.then.655, %if.then.609
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.606, %if.then.602, %if.then.597, %if.then.49, %if.then.27, %if.then
  %345 = load i64, i64* %retval
  ret i64 %345
}

declare i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64) #2

declare i64 @builtin_lisp_symbol(i32) #2

declare zeroext i1 @BUFFERP(i64) #2

declare void @SETUP_SYNTAX_TABLE_FOR_OBJECT(i64, i64, i64) #2

declare i32 @string_char(i8*, i8**, i32*) #2

declare i32 @char_table_translate(i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @re_match_2_internal(%struct.re_pattern_buffer* %bufp, i8* %string1, i64 %size1, i8* %string2, i64 %size2, i64 %pos, %struct.re_registers* %regs, i64 %stop) #0 {
entry:
  %retval = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i64, align 8
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i64, align 8
  %pos.addr = alloca i64, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i64, align 8
  %mcnt = alloca i32, align 4
  %reg = alloca i64, align 8
  %end1 = alloca i8*, align 8
  %end2 = alloca i8*, align 8
  %end_match_1 = alloca i8*, align 8
  %end_match_2 = alloca i8*, align 8
  %d = alloca i8*, align 8
  %dend = alloca i8*, align 8
  %dfail = alloca i8*, align 8
  %p = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %translate = alloca i64, align 8
  %multibyte = alloca i8, align 1
  %target_multibyte = alloca i8, align 1
  %fail_stack = alloca %struct.fail_stack_type, align 8
  %num_regs = alloca i64, align 8
  %regstart = alloca i8**, align 8
  %regend = alloca i8**, align 8
  %best_regs_set = alloca i32, align 4
  %best_regstart = alloca i8**, align 8
  %best_regend = alloca i8**, align 8
  %match_end = alloca i8*, align 8
  %sa_avail = alloca i64, align 8
  %sa_count = alloca i64, align 8
  %sa_must_free = alloca i8, align 1
  %dcnt = alloca i64, align 8
  %same_str_p = alloca i8, align 1
  %best_match_p = alloca i8, align 1
  %pat_charlen = alloca i32, align 4
  %buf_charlen = alloca i32, align 4
  %pat_ch = alloca i32, align 4
  %buf_ch = alloca i32, align 4
  %pat_charlen739 = alloca i32, align 4
  %pat_ch740 = alloca i32, align 4
  %buf_ch741 = alloca i32, align 4
  %buf_charlen897 = alloca i32, align 4
  %buf_ch898 = alloca i32, align 4
  %c = alloca i32, align 4
  %corig = alloca i32, align 4
  %not = alloca i8, align 1
  %len = alloca i32, align 4
  %range_table = alloca i8*, align 8
  %range_table_exists = alloca i32, align 4
  %count = alloca i32, align 4
  %unibyte_char = alloca i8, align 1
  %c1 = alloca i32, align 4
  %c11117 = alloca i32, align 4
  %class_bits = alloca i32, align 4
  %range_start = alloca i32, align 4
  %range_end = alloca i32, align 4
  %rtp = alloca i8*, align 8
  %range_table_end = alloca i8*, align 8
  %destination = alloca i8*, align 8
  %n = alloca i64, align 8
  %d2 = alloca i8*, align 8
  %dend2 = alloca i8*, align 8
  %regno = alloca i32, align 4
  %dcnt1741 = alloca i64, align 8
  %c1818 = alloca i32, align 4
  %dtemp = alloca i8*, align 8
  %dlimit = alloca i8*, align 8
  %destination1979 = alloca i8*, align 8
  %cycle = alloca i32, align 4
  %failure = alloca i64, align 8
  %destination2155 = alloca i8*, align 8
  %cycle2289 = alloca i32, align 4
  %failure2291 = alloca i64, align 8
  %destination2337 = alloca i8*, align 8
  %destination2472 = alloca i8*, align 8
  %p1 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %p3 = alloca i8*, align 8
  %p22660 = alloca i8*, align 8
  %destination2665 = alloca i8*, align 8
  %c2666 = alloca i32, align 4
  %p22812 = alloca i8*, align 8
  %destination2816 = alloca i8*, align 8
  %c2817 = alloca i32, align 4
  %p22959 = alloca i8*, align 8
  %destination2965 = alloca i8*, align 8
  %c2966 = alloca i32, align 4
  %not3105 = alloca i8, align 1
  %c13129 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %dummy = alloca i32, align 4
  %offset = alloca i64, align 8
  %charpos = alloca i64, align 8
  %dtemp3167 = alloca i8*, align 8
  %dlimit3174 = alloca i8*, align 8
  %c13409 = alloca i32, align 4
  %c23410 = alloca i32, align 4
  %s13411 = alloca i32, align 4
  %s23412 = alloca i32, align 4
  %dummy3413 = alloca i32, align 4
  %offset3414 = alloca i64, align 8
  %charpos3444 = alloca i64, align 8
  %dtemp3549 = alloca i8*, align 8
  %dlimit3556 = alloca i8*, align 8
  %c13704 = alloca i32, align 4
  %c23705 = alloca i32, align 4
  %s13706 = alloca i32, align 4
  %s23707 = alloca i32, align 4
  %dummy3708 = alloca i32, align 4
  %offset3709 = alloca i64, align 8
  %charpos3740 = alloca i64, align 8
  %dtemp3745 = alloca i8*, align 8
  %dlimit3752 = alloca i8*, align 8
  %c13980 = alloca i32, align 4
  %c23981 = alloca i32, align 4
  %s13982 = alloca i32, align 4
  %s23983 = alloca i32, align 4
  %offset3984 = alloca i64, align 8
  %charpos4014 = alloca i64, align 8
  %dtemp4107 = alloca i8*, align 8
  %dlimit4114 = alloca i8*, align 8
  %c14242 = alloca i32, align 4
  %c24243 = alloca i32, align 4
  %s14244 = alloca i32, align 4
  %s24245 = alloca i32, align 4
  %offset4246 = alloca i64, align 8
  %charpos4277 = alloca i64, align 8
  %dtemp4282 = alloca i8*, align 8
  %dlimit4289 = alloca i8*, align 8
  %not4482 = alloca i8, align 1
  %offset4499 = alloca i64, align 8
  %pos1 = alloca i64, align 8
  %len4530 = alloca i32, align 4
  %c4531 = alloca i32, align 4
  %not4703 = alloca i8, align 1
  %len4720 = alloca i32, align 4
  %c4721 = alloca i32, align 4
  %str = alloca i8*, align 8
  %pat = alloca i8*, align 8
  %pfreg = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %destination4909 = alloca i8*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store i8* %string1, i8** %string1.addr, align 8
  store i64 %size1, i64* %size1.addr, align 8
  store i8* %string2, i8** %string2.addr, align 8
  store i64 %size2, i64* %size2.addr, align 8
  store i64 %pos, i64* %pos.addr, align 8
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  store i64 %stop, i64* %stop.addr, align 8
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 0
  %1 = load i8*, i8** %buffer, align 8
  store i8* %1, i8** %p, align 8
  %2 = load i8*, i8** %p, align 8
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 2
  %4 = load i64, i64* %used, align 8
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4
  store i8* %add.ptr, i8** %pend, align 8
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %translate1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 5
  %6 = load i64, i64* %translate1, align 8
  store i64 %6, i64* %translate, align 8
  %7 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %multibyte2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %7, i32 0, i32 7
  %bf.load = load i16, i16* %multibyte2, align 8
  %bf.lshr = lshr i16 %bf.load, 8
  %bf.clear = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear to i32
  %conv = trunc i32 %bf.cast to i8
  store i8 %conv, i8* %multibyte, align 1
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %target_multibyte3 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 7
  %bf.load4 = load i16, i16* %target_multibyte3, align 8
  %bf.lshr5 = lshr i16 %bf.load4, 9
  %bf.clear6 = and i16 %bf.lshr5, 1
  %bf.cast7 = zext i16 %bf.clear6 to i32
  %conv8 = trunc i32 %bf.cast7 to i8
  store i8 %conv8, i8* %target_multibyte, align 1
  %9 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %9, i32 0, i32 6
  %10 = load i64, i64* %re_nsub, align 8
  %add = add i64 %10, 1
  store i64 %add, i64* %num_regs, align 8
  store i32 0, i32* %best_regs_set, align 4
  store i8* null, i8** %match_end, align 8
  store i64 16384, i64* %sa_avail, align 8
  %call = call i64 @SPECPDL_INDEX()
  store i64 %call, i64* %sa_count, align 8
  store i8 0, i8* %sa_must_free, align 1
  br label %do.body

do.body:                                          ; preds = %entry
  %11 = load i64, i64* %sa_avail, align 8
  %cmp = icmp ule i64 3200, %11
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  %12 = load i64, i64* %sa_avail, align 8
  %sub = sub i64 %12, 3200
  store i64 %sub, i64* %sa_avail, align 8
  %13 = alloca i8, i64 3200
  br label %cond.end

cond.false:                                       ; preds = %do.body
  store i8 1, i8* %sa_must_free, align 1
  %call10 = call i8* @record_xmalloc(i64 3200)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %13, %cond.true ], [ %call10, %cond.false ]
  %14 = bitcast i8* %cond to %union.fail_stack_elt*
  %stack = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %14, %union.fail_stack_elt** %stack, align 8
  %stack11 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %15 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack11, align 8
  %cmp12 = icmp eq %union.fail_stack_elt* %15, null
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i64 -2, i64* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %size = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 20, i64* %size, align 8
  %avail = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  store i64 0, i64* %avail, align 8
  %frame = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 0, i64* %frame, align 8
  br label %do.end

do.end:                                           ; preds = %if.end
  %16 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub14 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %16, i32 0, i32 6
  %17 = load i64, i64* %re_nsub14, align 8
  %tobool = icmp ne i64 %17, 0
  br i1 %tobool, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %do.end
  %18 = load i64, i64* %num_regs, align 8
  %mul = mul i64 %18, 8
  %19 = load i64, i64* %sa_avail, align 8
  %cmp16 = icmp ule i64 %mul, %19
  br i1 %cmp16, label %cond.true.18, label %cond.false.22

cond.true.18:                                     ; preds = %if.then.15
  %20 = load i64, i64* %num_regs, align 8
  %mul19 = mul i64 %20, 8
  %21 = load i64, i64* %sa_avail, align 8
  %sub20 = sub i64 %21, %mul19
  store i64 %sub20, i64* %sa_avail, align 8
  %22 = load i64, i64* %num_regs, align 8
  %mul21 = mul i64 %22, 8
  %23 = alloca i8, i64 %mul21
  br label %cond.end.25

cond.false.22:                                    ; preds = %if.then.15
  store i8 1, i8* %sa_must_free, align 1
  %24 = load i64, i64* %num_regs, align 8
  %mul23 = mul i64 %24, 8
  %call24 = call i8* @record_xmalloc(i64 %mul23)
  br label %cond.end.25

cond.end.25:                                      ; preds = %cond.false.22, %cond.true.18
  %cond26 = phi i8* [ %23, %cond.true.18 ], [ %call24, %cond.false.22 ]
  %25 = bitcast i8* %cond26 to i8**
  store i8** %25, i8*** %regstart, align 8
  %26 = load i64, i64* %num_regs, align 8
  %mul27 = mul i64 %26, 8
  %27 = load i64, i64* %sa_avail, align 8
  %cmp28 = icmp ule i64 %mul27, %27
  br i1 %cmp28, label %cond.true.30, label %cond.false.34

cond.true.30:                                     ; preds = %cond.end.25
  %28 = load i64, i64* %num_regs, align 8
  %mul31 = mul i64 %28, 8
  %29 = load i64, i64* %sa_avail, align 8
  %sub32 = sub i64 %29, %mul31
  store i64 %sub32, i64* %sa_avail, align 8
  %30 = load i64, i64* %num_regs, align 8
  %mul33 = mul i64 %30, 8
  %31 = alloca i8, i64 %mul33
  br label %cond.end.37

cond.false.34:                                    ; preds = %cond.end.25
  store i8 1, i8* %sa_must_free, align 1
  %32 = load i64, i64* %num_regs, align 8
  %mul35 = mul i64 %32, 8
  %call36 = call i8* @record_xmalloc(i64 %mul35)
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.false.34, %cond.true.30
  %cond38 = phi i8* [ %31, %cond.true.30 ], [ %call36, %cond.false.34 ]
  %33 = bitcast i8* %cond38 to i8**
  store i8** %33, i8*** %regend, align 8
  %34 = load i64, i64* %num_regs, align 8
  %mul39 = mul i64 %34, 8
  %35 = load i64, i64* %sa_avail, align 8
  %cmp40 = icmp ule i64 %mul39, %35
  br i1 %cmp40, label %cond.true.42, label %cond.false.46

cond.true.42:                                     ; preds = %cond.end.37
  %36 = load i64, i64* %num_regs, align 8
  %mul43 = mul i64 %36, 8
  %37 = load i64, i64* %sa_avail, align 8
  %sub44 = sub i64 %37, %mul43
  store i64 %sub44, i64* %sa_avail, align 8
  %38 = load i64, i64* %num_regs, align 8
  %mul45 = mul i64 %38, 8
  %39 = alloca i8, i64 %mul45
  br label %cond.end.49

cond.false.46:                                    ; preds = %cond.end.37
  store i8 1, i8* %sa_must_free, align 1
  %40 = load i64, i64* %num_regs, align 8
  %mul47 = mul i64 %40, 8
  %call48 = call i8* @record_xmalloc(i64 %mul47)
  br label %cond.end.49

cond.end.49:                                      ; preds = %cond.false.46, %cond.true.42
  %cond50 = phi i8* [ %39, %cond.true.42 ], [ %call48, %cond.false.46 ]
  %41 = bitcast i8* %cond50 to i8**
  store i8** %41, i8*** %best_regstart, align 8
  %42 = load i64, i64* %num_regs, align 8
  %mul51 = mul i64 %42, 8
  %43 = load i64, i64* %sa_avail, align 8
  %cmp52 = icmp ule i64 %mul51, %43
  br i1 %cmp52, label %cond.true.54, label %cond.false.58

cond.true.54:                                     ; preds = %cond.end.49
  %44 = load i64, i64* %num_regs, align 8
  %mul55 = mul i64 %44, 8
  %45 = load i64, i64* %sa_avail, align 8
  %sub56 = sub i64 %45, %mul55
  store i64 %sub56, i64* %sa_avail, align 8
  %46 = load i64, i64* %num_regs, align 8
  %mul57 = mul i64 %46, 8
  %47 = alloca i8, i64 %mul57
  br label %cond.end.61

cond.false.58:                                    ; preds = %cond.end.49
  store i8 1, i8* %sa_must_free, align 1
  %48 = load i64, i64* %num_regs, align 8
  %mul59 = mul i64 %48, 8
  %call60 = call i8* @record_xmalloc(i64 %mul59)
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.false.58, %cond.true.54
  %cond62 = phi i8* [ %47, %cond.true.54 ], [ %call60, %cond.false.58 ]
  %49 = bitcast i8* %cond62 to i8**
  store i8** %49, i8*** %best_regend, align 8
  %50 = load i8**, i8*** %regstart, align 8
  %tobool63 = icmp ne i8** %50, null
  br i1 %tobool63, label %land.lhs.true, label %if.then.69

land.lhs.true:                                    ; preds = %cond.end.61
  %51 = load i8**, i8*** %regend, align 8
  %tobool64 = icmp ne i8** %51, null
  br i1 %tobool64, label %land.lhs.true.65, label %if.then.69

land.lhs.true.65:                                 ; preds = %land.lhs.true
  %52 = load i8**, i8*** %best_regstart, align 8
  %tobool66 = icmp ne i8** %52, null
  br i1 %tobool66, label %land.lhs.true.67, label %if.then.69

land.lhs.true.67:                                 ; preds = %land.lhs.true.65
  %53 = load i8**, i8*** %best_regend, align 8
  %tobool68 = icmp ne i8** %53, null
  br i1 %tobool68, label %if.end.99, label %if.then.69

if.then.69:                                       ; preds = %land.lhs.true.67, %land.lhs.true.65, %land.lhs.true, %cond.end.61
  br label %do.body.70

do.body.70:                                       ; preds = %if.then.69
  br label %do.body.71

do.body.71:                                       ; preds = %do.body.70
  %54 = load i8**, i8*** %regstart, align 8
  %tobool72 = icmp ne i8** %54, null
  br i1 %tobool72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %do.body.71
  store i8** null, i8*** %regstart, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.73, %do.body.71
  br label %do.end.75

do.end.75:                                        ; preds = %if.end.74
  br label %do.body.76

do.body.76:                                       ; preds = %do.end.75
  %55 = load i8**, i8*** %regend, align 8
  %tobool77 = icmp ne i8** %55, null
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %do.body.76
  store i8** null, i8*** %regend, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %do.body.76
  br label %do.end.80

do.end.80:                                        ; preds = %if.end.79
  br label %do.body.81

do.body.81:                                       ; preds = %do.end.80
  %56 = load i8**, i8*** %best_regstart, align 8
  %tobool82 = icmp ne i8** %56, null
  br i1 %tobool82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %do.body.81
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.83, %do.body.81
  br label %do.end.85

do.end.85:                                        ; preds = %if.end.84
  br label %do.body.86

do.body.86:                                       ; preds = %do.end.85
  %57 = load i8**, i8*** %best_regend, align 8
  %tobool87 = icmp ne i8** %57, null
  br i1 %tobool87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %do.body.86
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %do.body.86
  br label %do.end.90

do.end.90:                                        ; preds = %if.end.89
  br label %do.body.91

do.body.91:                                       ; preds = %do.end.90
  %58 = load i8, i8* %sa_must_free, align 1
  %tobool92 = trunc i8 %58 to i1
  br i1 %tobool92, label %if.then.93, label %if.end.96

if.then.93:                                       ; preds = %do.body.91
  store i8 0, i8* %sa_must_free, align 1
  %59 = load i64, i64* %sa_count, align 8
  %call94 = call i64 @builtin_lisp_symbol(i32 0)
  %call95 = call i64 @unbind_to(i64 %59, i64 %call94)
  br label %if.end.96

if.end.96:                                        ; preds = %if.then.93, %do.body.91
  br label %do.end.97

do.end.97:                                        ; preds = %if.end.96
  br label %do.end.98

do.end.98:                                        ; preds = %do.end.97
  store i64 -2, i64* %retval
  br label %return

if.end.99:                                        ; preds = %land.lhs.true.67
  br label %if.end.100

if.else:                                          ; preds = %do.end
  store i8** null, i8*** %best_regend, align 8
  store i8** null, i8*** %best_regstart, align 8
  store i8** null, i8*** %regend, align 8
  store i8** null, i8*** %regstart, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.else, %if.end.99
  %60 = load i64, i64* %pos.addr, align 8
  %cmp101 = icmp slt i64 %60, 0
  br i1 %cmp101, label %if.then.106, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.100
  %61 = load i64, i64* %pos.addr, align 8
  %62 = load i64, i64* %size1.addr, align 8
  %63 = load i64, i64* %size2.addr, align 8
  %add103 = add i64 %62, %63
  %cmp104 = icmp ugt i64 %61, %add103
  br i1 %cmp104, label %if.then.106, label %if.end.136

if.then.106:                                      ; preds = %lor.lhs.false, %if.end.100
  br label %do.body.107

do.body.107:                                      ; preds = %if.then.106
  br label %do.body.108

do.body.108:                                      ; preds = %do.body.107
  %64 = load i8**, i8*** %regstart, align 8
  %tobool109 = icmp ne i8** %64, null
  br i1 %tobool109, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %do.body.108
  store i8** null, i8*** %regstart, align 8
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.110, %do.body.108
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  br label %do.body.113

do.body.113:                                      ; preds = %do.end.112
  %65 = load i8**, i8*** %regend, align 8
  %tobool114 = icmp ne i8** %65, null
  br i1 %tobool114, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %do.body.113
  store i8** null, i8*** %regend, align 8
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.115, %do.body.113
  br label %do.end.117

do.end.117:                                       ; preds = %if.end.116
  br label %do.body.118

do.body.118:                                      ; preds = %do.end.117
  %66 = load i8**, i8*** %best_regstart, align 8
  %tobool119 = icmp ne i8** %66, null
  br i1 %tobool119, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %do.body.118
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.121

if.end.121:                                       ; preds = %if.then.120, %do.body.118
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  br label %do.body.123

do.body.123:                                      ; preds = %do.end.122
  %67 = load i8**, i8*** %best_regend, align 8
  %tobool124 = icmp ne i8** %67, null
  br i1 %tobool124, label %if.then.125, label %if.end.126

if.then.125:                                      ; preds = %do.body.123
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.125, %do.body.123
  br label %do.end.127

do.end.127:                                       ; preds = %if.end.126
  br label %do.body.128

do.body.128:                                      ; preds = %do.end.127
  %68 = load i8, i8* %sa_must_free, align 1
  %tobool129 = trunc i8 %68 to i1
  br i1 %tobool129, label %if.then.130, label %if.end.133

if.then.130:                                      ; preds = %do.body.128
  store i8 0, i8* %sa_must_free, align 1
  %69 = load i64, i64* %sa_count, align 8
  %call131 = call i64 @builtin_lisp_symbol(i32 0)
  %call132 = call i64 @unbind_to(i64 %69, i64 %call131)
  br label %if.end.133

if.end.133:                                       ; preds = %if.then.130, %do.body.128
  br label %do.end.134

do.end.134:                                       ; preds = %if.end.133
  br label %do.end.135

do.end.135:                                       ; preds = %do.end.134
  store i64 -1, i64* %retval
  br label %return

if.end.136:                                       ; preds = %lor.lhs.false
  store i64 1, i64* %reg, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.136
  %70 = load i64, i64* %reg, align 8
  %71 = load i64, i64* %num_regs, align 8
  %cmp137 = icmp ult i64 %70, %71
  br i1 %cmp137, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %72 = load i64, i64* %reg, align 8
  %73 = load i8**, i8*** %regend, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %73, i64 %72
  store i8* null, i8** %arrayidx, align 8
  %74 = load i64, i64* %reg, align 8
  %75 = load i8**, i8*** %regstart, align 8
  %arrayidx139 = getelementptr inbounds i8*, i8** %75, i64 %74
  store i8* null, i8** %arrayidx139, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %76 = load i64, i64* %reg, align 8
  %inc = add i64 %76, 1
  store i64 %inc, i64* %reg, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %77 = load i64, i64* %size2.addr, align 8
  %cmp140 = icmp eq i64 %77, 0
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.146

land.lhs.true.142:                                ; preds = %for.end
  %78 = load i8*, i8** %string1.addr, align 8
  %cmp143 = icmp ne i8* %78, null
  br i1 %cmp143, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %land.lhs.true.142
  %79 = load i8*, i8** %string1.addr, align 8
  store i8* %79, i8** %string2.addr, align 8
  %80 = load i64, i64* %size1.addr, align 8
  store i64 %80, i64* %size2.addr, align 8
  store i8* null, i8** %string1.addr, align 8
  store i64 0, i64* %size1.addr, align 8
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.145, %land.lhs.true.142, %for.end
  %81 = load i8*, i8** %string1.addr, align 8
  %82 = load i64, i64* %size1.addr, align 8
  %add.ptr147 = getelementptr inbounds i8, i8* %81, i64 %82
  store i8* %add.ptr147, i8** %end1, align 8
  %83 = load i8*, i8** %string2.addr, align 8
  %84 = load i64, i64* %size2.addr, align 8
  %add.ptr148 = getelementptr inbounds i8, i8* %83, i64 %84
  store i8* %add.ptr148, i8** %end2, align 8
  %85 = load i64, i64* %pos.addr, align 8
  %86 = load i64, i64* %size1.addr, align 8
  %cmp149 = icmp uge i64 %85, %86
  br i1 %cmp149, label %if.then.151, label %if.else.157

if.then.151:                                      ; preds = %if.end.146
  %87 = load i8*, i8** %string2.addr, align 8
  %88 = load i64, i64* %pos.addr, align 8
  %add.ptr152 = getelementptr inbounds i8, i8* %87, i64 %88
  %89 = load i64, i64* %size1.addr, align 8
  %idx.neg = sub i64 0, %89
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr152, i64 %idx.neg
  store i8* %add.ptr153, i8** %d, align 8
  %90 = load i8*, i8** %string2.addr, align 8
  %91 = load i64, i64* %stop.addr, align 8
  %add.ptr154 = getelementptr inbounds i8, i8* %90, i64 %91
  %92 = load i64, i64* %size1.addr, align 8
  %idx.neg155 = sub i64 0, %92
  %add.ptr156 = getelementptr inbounds i8, i8* %add.ptr154, i64 %idx.neg155
  store i8* %add.ptr156, i8** %end_match_2, align 8
  store i8* %add.ptr156, i8** %dend, align 8
  %93 = load i8*, i8** %end1, align 8
  store i8* %93, i8** %end_match_1, align 8
  br label %if.end.168

if.else.157:                                      ; preds = %if.end.146
  %94 = load i64, i64* %stop.addr, align 8
  %95 = load i64, i64* %size1.addr, align 8
  %cmp158 = icmp ult i64 %94, %95
  br i1 %cmp158, label %if.then.160, label %if.else.162

if.then.160:                                      ; preds = %if.else.157
  %96 = load i8*, i8** %string1.addr, align 8
  %97 = load i64, i64* %stop.addr, align 8
  %add.ptr161 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8* %add.ptr161, i8** %end_match_1, align 8
  %98 = load i8*, i8** %end_match_1, align 8
  store i8* %98, i8** %end_match_2, align 8
  br label %if.end.166

if.else.162:                                      ; preds = %if.else.157
  %99 = load i8*, i8** %end1, align 8
  store i8* %99, i8** %end_match_1, align 8
  %100 = load i8*, i8** %string2.addr, align 8
  %101 = load i64, i64* %stop.addr, align 8
  %add.ptr163 = getelementptr inbounds i8, i8* %100, i64 %101
  %102 = load i64, i64* %size1.addr, align 8
  %idx.neg164 = sub i64 0, %102
  %add.ptr165 = getelementptr inbounds i8, i8* %add.ptr163, i64 %idx.neg164
  store i8* %add.ptr165, i8** %end_match_2, align 8
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.162, %if.then.160
  %103 = load i8*, i8** %string1.addr, align 8
  %104 = load i64, i64* %pos.addr, align 8
  %add.ptr167 = getelementptr inbounds i8, i8* %103, i64 %104
  store i8* %add.ptr167, i8** %d, align 8
  %105 = load i8*, i8** %end_match_1, align 8
  store i8* %105, i8** %dend, align 8
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.166, %if.then.151
  br label %for.cond.169

for.cond.169:                                     ; preds = %if.end.5055, %sw.epilog, %if.end.168
  %106 = load i8*, i8** %p, align 8
  %107 = load i8*, i8** %pend, align 8
  %cmp170 = icmp eq i8* %106, %107
  br i1 %cmp170, label %if.then.172, label %if.end.578

if.then.172:                                      ; preds = %for.cond.169
  %108 = load i8*, i8** %d, align 8
  %109 = load i8*, i8** %end_match_2, align 8
  %cmp173 = icmp ne i8* %108, %109
  br i1 %cmp173, label %if.then.175, label %if.end.262

if.then.175:                                      ; preds = %if.then.172
  %110 = load i64, i64* %size1.addr, align 8
  %tobool176 = icmp ne i64 %110, 0
  br i1 %tobool176, label %land.lhs.true.177, label %land.end

land.lhs.true.177:                                ; preds = %if.then.175
  %111 = load i8*, i8** %string1.addr, align 8
  %112 = load i8*, i8** %match_end, align 8
  %cmp178 = icmp ule i8* %111, %112
  br i1 %cmp178, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.177
  %113 = load i8*, i8** %match_end, align 8
  %114 = load i8*, i8** %string1.addr, align 8
  %115 = load i64, i64* %size1.addr, align 8
  %add.ptr180 = getelementptr inbounds i8, i8* %114, i64 %115
  %cmp181 = icmp ule i8* %113, %add.ptr180
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.177, %if.then.175
  %116 = phi i1 [ false, %land.lhs.true.177 ], [ false, %if.then.175 ], [ %cmp181, %land.rhs ]
  %land.ext = zext i1 %116 to i32
  %117 = load i64, i64* %size1.addr, align 8
  %tobool183 = icmp ne i64 %117, 0
  br i1 %tobool183, label %land.lhs.true.184, label %land.end.191

land.lhs.true.184:                                ; preds = %land.end
  %118 = load i8*, i8** %string1.addr, align 8
  %119 = load i8*, i8** %d, align 8
  %cmp185 = icmp ule i8* %118, %119
  br i1 %cmp185, label %land.rhs.187, label %land.end.191

land.rhs.187:                                     ; preds = %land.lhs.true.184
  %120 = load i8*, i8** %d, align 8
  %121 = load i8*, i8** %string1.addr, align 8
  %122 = load i64, i64* %size1.addr, align 8
  %add.ptr188 = getelementptr inbounds i8, i8* %121, i64 %122
  %cmp189 = icmp ule i8* %120, %add.ptr188
  br label %land.end.191

land.end.191:                                     ; preds = %land.rhs.187, %land.lhs.true.184, %land.end
  %123 = phi i1 [ false, %land.lhs.true.184 ], [ false, %land.end ], [ %cmp189, %land.rhs.187 ]
  %land.ext192 = zext i1 %123 to i32
  %cmp193 = icmp eq i32 %land.ext, %land.ext192
  %conv194 = zext i1 %cmp193 to i32
  %conv195 = trunc i32 %conv194 to i8
  store i8 %conv195, i8* %same_str_p, align 1
  %124 = load i8, i8* %same_str_p, align 1
  %tobool196 = icmp ne i8 %124, 0
  br i1 %tobool196, label %if.then.197, label %if.else.201

if.then.197:                                      ; preds = %land.end.191
  %125 = load i8*, i8** %d, align 8
  %126 = load i8*, i8** %match_end, align 8
  %cmp198 = icmp ugt i8* %125, %126
  %conv199 = zext i1 %cmp198 to i32
  %conv200 = trunc i32 %conv199 to i8
  store i8 %conv200, i8* %best_match_p, align 1
  br label %if.end.213

if.else.201:                                      ; preds = %land.end.191
  %127 = load i64, i64* %size1.addr, align 8
  %tobool202 = icmp ne i64 %127, 0
  br i1 %tobool202, label %land.lhs.true.203, label %land.end.210

land.lhs.true.203:                                ; preds = %if.else.201
  %128 = load i8*, i8** %string1.addr, align 8
  %129 = load i8*, i8** %d, align 8
  %cmp204 = icmp ule i8* %128, %129
  br i1 %cmp204, label %land.rhs.206, label %land.end.210

land.rhs.206:                                     ; preds = %land.lhs.true.203
  %130 = load i8*, i8** %d, align 8
  %131 = load i8*, i8** %string1.addr, align 8
  %132 = load i64, i64* %size1.addr, align 8
  %add.ptr207 = getelementptr inbounds i8, i8* %131, i64 %132
  %cmp208 = icmp ule i8* %130, %add.ptr207
  br label %land.end.210

land.end.210:                                     ; preds = %land.rhs.206, %land.lhs.true.203, %if.else.201
  %133 = phi i1 [ false, %land.lhs.true.203 ], [ false, %if.else.201 ], [ %cmp208, %land.rhs.206 ]
  %lnot = xor i1 %133, true
  %lnot.ext = zext i1 %lnot to i32
  %conv212 = trunc i32 %lnot.ext to i8
  store i8 %conv212, i8* %best_match_p, align 1
  br label %if.end.213

if.end.213:                                       ; preds = %land.end.210, %if.then.197
  %frame214 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %134 = load i64, i64* %frame214, align 8
  %cmp215 = icmp eq i64 %134, 0
  br i1 %cmp215, label %if.else.235, label %if.then.217

if.then.217:                                      ; preds = %if.end.213
  %135 = load i32, i32* %best_regs_set, align 4
  %tobool218 = icmp ne i32 %135, 0
  br i1 %tobool218, label %lor.lhs.false.219, label %if.then.222

lor.lhs.false.219:                                ; preds = %if.then.217
  %136 = load i8, i8* %best_match_p, align 1
  %conv220 = sext i8 %136 to i32
  %tobool221 = icmp ne i32 %conv220, 0
  br i1 %tobool221, label %if.then.222, label %if.end.234

if.then.222:                                      ; preds = %lor.lhs.false.219, %if.then.217
  store i32 1, i32* %best_regs_set, align 4
  %137 = load i8*, i8** %d, align 8
  store i8* %137, i8** %match_end, align 8
  store i64 1, i64* %reg, align 8
  br label %for.cond.223

for.cond.223:                                     ; preds = %for.inc.231, %if.then.222
  %138 = load i64, i64* %reg, align 8
  %139 = load i64, i64* %num_regs, align 8
  %cmp224 = icmp ult i64 %138, %139
  br i1 %cmp224, label %for.body.226, label %for.end.233

for.body.226:                                     ; preds = %for.cond.223
  %140 = load i64, i64* %reg, align 8
  %141 = load i8**, i8*** %regstart, align 8
  %arrayidx227 = getelementptr inbounds i8*, i8** %141, i64 %140
  %142 = load i8*, i8** %arrayidx227, align 8
  %143 = load i64, i64* %reg, align 8
  %144 = load i8**, i8*** %best_regstart, align 8
  %arrayidx228 = getelementptr inbounds i8*, i8** %144, i64 %143
  store i8* %142, i8** %arrayidx228, align 8
  %145 = load i64, i64* %reg, align 8
  %146 = load i8**, i8*** %regend, align 8
  %arrayidx229 = getelementptr inbounds i8*, i8** %146, i64 %145
  %147 = load i8*, i8** %arrayidx229, align 8
  %148 = load i64, i64* %reg, align 8
  %149 = load i8**, i8*** %best_regend, align 8
  %arrayidx230 = getelementptr inbounds i8*, i8** %149, i64 %148
  store i8* %147, i8** %arrayidx230, align 8
  br label %for.inc.231

for.inc.231:                                      ; preds = %for.body.226
  %150 = load i64, i64* %reg, align 8
  %inc232 = add i64 %150, 1
  store i64 %inc232, i64* %reg, align 8
  br label %for.cond.223

for.end.233:                                      ; preds = %for.cond.223
  br label %if.end.234

if.end.234:                                       ; preds = %for.end.233, %lor.lhs.false.219
  br label %fail

if.else.235:                                      ; preds = %if.end.213
  %151 = load i32, i32* %best_regs_set, align 4
  %tobool236 = icmp ne i32 %151, 0
  br i1 %tobool236, label %land.lhs.true.237, label %if.end.260

land.lhs.true.237:                                ; preds = %if.else.235
  %152 = load i8, i8* %best_match_p, align 1
  %tobool238 = icmp ne i8 %152, 0
  br i1 %tobool238, label %if.end.260, label %if.then.239

if.then.239:                                      ; preds = %land.lhs.true.237
  br label %restore_best_regs

restore_best_regs:                                ; preds = %if.then.5058, %if.then.239
  %153 = load i8*, i8** %match_end, align 8
  store i8* %153, i8** %d, align 8
  %154 = load i8*, i8** %d, align 8
  %155 = load i8*, i8** %string1.addr, align 8
  %cmp240 = icmp uge i8* %154, %155
  br i1 %cmp240, label %land.lhs.true.242, label %cond.false.246

land.lhs.true.242:                                ; preds = %restore_best_regs
  %156 = load i8*, i8** %d, align 8
  %157 = load i8*, i8** %end1, align 8
  %cmp243 = icmp ule i8* %156, %157
  br i1 %cmp243, label %cond.true.245, label %cond.false.246

cond.true.245:                                    ; preds = %land.lhs.true.242
  %158 = load i8*, i8** %end_match_1, align 8
  br label %cond.end.247

cond.false.246:                                   ; preds = %land.lhs.true.242, %restore_best_regs
  %159 = load i8*, i8** %end_match_2, align 8
  br label %cond.end.247

cond.end.247:                                     ; preds = %cond.false.246, %cond.true.245
  %cond248 = phi i8* [ %158, %cond.true.245 ], [ %159, %cond.false.246 ]
  store i8* %cond248, i8** %dend, align 8
  store i64 1, i64* %reg, align 8
  br label %for.cond.249

for.cond.249:                                     ; preds = %for.inc.257, %cond.end.247
  %160 = load i64, i64* %reg, align 8
  %161 = load i64, i64* %num_regs, align 8
  %cmp250 = icmp ult i64 %160, %161
  br i1 %cmp250, label %for.body.252, label %for.end.259

for.body.252:                                     ; preds = %for.cond.249
  %162 = load i64, i64* %reg, align 8
  %163 = load i8**, i8*** %best_regstart, align 8
  %arrayidx253 = getelementptr inbounds i8*, i8** %163, i64 %162
  %164 = load i8*, i8** %arrayidx253, align 8
  %165 = load i64, i64* %reg, align 8
  %166 = load i8**, i8*** %regstart, align 8
  %arrayidx254 = getelementptr inbounds i8*, i8** %166, i64 %165
  store i8* %164, i8** %arrayidx254, align 8
  %167 = load i64, i64* %reg, align 8
  %168 = load i8**, i8*** %best_regend, align 8
  %arrayidx255 = getelementptr inbounds i8*, i8** %168, i64 %167
  %169 = load i8*, i8** %arrayidx255, align 8
  %170 = load i64, i64* %reg, align 8
  %171 = load i8**, i8*** %regend, align 8
  %arrayidx256 = getelementptr inbounds i8*, i8** %171, i64 %170
  store i8* %169, i8** %arrayidx256, align 8
  br label %for.inc.257

for.inc.257:                                      ; preds = %for.body.252
  %172 = load i64, i64* %reg, align 8
  %inc258 = add i64 %172, 1
  store i64 %inc258, i64* %reg, align 8
  br label %for.cond.249

for.end.259:                                      ; preds = %for.cond.249
  br label %if.end.260

if.end.260:                                       ; preds = %for.end.259, %land.lhs.true.237, %if.else.235
  br label %if.end.261

if.end.261:                                       ; preds = %if.end.260
  br label %if.end.262

if.end.262:                                       ; preds = %if.end.261, %if.then.172
  br label %succeed_label

succeed_label:                                    ; preds = %sw.bb.580, %if.end.262
  %173 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %tobool263 = icmp ne %struct.re_registers* %173, null
  br i1 %tobool263, label %land.lhs.true.264, label %if.end.528

land.lhs.true.264:                                ; preds = %succeed_label
  %174 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %174, i32 0, i32 7
  %bf.load265 = load i16, i16* %no_sub, align 8
  %bf.lshr266 = lshr i16 %bf.load265, 4
  %bf.clear267 = and i16 %bf.lshr266, 1
  %bf.cast268 = zext i16 %bf.clear267 to i32
  %tobool269 = icmp ne i32 %bf.cast268, 0
  br i1 %tobool269, label %if.end.528, label %if.then.270

if.then.270:                                      ; preds = %land.lhs.true.264
  %175 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %175, i32 0, i32 7
  %bf.load271 = load i16, i16* %regs_allocated, align 8
  %bf.lshr272 = lshr i16 %bf.load271, 1
  %bf.clear273 = and i16 %bf.lshr272, 3
  %bf.cast274 = zext i16 %bf.clear273 to i32
  %cmp275 = icmp eq i32 %bf.cast274, 0
  br i1 %cmp275, label %if.then.277, label %if.else.337

if.then.277:                                      ; preds = %if.then.270
  %176 = load i64, i64* %num_regs, align 8
  %add278 = add i64 %176, 1
  %cmp279 = icmp ugt i64 30, %add278
  br i1 %cmp279, label %cond.true.281, label %cond.false.282

cond.true.281:                                    ; preds = %if.then.277
  br label %cond.end.284

cond.false.282:                                   ; preds = %if.then.277
  %177 = load i64, i64* %num_regs, align 8
  %add283 = add i64 %177, 1
  br label %cond.end.284

cond.end.284:                                     ; preds = %cond.false.282, %cond.true.281
  %cond285 = phi i64 [ 30, %cond.true.281 ], [ %add283, %cond.false.282 ]
  %conv286 = trunc i64 %cond285 to i32
  %178 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs287 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %178, i32 0, i32 0
  store i32 %conv286, i32* %num_regs287, align 4
  %179 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs288 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %179, i32 0, i32 0
  %180 = load i32, i32* %num_regs288, align 4
  %conv289 = zext i32 %180 to i64
  %mul290 = mul i64 %conv289, 8
  %call291 = call noalias i8* @xmalloc(i64 %mul290)
  %181 = bitcast i8* %call291 to i64*
  %182 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start = getelementptr inbounds %struct.re_registers, %struct.re_registers* %182, i32 0, i32 1
  store i64* %181, i64** %start, align 8
  %183 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs292 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %183, i32 0, i32 0
  %184 = load i32, i32* %num_regs292, align 4
  %conv293 = zext i32 %184 to i64
  %mul294 = mul i64 %conv293, 8
  %call295 = call noalias i8* @xmalloc(i64 %mul294)
  %185 = bitcast i8* %call295 to i64*
  %186 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end = getelementptr inbounds %struct.re_registers, %struct.re_registers* %186, i32 0, i32 2
  store i64* %185, i64** %end, align 8
  %187 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start296 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %187, i32 0, i32 1
  %188 = load i64*, i64** %start296, align 8
  %cmp297 = icmp eq i64* %188, null
  br i1 %cmp297, label %if.then.303, label %lor.lhs.false.299

lor.lhs.false.299:                                ; preds = %cond.end.284
  %189 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end300 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %189, i32 0, i32 2
  %190 = load i64*, i64** %end300, align 8
  %cmp301 = icmp eq i64* %190, null
  br i1 %cmp301, label %if.then.303, label %if.end.333

if.then.303:                                      ; preds = %lor.lhs.false.299, %cond.end.284
  br label %do.body.304

do.body.304:                                      ; preds = %if.then.303
  br label %do.body.305

do.body.305:                                      ; preds = %do.body.304
  %191 = load i8**, i8*** %regstart, align 8
  %tobool306 = icmp ne i8** %191, null
  br i1 %tobool306, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %do.body.305
  store i8** null, i8*** %regstart, align 8
  br label %if.end.308

if.end.308:                                       ; preds = %if.then.307, %do.body.305
  br label %do.end.309

do.end.309:                                       ; preds = %if.end.308
  br label %do.body.310

do.body.310:                                      ; preds = %do.end.309
  %192 = load i8**, i8*** %regend, align 8
  %tobool311 = icmp ne i8** %192, null
  br i1 %tobool311, label %if.then.312, label %if.end.313

if.then.312:                                      ; preds = %do.body.310
  store i8** null, i8*** %regend, align 8
  br label %if.end.313

if.end.313:                                       ; preds = %if.then.312, %do.body.310
  br label %do.end.314

do.end.314:                                       ; preds = %if.end.313
  br label %do.body.315

do.body.315:                                      ; preds = %do.end.314
  %193 = load i8**, i8*** %best_regstart, align 8
  %tobool316 = icmp ne i8** %193, null
  br i1 %tobool316, label %if.then.317, label %if.end.318

if.then.317:                                      ; preds = %do.body.315
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.317, %do.body.315
  br label %do.end.319

do.end.319:                                       ; preds = %if.end.318
  br label %do.body.320

do.body.320:                                      ; preds = %do.end.319
  %194 = load i8**, i8*** %best_regend, align 8
  %tobool321 = icmp ne i8** %194, null
  br i1 %tobool321, label %if.then.322, label %if.end.323

if.then.322:                                      ; preds = %do.body.320
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.323

if.end.323:                                       ; preds = %if.then.322, %do.body.320
  br label %do.end.324

do.end.324:                                       ; preds = %if.end.323
  br label %do.body.325

do.body.325:                                      ; preds = %do.end.324
  %195 = load i8, i8* %sa_must_free, align 1
  %tobool326 = trunc i8 %195 to i1
  br i1 %tobool326, label %if.then.327, label %if.end.330

if.then.327:                                      ; preds = %do.body.325
  store i8 0, i8* %sa_must_free, align 1
  %196 = load i64, i64* %sa_count, align 8
  %call328 = call i64 @builtin_lisp_symbol(i32 0)
  %call329 = call i64 @unbind_to(i64 %196, i64 %call328)
  br label %if.end.330

if.end.330:                                       ; preds = %if.then.327, %do.body.325
  br label %do.end.331

do.end.331:                                       ; preds = %if.end.330
  br label %do.end.332

do.end.332:                                       ; preds = %do.end.331
  store i64 -2, i64* %retval
  br label %return

if.end.333:                                       ; preds = %lor.lhs.false.299
  %197 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated334 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %197, i32 0, i32 7
  %bf.load335 = load i16, i16* %regs_allocated334, align 8
  %bf.clear336 = and i16 %bf.load335, -7
  %bf.set = or i16 %bf.clear336, 2
  store i16 %bf.set, i16* %regs_allocated334, align 8
  br label %if.end.408

if.else.337:                                      ; preds = %if.then.270
  %198 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated338 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %198, i32 0, i32 7
  %bf.load339 = load i16, i16* %regs_allocated338, align 8
  %bf.lshr340 = lshr i16 %bf.load339, 1
  %bf.clear341 = and i16 %bf.lshr340, 3
  %bf.cast342 = zext i16 %bf.clear341 to i32
  %cmp343 = icmp eq i32 %bf.cast342, 1
  br i1 %cmp343, label %if.then.345, label %if.else.406

if.then.345:                                      ; preds = %if.else.337
  %199 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs346 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %199, i32 0, i32 0
  %200 = load i32, i32* %num_regs346, align 4
  %conv347 = zext i32 %200 to i64
  %201 = load i64, i64* %num_regs, align 8
  %add348 = add i64 %201, 1
  %cmp349 = icmp ult i64 %conv347, %add348
  br i1 %cmp349, label %if.then.351, label %if.end.405

if.then.351:                                      ; preds = %if.then.345
  %202 = load i64, i64* %num_regs, align 8
  %add352 = add i64 %202, 1
  %conv353 = trunc i64 %add352 to i32
  %203 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs354 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %203, i32 0, i32 0
  store i32 %conv353, i32* %num_regs354, align 4
  %204 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start355 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %204, i32 0, i32 1
  %205 = load i64*, i64** %start355, align 8
  %206 = bitcast i64* %205 to i8*
  %207 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs356 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %207, i32 0, i32 0
  %208 = load i32, i32* %num_regs356, align 4
  %conv357 = zext i32 %208 to i64
  %mul358 = mul i64 %conv357, 8
  %call359 = call i8* @xrealloc(i8* %206, i64 %mul358)
  %209 = bitcast i8* %call359 to i64*
  %210 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start360 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %210, i32 0, i32 1
  store i64* %209, i64** %start360, align 8
  %211 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end361 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %211, i32 0, i32 2
  %212 = load i64*, i64** %end361, align 8
  %213 = bitcast i64* %212 to i8*
  %214 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs362 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %214, i32 0, i32 0
  %215 = load i32, i32* %num_regs362, align 4
  %conv363 = zext i32 %215 to i64
  %mul364 = mul i64 %conv363, 8
  %call365 = call i8* @xrealloc(i8* %213, i64 %mul364)
  %216 = bitcast i8* %call365 to i64*
  %217 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end366 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %217, i32 0, i32 2
  store i64* %216, i64** %end366, align 8
  %218 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start367 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %218, i32 0, i32 1
  %219 = load i64*, i64** %start367, align 8
  %cmp368 = icmp eq i64* %219, null
  br i1 %cmp368, label %if.then.374, label %lor.lhs.false.370

lor.lhs.false.370:                                ; preds = %if.then.351
  %220 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end371 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %220, i32 0, i32 2
  %221 = load i64*, i64** %end371, align 8
  %cmp372 = icmp eq i64* %221, null
  br i1 %cmp372, label %if.then.374, label %if.end.404

if.then.374:                                      ; preds = %lor.lhs.false.370, %if.then.351
  br label %do.body.375

do.body.375:                                      ; preds = %if.then.374
  br label %do.body.376

do.body.376:                                      ; preds = %do.body.375
  %222 = load i8**, i8*** %regstart, align 8
  %tobool377 = icmp ne i8** %222, null
  br i1 %tobool377, label %if.then.378, label %if.end.379

if.then.378:                                      ; preds = %do.body.376
  store i8** null, i8*** %regstart, align 8
  br label %if.end.379

if.end.379:                                       ; preds = %if.then.378, %do.body.376
  br label %do.end.380

do.end.380:                                       ; preds = %if.end.379
  br label %do.body.381

do.body.381:                                      ; preds = %do.end.380
  %223 = load i8**, i8*** %regend, align 8
  %tobool382 = icmp ne i8** %223, null
  br i1 %tobool382, label %if.then.383, label %if.end.384

if.then.383:                                      ; preds = %do.body.381
  store i8** null, i8*** %regend, align 8
  br label %if.end.384

if.end.384:                                       ; preds = %if.then.383, %do.body.381
  br label %do.end.385

do.end.385:                                       ; preds = %if.end.384
  br label %do.body.386

do.body.386:                                      ; preds = %do.end.385
  %224 = load i8**, i8*** %best_regstart, align 8
  %tobool387 = icmp ne i8** %224, null
  br i1 %tobool387, label %if.then.388, label %if.end.389

if.then.388:                                      ; preds = %do.body.386
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.389

if.end.389:                                       ; preds = %if.then.388, %do.body.386
  br label %do.end.390

do.end.390:                                       ; preds = %if.end.389
  br label %do.body.391

do.body.391:                                      ; preds = %do.end.390
  %225 = load i8**, i8*** %best_regend, align 8
  %tobool392 = icmp ne i8** %225, null
  br i1 %tobool392, label %if.then.393, label %if.end.394

if.then.393:                                      ; preds = %do.body.391
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.394

if.end.394:                                       ; preds = %if.then.393, %do.body.391
  br label %do.end.395

do.end.395:                                       ; preds = %if.end.394
  br label %do.body.396

do.body.396:                                      ; preds = %do.end.395
  %226 = load i8, i8* %sa_must_free, align 1
  %tobool397 = trunc i8 %226 to i1
  br i1 %tobool397, label %if.then.398, label %if.end.401

if.then.398:                                      ; preds = %do.body.396
  store i8 0, i8* %sa_must_free, align 1
  %227 = load i64, i64* %sa_count, align 8
  %call399 = call i64 @builtin_lisp_symbol(i32 0)
  %call400 = call i64 @unbind_to(i64 %227, i64 %call399)
  br label %if.end.401

if.end.401:                                       ; preds = %if.then.398, %do.body.396
  br label %do.end.402

do.end.402:                                       ; preds = %if.end.401
  br label %do.end.403

do.end.403:                                       ; preds = %do.end.402
  store i64 -2, i64* %retval
  br label %return

if.end.404:                                       ; preds = %lor.lhs.false.370
  br label %if.end.405

if.end.405:                                       ; preds = %if.end.404, %if.then.345
  br label %if.end.407

if.else.406:                                      ; preds = %if.else.337
  br label %if.end.407

if.end.407:                                       ; preds = %if.else.406, %if.end.405
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.333
  %228 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs409 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %228, i32 0, i32 0
  %229 = load i32, i32* %num_regs409, align 4
  %cmp410 = icmp ugt i32 %229, 0
  br i1 %cmp410, label %if.then.412, label %if.end.433

if.then.412:                                      ; preds = %if.end.408
  %230 = load i64, i64* %pos.addr, align 8
  %231 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start413 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %231, i32 0, i32 1
  %232 = load i64*, i64** %start413, align 8
  %arrayidx414 = getelementptr inbounds i64, i64* %232, i64 0
  store i64 %230, i64* %arrayidx414, align 8
  %233 = load i64, i64* %size1.addr, align 8
  %tobool415 = icmp ne i64 %233, 0
  br i1 %tobool415, label %land.lhs.true.416, label %cond.false.424

land.lhs.true.416:                                ; preds = %if.then.412
  %234 = load i8*, i8** %string1.addr, align 8
  %235 = load i8*, i8** %d, align 8
  %cmp417 = icmp ule i8* %234, %235
  br i1 %cmp417, label %land.lhs.true.419, label %cond.false.424

land.lhs.true.419:                                ; preds = %land.lhs.true.416
  %236 = load i8*, i8** %d, align 8
  %237 = load i8*, i8** %string1.addr, align 8
  %238 = load i64, i64* %size1.addr, align 8
  %add.ptr420 = getelementptr inbounds i8, i8* %237, i64 %238
  %cmp421 = icmp ule i8* %236, %add.ptr420
  br i1 %cmp421, label %cond.true.423, label %cond.false.424

cond.true.423:                                    ; preds = %land.lhs.true.419
  %239 = load i8*, i8** %d, align 8
  %240 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %239 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %240 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %cond.end.429

cond.false.424:                                   ; preds = %land.lhs.true.419, %land.lhs.true.416, %if.then.412
  %241 = load i8*, i8** %d, align 8
  %242 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast425 = ptrtoint i8* %241 to i64
  %sub.ptr.rhs.cast426 = ptrtoint i8* %242 to i64
  %sub.ptr.sub427 = sub i64 %sub.ptr.lhs.cast425, %sub.ptr.rhs.cast426
  %243 = load i64, i64* %size1.addr, align 8
  %add428 = add nsw i64 %sub.ptr.sub427, %243
  br label %cond.end.429

cond.end.429:                                     ; preds = %cond.false.424, %cond.true.423
  %cond430 = phi i64 [ %sub.ptr.sub, %cond.true.423 ], [ %add428, %cond.false.424 ]
  %244 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end431 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %244, i32 0, i32 2
  %245 = load i64*, i64** %end431, align 8
  %arrayidx432 = getelementptr inbounds i64, i64* %245, i64 0
  store i64 %cond430, i64* %arrayidx432, align 8
  br label %if.end.433

if.end.433:                                       ; preds = %cond.end.429, %if.end.408
  store i64 1, i64* %reg, align 8
  br label %for.cond.434

for.cond.434:                                     ; preds = %for.inc.512, %if.end.433
  %246 = load i64, i64* %reg, align 8
  %247 = load i64, i64* %num_regs, align 8
  %248 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs435 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %248, i32 0, i32 0
  %249 = load i32, i32* %num_regs435, align 4
  %conv436 = zext i32 %249 to i64
  %cmp437 = icmp ult i64 %247, %conv436
  br i1 %cmp437, label %cond.true.439, label %cond.false.440

cond.true.439:                                    ; preds = %for.cond.434
  %250 = load i64, i64* %num_regs, align 8
  br label %cond.end.443

cond.false.440:                                   ; preds = %for.cond.434
  %251 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs441 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %251, i32 0, i32 0
  %252 = load i32, i32* %num_regs441, align 4
  %conv442 = zext i32 %252 to i64
  br label %cond.end.443

cond.end.443:                                     ; preds = %cond.false.440, %cond.true.439
  %cond444 = phi i64 [ %250, %cond.true.439 ], [ %conv442, %cond.false.440 ]
  %cmp445 = icmp ult i64 %246, %cond444
  br i1 %cmp445, label %for.body.447, label %for.end.514

for.body.447:                                     ; preds = %cond.end.443
  %253 = load i64, i64* %reg, align 8
  %254 = load i8**, i8*** %regstart, align 8
  %arrayidx448 = getelementptr inbounds i8*, i8** %254, i64 %253
  %255 = load i8*, i8** %arrayidx448, align 8
  %cmp449 = icmp eq i8* %255, null
  br i1 %cmp449, label %if.then.455, label %lor.lhs.false.451

lor.lhs.false.451:                                ; preds = %for.body.447
  %256 = load i64, i64* %reg, align 8
  %257 = load i8**, i8*** %regend, align 8
  %arrayidx452 = getelementptr inbounds i8*, i8** %257, i64 %256
  %258 = load i8*, i8** %arrayidx452, align 8
  %cmp453 = icmp eq i8* %258, null
  br i1 %cmp453, label %if.then.455, label %if.else.460

if.then.455:                                      ; preds = %lor.lhs.false.451, %for.body.447
  %259 = load i64, i64* %reg, align 8
  %260 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end456 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %260, i32 0, i32 2
  %261 = load i64*, i64** %end456, align 8
  %arrayidx457 = getelementptr inbounds i64, i64* %261, i64 %259
  store i64 -1, i64* %arrayidx457, align 8
  %262 = load i64, i64* %reg, align 8
  %263 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start458 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %263, i32 0, i32 1
  %264 = load i64*, i64** %start458, align 8
  %arrayidx459 = getelementptr inbounds i64, i64* %264, i64 %262
  store i64 -1, i64* %arrayidx459, align 8
  br label %if.end.511

if.else.460:                                      ; preds = %lor.lhs.false.451
  %265 = load i64, i64* %size1.addr, align 8
  %tobool461 = icmp ne i64 %265, 0
  br i1 %tobool461, label %land.lhs.true.462, label %cond.false.476

land.lhs.true.462:                                ; preds = %if.else.460
  %266 = load i8*, i8** %string1.addr, align 8
  %267 = load i64, i64* %reg, align 8
  %268 = load i8**, i8*** %regstart, align 8
  %arrayidx463 = getelementptr inbounds i8*, i8** %268, i64 %267
  %269 = load i8*, i8** %arrayidx463, align 8
  %cmp464 = icmp ule i8* %266, %269
  br i1 %cmp464, label %land.lhs.true.466, label %cond.false.476

land.lhs.true.466:                                ; preds = %land.lhs.true.462
  %270 = load i64, i64* %reg, align 8
  %271 = load i8**, i8*** %regstart, align 8
  %arrayidx467 = getelementptr inbounds i8*, i8** %271, i64 %270
  %272 = load i8*, i8** %arrayidx467, align 8
  %273 = load i8*, i8** %string1.addr, align 8
  %274 = load i64, i64* %size1.addr, align 8
  %add.ptr468 = getelementptr inbounds i8, i8* %273, i64 %274
  %cmp469 = icmp ule i8* %272, %add.ptr468
  br i1 %cmp469, label %cond.true.471, label %cond.false.476

cond.true.471:                                    ; preds = %land.lhs.true.466
  %275 = load i64, i64* %reg, align 8
  %276 = load i8**, i8*** %regstart, align 8
  %arrayidx472 = getelementptr inbounds i8*, i8** %276, i64 %275
  %277 = load i8*, i8** %arrayidx472, align 8
  %278 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast473 = ptrtoint i8* %277 to i64
  %sub.ptr.rhs.cast474 = ptrtoint i8* %278 to i64
  %sub.ptr.sub475 = sub i64 %sub.ptr.lhs.cast473, %sub.ptr.rhs.cast474
  br label %cond.end.482

cond.false.476:                                   ; preds = %land.lhs.true.466, %land.lhs.true.462, %if.else.460
  %279 = load i64, i64* %reg, align 8
  %280 = load i8**, i8*** %regstart, align 8
  %arrayidx477 = getelementptr inbounds i8*, i8** %280, i64 %279
  %281 = load i8*, i8** %arrayidx477, align 8
  %282 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast478 = ptrtoint i8* %281 to i64
  %sub.ptr.rhs.cast479 = ptrtoint i8* %282 to i64
  %sub.ptr.sub480 = sub i64 %sub.ptr.lhs.cast478, %sub.ptr.rhs.cast479
  %283 = load i64, i64* %size1.addr, align 8
  %add481 = add nsw i64 %sub.ptr.sub480, %283
  br label %cond.end.482

cond.end.482:                                     ; preds = %cond.false.476, %cond.true.471
  %cond483 = phi i64 [ %sub.ptr.sub475, %cond.true.471 ], [ %add481, %cond.false.476 ]
  %284 = load i64, i64* %reg, align 8
  %285 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start484 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %285, i32 0, i32 1
  %286 = load i64*, i64** %start484, align 8
  %arrayidx485 = getelementptr inbounds i64, i64* %286, i64 %284
  store i64 %cond483, i64* %arrayidx485, align 8
  %287 = load i64, i64* %size1.addr, align 8
  %tobool486 = icmp ne i64 %287, 0
  br i1 %tobool486, label %land.lhs.true.487, label %cond.false.501

land.lhs.true.487:                                ; preds = %cond.end.482
  %288 = load i8*, i8** %string1.addr, align 8
  %289 = load i64, i64* %reg, align 8
  %290 = load i8**, i8*** %regend, align 8
  %arrayidx488 = getelementptr inbounds i8*, i8** %290, i64 %289
  %291 = load i8*, i8** %arrayidx488, align 8
  %cmp489 = icmp ule i8* %288, %291
  br i1 %cmp489, label %land.lhs.true.491, label %cond.false.501

land.lhs.true.491:                                ; preds = %land.lhs.true.487
  %292 = load i64, i64* %reg, align 8
  %293 = load i8**, i8*** %regend, align 8
  %arrayidx492 = getelementptr inbounds i8*, i8** %293, i64 %292
  %294 = load i8*, i8** %arrayidx492, align 8
  %295 = load i8*, i8** %string1.addr, align 8
  %296 = load i64, i64* %size1.addr, align 8
  %add.ptr493 = getelementptr inbounds i8, i8* %295, i64 %296
  %cmp494 = icmp ule i8* %294, %add.ptr493
  br i1 %cmp494, label %cond.true.496, label %cond.false.501

cond.true.496:                                    ; preds = %land.lhs.true.491
  %297 = load i64, i64* %reg, align 8
  %298 = load i8**, i8*** %regend, align 8
  %arrayidx497 = getelementptr inbounds i8*, i8** %298, i64 %297
  %299 = load i8*, i8** %arrayidx497, align 8
  %300 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast498 = ptrtoint i8* %299 to i64
  %sub.ptr.rhs.cast499 = ptrtoint i8* %300 to i64
  %sub.ptr.sub500 = sub i64 %sub.ptr.lhs.cast498, %sub.ptr.rhs.cast499
  br label %cond.end.507

cond.false.501:                                   ; preds = %land.lhs.true.491, %land.lhs.true.487, %cond.end.482
  %301 = load i64, i64* %reg, align 8
  %302 = load i8**, i8*** %regend, align 8
  %arrayidx502 = getelementptr inbounds i8*, i8** %302, i64 %301
  %303 = load i8*, i8** %arrayidx502, align 8
  %304 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast503 = ptrtoint i8* %303 to i64
  %sub.ptr.rhs.cast504 = ptrtoint i8* %304 to i64
  %sub.ptr.sub505 = sub i64 %sub.ptr.lhs.cast503, %sub.ptr.rhs.cast504
  %305 = load i64, i64* %size1.addr, align 8
  %add506 = add nsw i64 %sub.ptr.sub505, %305
  br label %cond.end.507

cond.end.507:                                     ; preds = %cond.false.501, %cond.true.496
  %cond508 = phi i64 [ %sub.ptr.sub500, %cond.true.496 ], [ %add506, %cond.false.501 ]
  %306 = load i64, i64* %reg, align 8
  %307 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end509 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %307, i32 0, i32 2
  %308 = load i64*, i64** %end509, align 8
  %arrayidx510 = getelementptr inbounds i64, i64* %308, i64 %306
  store i64 %cond508, i64* %arrayidx510, align 8
  br label %if.end.511

if.end.511:                                       ; preds = %cond.end.507, %if.then.455
  br label %for.inc.512

for.inc.512:                                      ; preds = %if.end.511
  %309 = load i64, i64* %reg, align 8
  %inc513 = add i64 %309, 1
  store i64 %inc513, i64* %reg, align 8
  br label %for.cond.434

for.end.514:                                      ; preds = %cond.end.443
  %310 = load i64, i64* %num_regs, align 8
  store i64 %310, i64* %reg, align 8
  br label %for.cond.515

for.cond.515:                                     ; preds = %for.inc.525, %for.end.514
  %311 = load i64, i64* %reg, align 8
  %312 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %num_regs516 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %312, i32 0, i32 0
  %313 = load i32, i32* %num_regs516, align 4
  %conv517 = zext i32 %313 to i64
  %cmp518 = icmp ult i64 %311, %conv517
  br i1 %cmp518, label %for.body.520, label %for.end.527

for.body.520:                                     ; preds = %for.cond.515
  %314 = load i64, i64* %reg, align 8
  %315 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %end521 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %315, i32 0, i32 2
  %316 = load i64*, i64** %end521, align 8
  %arrayidx522 = getelementptr inbounds i64, i64* %316, i64 %314
  store i64 -1, i64* %arrayidx522, align 8
  %317 = load i64, i64* %reg, align 8
  %318 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %start523 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %318, i32 0, i32 1
  %319 = load i64*, i64** %start523, align 8
  %arrayidx524 = getelementptr inbounds i64, i64* %319, i64 %317
  store i64 -1, i64* %arrayidx524, align 8
  br label %for.inc.525

for.inc.525:                                      ; preds = %for.body.520
  %320 = load i64, i64* %reg, align 8
  %inc526 = add i64 %320, 1
  store i64 %inc526, i64* %reg, align 8
  br label %for.cond.515

for.end.527:                                      ; preds = %for.cond.515
  br label %if.end.528

if.end.528:                                       ; preds = %for.end.527, %land.lhs.true.264, %succeed_label
  %321 = load i64, i64* %size1.addr, align 8
  %tobool529 = icmp ne i64 %321, 0
  br i1 %tobool529, label %land.lhs.true.530, label %cond.false.541

land.lhs.true.530:                                ; preds = %if.end.528
  %322 = load i8*, i8** %string1.addr, align 8
  %323 = load i8*, i8** %d, align 8
  %cmp531 = icmp ule i8* %322, %323
  br i1 %cmp531, label %land.lhs.true.533, label %cond.false.541

land.lhs.true.533:                                ; preds = %land.lhs.true.530
  %324 = load i8*, i8** %d, align 8
  %325 = load i8*, i8** %string1.addr, align 8
  %326 = load i64, i64* %size1.addr, align 8
  %add.ptr534 = getelementptr inbounds i8, i8* %325, i64 %326
  %cmp535 = icmp ule i8* %324, %add.ptr534
  br i1 %cmp535, label %cond.true.537, label %cond.false.541

cond.true.537:                                    ; preds = %land.lhs.true.533
  %327 = load i8*, i8** %d, align 8
  %328 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast538 = ptrtoint i8* %327 to i64
  %sub.ptr.rhs.cast539 = ptrtoint i8* %328 to i64
  %sub.ptr.sub540 = sub i64 %sub.ptr.lhs.cast538, %sub.ptr.rhs.cast539
  br label %cond.end.546

cond.false.541:                                   ; preds = %land.lhs.true.533, %land.lhs.true.530, %if.end.528
  %329 = load i8*, i8** %d, align 8
  %330 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast542 = ptrtoint i8* %329 to i64
  %sub.ptr.rhs.cast543 = ptrtoint i8* %330 to i64
  %sub.ptr.sub544 = sub i64 %sub.ptr.lhs.cast542, %sub.ptr.rhs.cast543
  %331 = load i64, i64* %size1.addr, align 8
  %add545 = add nsw i64 %sub.ptr.sub544, %331
  br label %cond.end.546

cond.end.546:                                     ; preds = %cond.false.541, %cond.true.537
  %cond547 = phi i64 [ %sub.ptr.sub540, %cond.true.537 ], [ %add545, %cond.false.541 ]
  %332 = load i64, i64* %pos.addr, align 8
  %sub548 = sub nsw i64 %cond547, %332
  store i64 %sub548, i64* %dcnt, align 8
  br label %do.body.549

do.body.549:                                      ; preds = %cond.end.546
  br label %do.body.550

do.body.550:                                      ; preds = %do.body.549
  %333 = load i8**, i8*** %regstart, align 8
  %tobool551 = icmp ne i8** %333, null
  br i1 %tobool551, label %if.then.552, label %if.end.553

if.then.552:                                      ; preds = %do.body.550
  store i8** null, i8*** %regstart, align 8
  br label %if.end.553

if.end.553:                                       ; preds = %if.then.552, %do.body.550
  br label %do.end.554

do.end.554:                                       ; preds = %if.end.553
  br label %do.body.555

do.body.555:                                      ; preds = %do.end.554
  %334 = load i8**, i8*** %regend, align 8
  %tobool556 = icmp ne i8** %334, null
  br i1 %tobool556, label %if.then.557, label %if.end.558

if.then.557:                                      ; preds = %do.body.555
  store i8** null, i8*** %regend, align 8
  br label %if.end.558

if.end.558:                                       ; preds = %if.then.557, %do.body.555
  br label %do.end.559

do.end.559:                                       ; preds = %if.end.558
  br label %do.body.560

do.body.560:                                      ; preds = %do.end.559
  %335 = load i8**, i8*** %best_regstart, align 8
  %tobool561 = icmp ne i8** %335, null
  br i1 %tobool561, label %if.then.562, label %if.end.563

if.then.562:                                      ; preds = %do.body.560
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.563

if.end.563:                                       ; preds = %if.then.562, %do.body.560
  br label %do.end.564

do.end.564:                                       ; preds = %if.end.563
  br label %do.body.565

do.body.565:                                      ; preds = %do.end.564
  %336 = load i8**, i8*** %best_regend, align 8
  %tobool566 = icmp ne i8** %336, null
  br i1 %tobool566, label %if.then.567, label %if.end.568

if.then.567:                                      ; preds = %do.body.565
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.568

if.end.568:                                       ; preds = %if.then.567, %do.body.565
  br label %do.end.569

do.end.569:                                       ; preds = %if.end.568
  br label %do.body.570

do.body.570:                                      ; preds = %do.end.569
  %337 = load i8, i8* %sa_must_free, align 1
  %tobool571 = trunc i8 %337 to i1
  br i1 %tobool571, label %if.then.572, label %if.end.575

if.then.572:                                      ; preds = %do.body.570
  store i8 0, i8* %sa_must_free, align 1
  %338 = load i64, i64* %sa_count, align 8
  %call573 = call i64 @builtin_lisp_symbol(i32 0)
  %call574 = call i64 @unbind_to(i64 %338, i64 %call573)
  br label %if.end.575

if.end.575:                                       ; preds = %if.then.572, %do.body.570
  br label %do.end.576

do.end.576:                                       ; preds = %if.end.575
  br label %do.end.577

do.end.577:                                       ; preds = %do.end.576
  %339 = load i64, i64* %dcnt, align 8
  store i64 %339, i64* %retval
  br label %return

if.end.578:                                       ; preds = %for.cond.169
  %340 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %340, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %341 = load i8, i8* %340, align 1
  %conv579 = zext i8 %341 to i32
  switch i32 %conv579, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.580
    i32 2, label %sw.bb.581
    i32 3, label %sw.bb.896
    i32 4, label %sw.bb.992
    i32 5, label %sw.bb.992
    i32 6, label %sw.bb.1550
    i32 7, label %sw.bb.1684
    i32 8, label %sw.bb.1688
    i32 9, label %sw.bb.1799
    i32 10, label %sw.bb.1937
    i32 11, label %sw.bb.1959
    i32 12, label %sw.bb.1971
    i32 15, label %sw.bb.1976
    i32 17, label %sw.bb.2110
    i32 16, label %sw.bb.2287
    i32 14, label %sw.bb.2469
    i32 18, label %sw.bb.2603
    i32 13, label %sw.bb.2628
    i32 19, label %sw.bb.2654
    i32 20, label %sw.bb.2806
    i32 21, label %sw.bb.2958
    i32 24, label %sw.bb.3104
    i32 25, label %sw.bb.3104
    i32 22, label %sw.bb.3404
    i32 23, label %sw.bb.3692
    i32 26, label %sw.bb.3975
    i32 27, label %sw.bb.4230
    i32 28, label %sw.bb.4481
    i32 29, label %sw.bb.4481
    i32 30, label %sw.bb.4617
    i32 31, label %sw.bb.4642
    i32 32, label %sw.bb.4672
    i32 33, label %sw.bb.4702
    i32 34, label %sw.bb.4702
  ]

sw.bb:                                            ; preds = %if.end.578
  br label %sw.epilog

sw.bb.580:                                        ; preds = %if.end.578
  br label %succeed_label

sw.bb.581:                                        ; preds = %if.end.578
  %342 = load i8*, i8** %p, align 8
  %incdec.ptr582 = getelementptr inbounds i8, i8* %342, i32 1
  store i8* %incdec.ptr582, i8** %p, align 8
  %343 = load i8, i8* %342, align 1
  %conv583 = zext i8 %343 to i32
  store i32 %conv583, i32* %mcnt, align 4
  %344 = load i8*, i8** %d, align 8
  store i8* %344, i8** %dfail, align 8
  %345 = load i8, i8* %target_multibyte, align 1
  %tobool584 = icmp ne i8 %345, 0
  br i1 %tobool584, label %if.then.585, label %if.else.737

if.then.585:                                      ; preds = %sw.bb.581
  br label %do.body.586

do.body.586:                                      ; preds = %do.cond, %if.then.585
  br label %while.cond

while.cond:                                       ; preds = %if.end.592, %do.body.586
  %346 = load i8*, i8** %d, align 8
  %347 = load i8*, i8** %dend, align 8
  %cmp587 = icmp eq i8* %346, %347
  br i1 %cmp587, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %348 = load i8*, i8** %dend, align 8
  %349 = load i8*, i8** %end_match_2, align 8
  %cmp589 = icmp eq i8* %348, %349
  br i1 %cmp589, label %if.then.591, label %if.end.592

if.then.591:                                      ; preds = %while.body
  br label %fail

if.end.592:                                       ; preds = %while.body
  %350 = load i8*, i8** %string2.addr, align 8
  store i8* %350, i8** %d, align 8
  %351 = load i8*, i8** %end_match_2, align 8
  store i8* %351, i8** %dend, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %352 = load i8, i8* %multibyte, align 1
  %tobool593 = icmp ne i8 %352, 0
  br i1 %tobool593, label %if.then.594, label %if.else.646

if.then.594:                                      ; preds = %while.end
  %353 = load i8*, i8** %p, align 8
  %arrayidx595 = getelementptr inbounds i8, i8* %353, i64 0
  %354 = load i8, i8* %arrayidx595, align 1
  %conv596 = zext i8 %354 to i32
  %and = and i32 %conv596, 128
  %tobool597 = icmp ne i32 %and, 0
  br i1 %tobool597, label %cond.false.601, label %cond.true.598

cond.true.598:                                    ; preds = %if.then.594
  store i32 1, i32* %pat_charlen, align 4
  %355 = load i8*, i8** %p, align 8
  %arrayidx599 = getelementptr inbounds i8, i8* %355, i64 0
  %356 = load i8, i8* %arrayidx599, align 1
  %conv600 = zext i8 %356 to i32
  br label %cond.end.644

cond.false.601:                                   ; preds = %if.then.594
  %357 = load i8*, i8** %p, align 8
  %arrayidx602 = getelementptr inbounds i8, i8* %357, i64 0
  %358 = load i8, i8* %arrayidx602, align 1
  %conv603 = zext i8 %358 to i32
  %and604 = and i32 %conv603, 32
  %tobool605 = icmp ne i32 %and604, 0
  br i1 %tobool605, label %cond.false.619, label %cond.true.606

cond.true.606:                                    ; preds = %cond.false.601
  store i32 2, i32* %pat_charlen, align 4
  %359 = load i8*, i8** %p, align 8
  %arrayidx607 = getelementptr inbounds i8, i8* %359, i64 0
  %360 = load i8, i8* %arrayidx607, align 1
  %conv608 = zext i8 %360 to i32
  %and609 = and i32 %conv608, 31
  %shl = shl i32 %and609, 6
  %361 = load i8*, i8** %p, align 8
  %arrayidx610 = getelementptr inbounds i8, i8* %361, i64 1
  %362 = load i8, i8* %arrayidx610, align 1
  %conv611 = zext i8 %362 to i32
  %and612 = and i32 %conv611, 63
  %or = or i32 %shl, %and612
  %363 = load i8*, i8** %p, align 8
  %arrayidx613 = getelementptr inbounds i8, i8* %363, i64 0
  %364 = load i8, i8* %arrayidx613, align 1
  %conv614 = zext i8 %364 to i32
  %cmp615 = icmp slt i32 %conv614, 194
  %cond617 = select i1 %cmp615, i32 4194176, i32 0
  %add618 = add nsw i32 %or, %cond617
  br label %cond.end.642

cond.false.619:                                   ; preds = %cond.false.601
  %365 = load i8*, i8** %p, align 8
  %arrayidx620 = getelementptr inbounds i8, i8* %365, i64 0
  %366 = load i8, i8* %arrayidx620, align 1
  %conv621 = zext i8 %366 to i32
  %and622 = and i32 %conv621, 16
  %tobool623 = icmp ne i32 %and622, 0
  br i1 %tobool623, label %cond.false.638, label %cond.true.624

cond.true.624:                                    ; preds = %cond.false.619
  store i32 3, i32* %pat_charlen, align 4
  %367 = load i8*, i8** %p, align 8
  %arrayidx625 = getelementptr inbounds i8, i8* %367, i64 0
  %368 = load i8, i8* %arrayidx625, align 1
  %conv626 = zext i8 %368 to i32
  %and627 = and i32 %conv626, 15
  %shl628 = shl i32 %and627, 12
  %369 = load i8*, i8** %p, align 8
  %arrayidx629 = getelementptr inbounds i8, i8* %369, i64 1
  %370 = load i8, i8* %arrayidx629, align 1
  %conv630 = zext i8 %370 to i32
  %and631 = and i32 %conv630, 63
  %shl632 = shl i32 %and631, 6
  %or633 = or i32 %shl628, %shl632
  %371 = load i8*, i8** %p, align 8
  %arrayidx634 = getelementptr inbounds i8, i8* %371, i64 2
  %372 = load i8, i8* %arrayidx634, align 1
  %conv635 = zext i8 %372 to i32
  %and636 = and i32 %conv635, 63
  %or637 = or i32 %or633, %and636
  br label %cond.end.640

cond.false.638:                                   ; preds = %cond.false.619
  %373 = load i8*, i8** %p, align 8
  %call639 = call i32 @string_char(i8* %373, i8** null, i32* %pat_charlen)
  br label %cond.end.640

cond.end.640:                                     ; preds = %cond.false.638, %cond.true.624
  %cond641 = phi i32 [ %or637, %cond.true.624 ], [ %call639, %cond.false.638 ]
  br label %cond.end.642

cond.end.642:                                     ; preds = %cond.end.640, %cond.true.606
  %cond643 = phi i32 [ %add618, %cond.true.606 ], [ %cond641, %cond.end.640 ]
  br label %cond.end.644

cond.end.644:                                     ; preds = %cond.end.642, %cond.true.598
  %cond645 = phi i32 [ %conv600, %cond.true.598 ], [ %cond643, %cond.end.642 ]
  store i32 %cond645, i32* %pat_ch, align 4
  br label %if.end.664

if.else.646:                                      ; preds = %while.end
  br i1 true, label %cond.true.647, label %cond.false.652

cond.true.647:                                    ; preds = %if.else.646
  %374 = load i8*, i8** %p, align 8
  %375 = load i8, i8* %374, align 1
  %conv648 = zext i8 %375 to i32
  %add649 = add i32 %conv648, 0
  %cmp650 = icmp ult i32 %add649, 128
  br i1 %cmp650, label %cond.true.657, label %cond.false.659

cond.false.652:                                   ; preds = %if.else.646
  %376 = load i8*, i8** %p, align 8
  %377 = load i8, i8* %376, align 1
  %conv653 = zext i8 %377 to i64
  %add654 = add i64 %conv653, 0
  %cmp655 = icmp ult i64 %add654, 128
  br i1 %cmp655, label %cond.true.657, label %cond.false.659

cond.true.657:                                    ; preds = %cond.false.652, %cond.true.647
  %378 = load i8*, i8** %p, align 8
  %379 = load i8, i8* %378, align 1
  %conv658 = zext i8 %379 to i32
  br label %cond.end.662

cond.false.659:                                   ; preds = %cond.false.652, %cond.true.647
  %380 = load i8*, i8** %p, align 8
  %381 = load i8, i8* %380, align 1
  %conv660 = zext i8 %381 to i32
  %add661 = add nsw i32 %conv660, 4194048
  br label %cond.end.662

cond.end.662:                                     ; preds = %cond.false.659, %cond.true.657
  %cond663 = phi i32 [ %conv658, %cond.true.657 ], [ %add661, %cond.false.659 ]
  store i32 %cond663, i32* %pat_ch, align 4
  store i32 1, i32* %pat_charlen, align 4
  br label %if.end.664

if.end.664:                                       ; preds = %cond.end.662, %cond.end.644
  %382 = load i8*, i8** %d, align 8
  %arrayidx665 = getelementptr inbounds i8, i8* %382, i64 0
  %383 = load i8, i8* %arrayidx665, align 1
  %conv666 = zext i8 %383 to i32
  %and667 = and i32 %conv666, 128
  %tobool668 = icmp ne i32 %and667, 0
  br i1 %tobool668, label %cond.false.672, label %cond.true.669

cond.true.669:                                    ; preds = %if.end.664
  store i32 1, i32* %buf_charlen, align 4
  %384 = load i8*, i8** %d, align 8
  %arrayidx670 = getelementptr inbounds i8, i8* %384, i64 0
  %385 = load i8, i8* %arrayidx670, align 1
  %conv671 = zext i8 %385 to i32
  br label %cond.end.717

cond.false.672:                                   ; preds = %if.end.664
  %386 = load i8*, i8** %d, align 8
  %arrayidx673 = getelementptr inbounds i8, i8* %386, i64 0
  %387 = load i8, i8* %arrayidx673, align 1
  %conv674 = zext i8 %387 to i32
  %and675 = and i32 %conv674, 32
  %tobool676 = icmp ne i32 %and675, 0
  br i1 %tobool676, label %cond.false.692, label %cond.true.677

cond.true.677:                                    ; preds = %cond.false.672
  store i32 2, i32* %buf_charlen, align 4
  %388 = load i8*, i8** %d, align 8
  %arrayidx678 = getelementptr inbounds i8, i8* %388, i64 0
  %389 = load i8, i8* %arrayidx678, align 1
  %conv679 = zext i8 %389 to i32
  %and680 = and i32 %conv679, 31
  %shl681 = shl i32 %and680, 6
  %390 = load i8*, i8** %d, align 8
  %arrayidx682 = getelementptr inbounds i8, i8* %390, i64 1
  %391 = load i8, i8* %arrayidx682, align 1
  %conv683 = zext i8 %391 to i32
  %and684 = and i32 %conv683, 63
  %or685 = or i32 %shl681, %and684
  %392 = load i8*, i8** %d, align 8
  %arrayidx686 = getelementptr inbounds i8, i8* %392, i64 0
  %393 = load i8, i8* %arrayidx686, align 1
  %conv687 = zext i8 %393 to i32
  %cmp688 = icmp slt i32 %conv687, 194
  %cond690 = select i1 %cmp688, i32 4194176, i32 0
  %add691 = add nsw i32 %or685, %cond690
  br label %cond.end.715

cond.false.692:                                   ; preds = %cond.false.672
  %394 = load i8*, i8** %d, align 8
  %arrayidx693 = getelementptr inbounds i8, i8* %394, i64 0
  %395 = load i8, i8* %arrayidx693, align 1
  %conv694 = zext i8 %395 to i32
  %and695 = and i32 %conv694, 16
  %tobool696 = icmp ne i32 %and695, 0
  br i1 %tobool696, label %cond.false.711, label %cond.true.697

cond.true.697:                                    ; preds = %cond.false.692
  store i32 3, i32* %buf_charlen, align 4
  %396 = load i8*, i8** %d, align 8
  %arrayidx698 = getelementptr inbounds i8, i8* %396, i64 0
  %397 = load i8, i8* %arrayidx698, align 1
  %conv699 = zext i8 %397 to i32
  %and700 = and i32 %conv699, 15
  %shl701 = shl i32 %and700, 12
  %398 = load i8*, i8** %d, align 8
  %arrayidx702 = getelementptr inbounds i8, i8* %398, i64 1
  %399 = load i8, i8* %arrayidx702, align 1
  %conv703 = zext i8 %399 to i32
  %and704 = and i32 %conv703, 63
  %shl705 = shl i32 %and704, 6
  %or706 = or i32 %shl701, %shl705
  %400 = load i8*, i8** %d, align 8
  %arrayidx707 = getelementptr inbounds i8, i8* %400, i64 2
  %401 = load i8, i8* %arrayidx707, align 1
  %conv708 = zext i8 %401 to i32
  %and709 = and i32 %conv708, 63
  %or710 = or i32 %or706, %and709
  br label %cond.end.713

cond.false.711:                                   ; preds = %cond.false.692
  %402 = load i8*, i8** %d, align 8
  %call712 = call i32 @string_char(i8* %402, i8** null, i32* %buf_charlen)
  br label %cond.end.713

cond.end.713:                                     ; preds = %cond.false.711, %cond.true.697
  %cond714 = phi i32 [ %or710, %cond.true.697 ], [ %call712, %cond.false.711 ]
  br label %cond.end.715

cond.end.715:                                     ; preds = %cond.end.713, %cond.true.677
  %cond716 = phi i32 [ %add691, %cond.true.677 ], [ %cond714, %cond.end.713 ]
  br label %cond.end.717

cond.end.717:                                     ; preds = %cond.end.715, %cond.true.669
  %cond718 = phi i32 [ %conv671, %cond.true.669 ], [ %cond716, %cond.end.715 ]
  store i32 %cond718, i32* %buf_ch, align 4
  %403 = load i64, i64* %translate, align 8
  %cmp719 = icmp eq i64 %403, 2
  br i1 %cmp719, label %cond.false.723, label %cond.true.721

cond.true.721:                                    ; preds = %cond.end.717
  %404 = load i64, i64* %translate, align 8
  %405 = load i32, i32* %buf_ch, align 4
  %call722 = call i32 @char_table_translate(i64 %404, i32 %405)
  br label %cond.end.724

cond.false.723:                                   ; preds = %cond.end.717
  %406 = load i32, i32* %buf_ch, align 4
  br label %cond.end.724

cond.end.724:                                     ; preds = %cond.false.723, %cond.true.721
  %cond725 = phi i32 [ %call722, %cond.true.721 ], [ %406, %cond.false.723 ]
  %407 = load i32, i32* %pat_ch, align 4
  %cmp726 = icmp ne i32 %cond725, %407
  br i1 %cmp726, label %if.then.728, label %if.end.729

if.then.728:                                      ; preds = %cond.end.724
  %408 = load i8*, i8** %dfail, align 8
  store i8* %408, i8** %d, align 8
  br label %fail

if.end.729:                                       ; preds = %cond.end.724
  %409 = load i32, i32* %pat_charlen, align 4
  %410 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %409 to i64
  %add.ptr730 = getelementptr inbounds i8, i8* %410, i64 %idx.ext
  store i8* %add.ptr730, i8** %p, align 8
  %411 = load i32, i32* %buf_charlen, align 4
  %412 = load i8*, i8** %d, align 8
  %idx.ext731 = sext i32 %411 to i64
  %add.ptr732 = getelementptr inbounds i8, i8* %412, i64 %idx.ext731
  store i8* %add.ptr732, i8** %d, align 8
  %413 = load i32, i32* %pat_charlen, align 4
  %414 = load i32, i32* %mcnt, align 4
  %sub733 = sub nsw i32 %414, %413
  store i32 %sub733, i32* %mcnt, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end.729
  %415 = load i32, i32* %mcnt, align 4
  %cmp734 = icmp sgt i32 %415, 0
  br i1 %cmp734, label %do.body.586, label %do.end.736

do.end.736:                                       ; preds = %do.cond
  br label %if.end.895

if.else.737:                                      ; preds = %sw.bb.581
  br label %do.body.738

do.body.738:                                      ; preds = %do.cond.892, %if.else.737
  br label %while.cond.742

while.cond.742:                                   ; preds = %if.end.749, %do.body.738
  %416 = load i8*, i8** %d, align 8
  %417 = load i8*, i8** %dend, align 8
  %cmp743 = icmp eq i8* %416, %417
  br i1 %cmp743, label %while.body.745, label %while.end.750

while.body.745:                                   ; preds = %while.cond.742
  %418 = load i8*, i8** %dend, align 8
  %419 = load i8*, i8** %end_match_2, align 8
  %cmp746 = icmp eq i8* %418, %419
  br i1 %cmp746, label %if.then.748, label %if.end.749

if.then.748:                                      ; preds = %while.body.745
  br label %fail

if.end.749:                                       ; preds = %while.body.745
  %420 = load i8*, i8** %string2.addr, align 8
  store i8* %420, i8** %d, align 8
  %421 = load i8*, i8** %end_match_2, align 8
  store i8* %421, i8** %dend, align 8
  br label %while.cond.742

while.end.750:                                    ; preds = %while.cond.742
  %422 = load i8, i8* %multibyte, align 1
  %tobool751 = icmp ne i8 %422, 0
  br i1 %tobool751, label %if.then.752, label %if.else.827

if.then.752:                                      ; preds = %while.end.750
  %423 = load i8*, i8** %p, align 8
  %arrayidx753 = getelementptr inbounds i8, i8* %423, i64 0
  %424 = load i8, i8* %arrayidx753, align 1
  %conv754 = zext i8 %424 to i32
  %and755 = and i32 %conv754, 128
  %tobool756 = icmp ne i32 %and755, 0
  br i1 %tobool756, label %cond.false.760, label %cond.true.757

cond.true.757:                                    ; preds = %if.then.752
  store i32 1, i32* %pat_charlen739, align 4
  %425 = load i8*, i8** %p, align 8
  %arrayidx758 = getelementptr inbounds i8, i8* %425, i64 0
  %426 = load i8, i8* %arrayidx758, align 1
  %conv759 = zext i8 %426 to i32
  br label %cond.end.805

cond.false.760:                                   ; preds = %if.then.752
  %427 = load i8*, i8** %p, align 8
  %arrayidx761 = getelementptr inbounds i8, i8* %427, i64 0
  %428 = load i8, i8* %arrayidx761, align 1
  %conv762 = zext i8 %428 to i32
  %and763 = and i32 %conv762, 32
  %tobool764 = icmp ne i32 %and763, 0
  br i1 %tobool764, label %cond.false.780, label %cond.true.765

cond.true.765:                                    ; preds = %cond.false.760
  store i32 2, i32* %pat_charlen739, align 4
  %429 = load i8*, i8** %p, align 8
  %arrayidx766 = getelementptr inbounds i8, i8* %429, i64 0
  %430 = load i8, i8* %arrayidx766, align 1
  %conv767 = zext i8 %430 to i32
  %and768 = and i32 %conv767, 31
  %shl769 = shl i32 %and768, 6
  %431 = load i8*, i8** %p, align 8
  %arrayidx770 = getelementptr inbounds i8, i8* %431, i64 1
  %432 = load i8, i8* %arrayidx770, align 1
  %conv771 = zext i8 %432 to i32
  %and772 = and i32 %conv771, 63
  %or773 = or i32 %shl769, %and772
  %433 = load i8*, i8** %p, align 8
  %arrayidx774 = getelementptr inbounds i8, i8* %433, i64 0
  %434 = load i8, i8* %arrayidx774, align 1
  %conv775 = zext i8 %434 to i32
  %cmp776 = icmp slt i32 %conv775, 194
  %cond778 = select i1 %cmp776, i32 4194176, i32 0
  %add779 = add nsw i32 %or773, %cond778
  br label %cond.end.803

cond.false.780:                                   ; preds = %cond.false.760
  %435 = load i8*, i8** %p, align 8
  %arrayidx781 = getelementptr inbounds i8, i8* %435, i64 0
  %436 = load i8, i8* %arrayidx781, align 1
  %conv782 = zext i8 %436 to i32
  %and783 = and i32 %conv782, 16
  %tobool784 = icmp ne i32 %and783, 0
  br i1 %tobool784, label %cond.false.799, label %cond.true.785

cond.true.785:                                    ; preds = %cond.false.780
  store i32 3, i32* %pat_charlen739, align 4
  %437 = load i8*, i8** %p, align 8
  %arrayidx786 = getelementptr inbounds i8, i8* %437, i64 0
  %438 = load i8, i8* %arrayidx786, align 1
  %conv787 = zext i8 %438 to i32
  %and788 = and i32 %conv787, 15
  %shl789 = shl i32 %and788, 12
  %439 = load i8*, i8** %p, align 8
  %arrayidx790 = getelementptr inbounds i8, i8* %439, i64 1
  %440 = load i8, i8* %arrayidx790, align 1
  %conv791 = zext i8 %440 to i32
  %and792 = and i32 %conv791, 63
  %shl793 = shl i32 %and792, 6
  %or794 = or i32 %shl789, %shl793
  %441 = load i8*, i8** %p, align 8
  %arrayidx795 = getelementptr inbounds i8, i8* %441, i64 2
  %442 = load i8, i8* %arrayidx795, align 1
  %conv796 = zext i8 %442 to i32
  %and797 = and i32 %conv796, 63
  %or798 = or i32 %or794, %and797
  br label %cond.end.801

cond.false.799:                                   ; preds = %cond.false.780
  %443 = load i8*, i8** %p, align 8
  %call800 = call i32 @string_char(i8* %443, i8** null, i32* %pat_charlen739)
  br label %cond.end.801

cond.end.801:                                     ; preds = %cond.false.799, %cond.true.785
  %cond802 = phi i32 [ %or798, %cond.true.785 ], [ %call800, %cond.false.799 ]
  br label %cond.end.803

cond.end.803:                                     ; preds = %cond.end.801, %cond.true.765
  %cond804 = phi i32 [ %add779, %cond.true.765 ], [ %cond802, %cond.end.801 ]
  br label %cond.end.805

cond.end.805:                                     ; preds = %cond.end.803, %cond.true.757
  %cond806 = phi i32 [ %conv759, %cond.true.757 ], [ %cond804, %cond.end.803 ]
  store i32 %cond806, i32* %pat_ch740, align 4
  br i1 true, label %cond.true.807, label %cond.false.811

cond.true.807:                                    ; preds = %cond.end.805
  %444 = load i32, i32* %pat_ch740, align 4
  %add808 = add i32 %444, 0
  %cmp809 = icmp ult i32 %add808, 128
  br i1 %cmp809, label %cond.true.816, label %cond.false.817

cond.false.811:                                   ; preds = %cond.end.805
  %445 = load i32, i32* %pat_ch740, align 4
  %conv812 = sext i32 %445 to i64
  %add813 = add i64 %conv812, 0
  %cmp814 = icmp ult i64 %add813, 128
  br i1 %cmp814, label %cond.true.816, label %cond.false.817

cond.true.816:                                    ; preds = %cond.false.811, %cond.true.807
  %446 = load i32, i32* %pat_ch740, align 4
  br label %cond.end.825

cond.false.817:                                   ; preds = %cond.false.811, %cond.true.807
  %447 = load i32, i32* %pat_ch740, align 4
  %cmp818 = icmp sgt i32 %447, 4194175
  br i1 %cmp818, label %cond.true.820, label %cond.false.822

cond.true.820:                                    ; preds = %cond.false.817
  %448 = load i32, i32* %pat_ch740, align 4
  %sub821 = sub nsw i32 %448, 4194048
  br label %cond.end.823

cond.false.822:                                   ; preds = %cond.false.817
  br label %cond.end.823

cond.end.823:                                     ; preds = %cond.false.822, %cond.true.820
  %cond824 = phi i32 [ %sub821, %cond.true.820 ], [ -1, %cond.false.822 ]
  br label %cond.end.825

cond.end.825:                                     ; preds = %cond.end.823, %cond.true.816
  %cond826 = phi i32 [ %446, %cond.true.816 ], [ %cond824, %cond.end.823 ]
  store i32 %cond826, i32* %pat_ch740, align 4
  br label %if.end.829

if.else.827:                                      ; preds = %while.end.750
  %449 = load i8*, i8** %p, align 8
  %450 = load i8, i8* %449, align 1
  %conv828 = zext i8 %450 to i32
  store i32 %conv828, i32* %pat_ch740, align 4
  store i32 1, i32* %pat_charlen739, align 4
  br label %if.end.829

if.end.829:                                       ; preds = %if.else.827, %cond.end.825
  br i1 true, label %cond.true.830, label %cond.false.835

cond.true.830:                                    ; preds = %if.end.829
  %451 = load i8*, i8** %d, align 8
  %452 = load i8, i8* %451, align 1
  %conv831 = zext i8 %452 to i32
  %add832 = add i32 %conv831, 0
  %cmp833 = icmp ult i32 %add832, 128
  br i1 %cmp833, label %cond.true.840, label %cond.false.842

cond.false.835:                                   ; preds = %if.end.829
  %453 = load i8*, i8** %d, align 8
  %454 = load i8, i8* %453, align 1
  %conv836 = zext i8 %454 to i64
  %add837 = add i64 %conv836, 0
  %cmp838 = icmp ult i64 %add837, 128
  br i1 %cmp838, label %cond.true.840, label %cond.false.842

cond.true.840:                                    ; preds = %cond.false.835, %cond.true.830
  %455 = load i8*, i8** %d, align 8
  %456 = load i8, i8* %455, align 1
  %conv841 = zext i8 %456 to i32
  br label %cond.end.845

cond.false.842:                                   ; preds = %cond.false.835, %cond.true.830
  %457 = load i8*, i8** %d, align 8
  %458 = load i8, i8* %457, align 1
  %conv843 = zext i8 %458 to i32
  %add844 = add nsw i32 %conv843, 4194048
  br label %cond.end.845

cond.end.845:                                     ; preds = %cond.false.842, %cond.true.840
  %cond846 = phi i32 [ %conv841, %cond.true.840 ], [ %add844, %cond.false.842 ]
  store i32 %cond846, i32* %buf_ch741, align 4
  %459 = load i32, i32* %buf_ch741, align 4
  %cmp847 = icmp sgt i32 %459, 4194175
  br i1 %cmp847, label %if.else.882, label %if.then.849

if.then.849:                                      ; preds = %cond.end.845
  %460 = load i64, i64* %translate, align 8
  %cmp850 = icmp eq i64 %460, 2
  br i1 %cmp850, label %cond.false.854, label %cond.true.852

cond.true.852:                                    ; preds = %if.then.849
  %461 = load i64, i64* %translate, align 8
  %462 = load i32, i32* %buf_ch741, align 4
  %call853 = call i32 @char_table_translate(i64 %461, i32 %462)
  br label %cond.end.855

cond.false.854:                                   ; preds = %if.then.849
  %463 = load i32, i32* %buf_ch741, align 4
  br label %cond.end.855

cond.end.855:                                     ; preds = %cond.false.854, %cond.true.852
  %cond856 = phi i32 [ %call853, %cond.true.852 ], [ %463, %cond.false.854 ]
  store i32 %cond856, i32* %buf_ch741, align 4
  br i1 true, label %cond.true.857, label %cond.false.861

cond.true.857:                                    ; preds = %cond.end.855
  %464 = load i32, i32* %buf_ch741, align 4
  %add858 = add i32 %464, 0
  %cmp859 = icmp ult i32 %add858, 128
  br i1 %cmp859, label %cond.true.866, label %cond.false.867

cond.false.861:                                   ; preds = %cond.end.855
  %465 = load i32, i32* %buf_ch741, align 4
  %conv862 = sext i32 %465 to i64
  %add863 = add i64 %conv862, 0
  %cmp864 = icmp ult i64 %add863, 128
  br i1 %cmp864, label %cond.true.866, label %cond.false.867

cond.true.866:                                    ; preds = %cond.false.861, %cond.true.857
  %466 = load i32, i32* %buf_ch741, align 4
  br label %cond.end.875

cond.false.867:                                   ; preds = %cond.false.861, %cond.true.857
  %467 = load i32, i32* %buf_ch741, align 4
  %cmp868 = icmp sgt i32 %467, 4194175
  br i1 %cmp868, label %cond.true.870, label %cond.false.872

cond.true.870:                                    ; preds = %cond.false.867
  %468 = load i32, i32* %buf_ch741, align 4
  %sub871 = sub nsw i32 %468, 4194048
  br label %cond.end.873

cond.false.872:                                   ; preds = %cond.false.867
  br label %cond.end.873

cond.end.873:                                     ; preds = %cond.false.872, %cond.true.870
  %cond874 = phi i32 [ %sub871, %cond.true.870 ], [ -1, %cond.false.872 ]
  br label %cond.end.875

cond.end.875:                                     ; preds = %cond.end.873, %cond.true.866
  %cond876 = phi i32 [ %466, %cond.true.866 ], [ %cond874, %cond.end.873 ]
  store i32 %cond876, i32* %buf_ch741, align 4
  %469 = load i32, i32* %buf_ch741, align 4
  %cmp877 = icmp slt i32 %469, 0
  br i1 %cmp877, label %if.then.879, label %if.end.881

if.then.879:                                      ; preds = %cond.end.875
  %470 = load i8*, i8** %d, align 8
  %471 = load i8, i8* %470, align 1
  %conv880 = zext i8 %471 to i32
  store i32 %conv880, i32* %buf_ch741, align 4
  br label %if.end.881

if.end.881:                                       ; preds = %if.then.879, %cond.end.875
  br label %if.end.884

if.else.882:                                      ; preds = %cond.end.845
  %472 = load i8*, i8** %d, align 8
  %473 = load i8, i8* %472, align 1
  %conv883 = zext i8 %473 to i32
  store i32 %conv883, i32* %buf_ch741, align 4
  br label %if.end.884

if.end.884:                                       ; preds = %if.else.882, %if.end.881
  %474 = load i32, i32* %buf_ch741, align 4
  %475 = load i32, i32* %pat_ch740, align 4
  %cmp885 = icmp ne i32 %474, %475
  br i1 %cmp885, label %if.then.887, label %if.end.888

if.then.887:                                      ; preds = %if.end.884
  %476 = load i8*, i8** %dfail, align 8
  store i8* %476, i8** %d, align 8
  br label %fail

if.end.888:                                       ; preds = %if.end.884
  %477 = load i32, i32* %pat_charlen739, align 4
  %478 = load i8*, i8** %p, align 8
  %idx.ext889 = sext i32 %477 to i64
  %add.ptr890 = getelementptr inbounds i8, i8* %478, i64 %idx.ext889
  store i8* %add.ptr890, i8** %p, align 8
  %479 = load i8*, i8** %d, align 8
  %incdec.ptr891 = getelementptr inbounds i8, i8* %479, i32 1
  store i8* %incdec.ptr891, i8** %d, align 8
  br label %do.cond.892

do.cond.892:                                      ; preds = %if.end.888
  %480 = load i32, i32* %mcnt, align 4
  %dec = add nsw i32 %480, -1
  store i32 %dec, i32* %mcnt, align 4
  %tobool893 = icmp ne i32 %dec, 0
  br i1 %tobool893, label %do.body.738, label %do.end.894

do.end.894:                                       ; preds = %do.cond.892
  br label %if.end.895

if.end.895:                                       ; preds = %do.end.894, %do.end.736
  br label %sw.epilog

sw.bb.896:                                        ; preds = %if.end.578
  br label %while.cond.899

while.cond.899:                                   ; preds = %if.end.906, %sw.bb.896
  %481 = load i8*, i8** %d, align 8
  %482 = load i8*, i8** %dend, align 8
  %cmp900 = icmp eq i8* %481, %482
  br i1 %cmp900, label %while.body.902, label %while.end.907

while.body.902:                                   ; preds = %while.cond.899
  %483 = load i8*, i8** %dend, align 8
  %484 = load i8*, i8** %end_match_2, align 8
  %cmp903 = icmp eq i8* %483, %484
  br i1 %cmp903, label %if.then.905, label %if.end.906

if.then.905:                                      ; preds = %while.body.902
  br label %fail

if.end.906:                                       ; preds = %while.body.902
  %485 = load i8*, i8** %string2.addr, align 8
  store i8* %485, i8** %d, align 8
  %486 = load i8*, i8** %end_match_2, align 8
  store i8* %486, i8** %dend, align 8
  br label %while.cond.899

while.end.907:                                    ; preds = %while.cond.899
  %487 = load i8, i8* %target_multibyte, align 1
  %conv908 = sext i8 %487 to i32
  %tobool909 = icmp ne i32 %conv908, 0
  br i1 %tobool909, label %cond.true.910, label %cond.false.965

cond.true.910:                                    ; preds = %while.end.907
  %488 = load i8*, i8** %d, align 8
  %arrayidx911 = getelementptr inbounds i8, i8* %488, i64 0
  %489 = load i8, i8* %arrayidx911, align 1
  %conv912 = zext i8 %489 to i32
  %and913 = and i32 %conv912, 128
  %tobool914 = icmp ne i32 %and913, 0
  br i1 %tobool914, label %cond.false.918, label %cond.true.915

cond.true.915:                                    ; preds = %cond.true.910
  store i32 1, i32* %buf_charlen897, align 4
  %490 = load i8*, i8** %d, align 8
  %arrayidx916 = getelementptr inbounds i8, i8* %490, i64 0
  %491 = load i8, i8* %arrayidx916, align 1
  %conv917 = zext i8 %491 to i32
  br label %cond.end.963

cond.false.918:                                   ; preds = %cond.true.910
  %492 = load i8*, i8** %d, align 8
  %arrayidx919 = getelementptr inbounds i8, i8* %492, i64 0
  %493 = load i8, i8* %arrayidx919, align 1
  %conv920 = zext i8 %493 to i32
  %and921 = and i32 %conv920, 32
  %tobool922 = icmp ne i32 %and921, 0
  br i1 %tobool922, label %cond.false.938, label %cond.true.923

cond.true.923:                                    ; preds = %cond.false.918
  store i32 2, i32* %buf_charlen897, align 4
  %494 = load i8*, i8** %d, align 8
  %arrayidx924 = getelementptr inbounds i8, i8* %494, i64 0
  %495 = load i8, i8* %arrayidx924, align 1
  %conv925 = zext i8 %495 to i32
  %and926 = and i32 %conv925, 31
  %shl927 = shl i32 %and926, 6
  %496 = load i8*, i8** %d, align 8
  %arrayidx928 = getelementptr inbounds i8, i8* %496, i64 1
  %497 = load i8, i8* %arrayidx928, align 1
  %conv929 = zext i8 %497 to i32
  %and930 = and i32 %conv929, 63
  %or931 = or i32 %shl927, %and930
  %498 = load i8*, i8** %d, align 8
  %arrayidx932 = getelementptr inbounds i8, i8* %498, i64 0
  %499 = load i8, i8* %arrayidx932, align 1
  %conv933 = zext i8 %499 to i32
  %cmp934 = icmp slt i32 %conv933, 194
  %cond936 = select i1 %cmp934, i32 4194176, i32 0
  %add937 = add nsw i32 %or931, %cond936
  br label %cond.end.961

cond.false.938:                                   ; preds = %cond.false.918
  %500 = load i8*, i8** %d, align 8
  %arrayidx939 = getelementptr inbounds i8, i8* %500, i64 0
  %501 = load i8, i8* %arrayidx939, align 1
  %conv940 = zext i8 %501 to i32
  %and941 = and i32 %conv940, 16
  %tobool942 = icmp ne i32 %and941, 0
  br i1 %tobool942, label %cond.false.957, label %cond.true.943

cond.true.943:                                    ; preds = %cond.false.938
  store i32 3, i32* %buf_charlen897, align 4
  %502 = load i8*, i8** %d, align 8
  %arrayidx944 = getelementptr inbounds i8, i8* %502, i64 0
  %503 = load i8, i8* %arrayidx944, align 1
  %conv945 = zext i8 %503 to i32
  %and946 = and i32 %conv945, 15
  %shl947 = shl i32 %and946, 12
  %504 = load i8*, i8** %d, align 8
  %arrayidx948 = getelementptr inbounds i8, i8* %504, i64 1
  %505 = load i8, i8* %arrayidx948, align 1
  %conv949 = zext i8 %505 to i32
  %and950 = and i32 %conv949, 63
  %shl951 = shl i32 %and950, 6
  %or952 = or i32 %shl947, %shl951
  %506 = load i8*, i8** %d, align 8
  %arrayidx953 = getelementptr inbounds i8, i8* %506, i64 2
  %507 = load i8, i8* %arrayidx953, align 1
  %conv954 = zext i8 %507 to i32
  %and955 = and i32 %conv954, 63
  %or956 = or i32 %or952, %and955
  br label %cond.end.959

cond.false.957:                                   ; preds = %cond.false.938
  %508 = load i8*, i8** %d, align 8
  %call958 = call i32 @string_char(i8* %508, i8** null, i32* %buf_charlen897)
  br label %cond.end.959

cond.end.959:                                     ; preds = %cond.false.957, %cond.true.943
  %cond960 = phi i32 [ %or956, %cond.true.943 ], [ %call958, %cond.false.957 ]
  br label %cond.end.961

cond.end.961:                                     ; preds = %cond.end.959, %cond.true.923
  %cond962 = phi i32 [ %add937, %cond.true.923 ], [ %cond960, %cond.end.959 ]
  br label %cond.end.963

cond.end.963:                                     ; preds = %cond.end.961, %cond.true.915
  %cond964 = phi i32 [ %conv917, %cond.true.915 ], [ %cond962, %cond.end.961 ]
  br label %cond.end.967

cond.false.965:                                   ; preds = %while.end.907
  store i32 1, i32* %buf_charlen897, align 4
  %509 = load i8*, i8** %d, align 8
  %510 = load i8, i8* %509, align 1
  %conv966 = zext i8 %510 to i32
  br label %cond.end.967

cond.end.967:                                     ; preds = %cond.false.965, %cond.end.963
  %cond968 = phi i32 [ %cond964, %cond.end.963 ], [ %conv966, %cond.false.965 ]
  store i32 %cond968, i32* %buf_ch898, align 4
  %511 = load i64, i64* %translate, align 8
  %cmp969 = icmp eq i64 %511, 2
  br i1 %cmp969, label %cond.false.973, label %cond.true.971

cond.true.971:                                    ; preds = %cond.end.967
  %512 = load i64, i64* %translate, align 8
  %513 = load i32, i32* %buf_ch898, align 4
  %call972 = call i32 @char_table_translate(i64 %512, i32 %513)
  br label %cond.end.974

cond.false.973:                                   ; preds = %cond.end.967
  %514 = load i32, i32* %buf_ch898, align 4
  br label %cond.end.974

cond.end.974:                                     ; preds = %cond.false.973, %cond.true.971
  %cond975 = phi i32 [ %call972, %cond.true.971 ], [ %514, %cond.false.973 ]
  store i32 %cond975, i32* %buf_ch898, align 4
  %515 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %syntax = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %515, i32 0, i32 3
  %516 = load i64, i64* %syntax, align 8
  %and976 = and i64 %516, 64
  %tobool977 = icmp ne i64 %and976, 0
  br i1 %tobool977, label %lor.lhs.false.981, label %land.lhs.true.978

land.lhs.true.978:                                ; preds = %cond.end.974
  %517 = load i32, i32* %buf_ch898, align 4
  %cmp979 = icmp eq i32 %517, 10
  br i1 %cmp979, label %if.then.988, label %lor.lhs.false.981

lor.lhs.false.981:                                ; preds = %land.lhs.true.978, %cond.end.974
  %518 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %syntax982 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %518, i32 0, i32 3
  %519 = load i64, i64* %syntax982, align 8
  %and983 = and i64 %519, 128
  %tobool984 = icmp ne i64 %and983, 0
  br i1 %tobool984, label %land.lhs.true.985, label %if.end.989

land.lhs.true.985:                                ; preds = %lor.lhs.false.981
  %520 = load i32, i32* %buf_ch898, align 4
  %cmp986 = icmp eq i32 %520, 0
  br i1 %cmp986, label %if.then.988, label %if.end.989

if.then.988:                                      ; preds = %land.lhs.true.985, %land.lhs.true.978
  br label %fail

if.end.989:                                       ; preds = %land.lhs.true.985, %lor.lhs.false.981
  %521 = load i32, i32* %buf_charlen897, align 4
  %522 = load i8*, i8** %d, align 8
  %idx.ext990 = sext i32 %521 to i64
  %add.ptr991 = getelementptr inbounds i8, i8* %522, i64 %idx.ext990
  store i8* %add.ptr991, i8** %d, align 8
  br label %sw.epilog

sw.bb.992:                                        ; preds = %if.end.578, %if.end.578
  %523 = load i8*, i8** %p, align 8
  %add.ptr993 = getelementptr inbounds i8, i8* %523, i64 -1
  %524 = load i8, i8* %add.ptr993, align 1
  %conv994 = zext i8 %524 to i32
  %cmp995 = icmp eq i32 %conv994, 5
  %conv996 = zext i1 %cmp995 to i32
  %conv997 = trunc i32 %conv996 to i8
  store i8 %conv997, i8* %not, align 1
  store i32 0, i32* %count, align 4
  store i8 0, i8* %unibyte_char, align 1
  %525 = load i8*, i8** %p, align 8
  %arrayidx998 = getelementptr inbounds i8, i8* %525, i64 -1
  %arrayidx999 = getelementptr inbounds i8, i8* %arrayidx998, i64 1
  %526 = load i8, i8* %arrayidx999, align 1
  %conv1000 = zext i8 %526 to i32
  %and1001 = and i32 %conv1000, 128
  store i32 %and1001, i32* %range_table_exists, align 4
  %527 = load i32, i32* %range_table_exists, align 4
  %tobool1002 = icmp ne i32 %527, 0
  br i1 %tobool1002, label %if.then.1003, label %if.end.1012

if.then.1003:                                     ; preds = %sw.bb.992
  %528 = load i8*, i8** %p, align 8
  %arrayidx1004 = getelementptr inbounds i8, i8* %528, i64 -1
  %arrayidx1005 = getelementptr inbounds i8, i8* %arrayidx1004, i64 1
  %529 = load i8, i8* %arrayidx1005, align 1
  %conv1006 = zext i8 %529 to i32
  %and1007 = and i32 %conv1006, 127
  %add1008 = add nsw i32 4, %and1007
  %idxprom = sext i32 %add1008 to i64
  %530 = load i8*, i8** %p, align 8
  %arrayidx1009 = getelementptr inbounds i8, i8* %530, i64 -1
  %arrayidx1010 = getelementptr inbounds i8, i8* %arrayidx1009, i64 %idxprom
  store i8* %arrayidx1010, i8** %range_table, align 8
  %call1011 = call i32 @extract_number_and_incr(i8** %range_table)
  store i32 %call1011, i32* %count, align 4
  br label %if.end.1012

if.end.1012:                                      ; preds = %if.then.1003, %sw.bb.992
  br label %while.cond.1013

while.cond.1013:                                  ; preds = %if.end.1020, %if.end.1012
  %531 = load i8*, i8** %d, align 8
  %532 = load i8*, i8** %dend, align 8
  %cmp1014 = icmp eq i8* %531, %532
  br i1 %cmp1014, label %while.body.1016, label %while.end.1021

while.body.1016:                                  ; preds = %while.cond.1013
  %533 = load i8*, i8** %dend, align 8
  %534 = load i8*, i8** %end_match_2, align 8
  %cmp1017 = icmp eq i8* %533, %534
  br i1 %cmp1017, label %if.then.1019, label %if.end.1020

if.then.1019:                                     ; preds = %while.body.1016
  br label %fail

if.end.1020:                                      ; preds = %while.body.1016
  %535 = load i8*, i8** %string2.addr, align 8
  store i8* %535, i8** %d, align 8
  %536 = load i8*, i8** %end_match_2, align 8
  store i8* %536, i8** %dend, align 8
  br label %while.cond.1013

while.end.1021:                                   ; preds = %while.cond.1013
  %537 = load i8, i8* %target_multibyte, align 1
  %conv1022 = sext i8 %537 to i32
  %tobool1023 = icmp ne i32 %conv1022, 0
  br i1 %tobool1023, label %cond.true.1024, label %cond.false.1079

cond.true.1024:                                   ; preds = %while.end.1021
  %538 = load i8*, i8** %d, align 8
  %arrayidx1025 = getelementptr inbounds i8, i8* %538, i64 0
  %539 = load i8, i8* %arrayidx1025, align 1
  %conv1026 = zext i8 %539 to i32
  %and1027 = and i32 %conv1026, 128
  %tobool1028 = icmp ne i32 %and1027, 0
  br i1 %tobool1028, label %cond.false.1032, label %cond.true.1029

cond.true.1029:                                   ; preds = %cond.true.1024
  store i32 1, i32* %len, align 4
  %540 = load i8*, i8** %d, align 8
  %arrayidx1030 = getelementptr inbounds i8, i8* %540, i64 0
  %541 = load i8, i8* %arrayidx1030, align 1
  %conv1031 = zext i8 %541 to i32
  br label %cond.end.1077

cond.false.1032:                                  ; preds = %cond.true.1024
  %542 = load i8*, i8** %d, align 8
  %arrayidx1033 = getelementptr inbounds i8, i8* %542, i64 0
  %543 = load i8, i8* %arrayidx1033, align 1
  %conv1034 = zext i8 %543 to i32
  %and1035 = and i32 %conv1034, 32
  %tobool1036 = icmp ne i32 %and1035, 0
  br i1 %tobool1036, label %cond.false.1052, label %cond.true.1037

cond.true.1037:                                   ; preds = %cond.false.1032
  store i32 2, i32* %len, align 4
  %544 = load i8*, i8** %d, align 8
  %arrayidx1038 = getelementptr inbounds i8, i8* %544, i64 0
  %545 = load i8, i8* %arrayidx1038, align 1
  %conv1039 = zext i8 %545 to i32
  %and1040 = and i32 %conv1039, 31
  %shl1041 = shl i32 %and1040, 6
  %546 = load i8*, i8** %d, align 8
  %arrayidx1042 = getelementptr inbounds i8, i8* %546, i64 1
  %547 = load i8, i8* %arrayidx1042, align 1
  %conv1043 = zext i8 %547 to i32
  %and1044 = and i32 %conv1043, 63
  %or1045 = or i32 %shl1041, %and1044
  %548 = load i8*, i8** %d, align 8
  %arrayidx1046 = getelementptr inbounds i8, i8* %548, i64 0
  %549 = load i8, i8* %arrayidx1046, align 1
  %conv1047 = zext i8 %549 to i32
  %cmp1048 = icmp slt i32 %conv1047, 194
  %cond1050 = select i1 %cmp1048, i32 4194176, i32 0
  %add1051 = add nsw i32 %or1045, %cond1050
  br label %cond.end.1075

cond.false.1052:                                  ; preds = %cond.false.1032
  %550 = load i8*, i8** %d, align 8
  %arrayidx1053 = getelementptr inbounds i8, i8* %550, i64 0
  %551 = load i8, i8* %arrayidx1053, align 1
  %conv1054 = zext i8 %551 to i32
  %and1055 = and i32 %conv1054, 16
  %tobool1056 = icmp ne i32 %and1055, 0
  br i1 %tobool1056, label %cond.false.1071, label %cond.true.1057

cond.true.1057:                                   ; preds = %cond.false.1052
  store i32 3, i32* %len, align 4
  %552 = load i8*, i8** %d, align 8
  %arrayidx1058 = getelementptr inbounds i8, i8* %552, i64 0
  %553 = load i8, i8* %arrayidx1058, align 1
  %conv1059 = zext i8 %553 to i32
  %and1060 = and i32 %conv1059, 15
  %shl1061 = shl i32 %and1060, 12
  %554 = load i8*, i8** %d, align 8
  %arrayidx1062 = getelementptr inbounds i8, i8* %554, i64 1
  %555 = load i8, i8* %arrayidx1062, align 1
  %conv1063 = zext i8 %555 to i32
  %and1064 = and i32 %conv1063, 63
  %shl1065 = shl i32 %and1064, 6
  %or1066 = or i32 %shl1061, %shl1065
  %556 = load i8*, i8** %d, align 8
  %arrayidx1067 = getelementptr inbounds i8, i8* %556, i64 2
  %557 = load i8, i8* %arrayidx1067, align 1
  %conv1068 = zext i8 %557 to i32
  %and1069 = and i32 %conv1068, 63
  %or1070 = or i32 %or1066, %and1069
  br label %cond.end.1073

cond.false.1071:                                  ; preds = %cond.false.1052
  %558 = load i8*, i8** %d, align 8
  %call1072 = call i32 @string_char(i8* %558, i8** null, i32* %len)
  br label %cond.end.1073

cond.end.1073:                                    ; preds = %cond.false.1071, %cond.true.1057
  %cond1074 = phi i32 [ %or1070, %cond.true.1057 ], [ %call1072, %cond.false.1071 ]
  br label %cond.end.1075

cond.end.1075:                                    ; preds = %cond.end.1073, %cond.true.1037
  %cond1076 = phi i32 [ %add1051, %cond.true.1037 ], [ %cond1074, %cond.end.1073 ]
  br label %cond.end.1077

cond.end.1077:                                    ; preds = %cond.end.1075, %cond.true.1029
  %cond1078 = phi i32 [ %conv1031, %cond.true.1029 ], [ %cond1076, %cond.end.1075 ]
  br label %cond.end.1081

cond.false.1079:                                  ; preds = %while.end.1021
  store i32 1, i32* %len, align 4
  %559 = load i8*, i8** %d, align 8
  %560 = load i8, i8* %559, align 1
  %conv1080 = zext i8 %560 to i32
  br label %cond.end.1081

cond.end.1081:                                    ; preds = %cond.false.1079, %cond.end.1077
  %cond1082 = phi i32 [ %cond1078, %cond.end.1077 ], [ %conv1080, %cond.false.1079 ]
  store i32 %cond1082, i32* %c, align 4
  store i32 %cond1082, i32* %corig, align 4
  %561 = load i8, i8* %target_multibyte, align 1
  %tobool1083 = icmp ne i8 %561, 0
  br i1 %tobool1083, label %if.then.1084, label %if.else.1116

if.then.1084:                                     ; preds = %cond.end.1081
  %562 = load i64, i64* %translate, align 8
  %cmp1085 = icmp eq i64 %562, 2
  br i1 %cmp1085, label %cond.false.1089, label %cond.true.1087

cond.true.1087:                                   ; preds = %if.then.1084
  %563 = load i64, i64* %translate, align 8
  %564 = load i32, i32* %c, align 4
  %call1088 = call i32 @char_table_translate(i64 %563, i32 %564)
  br label %cond.end.1090

cond.false.1089:                                  ; preds = %if.then.1084
  %565 = load i32, i32* %c, align 4
  br label %cond.end.1090

cond.end.1090:                                    ; preds = %cond.false.1089, %cond.true.1087
  %cond1091 = phi i32 [ %call1088, %cond.true.1087 ], [ %565, %cond.false.1089 ]
  store i32 %cond1091, i32* %c, align 4
  br i1 true, label %cond.true.1092, label %cond.false.1096

cond.true.1092:                                   ; preds = %cond.end.1090
  %566 = load i32, i32* %c, align 4
  %add1093 = add i32 %566, 0
  %cmp1094 = icmp ult i32 %add1093, 128
  br i1 %cmp1094, label %cond.true.1101, label %cond.false.1102

cond.false.1096:                                  ; preds = %cond.end.1090
  %567 = load i32, i32* %c, align 4
  %conv1097 = zext i32 %567 to i64
  %add1098 = add i64 %conv1097, 0
  %cmp1099 = icmp ult i64 %add1098, 128
  br i1 %cmp1099, label %cond.true.1101, label %cond.false.1102

cond.true.1101:                                   ; preds = %cond.false.1096, %cond.true.1092
  %568 = load i32, i32* %c, align 4
  br label %cond.end.1110

cond.false.1102:                                  ; preds = %cond.false.1096, %cond.true.1092
  %569 = load i32, i32* %c, align 4
  %cmp1103 = icmp ugt i32 %569, 4194175
  br i1 %cmp1103, label %cond.true.1105, label %cond.false.1107

cond.true.1105:                                   ; preds = %cond.false.1102
  %570 = load i32, i32* %c, align 4
  %sub1106 = sub i32 %570, 4194048
  br label %cond.end.1108

cond.false.1107:                                  ; preds = %cond.false.1102
  br label %cond.end.1108

cond.end.1108:                                    ; preds = %cond.false.1107, %cond.true.1105
  %cond1109 = phi i32 [ %sub1106, %cond.true.1105 ], [ -1, %cond.false.1107 ]
  br label %cond.end.1110

cond.end.1110:                                    ; preds = %cond.end.1108, %cond.true.1101
  %cond1111 = phi i32 [ %568, %cond.true.1101 ], [ %cond1109, %cond.end.1108 ]
  store i32 %cond1111, i32* %c1, align 4
  %571 = load i32, i32* %c1, align 4
  %cmp1112 = icmp sge i32 %571, 0
  br i1 %cmp1112, label %if.then.1114, label %if.end.1115

if.then.1114:                                     ; preds = %cond.end.1110
  store i8 1, i8* %unibyte_char, align 1
  %572 = load i32, i32* %c1, align 4
  store i32 %572, i32* %c, align 4
  br label %if.end.1115

if.end.1115:                                      ; preds = %if.then.1114, %cond.end.1110
  br label %if.end.1168

if.else.1116:                                     ; preds = %cond.end.1081
  br i1 true, label %cond.true.1118, label %cond.false.1122

cond.true.1118:                                   ; preds = %if.else.1116
  %573 = load i32, i32* %c, align 4
  %add1119 = add i32 %573, 0
  %cmp1120 = icmp ult i32 %add1119, 128
  br i1 %cmp1120, label %cond.true.1127, label %cond.false.1128

cond.false.1122:                                  ; preds = %if.else.1116
  %574 = load i32, i32* %c, align 4
  %conv1123 = zext i32 %574 to i64
  %add1124 = add i64 %conv1123, 0
  %cmp1125 = icmp ult i64 %add1124, 128
  br i1 %cmp1125, label %cond.true.1127, label %cond.false.1128

cond.true.1127:                                   ; preds = %cond.false.1122, %cond.true.1118
  %575 = load i32, i32* %c, align 4
  br label %cond.end.1130

cond.false.1128:                                  ; preds = %cond.false.1122, %cond.true.1118
  %576 = load i32, i32* %c, align 4
  %add1129 = add i32 %576, 4194048
  br label %cond.end.1130

cond.end.1130:                                    ; preds = %cond.false.1128, %cond.true.1127
  %cond1131 = phi i32 [ %575, %cond.true.1127 ], [ %add1129, %cond.false.1128 ]
  store i32 %cond1131, i32* %c11117, align 4
  %577 = load i32, i32* %c11117, align 4
  %cmp1132 = icmp sgt i32 %577, 4194175
  br i1 %cmp1132, label %if.else.1166, label %if.then.1134

if.then.1134:                                     ; preds = %cond.end.1130
  %578 = load i64, i64* %translate, align 8
  %cmp1135 = icmp eq i64 %578, 2
  br i1 %cmp1135, label %cond.false.1139, label %cond.true.1137

cond.true.1137:                                   ; preds = %if.then.1134
  %579 = load i64, i64* %translate, align 8
  %580 = load i32, i32* %c11117, align 4
  %call1138 = call i32 @char_table_translate(i64 %579, i32 %580)
  br label %cond.end.1140

cond.false.1139:                                  ; preds = %if.then.1134
  %581 = load i32, i32* %c11117, align 4
  br label %cond.end.1140

cond.end.1140:                                    ; preds = %cond.false.1139, %cond.true.1137
  %cond1141 = phi i32 [ %call1138, %cond.true.1137 ], [ %581, %cond.false.1139 ]
  store i32 %cond1141, i32* %c11117, align 4
  br i1 true, label %cond.true.1142, label %cond.false.1146

cond.true.1142:                                   ; preds = %cond.end.1140
  %582 = load i32, i32* %c11117, align 4
  %add1143 = add i32 %582, 0
  %cmp1144 = icmp ult i32 %add1143, 128
  br i1 %cmp1144, label %cond.true.1151, label %cond.false.1152

cond.false.1146:                                  ; preds = %cond.end.1140
  %583 = load i32, i32* %c11117, align 4
  %conv1147 = sext i32 %583 to i64
  %add1148 = add i64 %conv1147, 0
  %cmp1149 = icmp ult i64 %add1148, 128
  br i1 %cmp1149, label %cond.true.1151, label %cond.false.1152

cond.true.1151:                                   ; preds = %cond.false.1146, %cond.true.1142
  %584 = load i32, i32* %c11117, align 4
  br label %cond.end.1160

cond.false.1152:                                  ; preds = %cond.false.1146, %cond.true.1142
  %585 = load i32, i32* %c11117, align 4
  %cmp1153 = icmp sgt i32 %585, 4194175
  br i1 %cmp1153, label %cond.true.1155, label %cond.false.1157

cond.true.1155:                                   ; preds = %cond.false.1152
  %586 = load i32, i32* %c11117, align 4
  %sub1156 = sub nsw i32 %586, 4194048
  br label %cond.end.1158

cond.false.1157:                                  ; preds = %cond.false.1152
  br label %cond.end.1158

cond.end.1158:                                    ; preds = %cond.false.1157, %cond.true.1155
  %cond1159 = phi i32 [ %sub1156, %cond.true.1155 ], [ -1, %cond.false.1157 ]
  br label %cond.end.1160

cond.end.1160:                                    ; preds = %cond.end.1158, %cond.true.1151
  %cond1161 = phi i32 [ %584, %cond.true.1151 ], [ %cond1159, %cond.end.1158 ]
  store i32 %cond1161, i32* %c11117, align 4
  %587 = load i32, i32* %c11117, align 4
  %cmp1162 = icmp sge i32 %587, 0
  br i1 %cmp1162, label %if.then.1164, label %if.end.1165

if.then.1164:                                     ; preds = %cond.end.1160
  store i8 1, i8* %unibyte_char, align 1
  %588 = load i32, i32* %c11117, align 4
  store i32 %588, i32* %c, align 4
  br label %if.end.1165

if.end.1165:                                      ; preds = %if.then.1164, %cond.end.1160
  br label %if.end.1167

if.else.1166:                                     ; preds = %cond.end.1130
  store i8 1, i8* %unibyte_char, align 1
  br label %if.end.1167

if.end.1167:                                      ; preds = %if.else.1166, %if.end.1165
  br label %if.end.1168

if.end.1168:                                      ; preds = %if.end.1167, %if.end.1115
  %589 = load i8, i8* %unibyte_char, align 1
  %conv1169 = sext i8 %589 to i32
  %tobool1170 = icmp ne i32 %conv1169, 0
  br i1 %tobool1170, label %land.lhs.true.1171, label %if.else.1196

land.lhs.true.1171:                               ; preds = %if.end.1168
  %590 = load i32, i32* %c, align 4
  %cmp1172 = icmp ult i32 %590, 256
  br i1 %cmp1172, label %if.then.1174, label %if.else.1196

if.then.1174:                                     ; preds = %land.lhs.true.1171
  %591 = load i32, i32* %c, align 4
  %592 = load i8*, i8** %p, align 8
  %arrayidx1175 = getelementptr inbounds i8, i8* %592, i64 -1
  %arrayidx1176 = getelementptr inbounds i8, i8* %arrayidx1175, i64 1
  %593 = load i8, i8* %arrayidx1176, align 1
  %conv1177 = zext i8 %593 to i32
  %and1178 = and i32 %conv1177, 127
  %mul1179 = mul nsw i32 %and1178, 8
  %cmp1180 = icmp ult i32 %591, %mul1179
  br i1 %cmp1180, label %land.lhs.true.1182, label %if.end.1195

land.lhs.true.1182:                               ; preds = %if.then.1174
  %594 = load i32, i32* %c, align 4
  %div = udiv i32 %594, 8
  %add1183 = add i32 1, %div
  %idxprom1184 = zext i32 %add1183 to i64
  %595 = load i8*, i8** %p, align 8
  %arrayidx1185 = getelementptr inbounds i8, i8* %595, i64 %idxprom1184
  %596 = load i8, i8* %arrayidx1185, align 1
  %conv1186 = zext i8 %596 to i32
  %597 = load i32, i32* %c, align 4
  %rem = urem i32 %597, 8
  %shl1187 = shl i32 1, %rem
  %and1188 = and i32 %conv1186, %shl1187
  %tobool1189 = icmp ne i32 %and1188, 0
  br i1 %tobool1189, label %if.then.1190, label %if.end.1195

if.then.1190:                                     ; preds = %land.lhs.true.1182
  %598 = load i8, i8* %not, align 1
  %tobool1191 = icmp ne i8 %598, 0
  %lnot1192 = xor i1 %tobool1191, true
  %lnot.ext1193 = zext i1 %lnot1192 to i32
  %conv1194 = trunc i32 %lnot.ext1193 to i8
  store i8 %conv1194, i8* %not, align 1
  br label %if.end.1195

if.end.1195:                                      ; preds = %if.then.1190, %land.lhs.true.1182, %if.then.1174
  br label %if.end.1529

if.else.1196:                                     ; preds = %land.lhs.true.1171, %if.end.1168
  %599 = load i32, i32* %range_table_exists, align 4
  %tobool1197 = icmp ne i32 %599, 0
  br i1 %tobool1197, label %if.then.1198, label %if.end.1528

if.then.1198:                                     ; preds = %if.else.1196
  %600 = load i8*, i8** %p, align 8
  %arrayidx1199 = getelementptr inbounds i8, i8* %600, i64 -1
  %arrayidx1200 = getelementptr inbounds i8, i8* %arrayidx1199, i64 1
  %601 = load i8, i8* %arrayidx1200, align 1
  %conv1201 = zext i8 %601 to i32
  %and1202 = and i32 %conv1201, 127
  %add1203 = add nsw i32 2, %and1202
  %idxprom1204 = sext i32 %add1203 to i64
  %602 = load i8*, i8** %p, align 8
  %arrayidx1205 = getelementptr inbounds i8, i8* %602, i64 -1
  %arrayidx1206 = getelementptr inbounds i8, i8* %arrayidx1205, i64 %idxprom1204
  %603 = load i8, i8* %arrayidx1206, align 1
  %conv1207 = zext i8 %603 to i32
  %604 = load i8*, i8** %p, align 8
  %arrayidx1208 = getelementptr inbounds i8, i8* %604, i64 -1
  %arrayidx1209 = getelementptr inbounds i8, i8* %arrayidx1208, i64 1
  %605 = load i8, i8* %arrayidx1209, align 1
  %conv1210 = zext i8 %605 to i32
  %and1211 = and i32 %conv1210, 127
  %add1212 = add nsw i32 3, %and1211
  %idxprom1213 = sext i32 %add1212 to i64
  %606 = load i8*, i8** %p, align 8
  %arrayidx1214 = getelementptr inbounds i8, i8* %606, i64 -1
  %arrayidx1215 = getelementptr inbounds i8, i8* %arrayidx1214, i64 %idxprom1213
  %607 = load i8, i8* %arrayidx1215, align 1
  %conv1216 = zext i8 %607 to i32
  %mul1217 = mul nsw i32 %conv1216, 256
  %add1218 = add nsw i32 %conv1207, %mul1217
  store i32 %add1218, i32* %class_bits, align 4
  %608 = load i32, i32* %class_bits, align 4
  %and1219 = and i32 %608, 2
  %tobool1220 = icmp ne i32 %and1219, 0
  br i1 %tobool1220, label %land.rhs.1221, label %land.end.1235

land.rhs.1221:                                    ; preds = %if.then.1198
  %609 = load i32, i32* %c, align 4
  %call1222 = call zeroext i1 @lowercasep(i32 %609)
  br i1 %call1222, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.1221
  %610 = load i32, i32* %corig, align 4
  %611 = load i32, i32* %c, align 4
  %cmp1224 = icmp ne i32 %610, %611
  br i1 %cmp1224, label %land.lhs.true.1226, label %land.end.1233

land.lhs.true.1226:                               ; preds = %lor.rhs
  %612 = load i32, i32* %c, align 4
  %613 = load i32, i32* %corig, align 4
  %call1227 = call i32 @upcase(i32 %613)
  %cmp1228 = icmp eq i32 %612, %call1227
  br i1 %cmp1228, label %land.rhs.1230, label %land.end.1233

land.rhs.1230:                                    ; preds = %land.lhs.true.1226
  %614 = load i32, i32* %c, align 4
  %call1231 = call zeroext i1 @uppercasep(i32 %614)
  br label %land.end.1233

land.end.1233:                                    ; preds = %land.rhs.1230, %land.lhs.true.1226, %lor.rhs
  %615 = phi i1 [ false, %land.lhs.true.1226 ], [ false, %lor.rhs ], [ %call1231, %land.rhs.1230 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.1233, %land.rhs.1221
  %616 = phi i1 [ true, %land.rhs.1221 ], [ %615, %land.end.1233 ]
  br label %land.end.1235

land.end.1235:                                    ; preds = %lor.end, %if.then.1198
  %617 = phi i1 [ false, %if.then.1198 ], [ %616, %lor.end ]
  %land.ext1236 = zext i1 %617 to i32
  %618 = load i32, i32* %class_bits, align 4
  %and1237 = and i32 %618, 32
  %or1238 = or i32 %land.ext1236, %and1237
  %619 = load i32, i32* %class_bits, align 4
  %and1239 = and i32 %619, 4
  %tobool1240 = icmp ne i32 %and1239, 0
  br i1 %tobool1240, label %land.rhs.1241, label %land.end.1282

land.rhs.1241:                                    ; preds = %land.end.1235
  %620 = load i32, i32* %c, align 4
  %cmp1242 = icmp ult i32 %620, 128
  br i1 %cmp1242, label %cond.true.1244, label %cond.false.1275

cond.true.1244:                                   ; preds = %land.rhs.1241
  %621 = load i32, i32* %c, align 4
  %cmp1245 = icmp ugt i32 %621, 32
  br i1 %cmp1245, label %land.lhs.true.1247, label %land.end.1273

land.lhs.true.1247:                               ; preds = %cond.true.1244
  %622 = load i32, i32* %c, align 4
  %cmp1248 = icmp ult i32 %622, 127
  br i1 %cmp1248, label %land.rhs.1250, label %land.end.1273

land.rhs.1250:                                    ; preds = %land.lhs.true.1247
  %623 = load i32, i32* %c, align 4
  %cmp1251 = icmp uge i32 %623, 97
  br i1 %cmp1251, label %land.lhs.true.1253, label %lor.lhs.false.1256

land.lhs.true.1253:                               ; preds = %land.rhs.1250
  %624 = load i32, i32* %c, align 4
  %cmp1254 = icmp ule i32 %624, 122
  br i1 %cmp1254, label %lor.end.1270, label %lor.lhs.false.1256

lor.lhs.false.1256:                               ; preds = %land.lhs.true.1253, %land.rhs.1250
  %625 = load i32, i32* %c, align 4
  %cmp1257 = icmp uge i32 %625, 65
  br i1 %cmp1257, label %land.lhs.true.1259, label %lor.rhs.1262

land.lhs.true.1259:                               ; preds = %lor.lhs.false.1256
  %626 = load i32, i32* %c, align 4
  %cmp1260 = icmp ule i32 %626, 90
  br i1 %cmp1260, label %lor.end.1270, label %lor.rhs.1262

lor.rhs.1262:                                     ; preds = %land.lhs.true.1259, %lor.lhs.false.1256
  %627 = load i32, i32* %c, align 4
  %cmp1263 = icmp uge i32 %627, 48
  br i1 %cmp1263, label %land.rhs.1265, label %land.end.1268

land.rhs.1265:                                    ; preds = %lor.rhs.1262
  %628 = load i32, i32* %c, align 4
  %cmp1266 = icmp ule i32 %628, 57
  br label %land.end.1268

land.end.1268:                                    ; preds = %land.rhs.1265, %lor.rhs.1262
  %629 = phi i1 [ false, %lor.rhs.1262 ], [ %cmp1266, %land.rhs.1265 ]
  br label %lor.end.1270

lor.end.1270:                                     ; preds = %land.end.1268, %land.lhs.true.1259, %land.lhs.true.1253
  %630 = phi i1 [ true, %land.lhs.true.1259 ], [ true, %land.lhs.true.1253 ], [ %629, %land.end.1268 ]
  %lnot1271 = xor i1 %630, true
  br label %land.end.1273

land.end.1273:                                    ; preds = %lor.end.1270, %land.lhs.true.1247, %cond.true.1244
  %631 = phi i1 [ false, %land.lhs.true.1247 ], [ false, %cond.true.1244 ], [ %lnot1271, %lor.end.1270 ]
  %land.ext1274 = zext i1 %631 to i32
  br label %cond.end.1279

cond.false.1275:                                  ; preds = %land.rhs.1241
  %632 = load i32, i32* %c, align 4
  %call1276 = call i32 @syntax_property(i32 %632, i1 zeroext true)
  %cmp1277 = icmp ne i32 %call1276, 2
  %conv1278 = zext i1 %cmp1277 to i32
  br label %cond.end.1279

cond.end.1279:                                    ; preds = %cond.false.1275, %land.end.1273
  %cond1280 = phi i32 [ %land.ext1274, %land.end.1273 ], [ %conv1278, %cond.false.1275 ]
  %tobool1281 = icmp ne i32 %cond1280, 0
  br label %land.end.1282

land.end.1282:                                    ; preds = %cond.end.1279, %land.end.1235
  %633 = phi i1 [ false, %land.end.1235 ], [ %tobool1281, %cond.end.1279 ]
  %land.ext1283 = zext i1 %633 to i32
  %or1284 = or i32 %or1238, %land.ext1283
  %634 = load i32, i32* %class_bits, align 4
  %and1285 = and i32 %634, 8
  %tobool1286 = icmp ne i32 %and1285, 0
  br i1 %tobool1286, label %land.rhs.1287, label %land.end.1291

land.rhs.1287:                                    ; preds = %land.end.1282
  %635 = load i32, i32* %c, align 4
  %call1288 = call i32 @syntax_property(i32 %635, i1 zeroext true)
  %cmp1289 = icmp eq i32 %call1288, 0
  br label %land.end.1291

land.end.1291:                                    ; preds = %land.rhs.1287, %land.end.1282
  %636 = phi i1 [ false, %land.end.1282 ], [ %cmp1289, %land.rhs.1287 ]
  %land.ext1292 = zext i1 %636 to i32
  %or1293 = or i32 %or1284, %land.ext1292
  %637 = load i32, i32* %class_bits, align 4
  %and1294 = and i32 %637, 16
  %tobool1295 = icmp ne i32 %and1294, 0
  br i1 %tobool1295, label %land.rhs.1296, label %land.end.1312

land.rhs.1296:                                    ; preds = %land.end.1291
  %638 = load i32, i32* %c, align 4
  %call1297 = call zeroext i1 @uppercasep(i32 %638)
  br i1 %call1297, label %lor.end.1311, label %lor.rhs.1299

lor.rhs.1299:                                     ; preds = %land.rhs.1296
  %639 = load i32, i32* %corig, align 4
  %640 = load i32, i32* %c, align 4
  %cmp1300 = icmp ne i32 %639, %640
  br i1 %cmp1300, label %land.lhs.true.1302, label %land.end.1309

land.lhs.true.1302:                               ; preds = %lor.rhs.1299
  %641 = load i32, i32* %c, align 4
  %642 = load i32, i32* %corig, align 4
  %call1303 = call i32 @downcase(i32 %642)
  %cmp1304 = icmp eq i32 %641, %call1303
  br i1 %cmp1304, label %land.rhs.1306, label %land.end.1309

land.rhs.1306:                                    ; preds = %land.lhs.true.1302
  %643 = load i32, i32* %c, align 4
  %call1307 = call zeroext i1 @lowercasep(i32 %643)
  br label %land.end.1309

land.end.1309:                                    ; preds = %land.rhs.1306, %land.lhs.true.1302, %lor.rhs.1299
  %644 = phi i1 [ false, %land.lhs.true.1302 ], [ false, %lor.rhs.1299 ], [ %call1307, %land.rhs.1306 ]
  br label %lor.end.1311

lor.end.1311:                                     ; preds = %land.end.1309, %land.rhs.1296
  %645 = phi i1 [ true, %land.rhs.1296 ], [ %644, %land.end.1309 ]
  br label %land.end.1312

land.end.1312:                                    ; preds = %lor.end.1311, %land.end.1291
  %646 = phi i1 [ false, %land.end.1291 ], [ %645, %lor.end.1311 ]
  %land.ext1313 = zext i1 %646 to i32
  %or1314 = or i32 %or1293, %land.ext1313
  %647 = load i32, i32* %class_bits, align 4
  %and1315 = and i32 %647, 1
  %tobool1316 = icmp ne i32 %and1315, 0
  br i1 %tobool1316, label %land.rhs.1317, label %land.end.1321

land.rhs.1317:                                    ; preds = %land.end.1312
  %648 = load i32, i32* %c, align 4
  %call1318 = call i32 @syntax_property(i32 %648, i1 zeroext true)
  %cmp1319 = icmp eq i32 %call1318, 2
  br label %land.end.1321

land.end.1321:                                    ; preds = %land.rhs.1317, %land.end.1312
  %649 = phi i1 [ false, %land.end.1312 ], [ %cmp1319, %land.rhs.1317 ]
  %land.ext1322 = zext i1 %649 to i32
  %or1323 = or i32 %or1314, %land.ext1322
  %650 = load i32, i32* %class_bits, align 4
  %and1324 = and i32 %650, 64
  %tobool1325 = icmp ne i32 %and1324, 0
  br i1 %tobool1325, label %land.rhs.1326, label %land.end.1350

land.rhs.1326:                                    ; preds = %land.end.1321
  %651 = load i32, i32* %c, align 4
  %cmp1327 = icmp ult i32 %651, 128
  br i1 %cmp1327, label %cond.true.1329, label %cond.false.1344

cond.true.1329:                                   ; preds = %land.rhs.1326
  %652 = load i32, i32* %c, align 4
  %cmp1330 = icmp uge i32 %652, 97
  br i1 %cmp1330, label %land.lhs.true.1332, label %lor.rhs.1335

land.lhs.true.1332:                               ; preds = %cond.true.1329
  %653 = load i32, i32* %c, align 4
  %cmp1333 = icmp ule i32 %653, 122
  br i1 %cmp1333, label %lor.end.1343, label %lor.rhs.1335

lor.rhs.1335:                                     ; preds = %land.lhs.true.1332, %cond.true.1329
  %654 = load i32, i32* %c, align 4
  %cmp1336 = icmp uge i32 %654, 65
  br i1 %cmp1336, label %land.rhs.1338, label %land.end.1341

land.rhs.1338:                                    ; preds = %lor.rhs.1335
  %655 = load i32, i32* %c, align 4
  %cmp1339 = icmp ule i32 %655, 90
  br label %land.end.1341

land.end.1341:                                    ; preds = %land.rhs.1338, %lor.rhs.1335
  %656 = phi i1 [ false, %lor.rhs.1335 ], [ %cmp1339, %land.rhs.1338 ]
  br label %lor.end.1343

lor.end.1343:                                     ; preds = %land.end.1341, %land.lhs.true.1332
  %657 = phi i1 [ true, %land.lhs.true.1332 ], [ %656, %land.end.1341 ]
  %lor.ext = zext i1 %657 to i32
  br label %cond.end.1347

cond.false.1344:                                  ; preds = %land.rhs.1326
  %658 = load i32, i32* %c, align 4
  %call1345 = call zeroext i1 @alphabeticp(i32 %658)
  %conv1346 = zext i1 %call1345 to i32
  br label %cond.end.1347

cond.end.1347:                                    ; preds = %cond.false.1344, %lor.end.1343
  %cond1348 = phi i32 [ %lor.ext, %lor.end.1343 ], [ %conv1346, %cond.false.1344 ]
  %tobool1349 = icmp ne i32 %cond1348, 0
  br label %land.end.1350

land.end.1350:                                    ; preds = %cond.end.1347, %land.end.1321
  %659 = phi i1 [ false, %land.end.1321 ], [ %tobool1349, %cond.end.1347 ]
  %land.ext1351 = zext i1 %659 to i32
  %or1352 = or i32 %or1323, %land.ext1351
  %660 = load i32, i32* %class_bits, align 4
  %and1353 = and i32 %660, 128
  %tobool1354 = icmp ne i32 %and1353, 0
  br i1 %tobool1354, label %land.rhs.1355, label %land.end.1391

land.rhs.1355:                                    ; preds = %land.end.1350
  %661 = load i32, i32* %c, align 4
  %cmp1356 = icmp ult i32 %661, 128
  br i1 %cmp1356, label %cond.true.1358, label %cond.false.1380

cond.true.1358:                                   ; preds = %land.rhs.1355
  %662 = load i32, i32* %c, align 4
  %cmp1359 = icmp uge i32 %662, 97
  br i1 %cmp1359, label %land.lhs.true.1361, label %lor.lhs.false.1364

land.lhs.true.1361:                               ; preds = %cond.true.1358
  %663 = load i32, i32* %c, align 4
  %cmp1362 = icmp ule i32 %663, 122
  br i1 %cmp1362, label %lor.end.1378, label %lor.lhs.false.1364

lor.lhs.false.1364:                               ; preds = %land.lhs.true.1361, %cond.true.1358
  %664 = load i32, i32* %c, align 4
  %cmp1365 = icmp uge i32 %664, 65
  br i1 %cmp1365, label %land.lhs.true.1367, label %lor.rhs.1370

land.lhs.true.1367:                               ; preds = %lor.lhs.false.1364
  %665 = load i32, i32* %c, align 4
  %cmp1368 = icmp ule i32 %665, 90
  br i1 %cmp1368, label %lor.end.1378, label %lor.rhs.1370

lor.rhs.1370:                                     ; preds = %land.lhs.true.1367, %lor.lhs.false.1364
  %666 = load i32, i32* %c, align 4
  %cmp1371 = icmp uge i32 %666, 48
  br i1 %cmp1371, label %land.rhs.1373, label %land.end.1376

land.rhs.1373:                                    ; preds = %lor.rhs.1370
  %667 = load i32, i32* %c, align 4
  %cmp1374 = icmp ule i32 %667, 57
  br label %land.end.1376

land.end.1376:                                    ; preds = %land.rhs.1373, %lor.rhs.1370
  %668 = phi i1 [ false, %lor.rhs.1370 ], [ %cmp1374, %land.rhs.1373 ]
  br label %lor.end.1378

lor.end.1378:                                     ; preds = %land.end.1376, %land.lhs.true.1367, %land.lhs.true.1361
  %669 = phi i1 [ true, %land.lhs.true.1367 ], [ true, %land.lhs.true.1361 ], [ %668, %land.end.1376 ]
  %lor.ext1379 = zext i1 %669 to i32
  br label %cond.end.1388

cond.false.1380:                                  ; preds = %land.rhs.1355
  %670 = load i32, i32* %c, align 4
  %call1381 = call zeroext i1 @alphabeticp(i32 %670)
  br i1 %call1381, label %lor.end.1386, label %lor.rhs.1383

lor.rhs.1383:                                     ; preds = %cond.false.1380
  %671 = load i32, i32* %c, align 4
  %call1384 = call zeroext i1 @decimalnump(i32 %671)
  br label %lor.end.1386

lor.end.1386:                                     ; preds = %lor.rhs.1383, %cond.false.1380
  %672 = phi i1 [ true, %cond.false.1380 ], [ %call1384, %lor.rhs.1383 ]
  %lor.ext1387 = zext i1 %672 to i32
  br label %cond.end.1388

cond.end.1388:                                    ; preds = %lor.end.1386, %lor.end.1378
  %cond1389 = phi i32 [ %lor.ext1379, %lor.end.1378 ], [ %lor.ext1387, %lor.end.1386 ]
  %tobool1390 = icmp ne i32 %cond1389, 0
  br label %land.end.1391

land.end.1391:                                    ; preds = %cond.end.1388, %land.end.1350
  %673 = phi i1 [ false, %land.end.1350 ], [ %tobool1390, %cond.end.1388 ]
  %land.ext1392 = zext i1 %673 to i32
  %or1393 = or i32 %or1352, %land.ext1392
  %674 = load i32, i32* %class_bits, align 4
  %and1394 = and i32 %674, 256
  %tobool1395 = icmp ne i32 %and1394, 0
  br i1 %tobool1395, label %land.rhs.1396, label %land.end.1427

land.rhs.1396:                                    ; preds = %land.end.1391
  br i1 true, label %cond.true.1397, label %cond.false.1401

cond.true.1397:                                   ; preds = %land.rhs.1396
  %675 = load i32, i32* %c, align 4
  %add1398 = add i32 %675, 0
  %cmp1399 = icmp ult i32 %add1398, 256
  br i1 %cmp1399, label %cond.true.1406, label %cond.false.1421

cond.false.1401:                                  ; preds = %land.rhs.1396
  %676 = load i32, i32* %c, align 4
  %conv1402 = zext i32 %676 to i64
  %add1403 = add i64 %conv1402, 0
  %cmp1404 = icmp ult i64 %add1403, 256
  br i1 %cmp1404, label %cond.true.1406, label %cond.false.1421

cond.true.1406:                                   ; preds = %cond.false.1401, %cond.true.1397
  %677 = load i32, i32* %c, align 4
  %cmp1407 = icmp ugt i32 %677, 32
  br i1 %cmp1407, label %land.rhs.1409, label %land.end.1419

land.rhs.1409:                                    ; preds = %cond.true.1406
  %678 = load i32, i32* %c, align 4
  %cmp1410 = icmp uge i32 %678, 127
  br i1 %cmp1410, label %land.rhs.1412, label %land.end.1415

land.rhs.1412:                                    ; preds = %land.rhs.1409
  %679 = load i32, i32* %c, align 4
  %cmp1413 = icmp ule i32 %679, 160
  br label %land.end.1415

land.end.1415:                                    ; preds = %land.rhs.1412, %land.rhs.1409
  %680 = phi i1 [ false, %land.rhs.1409 ], [ %cmp1413, %land.rhs.1412 ]
  %lnot1417 = xor i1 %680, true
  br label %land.end.1419

land.end.1419:                                    ; preds = %land.end.1415, %cond.true.1406
  %681 = phi i1 [ false, %cond.true.1406 ], [ %lnot1417, %land.end.1415 ]
  %land.ext1420 = zext i1 %681 to i32
  br label %cond.end.1424

cond.false.1421:                                  ; preds = %cond.false.1401, %cond.true.1397
  %682 = load i32, i32* %c, align 4
  %call1422 = call zeroext i1 @graphicp(i32 %682)
  %conv1423 = zext i1 %call1422 to i32
  br label %cond.end.1424

cond.end.1424:                                    ; preds = %cond.false.1421, %land.end.1419
  %cond1425 = phi i32 [ %land.ext1420, %land.end.1419 ], [ %conv1423, %cond.false.1421 ]
  %tobool1426 = icmp ne i32 %cond1425, 0
  br label %land.end.1427

land.end.1427:                                    ; preds = %cond.end.1424, %land.end.1391
  %683 = phi i1 [ false, %land.end.1391 ], [ %tobool1426, %cond.end.1424 ]
  %land.ext1428 = zext i1 %683 to i32
  %or1429 = or i32 %or1393, %land.ext1428
  %684 = load i32, i32* %class_bits, align 4
  %and1430 = and i32 %684, 512
  %tobool1431 = icmp ne i32 %and1430, 0
  br i1 %tobool1431, label %land.rhs.1432, label %land.end.1463

land.rhs.1432:                                    ; preds = %land.end.1427
  br i1 true, label %cond.true.1433, label %cond.false.1437

cond.true.1433:                                   ; preds = %land.rhs.1432
  %685 = load i32, i32* %c, align 4
  %add1434 = add i32 %685, 0
  %cmp1435 = icmp ult i32 %add1434, 256
  br i1 %cmp1435, label %cond.true.1442, label %cond.false.1457

cond.false.1437:                                  ; preds = %land.rhs.1432
  %686 = load i32, i32* %c, align 4
  %conv1438 = zext i32 %686 to i64
  %add1439 = add i64 %conv1438, 0
  %cmp1440 = icmp ult i64 %add1439, 256
  br i1 %cmp1440, label %cond.true.1442, label %cond.false.1457

cond.true.1442:                                   ; preds = %cond.false.1437, %cond.true.1433
  %687 = load i32, i32* %c, align 4
  %cmp1443 = icmp uge i32 %687, 32
  br i1 %cmp1443, label %land.rhs.1445, label %land.end.1455

land.rhs.1445:                                    ; preds = %cond.true.1442
  %688 = load i32, i32* %c, align 4
  %cmp1446 = icmp uge i32 %688, 127
  br i1 %cmp1446, label %land.rhs.1448, label %land.end.1451

land.rhs.1448:                                    ; preds = %land.rhs.1445
  %689 = load i32, i32* %c, align 4
  %cmp1449 = icmp ule i32 %689, 159
  br label %land.end.1451

land.end.1451:                                    ; preds = %land.rhs.1448, %land.rhs.1445
  %690 = phi i1 [ false, %land.rhs.1445 ], [ %cmp1449, %land.rhs.1448 ]
  %lnot1453 = xor i1 %690, true
  br label %land.end.1455

land.end.1455:                                    ; preds = %land.end.1451, %cond.true.1442
  %691 = phi i1 [ false, %cond.true.1442 ], [ %lnot1453, %land.end.1451 ]
  %land.ext1456 = zext i1 %691 to i32
  br label %cond.end.1460

cond.false.1457:                                  ; preds = %cond.false.1437, %cond.true.1433
  %692 = load i32, i32* %c, align 4
  %call1458 = call zeroext i1 @printablep(i32 %692)
  %conv1459 = zext i1 %call1458 to i32
  br label %cond.end.1460

cond.end.1460:                                    ; preds = %cond.false.1457, %land.end.1455
  %cond1461 = phi i32 [ %land.ext1456, %land.end.1455 ], [ %conv1459, %cond.false.1457 ]
  %tobool1462 = icmp ne i32 %cond1461, 0
  br label %land.end.1463

land.end.1463:                                    ; preds = %cond.end.1460, %land.end.1427
  %693 = phi i1 [ false, %land.end.1427 ], [ %tobool1462, %cond.end.1460 ]
  %land.ext1464 = zext i1 %693 to i32
  %or1465 = or i32 %or1429, %land.ext1464
  %tobool1466 = icmp ne i32 %or1465, 0
  br i1 %tobool1466, label %if.then.1467, label %if.else.1472

if.then.1467:                                     ; preds = %land.end.1463
  %694 = load i8, i8* %not, align 1
  %tobool1468 = icmp ne i8 %694, 0
  %lnot1469 = xor i1 %tobool1468, true
  %lnot.ext1470 = zext i1 %lnot1469 to i32
  %conv1471 = trunc i32 %lnot.ext1470 to i8
  store i8 %conv1471, i8* %not, align 1
  br label %if.end.1527

if.else.1472:                                     ; preds = %land.end.1463
  br label %do.body.1473

do.body.1473:                                     ; preds = %if.else.1472
  %695 = load i8*, i8** %range_table, align 8
  %696 = load i32, i32* %count, align 4
  %mul1474 = mul nsw i32 %696, 2
  %mul1475 = mul nsw i32 %mul1474, 3
  %idx.ext1476 = sext i32 %mul1475 to i64
  %add.ptr1477 = getelementptr inbounds i8, i8* %695, i64 %idx.ext1476
  store i8* %add.ptr1477, i8** %range_table_end, align 8
  %697 = load i8*, i8** %range_table, align 8
  store i8* %697, i8** %rtp, align 8
  br label %for.cond.1478

for.cond.1478:                                    ; preds = %for.inc.1522, %do.body.1473
  %698 = load i8*, i8** %rtp, align 8
  %699 = load i8*, i8** %range_table_end, align 8
  %cmp1479 = icmp ult i8* %698, %699
  br i1 %cmp1479, label %for.body.1481, label %for.end.1524

for.body.1481:                                    ; preds = %for.cond.1478
  br label %do.body.1482

do.body.1482:                                     ; preds = %for.body.1481
  %700 = load i8*, i8** %rtp, align 8
  %arrayidx1483 = getelementptr inbounds i8, i8* %700, i64 0
  %701 = load i8, i8* %arrayidx1483, align 1
  %conv1484 = zext i8 %701 to i32
  %702 = load i8*, i8** %rtp, align 8
  %arrayidx1485 = getelementptr inbounds i8, i8* %702, i64 1
  %703 = load i8, i8* %arrayidx1485, align 1
  %conv1486 = zext i8 %703 to i32
  %shl1487 = shl i32 %conv1486, 8
  %or1488 = or i32 %conv1484, %shl1487
  %704 = load i8*, i8** %rtp, align 8
  %arrayidx1489 = getelementptr inbounds i8, i8* %704, i64 2
  %705 = load i8, i8* %arrayidx1489, align 1
  %conv1490 = zext i8 %705 to i32
  %shl1491 = shl i32 %conv1490, 16
  %or1492 = or i32 %or1488, %shl1491
  store i32 %or1492, i32* %range_start, align 4
  br label %do.end.1494

do.end.1494:                                      ; preds = %do.body.1482
  br label %do.body.1495

do.body.1495:                                     ; preds = %do.end.1494
  %706 = load i8*, i8** %rtp, align 8
  %add.ptr1496 = getelementptr inbounds i8, i8* %706, i64 3
  %arrayidx1497 = getelementptr inbounds i8, i8* %add.ptr1496, i64 0
  %707 = load i8, i8* %arrayidx1497, align 1
  %conv1498 = zext i8 %707 to i32
  %708 = load i8*, i8** %rtp, align 8
  %add.ptr1499 = getelementptr inbounds i8, i8* %708, i64 3
  %arrayidx1500 = getelementptr inbounds i8, i8* %add.ptr1499, i64 1
  %709 = load i8, i8* %arrayidx1500, align 1
  %conv1501 = zext i8 %709 to i32
  %shl1502 = shl i32 %conv1501, 8
  %or1503 = or i32 %conv1498, %shl1502
  %710 = load i8*, i8** %rtp, align 8
  %add.ptr1504 = getelementptr inbounds i8, i8* %710, i64 3
  %arrayidx1505 = getelementptr inbounds i8, i8* %add.ptr1504, i64 2
  %711 = load i8, i8* %arrayidx1505, align 1
  %conv1506 = zext i8 %711 to i32
  %shl1507 = shl i32 %conv1506, 16
  %or1508 = or i32 %or1503, %shl1507
  store i32 %or1508, i32* %range_end, align 4
  br label %do.end.1510

do.end.1510:                                      ; preds = %do.body.1495
  %712 = load i32, i32* %range_start, align 4
  %713 = load i32, i32* %c, align 4
  %cmp1511 = icmp ule i32 %712, %713
  br i1 %cmp1511, label %land.lhs.true.1513, label %if.end.1521

land.lhs.true.1513:                               ; preds = %do.end.1510
  %714 = load i32, i32* %c, align 4
  %715 = load i32, i32* %range_end, align 4
  %cmp1514 = icmp ule i32 %714, %715
  br i1 %cmp1514, label %if.then.1516, label %if.end.1521

if.then.1516:                                     ; preds = %land.lhs.true.1513
  %716 = load i8, i8* %not, align 1
  %tobool1517 = icmp ne i8 %716, 0
  %lnot1518 = xor i1 %tobool1517, true
  %lnot.ext1519 = zext i1 %lnot1518 to i32
  %conv1520 = trunc i32 %lnot.ext1519 to i8
  store i8 %conv1520, i8* %not, align 1
  br label %for.end.1524

if.end.1521:                                      ; preds = %land.lhs.true.1513, %do.end.1510
  br label %for.inc.1522

for.inc.1522:                                     ; preds = %if.end.1521
  %717 = load i8*, i8** %rtp, align 8
  %add.ptr1523 = getelementptr inbounds i8, i8* %717, i64 6
  store i8* %add.ptr1523, i8** %rtp, align 8
  br label %for.cond.1478

for.end.1524:                                     ; preds = %if.then.1516, %for.cond.1478
  br label %do.end.1526

do.end.1526:                                      ; preds = %for.end.1524
  br label %if.end.1527

if.end.1527:                                      ; preds = %do.end.1526, %if.then.1467
  br label %if.end.1528

if.end.1528:                                      ; preds = %if.end.1527, %if.else.1196
  br label %if.end.1529

if.end.1529:                                      ; preds = %if.end.1528, %if.end.1195
  %718 = load i32, i32* %range_table_exists, align 4
  %tobool1530 = icmp ne i32 %718, 0
  br i1 %tobool1530, label %if.then.1531, label %if.else.1536

if.then.1531:                                     ; preds = %if.end.1529
  %719 = load i8*, i8** %range_table, align 8
  %720 = load i32, i32* %count, align 4
  %mul1532 = mul nsw i32 %720, 2
  %mul1533 = mul nsw i32 %mul1532, 3
  %idx.ext1534 = sext i32 %mul1533 to i64
  %add.ptr1535 = getelementptr inbounds i8, i8* %719, i64 %idx.ext1534
  store i8* %add.ptr1535, i8** %p, align 8
  br label %if.end.1544

if.else.1536:                                     ; preds = %if.end.1529
  %721 = load i8*, i8** %p, align 8
  %arrayidx1537 = getelementptr inbounds i8, i8* %721, i64 -1
  %arrayidx1538 = getelementptr inbounds i8, i8* %arrayidx1537, i64 1
  %722 = load i8, i8* %arrayidx1538, align 1
  %conv1539 = zext i8 %722 to i32
  %and1540 = and i32 %conv1539, 127
  %add1541 = add nsw i32 %and1540, 1
  %723 = load i8*, i8** %p, align 8
  %idx.ext1542 = sext i32 %add1541 to i64
  %add.ptr1543 = getelementptr inbounds i8, i8* %723, i64 %idx.ext1542
  store i8* %add.ptr1543, i8** %p, align 8
  br label %if.end.1544

if.end.1544:                                      ; preds = %if.else.1536, %if.then.1531
  %724 = load i8, i8* %not, align 1
  %tobool1545 = icmp ne i8 %724, 0
  br i1 %tobool1545, label %if.end.1547, label %if.then.1546

if.then.1546:                                     ; preds = %if.end.1544
  br label %fail

if.end.1547:                                      ; preds = %if.end.1544
  %725 = load i32, i32* %len, align 4
  %726 = load i8*, i8** %d, align 8
  %idx.ext1548 = sext i32 %725 to i64
  %add.ptr1549 = getelementptr inbounds i8, i8* %726, i64 %idx.ext1548
  store i8* %add.ptr1549, i8** %d, align 8
  br label %sw.epilog

sw.bb.1550:                                       ; preds = %if.end.578
  br label %do.body.1551

do.body.1551:                                     ; preds = %sw.bb.1550
  %727 = load i8*, i8** %p, align 8
  %728 = load i8, i8* %727, align 1
  %conv1552 = zext i8 %728 to i64
  store i64 %conv1552, i64* %n, align 8
  br label %while.cond.1553

while.cond.1553:                                  ; preds = %if.end.1660, %do.body.1551
  %size1554 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %729 = load i64, i64* %size1554, align 8
  %avail1555 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %730 = load i64, i64* %avail1555, align 8
  %sub1556 = sub i64 %729, %730
  %cmp1557 = icmp ule i64 %sub1556, 3
  br i1 %cmp1557, label %while.body.1559, label %while.end.1661

while.body.1559:                                  ; preds = %while.cond.1553
  %size1560 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %731 = load i64, i64* %size1560, align 8
  %mul1561 = mul i64 %731, 8
  %732 = load i64, i64* @re_max_failures, align 8
  %mul1562 = mul i64 %732, 20
  %cmp1563 = icmp uge i64 %mul1561, %mul1562
  br i1 %cmp1563, label %cond.true.1565, label %cond.false.1566

cond.true.1565:                                   ; preds = %while.body.1559
  br i1 false, label %if.end.1660, label %if.then.1659

cond.false.1566:                                  ; preds = %while.body.1559
  %733 = load i64, i64* @re_max_failures, align 8
  %mul1567 = mul i64 %733, 20
  %size1568 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %734 = load i64, i64* %size1568, align 8
  %mul1569 = mul i64 %734, 8
  %mul1570 = mul i64 %mul1569, 4
  %cmp1571 = icmp ult i64 %mul1567, %mul1570
  br i1 %cmp1571, label %cond.true.1573, label %cond.false.1575

cond.true.1573:                                   ; preds = %cond.false.1566
  %735 = load i64, i64* @re_max_failures, align 8
  %mul1574 = mul i64 %735, 20
  br label %cond.end.1579

cond.false.1575:                                  ; preds = %cond.false.1566
  %size1576 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %736 = load i64, i64* %size1576, align 8
  %mul1577 = mul i64 %736, 8
  %mul1578 = mul i64 %mul1577, 4
  br label %cond.end.1579

cond.end.1579:                                    ; preds = %cond.false.1575, %cond.true.1573
  %cond1580 = phi i64 [ %mul1574, %cond.true.1573 ], [ %mul1578, %cond.false.1575 ]
  %737 = load i64, i64* %sa_avail, align 8
  %cmp1581 = icmp ule i64 %cond1580, %737
  br i1 %cmp1581, label %cond.true.1583, label %cond.false.1613

cond.true.1583:                                   ; preds = %cond.end.1579
  %738 = load i64, i64* @re_max_failures, align 8
  %mul1584 = mul i64 %738, 20
  %size1585 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %739 = load i64, i64* %size1585, align 8
  %mul1586 = mul i64 %739, 8
  %mul1587 = mul i64 %mul1586, 4
  %cmp1588 = icmp ult i64 %mul1584, %mul1587
  br i1 %cmp1588, label %cond.true.1590, label %cond.false.1592

cond.true.1590:                                   ; preds = %cond.true.1583
  %740 = load i64, i64* @re_max_failures, align 8
  %mul1591 = mul i64 %740, 20
  br label %cond.end.1596

cond.false.1592:                                  ; preds = %cond.true.1583
  %size1593 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %741 = load i64, i64* %size1593, align 8
  %mul1594 = mul i64 %741, 8
  %mul1595 = mul i64 %mul1594, 4
  br label %cond.end.1596

cond.end.1596:                                    ; preds = %cond.false.1592, %cond.true.1590
  %cond1597 = phi i64 [ %mul1591, %cond.true.1590 ], [ %mul1595, %cond.false.1592 ]
  %742 = load i64, i64* %sa_avail, align 8
  %sub1598 = sub i64 %742, %cond1597
  store i64 %sub1598, i64* %sa_avail, align 8
  %743 = load i64, i64* @re_max_failures, align 8
  %mul1599 = mul i64 %743, 20
  %size1600 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %744 = load i64, i64* %size1600, align 8
  %mul1601 = mul i64 %744, 8
  %mul1602 = mul i64 %mul1601, 4
  %cmp1603 = icmp ult i64 %mul1599, %mul1602
  br i1 %cmp1603, label %cond.true.1605, label %cond.false.1607

cond.true.1605:                                   ; preds = %cond.end.1596
  %745 = load i64, i64* @re_max_failures, align 8
  %mul1606 = mul i64 %745, 20
  br label %cond.end.1611

cond.false.1607:                                  ; preds = %cond.end.1596
  %size1608 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %746 = load i64, i64* %size1608, align 8
  %mul1609 = mul i64 %746, 8
  %mul1610 = mul i64 %mul1609, 4
  br label %cond.end.1611

cond.end.1611:                                    ; preds = %cond.false.1607, %cond.true.1605
  %cond1612 = phi i64 [ %mul1606, %cond.true.1605 ], [ %mul1610, %cond.false.1607 ]
  %747 = alloca i8, i64 %cond1612
  br label %cond.end.1629

cond.false.1613:                                  ; preds = %cond.end.1579
  store i8 1, i8* %sa_must_free, align 1
  %748 = load i64, i64* @re_max_failures, align 8
  %mul1614 = mul i64 %748, 20
  %size1615 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %749 = load i64, i64* %size1615, align 8
  %mul1616 = mul i64 %749, 8
  %mul1617 = mul i64 %mul1616, 4
  %cmp1618 = icmp ult i64 %mul1614, %mul1617
  br i1 %cmp1618, label %cond.true.1620, label %cond.false.1622

cond.true.1620:                                   ; preds = %cond.false.1613
  %750 = load i64, i64* @re_max_failures, align 8
  %mul1621 = mul i64 %750, 20
  br label %cond.end.1626

cond.false.1622:                                  ; preds = %cond.false.1613
  %size1623 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %751 = load i64, i64* %size1623, align 8
  %mul1624 = mul i64 %751, 8
  %mul1625 = mul i64 %mul1624, 4
  br label %cond.end.1626

cond.end.1626:                                    ; preds = %cond.false.1622, %cond.true.1620
  %cond1627 = phi i64 [ %mul1621, %cond.true.1620 ], [ %mul1625, %cond.false.1622 ]
  %call1628 = call i8* @record_xmalloc(i64 %cond1627)
  br label %cond.end.1629

cond.end.1629:                                    ; preds = %cond.end.1626, %cond.end.1611
  %cond1630 = phi i8* [ %747, %cond.end.1611 ], [ %call1628, %cond.end.1626 ]
  store i8* %cond1630, i8** %destination, align 8
  %752 = load i8*, i8** %destination, align 8
  %stack1631 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %753 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack1631, align 8
  %754 = bitcast %union.fail_stack_elt* %753 to i8*
  %size1632 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %755 = load i64, i64* %size1632, align 8
  %mul1633 = mul i64 %755, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %752, i8* %754, i64 %mul1633, i32 1, i1 false)
  %756 = bitcast i8* %752 to %union.fail_stack_elt*
  %stack1634 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %756, %union.fail_stack_elt** %stack1634, align 8
  %stack1635 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %757 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack1635, align 8
  %cmp1636 = icmp eq %union.fail_stack_elt* %757, null
  br i1 %cmp1636, label %cond.true.1638, label %cond.false.1639

cond.true.1638:                                   ; preds = %cond.end.1629
  br label %cond.end.1656

cond.false.1639:                                  ; preds = %cond.end.1629
  %758 = load i64, i64* @re_max_failures, align 8
  %mul1640 = mul i64 %758, 20
  %size1641 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %759 = load i64, i64* %size1641, align 8
  %mul1642 = mul i64 %759, 8
  %mul1643 = mul i64 %mul1642, 4
  %cmp1644 = icmp ult i64 %mul1640, %mul1643
  br i1 %cmp1644, label %cond.true.1646, label %cond.false.1648

cond.true.1646:                                   ; preds = %cond.false.1639
  %760 = load i64, i64* @re_max_failures, align 8
  %mul1647 = mul i64 %760, 20
  br label %cond.end.1652

cond.false.1648:                                  ; preds = %cond.false.1639
  %size1649 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %761 = load i64, i64* %size1649, align 8
  %mul1650 = mul i64 %761, 8
  %mul1651 = mul i64 %mul1650, 4
  br label %cond.end.1652

cond.end.1652:                                    ; preds = %cond.false.1648, %cond.true.1646
  %cond1653 = phi i64 [ %mul1647, %cond.true.1646 ], [ %mul1651, %cond.false.1648 ]
  %div1654 = udiv i64 %cond1653, 8
  %size1655 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div1654, i64* %size1655, align 8
  br label %cond.end.1656

cond.end.1656:                                    ; preds = %cond.end.1652, %cond.true.1638
  %cond1657 = phi i32 [ 0, %cond.true.1638 ], [ 1, %cond.end.1652 ]
  %tobool1658 = icmp ne i32 %cond1657, 0
  br i1 %tobool1658, label %if.end.1660, label %if.then.1659

if.then.1659:                                     ; preds = %cond.end.1656, %cond.true.1565
  store i64 -2, i64* %retval
  br label %return

if.end.1660:                                      ; preds = %cond.end.1656, %cond.true.1565
  br label %while.cond.1553

while.end.1661:                                   ; preds = %while.cond.1553
  %762 = load i64, i64* %n, align 8
  %763 = load i8**, i8*** %regstart, align 8
  %arrayidx1662 = getelementptr inbounds i8*, i8** %763, i64 %762
  %764 = load i8*, i8** %arrayidx1662, align 8
  %avail1663 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %765 = load i64, i64* %avail1663, align 8
  %inc1664 = add i64 %765, 1
  store i64 %inc1664, i64* %avail1663, align 8
  %stack1665 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %766 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack1665, align 8
  %arrayidx1666 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %766, i64 %765
  %pointer = bitcast %union.fail_stack_elt* %arrayidx1666 to i8**
  store i8* %764, i8** %pointer, align 8
  %767 = load i64, i64* %n, align 8
  %768 = load i8**, i8*** %regend, align 8
  %arrayidx1667 = getelementptr inbounds i8*, i8** %768, i64 %767
  %769 = load i8*, i8** %arrayidx1667, align 8
  %avail1668 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %770 = load i64, i64* %avail1668, align 8
  %inc1669 = add i64 %770, 1
  store i64 %inc1669, i64* %avail1668, align 8
  %stack1670 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %771 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack1670, align 8
  %arrayidx1671 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %771, i64 %770
  %pointer1672 = bitcast %union.fail_stack_elt* %arrayidx1671 to i8**
  store i8* %769, i8** %pointer1672, align 8
  %772 = load i64, i64* %n, align 8
  %avail1673 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %773 = load i64, i64* %avail1673, align 8
  %inc1674 = add i64 %773, 1
  store i64 %inc1674, i64* %avail1673, align 8
  %stack1675 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %774 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack1675, align 8
  %arrayidx1676 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %774, i64 %773
  %integer = bitcast %union.fail_stack_elt* %arrayidx1676 to i64*
  store i64 %772, i64* %integer, align 8
  br label %do.end.1678

do.end.1678:                                      ; preds = %while.end.1661
  %775 = load i8*, i8** %d, align 8
  %776 = load i8*, i8** %p, align 8
  %777 = load i8, i8* %776, align 1
  %idxprom1679 = zext i8 %777 to i64
  %778 = load i8**, i8*** %regstart, align 8
  %arrayidx1680 = getelementptr inbounds i8*, i8** %778, i64 %idxprom1679
  store i8* %775, i8** %arrayidx1680, align 8
  %779 = load i8*, i8** %p, align 8
  %780 = load i8, i8* %779, align 1
  %idxprom1681 = zext i8 %780 to i64
  %781 = load i8**, i8*** %regend, align 8
  %arrayidx1682 = getelementptr inbounds i8*, i8** %781, i64 %idxprom1681
  store i8* null, i8** %arrayidx1682, align 8
  %782 = load i8*, i8** %p, align 8
  %add.ptr1683 = getelementptr inbounds i8, i8* %782, i64 1
  store i8* %add.ptr1683, i8** %p, align 8
  br label %sw.epilog

sw.bb.1684:                                       ; preds = %if.end.578
  %783 = load i8*, i8** %d, align 8
  %784 = load i8*, i8** %p, align 8
  %785 = load i8, i8* %784, align 1
  %idxprom1685 = zext i8 %785 to i64
  %786 = load i8**, i8*** %regend, align 8
  %arrayidx1686 = getelementptr inbounds i8*, i8** %786, i64 %idxprom1685
  store i8* %783, i8** %arrayidx1686, align 8
  %787 = load i8*, i8** %p, align 8
  %add.ptr1687 = getelementptr inbounds i8, i8* %787, i64 1
  store i8* %add.ptr1687, i8** %p, align 8
  br label %sw.epilog

sw.bb.1688:                                       ; preds = %if.end.578
  %788 = load i8*, i8** %p, align 8
  %incdec.ptr1689 = getelementptr inbounds i8, i8* %788, i32 1
  store i8* %incdec.ptr1689, i8** %p, align 8
  %789 = load i8, i8* %788, align 1
  %conv1690 = zext i8 %789 to i32
  store i32 %conv1690, i32* %regno, align 4
  %790 = load i32, i32* %regno, align 4
  %idxprom1691 = sext i32 %790 to i64
  %791 = load i8**, i8*** %regstart, align 8
  %arrayidx1692 = getelementptr inbounds i8*, i8** %791, i64 %idxprom1691
  %792 = load i8*, i8** %arrayidx1692, align 8
  %cmp1693 = icmp eq i8* %792, null
  br i1 %cmp1693, label %if.then.1700, label %lor.lhs.false.1695

lor.lhs.false.1695:                               ; preds = %sw.bb.1688
  %793 = load i32, i32* %regno, align 4
  %idxprom1696 = sext i32 %793 to i64
  %794 = load i8**, i8*** %regend, align 8
  %arrayidx1697 = getelementptr inbounds i8*, i8** %794, i64 %idxprom1696
  %795 = load i8*, i8** %arrayidx1697, align 8
  %cmp1698 = icmp eq i8* %795, null
  br i1 %cmp1698, label %if.then.1700, label %if.end.1701

if.then.1700:                                     ; preds = %lor.lhs.false.1695, %sw.bb.1688
  br label %fail

if.end.1701:                                      ; preds = %lor.lhs.false.1695
  %796 = load i32, i32* %regno, align 4
  %idxprom1702 = sext i32 %796 to i64
  %797 = load i8**, i8*** %regstart, align 8
  %arrayidx1703 = getelementptr inbounds i8*, i8** %797, i64 %idxprom1702
  %798 = load i8*, i8** %arrayidx1703, align 8
  store i8* %798, i8** %d2, align 8
  %799 = load i8*, i8** %d, align 8
  store i8* %799, i8** %dfail, align 8
  %800 = load i64, i64* %size1.addr, align 8
  %tobool1704 = icmp ne i64 %800, 0
  br i1 %tobool1704, label %land.lhs.true.1705, label %land.end.1716

land.lhs.true.1705:                               ; preds = %if.end.1701
  %801 = load i8*, i8** %string1.addr, align 8
  %802 = load i32, i32* %regno, align 4
  %idxprom1706 = sext i32 %802 to i64
  %803 = load i8**, i8*** %regstart, align 8
  %arrayidx1707 = getelementptr inbounds i8*, i8** %803, i64 %idxprom1706
  %804 = load i8*, i8** %arrayidx1707, align 8
  %cmp1708 = icmp ule i8* %801, %804
  br i1 %cmp1708, label %land.rhs.1710, label %land.end.1716

land.rhs.1710:                                    ; preds = %land.lhs.true.1705
  %805 = load i32, i32* %regno, align 4
  %idxprom1711 = sext i32 %805 to i64
  %806 = load i8**, i8*** %regstart, align 8
  %arrayidx1712 = getelementptr inbounds i8*, i8** %806, i64 %idxprom1711
  %807 = load i8*, i8** %arrayidx1712, align 8
  %808 = load i8*, i8** %string1.addr, align 8
  %809 = load i64, i64* %size1.addr, align 8
  %add.ptr1713 = getelementptr inbounds i8, i8* %808, i64 %809
  %cmp1714 = icmp ule i8* %807, %add.ptr1713
  br label %land.end.1716

land.end.1716:                                    ; preds = %land.rhs.1710, %land.lhs.true.1705, %if.end.1701
  %810 = phi i1 [ false, %land.lhs.true.1705 ], [ false, %if.end.1701 ], [ %cmp1714, %land.rhs.1710 ]
  %land.ext1717 = zext i1 %810 to i32
  %811 = load i64, i64* %size1.addr, align 8
  %tobool1718 = icmp ne i64 %811, 0
  br i1 %tobool1718, label %land.lhs.true.1719, label %land.end.1730

land.lhs.true.1719:                               ; preds = %land.end.1716
  %812 = load i8*, i8** %string1.addr, align 8
  %813 = load i32, i32* %regno, align 4
  %idxprom1720 = sext i32 %813 to i64
  %814 = load i8**, i8*** %regend, align 8
  %arrayidx1721 = getelementptr inbounds i8*, i8** %814, i64 %idxprom1720
  %815 = load i8*, i8** %arrayidx1721, align 8
  %cmp1722 = icmp ule i8* %812, %815
  br i1 %cmp1722, label %land.rhs.1724, label %land.end.1730

land.rhs.1724:                                    ; preds = %land.lhs.true.1719
  %816 = load i32, i32* %regno, align 4
  %idxprom1725 = sext i32 %816 to i64
  %817 = load i8**, i8*** %regend, align 8
  %arrayidx1726 = getelementptr inbounds i8*, i8** %817, i64 %idxprom1725
  %818 = load i8*, i8** %arrayidx1726, align 8
  %819 = load i8*, i8** %string1.addr, align 8
  %820 = load i64, i64* %size1.addr, align 8
  %add.ptr1727 = getelementptr inbounds i8, i8* %819, i64 %820
  %cmp1728 = icmp ule i8* %818, %add.ptr1727
  br label %land.end.1730

land.end.1730:                                    ; preds = %land.rhs.1724, %land.lhs.true.1719, %land.end.1716
  %821 = phi i1 [ false, %land.lhs.true.1719 ], [ false, %land.end.1716 ], [ %cmp1728, %land.rhs.1724 ]
  %land.ext1731 = zext i1 %821 to i32
  %cmp1732 = icmp eq i32 %land.ext1717, %land.ext1731
  br i1 %cmp1732, label %cond.true.1734, label %cond.false.1737

cond.true.1734:                                   ; preds = %land.end.1730
  %822 = load i32, i32* %regno, align 4
  %idxprom1735 = sext i32 %822 to i64
  %823 = load i8**, i8*** %regend, align 8
  %arrayidx1736 = getelementptr inbounds i8*, i8** %823, i64 %idxprom1735
  %824 = load i8*, i8** %arrayidx1736, align 8
  br label %cond.end.1738

cond.false.1737:                                  ; preds = %land.end.1730
  %825 = load i8*, i8** %end_match_1, align 8
  br label %cond.end.1738

cond.end.1738:                                    ; preds = %cond.false.1737, %cond.true.1734
  %cond1739 = phi i8* [ %824, %cond.true.1734 ], [ %825, %cond.false.1737 ]
  store i8* %cond1739, i8** %dend2, align 8
  br label %for.cond.1740

for.cond.1740:                                    ; preds = %if.end.1795, %cond.end.1738
  br label %while.cond.1742

while.cond.1742:                                  ; preds = %if.end.1755, %for.cond.1740
  %826 = load i8*, i8** %d2, align 8
  %827 = load i8*, i8** %dend2, align 8
  %cmp1743 = icmp eq i8* %826, %827
  br i1 %cmp1743, label %while.body.1745, label %while.end.1758

while.body.1745:                                  ; preds = %while.cond.1742
  %828 = load i8*, i8** %dend2, align 8
  %829 = load i8*, i8** %end_match_2, align 8
  %cmp1746 = icmp eq i8* %828, %829
  br i1 %cmp1746, label %if.then.1748, label %if.end.1749

if.then.1748:                                     ; preds = %while.body.1745
  br label %while.end.1758

if.end.1749:                                      ; preds = %while.body.1745
  %830 = load i8*, i8** %dend2, align 8
  %831 = load i32, i32* %regno, align 4
  %idxprom1750 = sext i32 %831 to i64
  %832 = load i8**, i8*** %regend, align 8
  %arrayidx1751 = getelementptr inbounds i8*, i8** %832, i64 %idxprom1750
  %833 = load i8*, i8** %arrayidx1751, align 8
  %cmp1752 = icmp eq i8* %830, %833
  br i1 %cmp1752, label %if.then.1754, label %if.end.1755

if.then.1754:                                     ; preds = %if.end.1749
  br label %while.end.1758

if.end.1755:                                      ; preds = %if.end.1749
  %834 = load i8*, i8** %string2.addr, align 8
  store i8* %834, i8** %d2, align 8
  %835 = load i32, i32* %regno, align 4
  %idxprom1756 = sext i32 %835 to i64
  %836 = load i8**, i8*** %regend, align 8
  %arrayidx1757 = getelementptr inbounds i8*, i8** %836, i64 %idxprom1756
  %837 = load i8*, i8** %arrayidx1757, align 8
  store i8* %837, i8** %dend2, align 8
  br label %while.cond.1742

while.end.1758:                                   ; preds = %if.then.1754, %if.then.1748, %while.cond.1742
  %838 = load i8*, i8** %d2, align 8
  %839 = load i8*, i8** %dend2, align 8
  %cmp1759 = icmp eq i8* %838, %839
  br i1 %cmp1759, label %if.then.1761, label %if.end.1762

if.then.1761:                                     ; preds = %while.end.1758
  br label %for.end.1798

if.end.1762:                                      ; preds = %while.end.1758
  br label %while.cond.1763

while.cond.1763:                                  ; preds = %if.end.1770, %if.end.1762
  %840 = load i8*, i8** %d, align 8
  %841 = load i8*, i8** %dend, align 8
  %cmp1764 = icmp eq i8* %840, %841
  br i1 %cmp1764, label %while.body.1766, label %while.end.1771

while.body.1766:                                  ; preds = %while.cond.1763
  %842 = load i8*, i8** %dend, align 8
  %843 = load i8*, i8** %end_match_2, align 8
  %cmp1767 = icmp eq i8* %842, %843
  br i1 %cmp1767, label %if.then.1769, label %if.end.1770

if.then.1769:                                     ; preds = %while.body.1766
  br label %fail

if.end.1770:                                      ; preds = %while.body.1766
  %844 = load i8*, i8** %string2.addr, align 8
  store i8* %844, i8** %d, align 8
  %845 = load i8*, i8** %end_match_2, align 8
  store i8* %845, i8** %dend, align 8
  br label %while.cond.1763

while.end.1771:                                   ; preds = %while.cond.1763
  %846 = load i8*, i8** %dend, align 8
  %847 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast1772 = ptrtoint i8* %846 to i64
  %sub.ptr.rhs.cast1773 = ptrtoint i8* %847 to i64
  %sub.ptr.sub1774 = sub i64 %sub.ptr.lhs.cast1772, %sub.ptr.rhs.cast1773
  store i64 %sub.ptr.sub1774, i64* %dcnt1741, align 8
  %848 = load i64, i64* %dcnt1741, align 8
  %849 = load i8*, i8** %dend2, align 8
  %850 = load i8*, i8** %d2, align 8
  %sub.ptr.lhs.cast1775 = ptrtoint i8* %849 to i64
  %sub.ptr.rhs.cast1776 = ptrtoint i8* %850 to i64
  %sub.ptr.sub1777 = sub i64 %sub.ptr.lhs.cast1775, %sub.ptr.rhs.cast1776
  %cmp1778 = icmp sgt i64 %848, %sub.ptr.sub1777
  br i1 %cmp1778, label %if.then.1780, label %if.end.1784

if.then.1780:                                     ; preds = %while.end.1771
  %851 = load i8*, i8** %dend2, align 8
  %852 = load i8*, i8** %d2, align 8
  %sub.ptr.lhs.cast1781 = ptrtoint i8* %851 to i64
  %sub.ptr.rhs.cast1782 = ptrtoint i8* %852 to i64
  %sub.ptr.sub1783 = sub i64 %sub.ptr.lhs.cast1781, %sub.ptr.rhs.cast1782
  store i64 %sub.ptr.sub1783, i64* %dcnt1741, align 8
  br label %if.end.1784

if.end.1784:                                      ; preds = %if.then.1780, %while.end.1771
  %853 = load i64, i64* %translate, align 8
  %cmp1785 = icmp eq i64 %853, 2
  br i1 %cmp1785, label %cond.false.1791, label %cond.true.1787

cond.true.1787:                                   ; preds = %if.end.1784
  %854 = load i8*, i8** %d, align 8
  %855 = load i8*, i8** %d2, align 8
  %856 = load i64, i64* %dcnt1741, align 8
  %857 = load i64, i64* %translate, align 8
  %858 = load i8, i8* %target_multibyte, align 1
  %conv1788 = sext i8 %858 to i32
  %call1789 = call i32 @bcmp_translate(i8* %854, i8* %855, i64 %856, i64 %857, i32 %conv1788)
  %tobool1790 = icmp ne i32 %call1789, 0
  br i1 %tobool1790, label %if.then.1794, label %if.end.1795

cond.false.1791:                                  ; preds = %if.end.1784
  %859 = load i8*, i8** %d, align 8
  %860 = load i8*, i8** %d2, align 8
  %861 = load i64, i64* %dcnt1741, align 8
  %call1792 = call i32 @memcmp(i8* %859, i8* %860, i64 %861) #5
  %tobool1793 = icmp ne i32 %call1792, 0
  br i1 %tobool1793, label %if.then.1794, label %if.end.1795

if.then.1794:                                     ; preds = %cond.false.1791, %cond.true.1787
  %862 = load i8*, i8** %dfail, align 8
  store i8* %862, i8** %d, align 8
  br label %fail

if.end.1795:                                      ; preds = %cond.false.1791, %cond.true.1787
  %863 = load i64, i64* %dcnt1741, align 8
  %864 = load i8*, i8** %d, align 8
  %add.ptr1796 = getelementptr inbounds i8, i8* %864, i64 %863
  store i8* %add.ptr1796, i8** %d, align 8
  %865 = load i64, i64* %dcnt1741, align 8
  %866 = load i8*, i8** %d2, align 8
  %add.ptr1797 = getelementptr inbounds i8, i8* %866, i64 %865
  store i8* %add.ptr1797, i8** %d2, align 8
  br label %for.cond.1740

for.end.1798:                                     ; preds = %if.then.1761
  br label %sw.epilog

sw.bb.1799:                                       ; preds = %if.end.578
  %867 = load i8*, i8** %d, align 8
  %868 = load i64, i64* %size1.addr, align 8
  %tobool1800 = icmp ne i64 %868, 0
  br i1 %tobool1800, label %cond.true.1801, label %cond.false.1802

cond.true.1801:                                   ; preds = %sw.bb.1799
  %869 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.1803

cond.false.1802:                                  ; preds = %sw.bb.1799
  %870 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.1803

cond.end.1803:                                    ; preds = %cond.false.1802, %cond.true.1801
  %cond1804 = phi i8* [ %869, %cond.true.1801 ], [ %870, %cond.false.1802 ]
  %cmp1805 = icmp eq i8* %867, %cond1804
  br i1 %cmp1805, label %if.then.1809, label %lor.lhs.false.1807

lor.lhs.false.1807:                               ; preds = %cond.end.1803
  %871 = load i64, i64* %size2.addr, align 8
  %tobool1808 = icmp ne i64 %871, 0
  br i1 %tobool1808, label %if.else.1817, label %if.then.1809

if.then.1809:                                     ; preds = %lor.lhs.false.1807, %cond.end.1803
  %872 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %not_bol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %872, i32 0, i32 7
  %bf.load1810 = load i16, i16* %not_bol, align 8
  %bf.lshr1811 = lshr i16 %bf.load1810, 5
  %bf.clear1812 = and i16 %bf.lshr1811, 1
  %bf.cast1813 = zext i16 %bf.clear1812 to i32
  %tobool1814 = icmp ne i32 %bf.cast1813, 0
  br i1 %tobool1814, label %if.end.1816, label %if.then.1815

if.then.1815:                                     ; preds = %if.then.1809
  br label %sw.epilog

if.end.1816:                                      ; preds = %if.then.1809
  br label %if.end.1936

if.else.1817:                                     ; preds = %lor.lhs.false.1807
  br label %do.body.1819

do.body.1819:                                     ; preds = %if.else.1817
  %873 = load i8, i8* %target_multibyte, align 1
  %tobool1820 = icmp ne i8 %873, 0
  br i1 %tobool1820, label %if.then.1821, label %if.else.1906

if.then.1821:                                     ; preds = %do.body.1819
  %874 = load i8*, i8** %d, align 8
  %875 = load i8*, i8** %string2.addr, align 8
  %cmp1822 = icmp eq i8* %874, %875
  br i1 %cmp1822, label %cond.true.1824, label %cond.false.1825

cond.true.1824:                                   ; preds = %if.then.1821
  %876 = load i8*, i8** %end1, align 8
  br label %cond.end.1826

cond.false.1825:                                  ; preds = %if.then.1821
  %877 = load i8*, i8** %d, align 8
  br label %cond.end.1826

cond.end.1826:                                    ; preds = %cond.false.1825, %cond.true.1824
  %cond1827 = phi i8* [ %876, %cond.true.1824 ], [ %877, %cond.false.1825 ]
  store i8* %cond1827, i8** %dtemp, align 8
  %878 = load i8*, i8** %d, align 8
  %879 = load i8*, i8** %string2.addr, align 8
  %cmp1828 = icmp ugt i8* %878, %879
  br i1 %cmp1828, label %land.lhs.true.1830, label %cond.false.1834

land.lhs.true.1830:                               ; preds = %cond.end.1826
  %880 = load i8*, i8** %d, align 8
  %881 = load i8*, i8** %end2, align 8
  %cmp1831 = icmp ule i8* %880, %881
  br i1 %cmp1831, label %cond.true.1833, label %cond.false.1834

cond.true.1833:                                   ; preds = %land.lhs.true.1830
  %882 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.1835

cond.false.1834:                                  ; preds = %land.lhs.true.1830, %cond.end.1826
  %883 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.1835

cond.end.1835:                                    ; preds = %cond.false.1834, %cond.true.1833
  %cond1836 = phi i8* [ %882, %cond.true.1833 ], [ %883, %cond.false.1834 ]
  store i8* %cond1836, i8** %dlimit, align 8
  br label %while.cond.1837

while.cond.1837:                                  ; preds = %while.body.1850, %cond.end.1835
  %884 = load i8*, i8** %dtemp, align 8
  %incdec.ptr1838 = getelementptr inbounds i8, i8* %884, i32 -1
  store i8* %incdec.ptr1838, i8** %dtemp, align 8
  %885 = load i8*, i8** %dlimit, align 8
  %cmp1839 = icmp ugt i8* %884, %885
  br i1 %cmp1839, label %land.rhs.1841, label %land.end.1848

land.rhs.1841:                                    ; preds = %while.cond.1837
  %886 = load i8*, i8** %dtemp, align 8
  %887 = load i8, i8* %886, align 1
  %conv1842 = zext i8 %887 to i32
  %and1843 = and i32 %conv1842, 192
  %cmp1844 = icmp ne i32 %and1843, 128
  %lnot1846 = xor i1 %cmp1844, true
  br label %land.end.1848

land.end.1848:                                    ; preds = %land.rhs.1841, %while.cond.1837
  %888 = phi i1 [ false, %while.cond.1837 ], [ %lnot1846, %land.rhs.1841 ]
  br i1 %888, label %while.body.1850, label %while.end.1851

while.body.1850:                                  ; preds = %land.end.1848
  br label %while.cond.1837

while.end.1851:                                   ; preds = %land.end.1848
  %889 = load i8*, i8** %dtemp, align 8
  %arrayidx1852 = getelementptr inbounds i8, i8* %889, i64 0
  %890 = load i8, i8* %arrayidx1852, align 1
  %conv1853 = zext i8 %890 to i32
  %and1854 = and i32 %conv1853, 128
  %tobool1855 = icmp ne i32 %and1854, 0
  br i1 %tobool1855, label %cond.false.1859, label %cond.true.1856

cond.true.1856:                                   ; preds = %while.end.1851
  %891 = load i8*, i8** %dtemp, align 8
  %arrayidx1857 = getelementptr inbounds i8, i8* %891, i64 0
  %892 = load i8, i8* %arrayidx1857, align 1
  %conv1858 = zext i8 %892 to i32
  br label %cond.end.1904

cond.false.1859:                                  ; preds = %while.end.1851
  %893 = load i8*, i8** %dtemp, align 8
  %arrayidx1860 = getelementptr inbounds i8, i8* %893, i64 0
  %894 = load i8, i8* %arrayidx1860, align 1
  %conv1861 = zext i8 %894 to i32
  %and1862 = and i32 %conv1861, 32
  %tobool1863 = icmp ne i32 %and1862, 0
  br i1 %tobool1863, label %cond.false.1879, label %cond.true.1864

cond.true.1864:                                   ; preds = %cond.false.1859
  %895 = load i8*, i8** %dtemp, align 8
  %arrayidx1865 = getelementptr inbounds i8, i8* %895, i64 0
  %896 = load i8, i8* %arrayidx1865, align 1
  %conv1866 = zext i8 %896 to i32
  %and1867 = and i32 %conv1866, 31
  %shl1868 = shl i32 %and1867, 6
  %897 = load i8*, i8** %dtemp, align 8
  %arrayidx1869 = getelementptr inbounds i8, i8* %897, i64 1
  %898 = load i8, i8* %arrayidx1869, align 1
  %conv1870 = zext i8 %898 to i32
  %and1871 = and i32 %conv1870, 63
  %or1872 = or i32 %shl1868, %and1871
  %899 = load i8*, i8** %dtemp, align 8
  %arrayidx1873 = getelementptr inbounds i8, i8* %899, i64 0
  %900 = load i8, i8* %arrayidx1873, align 1
  %conv1874 = zext i8 %900 to i32
  %cmp1875 = icmp slt i32 %conv1874, 194
  %cond1877 = select i1 %cmp1875, i32 4194176, i32 0
  %add1878 = add nsw i32 %or1872, %cond1877
  br label %cond.end.1902

cond.false.1879:                                  ; preds = %cond.false.1859
  %901 = load i8*, i8** %dtemp, align 8
  %arrayidx1880 = getelementptr inbounds i8, i8* %901, i64 0
  %902 = load i8, i8* %arrayidx1880, align 1
  %conv1881 = zext i8 %902 to i32
  %and1882 = and i32 %conv1881, 16
  %tobool1883 = icmp ne i32 %and1882, 0
  br i1 %tobool1883, label %cond.false.1898, label %cond.true.1884

cond.true.1884:                                   ; preds = %cond.false.1879
  %903 = load i8*, i8** %dtemp, align 8
  %arrayidx1885 = getelementptr inbounds i8, i8* %903, i64 0
  %904 = load i8, i8* %arrayidx1885, align 1
  %conv1886 = zext i8 %904 to i32
  %and1887 = and i32 %conv1886, 15
  %shl1888 = shl i32 %and1887, 12
  %905 = load i8*, i8** %dtemp, align 8
  %arrayidx1889 = getelementptr inbounds i8, i8* %905, i64 1
  %906 = load i8, i8* %arrayidx1889, align 1
  %conv1890 = zext i8 %906 to i32
  %and1891 = and i32 %conv1890, 63
  %shl1892 = shl i32 %and1891, 6
  %or1893 = or i32 %shl1888, %shl1892
  %907 = load i8*, i8** %dtemp, align 8
  %arrayidx1894 = getelementptr inbounds i8, i8* %907, i64 2
  %908 = load i8, i8* %arrayidx1894, align 1
  %conv1895 = zext i8 %908 to i32
  %and1896 = and i32 %conv1895, 63
  %or1897 = or i32 %or1893, %and1896
  br label %cond.end.1900

cond.false.1898:                                  ; preds = %cond.false.1879
  %909 = load i8*, i8** %dtemp, align 8
  %call1899 = call i32 @string_char(i8* %909, i8** null, i32* null)
  br label %cond.end.1900

cond.end.1900:                                    ; preds = %cond.false.1898, %cond.true.1884
  %cond1901 = phi i32 [ %or1897, %cond.true.1884 ], [ %call1899, %cond.false.1898 ]
  br label %cond.end.1902

cond.end.1902:                                    ; preds = %cond.end.1900, %cond.true.1864
  %cond1903 = phi i32 [ %add1878, %cond.true.1864 ], [ %cond1901, %cond.end.1900 ]
  br label %cond.end.1904

cond.end.1904:                                    ; preds = %cond.end.1902, %cond.true.1856
  %cond1905 = phi i32 [ %conv1858, %cond.true.1856 ], [ %cond1903, %cond.end.1902 ]
  store i32 %cond1905, i32* %c1818, align 4
  br label %if.end.1929

if.else.1906:                                     ; preds = %do.body.1819
  %910 = load i8*, i8** %d, align 8
  %911 = load i8*, i8** %string2.addr, align 8
  %cmp1907 = icmp eq i8* %910, %911
  br i1 %cmp1907, label %cond.true.1909, label %cond.false.1910

cond.true.1909:                                   ; preds = %if.else.1906
  %912 = load i8*, i8** %end1, align 8
  br label %cond.end.1911

cond.false.1910:                                  ; preds = %if.else.1906
  %913 = load i8*, i8** %d, align 8
  br label %cond.end.1911

cond.end.1911:                                    ; preds = %cond.false.1910, %cond.true.1909
  %cond1912 = phi i8* [ %912, %cond.true.1909 ], [ %913, %cond.false.1910 ]
  %arrayidx1913 = getelementptr inbounds i8, i8* %cond1912, i64 -1
  %914 = load i8, i8* %arrayidx1913, align 1
  %conv1914 = zext i8 %914 to i32
  store i32 %conv1914, i32* %c1818, align 4
  br i1 true, label %cond.true.1915, label %cond.false.1919

cond.true.1915:                                   ; preds = %cond.end.1911
  %915 = load i32, i32* %c1818, align 4
  %add1916 = add i32 %915, 0
  %cmp1917 = icmp ult i32 %add1916, 128
  br i1 %cmp1917, label %cond.true.1924, label %cond.false.1925

cond.false.1919:                                  ; preds = %cond.end.1911
  %916 = load i32, i32* %c1818, align 4
  %conv1920 = zext i32 %916 to i64
  %add1921 = add i64 %conv1920, 0
  %cmp1922 = icmp ult i64 %add1921, 128
  br i1 %cmp1922, label %cond.true.1924, label %cond.false.1925

cond.true.1924:                                   ; preds = %cond.false.1919, %cond.true.1915
  %917 = load i32, i32* %c1818, align 4
  br label %cond.end.1927

cond.false.1925:                                  ; preds = %cond.false.1919, %cond.true.1915
  %918 = load i32, i32* %c1818, align 4
  %add1926 = add i32 %918, 4194048
  br label %cond.end.1927

cond.end.1927:                                    ; preds = %cond.false.1925, %cond.true.1924
  %cond1928 = phi i32 [ %917, %cond.true.1924 ], [ %add1926, %cond.false.1925 ]
  store i32 %cond1928, i32* %c1818, align 4
  br label %if.end.1929

if.end.1929:                                      ; preds = %cond.end.1927, %cond.end.1904
  br label %do.end.1931

do.end.1931:                                      ; preds = %if.end.1929
  %919 = load i32, i32* %c1818, align 4
  %cmp1932 = icmp eq i32 %919, 10
  br i1 %cmp1932, label %if.then.1934, label %if.end.1935

if.then.1934:                                     ; preds = %do.end.1931
  br label %sw.epilog

if.end.1935:                                      ; preds = %do.end.1931
  br label %if.end.1936

if.end.1936:                                      ; preds = %if.end.1935, %if.end.1816
  br label %fail

sw.bb.1937:                                       ; preds = %if.end.578
  %920 = load i8*, i8** %d, align 8
  %921 = load i8*, i8** %end2, align 8
  %cmp1938 = icmp eq i8* %920, %921
  br i1 %cmp1938, label %if.then.1940, label %if.else.1948

if.then.1940:                                     ; preds = %sw.bb.1937
  %922 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %not_eol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %922, i32 0, i32 7
  %bf.load1941 = load i16, i16* %not_eol, align 8
  %bf.lshr1942 = lshr i16 %bf.load1941, 6
  %bf.clear1943 = and i16 %bf.lshr1942, 1
  %bf.cast1944 = zext i16 %bf.clear1943 to i32
  %tobool1945 = icmp ne i32 %bf.cast1944, 0
  br i1 %tobool1945, label %if.end.1947, label %if.then.1946

if.then.1946:                                     ; preds = %if.then.1940
  br label %sw.epilog

if.end.1947:                                      ; preds = %if.then.1940
  br label %if.end.1958

if.else.1948:                                     ; preds = %sw.bb.1937
  %923 = load i8*, i8** %d, align 8
  %924 = load i8*, i8** %end1, align 8
  %cmp1949 = icmp eq i8* %923, %924
  br i1 %cmp1949, label %if.then.1951, label %if.end.1952

if.then.1951:                                     ; preds = %if.else.1948
  %925 = load i8*, i8** %string2.addr, align 8
  store i8* %925, i8** %d, align 8
  %926 = load i8*, i8** %end_match_2, align 8
  store i8* %926, i8** %dend, align 8
  br label %if.end.1952

if.end.1952:                                      ; preds = %if.then.1951, %if.else.1948
  %927 = load i8*, i8** %d, align 8
  %928 = load i8, i8* %927, align 1
  %conv1953 = zext i8 %928 to i32
  %cmp1954 = icmp eq i32 %conv1953, 10
  br i1 %cmp1954, label %if.then.1956, label %if.end.1957

if.then.1956:                                     ; preds = %if.end.1952
  br label %sw.epilog

if.end.1957:                                      ; preds = %if.end.1952
  br label %if.end.1958

if.end.1958:                                      ; preds = %if.end.1957, %if.end.1947
  br label %fail

sw.bb.1959:                                       ; preds = %if.end.578
  %929 = load i8*, i8** %d, align 8
  %930 = load i64, i64* %size1.addr, align 8
  %tobool1960 = icmp ne i64 %930, 0
  br i1 %tobool1960, label %cond.true.1961, label %cond.false.1962

cond.true.1961:                                   ; preds = %sw.bb.1959
  %931 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.1963

cond.false.1962:                                  ; preds = %sw.bb.1959
  %932 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.1963

cond.end.1963:                                    ; preds = %cond.false.1962, %cond.true.1961
  %cond1964 = phi i8* [ %931, %cond.true.1961 ], [ %932, %cond.false.1962 ]
  %cmp1965 = icmp eq i8* %929, %cond1964
  br i1 %cmp1965, label %if.then.1969, label %lor.lhs.false.1967

lor.lhs.false.1967:                               ; preds = %cond.end.1963
  %933 = load i64, i64* %size2.addr, align 8
  %tobool1968 = icmp ne i64 %933, 0
  br i1 %tobool1968, label %if.end.1970, label %if.then.1969

if.then.1969:                                     ; preds = %lor.lhs.false.1967, %cond.end.1963
  br label %sw.epilog

if.end.1970:                                      ; preds = %lor.lhs.false.1967
  br label %fail

sw.bb.1971:                                       ; preds = %if.end.578
  %934 = load i8*, i8** %d, align 8
  %935 = load i8*, i8** %end2, align 8
  %cmp1972 = icmp eq i8* %934, %935
  br i1 %cmp1972, label %if.then.1974, label %if.end.1975

if.then.1974:                                     ; preds = %sw.bb.1971
  br label %sw.epilog

if.end.1975:                                      ; preds = %sw.bb.1971
  br label %fail

sw.bb.1976:                                       ; preds = %if.end.578
  %call1977 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call1977, i32* %mcnt, align 4
  br label %do.body.1978

do.body.1978:                                     ; preds = %sw.bb.1976
  br label %while.cond.1980

while.cond.1980:                                  ; preds = %if.end.2087, %do.body.1978
  %size1981 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %936 = load i64, i64* %size1981, align 8
  %avail1982 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %937 = load i64, i64* %avail1982, align 8
  %sub1983 = sub i64 %936, %937
  %cmp1984 = icmp ule i64 %sub1983, 3
  br i1 %cmp1984, label %while.body.1986, label %while.end.2088

while.body.1986:                                  ; preds = %while.cond.1980
  %size1987 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %938 = load i64, i64* %size1987, align 8
  %mul1988 = mul i64 %938, 8
  %939 = load i64, i64* @re_max_failures, align 8
  %mul1989 = mul i64 %939, 20
  %cmp1990 = icmp uge i64 %mul1988, %mul1989
  br i1 %cmp1990, label %cond.true.1992, label %cond.false.1993

cond.true.1992:                                   ; preds = %while.body.1986
  br i1 false, label %if.end.2087, label %if.then.2086

cond.false.1993:                                  ; preds = %while.body.1986
  %940 = load i64, i64* @re_max_failures, align 8
  %mul1994 = mul i64 %940, 20
  %size1995 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %941 = load i64, i64* %size1995, align 8
  %mul1996 = mul i64 %941, 8
  %mul1997 = mul i64 %mul1996, 4
  %cmp1998 = icmp ult i64 %mul1994, %mul1997
  br i1 %cmp1998, label %cond.true.2000, label %cond.false.2002

cond.true.2000:                                   ; preds = %cond.false.1993
  %942 = load i64, i64* @re_max_failures, align 8
  %mul2001 = mul i64 %942, 20
  br label %cond.end.2006

cond.false.2002:                                  ; preds = %cond.false.1993
  %size2003 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %943 = load i64, i64* %size2003, align 8
  %mul2004 = mul i64 %943, 8
  %mul2005 = mul i64 %mul2004, 4
  br label %cond.end.2006

cond.end.2006:                                    ; preds = %cond.false.2002, %cond.true.2000
  %cond2007 = phi i64 [ %mul2001, %cond.true.2000 ], [ %mul2005, %cond.false.2002 ]
  %944 = load i64, i64* %sa_avail, align 8
  %cmp2008 = icmp ule i64 %cond2007, %944
  br i1 %cmp2008, label %cond.true.2010, label %cond.false.2040

cond.true.2010:                                   ; preds = %cond.end.2006
  %945 = load i64, i64* @re_max_failures, align 8
  %mul2011 = mul i64 %945, 20
  %size2012 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %946 = load i64, i64* %size2012, align 8
  %mul2013 = mul i64 %946, 8
  %mul2014 = mul i64 %mul2013, 4
  %cmp2015 = icmp ult i64 %mul2011, %mul2014
  br i1 %cmp2015, label %cond.true.2017, label %cond.false.2019

cond.true.2017:                                   ; preds = %cond.true.2010
  %947 = load i64, i64* @re_max_failures, align 8
  %mul2018 = mul i64 %947, 20
  br label %cond.end.2023

cond.false.2019:                                  ; preds = %cond.true.2010
  %size2020 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %948 = load i64, i64* %size2020, align 8
  %mul2021 = mul i64 %948, 8
  %mul2022 = mul i64 %mul2021, 4
  br label %cond.end.2023

cond.end.2023:                                    ; preds = %cond.false.2019, %cond.true.2017
  %cond2024 = phi i64 [ %mul2018, %cond.true.2017 ], [ %mul2022, %cond.false.2019 ]
  %949 = load i64, i64* %sa_avail, align 8
  %sub2025 = sub i64 %949, %cond2024
  store i64 %sub2025, i64* %sa_avail, align 8
  %950 = load i64, i64* @re_max_failures, align 8
  %mul2026 = mul i64 %950, 20
  %size2027 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %951 = load i64, i64* %size2027, align 8
  %mul2028 = mul i64 %951, 8
  %mul2029 = mul i64 %mul2028, 4
  %cmp2030 = icmp ult i64 %mul2026, %mul2029
  br i1 %cmp2030, label %cond.true.2032, label %cond.false.2034

cond.true.2032:                                   ; preds = %cond.end.2023
  %952 = load i64, i64* @re_max_failures, align 8
  %mul2033 = mul i64 %952, 20
  br label %cond.end.2038

cond.false.2034:                                  ; preds = %cond.end.2023
  %size2035 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %953 = load i64, i64* %size2035, align 8
  %mul2036 = mul i64 %953, 8
  %mul2037 = mul i64 %mul2036, 4
  br label %cond.end.2038

cond.end.2038:                                    ; preds = %cond.false.2034, %cond.true.2032
  %cond2039 = phi i64 [ %mul2033, %cond.true.2032 ], [ %mul2037, %cond.false.2034 ]
  %954 = alloca i8, i64 %cond2039
  br label %cond.end.2056

cond.false.2040:                                  ; preds = %cond.end.2006
  store i8 1, i8* %sa_must_free, align 1
  %955 = load i64, i64* @re_max_failures, align 8
  %mul2041 = mul i64 %955, 20
  %size2042 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %956 = load i64, i64* %size2042, align 8
  %mul2043 = mul i64 %956, 8
  %mul2044 = mul i64 %mul2043, 4
  %cmp2045 = icmp ult i64 %mul2041, %mul2044
  br i1 %cmp2045, label %cond.true.2047, label %cond.false.2049

cond.true.2047:                                   ; preds = %cond.false.2040
  %957 = load i64, i64* @re_max_failures, align 8
  %mul2048 = mul i64 %957, 20
  br label %cond.end.2053

cond.false.2049:                                  ; preds = %cond.false.2040
  %size2050 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %958 = load i64, i64* %size2050, align 8
  %mul2051 = mul i64 %958, 8
  %mul2052 = mul i64 %mul2051, 4
  br label %cond.end.2053

cond.end.2053:                                    ; preds = %cond.false.2049, %cond.true.2047
  %cond2054 = phi i64 [ %mul2048, %cond.true.2047 ], [ %mul2052, %cond.false.2049 ]
  %call2055 = call i8* @record_xmalloc(i64 %cond2054)
  br label %cond.end.2056

cond.end.2056:                                    ; preds = %cond.end.2053, %cond.end.2038
  %cond2057 = phi i8* [ %954, %cond.end.2038 ], [ %call2055, %cond.end.2053 ]
  store i8* %cond2057, i8** %destination1979, align 8
  %959 = load i8*, i8** %destination1979, align 8
  %stack2058 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %960 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2058, align 8
  %961 = bitcast %union.fail_stack_elt* %960 to i8*
  %size2059 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %962 = load i64, i64* %size2059, align 8
  %mul2060 = mul i64 %962, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %959, i8* %961, i64 %mul2060, i32 1, i1 false)
  %963 = bitcast i8* %959 to %union.fail_stack_elt*
  %stack2061 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %963, %union.fail_stack_elt** %stack2061, align 8
  %stack2062 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %964 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2062, align 8
  %cmp2063 = icmp eq %union.fail_stack_elt* %964, null
  br i1 %cmp2063, label %cond.true.2065, label %cond.false.2066

cond.true.2065:                                   ; preds = %cond.end.2056
  br label %cond.end.2083

cond.false.2066:                                  ; preds = %cond.end.2056
  %965 = load i64, i64* @re_max_failures, align 8
  %mul2067 = mul i64 %965, 20
  %size2068 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %966 = load i64, i64* %size2068, align 8
  %mul2069 = mul i64 %966, 8
  %mul2070 = mul i64 %mul2069, 4
  %cmp2071 = icmp ult i64 %mul2067, %mul2070
  br i1 %cmp2071, label %cond.true.2073, label %cond.false.2075

cond.true.2073:                                   ; preds = %cond.false.2066
  %967 = load i64, i64* @re_max_failures, align 8
  %mul2074 = mul i64 %967, 20
  br label %cond.end.2079

cond.false.2075:                                  ; preds = %cond.false.2066
  %size2076 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %968 = load i64, i64* %size2076, align 8
  %mul2077 = mul i64 %968, 8
  %mul2078 = mul i64 %mul2077, 4
  br label %cond.end.2079

cond.end.2079:                                    ; preds = %cond.false.2075, %cond.true.2073
  %cond2080 = phi i64 [ %mul2074, %cond.true.2073 ], [ %mul2078, %cond.false.2075 ]
  %div2081 = udiv i64 %cond2080, 8
  %size2082 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2081, i64* %size2082, align 8
  br label %cond.end.2083

cond.end.2083:                                    ; preds = %cond.end.2079, %cond.true.2065
  %cond2084 = phi i32 [ 0, %cond.true.2065 ], [ 1, %cond.end.2079 ]
  %tobool2085 = icmp ne i32 %cond2084, 0
  br i1 %tobool2085, label %if.end.2087, label %if.then.2086

if.then.2086:                                     ; preds = %cond.end.2083, %cond.true.1992
  store i64 -2, i64* %retval
  br label %return

if.end.2087:                                      ; preds = %cond.end.2083, %cond.true.1992
  br label %while.cond.1980

while.end.2088:                                   ; preds = %while.cond.1980
  %frame2089 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %969 = load i64, i64* %frame2089, align 8
  %avail2090 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %970 = load i64, i64* %avail2090, align 8
  %inc2091 = add i64 %970, 1
  store i64 %inc2091, i64* %avail2090, align 8
  %stack2092 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %971 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2092, align 8
  %arrayidx2093 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %971, i64 %970
  %integer2094 = bitcast %union.fail_stack_elt* %arrayidx2093 to i64*
  store i64 %969, i64* %integer2094, align 8
  %avail2095 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %972 = load i64, i64* %avail2095, align 8
  %inc2096 = add i64 %972, 1
  store i64 %inc2096, i64* %avail2095, align 8
  %stack2097 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %973 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2097, align 8
  %arrayidx2098 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %973, i64 %972
  %pointer2099 = bitcast %union.fail_stack_elt* %arrayidx2098 to i8**
  store i8* null, i8** %pointer2099, align 8
  %974 = load i8*, i8** %p, align 8
  %add.ptr2100 = getelementptr inbounds i8, i8* %974, i64 -3
  %avail2101 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %975 = load i64, i64* %avail2101, align 8
  %inc2102 = add i64 %975, 1
  store i64 %inc2102, i64* %avail2101, align 8
  %stack2103 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %976 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2103, align 8
  %arrayidx2104 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %976, i64 %975
  %pointer2105 = bitcast %union.fail_stack_elt* %arrayidx2104 to i8**
  store i8* %add.ptr2100, i8** %pointer2105, align 8
  %avail2106 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %977 = load i64, i64* %avail2106, align 8
  %frame2107 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %977, i64* %frame2107, align 8
  br label %do.end.2109

do.end.2109:                                      ; preds = %while.end.2088
  br label %sw.epilog

sw.bb.2110:                                       ; preds = %if.end.578
  %call2111 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2111, i32* %mcnt, align 4
  store i32 0, i32* %cycle, align 4
  br label %do.body.2112

do.body.2112:                                     ; preds = %sw.bb.2110
  %frame2113 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %978 = load i64, i64* %frame2113, align 8
  store i64 %978, i64* %failure, align 8
  br label %while.cond.2114

while.cond.2114:                                  ; preds = %if.end.2144, %do.body.2112
  %979 = load i64, i64* %failure, align 8
  %cmp2115 = icmp sgt i64 %979, 0
  br i1 %cmp2115, label %land.rhs.2117, label %land.end.2133

land.rhs.2117:                                    ; preds = %while.cond.2114
  %980 = load i64, i64* %failure, align 8
  %sub2118 = sub nsw i64 %980, 2
  %stack2119 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %981 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2119, align 8
  %arrayidx2120 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %981, i64 %sub2118
  %pointer2121 = bitcast %union.fail_stack_elt* %arrayidx2120 to i8**
  %982 = load i8*, i8** %pointer2121, align 8
  %983 = load i8*, i8** %d, align 8
  %cmp2122 = icmp eq i8* %982, %983
  br i1 %cmp2122, label %lor.end.2131, label %lor.rhs.2124

lor.rhs.2124:                                     ; preds = %land.rhs.2117
  %984 = load i64, i64* %failure, align 8
  %sub2125 = sub nsw i64 %984, 2
  %stack2126 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %985 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2126, align 8
  %arrayidx2127 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %985, i64 %sub2125
  %pointer2128 = bitcast %union.fail_stack_elt* %arrayidx2127 to i8**
  %986 = load i8*, i8** %pointer2128, align 8
  %cmp2129 = icmp eq i8* %986, null
  br label %lor.end.2131

lor.end.2131:                                     ; preds = %lor.rhs.2124, %land.rhs.2117
  %987 = phi i1 [ true, %land.rhs.2117 ], [ %cmp2129, %lor.rhs.2124 ]
  br label %land.end.2133

land.end.2133:                                    ; preds = %lor.end.2131, %while.cond.2114
  %988 = phi i1 [ false, %while.cond.2114 ], [ %987, %lor.end.2131 ]
  br i1 %988, label %while.body.2135, label %while.end.2149

while.body.2135:                                  ; preds = %land.end.2133
  %989 = load i64, i64* %failure, align 8
  %sub2136 = sub nsw i64 %989, 1
  %stack2137 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %990 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2137, align 8
  %arrayidx2138 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %990, i64 %sub2136
  %pointer2139 = bitcast %union.fail_stack_elt* %arrayidx2138 to i8**
  %991 = load i8*, i8** %pointer2139, align 8
  %992 = load i8*, i8** %p, align 8
  %add.ptr2140 = getelementptr inbounds i8, i8* %992, i64 -4
  %cmp2141 = icmp eq i8* %991, %add.ptr2140
  br i1 %cmp2141, label %if.then.2143, label %if.end.2144

if.then.2143:                                     ; preds = %while.body.2135
  store i32 1, i32* %cycle, align 4
  br label %while.end.2149

if.end.2144:                                      ; preds = %while.body.2135
  %993 = load i64, i64* %failure, align 8
  %sub2145 = sub nsw i64 %993, 3
  %stack2146 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %994 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2146, align 8
  %arrayidx2147 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %994, i64 %sub2145
  %integer2148 = bitcast %union.fail_stack_elt* %arrayidx2147 to i64*
  %995 = load i64, i64* %integer2148, align 8
  store i64 %995, i64* %failure, align 8
  br label %while.cond.2114

while.end.2149:                                   ; preds = %if.then.2143, %land.end.2133
  br label %do.end.2151

do.end.2151:                                      ; preds = %while.end.2149
  %996 = load i32, i32* %cycle, align 4
  %tobool2152 = icmp ne i32 %996, 0
  br i1 %tobool2152, label %if.end.2286, label %if.then.2153

if.then.2153:                                     ; preds = %do.end.2151
  br label %do.body.2154

do.body.2154:                                     ; preds = %if.then.2153
  br label %while.cond.2156

while.cond.2156:                                  ; preds = %if.end.2263, %do.body.2154
  %size2157 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %997 = load i64, i64* %size2157, align 8
  %avail2158 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %998 = load i64, i64* %avail2158, align 8
  %sub2159 = sub i64 %997, %998
  %cmp2160 = icmp ule i64 %sub2159, 3
  br i1 %cmp2160, label %while.body.2162, label %while.end.2264

while.body.2162:                                  ; preds = %while.cond.2156
  %size2163 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %999 = load i64, i64* %size2163, align 8
  %mul2164 = mul i64 %999, 8
  %1000 = load i64, i64* @re_max_failures, align 8
  %mul2165 = mul i64 %1000, 20
  %cmp2166 = icmp uge i64 %mul2164, %mul2165
  br i1 %cmp2166, label %cond.true.2168, label %cond.false.2169

cond.true.2168:                                   ; preds = %while.body.2162
  br i1 false, label %if.end.2263, label %if.then.2262

cond.false.2169:                                  ; preds = %while.body.2162
  %1001 = load i64, i64* @re_max_failures, align 8
  %mul2170 = mul i64 %1001, 20
  %size2171 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1002 = load i64, i64* %size2171, align 8
  %mul2172 = mul i64 %1002, 8
  %mul2173 = mul i64 %mul2172, 4
  %cmp2174 = icmp ult i64 %mul2170, %mul2173
  br i1 %cmp2174, label %cond.true.2176, label %cond.false.2178

cond.true.2176:                                   ; preds = %cond.false.2169
  %1003 = load i64, i64* @re_max_failures, align 8
  %mul2177 = mul i64 %1003, 20
  br label %cond.end.2182

cond.false.2178:                                  ; preds = %cond.false.2169
  %size2179 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1004 = load i64, i64* %size2179, align 8
  %mul2180 = mul i64 %1004, 8
  %mul2181 = mul i64 %mul2180, 4
  br label %cond.end.2182

cond.end.2182:                                    ; preds = %cond.false.2178, %cond.true.2176
  %cond2183 = phi i64 [ %mul2177, %cond.true.2176 ], [ %mul2181, %cond.false.2178 ]
  %1005 = load i64, i64* %sa_avail, align 8
  %cmp2184 = icmp ule i64 %cond2183, %1005
  br i1 %cmp2184, label %cond.true.2186, label %cond.false.2216

cond.true.2186:                                   ; preds = %cond.end.2182
  %1006 = load i64, i64* @re_max_failures, align 8
  %mul2187 = mul i64 %1006, 20
  %size2188 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1007 = load i64, i64* %size2188, align 8
  %mul2189 = mul i64 %1007, 8
  %mul2190 = mul i64 %mul2189, 4
  %cmp2191 = icmp ult i64 %mul2187, %mul2190
  br i1 %cmp2191, label %cond.true.2193, label %cond.false.2195

cond.true.2193:                                   ; preds = %cond.true.2186
  %1008 = load i64, i64* @re_max_failures, align 8
  %mul2194 = mul i64 %1008, 20
  br label %cond.end.2199

cond.false.2195:                                  ; preds = %cond.true.2186
  %size2196 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1009 = load i64, i64* %size2196, align 8
  %mul2197 = mul i64 %1009, 8
  %mul2198 = mul i64 %mul2197, 4
  br label %cond.end.2199

cond.end.2199:                                    ; preds = %cond.false.2195, %cond.true.2193
  %cond2200 = phi i64 [ %mul2194, %cond.true.2193 ], [ %mul2198, %cond.false.2195 ]
  %1010 = load i64, i64* %sa_avail, align 8
  %sub2201 = sub i64 %1010, %cond2200
  store i64 %sub2201, i64* %sa_avail, align 8
  %1011 = load i64, i64* @re_max_failures, align 8
  %mul2202 = mul i64 %1011, 20
  %size2203 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1012 = load i64, i64* %size2203, align 8
  %mul2204 = mul i64 %1012, 8
  %mul2205 = mul i64 %mul2204, 4
  %cmp2206 = icmp ult i64 %mul2202, %mul2205
  br i1 %cmp2206, label %cond.true.2208, label %cond.false.2210

cond.true.2208:                                   ; preds = %cond.end.2199
  %1013 = load i64, i64* @re_max_failures, align 8
  %mul2209 = mul i64 %1013, 20
  br label %cond.end.2214

cond.false.2210:                                  ; preds = %cond.end.2199
  %size2211 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1014 = load i64, i64* %size2211, align 8
  %mul2212 = mul i64 %1014, 8
  %mul2213 = mul i64 %mul2212, 4
  br label %cond.end.2214

cond.end.2214:                                    ; preds = %cond.false.2210, %cond.true.2208
  %cond2215 = phi i64 [ %mul2209, %cond.true.2208 ], [ %mul2213, %cond.false.2210 ]
  %1015 = alloca i8, i64 %cond2215
  br label %cond.end.2232

cond.false.2216:                                  ; preds = %cond.end.2182
  store i8 1, i8* %sa_must_free, align 1
  %1016 = load i64, i64* @re_max_failures, align 8
  %mul2217 = mul i64 %1016, 20
  %size2218 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1017 = load i64, i64* %size2218, align 8
  %mul2219 = mul i64 %1017, 8
  %mul2220 = mul i64 %mul2219, 4
  %cmp2221 = icmp ult i64 %mul2217, %mul2220
  br i1 %cmp2221, label %cond.true.2223, label %cond.false.2225

cond.true.2223:                                   ; preds = %cond.false.2216
  %1018 = load i64, i64* @re_max_failures, align 8
  %mul2224 = mul i64 %1018, 20
  br label %cond.end.2229

cond.false.2225:                                  ; preds = %cond.false.2216
  %size2226 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1019 = load i64, i64* %size2226, align 8
  %mul2227 = mul i64 %1019, 8
  %mul2228 = mul i64 %mul2227, 4
  br label %cond.end.2229

cond.end.2229:                                    ; preds = %cond.false.2225, %cond.true.2223
  %cond2230 = phi i64 [ %mul2224, %cond.true.2223 ], [ %mul2228, %cond.false.2225 ]
  %call2231 = call i8* @record_xmalloc(i64 %cond2230)
  br label %cond.end.2232

cond.end.2232:                                    ; preds = %cond.end.2229, %cond.end.2214
  %cond2233 = phi i8* [ %1015, %cond.end.2214 ], [ %call2231, %cond.end.2229 ]
  store i8* %cond2233, i8** %destination2155, align 8
  %1020 = load i8*, i8** %destination2155, align 8
  %stack2234 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1021 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2234, align 8
  %1022 = bitcast %union.fail_stack_elt* %1021 to i8*
  %size2235 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1023 = load i64, i64* %size2235, align 8
  %mul2236 = mul i64 %1023, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1020, i8* %1022, i64 %mul2236, i32 1, i1 false)
  %1024 = bitcast i8* %1020 to %union.fail_stack_elt*
  %stack2237 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1024, %union.fail_stack_elt** %stack2237, align 8
  %stack2238 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1025 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2238, align 8
  %cmp2239 = icmp eq %union.fail_stack_elt* %1025, null
  br i1 %cmp2239, label %cond.true.2241, label %cond.false.2242

cond.true.2241:                                   ; preds = %cond.end.2232
  br label %cond.end.2259

cond.false.2242:                                  ; preds = %cond.end.2232
  %1026 = load i64, i64* @re_max_failures, align 8
  %mul2243 = mul i64 %1026, 20
  %size2244 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1027 = load i64, i64* %size2244, align 8
  %mul2245 = mul i64 %1027, 8
  %mul2246 = mul i64 %mul2245, 4
  %cmp2247 = icmp ult i64 %mul2243, %mul2246
  br i1 %cmp2247, label %cond.true.2249, label %cond.false.2251

cond.true.2249:                                   ; preds = %cond.false.2242
  %1028 = load i64, i64* @re_max_failures, align 8
  %mul2250 = mul i64 %1028, 20
  br label %cond.end.2255

cond.false.2251:                                  ; preds = %cond.false.2242
  %size2252 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1029 = load i64, i64* %size2252, align 8
  %mul2253 = mul i64 %1029, 8
  %mul2254 = mul i64 %mul2253, 4
  br label %cond.end.2255

cond.end.2255:                                    ; preds = %cond.false.2251, %cond.true.2249
  %cond2256 = phi i64 [ %mul2250, %cond.true.2249 ], [ %mul2254, %cond.false.2251 ]
  %div2257 = udiv i64 %cond2256, 8
  %size2258 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2257, i64* %size2258, align 8
  br label %cond.end.2259

cond.end.2259:                                    ; preds = %cond.end.2255, %cond.true.2241
  %cond2260 = phi i32 [ 0, %cond.true.2241 ], [ 1, %cond.end.2255 ]
  %tobool2261 = icmp ne i32 %cond2260, 0
  br i1 %tobool2261, label %if.end.2263, label %if.then.2262

if.then.2262:                                     ; preds = %cond.end.2259, %cond.true.2168
  store i64 -2, i64* %retval
  br label %return

if.end.2263:                                      ; preds = %cond.end.2259, %cond.true.2168
  br label %while.cond.2156

while.end.2264:                                   ; preds = %while.cond.2156
  %frame2265 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %1030 = load i64, i64* %frame2265, align 8
  %avail2266 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1031 = load i64, i64* %avail2266, align 8
  %inc2267 = add i64 %1031, 1
  store i64 %inc2267, i64* %avail2266, align 8
  %stack2268 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1032 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2268, align 8
  %arrayidx2269 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1032, i64 %1031
  %integer2270 = bitcast %union.fail_stack_elt* %arrayidx2269 to i64*
  store i64 %1030, i64* %integer2270, align 8
  %1033 = load i8*, i8** %d, align 8
  %avail2271 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1034 = load i64, i64* %avail2271, align 8
  %inc2272 = add i64 %1034, 1
  store i64 %inc2272, i64* %avail2271, align 8
  %stack2273 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1035 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2273, align 8
  %arrayidx2274 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1035, i64 %1034
  %pointer2275 = bitcast %union.fail_stack_elt* %arrayidx2274 to i8**
  store i8* %1033, i8** %pointer2275, align 8
  %1036 = load i8*, i8** %p, align 8
  %add.ptr2276 = getelementptr inbounds i8, i8* %1036, i64 -3
  %avail2277 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1037 = load i64, i64* %avail2277, align 8
  %inc2278 = add i64 %1037, 1
  store i64 %inc2278, i64* %avail2277, align 8
  %stack2279 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1038 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2279, align 8
  %arrayidx2280 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1038, i64 %1037
  %pointer2281 = bitcast %union.fail_stack_elt* %arrayidx2280 to i8**
  store i8* %add.ptr2276, i8** %pointer2281, align 8
  %avail2282 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1039 = load i64, i64* %avail2282, align 8
  %frame2283 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %1039, i64* %frame2283, align 8
  br label %do.end.2285

do.end.2285:                                      ; preds = %while.end.2264
  br label %if.end.2286

if.end.2286:                                      ; preds = %do.end.2285, %do.end.2151
  br label %sw.epilog

sw.bb.2287:                                       ; preds = %if.end.578
  br label %on_failure

on_failure:                                       ; preds = %if.else.2804, %sw.bb.2287
  %call2288 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2288, i32* %mcnt, align 4
  store i32 0, i32* %cycle2289, align 4
  br label %do.body.2290

do.body.2290:                                     ; preds = %on_failure
  %frame2292 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %1040 = load i64, i64* %frame2292, align 8
  store i64 %1040, i64* %failure2291, align 8
  br label %while.cond.2293

while.cond.2293:                                  ; preds = %if.end.2323, %do.body.2290
  %1041 = load i64, i64* %failure2291, align 8
  %cmp2294 = icmp sgt i64 %1041, 0
  br i1 %cmp2294, label %land.rhs.2296, label %land.end.2312

land.rhs.2296:                                    ; preds = %while.cond.2293
  %1042 = load i64, i64* %failure2291, align 8
  %sub2297 = sub nsw i64 %1042, 2
  %stack2298 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1043 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2298, align 8
  %arrayidx2299 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1043, i64 %sub2297
  %pointer2300 = bitcast %union.fail_stack_elt* %arrayidx2299 to i8**
  %1044 = load i8*, i8** %pointer2300, align 8
  %1045 = load i8*, i8** %d, align 8
  %cmp2301 = icmp eq i8* %1044, %1045
  br i1 %cmp2301, label %lor.end.2310, label %lor.rhs.2303

lor.rhs.2303:                                     ; preds = %land.rhs.2296
  %1046 = load i64, i64* %failure2291, align 8
  %sub2304 = sub nsw i64 %1046, 2
  %stack2305 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1047 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2305, align 8
  %arrayidx2306 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1047, i64 %sub2304
  %pointer2307 = bitcast %union.fail_stack_elt* %arrayidx2306 to i8**
  %1048 = load i8*, i8** %pointer2307, align 8
  %cmp2308 = icmp eq i8* %1048, null
  br label %lor.end.2310

lor.end.2310:                                     ; preds = %lor.rhs.2303, %land.rhs.2296
  %1049 = phi i1 [ true, %land.rhs.2296 ], [ %cmp2308, %lor.rhs.2303 ]
  br label %land.end.2312

land.end.2312:                                    ; preds = %lor.end.2310, %while.cond.2293
  %1050 = phi i1 [ false, %while.cond.2293 ], [ %1049, %lor.end.2310 ]
  br i1 %1050, label %while.body.2314, label %while.end.2328

while.body.2314:                                  ; preds = %land.end.2312
  %1051 = load i64, i64* %failure2291, align 8
  %sub2315 = sub nsw i64 %1051, 1
  %stack2316 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1052 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2316, align 8
  %arrayidx2317 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1052, i64 %sub2315
  %pointer2318 = bitcast %union.fail_stack_elt* %arrayidx2317 to i8**
  %1053 = load i8*, i8** %pointer2318, align 8
  %1054 = load i8*, i8** %p, align 8
  %add.ptr2319 = getelementptr inbounds i8, i8* %1054, i64 -3
  %cmp2320 = icmp eq i8* %1053, %add.ptr2319
  br i1 %cmp2320, label %if.then.2322, label %if.end.2323

if.then.2322:                                     ; preds = %while.body.2314
  store i32 1, i32* %cycle2289, align 4
  br label %while.end.2328

if.end.2323:                                      ; preds = %while.body.2314
  %1055 = load i64, i64* %failure2291, align 8
  %sub2324 = sub nsw i64 %1055, 3
  %stack2325 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1056 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2325, align 8
  %arrayidx2326 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1056, i64 %sub2324
  %integer2327 = bitcast %union.fail_stack_elt* %arrayidx2326 to i64*
  %1057 = load i64, i64* %integer2327, align 8
  store i64 %1057, i64* %failure2291, align 8
  br label %while.cond.2293

while.end.2328:                                   ; preds = %if.then.2322, %land.end.2312
  br label %do.end.2330

do.end.2330:                                      ; preds = %while.end.2328
  %1058 = load i32, i32* %cycle2289, align 4
  %tobool2331 = icmp ne i32 %1058, 0
  br i1 %tobool2331, label %if.then.2332, label %if.else.2335

if.then.2332:                                     ; preds = %do.end.2330
  %1059 = load i32, i32* %mcnt, align 4
  %1060 = load i8*, i8** %p, align 8
  %idx.ext2333 = sext i32 %1059 to i64
  %add.ptr2334 = getelementptr inbounds i8, i8* %1060, i64 %idx.ext2333
  store i8* %add.ptr2334, i8** %p, align 8
  br label %if.end.2468

if.else.2335:                                     ; preds = %do.end.2330
  br label %do.body.2336

do.body.2336:                                     ; preds = %if.else.2335
  br label %while.cond.2338

while.cond.2338:                                  ; preds = %if.end.2445, %do.body.2336
  %size2339 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1061 = load i64, i64* %size2339, align 8
  %avail2340 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1062 = load i64, i64* %avail2340, align 8
  %sub2341 = sub i64 %1061, %1062
  %cmp2342 = icmp ule i64 %sub2341, 3
  br i1 %cmp2342, label %while.body.2344, label %while.end.2446

while.body.2344:                                  ; preds = %while.cond.2338
  %size2345 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1063 = load i64, i64* %size2345, align 8
  %mul2346 = mul i64 %1063, 8
  %1064 = load i64, i64* @re_max_failures, align 8
  %mul2347 = mul i64 %1064, 20
  %cmp2348 = icmp uge i64 %mul2346, %mul2347
  br i1 %cmp2348, label %cond.true.2350, label %cond.false.2351

cond.true.2350:                                   ; preds = %while.body.2344
  br i1 false, label %if.end.2445, label %if.then.2444

cond.false.2351:                                  ; preds = %while.body.2344
  %1065 = load i64, i64* @re_max_failures, align 8
  %mul2352 = mul i64 %1065, 20
  %size2353 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1066 = load i64, i64* %size2353, align 8
  %mul2354 = mul i64 %1066, 8
  %mul2355 = mul i64 %mul2354, 4
  %cmp2356 = icmp ult i64 %mul2352, %mul2355
  br i1 %cmp2356, label %cond.true.2358, label %cond.false.2360

cond.true.2358:                                   ; preds = %cond.false.2351
  %1067 = load i64, i64* @re_max_failures, align 8
  %mul2359 = mul i64 %1067, 20
  br label %cond.end.2364

cond.false.2360:                                  ; preds = %cond.false.2351
  %size2361 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1068 = load i64, i64* %size2361, align 8
  %mul2362 = mul i64 %1068, 8
  %mul2363 = mul i64 %mul2362, 4
  br label %cond.end.2364

cond.end.2364:                                    ; preds = %cond.false.2360, %cond.true.2358
  %cond2365 = phi i64 [ %mul2359, %cond.true.2358 ], [ %mul2363, %cond.false.2360 ]
  %1069 = load i64, i64* %sa_avail, align 8
  %cmp2366 = icmp ule i64 %cond2365, %1069
  br i1 %cmp2366, label %cond.true.2368, label %cond.false.2398

cond.true.2368:                                   ; preds = %cond.end.2364
  %1070 = load i64, i64* @re_max_failures, align 8
  %mul2369 = mul i64 %1070, 20
  %size2370 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1071 = load i64, i64* %size2370, align 8
  %mul2371 = mul i64 %1071, 8
  %mul2372 = mul i64 %mul2371, 4
  %cmp2373 = icmp ult i64 %mul2369, %mul2372
  br i1 %cmp2373, label %cond.true.2375, label %cond.false.2377

cond.true.2375:                                   ; preds = %cond.true.2368
  %1072 = load i64, i64* @re_max_failures, align 8
  %mul2376 = mul i64 %1072, 20
  br label %cond.end.2381

cond.false.2377:                                  ; preds = %cond.true.2368
  %size2378 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1073 = load i64, i64* %size2378, align 8
  %mul2379 = mul i64 %1073, 8
  %mul2380 = mul i64 %mul2379, 4
  br label %cond.end.2381

cond.end.2381:                                    ; preds = %cond.false.2377, %cond.true.2375
  %cond2382 = phi i64 [ %mul2376, %cond.true.2375 ], [ %mul2380, %cond.false.2377 ]
  %1074 = load i64, i64* %sa_avail, align 8
  %sub2383 = sub i64 %1074, %cond2382
  store i64 %sub2383, i64* %sa_avail, align 8
  %1075 = load i64, i64* @re_max_failures, align 8
  %mul2384 = mul i64 %1075, 20
  %size2385 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1076 = load i64, i64* %size2385, align 8
  %mul2386 = mul i64 %1076, 8
  %mul2387 = mul i64 %mul2386, 4
  %cmp2388 = icmp ult i64 %mul2384, %mul2387
  br i1 %cmp2388, label %cond.true.2390, label %cond.false.2392

cond.true.2390:                                   ; preds = %cond.end.2381
  %1077 = load i64, i64* @re_max_failures, align 8
  %mul2391 = mul i64 %1077, 20
  br label %cond.end.2396

cond.false.2392:                                  ; preds = %cond.end.2381
  %size2393 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1078 = load i64, i64* %size2393, align 8
  %mul2394 = mul i64 %1078, 8
  %mul2395 = mul i64 %mul2394, 4
  br label %cond.end.2396

cond.end.2396:                                    ; preds = %cond.false.2392, %cond.true.2390
  %cond2397 = phi i64 [ %mul2391, %cond.true.2390 ], [ %mul2395, %cond.false.2392 ]
  %1079 = alloca i8, i64 %cond2397
  br label %cond.end.2414

cond.false.2398:                                  ; preds = %cond.end.2364
  store i8 1, i8* %sa_must_free, align 1
  %1080 = load i64, i64* @re_max_failures, align 8
  %mul2399 = mul i64 %1080, 20
  %size2400 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1081 = load i64, i64* %size2400, align 8
  %mul2401 = mul i64 %1081, 8
  %mul2402 = mul i64 %mul2401, 4
  %cmp2403 = icmp ult i64 %mul2399, %mul2402
  br i1 %cmp2403, label %cond.true.2405, label %cond.false.2407

cond.true.2405:                                   ; preds = %cond.false.2398
  %1082 = load i64, i64* @re_max_failures, align 8
  %mul2406 = mul i64 %1082, 20
  br label %cond.end.2411

cond.false.2407:                                  ; preds = %cond.false.2398
  %size2408 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1083 = load i64, i64* %size2408, align 8
  %mul2409 = mul i64 %1083, 8
  %mul2410 = mul i64 %mul2409, 4
  br label %cond.end.2411

cond.end.2411:                                    ; preds = %cond.false.2407, %cond.true.2405
  %cond2412 = phi i64 [ %mul2406, %cond.true.2405 ], [ %mul2410, %cond.false.2407 ]
  %call2413 = call i8* @record_xmalloc(i64 %cond2412)
  br label %cond.end.2414

cond.end.2414:                                    ; preds = %cond.end.2411, %cond.end.2396
  %cond2415 = phi i8* [ %1079, %cond.end.2396 ], [ %call2413, %cond.end.2411 ]
  store i8* %cond2415, i8** %destination2337, align 8
  %1084 = load i8*, i8** %destination2337, align 8
  %stack2416 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1085 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2416, align 8
  %1086 = bitcast %union.fail_stack_elt* %1085 to i8*
  %size2417 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1087 = load i64, i64* %size2417, align 8
  %mul2418 = mul i64 %1087, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1084, i8* %1086, i64 %mul2418, i32 1, i1 false)
  %1088 = bitcast i8* %1084 to %union.fail_stack_elt*
  %stack2419 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1088, %union.fail_stack_elt** %stack2419, align 8
  %stack2420 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1089 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2420, align 8
  %cmp2421 = icmp eq %union.fail_stack_elt* %1089, null
  br i1 %cmp2421, label %cond.true.2423, label %cond.false.2424

cond.true.2423:                                   ; preds = %cond.end.2414
  br label %cond.end.2441

cond.false.2424:                                  ; preds = %cond.end.2414
  %1090 = load i64, i64* @re_max_failures, align 8
  %mul2425 = mul i64 %1090, 20
  %size2426 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1091 = load i64, i64* %size2426, align 8
  %mul2427 = mul i64 %1091, 8
  %mul2428 = mul i64 %mul2427, 4
  %cmp2429 = icmp ult i64 %mul2425, %mul2428
  br i1 %cmp2429, label %cond.true.2431, label %cond.false.2433

cond.true.2431:                                   ; preds = %cond.false.2424
  %1092 = load i64, i64* @re_max_failures, align 8
  %mul2432 = mul i64 %1092, 20
  br label %cond.end.2437

cond.false.2433:                                  ; preds = %cond.false.2424
  %size2434 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1093 = load i64, i64* %size2434, align 8
  %mul2435 = mul i64 %1093, 8
  %mul2436 = mul i64 %mul2435, 4
  br label %cond.end.2437

cond.end.2437:                                    ; preds = %cond.false.2433, %cond.true.2431
  %cond2438 = phi i64 [ %mul2432, %cond.true.2431 ], [ %mul2436, %cond.false.2433 ]
  %div2439 = udiv i64 %cond2438, 8
  %size2440 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2439, i64* %size2440, align 8
  br label %cond.end.2441

cond.end.2441:                                    ; preds = %cond.end.2437, %cond.true.2423
  %cond2442 = phi i32 [ 0, %cond.true.2423 ], [ 1, %cond.end.2437 ]
  %tobool2443 = icmp ne i32 %cond2442, 0
  br i1 %tobool2443, label %if.end.2445, label %if.then.2444

if.then.2444:                                     ; preds = %cond.end.2441, %cond.true.2350
  store i64 -2, i64* %retval
  br label %return

if.end.2445:                                      ; preds = %cond.end.2441, %cond.true.2350
  br label %while.cond.2338

while.end.2446:                                   ; preds = %while.cond.2338
  %frame2447 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %1094 = load i64, i64* %frame2447, align 8
  %avail2448 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1095 = load i64, i64* %avail2448, align 8
  %inc2449 = add i64 %1095, 1
  store i64 %inc2449, i64* %avail2448, align 8
  %stack2450 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1096 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2450, align 8
  %arrayidx2451 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1096, i64 %1095
  %integer2452 = bitcast %union.fail_stack_elt* %arrayidx2451 to i64*
  store i64 %1094, i64* %integer2452, align 8
  %1097 = load i8*, i8** %d, align 8
  %avail2453 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1098 = load i64, i64* %avail2453, align 8
  %inc2454 = add i64 %1098, 1
  store i64 %inc2454, i64* %avail2453, align 8
  %stack2455 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1099 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2455, align 8
  %arrayidx2456 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1099, i64 %1098
  %pointer2457 = bitcast %union.fail_stack_elt* %arrayidx2456 to i8**
  store i8* %1097, i8** %pointer2457, align 8
  %1100 = load i8*, i8** %p, align 8
  %add.ptr2458 = getelementptr inbounds i8, i8* %1100, i64 -3
  %avail2459 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1101 = load i64, i64* %avail2459, align 8
  %inc2460 = add i64 %1101, 1
  store i64 %inc2460, i64* %avail2459, align 8
  %stack2461 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1102 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2461, align 8
  %arrayidx2462 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1102, i64 %1101
  %pointer2463 = bitcast %union.fail_stack_elt* %arrayidx2462 to i8**
  store i8* %add.ptr2458, i8** %pointer2463, align 8
  %avail2464 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1103 = load i64, i64* %avail2464, align 8
  %frame2465 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %1103, i64* %frame2465, align 8
  br label %do.end.2467

do.end.2467:                                      ; preds = %while.end.2446
  br label %if.end.2468

if.end.2468:                                      ; preds = %do.end.2467, %if.then.2332
  br label %sw.epilog

sw.bb.2469:                                       ; preds = %if.end.578
  %call2470 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2470, i32* %mcnt, align 4
  br label %do.body.2471

do.body.2471:                                     ; preds = %sw.bb.2469
  br label %while.cond.2473

while.cond.2473:                                  ; preds = %if.end.2580, %do.body.2471
  %size2474 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1104 = load i64, i64* %size2474, align 8
  %avail2475 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1105 = load i64, i64* %avail2475, align 8
  %sub2476 = sub i64 %1104, %1105
  %cmp2477 = icmp ule i64 %sub2476, 3
  br i1 %cmp2477, label %while.body.2479, label %while.end.2581

while.body.2479:                                  ; preds = %while.cond.2473
  %size2480 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1106 = load i64, i64* %size2480, align 8
  %mul2481 = mul i64 %1106, 8
  %1107 = load i64, i64* @re_max_failures, align 8
  %mul2482 = mul i64 %1107, 20
  %cmp2483 = icmp uge i64 %mul2481, %mul2482
  br i1 %cmp2483, label %cond.true.2485, label %cond.false.2486

cond.true.2485:                                   ; preds = %while.body.2479
  br i1 false, label %if.end.2580, label %if.then.2579

cond.false.2486:                                  ; preds = %while.body.2479
  %1108 = load i64, i64* @re_max_failures, align 8
  %mul2487 = mul i64 %1108, 20
  %size2488 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1109 = load i64, i64* %size2488, align 8
  %mul2489 = mul i64 %1109, 8
  %mul2490 = mul i64 %mul2489, 4
  %cmp2491 = icmp ult i64 %mul2487, %mul2490
  br i1 %cmp2491, label %cond.true.2493, label %cond.false.2495

cond.true.2493:                                   ; preds = %cond.false.2486
  %1110 = load i64, i64* @re_max_failures, align 8
  %mul2494 = mul i64 %1110, 20
  br label %cond.end.2499

cond.false.2495:                                  ; preds = %cond.false.2486
  %size2496 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1111 = load i64, i64* %size2496, align 8
  %mul2497 = mul i64 %1111, 8
  %mul2498 = mul i64 %mul2497, 4
  br label %cond.end.2499

cond.end.2499:                                    ; preds = %cond.false.2495, %cond.true.2493
  %cond2500 = phi i64 [ %mul2494, %cond.true.2493 ], [ %mul2498, %cond.false.2495 ]
  %1112 = load i64, i64* %sa_avail, align 8
  %cmp2501 = icmp ule i64 %cond2500, %1112
  br i1 %cmp2501, label %cond.true.2503, label %cond.false.2533

cond.true.2503:                                   ; preds = %cond.end.2499
  %1113 = load i64, i64* @re_max_failures, align 8
  %mul2504 = mul i64 %1113, 20
  %size2505 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1114 = load i64, i64* %size2505, align 8
  %mul2506 = mul i64 %1114, 8
  %mul2507 = mul i64 %mul2506, 4
  %cmp2508 = icmp ult i64 %mul2504, %mul2507
  br i1 %cmp2508, label %cond.true.2510, label %cond.false.2512

cond.true.2510:                                   ; preds = %cond.true.2503
  %1115 = load i64, i64* @re_max_failures, align 8
  %mul2511 = mul i64 %1115, 20
  br label %cond.end.2516

cond.false.2512:                                  ; preds = %cond.true.2503
  %size2513 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1116 = load i64, i64* %size2513, align 8
  %mul2514 = mul i64 %1116, 8
  %mul2515 = mul i64 %mul2514, 4
  br label %cond.end.2516

cond.end.2516:                                    ; preds = %cond.false.2512, %cond.true.2510
  %cond2517 = phi i64 [ %mul2511, %cond.true.2510 ], [ %mul2515, %cond.false.2512 ]
  %1117 = load i64, i64* %sa_avail, align 8
  %sub2518 = sub i64 %1117, %cond2517
  store i64 %sub2518, i64* %sa_avail, align 8
  %1118 = load i64, i64* @re_max_failures, align 8
  %mul2519 = mul i64 %1118, 20
  %size2520 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1119 = load i64, i64* %size2520, align 8
  %mul2521 = mul i64 %1119, 8
  %mul2522 = mul i64 %mul2521, 4
  %cmp2523 = icmp ult i64 %mul2519, %mul2522
  br i1 %cmp2523, label %cond.true.2525, label %cond.false.2527

cond.true.2525:                                   ; preds = %cond.end.2516
  %1120 = load i64, i64* @re_max_failures, align 8
  %mul2526 = mul i64 %1120, 20
  br label %cond.end.2531

cond.false.2527:                                  ; preds = %cond.end.2516
  %size2528 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1121 = load i64, i64* %size2528, align 8
  %mul2529 = mul i64 %1121, 8
  %mul2530 = mul i64 %mul2529, 4
  br label %cond.end.2531

cond.end.2531:                                    ; preds = %cond.false.2527, %cond.true.2525
  %cond2532 = phi i64 [ %mul2526, %cond.true.2525 ], [ %mul2530, %cond.false.2527 ]
  %1122 = alloca i8, i64 %cond2532
  br label %cond.end.2549

cond.false.2533:                                  ; preds = %cond.end.2499
  store i8 1, i8* %sa_must_free, align 1
  %1123 = load i64, i64* @re_max_failures, align 8
  %mul2534 = mul i64 %1123, 20
  %size2535 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1124 = load i64, i64* %size2535, align 8
  %mul2536 = mul i64 %1124, 8
  %mul2537 = mul i64 %mul2536, 4
  %cmp2538 = icmp ult i64 %mul2534, %mul2537
  br i1 %cmp2538, label %cond.true.2540, label %cond.false.2542

cond.true.2540:                                   ; preds = %cond.false.2533
  %1125 = load i64, i64* @re_max_failures, align 8
  %mul2541 = mul i64 %1125, 20
  br label %cond.end.2546

cond.false.2542:                                  ; preds = %cond.false.2533
  %size2543 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1126 = load i64, i64* %size2543, align 8
  %mul2544 = mul i64 %1126, 8
  %mul2545 = mul i64 %mul2544, 4
  br label %cond.end.2546

cond.end.2546:                                    ; preds = %cond.false.2542, %cond.true.2540
  %cond2547 = phi i64 [ %mul2541, %cond.true.2540 ], [ %mul2545, %cond.false.2542 ]
  %call2548 = call i8* @record_xmalloc(i64 %cond2547)
  br label %cond.end.2549

cond.end.2549:                                    ; preds = %cond.end.2546, %cond.end.2531
  %cond2550 = phi i8* [ %1122, %cond.end.2531 ], [ %call2548, %cond.end.2546 ]
  store i8* %cond2550, i8** %destination2472, align 8
  %1127 = load i8*, i8** %destination2472, align 8
  %stack2551 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1128 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2551, align 8
  %1129 = bitcast %union.fail_stack_elt* %1128 to i8*
  %size2552 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1130 = load i64, i64* %size2552, align 8
  %mul2553 = mul i64 %1130, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1127, i8* %1129, i64 %mul2553, i32 1, i1 false)
  %1131 = bitcast i8* %1127 to %union.fail_stack_elt*
  %stack2554 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1131, %union.fail_stack_elt** %stack2554, align 8
  %stack2555 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1132 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2555, align 8
  %cmp2556 = icmp eq %union.fail_stack_elt* %1132, null
  br i1 %cmp2556, label %cond.true.2558, label %cond.false.2559

cond.true.2558:                                   ; preds = %cond.end.2549
  br label %cond.end.2576

cond.false.2559:                                  ; preds = %cond.end.2549
  %1133 = load i64, i64* @re_max_failures, align 8
  %mul2560 = mul i64 %1133, 20
  %size2561 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1134 = load i64, i64* %size2561, align 8
  %mul2562 = mul i64 %1134, 8
  %mul2563 = mul i64 %mul2562, 4
  %cmp2564 = icmp ult i64 %mul2560, %mul2563
  br i1 %cmp2564, label %cond.true.2566, label %cond.false.2568

cond.true.2566:                                   ; preds = %cond.false.2559
  %1135 = load i64, i64* @re_max_failures, align 8
  %mul2567 = mul i64 %1135, 20
  br label %cond.end.2572

cond.false.2568:                                  ; preds = %cond.false.2559
  %size2569 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1136 = load i64, i64* %size2569, align 8
  %mul2570 = mul i64 %1136, 8
  %mul2571 = mul i64 %mul2570, 4
  br label %cond.end.2572

cond.end.2572:                                    ; preds = %cond.false.2568, %cond.true.2566
  %cond2573 = phi i64 [ %mul2567, %cond.true.2566 ], [ %mul2571, %cond.false.2568 ]
  %div2574 = udiv i64 %cond2573, 8
  %size2575 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2574, i64* %size2575, align 8
  br label %cond.end.2576

cond.end.2576:                                    ; preds = %cond.end.2572, %cond.true.2558
  %cond2577 = phi i32 [ 0, %cond.true.2558 ], [ 1, %cond.end.2572 ]
  %tobool2578 = icmp ne i32 %cond2577, 0
  br i1 %tobool2578, label %if.end.2580, label %if.then.2579

if.then.2579:                                     ; preds = %cond.end.2576, %cond.true.2485
  store i64 -2, i64* %retval
  br label %return

if.end.2580:                                      ; preds = %cond.end.2576, %cond.true.2485
  br label %while.cond.2473

while.end.2581:                                   ; preds = %while.cond.2473
  %frame2582 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %1137 = load i64, i64* %frame2582, align 8
  %avail2583 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1138 = load i64, i64* %avail2583, align 8
  %inc2584 = add i64 %1138, 1
  store i64 %inc2584, i64* %avail2583, align 8
  %stack2585 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1139 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2585, align 8
  %arrayidx2586 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1139, i64 %1138
  %integer2587 = bitcast %union.fail_stack_elt* %arrayidx2586 to i64*
  store i64 %1137, i64* %integer2587, align 8
  %1140 = load i8*, i8** %d, align 8
  %avail2588 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1141 = load i64, i64* %avail2588, align 8
  %inc2589 = add i64 %1141, 1
  store i64 %inc2589, i64* %avail2588, align 8
  %stack2590 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1142 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2590, align 8
  %arrayidx2591 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1142, i64 %1141
  %pointer2592 = bitcast %union.fail_stack_elt* %arrayidx2591 to i8**
  store i8* %1140, i8** %pointer2592, align 8
  %1143 = load i8*, i8** %p, align 8
  %add.ptr2593 = getelementptr inbounds i8, i8* %1143, i64 -3
  %avail2594 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1144 = load i64, i64* %avail2594, align 8
  %inc2595 = add i64 %1144, 1
  store i64 %inc2595, i64* %avail2594, align 8
  %stack2596 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1145 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2596, align 8
  %arrayidx2597 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1145, i64 %1144
  %pointer2598 = bitcast %union.fail_stack_elt* %arrayidx2597 to i8**
  store i8* %add.ptr2593, i8** %pointer2598, align 8
  %avail2599 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1146 = load i64, i64* %avail2599, align 8
  %frame2600 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %1146, i64* %frame2600, align 8
  br label %do.end.2602

do.end.2602:                                      ; preds = %while.end.2581
  br label %sw.epilog

sw.bb.2603:                                       ; preds = %if.end.578
  %call2604 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2604, i32* %mcnt, align 4
  %1147 = load i8*, i8** %p, align 8
  store i8* %1147, i8** %p1, align 8
  %1148 = load i8*, i8** %p, align 8
  %1149 = load i32, i32* %mcnt, align 4
  %idx.ext2605 = sext i32 %1149 to i64
  %add.ptr2606 = getelementptr inbounds i8, i8* %1148, i64 %idx.ext2605
  store i8* %add.ptr2606, i8** %p2, align 8
  %1150 = load i8*, i8** %p, align 8
  %add.ptr2607 = getelementptr inbounds i8, i8* %1150, i64 -3
  store i8* %add.ptr2607, i8** %p3, align 8
  %1151 = load i8*, i8** %p, align 8
  %add.ptr2608 = getelementptr inbounds i8, i8* %1151, i64 -3
  store i8* %add.ptr2608, i8** %p, align 8
  %1152 = load i8*, i8** %p2, align 8
  %add.ptr2609 = getelementptr inbounds i8, i8* %1152, i64 -2
  %call2610 = call i32 @extract_number(i8* %add.ptr2609)
  store i32 %call2610, i32* %mcnt, align 4
  %1153 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %1154 = load i8*, i8** %p1, align 8
  %1155 = load i8*, i8** %p2, align 8
  %call2611 = call i32 @mutually_exclusive_p(%struct.re_pattern_buffer* %1153, i8* %1154, i8* %1155)
  %tobool2612 = icmp ne i32 %call2611, 0
  br i1 %tobool2612, label %if.then.2613, label %if.else.2626

if.then.2613:                                     ; preds = %sw.bb.2603
  %1156 = load i8*, i8** %p3, align 8
  store i8 15, i8* %1156, align 1
  br label %do.body.2614

do.body.2614:                                     ; preds = %if.then.2613
  %1157 = load i32, i32* %mcnt, align 4
  %add2615 = add nsw i32 %1157, 3
  %and2616 = and i32 %add2615, 255
  %conv2617 = trunc i32 %and2616 to i8
  %1158 = load i8*, i8** %p2, align 8
  %add.ptr2618 = getelementptr inbounds i8, i8* %1158, i64 -2
  %arrayidx2619 = getelementptr inbounds i8, i8* %add.ptr2618, i64 0
  store i8 %conv2617, i8* %arrayidx2619, align 1
  %1159 = load i32, i32* %mcnt, align 4
  %add2620 = add nsw i32 %1159, 3
  %shr = ashr i32 %add2620, 8
  %conv2621 = trunc i32 %shr to i8
  %1160 = load i8*, i8** %p2, align 8
  %add.ptr2622 = getelementptr inbounds i8, i8* %1160, i64 -2
  %arrayidx2623 = getelementptr inbounds i8, i8* %add.ptr2622, i64 1
  store i8 %conv2621, i8* %arrayidx2623, align 1
  br label %do.end.2625

do.end.2625:                                      ; preds = %do.body.2614
  br label %if.end.2627

if.else.2626:                                     ; preds = %sw.bb.2603
  %1161 = load i8*, i8** %p3, align 8
  store i8 14, i8* %1161, align 1
  br label %if.end.2627

if.end.2627:                                      ; preds = %if.else.2626, %do.end.2625
  br label %sw.epilog

sw.bb.2628:                                       ; preds = %if.end.578
  br label %unconditional_jump

unconditional_jump:                               ; preds = %do.end.2954, %sw.bb.2628
  br label %do.body.2629

do.body.2629:                                     ; preds = %unconditional_jump
  %1162 = load i8, i8* @immediate_quit, align 1
  %tobool2630 = trunc i8 %1162 to i1
  br i1 %tobool2630, label %if.then.2631, label %if.end.2648

if.then.2631:                                     ; preds = %do.body.2629
  br label %do.body.2632

do.body.2632:                                     ; preds = %if.then.2631
  %1163 = load i64, i64* getelementptr inbounds (%struct.emacs_globals, %struct.emacs_globals* @globals, i32 0, i32 241), align 8
  %call2633 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp2634 = icmp eq i64 %1163, %call2633
  br i1 %cmp2634, label %if.else.2641, label %land.lhs.true.2636

land.lhs.true.2636:                               ; preds = %do.body.2632
  %1164 = load i64, i64* getelementptr inbounds (%struct.emacs_globals, %struct.emacs_globals* @globals, i32 0, i32 138), align 8
  %call2637 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp2638 = icmp eq i64 %1164, %call2637
  br i1 %cmp2638, label %if.then.2640, label %if.else.2641

if.then.2640:                                     ; preds = %land.lhs.true.2636
  call void @process_quit_flag()
  br label %if.end.2645

if.else.2641:                                     ; preds = %land.lhs.true.2636, %do.body.2632
  %1165 = load volatile i8, i8* @pending_signals, align 1
  %tobool2642 = trunc i8 %1165 to i1
  br i1 %tobool2642, label %if.then.2643, label %if.end.2644

if.then.2643:                                     ; preds = %if.else.2641
  call void @process_pending_signals()
  br label %if.end.2644

if.end.2644:                                      ; preds = %if.then.2643, %if.else.2641
  br label %if.end.2645

if.end.2645:                                      ; preds = %if.end.2644, %if.then.2640
  br label %do.end.2647

do.end.2647:                                      ; preds = %if.end.2645
  br label %if.end.2648

if.end.2648:                                      ; preds = %do.end.2647, %do.body.2629
  br label %do.end.2650

do.end.2650:                                      ; preds = %if.end.2648
  %call2651 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2651, i32* %mcnt, align 4
  %1166 = load i32, i32* %mcnt, align 4
  %1167 = load i8*, i8** %p, align 8
  %idx.ext2652 = sext i32 %1166 to i64
  %add.ptr2653 = getelementptr inbounds i8, i8* %1167, i64 %idx.ext2652
  store i8* %add.ptr2653, i8** %p, align 8
  br label %sw.epilog

sw.bb.2654:                                       ; preds = %if.end.578
  %1168 = load i8*, i8** %p, align 8
  %add.ptr2655 = getelementptr inbounds i8, i8* %1168, i64 2
  %call2656 = call i32 @extract_number(i8* %add.ptr2655)
  store i32 %call2656, i32* %mcnt, align 4
  %1169 = load i32, i32* %mcnt, align 4
  %cmp2657 = icmp ne i32 %1169, 0
  br i1 %cmp2657, label %if.then.2659, label %if.else.2804

if.then.2659:                                     ; preds = %sw.bb.2654
  %1170 = load i8*, i8** %p, align 8
  %add.ptr2661 = getelementptr inbounds i8, i8* %1170, i64 2
  store i8* %add.ptr2661, i8** %p22660, align 8
  %1171 = load i32, i32* %mcnt, align 4
  %dec2662 = add nsw i32 %1171, -1
  store i32 %dec2662, i32* %mcnt, align 4
  %1172 = load i8*, i8** %p, align 8
  %add.ptr2663 = getelementptr inbounds i8, i8* %1172, i64 4
  store i8* %add.ptr2663, i8** %p, align 8
  br label %do.body.2664

do.body.2664:                                     ; preds = %if.then.2659
  br label %while.cond.2667

while.cond.2667:                                  ; preds = %if.end.2774, %do.body.2664
  %size2668 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1173 = load i64, i64* %size2668, align 8
  %avail2669 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1174 = load i64, i64* %avail2669, align 8
  %sub2670 = sub i64 %1173, %1174
  %cmp2671 = icmp ule i64 %sub2670, 3
  br i1 %cmp2671, label %while.body.2673, label %while.end.2775

while.body.2673:                                  ; preds = %while.cond.2667
  %size2674 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1175 = load i64, i64* %size2674, align 8
  %mul2675 = mul i64 %1175, 8
  %1176 = load i64, i64* @re_max_failures, align 8
  %mul2676 = mul i64 %1176, 20
  %cmp2677 = icmp uge i64 %mul2675, %mul2676
  br i1 %cmp2677, label %cond.true.2679, label %cond.false.2680

cond.true.2679:                                   ; preds = %while.body.2673
  br i1 false, label %if.end.2774, label %if.then.2773

cond.false.2680:                                  ; preds = %while.body.2673
  %1177 = load i64, i64* @re_max_failures, align 8
  %mul2681 = mul i64 %1177, 20
  %size2682 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1178 = load i64, i64* %size2682, align 8
  %mul2683 = mul i64 %1178, 8
  %mul2684 = mul i64 %mul2683, 4
  %cmp2685 = icmp ult i64 %mul2681, %mul2684
  br i1 %cmp2685, label %cond.true.2687, label %cond.false.2689

cond.true.2687:                                   ; preds = %cond.false.2680
  %1179 = load i64, i64* @re_max_failures, align 8
  %mul2688 = mul i64 %1179, 20
  br label %cond.end.2693

cond.false.2689:                                  ; preds = %cond.false.2680
  %size2690 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1180 = load i64, i64* %size2690, align 8
  %mul2691 = mul i64 %1180, 8
  %mul2692 = mul i64 %mul2691, 4
  br label %cond.end.2693

cond.end.2693:                                    ; preds = %cond.false.2689, %cond.true.2687
  %cond2694 = phi i64 [ %mul2688, %cond.true.2687 ], [ %mul2692, %cond.false.2689 ]
  %1181 = load i64, i64* %sa_avail, align 8
  %cmp2695 = icmp ule i64 %cond2694, %1181
  br i1 %cmp2695, label %cond.true.2697, label %cond.false.2727

cond.true.2697:                                   ; preds = %cond.end.2693
  %1182 = load i64, i64* @re_max_failures, align 8
  %mul2698 = mul i64 %1182, 20
  %size2699 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1183 = load i64, i64* %size2699, align 8
  %mul2700 = mul i64 %1183, 8
  %mul2701 = mul i64 %mul2700, 4
  %cmp2702 = icmp ult i64 %mul2698, %mul2701
  br i1 %cmp2702, label %cond.true.2704, label %cond.false.2706

cond.true.2704:                                   ; preds = %cond.true.2697
  %1184 = load i64, i64* @re_max_failures, align 8
  %mul2705 = mul i64 %1184, 20
  br label %cond.end.2710

cond.false.2706:                                  ; preds = %cond.true.2697
  %size2707 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1185 = load i64, i64* %size2707, align 8
  %mul2708 = mul i64 %1185, 8
  %mul2709 = mul i64 %mul2708, 4
  br label %cond.end.2710

cond.end.2710:                                    ; preds = %cond.false.2706, %cond.true.2704
  %cond2711 = phi i64 [ %mul2705, %cond.true.2704 ], [ %mul2709, %cond.false.2706 ]
  %1186 = load i64, i64* %sa_avail, align 8
  %sub2712 = sub i64 %1186, %cond2711
  store i64 %sub2712, i64* %sa_avail, align 8
  %1187 = load i64, i64* @re_max_failures, align 8
  %mul2713 = mul i64 %1187, 20
  %size2714 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1188 = load i64, i64* %size2714, align 8
  %mul2715 = mul i64 %1188, 8
  %mul2716 = mul i64 %mul2715, 4
  %cmp2717 = icmp ult i64 %mul2713, %mul2716
  br i1 %cmp2717, label %cond.true.2719, label %cond.false.2721

cond.true.2719:                                   ; preds = %cond.end.2710
  %1189 = load i64, i64* @re_max_failures, align 8
  %mul2720 = mul i64 %1189, 20
  br label %cond.end.2725

cond.false.2721:                                  ; preds = %cond.end.2710
  %size2722 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1190 = load i64, i64* %size2722, align 8
  %mul2723 = mul i64 %1190, 8
  %mul2724 = mul i64 %mul2723, 4
  br label %cond.end.2725

cond.end.2725:                                    ; preds = %cond.false.2721, %cond.true.2719
  %cond2726 = phi i64 [ %mul2720, %cond.true.2719 ], [ %mul2724, %cond.false.2721 ]
  %1191 = alloca i8, i64 %cond2726
  br label %cond.end.2743

cond.false.2727:                                  ; preds = %cond.end.2693
  store i8 1, i8* %sa_must_free, align 1
  %1192 = load i64, i64* @re_max_failures, align 8
  %mul2728 = mul i64 %1192, 20
  %size2729 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1193 = load i64, i64* %size2729, align 8
  %mul2730 = mul i64 %1193, 8
  %mul2731 = mul i64 %mul2730, 4
  %cmp2732 = icmp ult i64 %mul2728, %mul2731
  br i1 %cmp2732, label %cond.true.2734, label %cond.false.2736

cond.true.2734:                                   ; preds = %cond.false.2727
  %1194 = load i64, i64* @re_max_failures, align 8
  %mul2735 = mul i64 %1194, 20
  br label %cond.end.2740

cond.false.2736:                                  ; preds = %cond.false.2727
  %size2737 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1195 = load i64, i64* %size2737, align 8
  %mul2738 = mul i64 %1195, 8
  %mul2739 = mul i64 %mul2738, 4
  br label %cond.end.2740

cond.end.2740:                                    ; preds = %cond.false.2736, %cond.true.2734
  %cond2741 = phi i64 [ %mul2735, %cond.true.2734 ], [ %mul2739, %cond.false.2736 ]
  %call2742 = call i8* @record_xmalloc(i64 %cond2741)
  br label %cond.end.2743

cond.end.2743:                                    ; preds = %cond.end.2740, %cond.end.2725
  %cond2744 = phi i8* [ %1191, %cond.end.2725 ], [ %call2742, %cond.end.2740 ]
  store i8* %cond2744, i8** %destination2665, align 8
  %1196 = load i8*, i8** %destination2665, align 8
  %stack2745 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1197 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2745, align 8
  %1198 = bitcast %union.fail_stack_elt* %1197 to i8*
  %size2746 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1199 = load i64, i64* %size2746, align 8
  %mul2747 = mul i64 %1199, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1196, i8* %1198, i64 %mul2747, i32 1, i1 false)
  %1200 = bitcast i8* %1196 to %union.fail_stack_elt*
  %stack2748 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1200, %union.fail_stack_elt** %stack2748, align 8
  %stack2749 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1201 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2749, align 8
  %cmp2750 = icmp eq %union.fail_stack_elt* %1201, null
  br i1 %cmp2750, label %cond.true.2752, label %cond.false.2753

cond.true.2752:                                   ; preds = %cond.end.2743
  br label %cond.end.2770

cond.false.2753:                                  ; preds = %cond.end.2743
  %1202 = load i64, i64* @re_max_failures, align 8
  %mul2754 = mul i64 %1202, 20
  %size2755 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1203 = load i64, i64* %size2755, align 8
  %mul2756 = mul i64 %1203, 8
  %mul2757 = mul i64 %mul2756, 4
  %cmp2758 = icmp ult i64 %mul2754, %mul2757
  br i1 %cmp2758, label %cond.true.2760, label %cond.false.2762

cond.true.2760:                                   ; preds = %cond.false.2753
  %1204 = load i64, i64* @re_max_failures, align 8
  %mul2761 = mul i64 %1204, 20
  br label %cond.end.2766

cond.false.2762:                                  ; preds = %cond.false.2753
  %size2763 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1205 = load i64, i64* %size2763, align 8
  %mul2764 = mul i64 %1205, 8
  %mul2765 = mul i64 %mul2764, 4
  br label %cond.end.2766

cond.end.2766:                                    ; preds = %cond.false.2762, %cond.true.2760
  %cond2767 = phi i64 [ %mul2761, %cond.true.2760 ], [ %mul2765, %cond.false.2762 ]
  %div2768 = udiv i64 %cond2767, 8
  %size2769 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2768, i64* %size2769, align 8
  br label %cond.end.2770

cond.end.2770:                                    ; preds = %cond.end.2766, %cond.true.2752
  %cond2771 = phi i32 [ 0, %cond.true.2752 ], [ 1, %cond.end.2766 ]
  %tobool2772 = icmp ne i32 %cond2771, 0
  br i1 %tobool2772, label %if.end.2774, label %if.then.2773

if.then.2773:                                     ; preds = %cond.end.2770, %cond.true.2679
  store i64 -2, i64* %retval
  br label %return

if.end.2774:                                      ; preds = %cond.end.2770, %cond.true.2679
  br label %while.cond.2667

while.end.2775:                                   ; preds = %while.cond.2667
  %1206 = load i8*, i8** %p22660, align 8
  %call2776 = call i32 @extract_number(i8* %1206)
  store i32 %call2776, i32* %c2666, align 4
  %1207 = load i32, i32* %c2666, align 4
  %conv2777 = sext i32 %1207 to i64
  %avail2778 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1208 = load i64, i64* %avail2778, align 8
  %inc2779 = add i64 %1208, 1
  store i64 %inc2779, i64* %avail2778, align 8
  %stack2780 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1209 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2780, align 8
  %arrayidx2781 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1209, i64 %1208
  %integer2782 = bitcast %union.fail_stack_elt* %arrayidx2781 to i64*
  store i64 %conv2777, i64* %integer2782, align 8
  %1210 = load i8*, i8** %p22660, align 8
  %avail2783 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1211 = load i64, i64* %avail2783, align 8
  %inc2784 = add i64 %1211, 1
  store i64 %inc2784, i64* %avail2783, align 8
  %stack2785 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1212 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2785, align 8
  %arrayidx2786 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1212, i64 %1211
  %pointer2787 = bitcast %union.fail_stack_elt* %arrayidx2786 to i8**
  store i8* %1210, i8** %pointer2787, align 8
  %avail2788 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1213 = load i64, i64* %avail2788, align 8
  %inc2789 = add i64 %1213, 1
  store i64 %inc2789, i64* %avail2788, align 8
  %stack2790 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1214 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2790, align 8
  %arrayidx2791 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1214, i64 %1213
  %integer2792 = bitcast %union.fail_stack_elt* %arrayidx2791 to i64*
  store i64 -1, i64* %integer2792, align 8
  br label %do.body.2793

do.body.2793:                                     ; preds = %while.end.2775
  %1215 = load i32, i32* %mcnt, align 4
  %and2794 = and i32 %1215, 255
  %conv2795 = trunc i32 %and2794 to i8
  %1216 = load i8*, i8** %p22660, align 8
  %arrayidx2796 = getelementptr inbounds i8, i8* %1216, i64 0
  store i8 %conv2795, i8* %arrayidx2796, align 1
  %1217 = load i32, i32* %mcnt, align 4
  %shr2797 = ashr i32 %1217, 8
  %conv2798 = trunc i32 %shr2797 to i8
  %1218 = load i8*, i8** %p22660, align 8
  %arrayidx2799 = getelementptr inbounds i8, i8* %1218, i64 1
  store i8 %conv2798, i8* %arrayidx2799, align 1
  br label %do.end.2801

do.end.2801:                                      ; preds = %do.body.2793
  br label %do.end.2803

do.end.2803:                                      ; preds = %do.end.2801
  br label %if.end.2805

if.else.2804:                                     ; preds = %sw.bb.2654
  br label %on_failure

if.end.2805:                                      ; preds = %do.end.2803
  br label %sw.epilog

sw.bb.2806:                                       ; preds = %if.end.578
  %1219 = load i8*, i8** %p, align 8
  %add.ptr2807 = getelementptr inbounds i8, i8* %1219, i64 2
  %call2808 = call i32 @extract_number(i8* %add.ptr2807)
  store i32 %call2808, i32* %mcnt, align 4
  %1220 = load i32, i32* %mcnt, align 4
  %cmp2809 = icmp ne i32 %1220, 0
  br i1 %cmp2809, label %if.then.2811, label %if.else.2955

if.then.2811:                                     ; preds = %sw.bb.2806
  %1221 = load i8*, i8** %p, align 8
  %add.ptr2813 = getelementptr inbounds i8, i8* %1221, i64 2
  store i8* %add.ptr2813, i8** %p22812, align 8
  %1222 = load i32, i32* %mcnt, align 4
  %dec2814 = add nsw i32 %1222, -1
  store i32 %dec2814, i32* %mcnt, align 4
  br label %do.body.2815

do.body.2815:                                     ; preds = %if.then.2811
  br label %while.cond.2818

while.cond.2818:                                  ; preds = %if.end.2925, %do.body.2815
  %size2819 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1223 = load i64, i64* %size2819, align 8
  %avail2820 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1224 = load i64, i64* %avail2820, align 8
  %sub2821 = sub i64 %1223, %1224
  %cmp2822 = icmp ule i64 %sub2821, 3
  br i1 %cmp2822, label %while.body.2824, label %while.end.2926

while.body.2824:                                  ; preds = %while.cond.2818
  %size2825 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1225 = load i64, i64* %size2825, align 8
  %mul2826 = mul i64 %1225, 8
  %1226 = load i64, i64* @re_max_failures, align 8
  %mul2827 = mul i64 %1226, 20
  %cmp2828 = icmp uge i64 %mul2826, %mul2827
  br i1 %cmp2828, label %cond.true.2830, label %cond.false.2831

cond.true.2830:                                   ; preds = %while.body.2824
  br i1 false, label %if.end.2925, label %if.then.2924

cond.false.2831:                                  ; preds = %while.body.2824
  %1227 = load i64, i64* @re_max_failures, align 8
  %mul2832 = mul i64 %1227, 20
  %size2833 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1228 = load i64, i64* %size2833, align 8
  %mul2834 = mul i64 %1228, 8
  %mul2835 = mul i64 %mul2834, 4
  %cmp2836 = icmp ult i64 %mul2832, %mul2835
  br i1 %cmp2836, label %cond.true.2838, label %cond.false.2840

cond.true.2838:                                   ; preds = %cond.false.2831
  %1229 = load i64, i64* @re_max_failures, align 8
  %mul2839 = mul i64 %1229, 20
  br label %cond.end.2844

cond.false.2840:                                  ; preds = %cond.false.2831
  %size2841 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1230 = load i64, i64* %size2841, align 8
  %mul2842 = mul i64 %1230, 8
  %mul2843 = mul i64 %mul2842, 4
  br label %cond.end.2844

cond.end.2844:                                    ; preds = %cond.false.2840, %cond.true.2838
  %cond2845 = phi i64 [ %mul2839, %cond.true.2838 ], [ %mul2843, %cond.false.2840 ]
  %1231 = load i64, i64* %sa_avail, align 8
  %cmp2846 = icmp ule i64 %cond2845, %1231
  br i1 %cmp2846, label %cond.true.2848, label %cond.false.2878

cond.true.2848:                                   ; preds = %cond.end.2844
  %1232 = load i64, i64* @re_max_failures, align 8
  %mul2849 = mul i64 %1232, 20
  %size2850 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1233 = load i64, i64* %size2850, align 8
  %mul2851 = mul i64 %1233, 8
  %mul2852 = mul i64 %mul2851, 4
  %cmp2853 = icmp ult i64 %mul2849, %mul2852
  br i1 %cmp2853, label %cond.true.2855, label %cond.false.2857

cond.true.2855:                                   ; preds = %cond.true.2848
  %1234 = load i64, i64* @re_max_failures, align 8
  %mul2856 = mul i64 %1234, 20
  br label %cond.end.2861

cond.false.2857:                                  ; preds = %cond.true.2848
  %size2858 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1235 = load i64, i64* %size2858, align 8
  %mul2859 = mul i64 %1235, 8
  %mul2860 = mul i64 %mul2859, 4
  br label %cond.end.2861

cond.end.2861:                                    ; preds = %cond.false.2857, %cond.true.2855
  %cond2862 = phi i64 [ %mul2856, %cond.true.2855 ], [ %mul2860, %cond.false.2857 ]
  %1236 = load i64, i64* %sa_avail, align 8
  %sub2863 = sub i64 %1236, %cond2862
  store i64 %sub2863, i64* %sa_avail, align 8
  %1237 = load i64, i64* @re_max_failures, align 8
  %mul2864 = mul i64 %1237, 20
  %size2865 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1238 = load i64, i64* %size2865, align 8
  %mul2866 = mul i64 %1238, 8
  %mul2867 = mul i64 %mul2866, 4
  %cmp2868 = icmp ult i64 %mul2864, %mul2867
  br i1 %cmp2868, label %cond.true.2870, label %cond.false.2872

cond.true.2870:                                   ; preds = %cond.end.2861
  %1239 = load i64, i64* @re_max_failures, align 8
  %mul2871 = mul i64 %1239, 20
  br label %cond.end.2876

cond.false.2872:                                  ; preds = %cond.end.2861
  %size2873 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1240 = load i64, i64* %size2873, align 8
  %mul2874 = mul i64 %1240, 8
  %mul2875 = mul i64 %mul2874, 4
  br label %cond.end.2876

cond.end.2876:                                    ; preds = %cond.false.2872, %cond.true.2870
  %cond2877 = phi i64 [ %mul2871, %cond.true.2870 ], [ %mul2875, %cond.false.2872 ]
  %1241 = alloca i8, i64 %cond2877
  br label %cond.end.2894

cond.false.2878:                                  ; preds = %cond.end.2844
  store i8 1, i8* %sa_must_free, align 1
  %1242 = load i64, i64* @re_max_failures, align 8
  %mul2879 = mul i64 %1242, 20
  %size2880 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1243 = load i64, i64* %size2880, align 8
  %mul2881 = mul i64 %1243, 8
  %mul2882 = mul i64 %mul2881, 4
  %cmp2883 = icmp ult i64 %mul2879, %mul2882
  br i1 %cmp2883, label %cond.true.2885, label %cond.false.2887

cond.true.2885:                                   ; preds = %cond.false.2878
  %1244 = load i64, i64* @re_max_failures, align 8
  %mul2886 = mul i64 %1244, 20
  br label %cond.end.2891

cond.false.2887:                                  ; preds = %cond.false.2878
  %size2888 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1245 = load i64, i64* %size2888, align 8
  %mul2889 = mul i64 %1245, 8
  %mul2890 = mul i64 %mul2889, 4
  br label %cond.end.2891

cond.end.2891:                                    ; preds = %cond.false.2887, %cond.true.2885
  %cond2892 = phi i64 [ %mul2886, %cond.true.2885 ], [ %mul2890, %cond.false.2887 ]
  %call2893 = call i8* @record_xmalloc(i64 %cond2892)
  br label %cond.end.2894

cond.end.2894:                                    ; preds = %cond.end.2891, %cond.end.2876
  %cond2895 = phi i8* [ %1241, %cond.end.2876 ], [ %call2893, %cond.end.2891 ]
  store i8* %cond2895, i8** %destination2816, align 8
  %1246 = load i8*, i8** %destination2816, align 8
  %stack2896 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1247 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2896, align 8
  %1248 = bitcast %union.fail_stack_elt* %1247 to i8*
  %size2897 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1249 = load i64, i64* %size2897, align 8
  %mul2898 = mul i64 %1249, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1246, i8* %1248, i64 %mul2898, i32 1, i1 false)
  %1250 = bitcast i8* %1246 to %union.fail_stack_elt*
  %stack2899 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1250, %union.fail_stack_elt** %stack2899, align 8
  %stack2900 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1251 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2900, align 8
  %cmp2901 = icmp eq %union.fail_stack_elt* %1251, null
  br i1 %cmp2901, label %cond.true.2903, label %cond.false.2904

cond.true.2903:                                   ; preds = %cond.end.2894
  br label %cond.end.2921

cond.false.2904:                                  ; preds = %cond.end.2894
  %1252 = load i64, i64* @re_max_failures, align 8
  %mul2905 = mul i64 %1252, 20
  %size2906 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1253 = load i64, i64* %size2906, align 8
  %mul2907 = mul i64 %1253, 8
  %mul2908 = mul i64 %mul2907, 4
  %cmp2909 = icmp ult i64 %mul2905, %mul2908
  br i1 %cmp2909, label %cond.true.2911, label %cond.false.2913

cond.true.2911:                                   ; preds = %cond.false.2904
  %1254 = load i64, i64* @re_max_failures, align 8
  %mul2912 = mul i64 %1254, 20
  br label %cond.end.2917

cond.false.2913:                                  ; preds = %cond.false.2904
  %size2914 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1255 = load i64, i64* %size2914, align 8
  %mul2915 = mul i64 %1255, 8
  %mul2916 = mul i64 %mul2915, 4
  br label %cond.end.2917

cond.end.2917:                                    ; preds = %cond.false.2913, %cond.true.2911
  %cond2918 = phi i64 [ %mul2912, %cond.true.2911 ], [ %mul2916, %cond.false.2913 ]
  %div2919 = udiv i64 %cond2918, 8
  %size2920 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div2919, i64* %size2920, align 8
  br label %cond.end.2921

cond.end.2921:                                    ; preds = %cond.end.2917, %cond.true.2903
  %cond2922 = phi i32 [ 0, %cond.true.2903 ], [ 1, %cond.end.2917 ]
  %tobool2923 = icmp ne i32 %cond2922, 0
  br i1 %tobool2923, label %if.end.2925, label %if.then.2924

if.then.2924:                                     ; preds = %cond.end.2921, %cond.true.2830
  store i64 -2, i64* %retval
  br label %return

if.end.2925:                                      ; preds = %cond.end.2921, %cond.true.2830
  br label %while.cond.2818

while.end.2926:                                   ; preds = %while.cond.2818
  %1256 = load i8*, i8** %p22812, align 8
  %call2927 = call i32 @extract_number(i8* %1256)
  store i32 %call2927, i32* %c2817, align 4
  %1257 = load i32, i32* %c2817, align 4
  %conv2928 = sext i32 %1257 to i64
  %avail2929 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1258 = load i64, i64* %avail2929, align 8
  %inc2930 = add i64 %1258, 1
  store i64 %inc2930, i64* %avail2929, align 8
  %stack2931 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1259 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2931, align 8
  %arrayidx2932 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1259, i64 %1258
  %integer2933 = bitcast %union.fail_stack_elt* %arrayidx2932 to i64*
  store i64 %conv2928, i64* %integer2933, align 8
  %1260 = load i8*, i8** %p22812, align 8
  %avail2934 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1261 = load i64, i64* %avail2934, align 8
  %inc2935 = add i64 %1261, 1
  store i64 %inc2935, i64* %avail2934, align 8
  %stack2936 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1262 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2936, align 8
  %arrayidx2937 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1262, i64 %1261
  %pointer2938 = bitcast %union.fail_stack_elt* %arrayidx2937 to i8**
  store i8* %1260, i8** %pointer2938, align 8
  %avail2939 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1263 = load i64, i64* %avail2939, align 8
  %inc2940 = add i64 %1263, 1
  store i64 %inc2940, i64* %avail2939, align 8
  %stack2941 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1264 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack2941, align 8
  %arrayidx2942 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1264, i64 %1263
  %integer2943 = bitcast %union.fail_stack_elt* %arrayidx2942 to i64*
  store i64 -1, i64* %integer2943, align 8
  br label %do.body.2944

do.body.2944:                                     ; preds = %while.end.2926
  %1265 = load i32, i32* %mcnt, align 4
  %and2945 = and i32 %1265, 255
  %conv2946 = trunc i32 %and2945 to i8
  %1266 = load i8*, i8** %p22812, align 8
  %arrayidx2947 = getelementptr inbounds i8, i8* %1266, i64 0
  store i8 %conv2946, i8* %arrayidx2947, align 1
  %1267 = load i32, i32* %mcnt, align 4
  %shr2948 = ashr i32 %1267, 8
  %conv2949 = trunc i32 %shr2948 to i8
  %1268 = load i8*, i8** %p22812, align 8
  %arrayidx2950 = getelementptr inbounds i8, i8* %1268, i64 1
  store i8 %conv2949, i8* %arrayidx2950, align 1
  br label %do.end.2952

do.end.2952:                                      ; preds = %do.body.2944
  br label %do.end.2954

do.end.2954:                                      ; preds = %do.end.2952
  br label %unconditional_jump

if.else.2955:                                     ; preds = %sw.bb.2806
  %1269 = load i8*, i8** %p, align 8
  %add.ptr2956 = getelementptr inbounds i8, i8* %1269, i64 4
  store i8* %add.ptr2956, i8** %p, align 8
  br label %if.end.2957

if.end.2957:                                      ; preds = %if.else.2955
  br label %sw.epilog

sw.bb.2958:                                       ; preds = %if.end.578
  %call2960 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2960, i32* %mcnt, align 4
  %1270 = load i8*, i8** %p, align 8
  %1271 = load i32, i32* %mcnt, align 4
  %idx.ext2961 = sext i32 %1271 to i64
  %add.ptr2962 = getelementptr inbounds i8, i8* %1270, i64 %idx.ext2961
  store i8* %add.ptr2962, i8** %p22959, align 8
  %call2963 = call i32 @extract_number_and_incr(i8** %p)
  store i32 %call2963, i32* %mcnt, align 4
  br label %do.body.2964

do.body.2964:                                     ; preds = %sw.bb.2958
  br label %while.cond.2967

while.cond.2967:                                  ; preds = %if.end.3074, %do.body.2964
  %size2968 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1272 = load i64, i64* %size2968, align 8
  %avail2969 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1273 = load i64, i64* %avail2969, align 8
  %sub2970 = sub i64 %1272, %1273
  %cmp2971 = icmp ule i64 %sub2970, 3
  br i1 %cmp2971, label %while.body.2973, label %while.end.3075

while.body.2973:                                  ; preds = %while.cond.2967
  %size2974 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1274 = load i64, i64* %size2974, align 8
  %mul2975 = mul i64 %1274, 8
  %1275 = load i64, i64* @re_max_failures, align 8
  %mul2976 = mul i64 %1275, 20
  %cmp2977 = icmp uge i64 %mul2975, %mul2976
  br i1 %cmp2977, label %cond.true.2979, label %cond.false.2980

cond.true.2979:                                   ; preds = %while.body.2973
  br i1 false, label %if.end.3074, label %if.then.3073

cond.false.2980:                                  ; preds = %while.body.2973
  %1276 = load i64, i64* @re_max_failures, align 8
  %mul2981 = mul i64 %1276, 20
  %size2982 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1277 = load i64, i64* %size2982, align 8
  %mul2983 = mul i64 %1277, 8
  %mul2984 = mul i64 %mul2983, 4
  %cmp2985 = icmp ult i64 %mul2981, %mul2984
  br i1 %cmp2985, label %cond.true.2987, label %cond.false.2989

cond.true.2987:                                   ; preds = %cond.false.2980
  %1278 = load i64, i64* @re_max_failures, align 8
  %mul2988 = mul i64 %1278, 20
  br label %cond.end.2993

cond.false.2989:                                  ; preds = %cond.false.2980
  %size2990 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1279 = load i64, i64* %size2990, align 8
  %mul2991 = mul i64 %1279, 8
  %mul2992 = mul i64 %mul2991, 4
  br label %cond.end.2993

cond.end.2993:                                    ; preds = %cond.false.2989, %cond.true.2987
  %cond2994 = phi i64 [ %mul2988, %cond.true.2987 ], [ %mul2992, %cond.false.2989 ]
  %1280 = load i64, i64* %sa_avail, align 8
  %cmp2995 = icmp ule i64 %cond2994, %1280
  br i1 %cmp2995, label %cond.true.2997, label %cond.false.3027

cond.true.2997:                                   ; preds = %cond.end.2993
  %1281 = load i64, i64* @re_max_failures, align 8
  %mul2998 = mul i64 %1281, 20
  %size2999 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1282 = load i64, i64* %size2999, align 8
  %mul3000 = mul i64 %1282, 8
  %mul3001 = mul i64 %mul3000, 4
  %cmp3002 = icmp ult i64 %mul2998, %mul3001
  br i1 %cmp3002, label %cond.true.3004, label %cond.false.3006

cond.true.3004:                                   ; preds = %cond.true.2997
  %1283 = load i64, i64* @re_max_failures, align 8
  %mul3005 = mul i64 %1283, 20
  br label %cond.end.3010

cond.false.3006:                                  ; preds = %cond.true.2997
  %size3007 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1284 = load i64, i64* %size3007, align 8
  %mul3008 = mul i64 %1284, 8
  %mul3009 = mul i64 %mul3008, 4
  br label %cond.end.3010

cond.end.3010:                                    ; preds = %cond.false.3006, %cond.true.3004
  %cond3011 = phi i64 [ %mul3005, %cond.true.3004 ], [ %mul3009, %cond.false.3006 ]
  %1285 = load i64, i64* %sa_avail, align 8
  %sub3012 = sub i64 %1285, %cond3011
  store i64 %sub3012, i64* %sa_avail, align 8
  %1286 = load i64, i64* @re_max_failures, align 8
  %mul3013 = mul i64 %1286, 20
  %size3014 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1287 = load i64, i64* %size3014, align 8
  %mul3015 = mul i64 %1287, 8
  %mul3016 = mul i64 %mul3015, 4
  %cmp3017 = icmp ult i64 %mul3013, %mul3016
  br i1 %cmp3017, label %cond.true.3019, label %cond.false.3021

cond.true.3019:                                   ; preds = %cond.end.3010
  %1288 = load i64, i64* @re_max_failures, align 8
  %mul3020 = mul i64 %1288, 20
  br label %cond.end.3025

cond.false.3021:                                  ; preds = %cond.end.3010
  %size3022 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1289 = load i64, i64* %size3022, align 8
  %mul3023 = mul i64 %1289, 8
  %mul3024 = mul i64 %mul3023, 4
  br label %cond.end.3025

cond.end.3025:                                    ; preds = %cond.false.3021, %cond.true.3019
  %cond3026 = phi i64 [ %mul3020, %cond.true.3019 ], [ %mul3024, %cond.false.3021 ]
  %1290 = alloca i8, i64 %cond3026
  br label %cond.end.3043

cond.false.3027:                                  ; preds = %cond.end.2993
  store i8 1, i8* %sa_must_free, align 1
  %1291 = load i64, i64* @re_max_failures, align 8
  %mul3028 = mul i64 %1291, 20
  %size3029 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1292 = load i64, i64* %size3029, align 8
  %mul3030 = mul i64 %1292, 8
  %mul3031 = mul i64 %mul3030, 4
  %cmp3032 = icmp ult i64 %mul3028, %mul3031
  br i1 %cmp3032, label %cond.true.3034, label %cond.false.3036

cond.true.3034:                                   ; preds = %cond.false.3027
  %1293 = load i64, i64* @re_max_failures, align 8
  %mul3035 = mul i64 %1293, 20
  br label %cond.end.3040

cond.false.3036:                                  ; preds = %cond.false.3027
  %size3037 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1294 = load i64, i64* %size3037, align 8
  %mul3038 = mul i64 %1294, 8
  %mul3039 = mul i64 %mul3038, 4
  br label %cond.end.3040

cond.end.3040:                                    ; preds = %cond.false.3036, %cond.true.3034
  %cond3041 = phi i64 [ %mul3035, %cond.true.3034 ], [ %mul3039, %cond.false.3036 ]
  %call3042 = call i8* @record_xmalloc(i64 %cond3041)
  br label %cond.end.3043

cond.end.3043:                                    ; preds = %cond.end.3040, %cond.end.3025
  %cond3044 = phi i8* [ %1290, %cond.end.3025 ], [ %call3042, %cond.end.3040 ]
  store i8* %cond3044, i8** %destination2965, align 8
  %1295 = load i8*, i8** %destination2965, align 8
  %stack3045 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1296 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack3045, align 8
  %1297 = bitcast %union.fail_stack_elt* %1296 to i8*
  %size3046 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1298 = load i64, i64* %size3046, align 8
  %mul3047 = mul i64 %1298, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1295, i8* %1297, i64 %mul3047, i32 1, i1 false)
  %1299 = bitcast i8* %1295 to %union.fail_stack_elt*
  %stack3048 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %1299, %union.fail_stack_elt** %stack3048, align 8
  %stack3049 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1300 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack3049, align 8
  %cmp3050 = icmp eq %union.fail_stack_elt* %1300, null
  br i1 %cmp3050, label %cond.true.3052, label %cond.false.3053

cond.true.3052:                                   ; preds = %cond.end.3043
  br label %cond.end.3070

cond.false.3053:                                  ; preds = %cond.end.3043
  %1301 = load i64, i64* @re_max_failures, align 8
  %mul3054 = mul i64 %1301, 20
  %size3055 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1302 = load i64, i64* %size3055, align 8
  %mul3056 = mul i64 %1302, 8
  %mul3057 = mul i64 %mul3056, 4
  %cmp3058 = icmp ult i64 %mul3054, %mul3057
  br i1 %cmp3058, label %cond.true.3060, label %cond.false.3062

cond.true.3060:                                   ; preds = %cond.false.3053
  %1303 = load i64, i64* @re_max_failures, align 8
  %mul3061 = mul i64 %1303, 20
  br label %cond.end.3066

cond.false.3062:                                  ; preds = %cond.false.3053
  %size3063 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %1304 = load i64, i64* %size3063, align 8
  %mul3064 = mul i64 %1304, 8
  %mul3065 = mul i64 %mul3064, 4
  br label %cond.end.3066

cond.end.3066:                                    ; preds = %cond.false.3062, %cond.true.3060
  %cond3067 = phi i64 [ %mul3061, %cond.true.3060 ], [ %mul3065, %cond.false.3062 ]
  %div3068 = udiv i64 %cond3067, 8
  %size3069 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div3068, i64* %size3069, align 8
  br label %cond.end.3070

cond.end.3070:                                    ; preds = %cond.end.3066, %cond.true.3052
  %cond3071 = phi i32 [ 0, %cond.true.3052 ], [ 1, %cond.end.3066 ]
  %tobool3072 = icmp ne i32 %cond3071, 0
  br i1 %tobool3072, label %if.end.3074, label %if.then.3073

if.then.3073:                                     ; preds = %cond.end.3070, %cond.true.2979
  store i64 -2, i64* %retval
  br label %return

if.end.3074:                                      ; preds = %cond.end.3070, %cond.true.2979
  br label %while.cond.2967

while.end.3075:                                   ; preds = %while.cond.2967
  %1305 = load i8*, i8** %p22959, align 8
  %call3076 = call i32 @extract_number(i8* %1305)
  store i32 %call3076, i32* %c2966, align 4
  %1306 = load i32, i32* %c2966, align 4
  %conv3077 = sext i32 %1306 to i64
  %avail3078 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1307 = load i64, i64* %avail3078, align 8
  %inc3079 = add i64 %1307, 1
  store i64 %inc3079, i64* %avail3078, align 8
  %stack3080 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1308 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack3080, align 8
  %arrayidx3081 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1308, i64 %1307
  %integer3082 = bitcast %union.fail_stack_elt* %arrayidx3081 to i64*
  store i64 %conv3077, i64* %integer3082, align 8
  %1309 = load i8*, i8** %p22959, align 8
  %avail3083 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1310 = load i64, i64* %avail3083, align 8
  %inc3084 = add i64 %1310, 1
  store i64 %inc3084, i64* %avail3083, align 8
  %stack3085 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1311 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack3085, align 8
  %arrayidx3086 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1311, i64 %1310
  %pointer3087 = bitcast %union.fail_stack_elt* %arrayidx3086 to i8**
  store i8* %1309, i8** %pointer3087, align 8
  %avail3088 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %1312 = load i64, i64* %avail3088, align 8
  %inc3089 = add i64 %1312, 1
  store i64 %inc3089, i64* %avail3088, align 8
  %stack3090 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %1313 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack3090, align 8
  %arrayidx3091 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %1313, i64 %1312
  %integer3092 = bitcast %union.fail_stack_elt* %arrayidx3091 to i64*
  store i64 -1, i64* %integer3092, align 8
  br label %do.body.3093

do.body.3093:                                     ; preds = %while.end.3075
  %1314 = load i32, i32* %mcnt, align 4
  %and3094 = and i32 %1314, 255
  %conv3095 = trunc i32 %and3094 to i8
  %1315 = load i8*, i8** %p22959, align 8
  %arrayidx3096 = getelementptr inbounds i8, i8* %1315, i64 0
  store i8 %conv3095, i8* %arrayidx3096, align 1
  %1316 = load i32, i32* %mcnt, align 4
  %shr3097 = ashr i32 %1316, 8
  %conv3098 = trunc i32 %shr3097 to i8
  %1317 = load i8*, i8** %p22959, align 8
  %arrayidx3099 = getelementptr inbounds i8, i8* %1317, i64 1
  store i8 %conv3098, i8* %arrayidx3099, align 1
  br label %do.end.3101

do.end.3101:                                      ; preds = %do.body.3093
  br label %do.end.3103

do.end.3103:                                      ; preds = %do.end.3101
  br label %sw.epilog

sw.bb.3104:                                       ; preds = %if.end.578, %if.end.578
  %1318 = load i8*, i8** %p, align 8
  %add.ptr3106 = getelementptr inbounds i8, i8* %1318, i64 -1
  %1319 = load i8, i8* %add.ptr3106, align 1
  %conv3107 = zext i8 %1319 to i32
  %cmp3108 = icmp eq i32 %conv3107, 25
  %conv3109 = zext i1 %cmp3108 to i32
  %conv3110 = trunc i32 %conv3109 to i8
  store i8 %conv3110, i8* %not3105, align 1
  %1320 = load i8*, i8** %d, align 8
  %1321 = load i64, i64* %size1.addr, align 8
  %tobool3111 = icmp ne i64 %1321, 0
  br i1 %tobool3111, label %cond.true.3112, label %cond.false.3113

cond.true.3112:                                   ; preds = %sw.bb.3104
  %1322 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3114

cond.false.3113:                                  ; preds = %sw.bb.3104
  %1323 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3114

cond.end.3114:                                    ; preds = %cond.false.3113, %cond.true.3112
  %cond3115 = phi i8* [ %1322, %cond.true.3112 ], [ %1323, %cond.false.3113 ]
  %cmp3116 = icmp eq i8* %1320, %cond3115
  br i1 %cmp3116, label %if.then.3123, label %lor.lhs.false.3118

lor.lhs.false.3118:                               ; preds = %cond.end.3114
  %1324 = load i64, i64* %size2.addr, align 8
  %tobool3119 = icmp ne i64 %1324, 0
  br i1 %tobool3119, label %lor.lhs.false.3120, label %if.then.3123

lor.lhs.false.3120:                               ; preds = %lor.lhs.false.3118
  %1325 = load i8*, i8** %d, align 8
  %1326 = load i8*, i8** %end2, align 8
  %cmp3121 = icmp eq i8* %1325, %1326
  br i1 %cmp3121, label %if.then.3123, label %if.else.3128

if.then.3123:                                     ; preds = %lor.lhs.false.3120, %lor.lhs.false.3118, %cond.end.3114
  %1327 = load i8, i8* %not3105, align 1
  %tobool3124 = icmp ne i8 %1327, 0
  %lnot3125 = xor i1 %tobool3124, true
  %lnot.ext3126 = zext i1 %lnot3125 to i32
  %conv3127 = trunc i32 %lnot.ext3126 to i8
  store i8 %conv3127, i8* %not3105, align 1
  br label %if.end.3400

if.else.3128:                                     ; preds = %lor.lhs.false.3120
  %1328 = load i64, i64* %size1.addr, align 8
  %tobool3130 = icmp ne i64 %1328, 0
  br i1 %tobool3130, label %land.lhs.true.3131, label %cond.false.3145

land.lhs.true.3131:                               ; preds = %if.else.3128
  %1329 = load i8*, i8** %string1.addr, align 8
  %1330 = load i8*, i8** %d, align 8
  %add.ptr3132 = getelementptr inbounds i8, i8* %1330, i64 -1
  %cmp3133 = icmp ule i8* %1329, %add.ptr3132
  br i1 %cmp3133, label %land.lhs.true.3135, label %cond.false.3145

land.lhs.true.3135:                               ; preds = %land.lhs.true.3131
  %1331 = load i8*, i8** %d, align 8
  %add.ptr3136 = getelementptr inbounds i8, i8* %1331, i64 -1
  %1332 = load i8*, i8** %string1.addr, align 8
  %1333 = load i64, i64* %size1.addr, align 8
  %add.ptr3137 = getelementptr inbounds i8, i8* %1332, i64 %1333
  %cmp3138 = icmp ule i8* %add.ptr3136, %add.ptr3137
  br i1 %cmp3138, label %cond.true.3140, label %cond.false.3145

cond.true.3140:                                   ; preds = %land.lhs.true.3135
  %1334 = load i8*, i8** %d, align 8
  %add.ptr3141 = getelementptr inbounds i8, i8* %1334, i64 -1
  %1335 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast3142 = ptrtoint i8* %add.ptr3141 to i64
  %sub.ptr.rhs.cast3143 = ptrtoint i8* %1335 to i64
  %sub.ptr.sub3144 = sub i64 %sub.ptr.lhs.cast3142, %sub.ptr.rhs.cast3143
  br label %cond.end.3151

cond.false.3145:                                  ; preds = %land.lhs.true.3135, %land.lhs.true.3131, %if.else.3128
  %1336 = load i8*, i8** %d, align 8
  %add.ptr3146 = getelementptr inbounds i8, i8* %1336, i64 -1
  %1337 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast3147 = ptrtoint i8* %add.ptr3146 to i64
  %sub.ptr.rhs.cast3148 = ptrtoint i8* %1337 to i64
  %sub.ptr.sub3149 = sub i64 %sub.ptr.lhs.cast3147, %sub.ptr.rhs.cast3148
  %1338 = load i64, i64* %size1.addr, align 8
  %add3150 = add nsw i64 %sub.ptr.sub3149, %1338
  br label %cond.end.3151

cond.end.3151:                                    ; preds = %cond.false.3145, %cond.true.3140
  %cond3152 = phi i64 [ %sub.ptr.sub3144, %cond.true.3140 ], [ %add3150, %cond.false.3145 ]
  %1339 = load i64, i64* @re_match_object, align 8
  %call3153 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp3154 = icmp eq i64 %1339, %call3153
  br i1 %cmp3154, label %lor.end.3159, label %lor.rhs.3156

lor.rhs.3156:                                     ; preds = %cond.end.3151
  %1340 = load i64, i64* @re_match_object, align 8
  %call3157 = call zeroext i1 @BUFFERP(i64 %1340)
  br label %lor.end.3159

lor.end.3159:                                     ; preds = %lor.rhs.3156, %cond.end.3151
  %1341 = phi i1 [ true, %cond.end.3151 ], [ %call3157, %lor.rhs.3156 ]
  %lor.ext3160 = zext i1 %1341 to i32
  %conv3161 = sext i32 %lor.ext3160 to i64
  %add3162 = add nsw i64 %cond3152, %conv3161
  store i64 %add3162, i64* %offset, align 8
  %1342 = load i64, i64* %offset, align 8
  %call3163 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1342)
  store i64 %call3163, i64* %charpos, align 8
  %1343 = load i64, i64* %charpos, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1343)
  br label %do.body.3164

do.body.3164:                                     ; preds = %lor.end.3159
  %1344 = load i8, i8* %target_multibyte, align 1
  %tobool3165 = icmp ne i8 %1344, 0
  br i1 %tobool3165, label %if.then.3166, label %if.else.3253

if.then.3166:                                     ; preds = %do.body.3164
  %1345 = load i8*, i8** %d, align 8
  %1346 = load i8*, i8** %string2.addr, align 8
  %cmp3168 = icmp eq i8* %1345, %1346
  br i1 %cmp3168, label %cond.true.3170, label %cond.false.3171

cond.true.3170:                                   ; preds = %if.then.3166
  %1347 = load i8*, i8** %end1, align 8
  br label %cond.end.3172

cond.false.3171:                                  ; preds = %if.then.3166
  %1348 = load i8*, i8** %d, align 8
  br label %cond.end.3172

cond.end.3172:                                    ; preds = %cond.false.3171, %cond.true.3170
  %cond3173 = phi i8* [ %1347, %cond.true.3170 ], [ %1348, %cond.false.3171 ]
  store i8* %cond3173, i8** %dtemp3167, align 8
  %1349 = load i8*, i8** %d, align 8
  %1350 = load i8*, i8** %string2.addr, align 8
  %cmp3175 = icmp ugt i8* %1349, %1350
  br i1 %cmp3175, label %land.lhs.true.3177, label %cond.false.3181

land.lhs.true.3177:                               ; preds = %cond.end.3172
  %1351 = load i8*, i8** %d, align 8
  %1352 = load i8*, i8** %end2, align 8
  %cmp3178 = icmp ule i8* %1351, %1352
  br i1 %cmp3178, label %cond.true.3180, label %cond.false.3181

cond.true.3180:                                   ; preds = %land.lhs.true.3177
  %1353 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3182

cond.false.3181:                                  ; preds = %land.lhs.true.3177, %cond.end.3172
  %1354 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3182

cond.end.3182:                                    ; preds = %cond.false.3181, %cond.true.3180
  %cond3183 = phi i8* [ %1353, %cond.true.3180 ], [ %1354, %cond.false.3181 ]
  store i8* %cond3183, i8** %dlimit3174, align 8
  br label %while.cond.3184

while.cond.3184:                                  ; preds = %while.body.3197, %cond.end.3182
  %1355 = load i8*, i8** %dtemp3167, align 8
  %incdec.ptr3185 = getelementptr inbounds i8, i8* %1355, i32 -1
  store i8* %incdec.ptr3185, i8** %dtemp3167, align 8
  %1356 = load i8*, i8** %dlimit3174, align 8
  %cmp3186 = icmp ugt i8* %1355, %1356
  br i1 %cmp3186, label %land.rhs.3188, label %land.end.3195

land.rhs.3188:                                    ; preds = %while.cond.3184
  %1357 = load i8*, i8** %dtemp3167, align 8
  %1358 = load i8, i8* %1357, align 1
  %conv3189 = zext i8 %1358 to i32
  %and3190 = and i32 %conv3189, 192
  %cmp3191 = icmp ne i32 %and3190, 128
  %lnot3193 = xor i1 %cmp3191, true
  br label %land.end.3195

land.end.3195:                                    ; preds = %land.rhs.3188, %while.cond.3184
  %1359 = phi i1 [ false, %while.cond.3184 ], [ %lnot3193, %land.rhs.3188 ]
  br i1 %1359, label %while.body.3197, label %while.end.3198

while.body.3197:                                  ; preds = %land.end.3195
  br label %while.cond.3184

while.end.3198:                                   ; preds = %land.end.3195
  %1360 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3199 = getelementptr inbounds i8, i8* %1360, i64 0
  %1361 = load i8, i8* %arrayidx3199, align 1
  %conv3200 = zext i8 %1361 to i32
  %and3201 = and i32 %conv3200, 128
  %tobool3202 = icmp ne i32 %and3201, 0
  br i1 %tobool3202, label %cond.false.3206, label %cond.true.3203

cond.true.3203:                                   ; preds = %while.end.3198
  %1362 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3204 = getelementptr inbounds i8, i8* %1362, i64 0
  %1363 = load i8, i8* %arrayidx3204, align 1
  %conv3205 = zext i8 %1363 to i32
  br label %cond.end.3251

cond.false.3206:                                  ; preds = %while.end.3198
  %1364 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3207 = getelementptr inbounds i8, i8* %1364, i64 0
  %1365 = load i8, i8* %arrayidx3207, align 1
  %conv3208 = zext i8 %1365 to i32
  %and3209 = and i32 %conv3208, 32
  %tobool3210 = icmp ne i32 %and3209, 0
  br i1 %tobool3210, label %cond.false.3226, label %cond.true.3211

cond.true.3211:                                   ; preds = %cond.false.3206
  %1366 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3212 = getelementptr inbounds i8, i8* %1366, i64 0
  %1367 = load i8, i8* %arrayidx3212, align 1
  %conv3213 = zext i8 %1367 to i32
  %and3214 = and i32 %conv3213, 31
  %shl3215 = shl i32 %and3214, 6
  %1368 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3216 = getelementptr inbounds i8, i8* %1368, i64 1
  %1369 = load i8, i8* %arrayidx3216, align 1
  %conv3217 = zext i8 %1369 to i32
  %and3218 = and i32 %conv3217, 63
  %or3219 = or i32 %shl3215, %and3218
  %1370 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3220 = getelementptr inbounds i8, i8* %1370, i64 0
  %1371 = load i8, i8* %arrayidx3220, align 1
  %conv3221 = zext i8 %1371 to i32
  %cmp3222 = icmp slt i32 %conv3221, 194
  %cond3224 = select i1 %cmp3222, i32 4194176, i32 0
  %add3225 = add nsw i32 %or3219, %cond3224
  br label %cond.end.3249

cond.false.3226:                                  ; preds = %cond.false.3206
  %1372 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3227 = getelementptr inbounds i8, i8* %1372, i64 0
  %1373 = load i8, i8* %arrayidx3227, align 1
  %conv3228 = zext i8 %1373 to i32
  %and3229 = and i32 %conv3228, 16
  %tobool3230 = icmp ne i32 %and3229, 0
  br i1 %tobool3230, label %cond.false.3245, label %cond.true.3231

cond.true.3231:                                   ; preds = %cond.false.3226
  %1374 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3232 = getelementptr inbounds i8, i8* %1374, i64 0
  %1375 = load i8, i8* %arrayidx3232, align 1
  %conv3233 = zext i8 %1375 to i32
  %and3234 = and i32 %conv3233, 15
  %shl3235 = shl i32 %and3234, 12
  %1376 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3236 = getelementptr inbounds i8, i8* %1376, i64 1
  %1377 = load i8, i8* %arrayidx3236, align 1
  %conv3237 = zext i8 %1377 to i32
  %and3238 = and i32 %conv3237, 63
  %shl3239 = shl i32 %and3238, 6
  %or3240 = or i32 %shl3235, %shl3239
  %1378 = load i8*, i8** %dtemp3167, align 8
  %arrayidx3241 = getelementptr inbounds i8, i8* %1378, i64 2
  %1379 = load i8, i8* %arrayidx3241, align 1
  %conv3242 = zext i8 %1379 to i32
  %and3243 = and i32 %conv3242, 63
  %or3244 = or i32 %or3240, %and3243
  br label %cond.end.3247

cond.false.3245:                                  ; preds = %cond.false.3226
  %1380 = load i8*, i8** %dtemp3167, align 8
  %call3246 = call i32 @string_char(i8* %1380, i8** null, i32* null)
  br label %cond.end.3247

cond.end.3247:                                    ; preds = %cond.false.3245, %cond.true.3231
  %cond3248 = phi i32 [ %or3244, %cond.true.3231 ], [ %call3246, %cond.false.3245 ]
  br label %cond.end.3249

cond.end.3249:                                    ; preds = %cond.end.3247, %cond.true.3211
  %cond3250 = phi i32 [ %add3225, %cond.true.3211 ], [ %cond3248, %cond.end.3247 ]
  br label %cond.end.3251

cond.end.3251:                                    ; preds = %cond.end.3249, %cond.true.3203
  %cond3252 = phi i32 [ %conv3205, %cond.true.3203 ], [ %cond3250, %cond.end.3249 ]
  store i32 %cond3252, i32* %c13129, align 4
  br label %if.end.3276

if.else.3253:                                     ; preds = %do.body.3164
  %1381 = load i8*, i8** %d, align 8
  %1382 = load i8*, i8** %string2.addr, align 8
  %cmp3254 = icmp eq i8* %1381, %1382
  br i1 %cmp3254, label %cond.true.3256, label %cond.false.3257

cond.true.3256:                                   ; preds = %if.else.3253
  %1383 = load i8*, i8** %end1, align 8
  br label %cond.end.3258

cond.false.3257:                                  ; preds = %if.else.3253
  %1384 = load i8*, i8** %d, align 8
  br label %cond.end.3258

cond.end.3258:                                    ; preds = %cond.false.3257, %cond.true.3256
  %cond3259 = phi i8* [ %1383, %cond.true.3256 ], [ %1384, %cond.false.3257 ]
  %arrayidx3260 = getelementptr inbounds i8, i8* %cond3259, i64 -1
  %1385 = load i8, i8* %arrayidx3260, align 1
  %conv3261 = zext i8 %1385 to i32
  store i32 %conv3261, i32* %c13129, align 4
  br i1 true, label %cond.true.3262, label %cond.false.3266

cond.true.3262:                                   ; preds = %cond.end.3258
  %1386 = load i32, i32* %c13129, align 4
  %add3263 = add i32 %1386, 0
  %cmp3264 = icmp ult i32 %add3263, 128
  br i1 %cmp3264, label %cond.true.3271, label %cond.false.3272

cond.false.3266:                                  ; preds = %cond.end.3258
  %1387 = load i32, i32* %c13129, align 4
  %conv3267 = sext i32 %1387 to i64
  %add3268 = add i64 %conv3267, 0
  %cmp3269 = icmp ult i64 %add3268, 128
  br i1 %cmp3269, label %cond.true.3271, label %cond.false.3272

cond.true.3271:                                   ; preds = %cond.false.3266, %cond.true.3262
  %1388 = load i32, i32* %c13129, align 4
  br label %cond.end.3274

cond.false.3272:                                  ; preds = %cond.false.3266, %cond.true.3262
  %1389 = load i32, i32* %c13129, align 4
  %add3273 = add nsw i32 %1389, 4194048
  br label %cond.end.3274

cond.end.3274:                                    ; preds = %cond.false.3272, %cond.true.3271
  %cond3275 = phi i32 [ %1388, %cond.true.3271 ], [ %add3273, %cond.false.3272 ]
  store i32 %cond3275, i32* %c13129, align 4
  br label %if.end.3276

if.end.3276:                                      ; preds = %cond.end.3274, %cond.end.3251
  br label %do.end.3278

do.end.3278:                                      ; preds = %if.end.3276
  %1390 = load i32, i32* %c13129, align 4
  %call3279 = call i32 @syntax_property(i32 %1390, i1 zeroext true)
  store i32 %call3279, i32* %s1, align 4
  %1391 = load i64, i64* %charpos, align 8
  %add3280 = add nsw i64 %1391, 1
  call void @UPDATE_SYNTAX_TABLE_FORWARD_FAST(i64 %add3280)
  %1392 = load i8*, i8** %d, align 8
  %1393 = load i8*, i8** %end1, align 8
  %cmp3281 = icmp eq i8* %1392, %1393
  br i1 %cmp3281, label %if.then.3283, label %if.end.3284

if.then.3283:                                     ; preds = %do.end.3278
  %1394 = load i8*, i8** %string2.addr, align 8
  store i8* %1394, i8** %d, align 8
  %1395 = load i8*, i8** %end_match_2, align 8
  store i8* %1395, i8** %dend, align 8
  br label %if.end.3284

if.end.3284:                                      ; preds = %if.then.3283, %do.end.3278
  br label %do.body.3285

do.body.3285:                                     ; preds = %if.end.3284
  %1396 = load i8, i8* %target_multibyte, align 1
  %tobool3286 = icmp ne i8 %1396, 0
  br i1 %tobool3286, label %if.then.3287, label %if.else.3342

if.then.3287:                                     ; preds = %do.body.3285
  %1397 = load i8*, i8** %d, align 8
  %arrayidx3288 = getelementptr inbounds i8, i8* %1397, i64 0
  %1398 = load i8, i8* %arrayidx3288, align 1
  %conv3289 = zext i8 %1398 to i32
  %and3290 = and i32 %conv3289, 128
  %tobool3291 = icmp ne i32 %and3290, 0
  br i1 %tobool3291, label %cond.false.3295, label %cond.true.3292

cond.true.3292:                                   ; preds = %if.then.3287
  store i32 1, i32* %dummy, align 4
  %1399 = load i8*, i8** %d, align 8
  %arrayidx3293 = getelementptr inbounds i8, i8* %1399, i64 0
  %1400 = load i8, i8* %arrayidx3293, align 1
  %conv3294 = zext i8 %1400 to i32
  br label %cond.end.3340

cond.false.3295:                                  ; preds = %if.then.3287
  %1401 = load i8*, i8** %d, align 8
  %arrayidx3296 = getelementptr inbounds i8, i8* %1401, i64 0
  %1402 = load i8, i8* %arrayidx3296, align 1
  %conv3297 = zext i8 %1402 to i32
  %and3298 = and i32 %conv3297, 32
  %tobool3299 = icmp ne i32 %and3298, 0
  br i1 %tobool3299, label %cond.false.3315, label %cond.true.3300

cond.true.3300:                                   ; preds = %cond.false.3295
  store i32 2, i32* %dummy, align 4
  %1403 = load i8*, i8** %d, align 8
  %arrayidx3301 = getelementptr inbounds i8, i8* %1403, i64 0
  %1404 = load i8, i8* %arrayidx3301, align 1
  %conv3302 = zext i8 %1404 to i32
  %and3303 = and i32 %conv3302, 31
  %shl3304 = shl i32 %and3303, 6
  %1405 = load i8*, i8** %d, align 8
  %arrayidx3305 = getelementptr inbounds i8, i8* %1405, i64 1
  %1406 = load i8, i8* %arrayidx3305, align 1
  %conv3306 = zext i8 %1406 to i32
  %and3307 = and i32 %conv3306, 63
  %or3308 = or i32 %shl3304, %and3307
  %1407 = load i8*, i8** %d, align 8
  %arrayidx3309 = getelementptr inbounds i8, i8* %1407, i64 0
  %1408 = load i8, i8* %arrayidx3309, align 1
  %conv3310 = zext i8 %1408 to i32
  %cmp3311 = icmp slt i32 %conv3310, 194
  %cond3313 = select i1 %cmp3311, i32 4194176, i32 0
  %add3314 = add nsw i32 %or3308, %cond3313
  br label %cond.end.3338

cond.false.3315:                                  ; preds = %cond.false.3295
  %1409 = load i8*, i8** %d, align 8
  %arrayidx3316 = getelementptr inbounds i8, i8* %1409, i64 0
  %1410 = load i8, i8* %arrayidx3316, align 1
  %conv3317 = zext i8 %1410 to i32
  %and3318 = and i32 %conv3317, 16
  %tobool3319 = icmp ne i32 %and3318, 0
  br i1 %tobool3319, label %cond.false.3334, label %cond.true.3320

cond.true.3320:                                   ; preds = %cond.false.3315
  store i32 3, i32* %dummy, align 4
  %1411 = load i8*, i8** %d, align 8
  %arrayidx3321 = getelementptr inbounds i8, i8* %1411, i64 0
  %1412 = load i8, i8* %arrayidx3321, align 1
  %conv3322 = zext i8 %1412 to i32
  %and3323 = and i32 %conv3322, 15
  %shl3324 = shl i32 %and3323, 12
  %1413 = load i8*, i8** %d, align 8
  %arrayidx3325 = getelementptr inbounds i8, i8* %1413, i64 1
  %1414 = load i8, i8* %arrayidx3325, align 1
  %conv3326 = zext i8 %1414 to i32
  %and3327 = and i32 %conv3326, 63
  %shl3328 = shl i32 %and3327, 6
  %or3329 = or i32 %shl3324, %shl3328
  %1415 = load i8*, i8** %d, align 8
  %arrayidx3330 = getelementptr inbounds i8, i8* %1415, i64 2
  %1416 = load i8, i8* %arrayidx3330, align 1
  %conv3331 = zext i8 %1416 to i32
  %and3332 = and i32 %conv3331, 63
  %or3333 = or i32 %or3329, %and3332
  br label %cond.end.3336

cond.false.3334:                                  ; preds = %cond.false.3315
  %1417 = load i8*, i8** %d, align 8
  %call3335 = call i32 @string_char(i8* %1417, i8** null, i32* %dummy)
  br label %cond.end.3336

cond.end.3336:                                    ; preds = %cond.false.3334, %cond.true.3320
  %cond3337 = phi i32 [ %or3333, %cond.true.3320 ], [ %call3335, %cond.false.3334 ]
  br label %cond.end.3338

cond.end.3338:                                    ; preds = %cond.end.3336, %cond.true.3300
  %cond3339 = phi i32 [ %add3314, %cond.true.3300 ], [ %cond3337, %cond.end.3336 ]
  br label %cond.end.3340

cond.end.3340:                                    ; preds = %cond.end.3338, %cond.true.3292
  %cond3341 = phi i32 [ %conv3294, %cond.true.3292 ], [ %cond3339, %cond.end.3338 ]
  store i32 %cond3341, i32* %c2, align 4
  br label %if.end.3358

if.else.3342:                                     ; preds = %do.body.3285
  %1418 = load i8*, i8** %d, align 8
  %1419 = load i8, i8* %1418, align 1
  %conv3343 = zext i8 %1419 to i32
  store i32 %conv3343, i32* %c2, align 4
  store i32 1, i32* %dummy, align 4
  br i1 true, label %cond.true.3344, label %cond.false.3348

cond.true.3344:                                   ; preds = %if.else.3342
  %1420 = load i32, i32* %c2, align 4
  %add3345 = add i32 %1420, 0
  %cmp3346 = icmp ult i32 %add3345, 128
  br i1 %cmp3346, label %cond.true.3353, label %cond.false.3354

cond.false.3348:                                  ; preds = %if.else.3342
  %1421 = load i32, i32* %c2, align 4
  %conv3349 = sext i32 %1421 to i64
  %add3350 = add i64 %conv3349, 0
  %cmp3351 = icmp ult i64 %add3350, 128
  br i1 %cmp3351, label %cond.true.3353, label %cond.false.3354

cond.true.3353:                                   ; preds = %cond.false.3348, %cond.true.3344
  %1422 = load i32, i32* %c2, align 4
  br label %cond.end.3356

cond.false.3354:                                  ; preds = %cond.false.3348, %cond.true.3344
  %1423 = load i32, i32* %c2, align 4
  %add3355 = add nsw i32 %1423, 4194048
  br label %cond.end.3356

cond.end.3356:                                    ; preds = %cond.false.3354, %cond.true.3353
  %cond3357 = phi i32 [ %1422, %cond.true.3353 ], [ %add3355, %cond.false.3354 ]
  store i32 %cond3357, i32* %c2, align 4
  br label %if.end.3358

if.end.3358:                                      ; preds = %cond.end.3356, %cond.end.3340
  br label %do.end.3360

do.end.3360:                                      ; preds = %if.end.3358
  %1424 = load i32, i32* %c2, align 4
  %call3361 = call i32 @syntax_property(i32 %1424, i1 zeroext true)
  store i32 %call3361, i32* %s2, align 4
  %1425 = load i32, i32* %s1, align 4
  %cmp3362 = icmp eq i32 %1425, 2
  %conv3363 = zext i1 %cmp3362 to i32
  %1426 = load i32, i32* %s2, align 4
  %cmp3364 = icmp eq i32 %1426, 2
  %conv3365 = zext i1 %cmp3364 to i32
  %cmp3366 = icmp ne i32 %conv3363, %conv3365
  br i1 %cmp3366, label %if.then.3394, label %lor.lhs.false.3368

lor.lhs.false.3368:                               ; preds = %do.end.3360
  %1427 = load i32, i32* %s1, align 4
  %cmp3369 = icmp eq i32 %1427, 2
  br i1 %cmp3369, label %land.lhs.true.3371, label %if.end.3399

land.lhs.true.3371:                               ; preds = %lor.lhs.false.3368
  br i1 true, label %cond.true.3372, label %cond.false.3376

cond.true.3372:                                   ; preds = %land.lhs.true.3371
  %1428 = load i32, i32* %c13129, align 4
  %add3373 = add i32 %1428, 0
  %cmp3374 = icmp ult i32 %add3373, 256
  br i1 %cmp3374, label %land.lhs.true.3381, label %land.lhs.true.3391

cond.false.3376:                                  ; preds = %land.lhs.true.3371
  %1429 = load i32, i32* %c13129, align 4
  %conv3377 = sext i32 %1429 to i64
  %add3378 = add i64 %conv3377, 0
  %cmp3379 = icmp ult i64 %add3378, 256
  br i1 %cmp3379, label %land.lhs.true.3381, label %land.lhs.true.3391

land.lhs.true.3381:                               ; preds = %cond.false.3376, %cond.true.3372
  br i1 true, label %cond.true.3382, label %cond.false.3386

cond.true.3382:                                   ; preds = %land.lhs.true.3381
  %1430 = load i32, i32* %c2, align 4
  %add3383 = add i32 %1430, 0
  %cmp3384 = icmp ult i32 %add3383, 256
  br i1 %cmp3384, label %if.end.3399, label %land.lhs.true.3391

cond.false.3386:                                  ; preds = %land.lhs.true.3381
  %1431 = load i32, i32* %c2, align 4
  %conv3387 = sext i32 %1431 to i64
  %add3388 = add i64 %conv3387, 0
  %cmp3389 = icmp ult i64 %add3388, 256
  br i1 %cmp3389, label %if.end.3399, label %land.lhs.true.3391

land.lhs.true.3391:                               ; preds = %cond.false.3386, %cond.true.3382, %cond.false.3376, %cond.true.3372
  %1432 = load i32, i32* %c13129, align 4
  %1433 = load i32, i32* %c2, align 4
  %call3392 = call zeroext i1 @word_boundary_p(i32 %1432, i32 %1433)
  br i1 %call3392, label %if.then.3394, label %if.end.3399

if.then.3394:                                     ; preds = %land.lhs.true.3391, %do.end.3360
  %1434 = load i8, i8* %not3105, align 1
  %tobool3395 = icmp ne i8 %1434, 0
  %lnot3396 = xor i1 %tobool3395, true
  %lnot.ext3397 = zext i1 %lnot3396 to i32
  %conv3398 = trunc i32 %lnot.ext3397 to i8
  store i8 %conv3398, i8* %not3105, align 1
  br label %if.end.3399

if.end.3399:                                      ; preds = %if.then.3394, %land.lhs.true.3391, %cond.false.3386, %cond.true.3382, %lor.lhs.false.3368
  br label %if.end.3400

if.end.3400:                                      ; preds = %if.end.3399, %if.then.3123
  %1435 = load i8, i8* %not3105, align 1
  %tobool3401 = icmp ne i8 %1435, 0
  br i1 %tobool3401, label %if.then.3402, label %if.else.3403

if.then.3402:                                     ; preds = %if.end.3400
  br label %sw.epilog

if.else.3403:                                     ; preds = %if.end.3400
  br label %fail

sw.bb.3404:                                       ; preds = %if.end.578
  %1436 = load i8*, i8** %d, align 8
  %1437 = load i8*, i8** %end2, align 8
  %cmp3405 = icmp eq i8* %1436, %1437
  br i1 %cmp3405, label %if.then.3407, label %if.else.3408

if.then.3407:                                     ; preds = %sw.bb.3404
  br label %fail

if.else.3408:                                     ; preds = %sw.bb.3404
  %1438 = load i64, i64* %size1.addr, align 8
  %tobool3415 = icmp ne i64 %1438, 0
  br i1 %tobool3415, label %land.lhs.true.3416, label %cond.false.3427

land.lhs.true.3416:                               ; preds = %if.else.3408
  %1439 = load i8*, i8** %string1.addr, align 8
  %1440 = load i8*, i8** %d, align 8
  %cmp3417 = icmp ule i8* %1439, %1440
  br i1 %cmp3417, label %land.lhs.true.3419, label %cond.false.3427

land.lhs.true.3419:                               ; preds = %land.lhs.true.3416
  %1441 = load i8*, i8** %d, align 8
  %1442 = load i8*, i8** %string1.addr, align 8
  %1443 = load i64, i64* %size1.addr, align 8
  %add.ptr3420 = getelementptr inbounds i8, i8* %1442, i64 %1443
  %cmp3421 = icmp ule i8* %1441, %add.ptr3420
  br i1 %cmp3421, label %cond.true.3423, label %cond.false.3427

cond.true.3423:                                   ; preds = %land.lhs.true.3419
  %1444 = load i8*, i8** %d, align 8
  %1445 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast3424 = ptrtoint i8* %1444 to i64
  %sub.ptr.rhs.cast3425 = ptrtoint i8* %1445 to i64
  %sub.ptr.sub3426 = sub i64 %sub.ptr.lhs.cast3424, %sub.ptr.rhs.cast3425
  br label %cond.end.3432

cond.false.3427:                                  ; preds = %land.lhs.true.3419, %land.lhs.true.3416, %if.else.3408
  %1446 = load i8*, i8** %d, align 8
  %1447 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast3428 = ptrtoint i8* %1446 to i64
  %sub.ptr.rhs.cast3429 = ptrtoint i8* %1447 to i64
  %sub.ptr.sub3430 = sub i64 %sub.ptr.lhs.cast3428, %sub.ptr.rhs.cast3429
  %1448 = load i64, i64* %size1.addr, align 8
  %add3431 = add nsw i64 %sub.ptr.sub3430, %1448
  br label %cond.end.3432

cond.end.3432:                                    ; preds = %cond.false.3427, %cond.true.3423
  %cond3433 = phi i64 [ %sub.ptr.sub3426, %cond.true.3423 ], [ %add3431, %cond.false.3427 ]
  %1449 = load i64, i64* @re_match_object, align 8
  %call3434 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp3435 = icmp eq i64 %1449, %call3434
  br i1 %cmp3435, label %lor.end.3440, label %lor.rhs.3437

lor.rhs.3437:                                     ; preds = %cond.end.3432
  %1450 = load i64, i64* @re_match_object, align 8
  %call3438 = call zeroext i1 @BUFFERP(i64 %1450)
  br label %lor.end.3440

lor.end.3440:                                     ; preds = %lor.rhs.3437, %cond.end.3432
  %1451 = phi i1 [ true, %cond.end.3432 ], [ %call3438, %lor.rhs.3437 ]
  %lor.ext3441 = zext i1 %1451 to i32
  %conv3442 = sext i32 %lor.ext3441 to i64
  %add3443 = add nsw i64 %cond3433, %conv3442
  store i64 %add3443, i64* %offset3414, align 8
  %1452 = load i64, i64* %offset3414, align 8
  %call3445 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1452)
  store i64 %call3445, i64* %charpos3444, align 8
  %1453 = load i64, i64* %charpos3444, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1453)
  br label %while.cond.3446

while.cond.3446:                                  ; preds = %if.end.3453, %lor.end.3440
  %1454 = load i8*, i8** %d, align 8
  %1455 = load i8*, i8** %dend, align 8
  %cmp3447 = icmp eq i8* %1454, %1455
  br i1 %cmp3447, label %while.body.3449, label %while.end.3454

while.body.3449:                                  ; preds = %while.cond.3446
  %1456 = load i8*, i8** %dend, align 8
  %1457 = load i8*, i8** %end_match_2, align 8
  %cmp3450 = icmp eq i8* %1456, %1457
  br i1 %cmp3450, label %if.then.3452, label %if.end.3453

if.then.3452:                                     ; preds = %while.body.3449
  br label %fail

if.end.3453:                                      ; preds = %while.body.3449
  %1458 = load i8*, i8** %string2.addr, align 8
  store i8* %1458, i8** %d, align 8
  %1459 = load i8*, i8** %end_match_2, align 8
  store i8* %1459, i8** %dend, align 8
  br label %while.cond.3446

while.end.3454:                                   ; preds = %while.cond.3446
  br label %do.body.3455

do.body.3455:                                     ; preds = %while.end.3454
  %1460 = load i8, i8* %target_multibyte, align 1
  %tobool3456 = icmp ne i8 %1460, 0
  br i1 %tobool3456, label %if.then.3457, label %if.else.3512

if.then.3457:                                     ; preds = %do.body.3455
  %1461 = load i8*, i8** %d, align 8
  %arrayidx3458 = getelementptr inbounds i8, i8* %1461, i64 0
  %1462 = load i8, i8* %arrayidx3458, align 1
  %conv3459 = zext i8 %1462 to i32
  %and3460 = and i32 %conv3459, 128
  %tobool3461 = icmp ne i32 %and3460, 0
  br i1 %tobool3461, label %cond.false.3465, label %cond.true.3462

cond.true.3462:                                   ; preds = %if.then.3457
  store i32 1, i32* %dummy3413, align 4
  %1463 = load i8*, i8** %d, align 8
  %arrayidx3463 = getelementptr inbounds i8, i8* %1463, i64 0
  %1464 = load i8, i8* %arrayidx3463, align 1
  %conv3464 = zext i8 %1464 to i32
  br label %cond.end.3510

cond.false.3465:                                  ; preds = %if.then.3457
  %1465 = load i8*, i8** %d, align 8
  %arrayidx3466 = getelementptr inbounds i8, i8* %1465, i64 0
  %1466 = load i8, i8* %arrayidx3466, align 1
  %conv3467 = zext i8 %1466 to i32
  %and3468 = and i32 %conv3467, 32
  %tobool3469 = icmp ne i32 %and3468, 0
  br i1 %tobool3469, label %cond.false.3485, label %cond.true.3470

cond.true.3470:                                   ; preds = %cond.false.3465
  store i32 2, i32* %dummy3413, align 4
  %1467 = load i8*, i8** %d, align 8
  %arrayidx3471 = getelementptr inbounds i8, i8* %1467, i64 0
  %1468 = load i8, i8* %arrayidx3471, align 1
  %conv3472 = zext i8 %1468 to i32
  %and3473 = and i32 %conv3472, 31
  %shl3474 = shl i32 %and3473, 6
  %1469 = load i8*, i8** %d, align 8
  %arrayidx3475 = getelementptr inbounds i8, i8* %1469, i64 1
  %1470 = load i8, i8* %arrayidx3475, align 1
  %conv3476 = zext i8 %1470 to i32
  %and3477 = and i32 %conv3476, 63
  %or3478 = or i32 %shl3474, %and3477
  %1471 = load i8*, i8** %d, align 8
  %arrayidx3479 = getelementptr inbounds i8, i8* %1471, i64 0
  %1472 = load i8, i8* %arrayidx3479, align 1
  %conv3480 = zext i8 %1472 to i32
  %cmp3481 = icmp slt i32 %conv3480, 194
  %cond3483 = select i1 %cmp3481, i32 4194176, i32 0
  %add3484 = add nsw i32 %or3478, %cond3483
  br label %cond.end.3508

cond.false.3485:                                  ; preds = %cond.false.3465
  %1473 = load i8*, i8** %d, align 8
  %arrayidx3486 = getelementptr inbounds i8, i8* %1473, i64 0
  %1474 = load i8, i8* %arrayidx3486, align 1
  %conv3487 = zext i8 %1474 to i32
  %and3488 = and i32 %conv3487, 16
  %tobool3489 = icmp ne i32 %and3488, 0
  br i1 %tobool3489, label %cond.false.3504, label %cond.true.3490

cond.true.3490:                                   ; preds = %cond.false.3485
  store i32 3, i32* %dummy3413, align 4
  %1475 = load i8*, i8** %d, align 8
  %arrayidx3491 = getelementptr inbounds i8, i8* %1475, i64 0
  %1476 = load i8, i8* %arrayidx3491, align 1
  %conv3492 = zext i8 %1476 to i32
  %and3493 = and i32 %conv3492, 15
  %shl3494 = shl i32 %and3493, 12
  %1477 = load i8*, i8** %d, align 8
  %arrayidx3495 = getelementptr inbounds i8, i8* %1477, i64 1
  %1478 = load i8, i8* %arrayidx3495, align 1
  %conv3496 = zext i8 %1478 to i32
  %and3497 = and i32 %conv3496, 63
  %shl3498 = shl i32 %and3497, 6
  %or3499 = or i32 %shl3494, %shl3498
  %1479 = load i8*, i8** %d, align 8
  %arrayidx3500 = getelementptr inbounds i8, i8* %1479, i64 2
  %1480 = load i8, i8* %arrayidx3500, align 1
  %conv3501 = zext i8 %1480 to i32
  %and3502 = and i32 %conv3501, 63
  %or3503 = or i32 %or3499, %and3502
  br label %cond.end.3506

cond.false.3504:                                  ; preds = %cond.false.3485
  %1481 = load i8*, i8** %d, align 8
  %call3505 = call i32 @string_char(i8* %1481, i8** null, i32* %dummy3413)
  br label %cond.end.3506

cond.end.3506:                                    ; preds = %cond.false.3504, %cond.true.3490
  %cond3507 = phi i32 [ %or3503, %cond.true.3490 ], [ %call3505, %cond.false.3504 ]
  br label %cond.end.3508

cond.end.3508:                                    ; preds = %cond.end.3506, %cond.true.3470
  %cond3509 = phi i32 [ %add3484, %cond.true.3470 ], [ %cond3507, %cond.end.3506 ]
  br label %cond.end.3510

cond.end.3510:                                    ; preds = %cond.end.3508, %cond.true.3462
  %cond3511 = phi i32 [ %conv3464, %cond.true.3462 ], [ %cond3509, %cond.end.3508 ]
  store i32 %cond3511, i32* %c23410, align 4
  br label %if.end.3528

if.else.3512:                                     ; preds = %do.body.3455
  %1482 = load i8*, i8** %d, align 8
  %1483 = load i8, i8* %1482, align 1
  %conv3513 = zext i8 %1483 to i32
  store i32 %conv3513, i32* %c23410, align 4
  store i32 1, i32* %dummy3413, align 4
  br i1 true, label %cond.true.3514, label %cond.false.3518

cond.true.3514:                                   ; preds = %if.else.3512
  %1484 = load i32, i32* %c23410, align 4
  %add3515 = add i32 %1484, 0
  %cmp3516 = icmp ult i32 %add3515, 128
  br i1 %cmp3516, label %cond.true.3523, label %cond.false.3524

cond.false.3518:                                  ; preds = %if.else.3512
  %1485 = load i32, i32* %c23410, align 4
  %conv3519 = sext i32 %1485 to i64
  %add3520 = add i64 %conv3519, 0
  %cmp3521 = icmp ult i64 %add3520, 128
  br i1 %cmp3521, label %cond.true.3523, label %cond.false.3524

cond.true.3523:                                   ; preds = %cond.false.3518, %cond.true.3514
  %1486 = load i32, i32* %c23410, align 4
  br label %cond.end.3526

cond.false.3524:                                  ; preds = %cond.false.3518, %cond.true.3514
  %1487 = load i32, i32* %c23410, align 4
  %add3525 = add nsw i32 %1487, 4194048
  br label %cond.end.3526

cond.end.3526:                                    ; preds = %cond.false.3524, %cond.true.3523
  %cond3527 = phi i32 [ %1486, %cond.true.3523 ], [ %add3525, %cond.false.3524 ]
  store i32 %cond3527, i32* %c23410, align 4
  br label %if.end.3528

if.end.3528:                                      ; preds = %cond.end.3526, %cond.end.3510
  br label %do.end.3530

do.end.3530:                                      ; preds = %if.end.3528
  %1488 = load i32, i32* %c23410, align 4
  %call3531 = call i32 @syntax_property(i32 %1488, i1 zeroext true)
  store i32 %call3531, i32* %s23412, align 4
  %1489 = load i32, i32* %s23412, align 4
  %cmp3532 = icmp ne i32 %1489, 2
  br i1 %cmp3532, label %if.then.3534, label %if.end.3535

if.then.3534:                                     ; preds = %do.end.3530
  br label %fail

if.end.3535:                                      ; preds = %do.end.3530
  %1490 = load i8*, i8** %d, align 8
  %1491 = load i64, i64* %size1.addr, align 8
  %tobool3536 = icmp ne i64 %1491, 0
  br i1 %tobool3536, label %cond.true.3537, label %cond.false.3538

cond.true.3537:                                   ; preds = %if.end.3535
  %1492 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3539

cond.false.3538:                                  ; preds = %if.end.3535
  %1493 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3539

cond.end.3539:                                    ; preds = %cond.false.3538, %cond.true.3537
  %cond3540 = phi i8* [ %1492, %cond.true.3537 ], [ %1493, %cond.false.3538 ]
  %cmp3541 = icmp eq i8* %1490, %cond3540
  br i1 %cmp3541, label %if.end.3690, label %lor.lhs.false.3543

lor.lhs.false.3543:                               ; preds = %cond.end.3539
  %1494 = load i64, i64* %size2.addr, align 8
  %tobool3544 = icmp ne i64 %1494, 0
  br i1 %tobool3544, label %if.then.3545, label %if.end.3690

if.then.3545:                                     ; preds = %lor.lhs.false.3543
  br label %do.body.3546

do.body.3546:                                     ; preds = %if.then.3545
  %1495 = load i8, i8* %target_multibyte, align 1
  %tobool3547 = icmp ne i8 %1495, 0
  br i1 %tobool3547, label %if.then.3548, label %if.else.3635

if.then.3548:                                     ; preds = %do.body.3546
  %1496 = load i8*, i8** %d, align 8
  %1497 = load i8*, i8** %string2.addr, align 8
  %cmp3550 = icmp eq i8* %1496, %1497
  br i1 %cmp3550, label %cond.true.3552, label %cond.false.3553

cond.true.3552:                                   ; preds = %if.then.3548
  %1498 = load i8*, i8** %end1, align 8
  br label %cond.end.3554

cond.false.3553:                                  ; preds = %if.then.3548
  %1499 = load i8*, i8** %d, align 8
  br label %cond.end.3554

cond.end.3554:                                    ; preds = %cond.false.3553, %cond.true.3552
  %cond3555 = phi i8* [ %1498, %cond.true.3552 ], [ %1499, %cond.false.3553 ]
  store i8* %cond3555, i8** %dtemp3549, align 8
  %1500 = load i8*, i8** %d, align 8
  %1501 = load i8*, i8** %string2.addr, align 8
  %cmp3557 = icmp ugt i8* %1500, %1501
  br i1 %cmp3557, label %land.lhs.true.3559, label %cond.false.3563

land.lhs.true.3559:                               ; preds = %cond.end.3554
  %1502 = load i8*, i8** %d, align 8
  %1503 = load i8*, i8** %end2, align 8
  %cmp3560 = icmp ule i8* %1502, %1503
  br i1 %cmp3560, label %cond.true.3562, label %cond.false.3563

cond.true.3562:                                   ; preds = %land.lhs.true.3559
  %1504 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3564

cond.false.3563:                                  ; preds = %land.lhs.true.3559, %cond.end.3554
  %1505 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3564

cond.end.3564:                                    ; preds = %cond.false.3563, %cond.true.3562
  %cond3565 = phi i8* [ %1504, %cond.true.3562 ], [ %1505, %cond.false.3563 ]
  store i8* %cond3565, i8** %dlimit3556, align 8
  br label %while.cond.3566

while.cond.3566:                                  ; preds = %while.body.3579, %cond.end.3564
  %1506 = load i8*, i8** %dtemp3549, align 8
  %incdec.ptr3567 = getelementptr inbounds i8, i8* %1506, i32 -1
  store i8* %incdec.ptr3567, i8** %dtemp3549, align 8
  %1507 = load i8*, i8** %dlimit3556, align 8
  %cmp3568 = icmp ugt i8* %1506, %1507
  br i1 %cmp3568, label %land.rhs.3570, label %land.end.3577

land.rhs.3570:                                    ; preds = %while.cond.3566
  %1508 = load i8*, i8** %dtemp3549, align 8
  %1509 = load i8, i8* %1508, align 1
  %conv3571 = zext i8 %1509 to i32
  %and3572 = and i32 %conv3571, 192
  %cmp3573 = icmp ne i32 %and3572, 128
  %lnot3575 = xor i1 %cmp3573, true
  br label %land.end.3577

land.end.3577:                                    ; preds = %land.rhs.3570, %while.cond.3566
  %1510 = phi i1 [ false, %while.cond.3566 ], [ %lnot3575, %land.rhs.3570 ]
  br i1 %1510, label %while.body.3579, label %while.end.3580

while.body.3579:                                  ; preds = %land.end.3577
  br label %while.cond.3566

while.end.3580:                                   ; preds = %land.end.3577
  %1511 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3581 = getelementptr inbounds i8, i8* %1511, i64 0
  %1512 = load i8, i8* %arrayidx3581, align 1
  %conv3582 = zext i8 %1512 to i32
  %and3583 = and i32 %conv3582, 128
  %tobool3584 = icmp ne i32 %and3583, 0
  br i1 %tobool3584, label %cond.false.3588, label %cond.true.3585

cond.true.3585:                                   ; preds = %while.end.3580
  %1513 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3586 = getelementptr inbounds i8, i8* %1513, i64 0
  %1514 = load i8, i8* %arrayidx3586, align 1
  %conv3587 = zext i8 %1514 to i32
  br label %cond.end.3633

cond.false.3588:                                  ; preds = %while.end.3580
  %1515 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3589 = getelementptr inbounds i8, i8* %1515, i64 0
  %1516 = load i8, i8* %arrayidx3589, align 1
  %conv3590 = zext i8 %1516 to i32
  %and3591 = and i32 %conv3590, 32
  %tobool3592 = icmp ne i32 %and3591, 0
  br i1 %tobool3592, label %cond.false.3608, label %cond.true.3593

cond.true.3593:                                   ; preds = %cond.false.3588
  %1517 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3594 = getelementptr inbounds i8, i8* %1517, i64 0
  %1518 = load i8, i8* %arrayidx3594, align 1
  %conv3595 = zext i8 %1518 to i32
  %and3596 = and i32 %conv3595, 31
  %shl3597 = shl i32 %and3596, 6
  %1519 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3598 = getelementptr inbounds i8, i8* %1519, i64 1
  %1520 = load i8, i8* %arrayidx3598, align 1
  %conv3599 = zext i8 %1520 to i32
  %and3600 = and i32 %conv3599, 63
  %or3601 = or i32 %shl3597, %and3600
  %1521 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3602 = getelementptr inbounds i8, i8* %1521, i64 0
  %1522 = load i8, i8* %arrayidx3602, align 1
  %conv3603 = zext i8 %1522 to i32
  %cmp3604 = icmp slt i32 %conv3603, 194
  %cond3606 = select i1 %cmp3604, i32 4194176, i32 0
  %add3607 = add nsw i32 %or3601, %cond3606
  br label %cond.end.3631

cond.false.3608:                                  ; preds = %cond.false.3588
  %1523 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3609 = getelementptr inbounds i8, i8* %1523, i64 0
  %1524 = load i8, i8* %arrayidx3609, align 1
  %conv3610 = zext i8 %1524 to i32
  %and3611 = and i32 %conv3610, 16
  %tobool3612 = icmp ne i32 %and3611, 0
  br i1 %tobool3612, label %cond.false.3627, label %cond.true.3613

cond.true.3613:                                   ; preds = %cond.false.3608
  %1525 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3614 = getelementptr inbounds i8, i8* %1525, i64 0
  %1526 = load i8, i8* %arrayidx3614, align 1
  %conv3615 = zext i8 %1526 to i32
  %and3616 = and i32 %conv3615, 15
  %shl3617 = shl i32 %and3616, 12
  %1527 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3618 = getelementptr inbounds i8, i8* %1527, i64 1
  %1528 = load i8, i8* %arrayidx3618, align 1
  %conv3619 = zext i8 %1528 to i32
  %and3620 = and i32 %conv3619, 63
  %shl3621 = shl i32 %and3620, 6
  %or3622 = or i32 %shl3617, %shl3621
  %1529 = load i8*, i8** %dtemp3549, align 8
  %arrayidx3623 = getelementptr inbounds i8, i8* %1529, i64 2
  %1530 = load i8, i8* %arrayidx3623, align 1
  %conv3624 = zext i8 %1530 to i32
  %and3625 = and i32 %conv3624, 63
  %or3626 = or i32 %or3622, %and3625
  br label %cond.end.3629

cond.false.3627:                                  ; preds = %cond.false.3608
  %1531 = load i8*, i8** %dtemp3549, align 8
  %call3628 = call i32 @string_char(i8* %1531, i8** null, i32* null)
  br label %cond.end.3629

cond.end.3629:                                    ; preds = %cond.false.3627, %cond.true.3613
  %cond3630 = phi i32 [ %or3626, %cond.true.3613 ], [ %call3628, %cond.false.3627 ]
  br label %cond.end.3631

cond.end.3631:                                    ; preds = %cond.end.3629, %cond.true.3593
  %cond3632 = phi i32 [ %add3607, %cond.true.3593 ], [ %cond3630, %cond.end.3629 ]
  br label %cond.end.3633

cond.end.3633:                                    ; preds = %cond.end.3631, %cond.true.3585
  %cond3634 = phi i32 [ %conv3587, %cond.true.3585 ], [ %cond3632, %cond.end.3631 ]
  store i32 %cond3634, i32* %c13409, align 4
  br label %if.end.3658

if.else.3635:                                     ; preds = %do.body.3546
  %1532 = load i8*, i8** %d, align 8
  %1533 = load i8*, i8** %string2.addr, align 8
  %cmp3636 = icmp eq i8* %1532, %1533
  br i1 %cmp3636, label %cond.true.3638, label %cond.false.3639

cond.true.3638:                                   ; preds = %if.else.3635
  %1534 = load i8*, i8** %end1, align 8
  br label %cond.end.3640

cond.false.3639:                                  ; preds = %if.else.3635
  %1535 = load i8*, i8** %d, align 8
  br label %cond.end.3640

cond.end.3640:                                    ; preds = %cond.false.3639, %cond.true.3638
  %cond3641 = phi i8* [ %1534, %cond.true.3638 ], [ %1535, %cond.false.3639 ]
  %arrayidx3642 = getelementptr inbounds i8, i8* %cond3641, i64 -1
  %1536 = load i8, i8* %arrayidx3642, align 1
  %conv3643 = zext i8 %1536 to i32
  store i32 %conv3643, i32* %c13409, align 4
  br i1 true, label %cond.true.3644, label %cond.false.3648

cond.true.3644:                                   ; preds = %cond.end.3640
  %1537 = load i32, i32* %c13409, align 4
  %add3645 = add i32 %1537, 0
  %cmp3646 = icmp ult i32 %add3645, 128
  br i1 %cmp3646, label %cond.true.3653, label %cond.false.3654

cond.false.3648:                                  ; preds = %cond.end.3640
  %1538 = load i32, i32* %c13409, align 4
  %conv3649 = sext i32 %1538 to i64
  %add3650 = add i64 %conv3649, 0
  %cmp3651 = icmp ult i64 %add3650, 128
  br i1 %cmp3651, label %cond.true.3653, label %cond.false.3654

cond.true.3653:                                   ; preds = %cond.false.3648, %cond.true.3644
  %1539 = load i32, i32* %c13409, align 4
  br label %cond.end.3656

cond.false.3654:                                  ; preds = %cond.false.3648, %cond.true.3644
  %1540 = load i32, i32* %c13409, align 4
  %add3655 = add nsw i32 %1540, 4194048
  br label %cond.end.3656

cond.end.3656:                                    ; preds = %cond.false.3654, %cond.true.3653
  %cond3657 = phi i32 [ %1539, %cond.true.3653 ], [ %add3655, %cond.false.3654 ]
  store i32 %cond3657, i32* %c13409, align 4
  br label %if.end.3658

if.end.3658:                                      ; preds = %cond.end.3656, %cond.end.3633
  br label %do.end.3660

do.end.3660:                                      ; preds = %if.end.3658
  %1541 = load i64, i64* %charpos3444, align 8
  %sub3661 = sub nsw i64 %1541, 1
  call void @UPDATE_SYNTAX_TABLE_BACKWARD(i64 %sub3661)
  %1542 = load i32, i32* %c13409, align 4
  %call3662 = call i32 @syntax_property(i32 %1542, i1 zeroext true)
  store i32 %call3662, i32* %s13411, align 4
  %1543 = load i32, i32* %s13411, align 4
  %cmp3663 = icmp eq i32 %1543, 2
  br i1 %cmp3663, label %land.lhs.true.3665, label %if.end.3689

land.lhs.true.3665:                               ; preds = %do.end.3660
  br i1 true, label %cond.true.3666, label %cond.false.3670

cond.true.3666:                                   ; preds = %land.lhs.true.3665
  %1544 = load i32, i32* %c13409, align 4
  %add3667 = add i32 %1544, 0
  %cmp3668 = icmp ult i32 %add3667, 256
  br i1 %cmp3668, label %land.lhs.true.3675, label %land.lhs.true.3685

cond.false.3670:                                  ; preds = %land.lhs.true.3665
  %1545 = load i32, i32* %c13409, align 4
  %conv3671 = sext i32 %1545 to i64
  %add3672 = add i64 %conv3671, 0
  %cmp3673 = icmp ult i64 %add3672, 256
  br i1 %cmp3673, label %land.lhs.true.3675, label %land.lhs.true.3685

land.lhs.true.3675:                               ; preds = %cond.false.3670, %cond.true.3666
  br i1 true, label %cond.true.3676, label %cond.false.3680

cond.true.3676:                                   ; preds = %land.lhs.true.3675
  %1546 = load i32, i32* %c23410, align 4
  %add3677 = add i32 %1546, 0
  %cmp3678 = icmp ult i32 %add3677, 256
  br i1 %cmp3678, label %if.then.3688, label %land.lhs.true.3685

cond.false.3680:                                  ; preds = %land.lhs.true.3675
  %1547 = load i32, i32* %c23410, align 4
  %conv3681 = sext i32 %1547 to i64
  %add3682 = add i64 %conv3681, 0
  %cmp3683 = icmp ult i64 %add3682, 256
  br i1 %cmp3683, label %if.then.3688, label %land.lhs.true.3685

land.lhs.true.3685:                               ; preds = %cond.false.3680, %cond.true.3676, %cond.false.3670, %cond.true.3666
  %1548 = load i32, i32* %c13409, align 4
  %1549 = load i32, i32* %c23410, align 4
  %call3686 = call zeroext i1 @word_boundary_p(i32 %1548, i32 %1549)
  br i1 %call3686, label %if.end.3689, label %if.then.3688

if.then.3688:                                     ; preds = %land.lhs.true.3685, %cond.false.3680, %cond.true.3676
  br label %fail

if.end.3689:                                      ; preds = %land.lhs.true.3685, %do.end.3660
  br label %if.end.3690

if.end.3690:                                      ; preds = %if.end.3689, %lor.lhs.false.3543, %cond.end.3539
  br label %if.end.3691

if.end.3691:                                      ; preds = %if.end.3690
  br label %sw.epilog

sw.bb.3692:                                       ; preds = %if.end.578
  %1550 = load i8*, i8** %d, align 8
  %1551 = load i64, i64* %size1.addr, align 8
  %tobool3693 = icmp ne i64 %1551, 0
  br i1 %tobool3693, label %cond.true.3694, label %cond.false.3695

cond.true.3694:                                   ; preds = %sw.bb.3692
  %1552 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3696

cond.false.3695:                                  ; preds = %sw.bb.3692
  %1553 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3696

cond.end.3696:                                    ; preds = %cond.false.3695, %cond.true.3694
  %cond3697 = phi i8* [ %1552, %cond.true.3694 ], [ %1553, %cond.false.3695 ]
  %cmp3698 = icmp eq i8* %1550, %cond3697
  br i1 %cmp3698, label %if.then.3702, label %lor.lhs.false.3700

lor.lhs.false.3700:                               ; preds = %cond.end.3696
  %1554 = load i64, i64* %size2.addr, align 8
  %tobool3701 = icmp ne i64 %1554, 0
  br i1 %tobool3701, label %if.else.3703, label %if.then.3702

if.then.3702:                                     ; preds = %lor.lhs.false.3700, %cond.end.3696
  br label %fail

if.else.3703:                                     ; preds = %lor.lhs.false.3700
  %1555 = load i64, i64* %size1.addr, align 8
  %tobool3710 = icmp ne i64 %1555, 0
  br i1 %tobool3710, label %land.lhs.true.3711, label %cond.false.3722

land.lhs.true.3711:                               ; preds = %if.else.3703
  %1556 = load i8*, i8** %string1.addr, align 8
  %1557 = load i8*, i8** %d, align 8
  %cmp3712 = icmp ule i8* %1556, %1557
  br i1 %cmp3712, label %land.lhs.true.3714, label %cond.false.3722

land.lhs.true.3714:                               ; preds = %land.lhs.true.3711
  %1558 = load i8*, i8** %d, align 8
  %1559 = load i8*, i8** %string1.addr, align 8
  %1560 = load i64, i64* %size1.addr, align 8
  %add.ptr3715 = getelementptr inbounds i8, i8* %1559, i64 %1560
  %cmp3716 = icmp ule i8* %1558, %add.ptr3715
  br i1 %cmp3716, label %cond.true.3718, label %cond.false.3722

cond.true.3718:                                   ; preds = %land.lhs.true.3714
  %1561 = load i8*, i8** %d, align 8
  %1562 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast3719 = ptrtoint i8* %1561 to i64
  %sub.ptr.rhs.cast3720 = ptrtoint i8* %1562 to i64
  %sub.ptr.sub3721 = sub i64 %sub.ptr.lhs.cast3719, %sub.ptr.rhs.cast3720
  br label %cond.end.3727

cond.false.3722:                                  ; preds = %land.lhs.true.3714, %land.lhs.true.3711, %if.else.3703
  %1563 = load i8*, i8** %d, align 8
  %1564 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast3723 = ptrtoint i8* %1563 to i64
  %sub.ptr.rhs.cast3724 = ptrtoint i8* %1564 to i64
  %sub.ptr.sub3725 = sub i64 %sub.ptr.lhs.cast3723, %sub.ptr.rhs.cast3724
  %1565 = load i64, i64* %size1.addr, align 8
  %add3726 = add nsw i64 %sub.ptr.sub3725, %1565
  br label %cond.end.3727

cond.end.3727:                                    ; preds = %cond.false.3722, %cond.true.3718
  %cond3728 = phi i64 [ %sub.ptr.sub3721, %cond.true.3718 ], [ %add3726, %cond.false.3722 ]
  %1566 = load i64, i64* @re_match_object, align 8
  %call3729 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp3730 = icmp eq i64 %1566, %call3729
  br i1 %cmp3730, label %lor.end.3735, label %lor.rhs.3732

lor.rhs.3732:                                     ; preds = %cond.end.3727
  %1567 = load i64, i64* @re_match_object, align 8
  %call3733 = call zeroext i1 @BUFFERP(i64 %1567)
  br label %lor.end.3735

lor.end.3735:                                     ; preds = %lor.rhs.3732, %cond.end.3727
  %1568 = phi i1 [ true, %cond.end.3727 ], [ %call3733, %lor.rhs.3732 ]
  %lor.ext3736 = zext i1 %1568 to i32
  %conv3737 = sext i32 %lor.ext3736 to i64
  %add3738 = add nsw i64 %cond3728, %conv3737
  %sub3739 = sub nsw i64 %add3738, 1
  store i64 %sub3739, i64* %offset3709, align 8
  %1569 = load i64, i64* %offset3709, align 8
  %call3741 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1569)
  store i64 %call3741, i64* %charpos3740, align 8
  %1570 = load i64, i64* %charpos3740, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1570)
  br label %do.body.3742

do.body.3742:                                     ; preds = %lor.end.3735
  %1571 = load i8, i8* %target_multibyte, align 1
  %tobool3743 = icmp ne i8 %1571, 0
  br i1 %tobool3743, label %if.then.3744, label %if.else.3831

if.then.3744:                                     ; preds = %do.body.3742
  %1572 = load i8*, i8** %d, align 8
  %1573 = load i8*, i8** %string2.addr, align 8
  %cmp3746 = icmp eq i8* %1572, %1573
  br i1 %cmp3746, label %cond.true.3748, label %cond.false.3749

cond.true.3748:                                   ; preds = %if.then.3744
  %1574 = load i8*, i8** %end1, align 8
  br label %cond.end.3750

cond.false.3749:                                  ; preds = %if.then.3744
  %1575 = load i8*, i8** %d, align 8
  br label %cond.end.3750

cond.end.3750:                                    ; preds = %cond.false.3749, %cond.true.3748
  %cond3751 = phi i8* [ %1574, %cond.true.3748 ], [ %1575, %cond.false.3749 ]
  store i8* %cond3751, i8** %dtemp3745, align 8
  %1576 = load i8*, i8** %d, align 8
  %1577 = load i8*, i8** %string2.addr, align 8
  %cmp3753 = icmp ugt i8* %1576, %1577
  br i1 %cmp3753, label %land.lhs.true.3755, label %cond.false.3759

land.lhs.true.3755:                               ; preds = %cond.end.3750
  %1578 = load i8*, i8** %d, align 8
  %1579 = load i8*, i8** %end2, align 8
  %cmp3756 = icmp ule i8* %1578, %1579
  br i1 %cmp3756, label %cond.true.3758, label %cond.false.3759

cond.true.3758:                                   ; preds = %land.lhs.true.3755
  %1580 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.3760

cond.false.3759:                                  ; preds = %land.lhs.true.3755, %cond.end.3750
  %1581 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.3760

cond.end.3760:                                    ; preds = %cond.false.3759, %cond.true.3758
  %cond3761 = phi i8* [ %1580, %cond.true.3758 ], [ %1581, %cond.false.3759 ]
  store i8* %cond3761, i8** %dlimit3752, align 8
  br label %while.cond.3762

while.cond.3762:                                  ; preds = %while.body.3775, %cond.end.3760
  %1582 = load i8*, i8** %dtemp3745, align 8
  %incdec.ptr3763 = getelementptr inbounds i8, i8* %1582, i32 -1
  store i8* %incdec.ptr3763, i8** %dtemp3745, align 8
  %1583 = load i8*, i8** %dlimit3752, align 8
  %cmp3764 = icmp ugt i8* %1582, %1583
  br i1 %cmp3764, label %land.rhs.3766, label %land.end.3773

land.rhs.3766:                                    ; preds = %while.cond.3762
  %1584 = load i8*, i8** %dtemp3745, align 8
  %1585 = load i8, i8* %1584, align 1
  %conv3767 = zext i8 %1585 to i32
  %and3768 = and i32 %conv3767, 192
  %cmp3769 = icmp ne i32 %and3768, 128
  %lnot3771 = xor i1 %cmp3769, true
  br label %land.end.3773

land.end.3773:                                    ; preds = %land.rhs.3766, %while.cond.3762
  %1586 = phi i1 [ false, %while.cond.3762 ], [ %lnot3771, %land.rhs.3766 ]
  br i1 %1586, label %while.body.3775, label %while.end.3776

while.body.3775:                                  ; preds = %land.end.3773
  br label %while.cond.3762

while.end.3776:                                   ; preds = %land.end.3773
  %1587 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3777 = getelementptr inbounds i8, i8* %1587, i64 0
  %1588 = load i8, i8* %arrayidx3777, align 1
  %conv3778 = zext i8 %1588 to i32
  %and3779 = and i32 %conv3778, 128
  %tobool3780 = icmp ne i32 %and3779, 0
  br i1 %tobool3780, label %cond.false.3784, label %cond.true.3781

cond.true.3781:                                   ; preds = %while.end.3776
  %1589 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3782 = getelementptr inbounds i8, i8* %1589, i64 0
  %1590 = load i8, i8* %arrayidx3782, align 1
  %conv3783 = zext i8 %1590 to i32
  br label %cond.end.3829

cond.false.3784:                                  ; preds = %while.end.3776
  %1591 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3785 = getelementptr inbounds i8, i8* %1591, i64 0
  %1592 = load i8, i8* %arrayidx3785, align 1
  %conv3786 = zext i8 %1592 to i32
  %and3787 = and i32 %conv3786, 32
  %tobool3788 = icmp ne i32 %and3787, 0
  br i1 %tobool3788, label %cond.false.3804, label %cond.true.3789

cond.true.3789:                                   ; preds = %cond.false.3784
  %1593 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3790 = getelementptr inbounds i8, i8* %1593, i64 0
  %1594 = load i8, i8* %arrayidx3790, align 1
  %conv3791 = zext i8 %1594 to i32
  %and3792 = and i32 %conv3791, 31
  %shl3793 = shl i32 %and3792, 6
  %1595 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3794 = getelementptr inbounds i8, i8* %1595, i64 1
  %1596 = load i8, i8* %arrayidx3794, align 1
  %conv3795 = zext i8 %1596 to i32
  %and3796 = and i32 %conv3795, 63
  %or3797 = or i32 %shl3793, %and3796
  %1597 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3798 = getelementptr inbounds i8, i8* %1597, i64 0
  %1598 = load i8, i8* %arrayidx3798, align 1
  %conv3799 = zext i8 %1598 to i32
  %cmp3800 = icmp slt i32 %conv3799, 194
  %cond3802 = select i1 %cmp3800, i32 4194176, i32 0
  %add3803 = add nsw i32 %or3797, %cond3802
  br label %cond.end.3827

cond.false.3804:                                  ; preds = %cond.false.3784
  %1599 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3805 = getelementptr inbounds i8, i8* %1599, i64 0
  %1600 = load i8, i8* %arrayidx3805, align 1
  %conv3806 = zext i8 %1600 to i32
  %and3807 = and i32 %conv3806, 16
  %tobool3808 = icmp ne i32 %and3807, 0
  br i1 %tobool3808, label %cond.false.3823, label %cond.true.3809

cond.true.3809:                                   ; preds = %cond.false.3804
  %1601 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3810 = getelementptr inbounds i8, i8* %1601, i64 0
  %1602 = load i8, i8* %arrayidx3810, align 1
  %conv3811 = zext i8 %1602 to i32
  %and3812 = and i32 %conv3811, 15
  %shl3813 = shl i32 %and3812, 12
  %1603 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3814 = getelementptr inbounds i8, i8* %1603, i64 1
  %1604 = load i8, i8* %arrayidx3814, align 1
  %conv3815 = zext i8 %1604 to i32
  %and3816 = and i32 %conv3815, 63
  %shl3817 = shl i32 %and3816, 6
  %or3818 = or i32 %shl3813, %shl3817
  %1605 = load i8*, i8** %dtemp3745, align 8
  %arrayidx3819 = getelementptr inbounds i8, i8* %1605, i64 2
  %1606 = load i8, i8* %arrayidx3819, align 1
  %conv3820 = zext i8 %1606 to i32
  %and3821 = and i32 %conv3820, 63
  %or3822 = or i32 %or3818, %and3821
  br label %cond.end.3825

cond.false.3823:                                  ; preds = %cond.false.3804
  %1607 = load i8*, i8** %dtemp3745, align 8
  %call3824 = call i32 @string_char(i8* %1607, i8** null, i32* null)
  br label %cond.end.3825

cond.end.3825:                                    ; preds = %cond.false.3823, %cond.true.3809
  %cond3826 = phi i32 [ %or3822, %cond.true.3809 ], [ %call3824, %cond.false.3823 ]
  br label %cond.end.3827

cond.end.3827:                                    ; preds = %cond.end.3825, %cond.true.3789
  %cond3828 = phi i32 [ %add3803, %cond.true.3789 ], [ %cond3826, %cond.end.3825 ]
  br label %cond.end.3829

cond.end.3829:                                    ; preds = %cond.end.3827, %cond.true.3781
  %cond3830 = phi i32 [ %conv3783, %cond.true.3781 ], [ %cond3828, %cond.end.3827 ]
  store i32 %cond3830, i32* %c13704, align 4
  br label %if.end.3854

if.else.3831:                                     ; preds = %do.body.3742
  %1608 = load i8*, i8** %d, align 8
  %1609 = load i8*, i8** %string2.addr, align 8
  %cmp3832 = icmp eq i8* %1608, %1609
  br i1 %cmp3832, label %cond.true.3834, label %cond.false.3835

cond.true.3834:                                   ; preds = %if.else.3831
  %1610 = load i8*, i8** %end1, align 8
  br label %cond.end.3836

cond.false.3835:                                  ; preds = %if.else.3831
  %1611 = load i8*, i8** %d, align 8
  br label %cond.end.3836

cond.end.3836:                                    ; preds = %cond.false.3835, %cond.true.3834
  %cond3837 = phi i8* [ %1610, %cond.true.3834 ], [ %1611, %cond.false.3835 ]
  %arrayidx3838 = getelementptr inbounds i8, i8* %cond3837, i64 -1
  %1612 = load i8, i8* %arrayidx3838, align 1
  %conv3839 = zext i8 %1612 to i32
  store i32 %conv3839, i32* %c13704, align 4
  br i1 true, label %cond.true.3840, label %cond.false.3844

cond.true.3840:                                   ; preds = %cond.end.3836
  %1613 = load i32, i32* %c13704, align 4
  %add3841 = add i32 %1613, 0
  %cmp3842 = icmp ult i32 %add3841, 128
  br i1 %cmp3842, label %cond.true.3849, label %cond.false.3850

cond.false.3844:                                  ; preds = %cond.end.3836
  %1614 = load i32, i32* %c13704, align 4
  %conv3845 = sext i32 %1614 to i64
  %add3846 = add i64 %conv3845, 0
  %cmp3847 = icmp ult i64 %add3846, 128
  br i1 %cmp3847, label %cond.true.3849, label %cond.false.3850

cond.true.3849:                                   ; preds = %cond.false.3844, %cond.true.3840
  %1615 = load i32, i32* %c13704, align 4
  br label %cond.end.3852

cond.false.3850:                                  ; preds = %cond.false.3844, %cond.true.3840
  %1616 = load i32, i32* %c13704, align 4
  %add3851 = add nsw i32 %1616, 4194048
  br label %cond.end.3852

cond.end.3852:                                    ; preds = %cond.false.3850, %cond.true.3849
  %cond3853 = phi i32 [ %1615, %cond.true.3849 ], [ %add3851, %cond.false.3850 ]
  store i32 %cond3853, i32* %c13704, align 4
  br label %if.end.3854

if.end.3854:                                      ; preds = %cond.end.3852, %cond.end.3829
  br label %do.end.3856

do.end.3856:                                      ; preds = %if.end.3854
  %1617 = load i32, i32* %c13704, align 4
  %call3857 = call i32 @syntax_property(i32 %1617, i1 zeroext true)
  store i32 %call3857, i32* %s13706, align 4
  %1618 = load i32, i32* %s13706, align 4
  %cmp3858 = icmp ne i32 %1618, 2
  br i1 %cmp3858, label %if.then.3860, label %if.end.3861

if.then.3860:                                     ; preds = %do.end.3856
  br label %fail

if.end.3861:                                      ; preds = %do.end.3856
  %1619 = load i8*, i8** %d, align 8
  %1620 = load i8*, i8** %end2, align 8
  %cmp3862 = icmp eq i8* %1619, %1620
  br i1 %cmp3862, label %if.end.3973, label %if.then.3864

if.then.3864:                                     ; preds = %if.end.3861
  %1621 = load i8*, i8** %d, align 8
  %1622 = load i8*, i8** %end1, align 8
  %cmp3865 = icmp eq i8* %1621, %1622
  br i1 %cmp3865, label %if.then.3867, label %if.end.3868

if.then.3867:                                     ; preds = %if.then.3864
  %1623 = load i8*, i8** %string2.addr, align 8
  store i8* %1623, i8** %d, align 8
  %1624 = load i8*, i8** %end_match_2, align 8
  store i8* %1624, i8** %dend, align 8
  br label %if.end.3868

if.end.3868:                                      ; preds = %if.then.3867, %if.then.3864
  br label %do.body.3869

do.body.3869:                                     ; preds = %if.end.3868
  %1625 = load i8, i8* %target_multibyte, align 1
  %tobool3870 = icmp ne i8 %1625, 0
  br i1 %tobool3870, label %if.then.3871, label %if.else.3926

if.then.3871:                                     ; preds = %do.body.3869
  %1626 = load i8*, i8** %d, align 8
  %arrayidx3872 = getelementptr inbounds i8, i8* %1626, i64 0
  %1627 = load i8, i8* %arrayidx3872, align 1
  %conv3873 = zext i8 %1627 to i32
  %and3874 = and i32 %conv3873, 128
  %tobool3875 = icmp ne i32 %and3874, 0
  br i1 %tobool3875, label %cond.false.3879, label %cond.true.3876

cond.true.3876:                                   ; preds = %if.then.3871
  store i32 1, i32* %dummy3708, align 4
  %1628 = load i8*, i8** %d, align 8
  %arrayidx3877 = getelementptr inbounds i8, i8* %1628, i64 0
  %1629 = load i8, i8* %arrayidx3877, align 1
  %conv3878 = zext i8 %1629 to i32
  br label %cond.end.3924

cond.false.3879:                                  ; preds = %if.then.3871
  %1630 = load i8*, i8** %d, align 8
  %arrayidx3880 = getelementptr inbounds i8, i8* %1630, i64 0
  %1631 = load i8, i8* %arrayidx3880, align 1
  %conv3881 = zext i8 %1631 to i32
  %and3882 = and i32 %conv3881, 32
  %tobool3883 = icmp ne i32 %and3882, 0
  br i1 %tobool3883, label %cond.false.3899, label %cond.true.3884

cond.true.3884:                                   ; preds = %cond.false.3879
  store i32 2, i32* %dummy3708, align 4
  %1632 = load i8*, i8** %d, align 8
  %arrayidx3885 = getelementptr inbounds i8, i8* %1632, i64 0
  %1633 = load i8, i8* %arrayidx3885, align 1
  %conv3886 = zext i8 %1633 to i32
  %and3887 = and i32 %conv3886, 31
  %shl3888 = shl i32 %and3887, 6
  %1634 = load i8*, i8** %d, align 8
  %arrayidx3889 = getelementptr inbounds i8, i8* %1634, i64 1
  %1635 = load i8, i8* %arrayidx3889, align 1
  %conv3890 = zext i8 %1635 to i32
  %and3891 = and i32 %conv3890, 63
  %or3892 = or i32 %shl3888, %and3891
  %1636 = load i8*, i8** %d, align 8
  %arrayidx3893 = getelementptr inbounds i8, i8* %1636, i64 0
  %1637 = load i8, i8* %arrayidx3893, align 1
  %conv3894 = zext i8 %1637 to i32
  %cmp3895 = icmp slt i32 %conv3894, 194
  %cond3897 = select i1 %cmp3895, i32 4194176, i32 0
  %add3898 = add nsw i32 %or3892, %cond3897
  br label %cond.end.3922

cond.false.3899:                                  ; preds = %cond.false.3879
  %1638 = load i8*, i8** %d, align 8
  %arrayidx3900 = getelementptr inbounds i8, i8* %1638, i64 0
  %1639 = load i8, i8* %arrayidx3900, align 1
  %conv3901 = zext i8 %1639 to i32
  %and3902 = and i32 %conv3901, 16
  %tobool3903 = icmp ne i32 %and3902, 0
  br i1 %tobool3903, label %cond.false.3918, label %cond.true.3904

cond.true.3904:                                   ; preds = %cond.false.3899
  store i32 3, i32* %dummy3708, align 4
  %1640 = load i8*, i8** %d, align 8
  %arrayidx3905 = getelementptr inbounds i8, i8* %1640, i64 0
  %1641 = load i8, i8* %arrayidx3905, align 1
  %conv3906 = zext i8 %1641 to i32
  %and3907 = and i32 %conv3906, 15
  %shl3908 = shl i32 %and3907, 12
  %1642 = load i8*, i8** %d, align 8
  %arrayidx3909 = getelementptr inbounds i8, i8* %1642, i64 1
  %1643 = load i8, i8* %arrayidx3909, align 1
  %conv3910 = zext i8 %1643 to i32
  %and3911 = and i32 %conv3910, 63
  %shl3912 = shl i32 %and3911, 6
  %or3913 = or i32 %shl3908, %shl3912
  %1644 = load i8*, i8** %d, align 8
  %arrayidx3914 = getelementptr inbounds i8, i8* %1644, i64 2
  %1645 = load i8, i8* %arrayidx3914, align 1
  %conv3915 = zext i8 %1645 to i32
  %and3916 = and i32 %conv3915, 63
  %or3917 = or i32 %or3913, %and3916
  br label %cond.end.3920

cond.false.3918:                                  ; preds = %cond.false.3899
  %1646 = load i8*, i8** %d, align 8
  %call3919 = call i32 @string_char(i8* %1646, i8** null, i32* %dummy3708)
  br label %cond.end.3920

cond.end.3920:                                    ; preds = %cond.false.3918, %cond.true.3904
  %cond3921 = phi i32 [ %or3917, %cond.true.3904 ], [ %call3919, %cond.false.3918 ]
  br label %cond.end.3922

cond.end.3922:                                    ; preds = %cond.end.3920, %cond.true.3884
  %cond3923 = phi i32 [ %add3898, %cond.true.3884 ], [ %cond3921, %cond.end.3920 ]
  br label %cond.end.3924

cond.end.3924:                                    ; preds = %cond.end.3922, %cond.true.3876
  %cond3925 = phi i32 [ %conv3878, %cond.true.3876 ], [ %cond3923, %cond.end.3922 ]
  store i32 %cond3925, i32* %c23705, align 4
  br label %if.end.3942

if.else.3926:                                     ; preds = %do.body.3869
  %1647 = load i8*, i8** %d, align 8
  %1648 = load i8, i8* %1647, align 1
  %conv3927 = zext i8 %1648 to i32
  store i32 %conv3927, i32* %c23705, align 4
  store i32 1, i32* %dummy3708, align 4
  br i1 true, label %cond.true.3928, label %cond.false.3932

cond.true.3928:                                   ; preds = %if.else.3926
  %1649 = load i32, i32* %c23705, align 4
  %add3929 = add i32 %1649, 0
  %cmp3930 = icmp ult i32 %add3929, 128
  br i1 %cmp3930, label %cond.true.3937, label %cond.false.3938

cond.false.3932:                                  ; preds = %if.else.3926
  %1650 = load i32, i32* %c23705, align 4
  %conv3933 = sext i32 %1650 to i64
  %add3934 = add i64 %conv3933, 0
  %cmp3935 = icmp ult i64 %add3934, 128
  br i1 %cmp3935, label %cond.true.3937, label %cond.false.3938

cond.true.3937:                                   ; preds = %cond.false.3932, %cond.true.3928
  %1651 = load i32, i32* %c23705, align 4
  br label %cond.end.3940

cond.false.3938:                                  ; preds = %cond.false.3932, %cond.true.3928
  %1652 = load i32, i32* %c23705, align 4
  %add3939 = add nsw i32 %1652, 4194048
  br label %cond.end.3940

cond.end.3940:                                    ; preds = %cond.false.3938, %cond.true.3937
  %cond3941 = phi i32 [ %1651, %cond.true.3937 ], [ %add3939, %cond.false.3938 ]
  store i32 %cond3941, i32* %c23705, align 4
  br label %if.end.3942

if.end.3942:                                      ; preds = %cond.end.3940, %cond.end.3924
  br label %do.end.3944

do.end.3944:                                      ; preds = %if.end.3942
  %1653 = load i64, i64* %charpos3740, align 8
  call void @UPDATE_SYNTAX_TABLE_FORWARD_FAST(i64 %1653)
  %1654 = load i32, i32* %c23705, align 4
  %call3945 = call i32 @syntax_property(i32 %1654, i1 zeroext true)
  store i32 %call3945, i32* %s23707, align 4
  %1655 = load i32, i32* %s23707, align 4
  %cmp3946 = icmp eq i32 %1655, 2
  br i1 %cmp3946, label %land.lhs.true.3948, label %if.end.3972

land.lhs.true.3948:                               ; preds = %do.end.3944
  br i1 true, label %cond.true.3949, label %cond.false.3953

cond.true.3949:                                   ; preds = %land.lhs.true.3948
  %1656 = load i32, i32* %c13704, align 4
  %add3950 = add i32 %1656, 0
  %cmp3951 = icmp ult i32 %add3950, 256
  br i1 %cmp3951, label %land.lhs.true.3958, label %land.lhs.true.3968

cond.false.3953:                                  ; preds = %land.lhs.true.3948
  %1657 = load i32, i32* %c13704, align 4
  %conv3954 = sext i32 %1657 to i64
  %add3955 = add i64 %conv3954, 0
  %cmp3956 = icmp ult i64 %add3955, 256
  br i1 %cmp3956, label %land.lhs.true.3958, label %land.lhs.true.3968

land.lhs.true.3958:                               ; preds = %cond.false.3953, %cond.true.3949
  br i1 true, label %cond.true.3959, label %cond.false.3963

cond.true.3959:                                   ; preds = %land.lhs.true.3958
  %1658 = load i32, i32* %c23705, align 4
  %add3960 = add i32 %1658, 0
  %cmp3961 = icmp ult i32 %add3960, 256
  br i1 %cmp3961, label %if.then.3971, label %land.lhs.true.3968

cond.false.3963:                                  ; preds = %land.lhs.true.3958
  %1659 = load i32, i32* %c23705, align 4
  %conv3964 = sext i32 %1659 to i64
  %add3965 = add i64 %conv3964, 0
  %cmp3966 = icmp ult i64 %add3965, 256
  br i1 %cmp3966, label %if.then.3971, label %land.lhs.true.3968

land.lhs.true.3968:                               ; preds = %cond.false.3963, %cond.true.3959, %cond.false.3953, %cond.true.3949
  %1660 = load i32, i32* %c13704, align 4
  %1661 = load i32, i32* %c23705, align 4
  %call3969 = call zeroext i1 @word_boundary_p(i32 %1660, i32 %1661)
  br i1 %call3969, label %if.end.3972, label %if.then.3971

if.then.3971:                                     ; preds = %land.lhs.true.3968, %cond.false.3963, %cond.true.3959
  br label %fail

if.end.3972:                                      ; preds = %land.lhs.true.3968, %do.end.3944
  br label %if.end.3973

if.end.3973:                                      ; preds = %if.end.3972, %if.end.3861
  br label %if.end.3974

if.end.3974:                                      ; preds = %if.end.3973
  br label %sw.epilog

sw.bb.3975:                                       ; preds = %if.end.578
  %1662 = load i8*, i8** %d, align 8
  %1663 = load i8*, i8** %end2, align 8
  %cmp3976 = icmp eq i8* %1662, %1663
  br i1 %cmp3976, label %if.then.3978, label %if.else.3979

if.then.3978:                                     ; preds = %sw.bb.3975
  br label %fail

if.else.3979:                                     ; preds = %sw.bb.3975
  %1664 = load i64, i64* %size1.addr, align 8
  %tobool3985 = icmp ne i64 %1664, 0
  br i1 %tobool3985, label %land.lhs.true.3986, label %cond.false.3997

land.lhs.true.3986:                               ; preds = %if.else.3979
  %1665 = load i8*, i8** %string1.addr, align 8
  %1666 = load i8*, i8** %d, align 8
  %cmp3987 = icmp ule i8* %1665, %1666
  br i1 %cmp3987, label %land.lhs.true.3989, label %cond.false.3997

land.lhs.true.3989:                               ; preds = %land.lhs.true.3986
  %1667 = load i8*, i8** %d, align 8
  %1668 = load i8*, i8** %string1.addr, align 8
  %1669 = load i64, i64* %size1.addr, align 8
  %add.ptr3990 = getelementptr inbounds i8, i8* %1668, i64 %1669
  %cmp3991 = icmp ule i8* %1667, %add.ptr3990
  br i1 %cmp3991, label %cond.true.3993, label %cond.false.3997

cond.true.3993:                                   ; preds = %land.lhs.true.3989
  %1670 = load i8*, i8** %d, align 8
  %1671 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast3994 = ptrtoint i8* %1670 to i64
  %sub.ptr.rhs.cast3995 = ptrtoint i8* %1671 to i64
  %sub.ptr.sub3996 = sub i64 %sub.ptr.lhs.cast3994, %sub.ptr.rhs.cast3995
  br label %cond.end.4002

cond.false.3997:                                  ; preds = %land.lhs.true.3989, %land.lhs.true.3986, %if.else.3979
  %1672 = load i8*, i8** %d, align 8
  %1673 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast3998 = ptrtoint i8* %1672 to i64
  %sub.ptr.rhs.cast3999 = ptrtoint i8* %1673 to i64
  %sub.ptr.sub4000 = sub i64 %sub.ptr.lhs.cast3998, %sub.ptr.rhs.cast3999
  %1674 = load i64, i64* %size1.addr, align 8
  %add4001 = add nsw i64 %sub.ptr.sub4000, %1674
  br label %cond.end.4002

cond.end.4002:                                    ; preds = %cond.false.3997, %cond.true.3993
  %cond4003 = phi i64 [ %sub.ptr.sub3996, %cond.true.3993 ], [ %add4001, %cond.false.3997 ]
  %1675 = load i64, i64* @re_match_object, align 8
  %call4004 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp4005 = icmp eq i64 %1675, %call4004
  br i1 %cmp4005, label %lor.end.4010, label %lor.rhs.4007

lor.rhs.4007:                                     ; preds = %cond.end.4002
  %1676 = load i64, i64* @re_match_object, align 8
  %call4008 = call zeroext i1 @BUFFERP(i64 %1676)
  br label %lor.end.4010

lor.end.4010:                                     ; preds = %lor.rhs.4007, %cond.end.4002
  %1677 = phi i1 [ true, %cond.end.4002 ], [ %call4008, %lor.rhs.4007 ]
  %lor.ext4011 = zext i1 %1677 to i32
  %conv4012 = sext i32 %lor.ext4011 to i64
  %add4013 = add nsw i64 %cond4003, %conv4012
  store i64 %add4013, i64* %offset3984, align 8
  %1678 = load i64, i64* %offset3984, align 8
  %call4015 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1678)
  store i64 %call4015, i64* %charpos4014, align 8
  %1679 = load i64, i64* %charpos4014, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1679)
  br label %while.cond.4016

while.cond.4016:                                  ; preds = %if.end.4023, %lor.end.4010
  %1680 = load i8*, i8** %d, align 8
  %1681 = load i8*, i8** %dend, align 8
  %cmp4017 = icmp eq i8* %1680, %1681
  br i1 %cmp4017, label %while.body.4019, label %while.end.4024

while.body.4019:                                  ; preds = %while.cond.4016
  %1682 = load i8*, i8** %dend, align 8
  %1683 = load i8*, i8** %end_match_2, align 8
  %cmp4020 = icmp eq i8* %1682, %1683
  br i1 %cmp4020, label %if.then.4022, label %if.end.4023

if.then.4022:                                     ; preds = %while.body.4019
  br label %fail

if.end.4023:                                      ; preds = %while.body.4019
  %1684 = load i8*, i8** %string2.addr, align 8
  store i8* %1684, i8** %d, align 8
  %1685 = load i8*, i8** %end_match_2, align 8
  store i8* %1685, i8** %dend, align 8
  br label %while.cond.4016

while.end.4024:                                   ; preds = %while.cond.4016
  %1686 = load i8, i8* %target_multibyte, align 1
  %conv4025 = sext i8 %1686 to i32
  %tobool4026 = icmp ne i32 %conv4025, 0
  br i1 %tobool4026, label %cond.true.4027, label %cond.false.4082

cond.true.4027:                                   ; preds = %while.end.4024
  %1687 = load i8*, i8** %d, align 8
  %arrayidx4028 = getelementptr inbounds i8, i8* %1687, i64 0
  %1688 = load i8, i8* %arrayidx4028, align 1
  %conv4029 = zext i8 %1688 to i32
  %and4030 = and i32 %conv4029, 128
  %tobool4031 = icmp ne i32 %and4030, 0
  br i1 %tobool4031, label %cond.false.4035, label %cond.true.4032

cond.true.4032:                                   ; preds = %cond.true.4027
  %1689 = load i8*, i8** %d, align 8
  %arrayidx4033 = getelementptr inbounds i8, i8* %1689, i64 0
  %1690 = load i8, i8* %arrayidx4033, align 1
  %conv4034 = zext i8 %1690 to i32
  br label %cond.end.4080

cond.false.4035:                                  ; preds = %cond.true.4027
  %1691 = load i8*, i8** %d, align 8
  %arrayidx4036 = getelementptr inbounds i8, i8* %1691, i64 0
  %1692 = load i8, i8* %arrayidx4036, align 1
  %conv4037 = zext i8 %1692 to i32
  %and4038 = and i32 %conv4037, 32
  %tobool4039 = icmp ne i32 %and4038, 0
  br i1 %tobool4039, label %cond.false.4055, label %cond.true.4040

cond.true.4040:                                   ; preds = %cond.false.4035
  %1693 = load i8*, i8** %d, align 8
  %arrayidx4041 = getelementptr inbounds i8, i8* %1693, i64 0
  %1694 = load i8, i8* %arrayidx4041, align 1
  %conv4042 = zext i8 %1694 to i32
  %and4043 = and i32 %conv4042, 31
  %shl4044 = shl i32 %and4043, 6
  %1695 = load i8*, i8** %d, align 8
  %arrayidx4045 = getelementptr inbounds i8, i8* %1695, i64 1
  %1696 = load i8, i8* %arrayidx4045, align 1
  %conv4046 = zext i8 %1696 to i32
  %and4047 = and i32 %conv4046, 63
  %or4048 = or i32 %shl4044, %and4047
  %1697 = load i8*, i8** %d, align 8
  %arrayidx4049 = getelementptr inbounds i8, i8* %1697, i64 0
  %1698 = load i8, i8* %arrayidx4049, align 1
  %conv4050 = zext i8 %1698 to i32
  %cmp4051 = icmp slt i32 %conv4050, 194
  %cond4053 = select i1 %cmp4051, i32 4194176, i32 0
  %add4054 = add nsw i32 %or4048, %cond4053
  br label %cond.end.4078

cond.false.4055:                                  ; preds = %cond.false.4035
  %1699 = load i8*, i8** %d, align 8
  %arrayidx4056 = getelementptr inbounds i8, i8* %1699, i64 0
  %1700 = load i8, i8* %arrayidx4056, align 1
  %conv4057 = zext i8 %1700 to i32
  %and4058 = and i32 %conv4057, 16
  %tobool4059 = icmp ne i32 %and4058, 0
  br i1 %tobool4059, label %cond.false.4074, label %cond.true.4060

cond.true.4060:                                   ; preds = %cond.false.4055
  %1701 = load i8*, i8** %d, align 8
  %arrayidx4061 = getelementptr inbounds i8, i8* %1701, i64 0
  %1702 = load i8, i8* %arrayidx4061, align 1
  %conv4062 = zext i8 %1702 to i32
  %and4063 = and i32 %conv4062, 15
  %shl4064 = shl i32 %and4063, 12
  %1703 = load i8*, i8** %d, align 8
  %arrayidx4065 = getelementptr inbounds i8, i8* %1703, i64 1
  %1704 = load i8, i8* %arrayidx4065, align 1
  %conv4066 = zext i8 %1704 to i32
  %and4067 = and i32 %conv4066, 63
  %shl4068 = shl i32 %and4067, 6
  %or4069 = or i32 %shl4064, %shl4068
  %1705 = load i8*, i8** %d, align 8
  %arrayidx4070 = getelementptr inbounds i8, i8* %1705, i64 2
  %1706 = load i8, i8* %arrayidx4070, align 1
  %conv4071 = zext i8 %1706 to i32
  %and4072 = and i32 %conv4071, 63
  %or4073 = or i32 %or4069, %and4072
  br label %cond.end.4076

cond.false.4074:                                  ; preds = %cond.false.4055
  %1707 = load i8*, i8** %d, align 8
  %call4075 = call i32 @string_char(i8* %1707, i8** null, i32* null)
  br label %cond.end.4076

cond.end.4076:                                    ; preds = %cond.false.4074, %cond.true.4060
  %cond4077 = phi i32 [ %or4073, %cond.true.4060 ], [ %call4075, %cond.false.4074 ]
  br label %cond.end.4078

cond.end.4078:                                    ; preds = %cond.end.4076, %cond.true.4040
  %cond4079 = phi i32 [ %add4054, %cond.true.4040 ], [ %cond4077, %cond.end.4076 ]
  br label %cond.end.4080

cond.end.4080:                                    ; preds = %cond.end.4078, %cond.true.4032
  %cond4081 = phi i32 [ %conv4034, %cond.true.4032 ], [ %cond4079, %cond.end.4078 ]
  br label %cond.end.4084

cond.false.4082:                                  ; preds = %while.end.4024
  %1708 = load i8*, i8** %d, align 8
  %1709 = load i8, i8* %1708, align 1
  %conv4083 = zext i8 %1709 to i32
  br label %cond.end.4084

cond.end.4084:                                    ; preds = %cond.false.4082, %cond.end.4080
  %cond4085 = phi i32 [ %cond4081, %cond.end.4080 ], [ %conv4083, %cond.false.4082 ]
  store i32 %cond4085, i32* %c23981, align 4
  %1710 = load i32, i32* %c23981, align 4
  %call4086 = call i32 @syntax_property(i32 %1710, i1 zeroext true)
  store i32 %call4086, i32* %s23983, align 4
  %1711 = load i32, i32* %s23983, align 4
  %cmp4087 = icmp ne i32 %1711, 2
  br i1 %cmp4087, label %land.lhs.true.4089, label %if.end.4093

land.lhs.true.4089:                               ; preds = %cond.end.4084
  %1712 = load i32, i32* %s23983, align 4
  %cmp4090 = icmp ne i32 %1712, 3
  br i1 %cmp4090, label %if.then.4092, label %if.end.4093

if.then.4092:                                     ; preds = %land.lhs.true.4089
  br label %fail

if.end.4093:                                      ; preds = %land.lhs.true.4089, %cond.end.4084
  %1713 = load i8*, i8** %d, align 8
  %1714 = load i64, i64* %size1.addr, align 8
  %tobool4094 = icmp ne i64 %1714, 0
  br i1 %tobool4094, label %cond.true.4095, label %cond.false.4096

cond.true.4095:                                   ; preds = %if.end.4093
  %1715 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.4097

cond.false.4096:                                  ; preds = %if.end.4093
  %1716 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.4097

cond.end.4097:                                    ; preds = %cond.false.4096, %cond.true.4095
  %cond4098 = phi i8* [ %1715, %cond.true.4095 ], [ %1716, %cond.false.4096 ]
  %cmp4099 = icmp eq i8* %1713, %cond4098
  br i1 %cmp4099, label %if.end.4228, label %lor.lhs.false.4101

lor.lhs.false.4101:                               ; preds = %cond.end.4097
  %1717 = load i64, i64* %size2.addr, align 8
  %tobool4102 = icmp ne i64 %1717, 0
  br i1 %tobool4102, label %if.then.4103, label %if.end.4228

if.then.4103:                                     ; preds = %lor.lhs.false.4101
  br label %do.body.4104

do.body.4104:                                     ; preds = %if.then.4103
  %1718 = load i8, i8* %target_multibyte, align 1
  %tobool4105 = icmp ne i8 %1718, 0
  br i1 %tobool4105, label %if.then.4106, label %if.else.4193

if.then.4106:                                     ; preds = %do.body.4104
  %1719 = load i8*, i8** %d, align 8
  %1720 = load i8*, i8** %string2.addr, align 8
  %cmp4108 = icmp eq i8* %1719, %1720
  br i1 %cmp4108, label %cond.true.4110, label %cond.false.4111

cond.true.4110:                                   ; preds = %if.then.4106
  %1721 = load i8*, i8** %end1, align 8
  br label %cond.end.4112

cond.false.4111:                                  ; preds = %if.then.4106
  %1722 = load i8*, i8** %d, align 8
  br label %cond.end.4112

cond.end.4112:                                    ; preds = %cond.false.4111, %cond.true.4110
  %cond4113 = phi i8* [ %1721, %cond.true.4110 ], [ %1722, %cond.false.4111 ]
  store i8* %cond4113, i8** %dtemp4107, align 8
  %1723 = load i8*, i8** %d, align 8
  %1724 = load i8*, i8** %string2.addr, align 8
  %cmp4115 = icmp ugt i8* %1723, %1724
  br i1 %cmp4115, label %land.lhs.true.4117, label %cond.false.4121

land.lhs.true.4117:                               ; preds = %cond.end.4112
  %1725 = load i8*, i8** %d, align 8
  %1726 = load i8*, i8** %end2, align 8
  %cmp4118 = icmp ule i8* %1725, %1726
  br i1 %cmp4118, label %cond.true.4120, label %cond.false.4121

cond.true.4120:                                   ; preds = %land.lhs.true.4117
  %1727 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.4122

cond.false.4121:                                  ; preds = %land.lhs.true.4117, %cond.end.4112
  %1728 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.4122

cond.end.4122:                                    ; preds = %cond.false.4121, %cond.true.4120
  %cond4123 = phi i8* [ %1727, %cond.true.4120 ], [ %1728, %cond.false.4121 ]
  store i8* %cond4123, i8** %dlimit4114, align 8
  br label %while.cond.4124

while.cond.4124:                                  ; preds = %while.body.4137, %cond.end.4122
  %1729 = load i8*, i8** %dtemp4107, align 8
  %incdec.ptr4125 = getelementptr inbounds i8, i8* %1729, i32 -1
  store i8* %incdec.ptr4125, i8** %dtemp4107, align 8
  %1730 = load i8*, i8** %dlimit4114, align 8
  %cmp4126 = icmp ugt i8* %1729, %1730
  br i1 %cmp4126, label %land.rhs.4128, label %land.end.4135

land.rhs.4128:                                    ; preds = %while.cond.4124
  %1731 = load i8*, i8** %dtemp4107, align 8
  %1732 = load i8, i8* %1731, align 1
  %conv4129 = zext i8 %1732 to i32
  %and4130 = and i32 %conv4129, 192
  %cmp4131 = icmp ne i32 %and4130, 128
  %lnot4133 = xor i1 %cmp4131, true
  br label %land.end.4135

land.end.4135:                                    ; preds = %land.rhs.4128, %while.cond.4124
  %1733 = phi i1 [ false, %while.cond.4124 ], [ %lnot4133, %land.rhs.4128 ]
  br i1 %1733, label %while.body.4137, label %while.end.4138

while.body.4137:                                  ; preds = %land.end.4135
  br label %while.cond.4124

while.end.4138:                                   ; preds = %land.end.4135
  %1734 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4139 = getelementptr inbounds i8, i8* %1734, i64 0
  %1735 = load i8, i8* %arrayidx4139, align 1
  %conv4140 = zext i8 %1735 to i32
  %and4141 = and i32 %conv4140, 128
  %tobool4142 = icmp ne i32 %and4141, 0
  br i1 %tobool4142, label %cond.false.4146, label %cond.true.4143

cond.true.4143:                                   ; preds = %while.end.4138
  %1736 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4144 = getelementptr inbounds i8, i8* %1736, i64 0
  %1737 = load i8, i8* %arrayidx4144, align 1
  %conv4145 = zext i8 %1737 to i32
  br label %cond.end.4191

cond.false.4146:                                  ; preds = %while.end.4138
  %1738 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4147 = getelementptr inbounds i8, i8* %1738, i64 0
  %1739 = load i8, i8* %arrayidx4147, align 1
  %conv4148 = zext i8 %1739 to i32
  %and4149 = and i32 %conv4148, 32
  %tobool4150 = icmp ne i32 %and4149, 0
  br i1 %tobool4150, label %cond.false.4166, label %cond.true.4151

cond.true.4151:                                   ; preds = %cond.false.4146
  %1740 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4152 = getelementptr inbounds i8, i8* %1740, i64 0
  %1741 = load i8, i8* %arrayidx4152, align 1
  %conv4153 = zext i8 %1741 to i32
  %and4154 = and i32 %conv4153, 31
  %shl4155 = shl i32 %and4154, 6
  %1742 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4156 = getelementptr inbounds i8, i8* %1742, i64 1
  %1743 = load i8, i8* %arrayidx4156, align 1
  %conv4157 = zext i8 %1743 to i32
  %and4158 = and i32 %conv4157, 63
  %or4159 = or i32 %shl4155, %and4158
  %1744 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4160 = getelementptr inbounds i8, i8* %1744, i64 0
  %1745 = load i8, i8* %arrayidx4160, align 1
  %conv4161 = zext i8 %1745 to i32
  %cmp4162 = icmp slt i32 %conv4161, 194
  %cond4164 = select i1 %cmp4162, i32 4194176, i32 0
  %add4165 = add nsw i32 %or4159, %cond4164
  br label %cond.end.4189

cond.false.4166:                                  ; preds = %cond.false.4146
  %1746 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4167 = getelementptr inbounds i8, i8* %1746, i64 0
  %1747 = load i8, i8* %arrayidx4167, align 1
  %conv4168 = zext i8 %1747 to i32
  %and4169 = and i32 %conv4168, 16
  %tobool4170 = icmp ne i32 %and4169, 0
  br i1 %tobool4170, label %cond.false.4185, label %cond.true.4171

cond.true.4171:                                   ; preds = %cond.false.4166
  %1748 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4172 = getelementptr inbounds i8, i8* %1748, i64 0
  %1749 = load i8, i8* %arrayidx4172, align 1
  %conv4173 = zext i8 %1749 to i32
  %and4174 = and i32 %conv4173, 15
  %shl4175 = shl i32 %and4174, 12
  %1750 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4176 = getelementptr inbounds i8, i8* %1750, i64 1
  %1751 = load i8, i8* %arrayidx4176, align 1
  %conv4177 = zext i8 %1751 to i32
  %and4178 = and i32 %conv4177, 63
  %shl4179 = shl i32 %and4178, 6
  %or4180 = or i32 %shl4175, %shl4179
  %1752 = load i8*, i8** %dtemp4107, align 8
  %arrayidx4181 = getelementptr inbounds i8, i8* %1752, i64 2
  %1753 = load i8, i8* %arrayidx4181, align 1
  %conv4182 = zext i8 %1753 to i32
  %and4183 = and i32 %conv4182, 63
  %or4184 = or i32 %or4180, %and4183
  br label %cond.end.4187

cond.false.4185:                                  ; preds = %cond.false.4166
  %1754 = load i8*, i8** %dtemp4107, align 8
  %call4186 = call i32 @string_char(i8* %1754, i8** null, i32* null)
  br label %cond.end.4187

cond.end.4187:                                    ; preds = %cond.false.4185, %cond.true.4171
  %cond4188 = phi i32 [ %or4184, %cond.true.4171 ], [ %call4186, %cond.false.4185 ]
  br label %cond.end.4189

cond.end.4189:                                    ; preds = %cond.end.4187, %cond.true.4151
  %cond4190 = phi i32 [ %add4165, %cond.true.4151 ], [ %cond4188, %cond.end.4187 ]
  br label %cond.end.4191

cond.end.4191:                                    ; preds = %cond.end.4189, %cond.true.4143
  %cond4192 = phi i32 [ %conv4145, %cond.true.4143 ], [ %cond4190, %cond.end.4189 ]
  store i32 %cond4192, i32* %c13980, align 4
  br label %if.end.4216

if.else.4193:                                     ; preds = %do.body.4104
  %1755 = load i8*, i8** %d, align 8
  %1756 = load i8*, i8** %string2.addr, align 8
  %cmp4194 = icmp eq i8* %1755, %1756
  br i1 %cmp4194, label %cond.true.4196, label %cond.false.4197

cond.true.4196:                                   ; preds = %if.else.4193
  %1757 = load i8*, i8** %end1, align 8
  br label %cond.end.4198

cond.false.4197:                                  ; preds = %if.else.4193
  %1758 = load i8*, i8** %d, align 8
  br label %cond.end.4198

cond.end.4198:                                    ; preds = %cond.false.4197, %cond.true.4196
  %cond4199 = phi i8* [ %1757, %cond.true.4196 ], [ %1758, %cond.false.4197 ]
  %arrayidx4200 = getelementptr inbounds i8, i8* %cond4199, i64 -1
  %1759 = load i8, i8* %arrayidx4200, align 1
  %conv4201 = zext i8 %1759 to i32
  store i32 %conv4201, i32* %c13980, align 4
  br i1 true, label %cond.true.4202, label %cond.false.4206

cond.true.4202:                                   ; preds = %cond.end.4198
  %1760 = load i32, i32* %c13980, align 4
  %add4203 = add i32 %1760, 0
  %cmp4204 = icmp ult i32 %add4203, 128
  br i1 %cmp4204, label %cond.true.4211, label %cond.false.4212

cond.false.4206:                                  ; preds = %cond.end.4198
  %1761 = load i32, i32* %c13980, align 4
  %conv4207 = sext i32 %1761 to i64
  %add4208 = add i64 %conv4207, 0
  %cmp4209 = icmp ult i64 %add4208, 128
  br i1 %cmp4209, label %cond.true.4211, label %cond.false.4212

cond.true.4211:                                   ; preds = %cond.false.4206, %cond.true.4202
  %1762 = load i32, i32* %c13980, align 4
  br label %cond.end.4214

cond.false.4212:                                  ; preds = %cond.false.4206, %cond.true.4202
  %1763 = load i32, i32* %c13980, align 4
  %add4213 = add nsw i32 %1763, 4194048
  br label %cond.end.4214

cond.end.4214:                                    ; preds = %cond.false.4212, %cond.true.4211
  %cond4215 = phi i32 [ %1762, %cond.true.4211 ], [ %add4213, %cond.false.4212 ]
  store i32 %cond4215, i32* %c13980, align 4
  br label %if.end.4216

if.end.4216:                                      ; preds = %cond.end.4214, %cond.end.4191
  br label %do.end.4218

do.end.4218:                                      ; preds = %if.end.4216
  %1764 = load i64, i64* %charpos4014, align 8
  %sub4219 = sub nsw i64 %1764, 1
  call void @UPDATE_SYNTAX_TABLE_BACKWARD(i64 %sub4219)
  %1765 = load i32, i32* %c13980, align 4
  %call4220 = call i32 @syntax_property(i32 %1765, i1 zeroext true)
  store i32 %call4220, i32* %s13982, align 4
  %1766 = load i32, i32* %s13982, align 4
  %cmp4221 = icmp eq i32 %1766, 2
  br i1 %cmp4221, label %if.then.4226, label %lor.lhs.false.4223

lor.lhs.false.4223:                               ; preds = %do.end.4218
  %1767 = load i32, i32* %s13982, align 4
  %cmp4224 = icmp eq i32 %1767, 3
  br i1 %cmp4224, label %if.then.4226, label %if.end.4227

if.then.4226:                                     ; preds = %lor.lhs.false.4223, %do.end.4218
  br label %fail

if.end.4227:                                      ; preds = %lor.lhs.false.4223
  br label %if.end.4228

if.end.4228:                                      ; preds = %if.end.4227, %lor.lhs.false.4101, %cond.end.4097
  br label %if.end.4229

if.end.4229:                                      ; preds = %if.end.4228
  br label %sw.epilog

sw.bb.4230:                                       ; preds = %if.end.578
  %1768 = load i8*, i8** %d, align 8
  %1769 = load i64, i64* %size1.addr, align 8
  %tobool4231 = icmp ne i64 %1769, 0
  br i1 %tobool4231, label %cond.true.4232, label %cond.false.4233

cond.true.4232:                                   ; preds = %sw.bb.4230
  %1770 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.4234

cond.false.4233:                                  ; preds = %sw.bb.4230
  %1771 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.4234

cond.end.4234:                                    ; preds = %cond.false.4233, %cond.true.4232
  %cond4235 = phi i8* [ %1770, %cond.true.4232 ], [ %1771, %cond.false.4233 ]
  %cmp4236 = icmp eq i8* %1768, %cond4235
  br i1 %cmp4236, label %if.then.4240, label %lor.lhs.false.4238

lor.lhs.false.4238:                               ; preds = %cond.end.4234
  %1772 = load i64, i64* %size2.addr, align 8
  %tobool4239 = icmp ne i64 %1772, 0
  br i1 %tobool4239, label %if.else.4241, label %if.then.4240

if.then.4240:                                     ; preds = %lor.lhs.false.4238, %cond.end.4234
  br label %fail

if.else.4241:                                     ; preds = %lor.lhs.false.4238
  %1773 = load i64, i64* %size1.addr, align 8
  %tobool4247 = icmp ne i64 %1773, 0
  br i1 %tobool4247, label %land.lhs.true.4248, label %cond.false.4259

land.lhs.true.4248:                               ; preds = %if.else.4241
  %1774 = load i8*, i8** %string1.addr, align 8
  %1775 = load i8*, i8** %d, align 8
  %cmp4249 = icmp ule i8* %1774, %1775
  br i1 %cmp4249, label %land.lhs.true.4251, label %cond.false.4259

land.lhs.true.4251:                               ; preds = %land.lhs.true.4248
  %1776 = load i8*, i8** %d, align 8
  %1777 = load i8*, i8** %string1.addr, align 8
  %1778 = load i64, i64* %size1.addr, align 8
  %add.ptr4252 = getelementptr inbounds i8, i8* %1777, i64 %1778
  %cmp4253 = icmp ule i8* %1776, %add.ptr4252
  br i1 %cmp4253, label %cond.true.4255, label %cond.false.4259

cond.true.4255:                                   ; preds = %land.lhs.true.4251
  %1779 = load i8*, i8** %d, align 8
  %1780 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast4256 = ptrtoint i8* %1779 to i64
  %sub.ptr.rhs.cast4257 = ptrtoint i8* %1780 to i64
  %sub.ptr.sub4258 = sub i64 %sub.ptr.lhs.cast4256, %sub.ptr.rhs.cast4257
  br label %cond.end.4264

cond.false.4259:                                  ; preds = %land.lhs.true.4251, %land.lhs.true.4248, %if.else.4241
  %1781 = load i8*, i8** %d, align 8
  %1782 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast4260 = ptrtoint i8* %1781 to i64
  %sub.ptr.rhs.cast4261 = ptrtoint i8* %1782 to i64
  %sub.ptr.sub4262 = sub i64 %sub.ptr.lhs.cast4260, %sub.ptr.rhs.cast4261
  %1783 = load i64, i64* %size1.addr, align 8
  %add4263 = add nsw i64 %sub.ptr.sub4262, %1783
  br label %cond.end.4264

cond.end.4264:                                    ; preds = %cond.false.4259, %cond.true.4255
  %cond4265 = phi i64 [ %sub.ptr.sub4258, %cond.true.4255 ], [ %add4263, %cond.false.4259 ]
  %1784 = load i64, i64* @re_match_object, align 8
  %call4266 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp4267 = icmp eq i64 %1784, %call4266
  br i1 %cmp4267, label %lor.end.4272, label %lor.rhs.4269

lor.rhs.4269:                                     ; preds = %cond.end.4264
  %1785 = load i64, i64* @re_match_object, align 8
  %call4270 = call zeroext i1 @BUFFERP(i64 %1785)
  br label %lor.end.4272

lor.end.4272:                                     ; preds = %lor.rhs.4269, %cond.end.4264
  %1786 = phi i1 [ true, %cond.end.4264 ], [ %call4270, %lor.rhs.4269 ]
  %lor.ext4273 = zext i1 %1786 to i32
  %conv4274 = sext i32 %lor.ext4273 to i64
  %add4275 = add nsw i64 %cond4265, %conv4274
  %sub4276 = sub nsw i64 %add4275, 1
  store i64 %sub4276, i64* %offset4246, align 8
  %1787 = load i64, i64* %offset4246, align 8
  %call4278 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1787)
  store i64 %call4278, i64* %charpos4277, align 8
  %1788 = load i64, i64* %charpos4277, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1788)
  br label %do.body.4279

do.body.4279:                                     ; preds = %lor.end.4272
  %1789 = load i8, i8* %target_multibyte, align 1
  %tobool4280 = icmp ne i8 %1789, 0
  br i1 %tobool4280, label %if.then.4281, label %if.else.4368

if.then.4281:                                     ; preds = %do.body.4279
  %1790 = load i8*, i8** %d, align 8
  %1791 = load i8*, i8** %string2.addr, align 8
  %cmp4283 = icmp eq i8* %1790, %1791
  br i1 %cmp4283, label %cond.true.4285, label %cond.false.4286

cond.true.4285:                                   ; preds = %if.then.4281
  %1792 = load i8*, i8** %end1, align 8
  br label %cond.end.4287

cond.false.4286:                                  ; preds = %if.then.4281
  %1793 = load i8*, i8** %d, align 8
  br label %cond.end.4287

cond.end.4287:                                    ; preds = %cond.false.4286, %cond.true.4285
  %cond4288 = phi i8* [ %1792, %cond.true.4285 ], [ %1793, %cond.false.4286 ]
  store i8* %cond4288, i8** %dtemp4282, align 8
  %1794 = load i8*, i8** %d, align 8
  %1795 = load i8*, i8** %string2.addr, align 8
  %cmp4290 = icmp ugt i8* %1794, %1795
  br i1 %cmp4290, label %land.lhs.true.4292, label %cond.false.4296

land.lhs.true.4292:                               ; preds = %cond.end.4287
  %1796 = load i8*, i8** %d, align 8
  %1797 = load i8*, i8** %end2, align 8
  %cmp4293 = icmp ule i8* %1796, %1797
  br i1 %cmp4293, label %cond.true.4295, label %cond.false.4296

cond.true.4295:                                   ; preds = %land.lhs.true.4292
  %1798 = load i8*, i8** %string2.addr, align 8
  br label %cond.end.4297

cond.false.4296:                                  ; preds = %land.lhs.true.4292, %cond.end.4287
  %1799 = load i8*, i8** %string1.addr, align 8
  br label %cond.end.4297

cond.end.4297:                                    ; preds = %cond.false.4296, %cond.true.4295
  %cond4298 = phi i8* [ %1798, %cond.true.4295 ], [ %1799, %cond.false.4296 ]
  store i8* %cond4298, i8** %dlimit4289, align 8
  br label %while.cond.4299

while.cond.4299:                                  ; preds = %while.body.4312, %cond.end.4297
  %1800 = load i8*, i8** %dtemp4282, align 8
  %incdec.ptr4300 = getelementptr inbounds i8, i8* %1800, i32 -1
  store i8* %incdec.ptr4300, i8** %dtemp4282, align 8
  %1801 = load i8*, i8** %dlimit4289, align 8
  %cmp4301 = icmp ugt i8* %1800, %1801
  br i1 %cmp4301, label %land.rhs.4303, label %land.end.4310

land.rhs.4303:                                    ; preds = %while.cond.4299
  %1802 = load i8*, i8** %dtemp4282, align 8
  %1803 = load i8, i8* %1802, align 1
  %conv4304 = zext i8 %1803 to i32
  %and4305 = and i32 %conv4304, 192
  %cmp4306 = icmp ne i32 %and4305, 128
  %lnot4308 = xor i1 %cmp4306, true
  br label %land.end.4310

land.end.4310:                                    ; preds = %land.rhs.4303, %while.cond.4299
  %1804 = phi i1 [ false, %while.cond.4299 ], [ %lnot4308, %land.rhs.4303 ]
  br i1 %1804, label %while.body.4312, label %while.end.4313

while.body.4312:                                  ; preds = %land.end.4310
  br label %while.cond.4299

while.end.4313:                                   ; preds = %land.end.4310
  %1805 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4314 = getelementptr inbounds i8, i8* %1805, i64 0
  %1806 = load i8, i8* %arrayidx4314, align 1
  %conv4315 = zext i8 %1806 to i32
  %and4316 = and i32 %conv4315, 128
  %tobool4317 = icmp ne i32 %and4316, 0
  br i1 %tobool4317, label %cond.false.4321, label %cond.true.4318

cond.true.4318:                                   ; preds = %while.end.4313
  %1807 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4319 = getelementptr inbounds i8, i8* %1807, i64 0
  %1808 = load i8, i8* %arrayidx4319, align 1
  %conv4320 = zext i8 %1808 to i32
  br label %cond.end.4366

cond.false.4321:                                  ; preds = %while.end.4313
  %1809 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4322 = getelementptr inbounds i8, i8* %1809, i64 0
  %1810 = load i8, i8* %arrayidx4322, align 1
  %conv4323 = zext i8 %1810 to i32
  %and4324 = and i32 %conv4323, 32
  %tobool4325 = icmp ne i32 %and4324, 0
  br i1 %tobool4325, label %cond.false.4341, label %cond.true.4326

cond.true.4326:                                   ; preds = %cond.false.4321
  %1811 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4327 = getelementptr inbounds i8, i8* %1811, i64 0
  %1812 = load i8, i8* %arrayidx4327, align 1
  %conv4328 = zext i8 %1812 to i32
  %and4329 = and i32 %conv4328, 31
  %shl4330 = shl i32 %and4329, 6
  %1813 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4331 = getelementptr inbounds i8, i8* %1813, i64 1
  %1814 = load i8, i8* %arrayidx4331, align 1
  %conv4332 = zext i8 %1814 to i32
  %and4333 = and i32 %conv4332, 63
  %or4334 = or i32 %shl4330, %and4333
  %1815 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4335 = getelementptr inbounds i8, i8* %1815, i64 0
  %1816 = load i8, i8* %arrayidx4335, align 1
  %conv4336 = zext i8 %1816 to i32
  %cmp4337 = icmp slt i32 %conv4336, 194
  %cond4339 = select i1 %cmp4337, i32 4194176, i32 0
  %add4340 = add nsw i32 %or4334, %cond4339
  br label %cond.end.4364

cond.false.4341:                                  ; preds = %cond.false.4321
  %1817 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4342 = getelementptr inbounds i8, i8* %1817, i64 0
  %1818 = load i8, i8* %arrayidx4342, align 1
  %conv4343 = zext i8 %1818 to i32
  %and4344 = and i32 %conv4343, 16
  %tobool4345 = icmp ne i32 %and4344, 0
  br i1 %tobool4345, label %cond.false.4360, label %cond.true.4346

cond.true.4346:                                   ; preds = %cond.false.4341
  %1819 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4347 = getelementptr inbounds i8, i8* %1819, i64 0
  %1820 = load i8, i8* %arrayidx4347, align 1
  %conv4348 = zext i8 %1820 to i32
  %and4349 = and i32 %conv4348, 15
  %shl4350 = shl i32 %and4349, 12
  %1821 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4351 = getelementptr inbounds i8, i8* %1821, i64 1
  %1822 = load i8, i8* %arrayidx4351, align 1
  %conv4352 = zext i8 %1822 to i32
  %and4353 = and i32 %conv4352, 63
  %shl4354 = shl i32 %and4353, 6
  %or4355 = or i32 %shl4350, %shl4354
  %1823 = load i8*, i8** %dtemp4282, align 8
  %arrayidx4356 = getelementptr inbounds i8, i8* %1823, i64 2
  %1824 = load i8, i8* %arrayidx4356, align 1
  %conv4357 = zext i8 %1824 to i32
  %and4358 = and i32 %conv4357, 63
  %or4359 = or i32 %or4355, %and4358
  br label %cond.end.4362

cond.false.4360:                                  ; preds = %cond.false.4341
  %1825 = load i8*, i8** %dtemp4282, align 8
  %call4361 = call i32 @string_char(i8* %1825, i8** null, i32* null)
  br label %cond.end.4362

cond.end.4362:                                    ; preds = %cond.false.4360, %cond.true.4346
  %cond4363 = phi i32 [ %or4359, %cond.true.4346 ], [ %call4361, %cond.false.4360 ]
  br label %cond.end.4364

cond.end.4364:                                    ; preds = %cond.end.4362, %cond.true.4326
  %cond4365 = phi i32 [ %add4340, %cond.true.4326 ], [ %cond4363, %cond.end.4362 ]
  br label %cond.end.4366

cond.end.4366:                                    ; preds = %cond.end.4364, %cond.true.4318
  %cond4367 = phi i32 [ %conv4320, %cond.true.4318 ], [ %cond4365, %cond.end.4364 ]
  store i32 %cond4367, i32* %c14242, align 4
  br label %if.end.4391

if.else.4368:                                     ; preds = %do.body.4279
  %1826 = load i8*, i8** %d, align 8
  %1827 = load i8*, i8** %string2.addr, align 8
  %cmp4369 = icmp eq i8* %1826, %1827
  br i1 %cmp4369, label %cond.true.4371, label %cond.false.4372

cond.true.4371:                                   ; preds = %if.else.4368
  %1828 = load i8*, i8** %end1, align 8
  br label %cond.end.4373

cond.false.4372:                                  ; preds = %if.else.4368
  %1829 = load i8*, i8** %d, align 8
  br label %cond.end.4373

cond.end.4373:                                    ; preds = %cond.false.4372, %cond.true.4371
  %cond4374 = phi i8* [ %1828, %cond.true.4371 ], [ %1829, %cond.false.4372 ]
  %arrayidx4375 = getelementptr inbounds i8, i8* %cond4374, i64 -1
  %1830 = load i8, i8* %arrayidx4375, align 1
  %conv4376 = zext i8 %1830 to i32
  store i32 %conv4376, i32* %c14242, align 4
  br i1 true, label %cond.true.4377, label %cond.false.4381

cond.true.4377:                                   ; preds = %cond.end.4373
  %1831 = load i32, i32* %c14242, align 4
  %add4378 = add i32 %1831, 0
  %cmp4379 = icmp ult i32 %add4378, 128
  br i1 %cmp4379, label %cond.true.4386, label %cond.false.4387

cond.false.4381:                                  ; preds = %cond.end.4373
  %1832 = load i32, i32* %c14242, align 4
  %conv4382 = sext i32 %1832 to i64
  %add4383 = add i64 %conv4382, 0
  %cmp4384 = icmp ult i64 %add4383, 128
  br i1 %cmp4384, label %cond.true.4386, label %cond.false.4387

cond.true.4386:                                   ; preds = %cond.false.4381, %cond.true.4377
  %1833 = load i32, i32* %c14242, align 4
  br label %cond.end.4389

cond.false.4387:                                  ; preds = %cond.false.4381, %cond.true.4377
  %1834 = load i32, i32* %c14242, align 4
  %add4388 = add nsw i32 %1834, 4194048
  br label %cond.end.4389

cond.end.4389:                                    ; preds = %cond.false.4387, %cond.true.4386
  %cond4390 = phi i32 [ %1833, %cond.true.4386 ], [ %add4388, %cond.false.4387 ]
  store i32 %cond4390, i32* %c14242, align 4
  br label %if.end.4391

if.end.4391:                                      ; preds = %cond.end.4389, %cond.end.4366
  br label %do.end.4393

do.end.4393:                                      ; preds = %if.end.4391
  %1835 = load i32, i32* %c14242, align 4
  %call4394 = call i32 @syntax_property(i32 %1835, i1 zeroext true)
  store i32 %call4394, i32* %s14244, align 4
  %1836 = load i32, i32* %s14244, align 4
  %cmp4395 = icmp ne i32 %1836, 2
  br i1 %cmp4395, label %land.lhs.true.4397, label %if.end.4401

land.lhs.true.4397:                               ; preds = %do.end.4393
  %1837 = load i32, i32* %s14244, align 4
  %cmp4398 = icmp ne i32 %1837, 3
  br i1 %cmp4398, label %if.then.4400, label %if.end.4401

if.then.4400:                                     ; preds = %land.lhs.true.4397
  br label %fail

if.end.4401:                                      ; preds = %land.lhs.true.4397, %do.end.4393
  %1838 = load i8*, i8** %d, align 8
  %1839 = load i8*, i8** %end2, align 8
  %cmp4402 = icmp eq i8* %1838, %1839
  br i1 %cmp4402, label %if.end.4479, label %if.then.4404

if.then.4404:                                     ; preds = %if.end.4401
  %1840 = load i8*, i8** %d, align 8
  %1841 = load i8*, i8** %end1, align 8
  %cmp4405 = icmp eq i8* %1840, %1841
  br i1 %cmp4405, label %if.then.4407, label %if.end.4408

if.then.4407:                                     ; preds = %if.then.4404
  %1842 = load i8*, i8** %string2.addr, align 8
  store i8* %1842, i8** %d, align 8
  %1843 = load i8*, i8** %end_match_2, align 8
  store i8* %1843, i8** %dend, align 8
  br label %if.end.4408

if.end.4408:                                      ; preds = %if.then.4407, %if.then.4404
  %1844 = load i8, i8* %target_multibyte, align 1
  %conv4409 = sext i8 %1844 to i32
  %tobool4410 = icmp ne i32 %conv4409, 0
  br i1 %tobool4410, label %cond.true.4411, label %cond.false.4466

cond.true.4411:                                   ; preds = %if.end.4408
  %1845 = load i8*, i8** %d, align 8
  %arrayidx4412 = getelementptr inbounds i8, i8* %1845, i64 0
  %1846 = load i8, i8* %arrayidx4412, align 1
  %conv4413 = zext i8 %1846 to i32
  %and4414 = and i32 %conv4413, 128
  %tobool4415 = icmp ne i32 %and4414, 0
  br i1 %tobool4415, label %cond.false.4419, label %cond.true.4416

cond.true.4416:                                   ; preds = %cond.true.4411
  %1847 = load i8*, i8** %d, align 8
  %arrayidx4417 = getelementptr inbounds i8, i8* %1847, i64 0
  %1848 = load i8, i8* %arrayidx4417, align 1
  %conv4418 = zext i8 %1848 to i32
  br label %cond.end.4464

cond.false.4419:                                  ; preds = %cond.true.4411
  %1849 = load i8*, i8** %d, align 8
  %arrayidx4420 = getelementptr inbounds i8, i8* %1849, i64 0
  %1850 = load i8, i8* %arrayidx4420, align 1
  %conv4421 = zext i8 %1850 to i32
  %and4422 = and i32 %conv4421, 32
  %tobool4423 = icmp ne i32 %and4422, 0
  br i1 %tobool4423, label %cond.false.4439, label %cond.true.4424

cond.true.4424:                                   ; preds = %cond.false.4419
  %1851 = load i8*, i8** %d, align 8
  %arrayidx4425 = getelementptr inbounds i8, i8* %1851, i64 0
  %1852 = load i8, i8* %arrayidx4425, align 1
  %conv4426 = zext i8 %1852 to i32
  %and4427 = and i32 %conv4426, 31
  %shl4428 = shl i32 %and4427, 6
  %1853 = load i8*, i8** %d, align 8
  %arrayidx4429 = getelementptr inbounds i8, i8* %1853, i64 1
  %1854 = load i8, i8* %arrayidx4429, align 1
  %conv4430 = zext i8 %1854 to i32
  %and4431 = and i32 %conv4430, 63
  %or4432 = or i32 %shl4428, %and4431
  %1855 = load i8*, i8** %d, align 8
  %arrayidx4433 = getelementptr inbounds i8, i8* %1855, i64 0
  %1856 = load i8, i8* %arrayidx4433, align 1
  %conv4434 = zext i8 %1856 to i32
  %cmp4435 = icmp slt i32 %conv4434, 194
  %cond4437 = select i1 %cmp4435, i32 4194176, i32 0
  %add4438 = add nsw i32 %or4432, %cond4437
  br label %cond.end.4462

cond.false.4439:                                  ; preds = %cond.false.4419
  %1857 = load i8*, i8** %d, align 8
  %arrayidx4440 = getelementptr inbounds i8, i8* %1857, i64 0
  %1858 = load i8, i8* %arrayidx4440, align 1
  %conv4441 = zext i8 %1858 to i32
  %and4442 = and i32 %conv4441, 16
  %tobool4443 = icmp ne i32 %and4442, 0
  br i1 %tobool4443, label %cond.false.4458, label %cond.true.4444

cond.true.4444:                                   ; preds = %cond.false.4439
  %1859 = load i8*, i8** %d, align 8
  %arrayidx4445 = getelementptr inbounds i8, i8* %1859, i64 0
  %1860 = load i8, i8* %arrayidx4445, align 1
  %conv4446 = zext i8 %1860 to i32
  %and4447 = and i32 %conv4446, 15
  %shl4448 = shl i32 %and4447, 12
  %1861 = load i8*, i8** %d, align 8
  %arrayidx4449 = getelementptr inbounds i8, i8* %1861, i64 1
  %1862 = load i8, i8* %arrayidx4449, align 1
  %conv4450 = zext i8 %1862 to i32
  %and4451 = and i32 %conv4450, 63
  %shl4452 = shl i32 %and4451, 6
  %or4453 = or i32 %shl4448, %shl4452
  %1863 = load i8*, i8** %d, align 8
  %arrayidx4454 = getelementptr inbounds i8, i8* %1863, i64 2
  %1864 = load i8, i8* %arrayidx4454, align 1
  %conv4455 = zext i8 %1864 to i32
  %and4456 = and i32 %conv4455, 63
  %or4457 = or i32 %or4453, %and4456
  br label %cond.end.4460

cond.false.4458:                                  ; preds = %cond.false.4439
  %1865 = load i8*, i8** %d, align 8
  %call4459 = call i32 @string_char(i8* %1865, i8** null, i32* null)
  br label %cond.end.4460

cond.end.4460:                                    ; preds = %cond.false.4458, %cond.true.4444
  %cond4461 = phi i32 [ %or4457, %cond.true.4444 ], [ %call4459, %cond.false.4458 ]
  br label %cond.end.4462

cond.end.4462:                                    ; preds = %cond.end.4460, %cond.true.4424
  %cond4463 = phi i32 [ %add4438, %cond.true.4424 ], [ %cond4461, %cond.end.4460 ]
  br label %cond.end.4464

cond.end.4464:                                    ; preds = %cond.end.4462, %cond.true.4416
  %cond4465 = phi i32 [ %conv4418, %cond.true.4416 ], [ %cond4463, %cond.end.4462 ]
  br label %cond.end.4468

cond.false.4466:                                  ; preds = %if.end.4408
  %1866 = load i8*, i8** %d, align 8
  %1867 = load i8, i8* %1866, align 1
  %conv4467 = zext i8 %1867 to i32
  br label %cond.end.4468

cond.end.4468:                                    ; preds = %cond.false.4466, %cond.end.4464
  %cond4469 = phi i32 [ %cond4465, %cond.end.4464 ], [ %conv4467, %cond.false.4466 ]
  store i32 %cond4469, i32* %c24243, align 4
  %1868 = load i64, i64* %charpos4277, align 8
  %add4470 = add nsw i64 %1868, 1
  call void @UPDATE_SYNTAX_TABLE_FORWARD_FAST(i64 %add4470)
  %1869 = load i32, i32* %c24243, align 4
  %call4471 = call i32 @syntax_property(i32 %1869, i1 zeroext true)
  store i32 %call4471, i32* %s24245, align 4
  %1870 = load i32, i32* %s24245, align 4
  %cmp4472 = icmp eq i32 %1870, 2
  br i1 %cmp4472, label %if.then.4477, label %lor.lhs.false.4474

lor.lhs.false.4474:                               ; preds = %cond.end.4468
  %1871 = load i32, i32* %s24245, align 4
  %cmp4475 = icmp eq i32 %1871, 3
  br i1 %cmp4475, label %if.then.4477, label %if.end.4478

if.then.4477:                                     ; preds = %lor.lhs.false.4474, %cond.end.4468
  br label %fail

if.end.4478:                                      ; preds = %lor.lhs.false.4474
  br label %if.end.4479

if.end.4479:                                      ; preds = %if.end.4478, %if.end.4401
  br label %if.end.4480

if.end.4480:                                      ; preds = %if.end.4479
  br label %sw.epilog

sw.bb.4481:                                       ; preds = %if.end.578, %if.end.578
  %1872 = load i8*, i8** %p, align 8
  %add.ptr4483 = getelementptr inbounds i8, i8* %1872, i64 -1
  %1873 = load i8, i8* %add.ptr4483, align 1
  %conv4484 = zext i8 %1873 to i32
  %cmp4485 = icmp eq i32 %conv4484, 29
  %conv4486 = zext i1 %cmp4485 to i32
  %conv4487 = trunc i32 %conv4486 to i8
  store i8 %conv4487, i8* %not4482, align 1
  %1874 = load i8*, i8** %p, align 8
  %incdec.ptr4488 = getelementptr inbounds i8, i8* %1874, i32 1
  store i8* %incdec.ptr4488, i8** %p, align 8
  %1875 = load i8, i8* %1874, align 1
  %conv4489 = zext i8 %1875 to i32
  store i32 %conv4489, i32* %mcnt, align 4
  br label %while.cond.4490

while.cond.4490:                                  ; preds = %if.end.4497, %sw.bb.4481
  %1876 = load i8*, i8** %d, align 8
  %1877 = load i8*, i8** %dend, align 8
  %cmp4491 = icmp eq i8* %1876, %1877
  br i1 %cmp4491, label %while.body.4493, label %while.end.4498

while.body.4493:                                  ; preds = %while.cond.4490
  %1878 = load i8*, i8** %dend, align 8
  %1879 = load i8*, i8** %end_match_2, align 8
  %cmp4494 = icmp eq i8* %1878, %1879
  br i1 %cmp4494, label %if.then.4496, label %if.end.4497

if.then.4496:                                     ; preds = %while.body.4493
  br label %fail

if.end.4497:                                      ; preds = %while.body.4493
  %1880 = load i8*, i8** %string2.addr, align 8
  store i8* %1880, i8** %d, align 8
  %1881 = load i8*, i8** %end_match_2, align 8
  store i8* %1881, i8** %dend, align 8
  br label %while.cond.4490

while.end.4498:                                   ; preds = %while.cond.4490
  %1882 = load i64, i64* %size1.addr, align 8
  %tobool4500 = icmp ne i64 %1882, 0
  br i1 %tobool4500, label %land.lhs.true.4501, label %cond.false.4512

land.lhs.true.4501:                               ; preds = %while.end.4498
  %1883 = load i8*, i8** %string1.addr, align 8
  %1884 = load i8*, i8** %d, align 8
  %cmp4502 = icmp ule i8* %1883, %1884
  br i1 %cmp4502, label %land.lhs.true.4504, label %cond.false.4512

land.lhs.true.4504:                               ; preds = %land.lhs.true.4501
  %1885 = load i8*, i8** %d, align 8
  %1886 = load i8*, i8** %string1.addr, align 8
  %1887 = load i64, i64* %size1.addr, align 8
  %add.ptr4505 = getelementptr inbounds i8, i8* %1886, i64 %1887
  %cmp4506 = icmp ule i8* %1885, %add.ptr4505
  br i1 %cmp4506, label %cond.true.4508, label %cond.false.4512

cond.true.4508:                                   ; preds = %land.lhs.true.4504
  %1888 = load i8*, i8** %d, align 8
  %1889 = load i8*, i8** %string1.addr, align 8
  %sub.ptr.lhs.cast4509 = ptrtoint i8* %1888 to i64
  %sub.ptr.rhs.cast4510 = ptrtoint i8* %1889 to i64
  %sub.ptr.sub4511 = sub i64 %sub.ptr.lhs.cast4509, %sub.ptr.rhs.cast4510
  br label %cond.end.4517

cond.false.4512:                                  ; preds = %land.lhs.true.4504, %land.lhs.true.4501, %while.end.4498
  %1890 = load i8*, i8** %d, align 8
  %1891 = load i8*, i8** %string2.addr, align 8
  %sub.ptr.lhs.cast4513 = ptrtoint i8* %1890 to i64
  %sub.ptr.rhs.cast4514 = ptrtoint i8* %1891 to i64
  %sub.ptr.sub4515 = sub i64 %sub.ptr.lhs.cast4513, %sub.ptr.rhs.cast4514
  %1892 = load i64, i64* %size1.addr, align 8
  %add4516 = add nsw i64 %sub.ptr.sub4515, %1892
  br label %cond.end.4517

cond.end.4517:                                    ; preds = %cond.false.4512, %cond.true.4508
  %cond4518 = phi i64 [ %sub.ptr.sub4511, %cond.true.4508 ], [ %add4516, %cond.false.4512 ]
  %1893 = load i64, i64* @re_match_object, align 8
  %call4519 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp4520 = icmp eq i64 %1893, %call4519
  br i1 %cmp4520, label %lor.end.4525, label %lor.rhs.4522

lor.rhs.4522:                                     ; preds = %cond.end.4517
  %1894 = load i64, i64* @re_match_object, align 8
  %call4523 = call zeroext i1 @BUFFERP(i64 %1894)
  br label %lor.end.4525

lor.end.4525:                                     ; preds = %lor.rhs.4522, %cond.end.4517
  %1895 = phi i1 [ true, %cond.end.4517 ], [ %call4523, %lor.rhs.4522 ]
  %lor.ext4526 = zext i1 %1895 to i32
  %conv4527 = sext i32 %lor.ext4526 to i64
  %add4528 = add nsw i64 %cond4518, %conv4527
  store i64 %add4528, i64* %offset4499, align 8
  %1896 = load i64, i64* %offset4499, align 8
  %call4529 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %1896)
  store i64 %call4529, i64* %pos1, align 8
  %1897 = load i64, i64* %pos1, align 8
  call void @UPDATE_SYNTAX_TABLE_FAST(i64 %1897)
  br label %do.body.4532

do.body.4532:                                     ; preds = %lor.end.4525
  %1898 = load i8, i8* %target_multibyte, align 1
  %tobool4533 = icmp ne i8 %1898, 0
  br i1 %tobool4533, label %if.then.4534, label %if.else.4589

if.then.4534:                                     ; preds = %do.body.4532
  %1899 = load i8*, i8** %d, align 8
  %arrayidx4535 = getelementptr inbounds i8, i8* %1899, i64 0
  %1900 = load i8, i8* %arrayidx4535, align 1
  %conv4536 = zext i8 %1900 to i32
  %and4537 = and i32 %conv4536, 128
  %tobool4538 = icmp ne i32 %and4537, 0
  br i1 %tobool4538, label %cond.false.4542, label %cond.true.4539

cond.true.4539:                                   ; preds = %if.then.4534
  store i32 1, i32* %len4530, align 4
  %1901 = load i8*, i8** %d, align 8
  %arrayidx4540 = getelementptr inbounds i8, i8* %1901, i64 0
  %1902 = load i8, i8* %arrayidx4540, align 1
  %conv4541 = zext i8 %1902 to i32
  br label %cond.end.4587

cond.false.4542:                                  ; preds = %if.then.4534
  %1903 = load i8*, i8** %d, align 8
  %arrayidx4543 = getelementptr inbounds i8, i8* %1903, i64 0
  %1904 = load i8, i8* %arrayidx4543, align 1
  %conv4544 = zext i8 %1904 to i32
  %and4545 = and i32 %conv4544, 32
  %tobool4546 = icmp ne i32 %and4545, 0
  br i1 %tobool4546, label %cond.false.4562, label %cond.true.4547

cond.true.4547:                                   ; preds = %cond.false.4542
  store i32 2, i32* %len4530, align 4
  %1905 = load i8*, i8** %d, align 8
  %arrayidx4548 = getelementptr inbounds i8, i8* %1905, i64 0
  %1906 = load i8, i8* %arrayidx4548, align 1
  %conv4549 = zext i8 %1906 to i32
  %and4550 = and i32 %conv4549, 31
  %shl4551 = shl i32 %and4550, 6
  %1907 = load i8*, i8** %d, align 8
  %arrayidx4552 = getelementptr inbounds i8, i8* %1907, i64 1
  %1908 = load i8, i8* %arrayidx4552, align 1
  %conv4553 = zext i8 %1908 to i32
  %and4554 = and i32 %conv4553, 63
  %or4555 = or i32 %shl4551, %and4554
  %1909 = load i8*, i8** %d, align 8
  %arrayidx4556 = getelementptr inbounds i8, i8* %1909, i64 0
  %1910 = load i8, i8* %arrayidx4556, align 1
  %conv4557 = zext i8 %1910 to i32
  %cmp4558 = icmp slt i32 %conv4557, 194
  %cond4560 = select i1 %cmp4558, i32 4194176, i32 0
  %add4561 = add nsw i32 %or4555, %cond4560
  br label %cond.end.4585

cond.false.4562:                                  ; preds = %cond.false.4542
  %1911 = load i8*, i8** %d, align 8
  %arrayidx4563 = getelementptr inbounds i8, i8* %1911, i64 0
  %1912 = load i8, i8* %arrayidx4563, align 1
  %conv4564 = zext i8 %1912 to i32
  %and4565 = and i32 %conv4564, 16
  %tobool4566 = icmp ne i32 %and4565, 0
  br i1 %tobool4566, label %cond.false.4581, label %cond.true.4567

cond.true.4567:                                   ; preds = %cond.false.4562
  store i32 3, i32* %len4530, align 4
  %1913 = load i8*, i8** %d, align 8
  %arrayidx4568 = getelementptr inbounds i8, i8* %1913, i64 0
  %1914 = load i8, i8* %arrayidx4568, align 1
  %conv4569 = zext i8 %1914 to i32
  %and4570 = and i32 %conv4569, 15
  %shl4571 = shl i32 %and4570, 12
  %1915 = load i8*, i8** %d, align 8
  %arrayidx4572 = getelementptr inbounds i8, i8* %1915, i64 1
  %1916 = load i8, i8* %arrayidx4572, align 1
  %conv4573 = zext i8 %1916 to i32
  %and4574 = and i32 %conv4573, 63
  %shl4575 = shl i32 %and4574, 6
  %or4576 = or i32 %shl4571, %shl4575
  %1917 = load i8*, i8** %d, align 8
  %arrayidx4577 = getelementptr inbounds i8, i8* %1917, i64 2
  %1918 = load i8, i8* %arrayidx4577, align 1
  %conv4578 = zext i8 %1918 to i32
  %and4579 = and i32 %conv4578, 63
  %or4580 = or i32 %or4576, %and4579
  br label %cond.end.4583

cond.false.4581:                                  ; preds = %cond.false.4562
  %1919 = load i8*, i8** %d, align 8
  %call4582 = call i32 @string_char(i8* %1919, i8** null, i32* %len4530)
  br label %cond.end.4583

cond.end.4583:                                    ; preds = %cond.false.4581, %cond.true.4567
  %cond4584 = phi i32 [ %or4580, %cond.true.4567 ], [ %call4582, %cond.false.4581 ]
  br label %cond.end.4585

cond.end.4585:                                    ; preds = %cond.end.4583, %cond.true.4547
  %cond4586 = phi i32 [ %add4561, %cond.true.4547 ], [ %cond4584, %cond.end.4583 ]
  br label %cond.end.4587

cond.end.4587:                                    ; preds = %cond.end.4585, %cond.true.4539
  %cond4588 = phi i32 [ %conv4541, %cond.true.4539 ], [ %cond4586, %cond.end.4585 ]
  store i32 %cond4588, i32* %c4531, align 4
  br label %if.end.4605

if.else.4589:                                     ; preds = %do.body.4532
  %1920 = load i8*, i8** %d, align 8
  %1921 = load i8, i8* %1920, align 1
  %conv4590 = zext i8 %1921 to i32
  store i32 %conv4590, i32* %c4531, align 4
  store i32 1, i32* %len4530, align 4
  br i1 true, label %cond.true.4591, label %cond.false.4595

cond.true.4591:                                   ; preds = %if.else.4589
  %1922 = load i32, i32* %c4531, align 4
  %add4592 = add i32 %1922, 0
  %cmp4593 = icmp ult i32 %add4592, 128
  br i1 %cmp4593, label %cond.true.4600, label %cond.false.4601

cond.false.4595:                                  ; preds = %if.else.4589
  %1923 = load i32, i32* %c4531, align 4
  %conv4596 = sext i32 %1923 to i64
  %add4597 = add i64 %conv4596, 0
  %cmp4598 = icmp ult i64 %add4597, 128
  br i1 %cmp4598, label %cond.true.4600, label %cond.false.4601

cond.true.4600:                                   ; preds = %cond.false.4595, %cond.true.4591
  %1924 = load i32, i32* %c4531, align 4
  br label %cond.end.4603

cond.false.4601:                                  ; preds = %cond.false.4595, %cond.true.4591
  %1925 = load i32, i32* %c4531, align 4
  %add4602 = add nsw i32 %1925, 4194048
  br label %cond.end.4603

cond.end.4603:                                    ; preds = %cond.false.4601, %cond.true.4600
  %cond4604 = phi i32 [ %1924, %cond.true.4600 ], [ %add4602, %cond.false.4601 ]
  store i32 %cond4604, i32* %c4531, align 4
  br label %if.end.4605

if.end.4605:                                      ; preds = %cond.end.4603, %cond.end.4587
  br label %do.end.4607

do.end.4607:                                      ; preds = %if.end.4605
  %1926 = load i32, i32* %c4531, align 4
  %call4608 = call i32 @syntax_property(i32 %1926, i1 zeroext true)
  %1927 = load i32, i32* %mcnt, align 4
  %cmp4609 = icmp ne i32 %call4608, %1927
  %conv4610 = zext i1 %cmp4609 to i32
  %1928 = load i8, i8* %not4482, align 1
  %conv4611 = sext i8 %1928 to i32
  %xor = xor i32 %conv4610, %conv4611
  %tobool4612 = icmp ne i32 %xor, 0
  br i1 %tobool4612, label %if.then.4613, label %if.end.4614

if.then.4613:                                     ; preds = %do.end.4607
  br label %fail

if.end.4614:                                      ; preds = %do.end.4607
  %1929 = load i32, i32* %len4530, align 4
  %1930 = load i8*, i8** %d, align 8
  %idx.ext4615 = sext i32 %1929 to i64
  %add.ptr4616 = getelementptr inbounds i8, i8* %1930, i64 %idx.ext4615
  store i8* %add.ptr4616, i8** %d, align 8
  br label %sw.epilog

sw.bb.4617:                                       ; preds = %if.end.578
  %1931 = load i8*, i8** %d, align 8
  %1932 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text = getelementptr inbounds %struct.buffer, %struct.buffer* %1932, i32 0, i32 73
  %1933 = load %struct.buffer_text*, %struct.buffer_text** %text, align 8
  %beg = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1933, i32 0, i32 0
  %1934 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast4618 = ptrtoint i8* %1931 to i64
  %sub.ptr.rhs.cast4619 = ptrtoint i8* %1934 to i64
  %sub.ptr.sub4620 = sub i64 %sub.ptr.lhs.cast4618, %sub.ptr.rhs.cast4619
  %1935 = load i8*, i8** %d, align 8
  %1936 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4621 = getelementptr inbounds %struct.buffer, %struct.buffer* %1936, i32 0, i32 73
  %1937 = load %struct.buffer_text*, %struct.buffer_text** %text4621, align 8
  %beg4622 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1937, i32 0, i32 0
  %1938 = load i8*, i8** %beg4622, align 8
  %sub.ptr.lhs.cast4623 = ptrtoint i8* %1935 to i64
  %sub.ptr.rhs.cast4624 = ptrtoint i8* %1938 to i64
  %sub.ptr.sub4625 = sub i64 %sub.ptr.lhs.cast4623, %sub.ptr.rhs.cast4624
  %1939 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4626 = getelementptr inbounds %struct.buffer, %struct.buffer* %1939, i32 0, i32 73
  %1940 = load %struct.buffer_text*, %struct.buffer_text** %text4626, align 8
  %gpt_byte = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1940, i32 0, i32 3
  %1941 = load i64, i64* %gpt_byte, align 8
  %sub4627 = sub nsw i64 %1941, 1
  %cmp4628 = icmp sle i64 %sub.ptr.sub4625, %sub4627
  br i1 %cmp4628, label %cond.true.4630, label %cond.false.4631

cond.true.4630:                                   ; preds = %sw.bb.4617
  br label %cond.end.4633

cond.false.4631:                                  ; preds = %sw.bb.4617
  %1942 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4632 = getelementptr inbounds %struct.buffer, %struct.buffer* %1942, i32 0, i32 73
  %1943 = load %struct.buffer_text*, %struct.buffer_text** %text4632, align 8
  %gap_size = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1943, i32 0, i32 5
  %1944 = load i64, i64* %gap_size, align 8
  br label %cond.end.4633

cond.end.4633:                                    ; preds = %cond.false.4631, %cond.true.4630
  %cond4634 = phi i64 [ 0, %cond.true.4630 ], [ %1944, %cond.false.4631 ]
  %sub4635 = sub nsw i64 %sub.ptr.sub4620, %cond4634
  %add4636 = add nsw i64 %sub4635, 1
  %1945 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %pt_byte = getelementptr inbounds %struct.buffer, %struct.buffer* %1945, i32 0, i32 76
  %1946 = load i64, i64* %pt_byte, align 8
  %add4637 = add nsw i64 %1946, 0
  %cmp4638 = icmp sge i64 %add4636, %add4637
  br i1 %cmp4638, label %if.then.4640, label %if.end.4641

if.then.4640:                                     ; preds = %cond.end.4633
  br label %fail

if.end.4641:                                      ; preds = %cond.end.4633
  br label %sw.epilog

sw.bb.4642:                                       ; preds = %if.end.578
  %1947 = load i8*, i8** %d, align 8
  %1948 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4643 = getelementptr inbounds %struct.buffer, %struct.buffer* %1948, i32 0, i32 73
  %1949 = load %struct.buffer_text*, %struct.buffer_text** %text4643, align 8
  %beg4644 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1949, i32 0, i32 0
  %1950 = load i8*, i8** %beg4644, align 8
  %sub.ptr.lhs.cast4645 = ptrtoint i8* %1947 to i64
  %sub.ptr.rhs.cast4646 = ptrtoint i8* %1950 to i64
  %sub.ptr.sub4647 = sub i64 %sub.ptr.lhs.cast4645, %sub.ptr.rhs.cast4646
  %1951 = load i8*, i8** %d, align 8
  %1952 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4648 = getelementptr inbounds %struct.buffer, %struct.buffer* %1952, i32 0, i32 73
  %1953 = load %struct.buffer_text*, %struct.buffer_text** %text4648, align 8
  %beg4649 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1953, i32 0, i32 0
  %1954 = load i8*, i8** %beg4649, align 8
  %sub.ptr.lhs.cast4650 = ptrtoint i8* %1951 to i64
  %sub.ptr.rhs.cast4651 = ptrtoint i8* %1954 to i64
  %sub.ptr.sub4652 = sub i64 %sub.ptr.lhs.cast4650, %sub.ptr.rhs.cast4651
  %1955 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4653 = getelementptr inbounds %struct.buffer, %struct.buffer* %1955, i32 0, i32 73
  %1956 = load %struct.buffer_text*, %struct.buffer_text** %text4653, align 8
  %gpt_byte4654 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1956, i32 0, i32 3
  %1957 = load i64, i64* %gpt_byte4654, align 8
  %sub4655 = sub nsw i64 %1957, 1
  %cmp4656 = icmp sle i64 %sub.ptr.sub4652, %sub4655
  br i1 %cmp4656, label %cond.true.4658, label %cond.false.4659

cond.true.4658:                                   ; preds = %sw.bb.4642
  br label %cond.end.4662

cond.false.4659:                                  ; preds = %sw.bb.4642
  %1958 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4660 = getelementptr inbounds %struct.buffer, %struct.buffer* %1958, i32 0, i32 73
  %1959 = load %struct.buffer_text*, %struct.buffer_text** %text4660, align 8
  %gap_size4661 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1959, i32 0, i32 5
  %1960 = load i64, i64* %gap_size4661, align 8
  br label %cond.end.4662

cond.end.4662:                                    ; preds = %cond.false.4659, %cond.true.4658
  %cond4663 = phi i64 [ 0, %cond.true.4658 ], [ %1960, %cond.false.4659 ]
  %sub4664 = sub nsw i64 %sub.ptr.sub4647, %cond4663
  %add4665 = add nsw i64 %sub4664, 1
  %1961 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %pt_byte4666 = getelementptr inbounds %struct.buffer, %struct.buffer* %1961, i32 0, i32 76
  %1962 = load i64, i64* %pt_byte4666, align 8
  %add4667 = add nsw i64 %1962, 0
  %cmp4668 = icmp ne i64 %add4665, %add4667
  br i1 %cmp4668, label %if.then.4670, label %if.end.4671

if.then.4670:                                     ; preds = %cond.end.4662
  br label %fail

if.end.4671:                                      ; preds = %cond.end.4662
  br label %sw.epilog

sw.bb.4672:                                       ; preds = %if.end.578
  %1963 = load i8*, i8** %d, align 8
  %1964 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4673 = getelementptr inbounds %struct.buffer, %struct.buffer* %1964, i32 0, i32 73
  %1965 = load %struct.buffer_text*, %struct.buffer_text** %text4673, align 8
  %beg4674 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1965, i32 0, i32 0
  %1966 = load i8*, i8** %beg4674, align 8
  %sub.ptr.lhs.cast4675 = ptrtoint i8* %1963 to i64
  %sub.ptr.rhs.cast4676 = ptrtoint i8* %1966 to i64
  %sub.ptr.sub4677 = sub i64 %sub.ptr.lhs.cast4675, %sub.ptr.rhs.cast4676
  %1967 = load i8*, i8** %d, align 8
  %1968 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4678 = getelementptr inbounds %struct.buffer, %struct.buffer* %1968, i32 0, i32 73
  %1969 = load %struct.buffer_text*, %struct.buffer_text** %text4678, align 8
  %beg4679 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1969, i32 0, i32 0
  %1970 = load i8*, i8** %beg4679, align 8
  %sub.ptr.lhs.cast4680 = ptrtoint i8* %1967 to i64
  %sub.ptr.rhs.cast4681 = ptrtoint i8* %1970 to i64
  %sub.ptr.sub4682 = sub i64 %sub.ptr.lhs.cast4680, %sub.ptr.rhs.cast4681
  %1971 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4683 = getelementptr inbounds %struct.buffer, %struct.buffer* %1971, i32 0, i32 73
  %1972 = load %struct.buffer_text*, %struct.buffer_text** %text4683, align 8
  %gpt_byte4684 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1972, i32 0, i32 3
  %1973 = load i64, i64* %gpt_byte4684, align 8
  %sub4685 = sub nsw i64 %1973, 1
  %cmp4686 = icmp sle i64 %sub.ptr.sub4682, %sub4685
  br i1 %cmp4686, label %cond.true.4688, label %cond.false.4689

cond.true.4688:                                   ; preds = %sw.bb.4672
  br label %cond.end.4692

cond.false.4689:                                  ; preds = %sw.bb.4672
  %1974 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %text4690 = getelementptr inbounds %struct.buffer, %struct.buffer* %1974, i32 0, i32 73
  %1975 = load %struct.buffer_text*, %struct.buffer_text** %text4690, align 8
  %gap_size4691 = getelementptr inbounds %struct.buffer_text, %struct.buffer_text* %1975, i32 0, i32 5
  %1976 = load i64, i64* %gap_size4691, align 8
  br label %cond.end.4692

cond.end.4692:                                    ; preds = %cond.false.4689, %cond.true.4688
  %cond4693 = phi i64 [ 0, %cond.true.4688 ], [ %1976, %cond.false.4689 ]
  %sub4694 = sub nsw i64 %sub.ptr.sub4677, %cond4693
  %add4695 = add nsw i64 %sub4694, 1
  %1977 = load %struct.buffer*, %struct.buffer** @current_buffer, align 8
  %pt_byte4696 = getelementptr inbounds %struct.buffer, %struct.buffer* %1977, i32 0, i32 76
  %1978 = load i64, i64* %pt_byte4696, align 8
  %add4697 = add nsw i64 %1978, 0
  %cmp4698 = icmp sle i64 %add4695, %add4697
  br i1 %cmp4698, label %if.then.4700, label %if.end.4701

if.then.4700:                                     ; preds = %cond.end.4692
  br label %fail

if.end.4701:                                      ; preds = %cond.end.4692
  br label %sw.epilog

sw.bb.4702:                                       ; preds = %if.end.578, %if.end.578
  %1979 = load i8*, i8** %p, align 8
  %add.ptr4704 = getelementptr inbounds i8, i8* %1979, i64 -1
  %1980 = load i8, i8* %add.ptr4704, align 1
  %conv4705 = zext i8 %1980 to i32
  %cmp4706 = icmp eq i32 %conv4705, 34
  %conv4707 = zext i1 %cmp4706 to i32
  %conv4708 = trunc i32 %conv4707 to i8
  store i8 %conv4708, i8* %not4703, align 1
  %1981 = load i8*, i8** %p, align 8
  %incdec.ptr4709 = getelementptr inbounds i8, i8* %1981, i32 1
  store i8* %incdec.ptr4709, i8** %p, align 8
  %1982 = load i8, i8* %1981, align 1
  %conv4710 = zext i8 %1982 to i32
  store i32 %conv4710, i32* %mcnt, align 4
  br label %while.cond.4711

while.cond.4711:                                  ; preds = %if.end.4718, %sw.bb.4702
  %1983 = load i8*, i8** %d, align 8
  %1984 = load i8*, i8** %dend, align 8
  %cmp4712 = icmp eq i8* %1983, %1984
  br i1 %cmp4712, label %while.body.4714, label %while.end.4719

while.body.4714:                                  ; preds = %while.cond.4711
  %1985 = load i8*, i8** %dend, align 8
  %1986 = load i8*, i8** %end_match_2, align 8
  %cmp4715 = icmp eq i8* %1985, %1986
  br i1 %cmp4715, label %if.then.4717, label %if.end.4718

if.then.4717:                                     ; preds = %while.body.4714
  br label %fail

if.end.4718:                                      ; preds = %while.body.4714
  %1987 = load i8*, i8** %string2.addr, align 8
  store i8* %1987, i8** %d, align 8
  %1988 = load i8*, i8** %end_match_2, align 8
  store i8* %1988, i8** %dend, align 8
  br label %while.cond.4711

while.end.4719:                                   ; preds = %while.cond.4711
  br label %do.body.4722

do.body.4722:                                     ; preds = %while.end.4719
  %1989 = load i8, i8* %target_multibyte, align 1
  %tobool4723 = icmp ne i8 %1989, 0
  br i1 %tobool4723, label %if.then.4724, label %if.else.4779

if.then.4724:                                     ; preds = %do.body.4722
  %1990 = load i8*, i8** %d, align 8
  %arrayidx4725 = getelementptr inbounds i8, i8* %1990, i64 0
  %1991 = load i8, i8* %arrayidx4725, align 1
  %conv4726 = zext i8 %1991 to i32
  %and4727 = and i32 %conv4726, 128
  %tobool4728 = icmp ne i32 %and4727, 0
  br i1 %tobool4728, label %cond.false.4732, label %cond.true.4729

cond.true.4729:                                   ; preds = %if.then.4724
  store i32 1, i32* %len4720, align 4
  %1992 = load i8*, i8** %d, align 8
  %arrayidx4730 = getelementptr inbounds i8, i8* %1992, i64 0
  %1993 = load i8, i8* %arrayidx4730, align 1
  %conv4731 = zext i8 %1993 to i32
  br label %cond.end.4777

cond.false.4732:                                  ; preds = %if.then.4724
  %1994 = load i8*, i8** %d, align 8
  %arrayidx4733 = getelementptr inbounds i8, i8* %1994, i64 0
  %1995 = load i8, i8* %arrayidx4733, align 1
  %conv4734 = zext i8 %1995 to i32
  %and4735 = and i32 %conv4734, 32
  %tobool4736 = icmp ne i32 %and4735, 0
  br i1 %tobool4736, label %cond.false.4752, label %cond.true.4737

cond.true.4737:                                   ; preds = %cond.false.4732
  store i32 2, i32* %len4720, align 4
  %1996 = load i8*, i8** %d, align 8
  %arrayidx4738 = getelementptr inbounds i8, i8* %1996, i64 0
  %1997 = load i8, i8* %arrayidx4738, align 1
  %conv4739 = zext i8 %1997 to i32
  %and4740 = and i32 %conv4739, 31
  %shl4741 = shl i32 %and4740, 6
  %1998 = load i8*, i8** %d, align 8
  %arrayidx4742 = getelementptr inbounds i8, i8* %1998, i64 1
  %1999 = load i8, i8* %arrayidx4742, align 1
  %conv4743 = zext i8 %1999 to i32
  %and4744 = and i32 %conv4743, 63
  %or4745 = or i32 %shl4741, %and4744
  %2000 = load i8*, i8** %d, align 8
  %arrayidx4746 = getelementptr inbounds i8, i8* %2000, i64 0
  %2001 = load i8, i8* %arrayidx4746, align 1
  %conv4747 = zext i8 %2001 to i32
  %cmp4748 = icmp slt i32 %conv4747, 194
  %cond4750 = select i1 %cmp4748, i32 4194176, i32 0
  %add4751 = add nsw i32 %or4745, %cond4750
  br label %cond.end.4775

cond.false.4752:                                  ; preds = %cond.false.4732
  %2002 = load i8*, i8** %d, align 8
  %arrayidx4753 = getelementptr inbounds i8, i8* %2002, i64 0
  %2003 = load i8, i8* %arrayidx4753, align 1
  %conv4754 = zext i8 %2003 to i32
  %and4755 = and i32 %conv4754, 16
  %tobool4756 = icmp ne i32 %and4755, 0
  br i1 %tobool4756, label %cond.false.4771, label %cond.true.4757

cond.true.4757:                                   ; preds = %cond.false.4752
  store i32 3, i32* %len4720, align 4
  %2004 = load i8*, i8** %d, align 8
  %arrayidx4758 = getelementptr inbounds i8, i8* %2004, i64 0
  %2005 = load i8, i8* %arrayidx4758, align 1
  %conv4759 = zext i8 %2005 to i32
  %and4760 = and i32 %conv4759, 15
  %shl4761 = shl i32 %and4760, 12
  %2006 = load i8*, i8** %d, align 8
  %arrayidx4762 = getelementptr inbounds i8, i8* %2006, i64 1
  %2007 = load i8, i8* %arrayidx4762, align 1
  %conv4763 = zext i8 %2007 to i32
  %and4764 = and i32 %conv4763, 63
  %shl4765 = shl i32 %and4764, 6
  %or4766 = or i32 %shl4761, %shl4765
  %2008 = load i8*, i8** %d, align 8
  %arrayidx4767 = getelementptr inbounds i8, i8* %2008, i64 2
  %2009 = load i8, i8* %arrayidx4767, align 1
  %conv4768 = zext i8 %2009 to i32
  %and4769 = and i32 %conv4768, 63
  %or4770 = or i32 %or4766, %and4769
  br label %cond.end.4773

cond.false.4771:                                  ; preds = %cond.false.4752
  %2010 = load i8*, i8** %d, align 8
  %call4772 = call i32 @string_char(i8* %2010, i8** null, i32* %len4720)
  br label %cond.end.4773

cond.end.4773:                                    ; preds = %cond.false.4771, %cond.true.4757
  %cond4774 = phi i32 [ %or4770, %cond.true.4757 ], [ %call4772, %cond.false.4771 ]
  br label %cond.end.4775

cond.end.4775:                                    ; preds = %cond.end.4773, %cond.true.4737
  %cond4776 = phi i32 [ %add4751, %cond.true.4737 ], [ %cond4774, %cond.end.4773 ]
  br label %cond.end.4777

cond.end.4777:                                    ; preds = %cond.end.4775, %cond.true.4729
  %cond4778 = phi i32 [ %conv4731, %cond.true.4729 ], [ %cond4776, %cond.end.4775 ]
  store i32 %cond4778, i32* %c4721, align 4
  br label %if.end.4795

if.else.4779:                                     ; preds = %do.body.4722
  %2011 = load i8*, i8** %d, align 8
  %2012 = load i8, i8* %2011, align 1
  %conv4780 = zext i8 %2012 to i32
  store i32 %conv4780, i32* %c4721, align 4
  store i32 1, i32* %len4720, align 4
  br i1 true, label %cond.true.4781, label %cond.false.4785

cond.true.4781:                                   ; preds = %if.else.4779
  %2013 = load i32, i32* %c4721, align 4
  %add4782 = add i32 %2013, 0
  %cmp4783 = icmp ult i32 %add4782, 128
  br i1 %cmp4783, label %cond.true.4790, label %cond.false.4791

cond.false.4785:                                  ; preds = %if.else.4779
  %2014 = load i32, i32* %c4721, align 4
  %conv4786 = sext i32 %2014 to i64
  %add4787 = add i64 %conv4786, 0
  %cmp4788 = icmp ult i64 %add4787, 128
  br i1 %cmp4788, label %cond.true.4790, label %cond.false.4791

cond.true.4790:                                   ; preds = %cond.false.4785, %cond.true.4781
  %2015 = load i32, i32* %c4721, align 4
  br label %cond.end.4793

cond.false.4791:                                  ; preds = %cond.false.4785, %cond.true.4781
  %2016 = load i32, i32* %c4721, align 4
  %add4792 = add nsw i32 %2016, 4194048
  br label %cond.end.4793

cond.end.4793:                                    ; preds = %cond.false.4791, %cond.true.4790
  %cond4794 = phi i32 [ %2015, %cond.true.4790 ], [ %add4792, %cond.false.4791 ]
  store i32 %cond4794, i32* %c4721, align 4
  br label %if.end.4795

if.end.4795:                                      ; preds = %cond.end.4793, %cond.end.4777
  br label %do.end.4797

do.end.4797:                                      ; preds = %if.end.4795
  %2017 = load i32, i32* %c4721, align 4
  %2018 = load i32, i32* %mcnt, align 4
  %call4798 = call zeroext i1 @CHAR_HAS_CATEGORY(i32 %2017, i32 %2018)
  %lnot4799 = xor i1 %call4798, true
  %lnot.ext4800 = zext i1 %lnot4799 to i32
  %2019 = load i8, i8* %not4703, align 1
  %conv4801 = sext i8 %2019 to i32
  %xor4802 = xor i32 %lnot.ext4800, %conv4801
  %tobool4803 = icmp ne i32 %xor4802, 0
  br i1 %tobool4803, label %if.then.4804, label %if.end.4805

if.then.4804:                                     ; preds = %do.end.4797
  br label %fail

if.end.4805:                                      ; preds = %do.end.4797
  %2020 = load i32, i32* %len4720, align 4
  %2021 = load i8*, i8** %d, align 8
  %idx.ext4806 = sext i32 %2020 to i64
  %add.ptr4807 = getelementptr inbounds i8, i8* %2021, i64 %idx.ext4806
  store i8* %add.ptr4807, i8** %d, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.578
  call void @abort() #6
  unreachable

sw.epilog:                                        ; preds = %if.end.4805, %if.end.4701, %if.end.4671, %if.end.4641, %if.end.4614, %if.end.4480, %if.end.4229, %if.end.3974, %if.end.3691, %if.then.3402, %do.end.3103, %if.end.2957, %if.end.2805, %do.end.2650, %if.end.2627, %do.end.2602, %if.end.2468, %if.end.2286, %do.end.2109, %if.then.1974, %if.then.1969, %if.then.1956, %if.then.1946, %if.then.1934, %if.then.1815, %for.end.1798, %sw.bb.1684, %do.end.1678, %if.end.1547, %if.end.989, %if.end.895, %sw.bb
  br label %for.cond.169

fail:                                             ; preds = %sw.bb.5044, %if.then.4804, %if.then.4717, %if.then.4700, %if.then.4670, %if.then.4640, %if.then.4613, %if.then.4496, %if.then.4477, %if.then.4400, %if.then.4240, %if.then.4226, %if.then.4092, %if.then.4022, %if.then.3978, %if.then.3971, %if.then.3860, %if.then.3702, %if.then.3688, %if.then.3534, %if.then.3452, %if.then.3407, %if.else.3403, %if.end.1975, %if.end.1970, %if.end.1958, %if.end.1936, %if.then.1794, %if.then.1769, %if.then.1700, %if.then.1546, %if.then.1019, %if.then.988, %if.then.905, %if.then.887, %if.then.748, %if.then.728, %if.then.591, %if.end.234
  br label %do.body.4808

do.body.4808:                                     ; preds = %fail
  %2022 = load i8, i8* @immediate_quit, align 1
  %tobool4809 = trunc i8 %2022 to i1
  br i1 %tobool4809, label %if.then.4810, label %if.end.4827

if.then.4810:                                     ; preds = %do.body.4808
  br label %do.body.4811

do.body.4811:                                     ; preds = %if.then.4810
  %2023 = load i64, i64* getelementptr inbounds (%struct.emacs_globals, %struct.emacs_globals* @globals, i32 0, i32 241), align 8
  %call4812 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp4813 = icmp eq i64 %2023, %call4812
  br i1 %cmp4813, label %if.else.4820, label %land.lhs.true.4815

land.lhs.true.4815:                               ; preds = %do.body.4811
  %2024 = load i64, i64* getelementptr inbounds (%struct.emacs_globals, %struct.emacs_globals* @globals, i32 0, i32 138), align 8
  %call4816 = call i64 @builtin_lisp_symbol(i32 0)
  %cmp4817 = icmp eq i64 %2024, %call4816
  br i1 %cmp4817, label %if.then.4819, label %if.else.4820

if.then.4819:                                     ; preds = %land.lhs.true.4815
  call void @process_quit_flag()
  br label %if.end.4824

if.else.4820:                                     ; preds = %land.lhs.true.4815, %do.body.4811
  %2025 = load volatile i8, i8* @pending_signals, align 1
  %tobool4821 = trunc i8 %2025 to i1
  br i1 %tobool4821, label %if.then.4822, label %if.end.4823

if.then.4822:                                     ; preds = %if.else.4820
  call void @process_pending_signals()
  br label %if.end.4823

if.end.4823:                                      ; preds = %if.then.4822, %if.else.4820
  br label %if.end.4824

if.end.4824:                                      ; preds = %if.end.4823, %if.then.4819
  br label %do.end.4826

do.end.4826:                                      ; preds = %if.end.4824
  br label %if.end.4827

if.end.4827:                                      ; preds = %do.end.4826, %do.body.4808
  br label %do.end.4829

do.end.4829:                                      ; preds = %if.end.4827
  %frame4830 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %2026 = load i64, i64* %frame4830, align 8
  %cmp4831 = icmp eq i64 %2026, 0
  br i1 %cmp4831, label %if.else.5054, label %if.then.4833

if.then.4833:                                     ; preds = %do.end.4829
  br label %do.body.4834

do.body.4834:                                     ; preds = %if.then.4833
  br label %while.cond.4835

while.cond.4835:                                  ; preds = %do.end.4884, %do.body.4834
  %frame4836 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %2027 = load i64, i64* %frame4836, align 8
  %avail4837 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2028 = load i64, i64* %avail4837, align 8
  %cmp4838 = icmp ult i64 %2027, %2028
  br i1 %cmp4838, label %while.body.4840, label %while.end.4885

while.body.4840:                                  ; preds = %while.cond.4835
  br label %do.body.4841

do.body.4841:                                     ; preds = %while.body.4840
  %avail4842 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2029 = load i64, i64* %avail4842, align 8
  %dec4843 = add i64 %2029, -1
  store i64 %dec4843, i64* %avail4842, align 8
  %stack4844 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2030 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4844, align 8
  %arrayidx4845 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2030, i64 %dec4843
  %integer4846 = bitcast %union.fail_stack_elt* %arrayidx4845 to i64*
  %2031 = load i64, i64* %integer4846, align 8
  store i64 %2031, i64* %pfreg, align 8
  %2032 = load i64, i64* %pfreg, align 8
  %cmp4847 = icmp eq i64 %2032, -1
  br i1 %cmp4847, label %if.then.4849, label %if.else.4869

if.then.4849:                                     ; preds = %do.body.4841
  %avail4850 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2033 = load i64, i64* %avail4850, align 8
  %dec4851 = add i64 %2033, -1
  store i64 %dec4851, i64* %avail4850, align 8
  %stack4852 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2034 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4852, align 8
  %arrayidx4853 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2034, i64 %dec4851
  %pointer4854 = bitcast %union.fail_stack_elt* %arrayidx4853 to i8**
  %2035 = load i8*, i8** %pointer4854, align 8
  store i8* %2035, i8** %ptr, align 8
  %avail4855 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2036 = load i64, i64* %avail4855, align 8
  %dec4856 = add i64 %2036, -1
  store i64 %dec4856, i64* %avail4855, align 8
  %stack4857 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2037 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4857, align 8
  %arrayidx4858 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2037, i64 %dec4856
  %integer4859 = bitcast %union.fail_stack_elt* %arrayidx4858 to i64*
  %2038 = load i64, i64* %integer4859, align 8
  store i64 %2038, i64* %pfreg, align 8
  br label %do.body.4860

do.body.4860:                                     ; preds = %if.then.4849
  %2039 = load i64, i64* %pfreg, align 8
  %and4861 = and i64 %2039, 255
  %conv4862 = trunc i64 %and4861 to i8
  %2040 = load i8*, i8** %ptr, align 8
  %arrayidx4863 = getelementptr inbounds i8, i8* %2040, i64 0
  store i8 %conv4862, i8* %arrayidx4863, align 1
  %2041 = load i64, i64* %pfreg, align 8
  %shr4864 = ashr i64 %2041, 8
  %conv4865 = trunc i64 %shr4864 to i8
  %2042 = load i8*, i8** %ptr, align 8
  %arrayidx4866 = getelementptr inbounds i8, i8* %2042, i64 1
  store i8 %conv4865, i8* %arrayidx4866, align 1
  br label %do.end.4868

do.end.4868:                                      ; preds = %do.body.4860
  br label %if.end.4882

if.else.4869:                                     ; preds = %do.body.4841
  %avail4870 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2043 = load i64, i64* %avail4870, align 8
  %dec4871 = add i64 %2043, -1
  store i64 %dec4871, i64* %avail4870, align 8
  %stack4872 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2044 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4872, align 8
  %arrayidx4873 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2044, i64 %dec4871
  %pointer4874 = bitcast %union.fail_stack_elt* %arrayidx4873 to i8**
  %2045 = load i8*, i8** %pointer4874, align 8
  %2046 = load i64, i64* %pfreg, align 8
  %2047 = load i8**, i8*** %regend, align 8
  %arrayidx4875 = getelementptr inbounds i8*, i8** %2047, i64 %2046
  store i8* %2045, i8** %arrayidx4875, align 8
  %avail4876 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2048 = load i64, i64* %avail4876, align 8
  %dec4877 = add i64 %2048, -1
  store i64 %dec4877, i64* %avail4876, align 8
  %stack4878 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2049 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4878, align 8
  %arrayidx4879 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2049, i64 %dec4877
  %pointer4880 = bitcast %union.fail_stack_elt* %arrayidx4879 to i8**
  %2050 = load i8*, i8** %pointer4880, align 8
  %2051 = load i64, i64* %pfreg, align 8
  %2052 = load i8**, i8*** %regstart, align 8
  %arrayidx4881 = getelementptr inbounds i8*, i8** %2052, i64 %2051
  store i8* %2050, i8** %arrayidx4881, align 8
  br label %if.end.4882

if.end.4882:                                      ; preds = %if.else.4869, %do.end.4868
  br label %do.end.4884

do.end.4884:                                      ; preds = %if.end.4882
  br label %while.cond.4835

while.end.4885:                                   ; preds = %while.cond.4835
  %avail4886 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2053 = load i64, i64* %avail4886, align 8
  %dec4887 = add i64 %2053, -1
  store i64 %dec4887, i64* %avail4886, align 8
  %stack4888 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2054 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4888, align 8
  %arrayidx4889 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2054, i64 %dec4887
  %pointer4890 = bitcast %union.fail_stack_elt* %arrayidx4889 to i8**
  %2055 = load i8*, i8** %pointer4890, align 8
  store i8* %2055, i8** %pat, align 8
  %avail4891 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2056 = load i64, i64* %avail4891, align 8
  %dec4892 = add i64 %2056, -1
  store i64 %dec4892, i64* %avail4891, align 8
  %stack4893 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2057 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4893, align 8
  %arrayidx4894 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2057, i64 %dec4892
  %pointer4895 = bitcast %union.fail_stack_elt* %arrayidx4894 to i8**
  %2058 = load i8*, i8** %pointer4895, align 8
  store i8* %2058, i8** %str, align 8
  %avail4896 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2059 = load i64, i64* %avail4896, align 8
  %dec4897 = add i64 %2059, -1
  store i64 %dec4897, i64* %avail4896, align 8
  %stack4898 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2060 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4898, align 8
  %arrayidx4899 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2060, i64 %dec4897
  %integer4900 = bitcast %union.fail_stack_elt* %arrayidx4899 to i64*
  %2061 = load i64, i64* %integer4900, align 8
  %frame4901 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %2061, i64* %frame4901, align 8
  br label %do.end.4903

do.end.4903:                                      ; preds = %while.end.4885
  %2062 = load i8*, i8** %pat, align 8
  %incdec.ptr4904 = getelementptr inbounds i8, i8* %2062, i32 1
  store i8* %incdec.ptr4904, i8** %pat, align 8
  %2063 = load i8, i8* %2062, align 1
  %conv4905 = zext i8 %2063 to i32
  switch i32 %conv4905, label %sw.default.5045 [
    i32 15, label %sw.bb.4906
    i32 17, label %sw.bb.4907
    i32 16, label %sw.bb.5040
    i32 14, label %sw.bb.5040
    i32 19, label %sw.bb.5040
    i32 0, label %sw.bb.5044
  ]

sw.bb.4906:                                       ; preds = %do.end.4903
  br label %continue_failure_jump

sw.bb.4907:                                       ; preds = %do.end.4903
  br label %do.body.4908

do.body.4908:                                     ; preds = %sw.bb.4907
  br label %while.cond.4910

while.cond.4910:                                  ; preds = %if.end.5017, %do.body.4908
  %size4911 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2064 = load i64, i64* %size4911, align 8
  %avail4912 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2065 = load i64, i64* %avail4912, align 8
  %sub4913 = sub i64 %2064, %2065
  %cmp4914 = icmp ule i64 %sub4913, 3
  br i1 %cmp4914, label %while.body.4916, label %while.end.5018

while.body.4916:                                  ; preds = %while.cond.4910
  %size4917 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2066 = load i64, i64* %size4917, align 8
  %mul4918 = mul i64 %2066, 8
  %2067 = load i64, i64* @re_max_failures, align 8
  %mul4919 = mul i64 %2067, 20
  %cmp4920 = icmp uge i64 %mul4918, %mul4919
  br i1 %cmp4920, label %cond.true.4922, label %cond.false.4923

cond.true.4922:                                   ; preds = %while.body.4916
  br i1 false, label %if.end.5017, label %if.then.5016

cond.false.4923:                                  ; preds = %while.body.4916
  %2068 = load i64, i64* @re_max_failures, align 8
  %mul4924 = mul i64 %2068, 20
  %size4925 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2069 = load i64, i64* %size4925, align 8
  %mul4926 = mul i64 %2069, 8
  %mul4927 = mul i64 %mul4926, 4
  %cmp4928 = icmp ult i64 %mul4924, %mul4927
  br i1 %cmp4928, label %cond.true.4930, label %cond.false.4932

cond.true.4930:                                   ; preds = %cond.false.4923
  %2070 = load i64, i64* @re_max_failures, align 8
  %mul4931 = mul i64 %2070, 20
  br label %cond.end.4936

cond.false.4932:                                  ; preds = %cond.false.4923
  %size4933 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2071 = load i64, i64* %size4933, align 8
  %mul4934 = mul i64 %2071, 8
  %mul4935 = mul i64 %mul4934, 4
  br label %cond.end.4936

cond.end.4936:                                    ; preds = %cond.false.4932, %cond.true.4930
  %cond4937 = phi i64 [ %mul4931, %cond.true.4930 ], [ %mul4935, %cond.false.4932 ]
  %2072 = load i64, i64* %sa_avail, align 8
  %cmp4938 = icmp ule i64 %cond4937, %2072
  br i1 %cmp4938, label %cond.true.4940, label %cond.false.4970

cond.true.4940:                                   ; preds = %cond.end.4936
  %2073 = load i64, i64* @re_max_failures, align 8
  %mul4941 = mul i64 %2073, 20
  %size4942 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2074 = load i64, i64* %size4942, align 8
  %mul4943 = mul i64 %2074, 8
  %mul4944 = mul i64 %mul4943, 4
  %cmp4945 = icmp ult i64 %mul4941, %mul4944
  br i1 %cmp4945, label %cond.true.4947, label %cond.false.4949

cond.true.4947:                                   ; preds = %cond.true.4940
  %2075 = load i64, i64* @re_max_failures, align 8
  %mul4948 = mul i64 %2075, 20
  br label %cond.end.4953

cond.false.4949:                                  ; preds = %cond.true.4940
  %size4950 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2076 = load i64, i64* %size4950, align 8
  %mul4951 = mul i64 %2076, 8
  %mul4952 = mul i64 %mul4951, 4
  br label %cond.end.4953

cond.end.4953:                                    ; preds = %cond.false.4949, %cond.true.4947
  %cond4954 = phi i64 [ %mul4948, %cond.true.4947 ], [ %mul4952, %cond.false.4949 ]
  %2077 = load i64, i64* %sa_avail, align 8
  %sub4955 = sub i64 %2077, %cond4954
  store i64 %sub4955, i64* %sa_avail, align 8
  %2078 = load i64, i64* @re_max_failures, align 8
  %mul4956 = mul i64 %2078, 20
  %size4957 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2079 = load i64, i64* %size4957, align 8
  %mul4958 = mul i64 %2079, 8
  %mul4959 = mul i64 %mul4958, 4
  %cmp4960 = icmp ult i64 %mul4956, %mul4959
  br i1 %cmp4960, label %cond.true.4962, label %cond.false.4964

cond.true.4962:                                   ; preds = %cond.end.4953
  %2080 = load i64, i64* @re_max_failures, align 8
  %mul4963 = mul i64 %2080, 20
  br label %cond.end.4968

cond.false.4964:                                  ; preds = %cond.end.4953
  %size4965 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2081 = load i64, i64* %size4965, align 8
  %mul4966 = mul i64 %2081, 8
  %mul4967 = mul i64 %mul4966, 4
  br label %cond.end.4968

cond.end.4968:                                    ; preds = %cond.false.4964, %cond.true.4962
  %cond4969 = phi i64 [ %mul4963, %cond.true.4962 ], [ %mul4967, %cond.false.4964 ]
  %2082 = alloca i8, i64 %cond4969
  br label %cond.end.4986

cond.false.4970:                                  ; preds = %cond.end.4936
  store i8 1, i8* %sa_must_free, align 1
  %2083 = load i64, i64* @re_max_failures, align 8
  %mul4971 = mul i64 %2083, 20
  %size4972 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2084 = load i64, i64* %size4972, align 8
  %mul4973 = mul i64 %2084, 8
  %mul4974 = mul i64 %mul4973, 4
  %cmp4975 = icmp ult i64 %mul4971, %mul4974
  br i1 %cmp4975, label %cond.true.4977, label %cond.false.4979

cond.true.4977:                                   ; preds = %cond.false.4970
  %2085 = load i64, i64* @re_max_failures, align 8
  %mul4978 = mul i64 %2085, 20
  br label %cond.end.4983

cond.false.4979:                                  ; preds = %cond.false.4970
  %size4980 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2086 = load i64, i64* %size4980, align 8
  %mul4981 = mul i64 %2086, 8
  %mul4982 = mul i64 %mul4981, 4
  br label %cond.end.4983

cond.end.4983:                                    ; preds = %cond.false.4979, %cond.true.4977
  %cond4984 = phi i64 [ %mul4978, %cond.true.4977 ], [ %mul4982, %cond.false.4979 ]
  %call4985 = call i8* @record_xmalloc(i64 %cond4984)
  br label %cond.end.4986

cond.end.4986:                                    ; preds = %cond.end.4983, %cond.end.4968
  %cond4987 = phi i8* [ %2082, %cond.end.4968 ], [ %call4985, %cond.end.4983 ]
  store i8* %cond4987, i8** %destination4909, align 8
  %2087 = load i8*, i8** %destination4909, align 8
  %stack4988 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2088 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4988, align 8
  %2089 = bitcast %union.fail_stack_elt* %2088 to i8*
  %size4989 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2090 = load i64, i64* %size4989, align 8
  %mul4990 = mul i64 %2090, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2087, i8* %2089, i64 %mul4990, i32 1, i1 false)
  %2091 = bitcast i8* %2087 to %union.fail_stack_elt*
  %stack4991 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  store %union.fail_stack_elt* %2091, %union.fail_stack_elt** %stack4991, align 8
  %stack4992 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2092 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack4992, align 8
  %cmp4993 = icmp eq %union.fail_stack_elt* %2092, null
  br i1 %cmp4993, label %cond.true.4995, label %cond.false.4996

cond.true.4995:                                   ; preds = %cond.end.4986
  br label %cond.end.5013

cond.false.4996:                                  ; preds = %cond.end.4986
  %2093 = load i64, i64* @re_max_failures, align 8
  %mul4997 = mul i64 %2093, 20
  %size4998 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2094 = load i64, i64* %size4998, align 8
  %mul4999 = mul i64 %2094, 8
  %mul5000 = mul i64 %mul4999, 4
  %cmp5001 = icmp ult i64 %mul4997, %mul5000
  br i1 %cmp5001, label %cond.true.5003, label %cond.false.5005

cond.true.5003:                                   ; preds = %cond.false.4996
  %2095 = load i64, i64* @re_max_failures, align 8
  %mul5004 = mul i64 %2095, 20
  br label %cond.end.5009

cond.false.5005:                                  ; preds = %cond.false.4996
  %size5006 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  %2096 = load i64, i64* %size5006, align 8
  %mul5007 = mul i64 %2096, 8
  %mul5008 = mul i64 %mul5007, 4
  br label %cond.end.5009

cond.end.5009:                                    ; preds = %cond.false.5005, %cond.true.5003
  %cond5010 = phi i64 [ %mul5004, %cond.true.5003 ], [ %mul5008, %cond.false.5005 ]
  %div5011 = udiv i64 %cond5010, 8
  %size5012 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 1
  store i64 %div5011, i64* %size5012, align 8
  br label %cond.end.5013

cond.end.5013:                                    ; preds = %cond.end.5009, %cond.true.4995
  %cond5014 = phi i32 [ 0, %cond.true.4995 ], [ 1, %cond.end.5009 ]
  %tobool5015 = icmp ne i32 %cond5014, 0
  br i1 %tobool5015, label %if.end.5017, label %if.then.5016

if.then.5016:                                     ; preds = %cond.end.5013, %cond.true.4922
  store i64 -2, i64* %retval
  br label %return

if.end.5017:                                      ; preds = %cond.end.5013, %cond.true.4922
  br label %while.cond.4910

while.end.5018:                                   ; preds = %while.cond.4910
  %frame5019 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  %2097 = load i64, i64* %frame5019, align 8
  %avail5020 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2098 = load i64, i64* %avail5020, align 8
  %inc5021 = add i64 %2098, 1
  store i64 %inc5021, i64* %avail5020, align 8
  %stack5022 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2099 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack5022, align 8
  %arrayidx5023 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2099, i64 %2098
  %integer5024 = bitcast %union.fail_stack_elt* %arrayidx5023 to i64*
  store i64 %2097, i64* %integer5024, align 8
  %2100 = load i8*, i8** %str, align 8
  %avail5025 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2101 = load i64, i64* %avail5025, align 8
  %inc5026 = add i64 %2101, 1
  store i64 %inc5026, i64* %avail5025, align 8
  %stack5027 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2102 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack5027, align 8
  %arrayidx5028 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2102, i64 %2101
  %pointer5029 = bitcast %union.fail_stack_elt* %arrayidx5028 to i8**
  store i8* %2100, i8** %pointer5029, align 8
  %2103 = load i8*, i8** %pat, align 8
  %add.ptr5030 = getelementptr inbounds i8, i8* %2103, i64 -2
  %avail5031 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2104 = load i64, i64* %avail5031, align 8
  %inc5032 = add i64 %2104, 1
  store i64 %inc5032, i64* %avail5031, align 8
  %stack5033 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 0
  %2105 = load %union.fail_stack_elt*, %union.fail_stack_elt** %stack5033, align 8
  %arrayidx5034 = getelementptr inbounds %union.fail_stack_elt, %union.fail_stack_elt* %2105, i64 %2104
  %pointer5035 = bitcast %union.fail_stack_elt* %arrayidx5034 to i8**
  store i8* %add.ptr5030, i8** %pointer5035, align 8
  %avail5036 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 2
  %2106 = load i64, i64* %avail5036, align 8
  %frame5037 = getelementptr inbounds %struct.fail_stack_type, %struct.fail_stack_type* %fail_stack, i32 0, i32 3
  store i64 %2106, i64* %frame5037, align 8
  br label %do.end.5039

do.end.5039:                                      ; preds = %while.end.5018
  br label %sw.bb.5040

sw.bb.5040:                                       ; preds = %do.end.4903, %do.end.4903, %do.end.4903, %do.end.5039
  %2107 = load i8*, i8** %str, align 8
  store i8* %2107, i8** %d, align 8
  br label %continue_failure_jump

continue_failure_jump:                            ; preds = %sw.bb.5040, %sw.bb.4906
  %call5041 = call i32 @extract_number_and_incr(i8** %pat)
  store i32 %call5041, i32* %mcnt, align 4
  %2108 = load i8*, i8** %pat, align 8
  %2109 = load i32, i32* %mcnt, align 4
  %idx.ext5042 = sext i32 %2109 to i64
  %add.ptr5043 = getelementptr inbounds i8, i8* %2108, i64 %idx.ext5042
  store i8* %add.ptr5043, i8** %p, align 8
  br label %sw.epilog.5046

sw.bb.5044:                                       ; preds = %do.end.4903
  br label %fail

sw.default.5045:                                  ; preds = %do.end.4903
  call void @abort() #6
  unreachable

sw.epilog.5046:                                   ; preds = %continue_failure_jump
  %2110 = load i8*, i8** %d, align 8
  %2111 = load i8*, i8** %string1.addr, align 8
  %cmp5047 = icmp uge i8* %2110, %2111
  br i1 %cmp5047, label %land.lhs.true.5049, label %if.end.5053

land.lhs.true.5049:                               ; preds = %sw.epilog.5046
  %2112 = load i8*, i8** %d, align 8
  %2113 = load i8*, i8** %end1, align 8
  %cmp5050 = icmp ule i8* %2112, %2113
  br i1 %cmp5050, label %if.then.5052, label %if.end.5053

if.then.5052:                                     ; preds = %land.lhs.true.5049
  %2114 = load i8*, i8** %end_match_1, align 8
  store i8* %2114, i8** %dend, align 8
  br label %if.end.5053

if.end.5053:                                      ; preds = %if.then.5052, %land.lhs.true.5049, %sw.epilog.5046
  br label %if.end.5055

if.else.5054:                                     ; preds = %do.end.4829
  br label %for.end.5056

if.end.5055:                                      ; preds = %if.end.5053
  br label %for.cond.169

for.end.5056:                                     ; preds = %if.else.5054
  %2115 = load i32, i32* %best_regs_set, align 4
  %tobool5057 = icmp ne i32 %2115, 0
  br i1 %tobool5057, label %if.then.5058, label %if.end.5059

if.then.5058:                                     ; preds = %for.end.5056
  br label %restore_best_regs

if.end.5059:                                      ; preds = %for.end.5056
  br label %do.body.5060

do.body.5060:                                     ; preds = %if.end.5059
  br label %do.body.5061

do.body.5061:                                     ; preds = %do.body.5060
  %2116 = load i8**, i8*** %regstart, align 8
  %tobool5062 = icmp ne i8** %2116, null
  br i1 %tobool5062, label %if.then.5063, label %if.end.5064

if.then.5063:                                     ; preds = %do.body.5061
  store i8** null, i8*** %regstart, align 8
  br label %if.end.5064

if.end.5064:                                      ; preds = %if.then.5063, %do.body.5061
  br label %do.end.5066

do.end.5066:                                      ; preds = %if.end.5064
  br label %do.body.5067

do.body.5067:                                     ; preds = %do.end.5066
  %2117 = load i8**, i8*** %regend, align 8
  %tobool5068 = icmp ne i8** %2117, null
  br i1 %tobool5068, label %if.then.5069, label %if.end.5070

if.then.5069:                                     ; preds = %do.body.5067
  store i8** null, i8*** %regend, align 8
  br label %if.end.5070

if.end.5070:                                      ; preds = %if.then.5069, %do.body.5067
  br label %do.end.5072

do.end.5072:                                      ; preds = %if.end.5070
  br label %do.body.5073

do.body.5073:                                     ; preds = %do.end.5072
  %2118 = load i8**, i8*** %best_regstart, align 8
  %tobool5074 = icmp ne i8** %2118, null
  br i1 %tobool5074, label %if.then.5075, label %if.end.5076

if.then.5075:                                     ; preds = %do.body.5073
  store i8** null, i8*** %best_regstart, align 8
  br label %if.end.5076

if.end.5076:                                      ; preds = %if.then.5075, %do.body.5073
  br label %do.end.5078

do.end.5078:                                      ; preds = %if.end.5076
  br label %do.body.5079

do.body.5079:                                     ; preds = %do.end.5078
  %2119 = load i8**, i8*** %best_regend, align 8
  %tobool5080 = icmp ne i8** %2119, null
  br i1 %tobool5080, label %if.then.5081, label %if.end.5082

if.then.5081:                                     ; preds = %do.body.5079
  store i8** null, i8*** %best_regend, align 8
  br label %if.end.5082

if.end.5082:                                      ; preds = %if.then.5081, %do.body.5079
  br label %do.end.5084

do.end.5084:                                      ; preds = %if.end.5082
  br label %do.body.5085

do.body.5085:                                     ; preds = %do.end.5084
  %2120 = load i8, i8* %sa_must_free, align 1
  %tobool5086 = trunc i8 %2120 to i1
  br i1 %tobool5086, label %if.then.5087, label %if.end.5090

if.then.5087:                                     ; preds = %do.body.5085
  store i8 0, i8* %sa_must_free, align 1
  %2121 = load i64, i64* %sa_count, align 8
  %call5088 = call i64 @builtin_lisp_symbol(i32 0)
  %call5089 = call i64 @unbind_to(i64 %2121, i64 %call5088)
  br label %if.end.5090

if.end.5090:                                      ; preds = %if.then.5087, %do.body.5085
  br label %do.end.5092

do.end.5092:                                      ; preds = %if.end.5090
  br label %do.end.5094

do.end.5094:                                      ; preds = %do.end.5092
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %do.end.5094, %if.then.5016, %if.then.3073, %if.then.2924, %if.then.2773, %if.then.2579, %if.then.2444, %if.then.2262, %if.then.2086, %if.then.1659, %do.end.577, %do.end.403, %do.end.332, %do.end.135, %do.end.98, %if.then
  %2122 = load i64, i64* %retval
  ret i64 %2122
}

; Function Attrs: nounwind uwtable
define i64 @re_match_2(%struct.re_pattern_buffer* %bufp, i8* %string1, i64 %size1, i8* %string2, i64 %size2, i64 %pos, %struct.re_registers* %regs, i64 %stop) #0 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i64, align 8
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i64, align 8
  %pos.addr = alloca i64, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i64, align 8
  %result = alloca i64, align 8
  %charpos = alloca i64, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store i8* %string1, i8** %string1.addr, align 8
  store i64 %size1, i64* %size1.addr, align 8
  store i8* %string2, i8** %string2.addr, align 8
  store i64 %size2, i64* %size2.addr, align 8
  store i64 %pos, i64* %pos.addr, align 8
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  store i64 %stop, i64* %stop.addr, align 8
  %0 = load i64, i64* @re_match_object, align 8
  store i64 %0, i64* getelementptr inbounds (%struct.gl_state_s, %struct.gl_state_s* @gl_state, i32 0, i32 0), align 8
  %1 = load i64, i64* %pos.addr, align 8
  %2 = load i64, i64* @re_match_object, align 8
  %call = call i64 @builtin_lisp_symbol(i32 0)
  %cmp = icmp eq i64 %2, %call
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %3 = load i64, i64* @re_match_object, align 8
  %call1 = call zeroext i1 @BUFFERP(i64 %3)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32
  %conv = sext i32 %lor.ext to i64
  %add = add nsw i64 %1, %conv
  %call2 = call i64 @SYNTAX_TABLE_BYTE_TO_CHAR(i64 %add)
  store i64 %call2, i64* %charpos, align 8
  %5 = load i64, i64* @re_match_object, align 8
  %6 = load i64, i64* %charpos, align 8
  call void @SETUP_SYNTAX_TABLE_FOR_OBJECT(i64 %5, i64 %6, i64 1)
  %7 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %8 = load i8*, i8** %string1.addr, align 8
  %9 = load i64, i64* %size1.addr, align 8
  %10 = load i8*, i8** %string2.addr, align 8
  %11 = load i64, i64* %size2.addr, align 8
  %12 = load i64, i64* %pos.addr, align 8
  %13 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8
  %14 = load i64, i64* %stop.addr, align 8
  %call3 = call i64 @re_match_2_internal(%struct.re_pattern_buffer* %7, i8* %8, i64 %9, i8* %10, i64 %11, i64 %12, %struct.re_registers* %13, i64 %14)
  store i64 %call3, i64* %result, align 8
  %15 = load i64, i64* %result, align 8
  ret i64 %15
}

; Function Attrs: nounwind uwtable
define i8* @re_compile_pattern(i8* %pattern, i64 %length, %struct.re_pattern_buffer* %bufp) #0 {
entry:
  %retval = alloca i8*, align 8
  %pattern.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %ret = alloca i32, align 4
  store i8* %pattern, i8** %pattern.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 7
  %bf.load = load i16, i16* %regs_allocated, align 8
  %bf.clear = and i16 %bf.load, -7
  store i16 %bf.clear, i16* %regs_allocated, align 8
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 7
  %bf.load1 = load i16, i16* %no_sub, align 8
  %bf.clear2 = and i16 %bf.load1, -17
  store i16 %bf.clear2, i16* %no_sub, align 8
  %2 = load i8*, i8** %pattern.addr, align 8
  %3 = load i64, i64* %length.addr, align 8
  %4 = load i64, i64* @re_syntax_options, align 8
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %call = call i32 @regex_compile(i8* %2, i64 %3, i64 %4, %struct.re_pattern_buffer* %5)
  store i32 %call, i32* %ret, align 4
  %6 = load i32, i32* %ret, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %ret, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [18 x i8*], [18 x i8*]* @re_error_msgid, i32 0, i64 %idxprom
  %8 = load i8*, i8** %arrayidx, align 8
  store i8* %8, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load i8*, i8** %retval
  ret i8* %9
}

; Function Attrs: nounwind uwtable
define internal i32 @regex_compile(i8* %pattern, i64 %size, i64 %syntax, %struct.re_pattern_buffer* %bufp) #0 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %syntax.addr = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %c = alloca i32, align 4
  %c1 = alloca i32, align 4
  %b = alloca i8*, align 8
  %compile_stack = alloca %struct.compile_stack_type, align 8
  %p = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %translate = alloca i64, align 8
  %pending_exact = alloca i8*, align 8
  %laststart = alloca i8*, align 8
  %begalt = alloca i8*, align 8
  %beg_interval = alloca i8*, align 8
  %fixup_alt_jump = alloca i8*, align 8
  %range_table_work = alloca %struct.range_table_work_area, align 8
  %multibyte = alloca i8, align 1
  %in_subpattern = alloca i32, align 4
  %main_p = alloca i8*, align 8
  %main_pattern = alloca i8*, align 8
  %main_pend = alloca i8*, align 8
  %len = alloca i32, align 4
  %p1 = alloca i8*, align 8
  %old_buffer = alloca i8*, align 8
  %new_buffer = alloca i8*, align 8
  %old_buffer262 = alloca i8*, align 8
  %new_buffer291 = alloca i8*, align 8
  %zero_times_ok = alloca i8, align 1
  %many_times_ok = alloca i8, align 1
  %greedy = alloca i8, align 1
  %len441 = alloca i32, align 4
  %len517 = alloca i32, align 4
  %simple = alloca i8, align 1
  %startoffset = alloca i64, align 8
  %ofj = alloca i32, align 4
  %p1610 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %old_buffer625 = alloca i8*, align 8
  %new_buffer654 = alloca i8*, align 8
  %old_buffer707 = alloca i8*, align 8
  %new_buffer736 = alloca i8*, align 8
  %old_buffer813 = alloca i8*, align 8
  %new_buffer842 = alloca i8*, align 8
  %old_buffer896 = alloca i8*, align 8
  %new_buffer925 = alloca i8*, align 8
  %emptyp = alloca i8, align 1
  %old_buffer977 = alloca i8*, align 8
  %new_buffer1006 = alloca i8*, align 8
  %old_buffer1091 = alloca i8*, align 8
  %new_buffer1120 = alloca i8*, align 8
  %p11157 = alloca i8*, align 8
  %old_buffer1184 = alloca i8*, align 8
  %new_buffer1213 = alloca i8*, align 8
  %old_buffer1259 = alloca i8*, align 8
  %new_buffer1288 = alloca i8*, align 8
  %old_buffer1347 = alloca i8*, align 8
  %new_buffer1376 = alloca i8*, align 8
  %escaped_char = alloca i8, align 1
  %p21426 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %len1442 = alloca i32, align 4
  %len1532 = alloca i32, align 4
  %str = alloca [10 x i8], align 1
  %class_beg = alloca i8*, align 8
  %len1623 = alloca i32, align 4
  %len1708 = alloca i32, align 4
  %cc = alloca i32, align 4
  %len1822 = alloca i32, align 4
  %len2033 = alloca i32, align 4
  %len2103 = alloca i32, align 4
  %C0 = alloca i32, align 4
  %C1 = alloca i32, align 4
  %C02354 = alloca i32, align 4
  %C12355 = alloca i32, align 4
  %C2 = alloca i32, align 4
  %I = alloca i32, align 4
  %USED = alloca i32, align 4
  %from = alloca i32, align 4
  %to = alloca i32, align 4
  %C02545 = alloca i32, align 4
  %C12546 = alloca i32, align 4
  %C22547 = alloca i32, align 4
  %I2548 = alloca i32, align 4
  %USED2549 = alloca i32, align 4
  %from2629 = alloca i32, align 4
  %to2633 = alloca i32, align 4
  %i = alloca i32, align 4
  %used2740 = alloca i32, align 4
  %old_buffer2756 = alloca i8*, align 8
  %new_buffer2785 = alloca i8*, align 8
  %len2917 = alloca i32, align 4
  %shy = alloca i32, align 4
  %regnum = alloca i32, align 4
  %len3003 = alloca i32, align 4
  %len3077 = alloca i32, align 4
  %old_buffer3291 = alloca i8*, align 8
  %new_buffer3320 = alloca i8*, align 8
  %regnum3416 = alloca i32, align 4
  %old_buffer3469 = alloca i8*, align 8
  %new_buffer3498 = alloca i8*, align 8
  %old_buffer3560 = alloca i8*, align 8
  %new_buffer3589 = alloca i8*, align 8
  %old_buffer3651 = alloca i8*, align 8
  %new_buffer3680 = alloca i8*, align 8
  %lower_bound = alloca i32, align 4
  %upper_bound = alloca i32, align 4
  %len3739 = alloca i32, align 4
  %len3856 = alloca i32, align 4
  %len3947 = alloca i32, align 4
  %len4064 = alloca i32, align 4
  %len4190 = alloca i32, align 4
  %nbytes = alloca i32, align 4
  %startoffset4317 = alloca i32, align 4
  %old_buffer4329 = alloca i8*, align 8
  %new_buffer4358 = alloca i8*, align 8
  %old_buffer4468 = alloca i8*, align 8
  %new_buffer4497 = alloca i8*, align 8
  %len4535 = alloca i32, align 4
  %old_buffer4616 = alloca i8*, align 8
  %new_buffer4645 = alloca i8*, align 8
  %len4686 = alloca i32, align 4
  %old_buffer4767 = alloca i8*, align 8
  %new_buffer4796 = alloca i8*, align 8
  %len4837 = alloca i32, align 4
  %old_buffer4918 = alloca i8*, align 8
  %new_buffer4947 = alloca i8*, align 8
  %len4987 = alloca i32, align 4
  %old_buffer5068 = alloca i8*, align 8
  %new_buffer5097 = alloca i8*, align 8
  %old_buffer5152 = alloca i8*, align 8
  %new_buffer5181 = alloca i8*, align 8
  %old_buffer5235 = alloca i8*, align 8
  %new_buffer5264 = alloca i8*, align 8
  %old_buffer5318 = alloca i8*, align 8
  %new_buffer5347 = alloca i8*, align 8
  %old_buffer5400 = alloca i8*, align 8
  %new_buffer5429 = alloca i8*, align 8
  %len5471 = alloca i32, align 4
  %old_buffer5555 = alloca i8*, align 8
  %new_buffer5584 = alloca i8*, align 8
  %old_buffer5636 = alloca i8*, align 8
  %new_buffer5665 = alloca i8*, align 8
  %old_buffer5731 = alloca i8*, align 8
  %new_buffer5760 = alloca i8*, align 8
  %old_buffer5813 = alloca i8*, align 8
  %new_buffer5842 = alloca i8*, align 8
  %old_buffer5895 = alloca i8*, align 8
  %new_buffer5924 = alloca i8*, align 8
  %old_buffer5977 = alloca i8*, align 8
  %new_buffer6006 = alloca i8*, align 8
  %reg = alloca i32, align 4
  %old_buffer6083 = alloca i8*, align 8
  %new_buffer6112 = alloca i8*, align 8
  %old_buffer6253 = alloca i8*, align 8
  %new_buffer6282 = alloca i8*, align 8
  %old_buffer6332 = alloca i8*, align 8
  %new_buffer6361 = alloca i8*, align 8
  %len6395 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %old_buffer6570 = alloca i8*, align 8
  %new_buffer6599 = alloca i8*, align 8
  store i8* %pattern, i8** %pattern.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i64 %syntax, i64* %syntax.addr, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  %0 = load i8*, i8** %pattern.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %pattern.addr, align 8
  %2 = load i64, i64* %size.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %add.ptr, i8** %pend, align 8
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %translate1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 5
  %4 = load i64, i64* %translate1, align 8
  store i64 %4, i64* %translate, align 8
  store i8* null, i8** %pending_exact, align 8
  store i8* null, i8** %laststart, align 8
  store i8* null, i8** %fixup_alt_jump, align 8
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %multibyte2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 7
  %bf.load = load i16, i16* %multibyte2, align 8
  %bf.lshr = lshr i16 %bf.load, 8
  %bf.clear = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear to i32
  %conv = trunc i32 %bf.cast to i8
  store i8 %conv, i8* %multibyte, align 1
  store i32 0, i32* %in_subpattern, align 4
  %call = call noalias i8* @xmalloc(i64 1024)
  %6 = bitcast i8* %call to %struct.compile_stack_elt_t*
  %stack = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  store %struct.compile_stack_elt_t* %6, %struct.compile_stack_elt_t** %stack, align 8
  %stack3 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %7 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3, align 8
  %cmp = icmp eq %struct.compile_stack_elt_t* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 12, i32* %retval
  br label %do.end.6650

if.end:                                           ; preds = %entry
  %size5 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1
  store i64 32, i64* %size5, align 8
  %avail = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  store i64 0, i64* %avail, align 8
  %table = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  store i32* null, i32** %table, align 8
  %allocated = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 1
  store i32 0, i32* %allocated, align 4
  %8 = load i64, i64* %syntax.addr, align 8
  %9 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %syntax6 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %9, i32 0, i32 3
  store i64 %8, i64* %syntax6, align 8
  %10 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %10, i32 0, i32 7
  %bf.load7 = load i16, i16* %fastmap_accurate, align 8
  %bf.clear8 = and i16 %bf.load7, -9
  store i16 %bf.clear8, i16* %fastmap_accurate, align 8
  %11 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %not_eol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %11, i32 0, i32 7
  %bf.load9 = load i16, i16* %not_eol, align 8
  %bf.clear10 = and i16 %bf.load9, -65
  store i16 %bf.clear10, i16* %not_eol, align 8
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %not_bol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %12, i32 0, i32 7
  %bf.load11 = load i16, i16* %not_bol, align 8
  %bf.clear12 = and i16 %bf.load11, -33
  store i16 %bf.clear12, i16* %not_bol, align 8
  %13 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used_syntax = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %13, i32 0, i32 7
  %bf.load13 = load i16, i16* %used_syntax, align 8
  %bf.clear14 = and i16 %bf.load13, -129
  store i16 %bf.clear14, i16* %used_syntax, align 8
  %14 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %14, i32 0, i32 2
  store i64 0, i64* %used, align 8
  %15 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %15, i32 0, i32 6
  store i64 0, i64* %re_nsub, align 8
  %16 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated15 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %16, i32 0, i32 1
  %17 = load i64, i64* %allocated15, align 8
  %cmp16 = icmp eq i64 %17, 0
  br i1 %cmp16, label %if.then.18, label %if.end.39

if.then.18:                                       ; preds = %if.end
  %18 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %18, i32 0, i32 0
  %19 = load i8*, i8** %buffer, align 8
  %tobool = icmp ne i8* %19, null
  br i1 %tobool, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %if.then.18
  %20 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer20 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %20, i32 0, i32 0
  %21 = load i8*, i8** %buffer20, align 8
  %call21 = call i8* @xrealloc(i8* %21, i64 32)
  %22 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer22 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %22, i32 0, i32 0
  store i8* %call21, i8** %buffer22, align 8
  br label %if.end.25

if.else:                                          ; preds = %if.then.18
  %call23 = call noalias i8* @xmalloc(i64 32)
  %23 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer24 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %23, i32 0, i32 0
  store i8* %call23, i8** %buffer24, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.19
  %24 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer26 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %24, i32 0, i32 0
  %25 = load i8*, i8** %buffer26, align 8
  %tobool27 = icmp ne i8* %25, null
  br i1 %tobool27, label %if.end.37, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  br label %do.body

do.body:                                          ; preds = %if.then.28
  br label %do.body.29

do.body.29:                                       ; preds = %do.body
  %table30 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %26 = load i32*, i32** %table30, align 8
  %tobool31 = icmp ne i32* %26, null
  br i1 %tobool31, label %if.then.32, label %if.end.34

if.then.32:                                       ; preds = %do.body.29
  %table33 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %27 = load i32*, i32** %table33, align 8
  %28 = bitcast i32* %27 to i8*
  call void @xfree(i8* %28)
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.32, %do.body.29
  br label %do.end

do.end:                                           ; preds = %if.end.34
  %stack35 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %29 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack35, align 8
  %30 = bitcast %struct.compile_stack_elt_t* %29 to i8*
  call void @xfree(i8* %30)
  store i32 12, i32* %retval
  br label %do.end.6650

do.end.36:                                        ; No predecessors!
  br label %if.end.37

if.end.37:                                        ; preds = %do.end.36, %if.end.25
  %31 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated38 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %31, i32 0, i32 1
  store i64 32, i64* %allocated38, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.37, %if.end
  %32 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer40 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %32, i32 0, i32 0
  %33 = load i8*, i8** %buffer40, align 8
  store i8* %33, i8** %b, align 8
  store i8* %33, i8** %begalt, align 8
  br label %while.body

while.body:                                       ; preds = %if.end.39, %if.then.45, %sw.epilog.6529
  %34 = load i8*, i8** %p, align 8
  %35 = load i8*, i8** %pend, align 8
  %cmp41 = icmp eq i8* %34, %35
  br i1 %cmp41, label %if.then.43, label %if.end.47

if.then.43:                                       ; preds = %while.body
  %36 = load i32, i32* %in_subpattern, align 4
  %tobool44 = icmp ne i32 %36, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.then.43
  store i32 0, i32* %in_subpattern, align 4
  %37 = load i8*, i8** %main_pattern, align 8
  store i8* %37, i8** %pattern.addr, align 8
  %38 = load i8*, i8** %main_p, align 8
  store i8* %38, i8** %p, align 8
  %39 = load i8*, i8** %main_pend, align 8
  store i8* %39, i8** %pend, align 8
  br label %while.body

if.end.46:                                        ; preds = %if.then.43
  br label %while.end.6530

if.end.47:                                        ; preds = %while.body
  br label %do.body.48

do.body.48:                                       ; preds = %if.end.47
  %40 = load i8*, i8** %p, align 8
  %41 = load i8*, i8** %pend, align 8
  %cmp49 = icmp eq i8* %40, %41
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %do.body.48
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.52:                                        ; preds = %do.body.48
  %42 = load i8, i8* %multibyte, align 1
  %conv53 = sext i8 %42 to i32
  %tobool54 = icmp ne i32 %conv53, 0
  br i1 %tobool54, label %cond.true, label %cond.false.101

cond.true:                                        ; preds = %if.end.52
  %43 = load i8*, i8** %p, align 8
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 0
  %44 = load i8, i8* %arrayidx, align 1
  %conv55 = zext i8 %44 to i32
  %and = and i32 %conv55, 128
  %tobool56 = icmp ne i32 %and, 0
  br i1 %tobool56, label %cond.false, label %cond.true.57

cond.true.57:                                     ; preds = %cond.true
  store i32 1, i32* %len, align 4
  %45 = load i8*, i8** %p, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %45, i64 0
  %46 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %46 to i32
  br label %cond.end.99

cond.false:                                       ; preds = %cond.true
  %47 = load i8*, i8** %p, align 8
  %arrayidx60 = getelementptr inbounds i8, i8* %47, i64 0
  %48 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %48 to i32
  %and62 = and i32 %conv61, 32
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %cond.false.75, label %cond.true.64

cond.true.64:                                     ; preds = %cond.false
  store i32 2, i32* %len, align 4
  %49 = load i8*, i8** %p, align 8
  %arrayidx65 = getelementptr inbounds i8, i8* %49, i64 0
  %50 = load i8, i8* %arrayidx65, align 1
  %conv66 = zext i8 %50 to i32
  %and67 = and i32 %conv66, 31
  %shl = shl i32 %and67, 6
  %51 = load i8*, i8** %p, align 8
  %arrayidx68 = getelementptr inbounds i8, i8* %51, i64 1
  %52 = load i8, i8* %arrayidx68, align 1
  %conv69 = zext i8 %52 to i32
  %and70 = and i32 %conv69, 63
  %or = or i32 %shl, %and70
  %53 = load i8*, i8** %p, align 8
  %arrayidx71 = getelementptr inbounds i8, i8* %53, i64 0
  %54 = load i8, i8* %arrayidx71, align 1
  %conv72 = zext i8 %54 to i32
  %cmp73 = icmp slt i32 %conv72, 194
  %cond = select i1 %cmp73, i32 4194176, i32 0
  %add = add nsw i32 %or, %cond
  br label %cond.end.97

cond.false.75:                                    ; preds = %cond.false
  %55 = load i8*, i8** %p, align 8
  %arrayidx76 = getelementptr inbounds i8, i8* %55, i64 0
  %56 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %56 to i32
  %and78 = and i32 %conv77, 16
  %tobool79 = icmp ne i32 %and78, 0
  br i1 %tobool79, label %cond.false.94, label %cond.true.80

cond.true.80:                                     ; preds = %cond.false.75
  store i32 3, i32* %len, align 4
  %57 = load i8*, i8** %p, align 8
  %arrayidx81 = getelementptr inbounds i8, i8* %57, i64 0
  %58 = load i8, i8* %arrayidx81, align 1
  %conv82 = zext i8 %58 to i32
  %and83 = and i32 %conv82, 15
  %shl84 = shl i32 %and83, 12
  %59 = load i8*, i8** %p, align 8
  %arrayidx85 = getelementptr inbounds i8, i8* %59, i64 1
  %60 = load i8, i8* %arrayidx85, align 1
  %conv86 = zext i8 %60 to i32
  %and87 = and i32 %conv86, 63
  %shl88 = shl i32 %and87, 6
  %or89 = or i32 %shl84, %shl88
  %61 = load i8*, i8** %p, align 8
  %arrayidx90 = getelementptr inbounds i8, i8* %61, i64 2
  %62 = load i8, i8* %arrayidx90, align 1
  %conv91 = zext i8 %62 to i32
  %and92 = and i32 %conv91, 63
  %or93 = or i32 %or89, %and92
  br label %cond.end

cond.false.94:                                    ; preds = %cond.false.75
  %63 = load i8*, i8** %p, align 8
  %call95 = call i32 @string_char(i8* %63, i8** null, i32* %len)
  br label %cond.end

cond.end:                                         ; preds = %cond.false.94, %cond.true.80
  %cond96 = phi i32 [ %or93, %cond.true.80 ], [ %call95, %cond.false.94 ]
  br label %cond.end.97

cond.end.97:                                      ; preds = %cond.end, %cond.true.64
  %cond98 = phi i32 [ %add, %cond.true.64 ], [ %cond96, %cond.end ]
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.end.97, %cond.true.57
  %cond100 = phi i32 [ %conv59, %cond.true.57 ], [ %cond98, %cond.end.97 ]
  br label %cond.end.103

cond.false.101:                                   ; preds = %if.end.52
  store i32 1, i32* %len, align 4
  %64 = load i8*, i8** %p, align 8
  %65 = load i8, i8* %64, align 1
  %conv102 = zext i8 %65 to i32
  br label %cond.end.103

cond.end.103:                                     ; preds = %cond.false.101, %cond.end.99
  %cond104 = phi i32 [ %cond100, %cond.end.99 ], [ %conv102, %cond.false.101 ]
  store i32 %cond104, i32* %c, align 4
  %66 = load i32, i32* %len, align 4
  %67 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %66 to i64
  %add.ptr105 = getelementptr inbounds i8, i8* %67, i64 %idx.ext
  store i8* %add.ptr105, i8** %p, align 8
  br label %do.end.106

do.end.106:                                       ; preds = %cond.end.103
  %68 = load i32, i32* %c, align 4
  switch i32 %68, label %sw.default.6157 [
    i32 32, label %sw.bb
    i32 94, label %sw.bb.150
    i32 36, label %sw.bb.239
    i32 43, label %sw.bb.333
    i32 63, label %sw.bb.333
    i32 42, label %sw.bb.341
    i32 46, label %sw.bb.1078
    i32 91, label %sw.bb.1156
    i32 40, label %sw.bb.2873
    i32 41, label %sw.bb.2878
    i32 10, label %sw.bb.2883
    i32 124, label %sw.bb.2888
    i32 123, label %sw.bb.2893
    i32 92, label %sw.bb.2901
  ]

sw.bb:                                            ; preds = %do.end.106
  %69 = load i8*, i8** %p, align 8
  store i8* %69, i8** %p1, align 8
  %70 = load i8*, i8** @whitespace_regexp, align 8
  %tobool107 = icmp ne i8* %70, null
  br i1 %tobool107, label %lor.lhs.false, label %if.then.109

lor.lhs.false:                                    ; preds = %sw.bb
  %71 = load i32, i32* %in_subpattern, align 4
  %tobool108 = icmp ne i32 %71, 0
  br i1 %tobool108, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %lor.lhs.false, %sw.bb
  br label %normal_char

if.end.110:                                       ; preds = %lor.lhs.false
  br label %while.cond.111

while.cond.111:                                   ; preds = %if.end.119, %if.end.110
  %72 = load i8*, i8** %p1, align 8
  %73 = load i8*, i8** %pend, align 8
  %cmp112 = icmp ne i8* %72, %73
  br i1 %cmp112, label %while.body.114, label %while.end

while.body.114:                                   ; preds = %while.cond.111
  %74 = load i8*, i8** %p1, align 8
  %75 = load i8, i8* %74, align 1
  %conv115 = zext i8 %75 to i32
  %cmp116 = icmp ne i32 %conv115, 32
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %while.body.114
  br label %while.end

if.end.119:                                       ; preds = %while.body.114
  %76 = load i8*, i8** %p1, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr, i8** %p1, align 8
  br label %while.cond.111

while.end:                                        ; preds = %if.then.118, %while.cond.111
  %77 = load i8*, i8** %p1, align 8
  %78 = load i8*, i8** %pend, align 8
  %cmp120 = icmp ne i8* %77, %78
  br i1 %cmp120, label %land.lhs.true, label %if.end.147

land.lhs.true:                                    ; preds = %while.end
  %79 = load i8*, i8** %p1, align 8
  %80 = load i8, i8* %79, align 1
  %conv122 = zext i8 %80 to i32
  %cmp123 = icmp eq i32 %conv122, 42
  br i1 %cmp123, label %if.then.146, label %lor.lhs.false.125

lor.lhs.false.125:                                ; preds = %land.lhs.true
  %81 = load i8*, i8** %p1, align 8
  %82 = load i8, i8* %81, align 1
  %conv126 = zext i8 %82 to i32
  %cmp127 = icmp eq i32 %conv126, 43
  br i1 %cmp127, label %if.then.146, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %lor.lhs.false.125
  %83 = load i8*, i8** %p1, align 8
  %84 = load i8, i8* %83, align 1
  %conv130 = zext i8 %84 to i32
  %cmp131 = icmp eq i32 %conv130, 63
  br i1 %cmp131, label %if.then.146, label %lor.lhs.false.133

lor.lhs.false.133:                                ; preds = %lor.lhs.false.129
  %85 = load i8*, i8** %p1, align 8
  %86 = load i8, i8* %85, align 1
  %conv134 = zext i8 %86 to i32
  %cmp135 = icmp eq i32 %conv134, 92
  br i1 %cmp135, label %land.lhs.true.137, label %if.end.147

land.lhs.true.137:                                ; preds = %lor.lhs.false.133
  %87 = load i8*, i8** %p1, align 8
  %add.ptr138 = getelementptr inbounds i8, i8* %87, i64 1
  %88 = load i8*, i8** %pend, align 8
  %cmp139 = icmp ne i8* %add.ptr138, %88
  br i1 %cmp139, label %land.lhs.true.141, label %if.end.147

land.lhs.true.141:                                ; preds = %land.lhs.true.137
  %89 = load i8*, i8** %p1, align 8
  %arrayidx142 = getelementptr inbounds i8, i8* %89, i64 1
  %90 = load i8, i8* %arrayidx142, align 1
  %conv143 = zext i8 %90 to i32
  %cmp144 = icmp eq i32 %conv143, 123
  br i1 %cmp144, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %land.lhs.true.141, %lor.lhs.false.129, %lor.lhs.false.125, %land.lhs.true
  br label %normal_char

if.end.147:                                       ; preds = %land.lhs.true.141, %land.lhs.true.137, %lor.lhs.false.133, %while.end
  store i32 1, i32* %in_subpattern, align 4
  %91 = load i8*, i8** %p1, align 8
  store i8* %91, i8** %main_p, align 8
  %92 = load i8*, i8** %pend, align 8
  store i8* %92, i8** %main_pend, align 8
  %93 = load i8*, i8** %pattern.addr, align 8
  store i8* %93, i8** %main_pattern, align 8
  %94 = load i8*, i8** @whitespace_regexp, align 8
  store i8* %94, i8** %pattern.addr, align 8
  store i8* %94, i8** %p, align 8
  %95 = load i8*, i8** %p, align 8
  %96 = load i8*, i8** %p, align 8
  %call148 = call i64 @strlen(i8* %96) #5
  %add.ptr149 = getelementptr inbounds i8, i8* %95, i64 %call148
  store i8* %add.ptr149, i8** %pend, align 8
  br label %sw.epilog.6529

sw.bb.150:                                        ; preds = %do.end.106
  %97 = load i8*, i8** %p, align 8
  %98 = load i8*, i8** %pattern.addr, align 8
  %add.ptr151 = getelementptr inbounds i8, i8* %98, i64 1
  %cmp152 = icmp eq i8* %97, %add.ptr151
  br i1 %cmp152, label %if.then.161, label %lor.lhs.false.154

lor.lhs.false.154:                                ; preds = %sw.bb.150
  %99 = load i64, i64* %syntax.addr, align 8
  %and155 = and i64 %99, 8
  %tobool156 = icmp ne i64 %and155, 0
  br i1 %tobool156, label %if.then.161, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %lor.lhs.false.154
  %100 = load i8*, i8** %pattern.addr, align 8
  %101 = load i8*, i8** %p, align 8
  %102 = load i64, i64* %syntax.addr, align 8
  %call158 = call signext i8 @at_begline_loc_p(i8* %100, i8* %101, i64 %102)
  %conv159 = sext i8 %call158 to i32
  %tobool160 = icmp ne i32 %conv159, 0
  br i1 %tobool160, label %if.then.161, label %if.else.237

if.then.161:                                      ; preds = %lor.lhs.false.157, %lor.lhs.false.154, %sw.bb.150
  br label %do.body.162

do.body.162:                                      ; preds = %if.then.161
  br label %while.cond.163

while.cond.163:                                   ; preds = %do.end.229, %do.body.162
  %103 = load i8*, i8** %b, align 8
  %104 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer164 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %104, i32 0, i32 0
  %105 = load i8*, i8** %buffer164, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %103 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %105 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add165 = add nsw i64 %sub.ptr.sub, 1
  %106 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated166 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %106, i32 0, i32 1
  %107 = load i64, i64* %allocated166, align 8
  %cmp167 = icmp ugt i64 %add165, %107
  br i1 %cmp167, label %while.body.169, label %while.end.230

while.body.169:                                   ; preds = %while.cond.163
  br label %do.body.170

do.body.170:                                      ; preds = %while.body.169
  %108 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer171 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %108, i32 0, i32 0
  %109 = load i8*, i8** %buffer171, align 8
  store i8* %109, i8** %old_buffer, align 8
  %110 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated172 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %110, i32 0, i32 1
  %111 = load i64, i64* %allocated172, align 8
  %cmp173 = icmp eq i64 %111, 32768
  br i1 %cmp173, label %if.then.175, label %if.end.176

if.then.175:                                      ; preds = %do.body.170
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.176:                                       ; preds = %do.body.170
  %112 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated177 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %112, i32 0, i32 1
  %113 = load i64, i64* %allocated177, align 8
  %shl178 = shl i64 %113, 1
  store i64 %shl178, i64* %allocated177, align 8
  %114 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated179 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %114, i32 0, i32 1
  %115 = load i64, i64* %allocated179, align 8
  %cmp180 = icmp ugt i64 %115, 32768
  br i1 %cmp180, label %if.then.182, label %if.end.184

if.then.182:                                      ; preds = %if.end.176
  %116 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated183 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %116, i32 0, i32 1
  store i64 32768, i64* %allocated183, align 8
  br label %if.end.184

if.end.184:                                       ; preds = %if.then.182, %if.end.176
  %117 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer185 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %117, i32 0, i32 0
  %118 = load i8*, i8** %buffer185, align 8
  %119 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated186 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %119, i32 0, i32 1
  %120 = load i64, i64* %allocated186, align 8
  %mul = mul i64 %120, 1
  %call187 = call i8* @xrealloc(i8* %118, i64 %mul)
  %121 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer188 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %121, i32 0, i32 0
  store i8* %call187, i8** %buffer188, align 8
  %122 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer189 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %122, i32 0, i32 0
  %123 = load i8*, i8** %buffer189, align 8
  %cmp190 = icmp eq i8* %123, null
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %if.end.184
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.193:                                       ; preds = %if.end.184
  %124 = load i8*, i8** %old_buffer, align 8
  %125 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer194 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %125, i32 0, i32 0
  %126 = load i8*, i8** %buffer194, align 8
  %cmp195 = icmp ne i8* %124, %126
  br i1 %cmp195, label %if.then.197, label %if.end.228

if.then.197:                                      ; preds = %if.end.193
  %127 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer198 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %127, i32 0, i32 0
  %128 = load i8*, i8** %buffer198, align 8
  store i8* %128, i8** %new_buffer, align 8
  %129 = load i8*, i8** %new_buffer, align 8
  %130 = load i8*, i8** %b, align 8
  %131 = load i8*, i8** %old_buffer, align 8
  %sub.ptr.lhs.cast199 = ptrtoint i8* %130 to i64
  %sub.ptr.rhs.cast200 = ptrtoint i8* %131 to i64
  %sub.ptr.sub201 = sub i64 %sub.ptr.lhs.cast199, %sub.ptr.rhs.cast200
  %add.ptr202 = getelementptr inbounds i8, i8* %129, i64 %sub.ptr.sub201
  store i8* %add.ptr202, i8** %b, align 8
  %132 = load i8*, i8** %new_buffer, align 8
  %133 = load i8*, i8** %begalt, align 8
  %134 = load i8*, i8** %old_buffer, align 8
  %sub.ptr.lhs.cast203 = ptrtoint i8* %133 to i64
  %sub.ptr.rhs.cast204 = ptrtoint i8* %134 to i64
  %sub.ptr.sub205 = sub i64 %sub.ptr.lhs.cast203, %sub.ptr.rhs.cast204
  %add.ptr206 = getelementptr inbounds i8, i8* %132, i64 %sub.ptr.sub205
  store i8* %add.ptr206, i8** %begalt, align 8
  %135 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool207 = icmp ne i8* %135, null
  br i1 %tobool207, label %if.then.208, label %if.end.213

if.then.208:                                      ; preds = %if.then.197
  %136 = load i8*, i8** %new_buffer, align 8
  %137 = load i8*, i8** %fixup_alt_jump, align 8
  %138 = load i8*, i8** %old_buffer, align 8
  %sub.ptr.lhs.cast209 = ptrtoint i8* %137 to i64
  %sub.ptr.rhs.cast210 = ptrtoint i8* %138 to i64
  %sub.ptr.sub211 = sub i64 %sub.ptr.lhs.cast209, %sub.ptr.rhs.cast210
  %add.ptr212 = getelementptr inbounds i8, i8* %136, i64 %sub.ptr.sub211
  store i8* %add.ptr212, i8** %fixup_alt_jump, align 8
  br label %if.end.213

if.end.213:                                       ; preds = %if.then.208, %if.then.197
  %139 = load i8*, i8** %laststart, align 8
  %tobool214 = icmp ne i8* %139, null
  br i1 %tobool214, label %if.then.215, label %if.end.220

if.then.215:                                      ; preds = %if.end.213
  %140 = load i8*, i8** %new_buffer, align 8
  %141 = load i8*, i8** %laststart, align 8
  %142 = load i8*, i8** %old_buffer, align 8
  %sub.ptr.lhs.cast216 = ptrtoint i8* %141 to i64
  %sub.ptr.rhs.cast217 = ptrtoint i8* %142 to i64
  %sub.ptr.sub218 = sub i64 %sub.ptr.lhs.cast216, %sub.ptr.rhs.cast217
  %add.ptr219 = getelementptr inbounds i8, i8* %140, i64 %sub.ptr.sub218
  store i8* %add.ptr219, i8** %laststart, align 8
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.215, %if.end.213
  %143 = load i8*, i8** %pending_exact, align 8
  %tobool221 = icmp ne i8* %143, null
  br i1 %tobool221, label %if.then.222, label %if.end.227

if.then.222:                                      ; preds = %if.end.220
  %144 = load i8*, i8** %new_buffer, align 8
  %145 = load i8*, i8** %pending_exact, align 8
  %146 = load i8*, i8** %old_buffer, align 8
  %sub.ptr.lhs.cast223 = ptrtoint i8* %145 to i64
  %sub.ptr.rhs.cast224 = ptrtoint i8* %146 to i64
  %sub.ptr.sub225 = sub i64 %sub.ptr.lhs.cast223, %sub.ptr.rhs.cast224
  %add.ptr226 = getelementptr inbounds i8, i8* %144, i64 %sub.ptr.sub225
  store i8* %add.ptr226, i8** %pending_exact, align 8
  br label %if.end.227

if.end.227:                                       ; preds = %if.then.222, %if.end.220
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.end.193
  br label %do.end.229

do.end.229:                                       ; preds = %if.end.228
  br label %while.cond.163

while.end.230:                                    ; preds = %while.cond.163
  %147 = load i64, i64* %syntax.addr, align 8
  %and231 = and i64 %147, 4194304
  %tobool232 = icmp ne i64 %and231, 0
  %cond233 = select i1 %tobool232, i32 11, i32 9
  %conv234 = trunc i32 %cond233 to i8
  %148 = load i8*, i8** %b, align 8
  %incdec.ptr235 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %incdec.ptr235, i8** %b, align 8
  store i8 %conv234, i8* %148, align 1
  br label %do.end.236

do.end.236:                                       ; preds = %while.end.230
  br label %if.end.238

if.else.237:                                      ; preds = %lor.lhs.false.157
  br label %normal_char

if.end.238:                                       ; preds = %do.end.236
  br label %sw.epilog.6529

sw.bb.239:                                        ; preds = %do.end.106
  %149 = load i8*, i8** %p, align 8
  %150 = load i8*, i8** %pend, align 8
  %cmp240 = icmp eq i8* %149, %150
  br i1 %cmp240, label %if.then.249, label %lor.lhs.false.242

lor.lhs.false.242:                                ; preds = %sw.bb.239
  %151 = load i64, i64* %syntax.addr, align 8
  %and243 = and i64 %151, 8
  %tobool244 = icmp ne i64 %and243, 0
  br i1 %tobool244, label %if.then.249, label %lor.lhs.false.245

lor.lhs.false.245:                                ; preds = %lor.lhs.false.242
  %152 = load i8*, i8** %p, align 8
  %153 = load i8*, i8** %pend, align 8
  %154 = load i64, i64* %syntax.addr, align 8
  %call246 = call signext i8 @at_endline_loc_p(i8* %152, i8* %153, i64 %154)
  %conv247 = sext i8 %call246 to i32
  %tobool248 = icmp ne i32 %conv247, 0
  br i1 %tobool248, label %if.then.249, label %if.else.331

if.then.249:                                      ; preds = %lor.lhs.false.245, %lor.lhs.false.242, %sw.bb.239
  br label %do.body.250

do.body.250:                                      ; preds = %if.then.249
  br label %while.cond.251

while.cond.251:                                   ; preds = %do.end.323, %do.body.250
  %155 = load i8*, i8** %b, align 8
  %156 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer252 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %156, i32 0, i32 0
  %157 = load i8*, i8** %buffer252, align 8
  %sub.ptr.lhs.cast253 = ptrtoint i8* %155 to i64
  %sub.ptr.rhs.cast254 = ptrtoint i8* %157 to i64
  %sub.ptr.sub255 = sub i64 %sub.ptr.lhs.cast253, %sub.ptr.rhs.cast254
  %add256 = add nsw i64 %sub.ptr.sub255, 1
  %158 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated257 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %158, i32 0, i32 1
  %159 = load i64, i64* %allocated257, align 8
  %cmp258 = icmp ugt i64 %add256, %159
  br i1 %cmp258, label %while.body.260, label %while.end.324

while.body.260:                                   ; preds = %while.cond.251
  br label %do.body.261

do.body.261:                                      ; preds = %while.body.260
  %160 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer263 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %160, i32 0, i32 0
  %161 = load i8*, i8** %buffer263, align 8
  store i8* %161, i8** %old_buffer262, align 8
  %162 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated264 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %162, i32 0, i32 1
  %163 = load i64, i64* %allocated264, align 8
  %cmp265 = icmp eq i64 %163, 32768
  br i1 %cmp265, label %if.then.267, label %if.end.268

if.then.267:                                      ; preds = %do.body.261
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.268:                                       ; preds = %do.body.261
  %164 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated269 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %164, i32 0, i32 1
  %165 = load i64, i64* %allocated269, align 8
  %shl270 = shl i64 %165, 1
  store i64 %shl270, i64* %allocated269, align 8
  %166 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated271 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %166, i32 0, i32 1
  %167 = load i64, i64* %allocated271, align 8
  %cmp272 = icmp ugt i64 %167, 32768
  br i1 %cmp272, label %if.then.274, label %if.end.276

if.then.274:                                      ; preds = %if.end.268
  %168 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated275 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %168, i32 0, i32 1
  store i64 32768, i64* %allocated275, align 8
  br label %if.end.276

if.end.276:                                       ; preds = %if.then.274, %if.end.268
  %169 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer277 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %169, i32 0, i32 0
  %170 = load i8*, i8** %buffer277, align 8
  %171 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated278 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %171, i32 0, i32 1
  %172 = load i64, i64* %allocated278, align 8
  %mul279 = mul i64 %172, 1
  %call280 = call i8* @xrealloc(i8* %170, i64 %mul279)
  %173 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer281 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %173, i32 0, i32 0
  store i8* %call280, i8** %buffer281, align 8
  %174 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer282 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %174, i32 0, i32 0
  %175 = load i8*, i8** %buffer282, align 8
  %cmp283 = icmp eq i8* %175, null
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %if.end.276
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.286:                                       ; preds = %if.end.276
  %176 = load i8*, i8** %old_buffer262, align 8
  %177 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer287 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %177, i32 0, i32 0
  %178 = load i8*, i8** %buffer287, align 8
  %cmp288 = icmp ne i8* %176, %178
  br i1 %cmp288, label %if.then.290, label %if.end.322

if.then.290:                                      ; preds = %if.end.286
  %179 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer292 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %179, i32 0, i32 0
  %180 = load i8*, i8** %buffer292, align 8
  store i8* %180, i8** %new_buffer291, align 8
  %181 = load i8*, i8** %new_buffer291, align 8
  %182 = load i8*, i8** %b, align 8
  %183 = load i8*, i8** %old_buffer262, align 8
  %sub.ptr.lhs.cast293 = ptrtoint i8* %182 to i64
  %sub.ptr.rhs.cast294 = ptrtoint i8* %183 to i64
  %sub.ptr.sub295 = sub i64 %sub.ptr.lhs.cast293, %sub.ptr.rhs.cast294
  %add.ptr296 = getelementptr inbounds i8, i8* %181, i64 %sub.ptr.sub295
  store i8* %add.ptr296, i8** %b, align 8
  %184 = load i8*, i8** %new_buffer291, align 8
  %185 = load i8*, i8** %begalt, align 8
  %186 = load i8*, i8** %old_buffer262, align 8
  %sub.ptr.lhs.cast297 = ptrtoint i8* %185 to i64
  %sub.ptr.rhs.cast298 = ptrtoint i8* %186 to i64
  %sub.ptr.sub299 = sub i64 %sub.ptr.lhs.cast297, %sub.ptr.rhs.cast298
  %add.ptr300 = getelementptr inbounds i8, i8* %184, i64 %sub.ptr.sub299
  store i8* %add.ptr300, i8** %begalt, align 8
  %187 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool301 = icmp ne i8* %187, null
  br i1 %tobool301, label %if.then.302, label %if.end.307

if.then.302:                                      ; preds = %if.then.290
  %188 = load i8*, i8** %new_buffer291, align 8
  %189 = load i8*, i8** %fixup_alt_jump, align 8
  %190 = load i8*, i8** %old_buffer262, align 8
  %sub.ptr.lhs.cast303 = ptrtoint i8* %189 to i64
  %sub.ptr.rhs.cast304 = ptrtoint i8* %190 to i64
  %sub.ptr.sub305 = sub i64 %sub.ptr.lhs.cast303, %sub.ptr.rhs.cast304
  %add.ptr306 = getelementptr inbounds i8, i8* %188, i64 %sub.ptr.sub305
  store i8* %add.ptr306, i8** %fixup_alt_jump, align 8
  br label %if.end.307

if.end.307:                                       ; preds = %if.then.302, %if.then.290
  %191 = load i8*, i8** %laststart, align 8
  %tobool308 = icmp ne i8* %191, null
  br i1 %tobool308, label %if.then.309, label %if.end.314

if.then.309:                                      ; preds = %if.end.307
  %192 = load i8*, i8** %new_buffer291, align 8
  %193 = load i8*, i8** %laststart, align 8
  %194 = load i8*, i8** %old_buffer262, align 8
  %sub.ptr.lhs.cast310 = ptrtoint i8* %193 to i64
  %sub.ptr.rhs.cast311 = ptrtoint i8* %194 to i64
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311
  %add.ptr313 = getelementptr inbounds i8, i8* %192, i64 %sub.ptr.sub312
  store i8* %add.ptr313, i8** %laststart, align 8
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.309, %if.end.307
  %195 = load i8*, i8** %pending_exact, align 8
  %tobool315 = icmp ne i8* %195, null
  br i1 %tobool315, label %if.then.316, label %if.end.321

if.then.316:                                      ; preds = %if.end.314
  %196 = load i8*, i8** %new_buffer291, align 8
  %197 = load i8*, i8** %pending_exact, align 8
  %198 = load i8*, i8** %old_buffer262, align 8
  %sub.ptr.lhs.cast317 = ptrtoint i8* %197 to i64
  %sub.ptr.rhs.cast318 = ptrtoint i8* %198 to i64
  %sub.ptr.sub319 = sub i64 %sub.ptr.lhs.cast317, %sub.ptr.rhs.cast318
  %add.ptr320 = getelementptr inbounds i8, i8* %196, i64 %sub.ptr.sub319
  store i8* %add.ptr320, i8** %pending_exact, align 8
  br label %if.end.321

if.end.321:                                       ; preds = %if.then.316, %if.end.314
  br label %if.end.322

if.end.322:                                       ; preds = %if.end.321, %if.end.286
  br label %do.end.323

do.end.323:                                       ; preds = %if.end.322
  br label %while.cond.251

while.end.324:                                    ; preds = %while.cond.251
  %199 = load i64, i64* %syntax.addr, align 8
  %and325 = and i64 %199, 4194304
  %tobool326 = icmp ne i64 %and325, 0
  %cond327 = select i1 %tobool326, i32 12, i32 10
  %conv328 = trunc i32 %cond327 to i8
  %200 = load i8*, i8** %b, align 8
  %incdec.ptr329 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %incdec.ptr329, i8** %b, align 8
  store i8 %conv328, i8* %200, align 1
  br label %do.end.330

do.end.330:                                       ; preds = %while.end.324
  br label %if.end.332

if.else.331:                                      ; preds = %lor.lhs.false.245
  br label %normal_char

if.end.332:                                       ; preds = %do.end.330
  br label %sw.epilog.6529

sw.bb.333:                                        ; preds = %do.end.106, %do.end.106
  %201 = load i64, i64* %syntax.addr, align 8
  %and334 = and i64 %201, 2
  %tobool335 = icmp ne i64 %and334, 0
  br i1 %tobool335, label %if.then.339, label %lor.lhs.false.336

lor.lhs.false.336:                                ; preds = %sw.bb.333
  %202 = load i64, i64* %syntax.addr, align 8
  %and337 = and i64 %202, 1024
  %tobool338 = icmp ne i64 %and337, 0
  br i1 %tobool338, label %if.then.339, label %if.end.340

if.then.339:                                      ; preds = %lor.lhs.false.336, %sw.bb.333
  br label %normal_char

if.end.340:                                       ; preds = %lor.lhs.false.336
  br label %handle_plus

handle_plus:                                      ; preds = %if.then.6153, %if.end.340
  br label %sw.bb.341

sw.bb.341:                                        ; preds = %do.end.106, %handle_plus
  %203 = load i8*, i8** %laststart, align 8
  %tobool342 = icmp ne i8* %203, null
  br i1 %tobool342, label %if.end.363, label %if.then.343

if.then.343:                                      ; preds = %sw.bb.341
  %204 = load i64, i64* %syntax.addr, align 8
  %and344 = and i64 %204, 32
  %tobool345 = icmp ne i64 %and344, 0
  br i1 %tobool345, label %if.then.346, label %if.else.357

if.then.346:                                      ; preds = %if.then.343
  br label %do.body.347

do.body.347:                                      ; preds = %if.then.346
  br label %do.body.348

do.body.348:                                      ; preds = %do.body.347
  %table349 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %205 = load i32*, i32** %table349, align 8
  %tobool350 = icmp ne i32* %205, null
  br i1 %tobool350, label %if.then.351, label %if.end.353

if.then.351:                                      ; preds = %do.body.348
  %table352 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %206 = load i32*, i32** %table352, align 8
  %207 = bitcast i32* %206 to i8*
  call void @xfree(i8* %207)
  br label %if.end.353

if.end.353:                                       ; preds = %if.then.351, %do.body.348
  br label %do.end.354

do.end.354:                                       ; preds = %if.end.353
  %stack355 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %208 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack355, align 8
  %209 = bitcast %struct.compile_stack_elt_t* %208 to i8*
  call void @xfree(i8* %209)
  store i32 13, i32* %retval
  br label %do.end.6650

do.end.356:                                       ; No predecessors!
  br label %if.end.362

if.else.357:                                      ; preds = %if.then.343
  %210 = load i64, i64* %syntax.addr, align 8
  %and358 = and i64 %210, 16
  %tobool359 = icmp ne i64 %and358, 0
  br i1 %tobool359, label %if.end.361, label %if.then.360

if.then.360:                                      ; preds = %if.else.357
  br label %normal_char

if.end.361:                                       ; preds = %if.else.357
  br label %if.end.362

if.end.362:                                       ; preds = %if.end.361, %do.end.356
  br label %if.end.363

if.end.363:                                       ; preds = %if.end.362, %sw.bb.341
  store i8 0, i8* %zero_times_ok, align 1
  store i8 0, i8* %many_times_ok, align 1
  store i8 1, i8* %greedy, align 1
  br label %for.cond

for.cond:                                         ; preds = %do.end.585, %if.end.363
  %211 = load i64, i64* %syntax.addr, align 8
  %and364 = and i64 %211, 1048576
  %tobool365 = icmp ne i64 %and364, 0
  br i1 %tobool365, label %land.lhs.true.366, label %if.else.376

land.lhs.true.366:                                ; preds = %for.cond
  %212 = load i32, i32* %c, align 4
  %cmp367 = icmp eq i32 %212, 63
  br i1 %cmp367, label %land.lhs.true.369, label %if.else.376

land.lhs.true.369:                                ; preds = %land.lhs.true.366
  %213 = load i8, i8* %zero_times_ok, align 1
  %conv370 = sext i8 %213 to i32
  %tobool371 = icmp ne i32 %conv370, 0
  br i1 %tobool371, label %if.then.375, label %lor.lhs.false.372

lor.lhs.false.372:                                ; preds = %land.lhs.true.369
  %214 = load i8, i8* %many_times_ok, align 1
  %conv373 = sext i8 %214 to i32
  %tobool374 = icmp ne i32 %conv373, 0
  br i1 %tobool374, label %if.then.375, label %if.else.376

if.then.375:                                      ; preds = %lor.lhs.false.372, %land.lhs.true.369
  store i8 0, i8* %greedy, align 1
  br label %if.end.387

if.else.376:                                      ; preds = %lor.lhs.false.372, %land.lhs.true.366, %for.cond
  %215 = load i32, i32* %c, align 4
  %cmp377 = icmp ne i32 %215, 43
  %conv378 = zext i1 %cmp377 to i32
  %216 = load i8, i8* %zero_times_ok, align 1
  %conv379 = sext i8 %216 to i32
  %or380 = or i32 %conv379, %conv378
  %conv381 = trunc i32 %or380 to i8
  store i8 %conv381, i8* %zero_times_ok, align 1
  %217 = load i32, i32* %c, align 4
  %cmp382 = icmp ne i32 %217, 63
  %conv383 = zext i1 %cmp382 to i32
  %218 = load i8, i8* %many_times_ok, align 1
  %conv384 = sext i8 %218 to i32
  %or385 = or i32 %conv384, %conv383
  %conv386 = trunc i32 %or385 to i8
  store i8 %conv386, i8* %many_times_ok, align 1
  br label %if.end.387

if.end.387:                                       ; preds = %if.else.376, %if.then.375
  %219 = load i8*, i8** %p, align 8
  %220 = load i8*, i8** %pend, align 8
  %cmp388 = icmp eq i8* %219, %220
  br i1 %cmp388, label %if.then.390, label %if.else.391

if.then.390:                                      ; preds = %if.end.387
  br label %for.end

if.else.391:                                      ; preds = %if.end.387
  %221 = load i8*, i8** %p, align 8
  %222 = load i8, i8* %221, align 1
  %conv392 = zext i8 %222 to i32
  %cmp393 = icmp eq i32 %conv392, 42
  br i1 %cmp393, label %if.then.406, label %lor.lhs.false.395

lor.lhs.false.395:                                ; preds = %if.else.391
  %223 = load i64, i64* %syntax.addr, align 8
  %and396 = and i64 %223, 2
  %tobool397 = icmp ne i64 %and396, 0
  br i1 %tobool397, label %if.else.407, label %land.lhs.true.398

land.lhs.true.398:                                ; preds = %lor.lhs.false.395
  %224 = load i8*, i8** %p, align 8
  %225 = load i8, i8* %224, align 1
  %conv399 = zext i8 %225 to i32
  %cmp400 = icmp eq i32 %conv399, 43
  br i1 %cmp400, label %if.then.406, label %lor.lhs.false.402

lor.lhs.false.402:                                ; preds = %land.lhs.true.398
  %226 = load i8*, i8** %p, align 8
  %227 = load i8, i8* %226, align 1
  %conv403 = zext i8 %227 to i32
  %cmp404 = icmp eq i32 %conv403, 63
  br i1 %cmp404, label %if.then.406, label %if.else.407

if.then.406:                                      ; preds = %lor.lhs.false.402, %land.lhs.true.398, %if.else.391
  br label %if.end.514

if.else.407:                                      ; preds = %lor.lhs.false.402, %lor.lhs.false.395
  %228 = load i64, i64* %syntax.addr, align 8
  %and408 = and i64 %228, 2
  %tobool409 = icmp ne i64 %and408, 0
  br i1 %tobool409, label %land.lhs.true.410, label %if.else.512

land.lhs.true.410:                                ; preds = %if.else.407
  %229 = load i8*, i8** %p, align 8
  %230 = load i8, i8* %229, align 1
  %conv411 = zext i8 %230 to i32
  %cmp412 = icmp eq i32 %conv411, 92
  br i1 %cmp412, label %if.then.414, label %if.else.512

if.then.414:                                      ; preds = %land.lhs.true.410
  %231 = load i8*, i8** %p, align 8
  %add.ptr415 = getelementptr inbounds i8, i8* %231, i64 1
  %232 = load i8*, i8** %pend, align 8
  %cmp416 = icmp eq i8* %add.ptr415, %232
  br i1 %cmp416, label %if.then.418, label %if.end.429

if.then.418:                                      ; preds = %if.then.414
  br label %do.body.419

do.body.419:                                      ; preds = %if.then.418
  br label %do.body.420

do.body.420:                                      ; preds = %do.body.419
  %table421 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %233 = load i32*, i32** %table421, align 8
  %tobool422 = icmp ne i32* %233, null
  br i1 %tobool422, label %if.then.423, label %if.end.425

if.then.423:                                      ; preds = %do.body.420
  %table424 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %234 = load i32*, i32** %table424, align 8
  %235 = bitcast i32* %234 to i8*
  call void @xfree(i8* %235)
  br label %if.end.425

if.end.425:                                       ; preds = %if.then.423, %do.body.420
  br label %do.end.426

do.end.426:                                       ; preds = %if.end.425
  %stack427 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %236 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack427, align 8
  %237 = bitcast %struct.compile_stack_elt_t* %236 to i8*
  call void @xfree(i8* %237)
  store i32 5, i32* %retval
  br label %do.end.6650

do.end.428:                                       ; No predecessors!
  br label %if.end.429

if.end.429:                                       ; preds = %do.end.428, %if.then.414
  %238 = load i8*, i8** %p, align 8
  %arrayidx430 = getelementptr inbounds i8, i8* %238, i64 1
  %239 = load i8, i8* %arrayidx430, align 1
  %conv431 = zext i8 %239 to i32
  %cmp432 = icmp eq i32 %conv431, 43
  br i1 %cmp432, label %if.then.439, label %lor.lhs.false.434

lor.lhs.false.434:                                ; preds = %if.end.429
  %240 = load i8*, i8** %p, align 8
  %arrayidx435 = getelementptr inbounds i8, i8* %240, i64 1
  %241 = load i8, i8* %arrayidx435, align 1
  %conv436 = zext i8 %241 to i32
  %cmp437 = icmp eq i32 %conv436, 63
  br i1 %cmp437, label %if.then.439, label %if.else.510

if.then.439:                                      ; preds = %lor.lhs.false.434, %if.end.429
  br label %do.body.440

do.body.440:                                      ; preds = %if.then.439
  %242 = load i8*, i8** %p, align 8
  %243 = load i8*, i8** %pend, align 8
  %cmp442 = icmp eq i8* %242, %243
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %do.body.440
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.445:                                       ; preds = %do.body.440
  %244 = load i8, i8* %multibyte, align 1
  %conv446 = sext i8 %244 to i32
  %tobool447 = icmp ne i32 %conv446, 0
  br i1 %tobool447, label %cond.true.448, label %cond.false.503

cond.true.448:                                    ; preds = %if.end.445
  %245 = load i8*, i8** %p, align 8
  %arrayidx449 = getelementptr inbounds i8, i8* %245, i64 0
  %246 = load i8, i8* %arrayidx449, align 1
  %conv450 = zext i8 %246 to i32
  %and451 = and i32 %conv450, 128
  %tobool452 = icmp ne i32 %and451, 0
  br i1 %tobool452, label %cond.false.456, label %cond.true.453

cond.true.453:                                    ; preds = %cond.true.448
  store i32 1, i32* %len441, align 4
  %247 = load i8*, i8** %p, align 8
  %arrayidx454 = getelementptr inbounds i8, i8* %247, i64 0
  %248 = load i8, i8* %arrayidx454, align 1
  %conv455 = zext i8 %248 to i32
  br label %cond.end.501

cond.false.456:                                   ; preds = %cond.true.448
  %249 = load i8*, i8** %p, align 8
  %arrayidx457 = getelementptr inbounds i8, i8* %249, i64 0
  %250 = load i8, i8* %arrayidx457, align 1
  %conv458 = zext i8 %250 to i32
  %and459 = and i32 %conv458, 32
  %tobool460 = icmp ne i32 %and459, 0
  br i1 %tobool460, label %cond.false.476, label %cond.true.461

cond.true.461:                                    ; preds = %cond.false.456
  store i32 2, i32* %len441, align 4
  %251 = load i8*, i8** %p, align 8
  %arrayidx462 = getelementptr inbounds i8, i8* %251, i64 0
  %252 = load i8, i8* %arrayidx462, align 1
  %conv463 = zext i8 %252 to i32
  %and464 = and i32 %conv463, 31
  %shl465 = shl i32 %and464, 6
  %253 = load i8*, i8** %p, align 8
  %arrayidx466 = getelementptr inbounds i8, i8* %253, i64 1
  %254 = load i8, i8* %arrayidx466, align 1
  %conv467 = zext i8 %254 to i32
  %and468 = and i32 %conv467, 63
  %or469 = or i32 %shl465, %and468
  %255 = load i8*, i8** %p, align 8
  %arrayidx470 = getelementptr inbounds i8, i8* %255, i64 0
  %256 = load i8, i8* %arrayidx470, align 1
  %conv471 = zext i8 %256 to i32
  %cmp472 = icmp slt i32 %conv471, 194
  %cond474 = select i1 %cmp472, i32 4194176, i32 0
  %add475 = add nsw i32 %or469, %cond474
  br label %cond.end.499

cond.false.476:                                   ; preds = %cond.false.456
  %257 = load i8*, i8** %p, align 8
  %arrayidx477 = getelementptr inbounds i8, i8* %257, i64 0
  %258 = load i8, i8* %arrayidx477, align 1
  %conv478 = zext i8 %258 to i32
  %and479 = and i32 %conv478, 16
  %tobool480 = icmp ne i32 %and479, 0
  br i1 %tobool480, label %cond.false.495, label %cond.true.481

cond.true.481:                                    ; preds = %cond.false.476
  store i32 3, i32* %len441, align 4
  %259 = load i8*, i8** %p, align 8
  %arrayidx482 = getelementptr inbounds i8, i8* %259, i64 0
  %260 = load i8, i8* %arrayidx482, align 1
  %conv483 = zext i8 %260 to i32
  %and484 = and i32 %conv483, 15
  %shl485 = shl i32 %and484, 12
  %261 = load i8*, i8** %p, align 8
  %arrayidx486 = getelementptr inbounds i8, i8* %261, i64 1
  %262 = load i8, i8* %arrayidx486, align 1
  %conv487 = zext i8 %262 to i32
  %and488 = and i32 %conv487, 63
  %shl489 = shl i32 %and488, 6
  %or490 = or i32 %shl485, %shl489
  %263 = load i8*, i8** %p, align 8
  %arrayidx491 = getelementptr inbounds i8, i8* %263, i64 2
  %264 = load i8, i8* %arrayidx491, align 1
  %conv492 = zext i8 %264 to i32
  %and493 = and i32 %conv492, 63
  %or494 = or i32 %or490, %and493
  br label %cond.end.497

cond.false.495:                                   ; preds = %cond.false.476
  %265 = load i8*, i8** %p, align 8
  %call496 = call i32 @string_char(i8* %265, i8** null, i32* %len441)
  br label %cond.end.497

cond.end.497:                                     ; preds = %cond.false.495, %cond.true.481
  %cond498 = phi i32 [ %or494, %cond.true.481 ], [ %call496, %cond.false.495 ]
  br label %cond.end.499

cond.end.499:                                     ; preds = %cond.end.497, %cond.true.461
  %cond500 = phi i32 [ %add475, %cond.true.461 ], [ %cond498, %cond.end.497 ]
  br label %cond.end.501

cond.end.501:                                     ; preds = %cond.end.499, %cond.true.453
  %cond502 = phi i32 [ %conv455, %cond.true.453 ], [ %cond500, %cond.end.499 ]
  br label %cond.end.505

cond.false.503:                                   ; preds = %if.end.445
  store i32 1, i32* %len441, align 4
  %266 = load i8*, i8** %p, align 8
  %267 = load i8, i8* %266, align 1
  %conv504 = zext i8 %267 to i32
  br label %cond.end.505

cond.end.505:                                     ; preds = %cond.false.503, %cond.end.501
  %cond506 = phi i32 [ %cond502, %cond.end.501 ], [ %conv504, %cond.false.503 ]
  store i32 %cond506, i32* %c, align 4
  %268 = load i32, i32* %len441, align 4
  %269 = load i8*, i8** %p, align 8
  %idx.ext507 = sext i32 %268 to i64
  %add.ptr508 = getelementptr inbounds i8, i8* %269, i64 %idx.ext507
  store i8* %add.ptr508, i8** %p, align 8
  br label %do.end.509

do.end.509:                                       ; preds = %cond.end.505
  br label %if.end.511

if.else.510:                                      ; preds = %lor.lhs.false.434
  br label %for.end

if.end.511:                                       ; preds = %do.end.509
  br label %if.end.513

if.else.512:                                      ; preds = %land.lhs.true.410, %if.else.407
  br label %for.end

if.end.513:                                       ; preds = %if.end.511
  br label %if.end.514

if.end.514:                                       ; preds = %if.end.513, %if.then.406
  br label %if.end.515

if.end.515:                                       ; preds = %if.end.514
  br label %do.body.516

do.body.516:                                      ; preds = %if.end.515
  %270 = load i8*, i8** %p, align 8
  %271 = load i8*, i8** %pend, align 8
  %cmp518 = icmp eq i8* %270, %271
  br i1 %cmp518, label %if.then.520, label %if.end.521

if.then.520:                                      ; preds = %do.body.516
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.521:                                       ; preds = %do.body.516
  %272 = load i8, i8* %multibyte, align 1
  %conv522 = sext i8 %272 to i32
  %tobool523 = icmp ne i32 %conv522, 0
  br i1 %tobool523, label %cond.true.524, label %cond.false.579

cond.true.524:                                    ; preds = %if.end.521
  %273 = load i8*, i8** %p, align 8
  %arrayidx525 = getelementptr inbounds i8, i8* %273, i64 0
  %274 = load i8, i8* %arrayidx525, align 1
  %conv526 = zext i8 %274 to i32
  %and527 = and i32 %conv526, 128
  %tobool528 = icmp ne i32 %and527, 0
  br i1 %tobool528, label %cond.false.532, label %cond.true.529

cond.true.529:                                    ; preds = %cond.true.524
  store i32 1, i32* %len517, align 4
  %275 = load i8*, i8** %p, align 8
  %arrayidx530 = getelementptr inbounds i8, i8* %275, i64 0
  %276 = load i8, i8* %arrayidx530, align 1
  %conv531 = zext i8 %276 to i32
  br label %cond.end.577

cond.false.532:                                   ; preds = %cond.true.524
  %277 = load i8*, i8** %p, align 8
  %arrayidx533 = getelementptr inbounds i8, i8* %277, i64 0
  %278 = load i8, i8* %arrayidx533, align 1
  %conv534 = zext i8 %278 to i32
  %and535 = and i32 %conv534, 32
  %tobool536 = icmp ne i32 %and535, 0
  br i1 %tobool536, label %cond.false.552, label %cond.true.537

cond.true.537:                                    ; preds = %cond.false.532
  store i32 2, i32* %len517, align 4
  %279 = load i8*, i8** %p, align 8
  %arrayidx538 = getelementptr inbounds i8, i8* %279, i64 0
  %280 = load i8, i8* %arrayidx538, align 1
  %conv539 = zext i8 %280 to i32
  %and540 = and i32 %conv539, 31
  %shl541 = shl i32 %and540, 6
  %281 = load i8*, i8** %p, align 8
  %arrayidx542 = getelementptr inbounds i8, i8* %281, i64 1
  %282 = load i8, i8* %arrayidx542, align 1
  %conv543 = zext i8 %282 to i32
  %and544 = and i32 %conv543, 63
  %or545 = or i32 %shl541, %and544
  %283 = load i8*, i8** %p, align 8
  %arrayidx546 = getelementptr inbounds i8, i8* %283, i64 0
  %284 = load i8, i8* %arrayidx546, align 1
  %conv547 = zext i8 %284 to i32
  %cmp548 = icmp slt i32 %conv547, 194
  %cond550 = select i1 %cmp548, i32 4194176, i32 0
  %add551 = add nsw i32 %or545, %cond550
  br label %cond.end.575

cond.false.552:                                   ; preds = %cond.false.532
  %285 = load i8*, i8** %p, align 8
  %arrayidx553 = getelementptr inbounds i8, i8* %285, i64 0
  %286 = load i8, i8* %arrayidx553, align 1
  %conv554 = zext i8 %286 to i32
  %and555 = and i32 %conv554, 16
  %tobool556 = icmp ne i32 %and555, 0
  br i1 %tobool556, label %cond.false.571, label %cond.true.557

cond.true.557:                                    ; preds = %cond.false.552
  store i32 3, i32* %len517, align 4
  %287 = load i8*, i8** %p, align 8
  %arrayidx558 = getelementptr inbounds i8, i8* %287, i64 0
  %288 = load i8, i8* %arrayidx558, align 1
  %conv559 = zext i8 %288 to i32
  %and560 = and i32 %conv559, 15
  %shl561 = shl i32 %and560, 12
  %289 = load i8*, i8** %p, align 8
  %arrayidx562 = getelementptr inbounds i8, i8* %289, i64 1
  %290 = load i8, i8* %arrayidx562, align 1
  %conv563 = zext i8 %290 to i32
  %and564 = and i32 %conv563, 63
  %shl565 = shl i32 %and564, 6
  %or566 = or i32 %shl561, %shl565
  %291 = load i8*, i8** %p, align 8
  %arrayidx567 = getelementptr inbounds i8, i8* %291, i64 2
  %292 = load i8, i8* %arrayidx567, align 1
  %conv568 = zext i8 %292 to i32
  %and569 = and i32 %conv568, 63
  %or570 = or i32 %or566, %and569
  br label %cond.end.573

cond.false.571:                                   ; preds = %cond.false.552
  %293 = load i8*, i8** %p, align 8
  %call572 = call i32 @string_char(i8* %293, i8** null, i32* %len517)
  br label %cond.end.573

cond.end.573:                                     ; preds = %cond.false.571, %cond.true.557
  %cond574 = phi i32 [ %or570, %cond.true.557 ], [ %call572, %cond.false.571 ]
  br label %cond.end.575

cond.end.575:                                     ; preds = %cond.end.573, %cond.true.537
  %cond576 = phi i32 [ %add551, %cond.true.537 ], [ %cond574, %cond.end.573 ]
  br label %cond.end.577

cond.end.577:                                     ; preds = %cond.end.575, %cond.true.529
  %cond578 = phi i32 [ %conv531, %cond.true.529 ], [ %cond576, %cond.end.575 ]
  br label %cond.end.581

cond.false.579:                                   ; preds = %if.end.521
  store i32 1, i32* %len517, align 4
  %294 = load i8*, i8** %p, align 8
  %295 = load i8, i8* %294, align 1
  %conv580 = zext i8 %295 to i32
  br label %cond.end.581

cond.end.581:                                     ; preds = %cond.false.579, %cond.end.577
  %cond582 = phi i32 [ %cond578, %cond.end.577 ], [ %conv580, %cond.false.579 ]
  store i32 %cond582, i32* %c, align 4
  %296 = load i32, i32* %len517, align 4
  %297 = load i8*, i8** %p, align 8
  %idx.ext583 = sext i32 %296 to i64
  %add.ptr584 = getelementptr inbounds i8, i8* %297, i64 %idx.ext583
  store i8* %add.ptr584, i8** %p, align 8
  br label %do.end.585

do.end.585:                                       ; preds = %cond.end.581
  br label %for.cond

for.end:                                          ; preds = %if.else.512, %if.else.510, %if.then.390
  %298 = load i8*, i8** %laststart, align 8
  %tobool586 = icmp ne i8* %298, null
  br i1 %tobool586, label %lor.lhs.false.587, label %if.then.590

lor.lhs.false.587:                                ; preds = %for.end
  %299 = load i8*, i8** %laststart, align 8
  %300 = load i8*, i8** %b, align 8
  %cmp588 = icmp eq i8* %299, %300
  br i1 %cmp588, label %if.then.590, label %if.end.591

if.then.590:                                      ; preds = %lor.lhs.false.587, %for.end
  br label %sw.epilog.6529

if.end.591:                                       ; preds = %lor.lhs.false.587
  %301 = load i8, i8* %greedy, align 1
  %tobool592 = icmp ne i8 %301, 0
  br i1 %tobool592, label %if.then.593, label %if.else.884

if.then.593:                                      ; preds = %if.end.591
  %302 = load i8, i8* %many_times_ok, align 1
  %tobool594 = icmp ne i8 %302, 0
  br i1 %tobool594, label %if.then.595, label %if.else.801

if.then.595:                                      ; preds = %if.then.593
  %303 = load i8*, i8** %laststart, align 8
  %call596 = call i8* @skip_one_char(i8* %303)
  %304 = load i8*, i8** %b, align 8
  %cmp597 = icmp eq i8* %call596, %304
  %conv598 = zext i1 %cmp597 to i32
  %conv599 = trunc i32 %conv598 to i8
  store i8 %conv599, i8* %simple, align 1
  store i64 0, i64* %startoffset, align 8
  %305 = load i8, i8* %simple, align 1
  %conv600 = sext i8 %305 to i32
  %tobool601 = icmp ne i32 %conv600, 0
  br i1 %tobool601, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.595
  %306 = load i8*, i8** %laststart, align 8
  %307 = load i8*, i8** %b, align 8
  %call602 = call i32 @analyze_first(i8* %306, i8* %307, i8* null, i32 0)
  %tobool603 = icmp ne i32 %call602, 0
  %lnot = xor i1 %tobool603, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.595
  %308 = phi i1 [ true, %if.then.595 ], [ %lnot, %lor.rhs ]
  %cond604 = select i1 %308, i32 14, i32 16
  store i32 %cond604, i32* %ofj, align 4
  %309 = load i8, i8* %zero_times_ok, align 1
  %tobool605 = icmp ne i8 %309, 0
  br i1 %tobool605, label %if.end.695, label %land.lhs.true.606

land.lhs.true.606:                                ; preds = %lor.end
  %310 = load i8, i8* %simple, align 1
  %conv607 = sext i8 %310 to i32
  %tobool608 = icmp ne i32 %conv607, 0
  br i1 %tobool608, label %if.then.609, label %if.end.695

if.then.609:                                      ; preds = %land.lhs.true.606
  %311 = load i8*, i8** %b, align 8
  %312 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast611 = ptrtoint i8* %311 to i64
  %sub.ptr.rhs.cast612 = ptrtoint i8* %312 to i64
  %sub.ptr.sub613 = sub i64 %sub.ptr.lhs.cast611, %sub.ptr.rhs.cast612
  store i64 %sub.ptr.sub613, i64* %startoffset, align 8
  br label %while.cond.614

while.cond.614:                                   ; preds = %do.end.686, %if.then.609
  %313 = load i8*, i8** %b, align 8
  %314 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer615 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %314, i32 0, i32 0
  %315 = load i8*, i8** %buffer615, align 8
  %sub.ptr.lhs.cast616 = ptrtoint i8* %313 to i64
  %sub.ptr.rhs.cast617 = ptrtoint i8* %315 to i64
  %sub.ptr.sub618 = sub i64 %sub.ptr.lhs.cast616, %sub.ptr.rhs.cast617
  %316 = load i64, i64* %startoffset, align 8
  %add619 = add i64 %sub.ptr.sub618, %316
  %317 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated620 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %317, i32 0, i32 1
  %318 = load i64, i64* %allocated620, align 8
  %cmp621 = icmp ugt i64 %add619, %318
  br i1 %cmp621, label %while.body.623, label %while.end.687

while.body.623:                                   ; preds = %while.cond.614
  br label %do.body.624

do.body.624:                                      ; preds = %while.body.623
  %319 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer626 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %319, i32 0, i32 0
  %320 = load i8*, i8** %buffer626, align 8
  store i8* %320, i8** %old_buffer625, align 8
  %321 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated627 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %321, i32 0, i32 1
  %322 = load i64, i64* %allocated627, align 8
  %cmp628 = icmp eq i64 %322, 32768
  br i1 %cmp628, label %if.then.630, label %if.end.631

if.then.630:                                      ; preds = %do.body.624
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.631:                                       ; preds = %do.body.624
  %323 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated632 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %323, i32 0, i32 1
  %324 = load i64, i64* %allocated632, align 8
  %shl633 = shl i64 %324, 1
  store i64 %shl633, i64* %allocated632, align 8
  %325 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated634 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %325, i32 0, i32 1
  %326 = load i64, i64* %allocated634, align 8
  %cmp635 = icmp ugt i64 %326, 32768
  br i1 %cmp635, label %if.then.637, label %if.end.639

if.then.637:                                      ; preds = %if.end.631
  %327 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated638 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %327, i32 0, i32 1
  store i64 32768, i64* %allocated638, align 8
  br label %if.end.639

if.end.639:                                       ; preds = %if.then.637, %if.end.631
  %328 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer640 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %328, i32 0, i32 0
  %329 = load i8*, i8** %buffer640, align 8
  %330 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated641 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %330, i32 0, i32 1
  %331 = load i64, i64* %allocated641, align 8
  %mul642 = mul i64 %331, 1
  %call643 = call i8* @xrealloc(i8* %329, i64 %mul642)
  %332 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer644 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %332, i32 0, i32 0
  store i8* %call643, i8** %buffer644, align 8
  %333 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer645 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %333, i32 0, i32 0
  %334 = load i8*, i8** %buffer645, align 8
  %cmp646 = icmp eq i8* %334, null
  br i1 %cmp646, label %if.then.648, label %if.end.649

if.then.648:                                      ; preds = %if.end.639
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.649:                                       ; preds = %if.end.639
  %335 = load i8*, i8** %old_buffer625, align 8
  %336 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer650 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %336, i32 0, i32 0
  %337 = load i8*, i8** %buffer650, align 8
  %cmp651 = icmp ne i8* %335, %337
  br i1 %cmp651, label %if.then.653, label %if.end.685

if.then.653:                                      ; preds = %if.end.649
  %338 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer655 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %338, i32 0, i32 0
  %339 = load i8*, i8** %buffer655, align 8
  store i8* %339, i8** %new_buffer654, align 8
  %340 = load i8*, i8** %new_buffer654, align 8
  %341 = load i8*, i8** %b, align 8
  %342 = load i8*, i8** %old_buffer625, align 8
  %sub.ptr.lhs.cast656 = ptrtoint i8* %341 to i64
  %sub.ptr.rhs.cast657 = ptrtoint i8* %342 to i64
  %sub.ptr.sub658 = sub i64 %sub.ptr.lhs.cast656, %sub.ptr.rhs.cast657
  %add.ptr659 = getelementptr inbounds i8, i8* %340, i64 %sub.ptr.sub658
  store i8* %add.ptr659, i8** %b, align 8
  %343 = load i8*, i8** %new_buffer654, align 8
  %344 = load i8*, i8** %begalt, align 8
  %345 = load i8*, i8** %old_buffer625, align 8
  %sub.ptr.lhs.cast660 = ptrtoint i8* %344 to i64
  %sub.ptr.rhs.cast661 = ptrtoint i8* %345 to i64
  %sub.ptr.sub662 = sub i64 %sub.ptr.lhs.cast660, %sub.ptr.rhs.cast661
  %add.ptr663 = getelementptr inbounds i8, i8* %343, i64 %sub.ptr.sub662
  store i8* %add.ptr663, i8** %begalt, align 8
  %346 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool664 = icmp ne i8* %346, null
  br i1 %tobool664, label %if.then.665, label %if.end.670

if.then.665:                                      ; preds = %if.then.653
  %347 = load i8*, i8** %new_buffer654, align 8
  %348 = load i8*, i8** %fixup_alt_jump, align 8
  %349 = load i8*, i8** %old_buffer625, align 8
  %sub.ptr.lhs.cast666 = ptrtoint i8* %348 to i64
  %sub.ptr.rhs.cast667 = ptrtoint i8* %349 to i64
  %sub.ptr.sub668 = sub i64 %sub.ptr.lhs.cast666, %sub.ptr.rhs.cast667
  %add.ptr669 = getelementptr inbounds i8, i8* %347, i64 %sub.ptr.sub668
  store i8* %add.ptr669, i8** %fixup_alt_jump, align 8
  br label %if.end.670

if.end.670:                                       ; preds = %if.then.665, %if.then.653
  %350 = load i8*, i8** %laststart, align 8
  %tobool671 = icmp ne i8* %350, null
  br i1 %tobool671, label %if.then.672, label %if.end.677

if.then.672:                                      ; preds = %if.end.670
  %351 = load i8*, i8** %new_buffer654, align 8
  %352 = load i8*, i8** %laststart, align 8
  %353 = load i8*, i8** %old_buffer625, align 8
  %sub.ptr.lhs.cast673 = ptrtoint i8* %352 to i64
  %sub.ptr.rhs.cast674 = ptrtoint i8* %353 to i64
  %sub.ptr.sub675 = sub i64 %sub.ptr.lhs.cast673, %sub.ptr.rhs.cast674
  %add.ptr676 = getelementptr inbounds i8, i8* %351, i64 %sub.ptr.sub675
  store i8* %add.ptr676, i8** %laststart, align 8
  br label %if.end.677

if.end.677:                                       ; preds = %if.then.672, %if.end.670
  %354 = load i8*, i8** %pending_exact, align 8
  %tobool678 = icmp ne i8* %354, null
  br i1 %tobool678, label %if.then.679, label %if.end.684

if.then.679:                                      ; preds = %if.end.677
  %355 = load i8*, i8** %new_buffer654, align 8
  %356 = load i8*, i8** %pending_exact, align 8
  %357 = load i8*, i8** %old_buffer625, align 8
  %sub.ptr.lhs.cast680 = ptrtoint i8* %356 to i64
  %sub.ptr.rhs.cast681 = ptrtoint i8* %357 to i64
  %sub.ptr.sub682 = sub i64 %sub.ptr.lhs.cast680, %sub.ptr.rhs.cast681
  %add.ptr683 = getelementptr inbounds i8, i8* %355, i64 %sub.ptr.sub682
  store i8* %add.ptr683, i8** %pending_exact, align 8
  br label %if.end.684

if.end.684:                                       ; preds = %if.then.679, %if.end.677
  br label %if.end.685

if.end.685:                                       ; preds = %if.end.684, %if.end.649
  br label %do.end.686

do.end.686:                                       ; preds = %if.end.685
  br label %while.cond.614

while.end.687:                                    ; preds = %while.cond.614
  %358 = load i8*, i8** %b, align 8
  store i8* %358, i8** %p1610, align 8
  %359 = load i8*, i8** %laststart, align 8
  store i8* %359, i8** %p2, align 8
  br label %while.cond.688

while.cond.688:                                   ; preds = %while.body.691, %while.end.687
  %360 = load i8*, i8** %p2, align 8
  %361 = load i8*, i8** %p1610, align 8
  %cmp689 = icmp ult i8* %360, %361
  br i1 %cmp689, label %while.body.691, label %while.end.694

while.body.691:                                   ; preds = %while.cond.688
  %362 = load i8*, i8** %p2, align 8
  %incdec.ptr692 = getelementptr inbounds i8, i8* %362, i32 1
  store i8* %incdec.ptr692, i8** %p2, align 8
  %363 = load i8, i8* %362, align 1
  %364 = load i8*, i8** %b, align 8
  %incdec.ptr693 = getelementptr inbounds i8, i8* %364, i32 1
  store i8* %incdec.ptr693, i8** %b, align 8
  store i8 %363, i8* %364, align 1
  br label %while.cond.688

while.end.694:                                    ; preds = %while.cond.688
  store i8 1, i8* %zero_times_ok, align 1
  br label %if.end.695

if.end.695:                                       ; preds = %while.end.694, %land.lhs.true.606, %lor.end
  br label %while.cond.696

while.cond.696:                                   ; preds = %do.end.768, %if.end.695
  %365 = load i8*, i8** %b, align 8
  %366 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer697 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %366, i32 0, i32 0
  %367 = load i8*, i8** %buffer697, align 8
  %sub.ptr.lhs.cast698 = ptrtoint i8* %365 to i64
  %sub.ptr.rhs.cast699 = ptrtoint i8* %367 to i64
  %sub.ptr.sub700 = sub i64 %sub.ptr.lhs.cast698, %sub.ptr.rhs.cast699
  %add701 = add nsw i64 %sub.ptr.sub700, 6
  %368 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated702 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %368, i32 0, i32 1
  %369 = load i64, i64* %allocated702, align 8
  %cmp703 = icmp ugt i64 %add701, %369
  br i1 %cmp703, label %while.body.705, label %while.end.769

while.body.705:                                   ; preds = %while.cond.696
  br label %do.body.706

do.body.706:                                      ; preds = %while.body.705
  %370 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer708 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %370, i32 0, i32 0
  %371 = load i8*, i8** %buffer708, align 8
  store i8* %371, i8** %old_buffer707, align 8
  %372 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated709 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %372, i32 0, i32 1
  %373 = load i64, i64* %allocated709, align 8
  %cmp710 = icmp eq i64 %373, 32768
  br i1 %cmp710, label %if.then.712, label %if.end.713

if.then.712:                                      ; preds = %do.body.706
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.713:                                       ; preds = %do.body.706
  %374 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated714 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %374, i32 0, i32 1
  %375 = load i64, i64* %allocated714, align 8
  %shl715 = shl i64 %375, 1
  store i64 %shl715, i64* %allocated714, align 8
  %376 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated716 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %376, i32 0, i32 1
  %377 = load i64, i64* %allocated716, align 8
  %cmp717 = icmp ugt i64 %377, 32768
  br i1 %cmp717, label %if.then.719, label %if.end.721

if.then.719:                                      ; preds = %if.end.713
  %378 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated720 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %378, i32 0, i32 1
  store i64 32768, i64* %allocated720, align 8
  br label %if.end.721

if.end.721:                                       ; preds = %if.then.719, %if.end.713
  %379 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer722 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %379, i32 0, i32 0
  %380 = load i8*, i8** %buffer722, align 8
  %381 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated723 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %381, i32 0, i32 1
  %382 = load i64, i64* %allocated723, align 8
  %mul724 = mul i64 %382, 1
  %call725 = call i8* @xrealloc(i8* %380, i64 %mul724)
  %383 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer726 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %383, i32 0, i32 0
  store i8* %call725, i8** %buffer726, align 8
  %384 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer727 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %384, i32 0, i32 0
  %385 = load i8*, i8** %buffer727, align 8
  %cmp728 = icmp eq i8* %385, null
  br i1 %cmp728, label %if.then.730, label %if.end.731

if.then.730:                                      ; preds = %if.end.721
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.731:                                       ; preds = %if.end.721
  %386 = load i8*, i8** %old_buffer707, align 8
  %387 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer732 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %387, i32 0, i32 0
  %388 = load i8*, i8** %buffer732, align 8
  %cmp733 = icmp ne i8* %386, %388
  br i1 %cmp733, label %if.then.735, label %if.end.767

if.then.735:                                      ; preds = %if.end.731
  %389 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer737 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %389, i32 0, i32 0
  %390 = load i8*, i8** %buffer737, align 8
  store i8* %390, i8** %new_buffer736, align 8
  %391 = load i8*, i8** %new_buffer736, align 8
  %392 = load i8*, i8** %b, align 8
  %393 = load i8*, i8** %old_buffer707, align 8
  %sub.ptr.lhs.cast738 = ptrtoint i8* %392 to i64
  %sub.ptr.rhs.cast739 = ptrtoint i8* %393 to i64
  %sub.ptr.sub740 = sub i64 %sub.ptr.lhs.cast738, %sub.ptr.rhs.cast739
  %add.ptr741 = getelementptr inbounds i8, i8* %391, i64 %sub.ptr.sub740
  store i8* %add.ptr741, i8** %b, align 8
  %394 = load i8*, i8** %new_buffer736, align 8
  %395 = load i8*, i8** %begalt, align 8
  %396 = load i8*, i8** %old_buffer707, align 8
  %sub.ptr.lhs.cast742 = ptrtoint i8* %395 to i64
  %sub.ptr.rhs.cast743 = ptrtoint i8* %396 to i64
  %sub.ptr.sub744 = sub i64 %sub.ptr.lhs.cast742, %sub.ptr.rhs.cast743
  %add.ptr745 = getelementptr inbounds i8, i8* %394, i64 %sub.ptr.sub744
  store i8* %add.ptr745, i8** %begalt, align 8
  %397 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool746 = icmp ne i8* %397, null
  br i1 %tobool746, label %if.then.747, label %if.end.752

if.then.747:                                      ; preds = %if.then.735
  %398 = load i8*, i8** %new_buffer736, align 8
  %399 = load i8*, i8** %fixup_alt_jump, align 8
  %400 = load i8*, i8** %old_buffer707, align 8
  %sub.ptr.lhs.cast748 = ptrtoint i8* %399 to i64
  %sub.ptr.rhs.cast749 = ptrtoint i8* %400 to i64
  %sub.ptr.sub750 = sub i64 %sub.ptr.lhs.cast748, %sub.ptr.rhs.cast749
  %add.ptr751 = getelementptr inbounds i8, i8* %398, i64 %sub.ptr.sub750
  store i8* %add.ptr751, i8** %fixup_alt_jump, align 8
  br label %if.end.752

if.end.752:                                       ; preds = %if.then.747, %if.then.735
  %401 = load i8*, i8** %laststart, align 8
  %tobool753 = icmp ne i8* %401, null
  br i1 %tobool753, label %if.then.754, label %if.end.759

if.then.754:                                      ; preds = %if.end.752
  %402 = load i8*, i8** %new_buffer736, align 8
  %403 = load i8*, i8** %laststart, align 8
  %404 = load i8*, i8** %old_buffer707, align 8
  %sub.ptr.lhs.cast755 = ptrtoint i8* %403 to i64
  %sub.ptr.rhs.cast756 = ptrtoint i8* %404 to i64
  %sub.ptr.sub757 = sub i64 %sub.ptr.lhs.cast755, %sub.ptr.rhs.cast756
  %add.ptr758 = getelementptr inbounds i8, i8* %402, i64 %sub.ptr.sub757
  store i8* %add.ptr758, i8** %laststart, align 8
  br label %if.end.759

if.end.759:                                       ; preds = %if.then.754, %if.end.752
  %405 = load i8*, i8** %pending_exact, align 8
  %tobool760 = icmp ne i8* %405, null
  br i1 %tobool760, label %if.then.761, label %if.end.766

if.then.761:                                      ; preds = %if.end.759
  %406 = load i8*, i8** %new_buffer736, align 8
  %407 = load i8*, i8** %pending_exact, align 8
  %408 = load i8*, i8** %old_buffer707, align 8
  %sub.ptr.lhs.cast762 = ptrtoint i8* %407 to i64
  %sub.ptr.rhs.cast763 = ptrtoint i8* %408 to i64
  %sub.ptr.sub764 = sub i64 %sub.ptr.lhs.cast762, %sub.ptr.rhs.cast763
  %add.ptr765 = getelementptr inbounds i8, i8* %406, i64 %sub.ptr.sub764
  store i8* %add.ptr765, i8** %pending_exact, align 8
  br label %if.end.766

if.end.766:                                       ; preds = %if.then.761, %if.end.759
  br label %if.end.767

if.end.767:                                       ; preds = %if.end.766, %if.end.731
  br label %do.end.768

do.end.768:                                       ; preds = %if.end.767
  br label %while.cond.696

while.end.769:                                    ; preds = %while.cond.696
  %409 = load i8, i8* %zero_times_ok, align 1
  %tobool770 = icmp ne i8 %409, 0
  br i1 %tobool770, label %if.else.777, label %if.then.771

if.then.771:                                      ; preds = %while.end.769
  %410 = load i32, i32* %ofj, align 4
  %411 = load i8*, i8** %b, align 8
  %412 = load i8*, i8** %b, align 8
  %add.ptr772 = getelementptr inbounds i8, i8* %412, i64 6
  %413 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast773 = ptrtoint i8* %add.ptr772 to i64
  %sub.ptr.rhs.cast774 = ptrtoint i8* %413 to i64
  %sub.ptr.sub775 = sub i64 %sub.ptr.lhs.cast773, %sub.ptr.rhs.cast774
  %sub = sub nsw i64 %sub.ptr.sub775, 3
  %conv776 = trunc i64 %sub to i32
  call void @store_op1(i32 %410, i8* %411, i32 %conv776)
  br label %if.end.792

if.else.777:                                      ; preds = %while.end.769
  %414 = load i8, i8* %simple, align 1
  %conv778 = sext i8 %414 to i32
  %tobool779 = icmp ne i32 %conv778, 0
  br i1 %tobool779, label %cond.true.780, label %cond.false.781

cond.true.780:                                    ; preds = %if.else.777
  br label %cond.end.782

cond.false.781:                                   ; preds = %if.else.777
  %415 = load i32, i32* %ofj, align 4
  br label %cond.end.782

cond.end.782:                                     ; preds = %cond.false.781, %cond.true.780
  %cond783 = phi i32 [ 18, %cond.true.780 ], [ %415, %cond.false.781 ]
  %416 = load i8*, i8** %laststart, align 8
  %417 = load i64, i64* %startoffset, align 8
  %add.ptr784 = getelementptr inbounds i8, i8* %416, i64 %417
  %418 = load i8*, i8** %b, align 8
  %add.ptr785 = getelementptr inbounds i8, i8* %418, i64 6
  %419 = load i8*, i8** %laststart, align 8
  %420 = load i64, i64* %startoffset, align 8
  %add.ptr786 = getelementptr inbounds i8, i8* %419, i64 %420
  %sub.ptr.lhs.cast787 = ptrtoint i8* %add.ptr785 to i64
  %sub.ptr.rhs.cast788 = ptrtoint i8* %add.ptr786 to i64
  %sub.ptr.sub789 = sub i64 %sub.ptr.lhs.cast787, %sub.ptr.rhs.cast788
  %sub790 = sub nsw i64 %sub.ptr.sub789, 3
  %conv791 = trunc i64 %sub790 to i32
  %421 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 %cond783, i8* %add.ptr784, i32 %conv791, i8* %421)
  br label %if.end.792

if.end.792:                                       ; preds = %cond.end.782, %if.then.771
  %422 = load i8*, i8** %b, align 8
  %add.ptr793 = getelementptr inbounds i8, i8* %422, i64 3
  store i8* %add.ptr793, i8** %b, align 8
  %423 = load i8*, i8** %b, align 8
  %424 = load i8*, i8** %laststart, align 8
  %425 = load i64, i64* %startoffset, align 8
  %add.ptr794 = getelementptr inbounds i8, i8* %424, i64 %425
  %426 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast795 = ptrtoint i8* %add.ptr794 to i64
  %sub.ptr.rhs.cast796 = ptrtoint i8* %426 to i64
  %sub.ptr.sub797 = sub i64 %sub.ptr.lhs.cast795, %sub.ptr.rhs.cast796
  %sub798 = sub nsw i64 %sub.ptr.sub797, 3
  %conv799 = trunc i64 %sub798 to i32
  call void @store_op1(i32 13, i8* %423, i32 %conv799)
  %427 = load i8*, i8** %b, align 8
  %add.ptr800 = getelementptr inbounds i8, i8* %427, i64 3
  store i8* %add.ptr800, i8** %b, align 8
  br label %if.end.883

if.else.801:                                      ; preds = %if.then.593
  br label %while.cond.802

while.cond.802:                                   ; preds = %do.end.874, %if.else.801
  %428 = load i8*, i8** %b, align 8
  %429 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer803 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %429, i32 0, i32 0
  %430 = load i8*, i8** %buffer803, align 8
  %sub.ptr.lhs.cast804 = ptrtoint i8* %428 to i64
  %sub.ptr.rhs.cast805 = ptrtoint i8* %430 to i64
  %sub.ptr.sub806 = sub i64 %sub.ptr.lhs.cast804, %sub.ptr.rhs.cast805
  %add807 = add nsw i64 %sub.ptr.sub806, 3
  %431 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated808 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %431, i32 0, i32 1
  %432 = load i64, i64* %allocated808, align 8
  %cmp809 = icmp ugt i64 %add807, %432
  br i1 %cmp809, label %while.body.811, label %while.end.875

while.body.811:                                   ; preds = %while.cond.802
  br label %do.body.812

do.body.812:                                      ; preds = %while.body.811
  %433 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer814 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %433, i32 0, i32 0
  %434 = load i8*, i8** %buffer814, align 8
  store i8* %434, i8** %old_buffer813, align 8
  %435 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated815 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %435, i32 0, i32 1
  %436 = load i64, i64* %allocated815, align 8
  %cmp816 = icmp eq i64 %436, 32768
  br i1 %cmp816, label %if.then.818, label %if.end.819

if.then.818:                                      ; preds = %do.body.812
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.819:                                       ; preds = %do.body.812
  %437 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated820 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %437, i32 0, i32 1
  %438 = load i64, i64* %allocated820, align 8
  %shl821 = shl i64 %438, 1
  store i64 %shl821, i64* %allocated820, align 8
  %439 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated822 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %439, i32 0, i32 1
  %440 = load i64, i64* %allocated822, align 8
  %cmp823 = icmp ugt i64 %440, 32768
  br i1 %cmp823, label %if.then.825, label %if.end.827

if.then.825:                                      ; preds = %if.end.819
  %441 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated826 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %441, i32 0, i32 1
  store i64 32768, i64* %allocated826, align 8
  br label %if.end.827

if.end.827:                                       ; preds = %if.then.825, %if.end.819
  %442 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer828 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %442, i32 0, i32 0
  %443 = load i8*, i8** %buffer828, align 8
  %444 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated829 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %444, i32 0, i32 1
  %445 = load i64, i64* %allocated829, align 8
  %mul830 = mul i64 %445, 1
  %call831 = call i8* @xrealloc(i8* %443, i64 %mul830)
  %446 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer832 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %446, i32 0, i32 0
  store i8* %call831, i8** %buffer832, align 8
  %447 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer833 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %447, i32 0, i32 0
  %448 = load i8*, i8** %buffer833, align 8
  %cmp834 = icmp eq i8* %448, null
  br i1 %cmp834, label %if.then.836, label %if.end.837

if.then.836:                                      ; preds = %if.end.827
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.837:                                       ; preds = %if.end.827
  %449 = load i8*, i8** %old_buffer813, align 8
  %450 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer838 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %450, i32 0, i32 0
  %451 = load i8*, i8** %buffer838, align 8
  %cmp839 = icmp ne i8* %449, %451
  br i1 %cmp839, label %if.then.841, label %if.end.873

if.then.841:                                      ; preds = %if.end.837
  %452 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer843 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %452, i32 0, i32 0
  %453 = load i8*, i8** %buffer843, align 8
  store i8* %453, i8** %new_buffer842, align 8
  %454 = load i8*, i8** %new_buffer842, align 8
  %455 = load i8*, i8** %b, align 8
  %456 = load i8*, i8** %old_buffer813, align 8
  %sub.ptr.lhs.cast844 = ptrtoint i8* %455 to i64
  %sub.ptr.rhs.cast845 = ptrtoint i8* %456 to i64
  %sub.ptr.sub846 = sub i64 %sub.ptr.lhs.cast844, %sub.ptr.rhs.cast845
  %add.ptr847 = getelementptr inbounds i8, i8* %454, i64 %sub.ptr.sub846
  store i8* %add.ptr847, i8** %b, align 8
  %457 = load i8*, i8** %new_buffer842, align 8
  %458 = load i8*, i8** %begalt, align 8
  %459 = load i8*, i8** %old_buffer813, align 8
  %sub.ptr.lhs.cast848 = ptrtoint i8* %458 to i64
  %sub.ptr.rhs.cast849 = ptrtoint i8* %459 to i64
  %sub.ptr.sub850 = sub i64 %sub.ptr.lhs.cast848, %sub.ptr.rhs.cast849
  %add.ptr851 = getelementptr inbounds i8, i8* %457, i64 %sub.ptr.sub850
  store i8* %add.ptr851, i8** %begalt, align 8
  %460 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool852 = icmp ne i8* %460, null
  br i1 %tobool852, label %if.then.853, label %if.end.858

if.then.853:                                      ; preds = %if.then.841
  %461 = load i8*, i8** %new_buffer842, align 8
  %462 = load i8*, i8** %fixup_alt_jump, align 8
  %463 = load i8*, i8** %old_buffer813, align 8
  %sub.ptr.lhs.cast854 = ptrtoint i8* %462 to i64
  %sub.ptr.rhs.cast855 = ptrtoint i8* %463 to i64
  %sub.ptr.sub856 = sub i64 %sub.ptr.lhs.cast854, %sub.ptr.rhs.cast855
  %add.ptr857 = getelementptr inbounds i8, i8* %461, i64 %sub.ptr.sub856
  store i8* %add.ptr857, i8** %fixup_alt_jump, align 8
  br label %if.end.858

if.end.858:                                       ; preds = %if.then.853, %if.then.841
  %464 = load i8*, i8** %laststart, align 8
  %tobool859 = icmp ne i8* %464, null
  br i1 %tobool859, label %if.then.860, label %if.end.865

if.then.860:                                      ; preds = %if.end.858
  %465 = load i8*, i8** %new_buffer842, align 8
  %466 = load i8*, i8** %laststart, align 8
  %467 = load i8*, i8** %old_buffer813, align 8
  %sub.ptr.lhs.cast861 = ptrtoint i8* %466 to i64
  %sub.ptr.rhs.cast862 = ptrtoint i8* %467 to i64
  %sub.ptr.sub863 = sub i64 %sub.ptr.lhs.cast861, %sub.ptr.rhs.cast862
  %add.ptr864 = getelementptr inbounds i8, i8* %465, i64 %sub.ptr.sub863
  store i8* %add.ptr864, i8** %laststart, align 8
  br label %if.end.865

if.end.865:                                       ; preds = %if.then.860, %if.end.858
  %468 = load i8*, i8** %pending_exact, align 8
  %tobool866 = icmp ne i8* %468, null
  br i1 %tobool866, label %if.then.867, label %if.end.872

if.then.867:                                      ; preds = %if.end.865
  %469 = load i8*, i8** %new_buffer842, align 8
  %470 = load i8*, i8** %pending_exact, align 8
  %471 = load i8*, i8** %old_buffer813, align 8
  %sub.ptr.lhs.cast868 = ptrtoint i8* %470 to i64
  %sub.ptr.rhs.cast869 = ptrtoint i8* %471 to i64
  %sub.ptr.sub870 = sub i64 %sub.ptr.lhs.cast868, %sub.ptr.rhs.cast869
  %add.ptr871 = getelementptr inbounds i8, i8* %469, i64 %sub.ptr.sub870
  store i8* %add.ptr871, i8** %pending_exact, align 8
  br label %if.end.872

if.end.872:                                       ; preds = %if.then.867, %if.end.865
  br label %if.end.873

if.end.873:                                       ; preds = %if.end.872, %if.end.837
  br label %do.end.874

do.end.874:                                       ; preds = %if.end.873
  br label %while.cond.802

while.end.875:                                    ; preds = %while.cond.802
  %472 = load i8*, i8** %laststart, align 8
  %473 = load i8*, i8** %b, align 8
  %add.ptr876 = getelementptr inbounds i8, i8* %473, i64 3
  %474 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast877 = ptrtoint i8* %add.ptr876 to i64
  %sub.ptr.rhs.cast878 = ptrtoint i8* %474 to i64
  %sub.ptr.sub879 = sub i64 %sub.ptr.lhs.cast877, %sub.ptr.rhs.cast878
  %sub880 = sub nsw i64 %sub.ptr.sub879, 3
  %conv881 = trunc i64 %sub880 to i32
  %475 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 14, i8* %472, i32 %conv881, i8* %475)
  %476 = load i8*, i8** %b, align 8
  %add.ptr882 = getelementptr inbounds i8, i8* %476, i64 3
  store i8* %add.ptr882, i8** %b, align 8
  br label %if.end.883

if.end.883:                                       ; preds = %while.end.875, %if.end.792
  br label %if.end.1077

if.else.884:                                      ; preds = %if.end.591
  br label %while.cond.885

while.cond.885:                                   ; preds = %do.end.957, %if.else.884
  %477 = load i8*, i8** %b, align 8
  %478 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer886 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %478, i32 0, i32 0
  %479 = load i8*, i8** %buffer886, align 8
  %sub.ptr.lhs.cast887 = ptrtoint i8* %477 to i64
  %sub.ptr.rhs.cast888 = ptrtoint i8* %479 to i64
  %sub.ptr.sub889 = sub i64 %sub.ptr.lhs.cast887, %sub.ptr.rhs.cast888
  %add890 = add nsw i64 %sub.ptr.sub889, 7
  %480 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated891 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %480, i32 0, i32 1
  %481 = load i64, i64* %allocated891, align 8
  %cmp892 = icmp ugt i64 %add890, %481
  br i1 %cmp892, label %while.body.894, label %while.end.958

while.body.894:                                   ; preds = %while.cond.885
  br label %do.body.895

do.body.895:                                      ; preds = %while.body.894
  %482 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer897 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %482, i32 0, i32 0
  %483 = load i8*, i8** %buffer897, align 8
  store i8* %483, i8** %old_buffer896, align 8
  %484 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated898 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %484, i32 0, i32 1
  %485 = load i64, i64* %allocated898, align 8
  %cmp899 = icmp eq i64 %485, 32768
  br i1 %cmp899, label %if.then.901, label %if.end.902

if.then.901:                                      ; preds = %do.body.895
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.902:                                       ; preds = %do.body.895
  %486 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated903 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %486, i32 0, i32 1
  %487 = load i64, i64* %allocated903, align 8
  %shl904 = shl i64 %487, 1
  store i64 %shl904, i64* %allocated903, align 8
  %488 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated905 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %488, i32 0, i32 1
  %489 = load i64, i64* %allocated905, align 8
  %cmp906 = icmp ugt i64 %489, 32768
  br i1 %cmp906, label %if.then.908, label %if.end.910

if.then.908:                                      ; preds = %if.end.902
  %490 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated909 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %490, i32 0, i32 1
  store i64 32768, i64* %allocated909, align 8
  br label %if.end.910

if.end.910:                                       ; preds = %if.then.908, %if.end.902
  %491 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer911 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %491, i32 0, i32 0
  %492 = load i8*, i8** %buffer911, align 8
  %493 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated912 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %493, i32 0, i32 1
  %494 = load i64, i64* %allocated912, align 8
  %mul913 = mul i64 %494, 1
  %call914 = call i8* @xrealloc(i8* %492, i64 %mul913)
  %495 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer915 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %495, i32 0, i32 0
  store i8* %call914, i8** %buffer915, align 8
  %496 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer916 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %496, i32 0, i32 0
  %497 = load i8*, i8** %buffer916, align 8
  %cmp917 = icmp eq i8* %497, null
  br i1 %cmp917, label %if.then.919, label %if.end.920

if.then.919:                                      ; preds = %if.end.910
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.920:                                       ; preds = %if.end.910
  %498 = load i8*, i8** %old_buffer896, align 8
  %499 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer921 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %499, i32 0, i32 0
  %500 = load i8*, i8** %buffer921, align 8
  %cmp922 = icmp ne i8* %498, %500
  br i1 %cmp922, label %if.then.924, label %if.end.956

if.then.924:                                      ; preds = %if.end.920
  %501 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer926 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %501, i32 0, i32 0
  %502 = load i8*, i8** %buffer926, align 8
  store i8* %502, i8** %new_buffer925, align 8
  %503 = load i8*, i8** %new_buffer925, align 8
  %504 = load i8*, i8** %b, align 8
  %505 = load i8*, i8** %old_buffer896, align 8
  %sub.ptr.lhs.cast927 = ptrtoint i8* %504 to i64
  %sub.ptr.rhs.cast928 = ptrtoint i8* %505 to i64
  %sub.ptr.sub929 = sub i64 %sub.ptr.lhs.cast927, %sub.ptr.rhs.cast928
  %add.ptr930 = getelementptr inbounds i8, i8* %503, i64 %sub.ptr.sub929
  store i8* %add.ptr930, i8** %b, align 8
  %506 = load i8*, i8** %new_buffer925, align 8
  %507 = load i8*, i8** %begalt, align 8
  %508 = load i8*, i8** %old_buffer896, align 8
  %sub.ptr.lhs.cast931 = ptrtoint i8* %507 to i64
  %sub.ptr.rhs.cast932 = ptrtoint i8* %508 to i64
  %sub.ptr.sub933 = sub i64 %sub.ptr.lhs.cast931, %sub.ptr.rhs.cast932
  %add.ptr934 = getelementptr inbounds i8, i8* %506, i64 %sub.ptr.sub933
  store i8* %add.ptr934, i8** %begalt, align 8
  %509 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool935 = icmp ne i8* %509, null
  br i1 %tobool935, label %if.then.936, label %if.end.941

if.then.936:                                      ; preds = %if.then.924
  %510 = load i8*, i8** %new_buffer925, align 8
  %511 = load i8*, i8** %fixup_alt_jump, align 8
  %512 = load i8*, i8** %old_buffer896, align 8
  %sub.ptr.lhs.cast937 = ptrtoint i8* %511 to i64
  %sub.ptr.rhs.cast938 = ptrtoint i8* %512 to i64
  %sub.ptr.sub939 = sub i64 %sub.ptr.lhs.cast937, %sub.ptr.rhs.cast938
  %add.ptr940 = getelementptr inbounds i8, i8* %510, i64 %sub.ptr.sub939
  store i8* %add.ptr940, i8** %fixup_alt_jump, align 8
  br label %if.end.941

if.end.941:                                       ; preds = %if.then.936, %if.then.924
  %513 = load i8*, i8** %laststart, align 8
  %tobool942 = icmp ne i8* %513, null
  br i1 %tobool942, label %if.then.943, label %if.end.948

if.then.943:                                      ; preds = %if.end.941
  %514 = load i8*, i8** %new_buffer925, align 8
  %515 = load i8*, i8** %laststart, align 8
  %516 = load i8*, i8** %old_buffer896, align 8
  %sub.ptr.lhs.cast944 = ptrtoint i8* %515 to i64
  %sub.ptr.rhs.cast945 = ptrtoint i8* %516 to i64
  %sub.ptr.sub946 = sub i64 %sub.ptr.lhs.cast944, %sub.ptr.rhs.cast945
  %add.ptr947 = getelementptr inbounds i8, i8* %514, i64 %sub.ptr.sub946
  store i8* %add.ptr947, i8** %laststart, align 8
  br label %if.end.948

if.end.948:                                       ; preds = %if.then.943, %if.end.941
  %517 = load i8*, i8** %pending_exact, align 8
  %tobool949 = icmp ne i8* %517, null
  br i1 %tobool949, label %if.then.950, label %if.end.955

if.then.950:                                      ; preds = %if.end.948
  %518 = load i8*, i8** %new_buffer925, align 8
  %519 = load i8*, i8** %pending_exact, align 8
  %520 = load i8*, i8** %old_buffer896, align 8
  %sub.ptr.lhs.cast951 = ptrtoint i8* %519 to i64
  %sub.ptr.rhs.cast952 = ptrtoint i8* %520 to i64
  %sub.ptr.sub953 = sub i64 %sub.ptr.lhs.cast951, %sub.ptr.rhs.cast952
  %add.ptr954 = getelementptr inbounds i8, i8* %518, i64 %sub.ptr.sub953
  store i8* %add.ptr954, i8** %pending_exact, align 8
  br label %if.end.955

if.end.955:                                       ; preds = %if.then.950, %if.end.948
  br label %if.end.956

if.end.956:                                       ; preds = %if.end.955, %if.end.920
  br label %do.end.957

do.end.957:                                       ; preds = %if.end.956
  br label %while.cond.885

while.end.958:                                    ; preds = %while.cond.885
  %521 = load i8, i8* %many_times_ok, align 1
  %tobool959 = icmp ne i8 %521, 0
  br i1 %tobool959, label %if.then.960, label %if.else.1061

if.then.960:                                      ; preds = %while.end.958
  %522 = load i8*, i8** %laststart, align 8
  %523 = load i8*, i8** %b, align 8
  %call961 = call i32 @analyze_first(i8* %522, i8* %523, i8* null, i32 0)
  %conv962 = trunc i32 %call961 to i8
  store i8 %conv962, i8* %emptyp, align 1
  %524 = load i8, i8* %emptyp, align 1
  %tobool963 = icmp ne i8 %524, 0
  br i1 %tobool963, label %if.then.964, label %if.end.1042

if.then.964:                                      ; preds = %if.then.960
  br label %do.body.965

do.body.965:                                      ; preds = %if.then.964
  br label %while.cond.966

while.cond.966:                                   ; preds = %do.end.1038, %do.body.965
  %525 = load i8*, i8** %b, align 8
  %526 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer967 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %526, i32 0, i32 0
  %527 = load i8*, i8** %buffer967, align 8
  %sub.ptr.lhs.cast968 = ptrtoint i8* %525 to i64
  %sub.ptr.rhs.cast969 = ptrtoint i8* %527 to i64
  %sub.ptr.sub970 = sub i64 %sub.ptr.lhs.cast968, %sub.ptr.rhs.cast969
  %add971 = add nsw i64 %sub.ptr.sub970, 1
  %528 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated972 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %528, i32 0, i32 1
  %529 = load i64, i64* %allocated972, align 8
  %cmp973 = icmp ugt i64 %add971, %529
  br i1 %cmp973, label %while.body.975, label %while.end.1039

while.body.975:                                   ; preds = %while.cond.966
  br label %do.body.976

do.body.976:                                      ; preds = %while.body.975
  %530 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer978 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %530, i32 0, i32 0
  %531 = load i8*, i8** %buffer978, align 8
  store i8* %531, i8** %old_buffer977, align 8
  %532 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated979 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %532, i32 0, i32 1
  %533 = load i64, i64* %allocated979, align 8
  %cmp980 = icmp eq i64 %533, 32768
  br i1 %cmp980, label %if.then.982, label %if.end.983

if.then.982:                                      ; preds = %do.body.976
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.983:                                       ; preds = %do.body.976
  %534 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated984 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %534, i32 0, i32 1
  %535 = load i64, i64* %allocated984, align 8
  %shl985 = shl i64 %535, 1
  store i64 %shl985, i64* %allocated984, align 8
  %536 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated986 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %536, i32 0, i32 1
  %537 = load i64, i64* %allocated986, align 8
  %cmp987 = icmp ugt i64 %537, 32768
  br i1 %cmp987, label %if.then.989, label %if.end.991

if.then.989:                                      ; preds = %if.end.983
  %538 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated990 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %538, i32 0, i32 1
  store i64 32768, i64* %allocated990, align 8
  br label %if.end.991

if.end.991:                                       ; preds = %if.then.989, %if.end.983
  %539 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer992 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %539, i32 0, i32 0
  %540 = load i8*, i8** %buffer992, align 8
  %541 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated993 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %541, i32 0, i32 1
  %542 = load i64, i64* %allocated993, align 8
  %mul994 = mul i64 %542, 1
  %call995 = call i8* @xrealloc(i8* %540, i64 %mul994)
  %543 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer996 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %543, i32 0, i32 0
  store i8* %call995, i8** %buffer996, align 8
  %544 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer997 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %544, i32 0, i32 0
  %545 = load i8*, i8** %buffer997, align 8
  %cmp998 = icmp eq i8* %545, null
  br i1 %cmp998, label %if.then.1000, label %if.end.1001

if.then.1000:                                     ; preds = %if.end.991
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.1001:                                      ; preds = %if.end.991
  %546 = load i8*, i8** %old_buffer977, align 8
  %547 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1002 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %547, i32 0, i32 0
  %548 = load i8*, i8** %buffer1002, align 8
  %cmp1003 = icmp ne i8* %546, %548
  br i1 %cmp1003, label %if.then.1005, label %if.end.1037

if.then.1005:                                     ; preds = %if.end.1001
  %549 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1007 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %549, i32 0, i32 0
  %550 = load i8*, i8** %buffer1007, align 8
  store i8* %550, i8** %new_buffer1006, align 8
  %551 = load i8*, i8** %new_buffer1006, align 8
  %552 = load i8*, i8** %b, align 8
  %553 = load i8*, i8** %old_buffer977, align 8
  %sub.ptr.lhs.cast1008 = ptrtoint i8* %552 to i64
  %sub.ptr.rhs.cast1009 = ptrtoint i8* %553 to i64
  %sub.ptr.sub1010 = sub i64 %sub.ptr.lhs.cast1008, %sub.ptr.rhs.cast1009
  %add.ptr1011 = getelementptr inbounds i8, i8* %551, i64 %sub.ptr.sub1010
  store i8* %add.ptr1011, i8** %b, align 8
  %554 = load i8*, i8** %new_buffer1006, align 8
  %555 = load i8*, i8** %begalt, align 8
  %556 = load i8*, i8** %old_buffer977, align 8
  %sub.ptr.lhs.cast1012 = ptrtoint i8* %555 to i64
  %sub.ptr.rhs.cast1013 = ptrtoint i8* %556 to i64
  %sub.ptr.sub1014 = sub i64 %sub.ptr.lhs.cast1012, %sub.ptr.rhs.cast1013
  %add.ptr1015 = getelementptr inbounds i8, i8* %554, i64 %sub.ptr.sub1014
  store i8* %add.ptr1015, i8** %begalt, align 8
  %557 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool1016 = icmp ne i8* %557, null
  br i1 %tobool1016, label %if.then.1017, label %if.end.1022

if.then.1017:                                     ; preds = %if.then.1005
  %558 = load i8*, i8** %new_buffer1006, align 8
  %559 = load i8*, i8** %fixup_alt_jump, align 8
  %560 = load i8*, i8** %old_buffer977, align 8
  %sub.ptr.lhs.cast1018 = ptrtoint i8* %559 to i64
  %sub.ptr.rhs.cast1019 = ptrtoint i8* %560 to i64
  %sub.ptr.sub1020 = sub i64 %sub.ptr.lhs.cast1018, %sub.ptr.rhs.cast1019
  %add.ptr1021 = getelementptr inbounds i8, i8* %558, i64 %sub.ptr.sub1020
  store i8* %add.ptr1021, i8** %fixup_alt_jump, align 8
  br label %if.end.1022

if.end.1022:                                      ; preds = %if.then.1017, %if.then.1005
  %561 = load i8*, i8** %laststart, align 8
  %tobool1023 = icmp ne i8* %561, null
  br i1 %tobool1023, label %if.then.1024, label %if.end.1029

if.then.1024:                                     ; preds = %if.end.1022
  %562 = load i8*, i8** %new_buffer1006, align 8
  %563 = load i8*, i8** %laststart, align 8
  %564 = load i8*, i8** %old_buffer977, align 8
  %sub.ptr.lhs.cast1025 = ptrtoint i8* %563 to i64
  %sub.ptr.rhs.cast1026 = ptrtoint i8* %564 to i64
  %sub.ptr.sub1027 = sub i64 %sub.ptr.lhs.cast1025, %sub.ptr.rhs.cast1026
  %add.ptr1028 = getelementptr inbounds i8, i8* %562, i64 %sub.ptr.sub1027
  store i8* %add.ptr1028, i8** %laststart, align 8
  br label %if.end.1029

if.end.1029:                                      ; preds = %if.then.1024, %if.end.1022
  %565 = load i8*, i8** %pending_exact, align 8
  %tobool1030 = icmp ne i8* %565, null
  br i1 %tobool1030, label %if.then.1031, label %if.end.1036

if.then.1031:                                     ; preds = %if.end.1029
  %566 = load i8*, i8** %new_buffer1006, align 8
  %567 = load i8*, i8** %pending_exact, align 8
  %568 = load i8*, i8** %old_buffer977, align 8
  %sub.ptr.lhs.cast1032 = ptrtoint i8* %567 to i64
  %sub.ptr.rhs.cast1033 = ptrtoint i8* %568 to i64
  %sub.ptr.sub1034 = sub i64 %sub.ptr.lhs.cast1032, %sub.ptr.rhs.cast1033
  %add.ptr1035 = getelementptr inbounds i8, i8* %566, i64 %sub.ptr.sub1034
  store i8* %add.ptr1035, i8** %pending_exact, align 8
  br label %if.end.1036

if.end.1036:                                      ; preds = %if.then.1031, %if.end.1029
  br label %if.end.1037

if.end.1037:                                      ; preds = %if.end.1036, %if.end.1001
  br label %do.end.1038

do.end.1038:                                      ; preds = %if.end.1037
  br label %while.cond.966

while.end.1039:                                   ; preds = %while.cond.966
  %569 = load i8*, i8** %b, align 8
  %incdec.ptr1040 = getelementptr inbounds i8, i8* %569, i32 1
  store i8* %incdec.ptr1040, i8** %b, align 8
  store i8 0, i8* %569, align 1
  br label %do.end.1041

do.end.1041:                                      ; preds = %while.end.1039
  br label %if.end.1042

if.end.1042:                                      ; preds = %do.end.1041, %if.then.960
  %570 = load i8, i8* %emptyp, align 1
  %conv1043 = sext i8 %570 to i32
  %tobool1044 = icmp ne i32 %conv1043, 0
  %cond1045 = select i1 %tobool1044, i32 17, i32 14
  %571 = load i8*, i8** %b, align 8
  %572 = load i8*, i8** %laststart, align 8
  %573 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast1046 = ptrtoint i8* %572 to i64
  %sub.ptr.rhs.cast1047 = ptrtoint i8* %573 to i64
  %sub.ptr.sub1048 = sub i64 %sub.ptr.lhs.cast1046, %sub.ptr.rhs.cast1047
  %sub1049 = sub nsw i64 %sub.ptr.sub1048, 3
  %conv1050 = trunc i64 %sub1049 to i32
  call void @store_op1(i32 %cond1045, i8* %571, i32 %conv1050)
  %574 = load i8*, i8** %b, align 8
  %add.ptr1051 = getelementptr inbounds i8, i8* %574, i64 3
  store i8* %add.ptr1051, i8** %b, align 8
  %575 = load i8, i8* %zero_times_ok, align 1
  %tobool1052 = icmp ne i8 %575, 0
  br i1 %tobool1052, label %if.then.1053, label %if.end.1060

if.then.1053:                                     ; preds = %if.end.1042
  %576 = load i8*, i8** %laststart, align 8
  %577 = load i8*, i8** %b, align 8
  %578 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast1054 = ptrtoint i8* %577 to i64
  %sub.ptr.rhs.cast1055 = ptrtoint i8* %578 to i64
  %sub.ptr.sub1056 = sub i64 %sub.ptr.lhs.cast1054, %sub.ptr.rhs.cast1055
  %sub1057 = sub nsw i64 %sub.ptr.sub1056, 3
  %conv1058 = trunc i64 %sub1057 to i32
  %579 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 13, i8* %576, i32 %conv1058, i8* %579)
  %580 = load i8*, i8** %b, align 8
  %add.ptr1059 = getelementptr inbounds i8, i8* %580, i64 3
  store i8* %add.ptr1059, i8** %b, align 8
  br label %if.end.1060

if.end.1060:                                      ; preds = %if.then.1053, %if.end.1042
  br label %if.end.1076

if.else.1061:                                     ; preds = %while.end.958
  %581 = load i8*, i8** %laststart, align 8
  %582 = load i8*, i8** %b, align 8
  %add.ptr1062 = getelementptr inbounds i8, i8* %582, i64 3
  %583 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast1063 = ptrtoint i8* %add.ptr1062 to i64
  %sub.ptr.rhs.cast1064 = ptrtoint i8* %583 to i64
  %sub.ptr.sub1065 = sub i64 %sub.ptr.lhs.cast1063, %sub.ptr.rhs.cast1064
  %sub1066 = sub nsw i64 %sub.ptr.sub1065, 3
  %conv1067 = trunc i64 %sub1066 to i32
  %584 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 13, i8* %581, i32 %conv1067, i8* %584)
  %585 = load i8*, i8** %b, align 8
  %add.ptr1068 = getelementptr inbounds i8, i8* %585, i64 3
  store i8* %add.ptr1068, i8** %b, align 8
  %586 = load i8*, i8** %laststart, align 8
  %587 = load i8*, i8** %laststart, align 8
  %add.ptr1069 = getelementptr inbounds i8, i8* %587, i64 6
  %588 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast1070 = ptrtoint i8* %add.ptr1069 to i64
  %sub.ptr.rhs.cast1071 = ptrtoint i8* %588 to i64
  %sub.ptr.sub1072 = sub i64 %sub.ptr.lhs.cast1070, %sub.ptr.rhs.cast1071
  %sub1073 = sub nsw i64 %sub.ptr.sub1072, 3
  %conv1074 = trunc i64 %sub1073 to i32
  %589 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 14, i8* %586, i32 %conv1074, i8* %589)
  %590 = load i8*, i8** %b, align 8
  %add.ptr1075 = getelementptr inbounds i8, i8* %590, i64 3
  store i8* %add.ptr1075, i8** %b, align 8
  br label %if.end.1076

if.end.1076:                                      ; preds = %if.else.1061, %if.end.1060
  br label %if.end.1077

if.end.1077:                                      ; preds = %if.end.1076, %if.end.883
  store i8* null, i8** %pending_exact, align 8
  br label %sw.epilog.6529

sw.bb.1078:                                       ; preds = %do.end.106
  %591 = load i8*, i8** %b, align 8
  store i8* %591, i8** %laststart, align 8
  br label %do.body.1079

do.body.1079:                                     ; preds = %sw.bb.1078
  br label %while.cond.1080

while.cond.1080:                                  ; preds = %do.end.1152, %do.body.1079
  %592 = load i8*, i8** %b, align 8
  %593 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1081 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %593, i32 0, i32 0
  %594 = load i8*, i8** %buffer1081, align 8
  %sub.ptr.lhs.cast1082 = ptrtoint i8* %592 to i64
  %sub.ptr.rhs.cast1083 = ptrtoint i8* %594 to i64
  %sub.ptr.sub1084 = sub i64 %sub.ptr.lhs.cast1082, %sub.ptr.rhs.cast1083
  %add1085 = add nsw i64 %sub.ptr.sub1084, 1
  %595 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1086 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %595, i32 0, i32 1
  %596 = load i64, i64* %allocated1086, align 8
  %cmp1087 = icmp ugt i64 %add1085, %596
  br i1 %cmp1087, label %while.body.1089, label %while.end.1153

while.body.1089:                                  ; preds = %while.cond.1080
  br label %do.body.1090

do.body.1090:                                     ; preds = %while.body.1089
  %597 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1092 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %597, i32 0, i32 0
  %598 = load i8*, i8** %buffer1092, align 8
  store i8* %598, i8** %old_buffer1091, align 8
  %599 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1093 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %599, i32 0, i32 1
  %600 = load i64, i64* %allocated1093, align 8
  %cmp1094 = icmp eq i64 %600, 32768
  br i1 %cmp1094, label %if.then.1096, label %if.end.1097

if.then.1096:                                     ; preds = %do.body.1090
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.1097:                                      ; preds = %do.body.1090
  %601 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1098 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %601, i32 0, i32 1
  %602 = load i64, i64* %allocated1098, align 8
  %shl1099 = shl i64 %602, 1
  store i64 %shl1099, i64* %allocated1098, align 8
  %603 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1100 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %603, i32 0, i32 1
  %604 = load i64, i64* %allocated1100, align 8
  %cmp1101 = icmp ugt i64 %604, 32768
  br i1 %cmp1101, label %if.then.1103, label %if.end.1105

if.then.1103:                                     ; preds = %if.end.1097
  %605 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1104 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %605, i32 0, i32 1
  store i64 32768, i64* %allocated1104, align 8
  br label %if.end.1105

if.end.1105:                                      ; preds = %if.then.1103, %if.end.1097
  %606 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1106 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %606, i32 0, i32 0
  %607 = load i8*, i8** %buffer1106, align 8
  %608 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1107 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %608, i32 0, i32 1
  %609 = load i64, i64* %allocated1107, align 8
  %mul1108 = mul i64 %609, 1
  %call1109 = call i8* @xrealloc(i8* %607, i64 %mul1108)
  %610 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1110 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %610, i32 0, i32 0
  store i8* %call1109, i8** %buffer1110, align 8
  %611 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1111 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %611, i32 0, i32 0
  %612 = load i8*, i8** %buffer1111, align 8
  %cmp1112 = icmp eq i8* %612, null
  br i1 %cmp1112, label %if.then.1114, label %if.end.1115

if.then.1114:                                     ; preds = %if.end.1105
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.1115:                                      ; preds = %if.end.1105
  %613 = load i8*, i8** %old_buffer1091, align 8
  %614 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1116 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %614, i32 0, i32 0
  %615 = load i8*, i8** %buffer1116, align 8
  %cmp1117 = icmp ne i8* %613, %615
  br i1 %cmp1117, label %if.then.1119, label %if.end.1151

if.then.1119:                                     ; preds = %if.end.1115
  %616 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1121 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %616, i32 0, i32 0
  %617 = load i8*, i8** %buffer1121, align 8
  store i8* %617, i8** %new_buffer1120, align 8
  %618 = load i8*, i8** %new_buffer1120, align 8
  %619 = load i8*, i8** %b, align 8
  %620 = load i8*, i8** %old_buffer1091, align 8
  %sub.ptr.lhs.cast1122 = ptrtoint i8* %619 to i64
  %sub.ptr.rhs.cast1123 = ptrtoint i8* %620 to i64
  %sub.ptr.sub1124 = sub i64 %sub.ptr.lhs.cast1122, %sub.ptr.rhs.cast1123
  %add.ptr1125 = getelementptr inbounds i8, i8* %618, i64 %sub.ptr.sub1124
  store i8* %add.ptr1125, i8** %b, align 8
  %621 = load i8*, i8** %new_buffer1120, align 8
  %622 = load i8*, i8** %begalt, align 8
  %623 = load i8*, i8** %old_buffer1091, align 8
  %sub.ptr.lhs.cast1126 = ptrtoint i8* %622 to i64
  %sub.ptr.rhs.cast1127 = ptrtoint i8* %623 to i64
  %sub.ptr.sub1128 = sub i64 %sub.ptr.lhs.cast1126, %sub.ptr.rhs.cast1127
  %add.ptr1129 = getelementptr inbounds i8, i8* %621, i64 %sub.ptr.sub1128
  store i8* %add.ptr1129, i8** %begalt, align 8
  %624 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool1130 = icmp ne i8* %624, null
  br i1 %tobool1130, label %if.then.1131, label %if.end.1136

if.then.1131:                                     ; preds = %if.then.1119
  %625 = load i8*, i8** %new_buffer1120, align 8
  %626 = load i8*, i8** %fixup_alt_jump, align 8
  %627 = load i8*, i8** %old_buffer1091, align 8
  %sub.ptr.lhs.cast1132 = ptrtoint i8* %626 to i64
  %sub.ptr.rhs.cast1133 = ptrtoint i8* %627 to i64
  %sub.ptr.sub1134 = sub i64 %sub.ptr.lhs.cast1132, %sub.ptr.rhs.cast1133
  %add.ptr1135 = getelementptr inbounds i8, i8* %625, i64 %sub.ptr.sub1134
  store i8* %add.ptr1135, i8** %fixup_alt_jump, align 8
  br label %if.end.1136

if.end.1136:                                      ; preds = %if.then.1131, %if.then.1119
  %628 = load i8*, i8** %laststart, align 8
  %tobool1137 = icmp ne i8* %628, null
  br i1 %tobool1137, label %if.then.1138, label %if.end.1143

if.then.1138:                                     ; preds = %if.end.1136
  %629 = load i8*, i8** %new_buffer1120, align 8
  %630 = load i8*, i8** %laststart, align 8
  %631 = load i8*, i8** %old_buffer1091, align 8
  %sub.ptr.lhs.cast1139 = ptrtoint i8* %630 to i64
  %sub.ptr.rhs.cast1140 = ptrtoint i8* %631 to i64
  %sub.ptr.sub1141 = sub i64 %sub.ptr.lhs.cast1139, %sub.ptr.rhs.cast1140
  %add.ptr1142 = getelementptr inbounds i8, i8* %629, i64 %sub.ptr.sub1141
  store i8* %add.ptr1142, i8** %laststart, align 8
  br label %if.end.1143

if.end.1143:                                      ; preds = %if.then.1138, %if.end.1136
  %632 = load i8*, i8** %pending_exact, align 8
  %tobool1144 = icmp ne i8* %632, null
  br i1 %tobool1144, label %if.then.1145, label %if.end.1150

if.then.1145:                                     ; preds = %if.end.1143
  %633 = load i8*, i8** %new_buffer1120, align 8
  %634 = load i8*, i8** %pending_exact, align 8
  %635 = load i8*, i8** %old_buffer1091, align 8
  %sub.ptr.lhs.cast1146 = ptrtoint i8* %634 to i64
  %sub.ptr.rhs.cast1147 = ptrtoint i8* %635 to i64
  %sub.ptr.sub1148 = sub i64 %sub.ptr.lhs.cast1146, %sub.ptr.rhs.cast1147
  %add.ptr1149 = getelementptr inbounds i8, i8* %633, i64 %sub.ptr.sub1148
  store i8* %add.ptr1149, i8** %pending_exact, align 8
  br label %if.end.1150

if.end.1150:                                      ; preds = %if.then.1145, %if.end.1143
  br label %if.end.1151

if.end.1151:                                      ; preds = %if.end.1150, %if.end.1115
  br label %do.end.1152

do.end.1152:                                      ; preds = %if.end.1151
  br label %while.cond.1080

while.end.1153:                                   ; preds = %while.cond.1080
  %636 = load i8*, i8** %b, align 8
  %incdec.ptr1154 = getelementptr inbounds i8, i8* %636, i32 1
  store i8* %incdec.ptr1154, i8** %b, align 8
  store i8 3, i8* %636, align 1
  br label %do.end.1155

do.end.1155:                                      ; preds = %while.end.1153
  br label %sw.epilog.6529

sw.bb.1156:                                       ; preds = %do.end.106
  %used1158 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  store i32 0, i32* %used1158, align 4
  %bits = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 3
  store i32 0, i32* %bits, align 4
  %637 = load i8*, i8** %p, align 8
  %638 = load i8*, i8** %pend, align 8
  %cmp1159 = icmp eq i8* %637, %638
  br i1 %cmp1159, label %if.then.1161, label %if.end.1172

if.then.1161:                                     ; preds = %sw.bb.1156
  br label %do.body.1162

do.body.1162:                                     ; preds = %if.then.1161
  br label %do.body.1163

do.body.1163:                                     ; preds = %do.body.1162
  %table1164 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %639 = load i32*, i32** %table1164, align 8
  %tobool1165 = icmp ne i32* %639, null
  br i1 %tobool1165, label %if.then.1166, label %if.end.1168

if.then.1166:                                     ; preds = %do.body.1163
  %table1167 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %640 = load i32*, i32** %table1167, align 8
  %641 = bitcast i32* %640 to i8*
  call void @xfree(i8* %641)
  br label %if.end.1168

if.end.1168:                                      ; preds = %if.then.1166, %do.body.1163
  br label %do.end.1169

do.end.1169:                                      ; preds = %if.end.1168
  %stack1170 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %642 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1170, align 8
  %643 = bitcast %struct.compile_stack_elt_t* %642 to i8*
  call void @xfree(i8* %643)
  store i32 7, i32* %retval
  br label %do.end.6650

do.end.1171:                                      ; No predecessors!
  br label %if.end.1172

if.end.1172:                                      ; preds = %do.end.1171, %sw.bb.1156
  br label %while.cond.1173

while.cond.1173:                                  ; preds = %do.end.1245, %if.end.1172
  %644 = load i8*, i8** %b, align 8
  %645 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1174 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %645, i32 0, i32 0
  %646 = load i8*, i8** %buffer1174, align 8
  %sub.ptr.lhs.cast1175 = ptrtoint i8* %644 to i64
  %sub.ptr.rhs.cast1176 = ptrtoint i8* %646 to i64
  %sub.ptr.sub1177 = sub i64 %sub.ptr.lhs.cast1175, %sub.ptr.rhs.cast1176
  %add1178 = add nsw i64 %sub.ptr.sub1177, 34
  %647 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1179 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %647, i32 0, i32 1
  %648 = load i64, i64* %allocated1179, align 8
  %cmp1180 = icmp ugt i64 %add1178, %648
  br i1 %cmp1180, label %while.body.1182, label %while.end.1246

while.body.1182:                                  ; preds = %while.cond.1173
  br label %do.body.1183

do.body.1183:                                     ; preds = %while.body.1182
  %649 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1185 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %649, i32 0, i32 0
  %650 = load i8*, i8** %buffer1185, align 8
  store i8* %650, i8** %old_buffer1184, align 8
  %651 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1186 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %651, i32 0, i32 1
  %652 = load i64, i64* %allocated1186, align 8
  %cmp1187 = icmp eq i64 %652, 32768
  br i1 %cmp1187, label %if.then.1189, label %if.end.1190

if.then.1189:                                     ; preds = %do.body.1183
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.1190:                                      ; preds = %do.body.1183
  %653 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1191 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %653, i32 0, i32 1
  %654 = load i64, i64* %allocated1191, align 8
  %shl1192 = shl i64 %654, 1
  store i64 %shl1192, i64* %allocated1191, align 8
  %655 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1193 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %655, i32 0, i32 1
  %656 = load i64, i64* %allocated1193, align 8
  %cmp1194 = icmp ugt i64 %656, 32768
  br i1 %cmp1194, label %if.then.1196, label %if.end.1198

if.then.1196:                                     ; preds = %if.end.1190
  %657 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1197 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %657, i32 0, i32 1
  store i64 32768, i64* %allocated1197, align 8
  br label %if.end.1198

if.end.1198:                                      ; preds = %if.then.1196, %if.end.1190
  %658 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1199 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %658, i32 0, i32 0
  %659 = load i8*, i8** %buffer1199, align 8
  %660 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1200 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %660, i32 0, i32 1
  %661 = load i64, i64* %allocated1200, align 8
  %mul1201 = mul i64 %661, 1
  %call1202 = call i8* @xrealloc(i8* %659, i64 %mul1201)
  %662 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1203 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %662, i32 0, i32 0
  store i8* %call1202, i8** %buffer1203, align 8
  %663 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1204 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %663, i32 0, i32 0
  %664 = load i8*, i8** %buffer1204, align 8
  %cmp1205 = icmp eq i8* %664, null
  br i1 %cmp1205, label %if.then.1207, label %if.end.1208

if.then.1207:                                     ; preds = %if.end.1198
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.1208:                                      ; preds = %if.end.1198
  %665 = load i8*, i8** %old_buffer1184, align 8
  %666 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1209 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %666, i32 0, i32 0
  %667 = load i8*, i8** %buffer1209, align 8
  %cmp1210 = icmp ne i8* %665, %667
  br i1 %cmp1210, label %if.then.1212, label %if.end.1244

if.then.1212:                                     ; preds = %if.end.1208
  %668 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1214 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %668, i32 0, i32 0
  %669 = load i8*, i8** %buffer1214, align 8
  store i8* %669, i8** %new_buffer1213, align 8
  %670 = load i8*, i8** %new_buffer1213, align 8
  %671 = load i8*, i8** %b, align 8
  %672 = load i8*, i8** %old_buffer1184, align 8
  %sub.ptr.lhs.cast1215 = ptrtoint i8* %671 to i64
  %sub.ptr.rhs.cast1216 = ptrtoint i8* %672 to i64
  %sub.ptr.sub1217 = sub i64 %sub.ptr.lhs.cast1215, %sub.ptr.rhs.cast1216
  %add.ptr1218 = getelementptr inbounds i8, i8* %670, i64 %sub.ptr.sub1217
  store i8* %add.ptr1218, i8** %b, align 8
  %673 = load i8*, i8** %new_buffer1213, align 8
  %674 = load i8*, i8** %begalt, align 8
  %675 = load i8*, i8** %old_buffer1184, align 8
  %sub.ptr.lhs.cast1219 = ptrtoint i8* %674 to i64
  %sub.ptr.rhs.cast1220 = ptrtoint i8* %675 to i64
  %sub.ptr.sub1221 = sub i64 %sub.ptr.lhs.cast1219, %sub.ptr.rhs.cast1220
  %add.ptr1222 = getelementptr inbounds i8, i8* %673, i64 %sub.ptr.sub1221
  store i8* %add.ptr1222, i8** %begalt, align 8
  %676 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool1223 = icmp ne i8* %676, null
  br i1 %tobool1223, label %if.then.1224, label %if.end.1229

if.then.1224:                                     ; preds = %if.then.1212
  %677 = load i8*, i8** %new_buffer1213, align 8
  %678 = load i8*, i8** %fixup_alt_jump, align 8
  %679 = load i8*, i8** %old_buffer1184, align 8
  %sub.ptr.lhs.cast1225 = ptrtoint i8* %678 to i64
  %sub.ptr.rhs.cast1226 = ptrtoint i8* %679 to i64
  %sub.ptr.sub1227 = sub i64 %sub.ptr.lhs.cast1225, %sub.ptr.rhs.cast1226
  %add.ptr1228 = getelementptr inbounds i8, i8* %677, i64 %sub.ptr.sub1227
  store i8* %add.ptr1228, i8** %fixup_alt_jump, align 8
  br label %if.end.1229

if.end.1229:                                      ; preds = %if.then.1224, %if.then.1212
  %680 = load i8*, i8** %laststart, align 8
  %tobool1230 = icmp ne i8* %680, null
  br i1 %tobool1230, label %if.then.1231, label %if.end.1236

if.then.1231:                                     ; preds = %if.end.1229
  %681 = load i8*, i8** %new_buffer1213, align 8
  %682 = load i8*, i8** %laststart, align 8
  %683 = load i8*, i8** %old_buffer1184, align 8
  %sub.ptr.lhs.cast1232 = ptrtoint i8* %682 to i64
  %sub.ptr.rhs.cast1233 = ptrtoint i8* %683 to i64
  %sub.ptr.sub1234 = sub i64 %sub.ptr.lhs.cast1232, %sub.ptr.rhs.cast1233
  %add.ptr1235 = getelementptr inbounds i8, i8* %681, i64 %sub.ptr.sub1234
  store i8* %add.ptr1235, i8** %laststart, align 8
  br label %if.end.1236

if.end.1236:                                      ; preds = %if.then.1231, %if.end.1229
  %684 = load i8*, i8** %pending_exact, align 8
  %tobool1237 = icmp ne i8* %684, null
  br i1 %tobool1237, label %if.then.1238, label %if.end.1243

if.then.1238:                                     ; preds = %if.end.1236
  %685 = load i8*, i8** %new_buffer1213, align 8
  %686 = load i8*, i8** %pending_exact, align 8
  %687 = load i8*, i8** %old_buffer1184, align 8
  %sub.ptr.lhs.cast1239 = ptrtoint i8* %686 to i64
  %sub.ptr.rhs.cast1240 = ptrtoint i8* %687 to i64
  %sub.ptr.sub1241 = sub i64 %sub.ptr.lhs.cast1239, %sub.ptr.rhs.cast1240
  %add.ptr1242 = getelementptr inbounds i8, i8* %685, i64 %sub.ptr.sub1241
  store i8* %add.ptr1242, i8** %pending_exact, align 8
  br label %if.end.1243

if.end.1243:                                      ; preds = %if.then.1238, %if.end.1236
  br label %if.end.1244

if.end.1244:                                      ; preds = %if.end.1243, %if.end.1208
  br label %do.end.1245

do.end.1245:                                      ; preds = %if.end.1244
  br label %while.cond.1173

while.end.1246:                                   ; preds = %while.cond.1173
  %688 = load i8*, i8** %b, align 8
  store i8* %688, i8** %laststart, align 8
  br label %do.body.1247

do.body.1247:                                     ; preds = %while.end.1246
  br label %while.cond.1248

while.cond.1248:                                  ; preds = %do.end.1320, %do.body.1247
  %689 = load i8*, i8** %b, align 8
  %690 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1249 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %690, i32 0, i32 0
  %691 = load i8*, i8** %buffer1249, align 8
  %sub.ptr.lhs.cast1250 = ptrtoint i8* %689 to i64
  %sub.ptr.rhs.cast1251 = ptrtoint i8* %691 to i64
  %sub.ptr.sub1252 = sub i64 %sub.ptr.lhs.cast1250, %sub.ptr.rhs.cast1251
  %add1253 = add nsw i64 %sub.ptr.sub1252, 1
  %692 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1254 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %692, i32 0, i32 1
  %693 = load i64, i64* %allocated1254, align 8
  %cmp1255 = icmp ugt i64 %add1253, %693
  br i1 %cmp1255, label %while.body.1257, label %while.end.1321

while.body.1257:                                  ; preds = %while.cond.1248
  br label %do.body.1258

do.body.1258:                                     ; preds = %while.body.1257
  %694 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1260 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %694, i32 0, i32 0
  %695 = load i8*, i8** %buffer1260, align 8
  store i8* %695, i8** %old_buffer1259, align 8
  %696 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1261 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %696, i32 0, i32 1
  %697 = load i64, i64* %allocated1261, align 8
  %cmp1262 = icmp eq i64 %697, 32768
  br i1 %cmp1262, label %if.then.1264, label %if.end.1265

if.then.1264:                                     ; preds = %do.body.1258
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.1265:                                      ; preds = %do.body.1258
  %698 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1266 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %698, i32 0, i32 1
  %699 = load i64, i64* %allocated1266, align 8
  %shl1267 = shl i64 %699, 1
  store i64 %shl1267, i64* %allocated1266, align 8
  %700 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1268 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %700, i32 0, i32 1
  %701 = load i64, i64* %allocated1268, align 8
  %cmp1269 = icmp ugt i64 %701, 32768
  br i1 %cmp1269, label %if.then.1271, label %if.end.1273

if.then.1271:                                     ; preds = %if.end.1265
  %702 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1272 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %702, i32 0, i32 1
  store i64 32768, i64* %allocated1272, align 8
  br label %if.end.1273

if.end.1273:                                      ; preds = %if.then.1271, %if.end.1265
  %703 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1274 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %703, i32 0, i32 0
  %704 = load i8*, i8** %buffer1274, align 8
  %705 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1275 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %705, i32 0, i32 1
  %706 = load i64, i64* %allocated1275, align 8
  %mul1276 = mul i64 %706, 1
  %call1277 = call i8* @xrealloc(i8* %704, i64 %mul1276)
  %707 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1278 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %707, i32 0, i32 0
  store i8* %call1277, i8** %buffer1278, align 8
  %708 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1279 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %708, i32 0, i32 0
  %709 = load i8*, i8** %buffer1279, align 8
  %cmp1280 = icmp eq i8* %709, null
  br i1 %cmp1280, label %if.then.1282, label %if.end.1283

if.then.1282:                                     ; preds = %if.end.1273
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.1283:                                      ; preds = %if.end.1273
  %710 = load i8*, i8** %old_buffer1259, align 8
  %711 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1284 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %711, i32 0, i32 0
  %712 = load i8*, i8** %buffer1284, align 8
  %cmp1285 = icmp ne i8* %710, %712
  br i1 %cmp1285, label %if.then.1287, label %if.end.1319

if.then.1287:                                     ; preds = %if.end.1283
  %713 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1289 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %713, i32 0, i32 0
  %714 = load i8*, i8** %buffer1289, align 8
  store i8* %714, i8** %new_buffer1288, align 8
  %715 = load i8*, i8** %new_buffer1288, align 8
  %716 = load i8*, i8** %b, align 8
  %717 = load i8*, i8** %old_buffer1259, align 8
  %sub.ptr.lhs.cast1290 = ptrtoint i8* %716 to i64
  %sub.ptr.rhs.cast1291 = ptrtoint i8* %717 to i64
  %sub.ptr.sub1292 = sub i64 %sub.ptr.lhs.cast1290, %sub.ptr.rhs.cast1291
  %add.ptr1293 = getelementptr inbounds i8, i8* %715, i64 %sub.ptr.sub1292
  store i8* %add.ptr1293, i8** %b, align 8
  %718 = load i8*, i8** %new_buffer1288, align 8
  %719 = load i8*, i8** %begalt, align 8
  %720 = load i8*, i8** %old_buffer1259, align 8
  %sub.ptr.lhs.cast1294 = ptrtoint i8* %719 to i64
  %sub.ptr.rhs.cast1295 = ptrtoint i8* %720 to i64
  %sub.ptr.sub1296 = sub i64 %sub.ptr.lhs.cast1294, %sub.ptr.rhs.cast1295
  %add.ptr1297 = getelementptr inbounds i8, i8* %718, i64 %sub.ptr.sub1296
  store i8* %add.ptr1297, i8** %begalt, align 8
  %721 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool1298 = icmp ne i8* %721, null
  br i1 %tobool1298, label %if.then.1299, label %if.end.1304

if.then.1299:                                     ; preds = %if.then.1287
  %722 = load i8*, i8** %new_buffer1288, align 8
  %723 = load i8*, i8** %fixup_alt_jump, align 8
  %724 = load i8*, i8** %old_buffer1259, align 8
  %sub.ptr.lhs.cast1300 = ptrtoint i8* %723 to i64
  %sub.ptr.rhs.cast1301 = ptrtoint i8* %724 to i64
  %sub.ptr.sub1302 = sub i64 %sub.ptr.lhs.cast1300, %sub.ptr.rhs.cast1301
  %add.ptr1303 = getelementptr inbounds i8, i8* %722, i64 %sub.ptr.sub1302
  store i8* %add.ptr1303, i8** %fixup_alt_jump, align 8
  br label %if.end.1304

if.end.1304:                                      ; preds = %if.then.1299, %if.then.1287
  %725 = load i8*, i8** %laststart, align 8
  %tobool1305 = icmp ne i8* %725, null
  br i1 %tobool1305, label %if.then.1306, label %if.end.1311

if.then.1306:                                     ; preds = %if.end.1304
  %726 = load i8*, i8** %new_buffer1288, align 8
  %727 = load i8*, i8** %laststart, align 8
  %728 = load i8*, i8** %old_buffer1259, align 8
  %sub.ptr.lhs.cast1307 = ptrtoint i8* %727 to i64
  %sub.ptr.rhs.cast1308 = ptrtoint i8* %728 to i64
  %sub.ptr.sub1309 = sub i64 %sub.ptr.lhs.cast1307, %sub.ptr.rhs.cast1308
  %add.ptr1310 = getelementptr inbounds i8, i8* %726, i64 %sub.ptr.sub1309
  store i8* %add.ptr1310, i8** %laststart, align 8
  br label %if.end.1311

if.end.1311:                                      ; preds = %if.then.1306, %if.end.1304
  %729 = load i8*, i8** %pending_exact, align 8
  %tobool1312 = icmp ne i8* %729, null
  br i1 %tobool1312, label %if.then.1313, label %if.end.1318

if.then.1313:                                     ; preds = %if.end.1311
  %730 = load i8*, i8** %new_buffer1288, align 8
  %731 = load i8*, i8** %pending_exact, align 8
  %732 = load i8*, i8** %old_buffer1259, align 8
  %sub.ptr.lhs.cast1314 = ptrtoint i8* %731 to i64
  %sub.ptr.rhs.cast1315 = ptrtoint i8* %732 to i64
  %sub.ptr.sub1316 = sub i64 %sub.ptr.lhs.cast1314, %sub.ptr.rhs.cast1315
  %add.ptr1317 = getelementptr inbounds i8, i8* %730, i64 %sub.ptr.sub1316
  store i8* %add.ptr1317, i8** %pending_exact, align 8
  br label %if.end.1318

if.end.1318:                                      ; preds = %if.then.1313, %if.end.1311
  br label %if.end.1319

if.end.1319:                                      ; preds = %if.end.1318, %if.end.1283
  br label %do.end.1320

do.end.1320:                                      ; preds = %if.end.1319
  br label %while.cond.1248

while.end.1321:                                   ; preds = %while.cond.1248
  %733 = load i8*, i8** %p, align 8
  %734 = load i8, i8* %733, align 1
  %conv1322 = zext i8 %734 to i32
  %cmp1323 = icmp eq i32 %conv1322, 94
  %cond1325 = select i1 %cmp1323, i32 5, i32 4
  %conv1326 = trunc i32 %cond1325 to i8
  %735 = load i8*, i8** %b, align 8
  %incdec.ptr1327 = getelementptr inbounds i8, i8* %735, i32 1
  store i8* %incdec.ptr1327, i8** %b, align 8
  store i8 %conv1326, i8* %735, align 1
  br label %do.end.1328

do.end.1328:                                      ; preds = %while.end.1321
  %736 = load i8*, i8** %p, align 8
  %737 = load i8, i8* %736, align 1
  %conv1329 = zext i8 %737 to i32
  %cmp1330 = icmp eq i32 %conv1329, 94
  br i1 %cmp1330, label %if.then.1332, label %if.end.1334

if.then.1332:                                     ; preds = %do.end.1328
  %738 = load i8*, i8** %p, align 8
  %incdec.ptr1333 = getelementptr inbounds i8, i8* %738, i32 1
  store i8* %incdec.ptr1333, i8** %p, align 8
  br label %if.end.1334

if.end.1334:                                      ; preds = %if.then.1332, %do.end.1328
  %739 = load i8*, i8** %p, align 8
  store i8* %739, i8** %p11157, align 8
  br label %do.body.1335

do.body.1335:                                     ; preds = %if.end.1334
  br label %while.cond.1336

while.cond.1336:                                  ; preds = %do.end.1408, %do.body.1335
  %740 = load i8*, i8** %b, align 8
  %741 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1337 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %741, i32 0, i32 0
  %742 = load i8*, i8** %buffer1337, align 8
  %sub.ptr.lhs.cast1338 = ptrtoint i8* %740 to i64
  %sub.ptr.rhs.cast1339 = ptrtoint i8* %742 to i64
  %sub.ptr.sub1340 = sub i64 %sub.ptr.lhs.cast1338, %sub.ptr.rhs.cast1339
  %add1341 = add nsw i64 %sub.ptr.sub1340, 1
  %743 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1342 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %743, i32 0, i32 1
  %744 = load i64, i64* %allocated1342, align 8
  %cmp1343 = icmp ugt i64 %add1341, %744
  br i1 %cmp1343, label %while.body.1345, label %while.end.1409

while.body.1345:                                  ; preds = %while.cond.1336
  br label %do.body.1346

do.body.1346:                                     ; preds = %while.body.1345
  %745 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1348 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %745, i32 0, i32 0
  %746 = load i8*, i8** %buffer1348, align 8
  store i8* %746, i8** %old_buffer1347, align 8
  %747 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1349 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %747, i32 0, i32 1
  %748 = load i64, i64* %allocated1349, align 8
  %cmp1350 = icmp eq i64 %748, 32768
  br i1 %cmp1350, label %if.then.1352, label %if.end.1353

if.then.1352:                                     ; preds = %do.body.1346
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.1353:                                      ; preds = %do.body.1346
  %749 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1354 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %749, i32 0, i32 1
  %750 = load i64, i64* %allocated1354, align 8
  %shl1355 = shl i64 %750, 1
  store i64 %shl1355, i64* %allocated1354, align 8
  %751 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1356 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %751, i32 0, i32 1
  %752 = load i64, i64* %allocated1356, align 8
  %cmp1357 = icmp ugt i64 %752, 32768
  br i1 %cmp1357, label %if.then.1359, label %if.end.1361

if.then.1359:                                     ; preds = %if.end.1353
  %753 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1360 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %753, i32 0, i32 1
  store i64 32768, i64* %allocated1360, align 8
  br label %if.end.1361

if.end.1361:                                      ; preds = %if.then.1359, %if.end.1353
  %754 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1362 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %754, i32 0, i32 0
  %755 = load i8*, i8** %buffer1362, align 8
  %756 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated1363 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %756, i32 0, i32 1
  %757 = load i64, i64* %allocated1363, align 8
  %mul1364 = mul i64 %757, 1
  %call1365 = call i8* @xrealloc(i8* %755, i64 %mul1364)
  %758 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1366 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %758, i32 0, i32 0
  store i8* %call1365, i8** %buffer1366, align 8
  %759 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1367 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %759, i32 0, i32 0
  %760 = load i8*, i8** %buffer1367, align 8
  %cmp1368 = icmp eq i8* %760, null
  br i1 %cmp1368, label %if.then.1370, label %if.end.1371

if.then.1370:                                     ; preds = %if.end.1361
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.1371:                                      ; preds = %if.end.1361
  %761 = load i8*, i8** %old_buffer1347, align 8
  %762 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1372 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %762, i32 0, i32 0
  %763 = load i8*, i8** %buffer1372, align 8
  %cmp1373 = icmp ne i8* %761, %763
  br i1 %cmp1373, label %if.then.1375, label %if.end.1407

if.then.1375:                                     ; preds = %if.end.1371
  %764 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer1377 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %764, i32 0, i32 0
  %765 = load i8*, i8** %buffer1377, align 8
  store i8* %765, i8** %new_buffer1376, align 8
  %766 = load i8*, i8** %new_buffer1376, align 8
  %767 = load i8*, i8** %b, align 8
  %768 = load i8*, i8** %old_buffer1347, align 8
  %sub.ptr.lhs.cast1378 = ptrtoint i8* %767 to i64
  %sub.ptr.rhs.cast1379 = ptrtoint i8* %768 to i64
  %sub.ptr.sub1380 = sub i64 %sub.ptr.lhs.cast1378, %sub.ptr.rhs.cast1379
  %add.ptr1381 = getelementptr inbounds i8, i8* %766, i64 %sub.ptr.sub1380
  store i8* %add.ptr1381, i8** %b, align 8
  %769 = load i8*, i8** %new_buffer1376, align 8
  %770 = load i8*, i8** %begalt, align 8
  %771 = load i8*, i8** %old_buffer1347, align 8
  %sub.ptr.lhs.cast1382 = ptrtoint i8* %770 to i64
  %sub.ptr.rhs.cast1383 = ptrtoint i8* %771 to i64
  %sub.ptr.sub1384 = sub i64 %sub.ptr.lhs.cast1382, %sub.ptr.rhs.cast1383
  %add.ptr1385 = getelementptr inbounds i8, i8* %769, i64 %sub.ptr.sub1384
  store i8* %add.ptr1385, i8** %begalt, align 8
  %772 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool1386 = icmp ne i8* %772, null
  br i1 %tobool1386, label %if.then.1387, label %if.end.1392

if.then.1387:                                     ; preds = %if.then.1375
  %773 = load i8*, i8** %new_buffer1376, align 8
  %774 = load i8*, i8** %fixup_alt_jump, align 8
  %775 = load i8*, i8** %old_buffer1347, align 8
  %sub.ptr.lhs.cast1388 = ptrtoint i8* %774 to i64
  %sub.ptr.rhs.cast1389 = ptrtoint i8* %775 to i64
  %sub.ptr.sub1390 = sub i64 %sub.ptr.lhs.cast1388, %sub.ptr.rhs.cast1389
  %add.ptr1391 = getelementptr inbounds i8, i8* %773, i64 %sub.ptr.sub1390
  store i8* %add.ptr1391, i8** %fixup_alt_jump, align 8
  br label %if.end.1392

if.end.1392:                                      ; preds = %if.then.1387, %if.then.1375
  %776 = load i8*, i8** %laststart, align 8
  %tobool1393 = icmp ne i8* %776, null
  br i1 %tobool1393, label %if.then.1394, label %if.end.1399

if.then.1394:                                     ; preds = %if.end.1392
  %777 = load i8*, i8** %new_buffer1376, align 8
  %778 = load i8*, i8** %laststart, align 8
  %779 = load i8*, i8** %old_buffer1347, align 8
  %sub.ptr.lhs.cast1395 = ptrtoint i8* %778 to i64
  %sub.ptr.rhs.cast1396 = ptrtoint i8* %779 to i64
  %sub.ptr.sub1397 = sub i64 %sub.ptr.lhs.cast1395, %sub.ptr.rhs.cast1396
  %add.ptr1398 = getelementptr inbounds i8, i8* %777, i64 %sub.ptr.sub1397
  store i8* %add.ptr1398, i8** %laststart, align 8
  br label %if.end.1399

if.end.1399:                                      ; preds = %if.then.1394, %if.end.1392
  %780 = load i8*, i8** %pending_exact, align 8
  %tobool1400 = icmp ne i8* %780, null
  br i1 %tobool1400, label %if.then.1401, label %if.end.1406

if.then.1401:                                     ; preds = %if.end.1399
  %781 = load i8*, i8** %new_buffer1376, align 8
  %782 = load i8*, i8** %pending_exact, align 8
  %783 = load i8*, i8** %old_buffer1347, align 8
  %sub.ptr.lhs.cast1402 = ptrtoint i8* %782 to i64
  %sub.ptr.rhs.cast1403 = ptrtoint i8* %783 to i64
  %sub.ptr.sub1404 = sub i64 %sub.ptr.lhs.cast1402, %sub.ptr.rhs.cast1403
  %add.ptr1405 = getelementptr inbounds i8, i8* %781, i64 %sub.ptr.sub1404
  store i8* %add.ptr1405, i8** %pending_exact, align 8
  br label %if.end.1406

if.end.1406:                                      ; preds = %if.then.1401, %if.end.1399
  br label %if.end.1407

if.end.1407:                                      ; preds = %if.end.1406, %if.end.1371
  br label %do.end.1408

do.end.1408:                                      ; preds = %if.end.1407
  br label %while.cond.1336

while.end.1409:                                   ; preds = %while.cond.1336
  %784 = load i8*, i8** %b, align 8
  %incdec.ptr1410 = getelementptr inbounds i8, i8* %784, i32 1
  store i8* %incdec.ptr1410, i8** %b, align 8
  store i8 32, i8* %784, align 1
  br label %do.end.1411

do.end.1411:                                      ; preds = %while.end.1409
  %785 = load i8*, i8** %b, align 8
  call void @llvm.memset.p0i8.i64(i8* %785, i8 0, i64 32, i32 1, i1 false)
  %786 = load i8*, i8** %b, align 8
  %arrayidx1412 = getelementptr inbounds i8, i8* %786, i64 -2
  %787 = load i8, i8* %arrayidx1412, align 1
  %conv1413 = zext i8 %787 to i32
  %cmp1414 = icmp eq i32 %conv1413, 5
  br i1 %cmp1414, label %land.lhs.true.1416, label %if.end.1424

land.lhs.true.1416:                               ; preds = %do.end.1411
  %788 = load i64, i64* %syntax.addr, align 8
  %and1417 = and i64 %788, 256
  %tobool1418 = icmp ne i64 %and1417, 0
  br i1 %tobool1418, label %if.then.1419, label %if.end.1424

if.then.1419:                                     ; preds = %land.lhs.true.1416
  %789 = load i8*, i8** %b, align 8
  %arrayidx1420 = getelementptr inbounds i8, i8* %789, i64 1
  %790 = load i8, i8* %arrayidx1420, align 1
  %conv1421 = zext i8 %790 to i32
  %or1422 = or i32 %conv1421, 4
  %conv1423 = trunc i32 %or1422 to i8
  store i8 %conv1423, i8* %arrayidx1420, align 1
  br label %if.end.1424

if.end.1424:                                      ; preds = %if.then.1419, %land.lhs.true.1416, %do.end.1411
  br label %for.cond.1425

for.cond.1425:                                    ; preds = %if.end.2711, %if.end.2011, %if.end.1424
  store i8 0, i8* %escaped_char, align 1
  %791 = load i8*, i8** %p, align 8
  store i8* %791, i8** %p21426, align 8
  %792 = load i8*, i8** %p, align 8
  %793 = load i8*, i8** %pend, align 8
  %cmp1427 = icmp eq i8* %792, %793
  br i1 %cmp1427, label %if.then.1429, label %if.end.1440

if.then.1429:                                     ; preds = %for.cond.1425
  br label %do.body.1430

do.body.1430:                                     ; preds = %if.then.1429
  br label %do.body.1431

do.body.1431:                                     ; preds = %do.body.1430
  %table1432 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %794 = load i32*, i32** %table1432, align 8
  %tobool1433 = icmp ne i32* %794, null
  br i1 %tobool1433, label %if.then.1434, label %if.end.1436

if.then.1434:                                     ; preds = %do.body.1431
  %table1435 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %795 = load i32*, i32** %table1435, align 8
  %796 = bitcast i32* %795 to i8*
  call void @xfree(i8* %796)
  br label %if.end.1436

if.end.1436:                                      ; preds = %if.then.1434, %do.body.1431
  br label %do.end.1437

do.end.1437:                                      ; preds = %if.end.1436
  %stack1438 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %797 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1438, align 8
  %798 = bitcast %struct.compile_stack_elt_t* %797 to i8*
  call void @xfree(i8* %798)
  store i32 7, i32* %retval
  br label %do.end.6650

do.end.1439:                                      ; No predecessors!
  br label %if.end.1440

if.end.1440:                                      ; preds = %do.end.1439, %for.cond.1425
  br label %do.body.1441

do.body.1441:                                     ; preds = %if.end.1440
  %799 = load i8*, i8** %p, align 8
  %800 = load i8*, i8** %pend, align 8
  %cmp1443 = icmp eq i8* %799, %800
  br i1 %cmp1443, label %if.then.1445, label %if.end.1446

if.then.1445:                                     ; preds = %do.body.1441
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.1446:                                      ; preds = %do.body.1441
  %801 = load i8, i8* %multibyte, align 1
  %conv1447 = sext i8 %801 to i32
  %tobool1448 = icmp ne i32 %conv1447, 0
  br i1 %tobool1448, label %cond.true.1449, label %cond.false.1504

cond.true.1449:                                   ; preds = %if.end.1446
  %802 = load i8*, i8** %p, align 8
  %arrayidx1450 = getelementptr inbounds i8, i8* %802, i64 0
  %803 = load i8, i8* %arrayidx1450, align 1
  %conv1451 = zext i8 %803 to i32
  %and1452 = and i32 %conv1451, 128
  %tobool1453 = icmp ne i32 %and1452, 0
  br i1 %tobool1453, label %cond.false.1457, label %cond.true.1454

cond.true.1454:                                   ; preds = %cond.true.1449
  store i32 1, i32* %len1442, align 4
  %804 = load i8*, i8** %p, align 8
  %arrayidx1455 = getelementptr inbounds i8, i8* %804, i64 0
  %805 = load i8, i8* %arrayidx1455, align 1
  %conv1456 = zext i8 %805 to i32
  br label %cond.end.1502

cond.false.1457:                                  ; preds = %cond.true.1449
  %806 = load i8*, i8** %p, align 8
  %arrayidx1458 = getelementptr inbounds i8, i8* %806, i64 0
  %807 = load i8, i8* %arrayidx1458, align 1
  %conv1459 = zext i8 %807 to i32
  %and1460 = and i32 %conv1459, 32
  %tobool1461 = icmp ne i32 %and1460, 0
  br i1 %tobool1461, label %cond.false.1477, label %cond.true.1462

cond.true.1462:                                   ; preds = %cond.false.1457
  store i32 2, i32* %len1442, align 4
  %808 = load i8*, i8** %p, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %808, i64 0
  %809 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = zext i8 %809 to i32
  %and1465 = and i32 %conv1464, 31
  %shl1466 = shl i32 %and1465, 6
  %810 = load i8*, i8** %p, align 8
  %arrayidx1467 = getelementptr inbounds i8, i8* %810, i64 1
  %811 = load i8, i8* %arrayidx1467, align 1
  %conv1468 = zext i8 %811 to i32
  %and1469 = and i32 %conv1468, 63
  %or1470 = or i32 %shl1466, %and1469
  %812 = load i8*, i8** %p, align 8
  %arrayidx1471 = getelementptr inbounds i8, i8* %812, i64 0
  %813 = load i8, i8* %arrayidx1471, align 1
  %conv1472 = zext i8 %813 to i32
  %cmp1473 = icmp slt i32 %conv1472, 194
  %cond1475 = select i1 %cmp1473, i32 4194176, i32 0
  %add1476 = add nsw i32 %or1470, %cond1475
  br label %cond.end.1500

cond.false.1477:                                  ; preds = %cond.false.1457
  %814 = load i8*, i8** %p, align 8
  %arrayidx1478 = getelementptr inbounds i8, i8* %814, i64 0
  %815 = load i8, i8* %arrayidx1478, align 1
  %conv1479 = zext i8 %815 to i32
  %and1480 = and i32 %conv1479, 16
  %tobool1481 = icmp ne i32 %and1480, 0
  br i1 %tobool1481, label %cond.false.1496, label %cond.true.1482

cond.true.1482:                                   ; preds = %cond.false.1477
  store i32 3, i32* %len1442, align 4
  %816 = load i8*, i8** %p, align 8
  %arrayidx1483 = getelementptr inbounds i8, i8* %816, i64 0
  %817 = load i8, i8* %arrayidx1483, align 1
  %conv1484 = zext i8 %817 to i32
  %and1485 = and i32 %conv1484, 15
  %shl1486 = shl i32 %and1485, 12
  %818 = load i8*, i8** %p, align 8
  %arrayidx1487 = getelementptr inbounds i8, i8* %818, i64 1
  %819 = load i8, i8* %arrayidx1487, align 1
  %conv1488 = zext i8 %819 to i32
  %and1489 = and i32 %conv1488, 63
  %shl1490 = shl i32 %and1489, 6
  %or1491 = or i32 %shl1486, %shl1490
  %820 = load i8*, i8** %p, align 8
  %arrayidx1492 = getelementptr inbounds i8, i8* %820, i64 2
  %821 = load i8, i8* %arrayidx1492, align 1
  %conv1493 = zext i8 %821 to i32
  %and1494 = and i32 %conv1493, 63
  %or1495 = or i32 %or1491, %and1494
  br label %cond.end.1498

cond.false.1496:                                  ; preds = %cond.false.1477
  %822 = load i8*, i8** %p, align 8
  %call1497 = call i32 @string_char(i8* %822, i8** null, i32* %len1442)
  br label %cond.end.1498

cond.end.1498:                                    ; preds = %cond.false.1496, %cond.true.1482
  %cond1499 = phi i32 [ %or1495, %cond.true.1482 ], [ %call1497, %cond.false.1496 ]
  br label %cond.end.1500

cond.end.1500:                                    ; preds = %cond.end.1498, %cond.true.1462
  %cond1501 = phi i32 [ %add1476, %cond.true.1462 ], [ %cond1499, %cond.end.1498 ]
  br label %cond.end.1502

cond.end.1502:                                    ; preds = %cond.end.1500, %cond.true.1454
  %cond1503 = phi i32 [ %conv1456, %cond.true.1454 ], [ %cond1501, %cond.end.1500 ]
  br label %cond.end.1506

cond.false.1504:                                  ; preds = %if.end.1446
  store i32 1, i32* %len1442, align 4
  %823 = load i8*, i8** %p, align 8
  %824 = load i8, i8* %823, align 1
  %conv1505 = zext i8 %824 to i32
  br label %cond.end.1506

cond.end.1506:                                    ; preds = %cond.false.1504, %cond.end.1502
  %cond1507 = phi i32 [ %cond1503, %cond.end.1502 ], [ %conv1505, %cond.false.1504 ]
  store i32 %cond1507, i32* %c, align 4
  %825 = load i32, i32* %len1442, align 4
  %826 = load i8*, i8** %p, align 8
  %idx.ext1508 = sext i32 %825 to i64
  %add.ptr1509 = getelementptr inbounds i8, i8* %826, i64 %idx.ext1508
  store i8* %add.ptr1509, i8** %p, align 8
  br label %do.end.1510

do.end.1510:                                      ; preds = %cond.end.1506
  %827 = load i64, i64* %syntax.addr, align 8
  %and1511 = and i64 %827, 1
  %tobool1512 = icmp ne i64 %and1511, 0
  br i1 %tobool1512, label %land.lhs.true.1513, label %if.else.1601

land.lhs.true.1513:                               ; preds = %do.end.1510
  %828 = load i32, i32* %c, align 4
  %cmp1514 = icmp eq i32 %828, 92
  br i1 %cmp1514, label %if.then.1516, label %if.else.1601

if.then.1516:                                     ; preds = %land.lhs.true.1513
  %829 = load i8*, i8** %p, align 8
  %830 = load i8*, i8** %pend, align 8
  %cmp1517 = icmp eq i8* %829, %830
  br i1 %cmp1517, label %if.then.1519, label %if.end.1530

if.then.1519:                                     ; preds = %if.then.1516
  br label %do.body.1520

do.body.1520:                                     ; preds = %if.then.1519
  br label %do.body.1521

do.body.1521:                                     ; preds = %do.body.1520
  %table1522 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %831 = load i32*, i32** %table1522, align 8
  %tobool1523 = icmp ne i32* %831, null
  br i1 %tobool1523, label %if.then.1524, label %if.end.1526

if.then.1524:                                     ; preds = %do.body.1521
  %table1525 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %832 = load i32*, i32** %table1525, align 8
  %833 = bitcast i32* %832 to i8*
  call void @xfree(i8* %833)
  br label %if.end.1526

if.end.1526:                                      ; preds = %if.then.1524, %do.body.1521
  br label %do.end.1527

do.end.1527:                                      ; preds = %if.end.1526
  %stack1528 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %834 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1528, align 8
  %835 = bitcast %struct.compile_stack_elt_t* %834 to i8*
  call void @xfree(i8* %835)
  store i32 5, i32* %retval
  br label %do.end.6650

do.end.1529:                                      ; No predecessors!
  br label %if.end.1530

if.end.1530:                                      ; preds = %do.end.1529, %if.then.1516
  br label %do.body.1531

do.body.1531:                                     ; preds = %if.end.1530
  %836 = load i8*, i8** %p, align 8
  %837 = load i8*, i8** %pend, align 8
  %cmp1533 = icmp eq i8* %836, %837
  br i1 %cmp1533, label %if.then.1535, label %if.end.1536

if.then.1535:                                     ; preds = %do.body.1531
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.1536:                                      ; preds = %do.body.1531
  %838 = load i8, i8* %multibyte, align 1
  %conv1537 = sext i8 %838 to i32
  %tobool1538 = icmp ne i32 %conv1537, 0
  br i1 %tobool1538, label %cond.true.1539, label %cond.false.1594

cond.true.1539:                                   ; preds = %if.end.1536
  %839 = load i8*, i8** %p, align 8
  %arrayidx1540 = getelementptr inbounds i8, i8* %839, i64 0
  %840 = load i8, i8* %arrayidx1540, align 1
  %conv1541 = zext i8 %840 to i32
  %and1542 = and i32 %conv1541, 128
  %tobool1543 = icmp ne i32 %and1542, 0
  br i1 %tobool1543, label %cond.false.1547, label %cond.true.1544

cond.true.1544:                                   ; preds = %cond.true.1539
  store i32 1, i32* %len1532, align 4
  %841 = load i8*, i8** %p, align 8
  %arrayidx1545 = getelementptr inbounds i8, i8* %841, i64 0
  %842 = load i8, i8* %arrayidx1545, align 1
  %conv1546 = zext i8 %842 to i32
  br label %cond.end.1592

cond.false.1547:                                  ; preds = %cond.true.1539
  %843 = load i8*, i8** %p, align 8
  %arrayidx1548 = getelementptr inbounds i8, i8* %843, i64 0
  %844 = load i8, i8* %arrayidx1548, align 1
  %conv1549 = zext i8 %844 to i32
  %and1550 = and i32 %conv1549, 32
  %tobool1551 = icmp ne i32 %and1550, 0
  br i1 %tobool1551, label %cond.false.1567, label %cond.true.1552

cond.true.1552:                                   ; preds = %cond.false.1547
  store i32 2, i32* %len1532, align 4
  %845 = load i8*, i8** %p, align 8
  %arrayidx1553 = getelementptr inbounds i8, i8* %845, i64 0
  %846 = load i8, i8* %arrayidx1553, align 1
  %conv1554 = zext i8 %846 to i32
  %and1555 = and i32 %conv1554, 31
  %shl1556 = shl i32 %and1555, 6
  %847 = load i8*, i8** %p, align 8
  %arrayidx1557 = getelementptr inbounds i8, i8* %847, i64 1
  %848 = load i8, i8* %arrayidx1557, align 1
  %conv1558 = zext i8 %848 to i32
  %and1559 = and i32 %conv1558, 63
  %or1560 = or i32 %shl1556, %and1559
  %849 = load i8*, i8** %p, align 8
  %arrayidx1561 = getelementptr inbounds i8, i8* %849, i64 0
  %850 = load i8, i8* %arrayidx1561, align 1
  %conv1562 = zext i8 %850 to i32
  %cmp1563 = icmp slt i32 %conv1562, 194
  %cond1565 = select i1 %cmp1563, i32 4194176, i32 0
  %add1566 = add nsw i32 %or1560, %cond1565
  br label %cond.end.1590

cond.false.1567:                                  ; preds = %cond.false.1547
  %851 = load i8*, i8** %p, align 8
  %arrayidx1568 = getelementptr inbounds i8, i8* %851, i64 0
  %852 = load i8, i8* %arrayidx1568, align 1
  %conv1569 = zext i8 %852 to i32
  %and1570 = and i32 %conv1569, 16
  %tobool1571 = icmp ne i32 %and1570, 0
  br i1 %tobool1571, label %cond.false.1586, label %cond.true.1572

cond.true.1572:                                   ; preds = %cond.false.1567
  store i32 3, i32* %len1532, align 4
  %853 = load i8*, i8** %p, align 8
  %arrayidx1573 = getelementptr inbounds i8, i8* %853, i64 0
  %854 = load i8, i8* %arrayidx1573, align 1
  %conv1574 = zext i8 %854 to i32
  %and1575 = and i32 %conv1574, 15
  %shl1576 = shl i32 %and1575, 12
  %855 = load i8*, i8** %p, align 8
  %arrayidx1577 = getelementptr inbounds i8, i8* %855, i64 1
  %856 = load i8, i8* %arrayidx1577, align 1
  %conv1578 = zext i8 %856 to i32
  %and1579 = and i32 %conv1578, 63
  %shl1580 = shl i32 %and1579, 6
  %or1581 = or i32 %shl1576, %shl1580
  %857 = load i8*, i8** %p, align 8
  %arrayidx1582 = getelementptr inbounds i8, i8* %857, i64 2
  %858 = load i8, i8* %arrayidx1582, align 1
  %conv1583 = zext i8 %858 to i32
  %and1584 = and i32 %conv1583, 63
  %or1585 = or i32 %or1581, %and1584
  br label %cond.end.1588

cond.false.1586:                                  ; preds = %cond.false.1567
  %859 = load i8*, i8** %p, align 8
  %call1587 = call i32 @string_char(i8* %859, i8** null, i32* %len1532)
  br label %cond.end.1588

cond.end.1588:                                    ; preds = %cond.false.1586, %cond.true.1572
  %cond1589 = phi i32 [ %or1585, %cond.true.1572 ], [ %call1587, %cond.false.1586 ]
  br label %cond.end.1590

cond.end.1590:                                    ; preds = %cond.end.1588, %cond.true.1552
  %cond1591 = phi i32 [ %add1566, %cond.true.1552 ], [ %cond1589, %cond.end.1588 ]
  br label %cond.end.1592

cond.end.1592:                                    ; preds = %cond.end.1590, %cond.true.1544
  %cond1593 = phi i32 [ %conv1546, %cond.true.1544 ], [ %cond1591, %cond.end.1590 ]
  br label %cond.end.1596

cond.false.1594:                                  ; preds = %if.end.1536
  store i32 1, i32* %len1532, align 4
  %860 = load i8*, i8** %p, align 8
  %861 = load i8, i8* %860, align 1
  %conv1595 = zext i8 %861 to i32
  br label %cond.end.1596

cond.end.1596:                                    ; preds = %cond.false.1594, %cond.end.1592
  %cond1597 = phi i32 [ %cond1593, %cond.end.1592 ], [ %conv1595, %cond.false.1594 ]
  store i32 %cond1597, i32* %c, align 4
  %862 = load i32, i32* %len1532, align 4
  %863 = load i8*, i8** %p, align 8
  %idx.ext1598 = sext i32 %862 to i64
  %add.ptr1599 = getelementptr inbounds i8, i8* %863, i64 %idx.ext1598
  store i8* %add.ptr1599, i8** %p, align 8
  br label %do.end.1600

do.end.1600:                                      ; preds = %cond.end.1596
  store i8 1, i8* %escaped_char, align 1
  br label %if.end.1609

if.else.1601:                                     ; preds = %land.lhs.true.1513, %do.end.1510
  %864 = load i32, i32* %c, align 4
  %cmp1602 = icmp eq i32 %864, 93
  br i1 %cmp1602, label %land.lhs.true.1604, label %if.end.1608

land.lhs.true.1604:                               ; preds = %if.else.1601
  %865 = load i8*, i8** %p21426, align 8
  %866 = load i8*, i8** %p11157, align 8
  %cmp1605 = icmp ne i8* %865, %866
  br i1 %cmp1605, label %if.then.1607, label %if.end.1608

if.then.1607:                                     ; preds = %land.lhs.true.1604
  br label %for.end.2712

if.end.1608:                                      ; preds = %land.lhs.true.1604, %if.else.1601
  br label %if.end.1609

if.end.1609:                                      ; preds = %if.end.1608, %do.end.1600
  %867 = load i8, i8* %escaped_char, align 1
  %tobool1610 = icmp ne i8 %867, 0
  br i1 %tobool1610, label %if.end.2018, label %land.lhs.true.1611

land.lhs.true.1611:                               ; preds = %if.end.1609
  %868 = load i64, i64* %syntax.addr, align 8
  %and1612 = and i64 %868, 4
  %tobool1613 = icmp ne i64 %and1612, 0
  br i1 %tobool1613, label %land.lhs.true.1614, label %if.end.2018

land.lhs.true.1614:                               ; preds = %land.lhs.true.1611
  %869 = load i32, i32* %c, align 4
  %cmp1615 = icmp eq i32 %869, 91
  br i1 %cmp1615, label %land.lhs.true.1617, label %if.end.2018

land.lhs.true.1617:                               ; preds = %land.lhs.true.1614
  %870 = load i8*, i8** %p, align 8
  %871 = load i8, i8* %870, align 1
  %conv1618 = zext i8 %871 to i32
  %cmp1619 = icmp eq i32 %conv1618, 58
  br i1 %cmp1619, label %if.then.1621, label %if.end.2018

if.then.1621:                                     ; preds = %land.lhs.true.1617
  br label %do.body.1622

do.body.1622:                                     ; preds = %if.then.1621
  %872 = load i8*, i8** %p, align 8
  %873 = load i8*, i8** %pend, align 8
  %cmp1624 = icmp eq i8* %872, %873
  br i1 %cmp1624, label %if.then.1626, label %if.end.1627

if.then.1626:                                     ; preds = %do.body.1622
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.1627:                                      ; preds = %do.body.1622
  %874 = load i8, i8* %multibyte, align 1
  %conv1628 = sext i8 %874 to i32
  %tobool1629 = icmp ne i32 %conv1628, 0
  br i1 %tobool1629, label %cond.true.1630, label %cond.false.1685

cond.true.1630:                                   ; preds = %if.end.1627
  %875 = load i8*, i8** %p, align 8
  %arrayidx1631 = getelementptr inbounds i8, i8* %875, i64 0
  %876 = load i8, i8* %arrayidx1631, align 1
  %conv1632 = zext i8 %876 to i32
  %and1633 = and i32 %conv1632, 128
  %tobool1634 = icmp ne i32 %and1633, 0
  br i1 %tobool1634, label %cond.false.1638, label %cond.true.1635

cond.true.1635:                                   ; preds = %cond.true.1630
  store i32 1, i32* %len1623, align 4
  %877 = load i8*, i8** %p, align 8
  %arrayidx1636 = getelementptr inbounds i8, i8* %877, i64 0
  %878 = load i8, i8* %arrayidx1636, align 1
  %conv1637 = zext i8 %878 to i32
  br label %cond.end.1683

cond.false.1638:                                  ; preds = %cond.true.1630
  %879 = load i8*, i8** %p, align 8
  %arrayidx1639 = getelementptr inbounds i8, i8* %879, i64 0
  %880 = load i8, i8* %arrayidx1639, align 1
  %conv1640 = zext i8 %880 to i32
  %and1641 = and i32 %conv1640, 32
  %tobool1642 = icmp ne i32 %and1641, 0
  br i1 %tobool1642, label %cond.false.1658, label %cond.true.1643

cond.true.1643:                                   ; preds = %cond.false.1638
  store i32 2, i32* %len1623, align 4
  %881 = load i8*, i8** %p, align 8
  %arrayidx1644 = getelementptr inbounds i8, i8* %881, i64 0
  %882 = load i8, i8* %arrayidx1644, align 1
  %conv1645 = zext i8 %882 to i32
  %and1646 = and i32 %conv1645, 31
  %shl1647 = shl i32 %and1646, 6
  %883 = load i8*, i8** %p, align 8
  %arrayidx1648 = getelementptr inbounds i8, i8* %883, i64 1
  %884 = load i8, i8* %arrayidx1648, align 1
  %conv1649 = zext i8 %884 to i32
  %and1650 = and i32 %conv1649, 63
  %or1651 = or i32 %shl1647, %and1650
  %885 = load i8*, i8** %p, align 8
  %arrayidx1652 = getelementptr inbounds i8, i8* %885, i64 0
  %886 = load i8, i8* %arrayidx1652, align 1
  %conv1653 = zext i8 %886 to i32
  %cmp1654 = icmp slt i32 %conv1653, 194
  %cond1656 = select i1 %cmp1654, i32 4194176, i32 0
  %add1657 = add nsw i32 %or1651, %cond1656
  br label %cond.end.1681

cond.false.1658:                                  ; preds = %cond.false.1638
  %887 = load i8*, i8** %p, align 8
  %arrayidx1659 = getelementptr inbounds i8, i8* %887, i64 0
  %888 = load i8, i8* %arrayidx1659, align 1
  %conv1660 = zext i8 %888 to i32
  %and1661 = and i32 %conv1660, 16
  %tobool1662 = icmp ne i32 %and1661, 0
  br i1 %tobool1662, label %cond.false.1677, label %cond.true.1663

cond.true.1663:                                   ; preds = %cond.false.1658
  store i32 3, i32* %len1623, align 4
  %889 = load i8*, i8** %p, align 8
  %arrayidx1664 = getelementptr inbounds i8, i8* %889, i64 0
  %890 = load i8, i8* %arrayidx1664, align 1
  %conv1665 = zext i8 %890 to i32
  %and1666 = and i32 %conv1665, 15
  %shl1667 = shl i32 %and1666, 12
  %891 = load i8*, i8** %p, align 8
  %arrayidx1668 = getelementptr inbounds i8, i8* %891, i64 1
  %892 = load i8, i8* %arrayidx1668, align 1
  %conv1669 = zext i8 %892 to i32
  %and1670 = and i32 %conv1669, 63
  %shl1671 = shl i32 %and1670, 6
  %or1672 = or i32 %shl1667, %shl1671
  %893 = load i8*, i8** %p, align 8
  %arrayidx1673 = getelementptr inbounds i8, i8* %893, i64 2
  %894 = load i8, i8* %arrayidx1673, align 1
  %conv1674 = zext i8 %894 to i32
  %and1675 = and i32 %conv1674, 63
  %or1676 = or i32 %or1672, %and1675
  br label %cond.end.1679

cond.false.1677:                                  ; preds = %cond.false.1658
  %895 = load i8*, i8** %p, align 8
  %call1678 = call i32 @string_char(i8* %895, i8** null, i32* %len1623)
  br label %cond.end.1679

cond.end.1679:                                    ; preds = %cond.false.1677, %cond.true.1663
  %cond1680 = phi i32 [ %or1676, %cond.true.1663 ], [ %call1678, %cond.false.1677 ]
  br label %cond.end.1681

cond.end.1681:                                    ; preds = %cond.end.1679, %cond.true.1643
  %cond1682 = phi i32 [ %add1657, %cond.true.1643 ], [ %cond1680, %cond.end.1679 ]
  br label %cond.end.1683

cond.end.1683:                                    ; preds = %cond.end.1681, %cond.true.1635
  %cond1684 = phi i32 [ %conv1637, %cond.true.1635 ], [ %cond1682, %cond.end.1681 ]
  br label %cond.end.1687

cond.false.1685:                                  ; preds = %if.end.1627
  store i32 1, i32* %len1623, align 4
  %896 = load i8*, i8** %p, align 8
  %897 = load i8, i8* %896, align 1
  %conv1686 = zext i8 %897 to i32
  br label %cond.end.1687

cond.end.1687:                                    ; preds = %cond.false.1685, %cond.end.1683
  %cond1688 = phi i32 [ %cond1684, %cond.end.1683 ], [ %conv1686, %cond.false.1685 ]
  store i32 %cond1688, i32* %c, align 4
  %898 = load i32, i32* %len1623, align 4
  %899 = load i8*, i8** %p, align 8
  %idx.ext1689 = sext i32 %898 to i64
  %add.ptr1690 = getelementptr inbounds i8, i8* %899, i64 %idx.ext1689
  store i8* %add.ptr1690, i8** %p, align 8
  br label %do.end.1691

do.end.1691:                                      ; preds = %cond.end.1687
  store i32 0, i32* %c1, align 4
  %900 = load i8*, i8** %p, align 8
  store i8* %900, i8** %class_beg, align 8
  %901 = load i8*, i8** %p, align 8
  %902 = load i8*, i8** %pend, align 8
  %cmp1692 = icmp eq i8* %901, %902
  br i1 %cmp1692, label %if.then.1694, label %if.end.1705

if.then.1694:                                     ; preds = %do.end.1691
  br label %do.body.1695

do.body.1695:                                     ; preds = %if.then.1694
  br label %do.body.1696

do.body.1696:                                     ; preds = %do.body.1695
  %table1697 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %903 = load i32*, i32** %table1697, align 8
  %tobool1698 = icmp ne i32* %903, null
  br i1 %tobool1698, label %if.then.1699, label %if.end.1701

if.then.1699:                                     ; preds = %do.body.1696
  %table1700 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %904 = load i32*, i32** %table1700, align 8
  %905 = bitcast i32* %904 to i8*
  call void @xfree(i8* %905)
  br label %if.end.1701

if.end.1701:                                      ; preds = %if.then.1699, %do.body.1696
  br label %do.end.1702

do.end.1702:                                      ; preds = %if.end.1701
  %stack1703 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %906 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1703, align 8
  %907 = bitcast %struct.compile_stack_elt_t* %906 to i8*
  call void @xfree(i8* %907)
  store i32 7, i32* %retval
  br label %do.end.6650

do.end.1704:                                      ; No predecessors!
  br label %if.end.1705

if.end.1705:                                      ; preds = %do.end.1704, %do.end.1691
  br label %for.cond.1706

for.cond.1706:                                    ; preds = %if.end.1795, %if.end.1705
  br label %do.body.1707

do.body.1707:                                     ; preds = %for.cond.1706
  %908 = load i8*, i8** %p, align 8
  %909 = load i8*, i8** %pend, align 8
  %cmp1709 = icmp eq i8* %908, %909
  br i1 %cmp1709, label %if.then.1711, label %if.end.1712

if.then.1711:                                     ; preds = %do.body.1707
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.1712:                                      ; preds = %do.body.1707
  %910 = load i8, i8* %multibyte, align 1
  %conv1713 = sext i8 %910 to i32
  %tobool1714 = icmp ne i32 %conv1713, 0
  br i1 %tobool1714, label %cond.true.1715, label %cond.false.1770

cond.true.1715:                                   ; preds = %if.end.1712
  %911 = load i8*, i8** %p, align 8
  %arrayidx1716 = getelementptr inbounds i8, i8* %911, i64 0
  %912 = load i8, i8* %arrayidx1716, align 1
  %conv1717 = zext i8 %912 to i32
  %and1718 = and i32 %conv1717, 128
  %tobool1719 = icmp ne i32 %and1718, 0
  br i1 %tobool1719, label %cond.false.1723, label %cond.true.1720

cond.true.1720:                                   ; preds = %cond.true.1715
  store i32 1, i32* %len1708, align 4
  %913 = load i8*, i8** %p, align 8
  %arrayidx1721 = getelementptr inbounds i8, i8* %913, i64 0
  %914 = load i8, i8* %arrayidx1721, align 1
  %conv1722 = zext i8 %914 to i32
  br label %cond.end.1768

cond.false.1723:                                  ; preds = %cond.true.1715
  %915 = load i8*, i8** %p, align 8
  %arrayidx1724 = getelementptr inbounds i8, i8* %915, i64 0
  %916 = load i8, i8* %arrayidx1724, align 1
  %conv1725 = zext i8 %916 to i32
  %and1726 = and i32 %conv1725, 32
  %tobool1727 = icmp ne i32 %and1726, 0
  br i1 %tobool1727, label %cond.false.1743, label %cond.true.1728

cond.true.1728:                                   ; preds = %cond.false.1723
  store i32 2, i32* %len1708, align 4
  %917 = load i8*, i8** %p, align 8
  %arrayidx1729 = getelementptr inbounds i8, i8* %917, i64 0
  %918 = load i8, i8* %arrayidx1729, align 1
  %conv1730 = zext i8 %918 to i32
  %and1731 = and i32 %conv1730, 31
  %shl1732 = shl i32 %and1731, 6
  %919 = load i8*, i8** %p, align 8
  %arrayidx1733 = getelementptr inbounds i8, i8* %919, i64 1
  %920 = load i8, i8* %arrayidx1733, align 1
  %conv1734 = zext i8 %920 to i32
  %and1735 = and i32 %conv1734, 63
  %or1736 = or i32 %shl1732, %and1735
  %921 = load i8*, i8** %p, align 8
  %arrayidx1737 = getelementptr inbounds i8, i8* %921, i64 0
  %922 = load i8, i8* %arrayidx1737, align 1
  %conv1738 = zext i8 %922 to i32
  %cmp1739 = icmp slt i32 %conv1738, 194
  %cond1741 = select i1 %cmp1739, i32 4194176, i32 0
  %add1742 = add nsw i32 %or1736, %cond1741
  br label %cond.end.1766

cond.false.1743:                                  ; preds = %cond.false.1723
  %923 = load i8*, i8** %p, align 8
  %arrayidx1744 = getelementptr inbounds i8, i8* %923, i64 0
  %924 = load i8, i8* %arrayidx1744, align 1
  %conv1745 = zext i8 %924 to i32
  %and1746 = and i32 %conv1745, 16
  %tobool1747 = icmp ne i32 %and1746, 0
  br i1 %tobool1747, label %cond.false.1762, label %cond.true.1748

cond.true.1748:                                   ; preds = %cond.false.1743
  store i32 3, i32* %len1708, align 4
  %925 = load i8*, i8** %p, align 8
  %arrayidx1749 = getelementptr inbounds i8, i8* %925, i64 0
  %926 = load i8, i8* %arrayidx1749, align 1
  %conv1750 = zext i8 %926 to i32
  %and1751 = and i32 %conv1750, 15
  %shl1752 = shl i32 %and1751, 12
  %927 = load i8*, i8** %p, align 8
  %arrayidx1753 = getelementptr inbounds i8, i8* %927, i64 1
  %928 = load i8, i8* %arrayidx1753, align 1
  %conv1754 = zext i8 %928 to i32
  %and1755 = and i32 %conv1754, 63
  %shl1756 = shl i32 %and1755, 6
  %or1757 = or i32 %shl1752, %shl1756
  %929 = load i8*, i8** %p, align 8
  %arrayidx1758 = getelementptr inbounds i8, i8* %929, i64 2
  %930 = load i8, i8* %arrayidx1758, align 1
  %conv1759 = zext i8 %930 to i32
  %and1760 = and i32 %conv1759, 63
  %or1761 = or i32 %or1757, %and1760
  br label %cond.end.1764

cond.false.1762:                                  ; preds = %cond.false.1743
  %931 = load i8*, i8** %p, align 8
  %call1763 = call i32 @string_char(i8* %931, i8** null, i32* %len1708)
  br label %cond.end.1764

cond.end.1764:                                    ; preds = %cond.false.1762, %cond.true.1748
  %cond1765 = phi i32 [ %or1761, %cond.true.1748 ], [ %call1763, %cond.false.1762 ]
  br label %cond.end.1766

cond.end.1766:                                    ; preds = %cond.end.1764, %cond.true.1728
  %cond1767 = phi i32 [ %add1742, %cond.true.1728 ], [ %cond1765, %cond.end.1764 ]
  br label %cond.end.1768

cond.end.1768:                                    ; preds = %cond.end.1766, %cond.true.1720
  %cond1769 = phi i32 [ %conv1722, %cond.true.1720 ], [ %cond1767, %cond.end.1766 ]
  br label %cond.end.1772

cond.false.1770:                                  ; preds = %if.end.1712
  store i32 1, i32* %len1708, align 4
  %932 = load i8*, i8** %p, align 8
  %933 = load i8, i8* %932, align 1
  %conv1771 = zext i8 %933 to i32
  br label %cond.end.1772

cond.end.1772:                                    ; preds = %cond.false.1770, %cond.end.1768
  %cond1773 = phi i32 [ %cond1769, %cond.end.1768 ], [ %conv1771, %cond.false.1770 ]
  store i32 %cond1773, i32* %c, align 4
  %934 = load i32, i32* %len1708, align 4
  %935 = load i8*, i8** %p, align 8
  %idx.ext1774 = sext i32 %934 to i64
  %add.ptr1775 = getelementptr inbounds i8, i8* %935, i64 %idx.ext1774
  store i8* %add.ptr1775, i8** %p, align 8
  br label %do.end.1776

do.end.1776:                                      ; preds = %cond.end.1772
  %936 = load i32, i32* %c, align 4
  %cmp1777 = icmp eq i32 %936, 58
  br i1 %cmp1777, label %land.lhs.true.1779, label %lor.lhs.false.1783

land.lhs.true.1779:                               ; preds = %do.end.1776
  %937 = load i8*, i8** %p, align 8
  %938 = load i8, i8* %937, align 1
  %conv1780 = zext i8 %938 to i32
  %cmp1781 = icmp eq i32 %conv1780, 93
  br i1 %cmp1781, label %if.then.1786, label %lor.lhs.false.1783

lor.lhs.false.1783:                               ; preds = %land.lhs.true.1779, %do.end.1776
  %939 = load i8*, i8** %p, align 8
  %940 = load i8*, i8** %pend, align 8
  %cmp1784 = icmp eq i8* %939, %940
  br i1 %cmp1784, label %if.then.1786, label %if.end.1787

if.then.1786:                                     ; preds = %lor.lhs.false.1783, %land.lhs.true.1779
  br label %for.end.1796

if.end.1787:                                      ; preds = %lor.lhs.false.1783
  %941 = load i32, i32* %c1, align 4
  %cmp1788 = icmp slt i32 %941, 9
  br i1 %cmp1788, label %if.then.1790, label %if.else.1793

if.then.1790:                                     ; preds = %if.end.1787
  %942 = load i32, i32* %c, align 4
  %conv1791 = trunc i32 %942 to i8
  %943 = load i32, i32* %c1, align 4
  %inc = add nsw i32 %943, 1
  store i32 %inc, i32* %c1, align 4
  %idxprom = sext i32 %943 to i64
  %arrayidx1792 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i64 %idxprom
  store i8 %conv1791, i8* %arrayidx1792, align 1
  br label %if.end.1795

if.else.1793:                                     ; preds = %if.end.1787
  %arrayidx1794 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i64 0
  store i8 0, i8* %arrayidx1794, align 1
  br label %if.end.1795

if.end.1795:                                      ; preds = %if.else.1793, %if.then.1790
  br label %for.cond.1706

for.end.1796:                                     ; preds = %if.then.1786
  %944 = load i32, i32* %c1, align 4
  %idxprom1797 = sext i32 %944 to i64
  %arrayidx1798 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i64 %idxprom1797
  store i8 0, i8* %arrayidx1798, align 1
  %945 = load i32, i32* %c, align 4
  %cmp1799 = icmp eq i32 %945, 58
  br i1 %cmp1799, label %land.lhs.true.1801, label %if.else.2012

land.lhs.true.1801:                               ; preds = %for.end.1796
  %946 = load i8*, i8** %p, align 8
  %947 = load i8, i8* %946, align 1
  %conv1802 = zext i8 %947 to i32
  %cmp1803 = icmp eq i32 %conv1802, 93
  br i1 %cmp1803, label %if.then.1805, label %if.else.2012

if.then.1805:                                     ; preds = %land.lhs.true.1801
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i32 0
  %call1806 = call i32 @re_wctype(i8* %arraydecay)
  store i32 %call1806, i32* %cc, align 4
  %948 = load i32, i32* %cc, align 4
  %cmp1807 = icmp eq i32 %948, 0
  br i1 %cmp1807, label %if.then.1809, label %if.end.1820

if.then.1809:                                     ; preds = %if.then.1805
  br label %do.body.1810

do.body.1810:                                     ; preds = %if.then.1809
  br label %do.body.1811

do.body.1811:                                     ; preds = %do.body.1810
  %table1812 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %949 = load i32*, i32** %table1812, align 8
  %tobool1813 = icmp ne i32* %949, null
  br i1 %tobool1813, label %if.then.1814, label %if.end.1816

if.then.1814:                                     ; preds = %do.body.1811
  %table1815 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %950 = load i32*, i32** %table1815, align 8
  %951 = bitcast i32* %950 to i8*
  call void @xfree(i8* %951)
  br label %if.end.1816

if.end.1816:                                      ; preds = %if.then.1814, %do.body.1811
  br label %do.end.1817

do.end.1817:                                      ; preds = %if.end.1816
  %stack1818 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %952 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1818, align 8
  %953 = bitcast %struct.compile_stack_elt_t* %952 to i8*
  call void @xfree(i8* %953)
  store i32 4, i32* %retval
  br label %do.end.6650

do.end.1819:                                      ; No predecessors!
  br label %if.end.1820

if.end.1820:                                      ; preds = %do.end.1819, %if.then.1805
  br label %do.body.1821

do.body.1821:                                     ; preds = %if.end.1820
  %954 = load i8*, i8** %p, align 8
  %955 = load i8*, i8** %pend, align 8
  %cmp1823 = icmp eq i8* %954, %955
  br i1 %cmp1823, label %if.then.1825, label %if.end.1826

if.then.1825:                                     ; preds = %do.body.1821
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.1826:                                      ; preds = %do.body.1821
  %956 = load i8, i8* %multibyte, align 1
  %conv1827 = sext i8 %956 to i32
  %tobool1828 = icmp ne i32 %conv1827, 0
  br i1 %tobool1828, label %cond.true.1829, label %cond.false.1884

cond.true.1829:                                   ; preds = %if.end.1826
  %957 = load i8*, i8** %p, align 8
  %arrayidx1830 = getelementptr inbounds i8, i8* %957, i64 0
  %958 = load i8, i8* %arrayidx1830, align 1
  %conv1831 = zext i8 %958 to i32
  %and1832 = and i32 %conv1831, 128
  %tobool1833 = icmp ne i32 %and1832, 0
  br i1 %tobool1833, label %cond.false.1837, label %cond.true.1834

cond.true.1834:                                   ; preds = %cond.true.1829
  store i32 1, i32* %len1822, align 4
  %959 = load i8*, i8** %p, align 8
  %arrayidx1835 = getelementptr inbounds i8, i8* %959, i64 0
  %960 = load i8, i8* %arrayidx1835, align 1
  %conv1836 = zext i8 %960 to i32
  br label %cond.end.1882

cond.false.1837:                                  ; preds = %cond.true.1829
  %961 = load i8*, i8** %p, align 8
  %arrayidx1838 = getelementptr inbounds i8, i8* %961, i64 0
  %962 = load i8, i8* %arrayidx1838, align 1
  %conv1839 = zext i8 %962 to i32
  %and1840 = and i32 %conv1839, 32
  %tobool1841 = icmp ne i32 %and1840, 0
  br i1 %tobool1841, label %cond.false.1857, label %cond.true.1842

cond.true.1842:                                   ; preds = %cond.false.1837
  store i32 2, i32* %len1822, align 4
  %963 = load i8*, i8** %p, align 8
  %arrayidx1843 = getelementptr inbounds i8, i8* %963, i64 0
  %964 = load i8, i8* %arrayidx1843, align 1
  %conv1844 = zext i8 %964 to i32
  %and1845 = and i32 %conv1844, 31
  %shl1846 = shl i32 %and1845, 6
  %965 = load i8*, i8** %p, align 8
  %arrayidx1847 = getelementptr inbounds i8, i8* %965, i64 1
  %966 = load i8, i8* %arrayidx1847, align 1
  %conv1848 = zext i8 %966 to i32
  %and1849 = and i32 %conv1848, 63
  %or1850 = or i32 %shl1846, %and1849
  %967 = load i8*, i8** %p, align 8
  %arrayidx1851 = getelementptr inbounds i8, i8* %967, i64 0
  %968 = load i8, i8* %arrayidx1851, align 1
  %conv1852 = zext i8 %968 to i32
  %cmp1853 = icmp slt i32 %conv1852, 194
  %cond1855 = select i1 %cmp1853, i32 4194176, i32 0
  %add1856 = add nsw i32 %or1850, %cond1855
  br label %cond.end.1880

cond.false.1857:                                  ; preds = %cond.false.1837
  %969 = load i8*, i8** %p, align 8
  %arrayidx1858 = getelementptr inbounds i8, i8* %969, i64 0
  %970 = load i8, i8* %arrayidx1858, align 1
  %conv1859 = zext i8 %970 to i32
  %and1860 = and i32 %conv1859, 16
  %tobool1861 = icmp ne i32 %and1860, 0
  br i1 %tobool1861, label %cond.false.1876, label %cond.true.1862

cond.true.1862:                                   ; preds = %cond.false.1857
  store i32 3, i32* %len1822, align 4
  %971 = load i8*, i8** %p, align 8
  %arrayidx1863 = getelementptr inbounds i8, i8* %971, i64 0
  %972 = load i8, i8* %arrayidx1863, align 1
  %conv1864 = zext i8 %972 to i32
  %and1865 = and i32 %conv1864, 15
  %shl1866 = shl i32 %and1865, 12
  %973 = load i8*, i8** %p, align 8
  %arrayidx1867 = getelementptr inbounds i8, i8* %973, i64 1
  %974 = load i8, i8* %arrayidx1867, align 1
  %conv1868 = zext i8 %974 to i32
  %and1869 = and i32 %conv1868, 63
  %shl1870 = shl i32 %and1869, 6
  %or1871 = or i32 %shl1866, %shl1870
  %975 = load i8*, i8** %p, align 8
  %arrayidx1872 = getelementptr inbounds i8, i8* %975, i64 2
  %976 = load i8, i8* %arrayidx1872, align 1
  %conv1873 = zext i8 %976 to i32
  %and1874 = and i32 %conv1873, 63
  %or1875 = or i32 %or1871, %and1874
  br label %cond.end.1878

cond.false.1876:                                  ; preds = %cond.false.1857
  %977 = load i8*, i8** %p, align 8
  %call1877 = call i32 @string_char(i8* %977, i8** null, i32* %len1822)
  br label %cond.end.1878

cond.end.1878:                                    ; preds = %cond.false.1876, %cond.true.1862
  %cond1879 = phi i32 [ %or1875, %cond.true.1862 ], [ %call1877, %cond.false.1876 ]
  br label %cond.end.1880

cond.end.1880:                                    ; preds = %cond.end.1878, %cond.true.1842
  %cond1881 = phi i32 [ %add1856, %cond.true.1842 ], [ %cond1879, %cond.end.1878 ]
  br label %cond.end.1882

cond.end.1882:                                    ; preds = %cond.end.1880, %cond.true.1834
  %cond1883 = phi i32 [ %conv1836, %cond.true.1834 ], [ %cond1881, %cond.end.1880 ]
  br label %cond.end.1886

cond.false.1884:                                  ; preds = %if.end.1826
  store i32 1, i32* %len1822, align 4
  %978 = load i8*, i8** %p, align 8
  %979 = load i8, i8* %978, align 1
  %conv1885 = zext i8 %979 to i32
  br label %cond.end.1886

cond.end.1886:                                    ; preds = %cond.false.1884, %cond.end.1882
  %cond1887 = phi i32 [ %cond1883, %cond.end.1882 ], [ %conv1885, %cond.false.1884 ]
  store i32 %cond1887, i32* %c, align 4
  %980 = load i32, i32* %len1822, align 4
  %981 = load i8*, i8** %p, align 8
  %idx.ext1888 = sext i32 %980 to i64
  %add.ptr1889 = getelementptr inbounds i8, i8* %981, i64 %idx.ext1888
  store i8* %add.ptr1889, i8** %p, align 8
  br label %do.end.1890

do.end.1890:                                      ; preds = %cond.end.1886
  %982 = load i8*, i8** %p, align 8
  %983 = load i8*, i8** %pend, align 8
  %cmp1891 = icmp eq i8* %982, %983
  br i1 %cmp1891, label %if.then.1893, label %if.end.1904

if.then.1893:                                     ; preds = %do.end.1890
  br label %do.body.1894

do.body.1894:                                     ; preds = %if.then.1893
  br label %do.body.1895

do.body.1895:                                     ; preds = %do.body.1894
  %table1896 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %984 = load i32*, i32** %table1896, align 8
  %tobool1897 = icmp ne i32* %984, null
  br i1 %tobool1897, label %if.then.1898, label %if.end.1900

if.then.1898:                                     ; preds = %do.body.1895
  %table1899 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %985 = load i32*, i32** %table1899, align 8
  %986 = bitcast i32* %985 to i8*
  call void @xfree(i8* %986)
  br label %if.end.1900

if.end.1900:                                      ; preds = %if.then.1898, %do.body.1895
  br label %do.end.1901

do.end.1901:                                      ; preds = %if.end.1900
  %stack1902 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %987 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1902, align 8
  %988 = bitcast %struct.compile_stack_elt_t* %987 to i8*
  call void @xfree(i8* %988)
  store i32 7, i32* %retval
  br label %do.end.6650

do.end.1903:                                      ; No predecessors!
  br label %if.end.1904

if.end.1904:                                      ; preds = %do.end.1903, %do.end.1890
  call void @SETUP_BUFFER_SYNTAX_TABLE()
  store i32 0, i32* %ch, align 4
  br label %for.cond.1905

for.cond.1905:                                    ; preds = %for.inc, %if.end.1904
  %989 = load i32, i32* %ch, align 4
  %cmp1906 = icmp slt i32 %989, 256
  br i1 %cmp1906, label %for.body, label %for.end.2000

for.body:                                         ; preds = %for.cond.1905
  br i1 true, label %cond.true.1908, label %cond.false.1912

cond.true.1908:                                   ; preds = %for.body
  %990 = load i32, i32* %ch, align 4
  %add1909 = add i32 %990, 0
  %cmp1910 = icmp ult i32 %add1909, 128
  br i1 %cmp1910, label %cond.true.1917, label %cond.false.1918

cond.false.1912:                                  ; preds = %for.body
  %991 = load i32, i32* %ch, align 4
  %conv1913 = sext i32 %991 to i64
  %add1914 = add i64 %conv1913, 0
  %cmp1915 = icmp ult i64 %add1914, 128
  br i1 %cmp1915, label %cond.true.1917, label %cond.false.1918

cond.true.1917:                                   ; preds = %cond.false.1912, %cond.true.1908
  %992 = load i32, i32* %ch, align 4
  br label %cond.end.1920

cond.false.1918:                                  ; preds = %cond.false.1912, %cond.true.1908
  %993 = load i32, i32* %ch, align 4
  %add1919 = add nsw i32 %993, 4194048
  br label %cond.end.1920

cond.end.1920:                                    ; preds = %cond.false.1918, %cond.true.1917
  %cond1921 = phi i32 [ %992, %cond.true.1917 ], [ %add1919, %cond.false.1918 ]
  store i32 %cond1921, i32* %c, align 4
  %994 = load i32, i32* %c, align 4
  %cmp1922 = icmp sgt i32 %994, 4194175
  br i1 %cmp1922, label %if.end.1998, label %land.lhs.true.1924

land.lhs.true.1924:                               ; preds = %cond.end.1920
  %995 = load i32, i32* %c, align 4
  %996 = load i32, i32* %cc, align 4
  %call1925 = call signext i8 @re_iswctype(i32 %995, i32 %996)
  %conv1926 = sext i8 %call1925 to i32
  %tobool1927 = icmp ne i32 %conv1926, 0
  br i1 %tobool1927, label %if.then.1928, label %if.end.1998

if.then.1928:                                     ; preds = %land.lhs.true.1924
  %997 = load i32, i32* %ch, align 4
  %rem = srem i32 %997, 8
  %shl1929 = shl i32 1, %rem
  %998 = load i32, i32* %ch, align 4
  %div = sdiv i32 %998, 8
  %idxprom1930 = sext i32 %div to i64
  %999 = load i8*, i8** %b, align 8
  %arrayidx1931 = getelementptr inbounds i8, i8* %999, i64 %idxprom1930
  %1000 = load i8, i8* %arrayidx1931, align 1
  %conv1932 = zext i8 %1000 to i32
  %or1933 = or i32 %conv1932, %shl1929
  %conv1934 = trunc i32 %or1933 to i8
  store i8 %conv1934, i8* %arrayidx1931, align 1
  %1001 = load i64, i64* %translate, align 8
  %cmp1935 = icmp eq i64 %1001, 2
  br i1 %cmp1935, label %cond.false.1939, label %cond.true.1937

cond.true.1937:                                   ; preds = %if.then.1928
  %1002 = load i64, i64* %translate, align 8
  %1003 = load i32, i32* %c, align 4
  %call1938 = call i32 @char_table_translate(i64 %1002, i32 %1003)
  br label %cond.end.1940

cond.false.1939:                                  ; preds = %if.then.1928
  %1004 = load i32, i32* %c, align 4
  br label %cond.end.1940

cond.end.1940:                                    ; preds = %cond.false.1939, %cond.true.1937
  %cond1941 = phi i32 [ %call1938, %cond.true.1937 ], [ %1004, %cond.false.1939 ]
  store i32 %cond1941, i32* %c1, align 4
  %1005 = load i32, i32* %c1, align 4
  %1006 = load i32, i32* %c, align 4
  %cmp1942 = icmp eq i32 %1005, %1006
  br i1 %cmp1942, label %if.then.1944, label %if.end.1945

if.then.1944:                                     ; preds = %cond.end.1940
  br label %for.inc

if.end.1945:                                      ; preds = %cond.end.1940
  br i1 true, label %cond.true.1946, label %cond.false.1950

cond.true.1946:                                   ; preds = %if.end.1945
  %1007 = load i32, i32* %c1, align 4
  %add1947 = add i32 %1007, 0
  %cmp1948 = icmp ult i32 %add1947, 128
  br i1 %cmp1948, label %if.then.1955, label %if.else.1964

cond.false.1950:                                  ; preds = %if.end.1945
  %1008 = load i32, i32* %c1, align 4
  %conv1951 = sext i32 %1008 to i64
  %add1952 = add i64 %conv1951, 0
  %cmp1953 = icmp ult i64 %add1952, 128
  br i1 %cmp1953, label %if.then.1955, label %if.else.1964

if.then.1955:                                     ; preds = %cond.false.1950, %cond.true.1946
  %1009 = load i32, i32* %c1, align 4
  %rem1956 = srem i32 %1009, 8
  %shl1957 = shl i32 1, %rem1956
  %1010 = load i32, i32* %c1, align 4
  %div1958 = sdiv i32 %1010, 8
  %idxprom1959 = sext i32 %div1958 to i64
  %1011 = load i8*, i8** %b, align 8
  %arrayidx1960 = getelementptr inbounds i8, i8* %1011, i64 %idxprom1959
  %1012 = load i8, i8* %arrayidx1960, align 1
  %conv1961 = zext i8 %1012 to i32
  %or1962 = or i32 %conv1961, %shl1957
  %conv1963 = trunc i32 %or1962 to i8
  store i8 %conv1963, i8* %arrayidx1960, align 1
  br label %if.end.1997

if.else.1964:                                     ; preds = %cond.false.1950, %cond.true.1946
  br i1 true, label %cond.true.1965, label %cond.false.1969

cond.true.1965:                                   ; preds = %if.else.1964
  %1013 = load i32, i32* %c1, align 4
  %add1966 = add i32 %1013, 0
  %cmp1967 = icmp ult i32 %add1966, 128
  br i1 %cmp1967, label %cond.true.1974, label %cond.false.1975

cond.false.1969:                                  ; preds = %if.else.1964
  %1014 = load i32, i32* %c1, align 4
  %conv1970 = sext i32 %1014 to i64
  %add1971 = add i64 %conv1970, 0
  %cmp1972 = icmp ult i64 %add1971, 128
  br i1 %cmp1972, label %cond.true.1974, label %cond.false.1975

cond.true.1974:                                   ; preds = %cond.false.1969, %cond.true.1965
  %1015 = load i32, i32* %c1, align 4
  br label %cond.end.1983

cond.false.1975:                                  ; preds = %cond.false.1969, %cond.true.1965
  %1016 = load i32, i32* %c1, align 4
  %cmp1976 = icmp sgt i32 %1016, 4194175
  br i1 %cmp1976, label %cond.true.1978, label %cond.false.1980

cond.true.1978:                                   ; preds = %cond.false.1975
  %1017 = load i32, i32* %c1, align 4
  %sub1979 = sub nsw i32 %1017, 4194048
  br label %cond.end.1981

cond.false.1980:                                  ; preds = %cond.false.1975
  br label %cond.end.1981

cond.end.1981:                                    ; preds = %cond.false.1980, %cond.true.1978
  %cond1982 = phi i32 [ %sub1979, %cond.true.1978 ], [ -1, %cond.false.1980 ]
  br label %cond.end.1983

cond.end.1983:                                    ; preds = %cond.end.1981, %cond.true.1974
  %cond1984 = phi i32 [ %1015, %cond.true.1974 ], [ %cond1982, %cond.end.1981 ]
  store i32 %cond1984, i32* %c1, align 4
  %cmp1985 = icmp sge i32 %cond1984, 0
  br i1 %cmp1985, label %if.then.1987, label %if.end.1996

if.then.1987:                                     ; preds = %cond.end.1983
  %1018 = load i32, i32* %c1, align 4
  %rem1988 = srem i32 %1018, 8
  %shl1989 = shl i32 1, %rem1988
  %1019 = load i32, i32* %c1, align 4
  %div1990 = sdiv i32 %1019, 8
  %idxprom1991 = sext i32 %div1990 to i64
  %1020 = load i8*, i8** %b, align 8
  %arrayidx1992 = getelementptr inbounds i8, i8* %1020, i64 %idxprom1991
  %1021 = load i8, i8* %arrayidx1992, align 1
  %conv1993 = zext i8 %1021 to i32
  %or1994 = or i32 %conv1993, %shl1989
  %conv1995 = trunc i32 %or1994 to i8
  store i8 %conv1995, i8* %arrayidx1992, align 1
  br label %if.end.1996

if.end.1996:                                      ; preds = %if.then.1987, %cond.end.1983
  br label %if.end.1997

if.end.1997:                                      ; preds = %if.end.1996, %if.then.1955
  br label %if.end.1998

if.end.1998:                                      ; preds = %if.end.1997, %land.lhs.true.1924, %cond.end.1920
  br label %for.inc

for.inc:                                          ; preds = %if.end.1998, %if.then.1944
  %1022 = load i32, i32* %ch, align 4
  %inc1999 = add nsw i32 %1022, 1
  store i32 %inc1999, i32* %ch, align 4
  br label %for.cond.1905

for.end.2000:                                     ; preds = %for.cond.1905
  %1023 = load i32, i32* %cc, align 4
  %call2001 = call i32 @re_wctype_to_bit(i32 %1023)
  %bits2002 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 3
  %1024 = load i32, i32* %bits2002, align 4
  %or2003 = or i32 %1024, %call2001
  store i32 %or2003, i32* %bits2002, align 4
  %1025 = load i32, i32* %cc, align 4
  %shl2004 = shl i32 1, %1025
  %and2005 = and i32 %shl2004, 8200
  %tobool2006 = icmp ne i32 %and2005, 0
  br i1 %tobool2006, label %if.then.2007, label %if.end.2011

if.then.2007:                                     ; preds = %for.end.2000
  %1026 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used_syntax2008 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1026, i32 0, i32 7
  %bf.load2009 = load i16, i16* %used_syntax2008, align 8
  %bf.clear2010 = and i16 %bf.load2009, -129
  %bf.set = or i16 %bf.clear2010, 128
  store i16 %bf.set, i16* %used_syntax2008, align 8
  br label %if.end.2011

if.end.2011:                                      ; preds = %if.then.2007, %for.end.2000
  br label %for.cond.1425

if.else.2012:                                     ; preds = %land.lhs.true.1801, %for.end.1796
  %1027 = load i8*, i8** %class_beg, align 8
  store i8* %1027, i8** %p, align 8
  %1028 = load i8*, i8** %b, align 8
  %arrayidx2013 = getelementptr inbounds i8, i8* %1028, i64 11
  %1029 = load i8, i8* %arrayidx2013, align 1
  %conv2014 = zext i8 %1029 to i32
  %or2015 = or i32 %conv2014, 8
  %conv2016 = trunc i32 %or2015 to i8
  store i8 %conv2016, i8* %arrayidx2013, align 1
  store i32 58, i32* %c, align 4
  br label %if.end.2017

if.end.2017:                                      ; preds = %if.else.2012
  br label %if.end.2018

if.end.2018:                                      ; preds = %if.end.2017, %land.lhs.true.1617, %land.lhs.true.1614, %land.lhs.true.1611, %if.end.1609
  %1030 = load i8*, i8** %p, align 8
  %1031 = load i8*, i8** %pend, align 8
  %cmp2019 = icmp ult i8* %1030, %1031
  br i1 %cmp2019, label %land.lhs.true.2021, label %if.else.2190

land.lhs.true.2021:                               ; preds = %if.end.2018
  %1032 = load i8*, i8** %p, align 8
  %arrayidx2022 = getelementptr inbounds i8, i8* %1032, i64 0
  %1033 = load i8, i8* %arrayidx2022, align 1
  %conv2023 = zext i8 %1033 to i32
  %cmp2024 = icmp eq i32 %conv2023, 45
  br i1 %cmp2024, label %land.lhs.true.2026, label %if.else.2190

land.lhs.true.2026:                               ; preds = %land.lhs.true.2021
  %1034 = load i8*, i8** %p, align 8
  %arrayidx2027 = getelementptr inbounds i8, i8* %1034, i64 1
  %1035 = load i8, i8* %arrayidx2027, align 1
  %conv2028 = zext i8 %1035 to i32
  %cmp2029 = icmp ne i32 %conv2028, 93
  br i1 %cmp2029, label %if.then.2031, label %if.else.2190

if.then.2031:                                     ; preds = %land.lhs.true.2026
  br label %do.body.2032

do.body.2032:                                     ; preds = %if.then.2031
  %1036 = load i8*, i8** %p, align 8
  %1037 = load i8*, i8** %pend, align 8
  %cmp2034 = icmp eq i8* %1036, %1037
  br i1 %cmp2034, label %if.then.2036, label %if.end.2037

if.then.2036:                                     ; preds = %do.body.2032
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.2037:                                      ; preds = %do.body.2032
  %1038 = load i8, i8* %multibyte, align 1
  %conv2038 = sext i8 %1038 to i32
  %tobool2039 = icmp ne i32 %conv2038, 0
  br i1 %tobool2039, label %cond.true.2040, label %cond.false.2095

cond.true.2040:                                   ; preds = %if.end.2037
  %1039 = load i8*, i8** %p, align 8
  %arrayidx2041 = getelementptr inbounds i8, i8* %1039, i64 0
  %1040 = load i8, i8* %arrayidx2041, align 1
  %conv2042 = zext i8 %1040 to i32
  %and2043 = and i32 %conv2042, 128
  %tobool2044 = icmp ne i32 %and2043, 0
  br i1 %tobool2044, label %cond.false.2048, label %cond.true.2045

cond.true.2045:                                   ; preds = %cond.true.2040
  store i32 1, i32* %len2033, align 4
  %1041 = load i8*, i8** %p, align 8
  %arrayidx2046 = getelementptr inbounds i8, i8* %1041, i64 0
  %1042 = load i8, i8* %arrayidx2046, align 1
  %conv2047 = zext i8 %1042 to i32
  br label %cond.end.2093

cond.false.2048:                                  ; preds = %cond.true.2040
  %1043 = load i8*, i8** %p, align 8
  %arrayidx2049 = getelementptr inbounds i8, i8* %1043, i64 0
  %1044 = load i8, i8* %arrayidx2049, align 1
  %conv2050 = zext i8 %1044 to i32
  %and2051 = and i32 %conv2050, 32
  %tobool2052 = icmp ne i32 %and2051, 0
  br i1 %tobool2052, label %cond.false.2068, label %cond.true.2053

cond.true.2053:                                   ; preds = %cond.false.2048
  store i32 2, i32* %len2033, align 4
  %1045 = load i8*, i8** %p, align 8
  %arrayidx2054 = getelementptr inbounds i8, i8* %1045, i64 0
  %1046 = load i8, i8* %arrayidx2054, align 1
  %conv2055 = zext i8 %1046 to i32
  %and2056 = and i32 %conv2055, 31
  %shl2057 = shl i32 %and2056, 6
  %1047 = load i8*, i8** %p, align 8
  %arrayidx2058 = getelementptr inbounds i8, i8* %1047, i64 1
  %1048 = load i8, i8* %arrayidx2058, align 1
  %conv2059 = zext i8 %1048 to i32
  %and2060 = and i32 %conv2059, 63
  %or2061 = or i32 %shl2057, %and2060
  %1049 = load i8*, i8** %p, align 8
  %arrayidx2062 = getelementptr inbounds i8, i8* %1049, i64 0
  %1050 = load i8, i8* %arrayidx2062, align 1
  %conv2063 = zext i8 %1050 to i32
  %cmp2064 = icmp slt i32 %conv2063, 194
  %cond2066 = select i1 %cmp2064, i32 4194176, i32 0
  %add2067 = add nsw i32 %or2061, %cond2066
  br label %cond.end.2091

cond.false.2068:                                  ; preds = %cond.false.2048
  %1051 = load i8*, i8** %p, align 8
  %arrayidx2069 = getelementptr inbounds i8, i8* %1051, i64 0
  %1052 = load i8, i8* %arrayidx2069, align 1
  %conv2070 = zext i8 %1052 to i32
  %and2071 = and i32 %conv2070, 16
  %tobool2072 = icmp ne i32 %and2071, 0
  br i1 %tobool2072, label %cond.false.2087, label %cond.true.2073

cond.true.2073:                                   ; preds = %cond.false.2068
  store i32 3, i32* %len2033, align 4
  %1053 = load i8*, i8** %p, align 8
  %arrayidx2074 = getelementptr inbounds i8, i8* %1053, i64 0
  %1054 = load i8, i8* %arrayidx2074, align 1
  %conv2075 = zext i8 %1054 to i32
  %and2076 = and i32 %conv2075, 15
  %shl2077 = shl i32 %and2076, 12
  %1055 = load i8*, i8** %p, align 8
  %arrayidx2078 = getelementptr inbounds i8, i8* %1055, i64 1
  %1056 = load i8, i8* %arrayidx2078, align 1
  %conv2079 = zext i8 %1056 to i32
  %and2080 = and i32 %conv2079, 63
  %shl2081 = shl i32 %and2080, 6
  %or2082 = or i32 %shl2077, %shl2081
  %1057 = load i8*, i8** %p, align 8
  %arrayidx2083 = getelementptr inbounds i8, i8* %1057, i64 2
  %1058 = load i8, i8* %arrayidx2083, align 1
  %conv2084 = zext i8 %1058 to i32
  %and2085 = and i32 %conv2084, 63
  %or2086 = or i32 %or2082, %and2085
  br label %cond.end.2089

cond.false.2087:                                  ; preds = %cond.false.2068
  %1059 = load i8*, i8** %p, align 8
  %call2088 = call i32 @string_char(i8* %1059, i8** null, i32* %len2033)
  br label %cond.end.2089

cond.end.2089:                                    ; preds = %cond.false.2087, %cond.true.2073
  %cond2090 = phi i32 [ %or2086, %cond.true.2073 ], [ %call2088, %cond.false.2087 ]
  br label %cond.end.2091

cond.end.2091:                                    ; preds = %cond.end.2089, %cond.true.2053
  %cond2092 = phi i32 [ %add2067, %cond.true.2053 ], [ %cond2090, %cond.end.2089 ]
  br label %cond.end.2093

cond.end.2093:                                    ; preds = %cond.end.2091, %cond.true.2045
  %cond2094 = phi i32 [ %conv2047, %cond.true.2045 ], [ %cond2092, %cond.end.2091 ]
  br label %cond.end.2097

cond.false.2095:                                  ; preds = %if.end.2037
  store i32 1, i32* %len2033, align 4
  %1060 = load i8*, i8** %p, align 8
  %1061 = load i8, i8* %1060, align 1
  %conv2096 = zext i8 %1061 to i32
  br label %cond.end.2097

cond.end.2097:                                    ; preds = %cond.false.2095, %cond.end.2093
  %cond2098 = phi i32 [ %cond2094, %cond.end.2093 ], [ %conv2096, %cond.false.2095 ]
  store i32 %cond2098, i32* %c1, align 4
  %1062 = load i32, i32* %len2033, align 4
  %1063 = load i8*, i8** %p, align 8
  %idx.ext2099 = sext i32 %1062 to i64
  %add.ptr2100 = getelementptr inbounds i8, i8* %1063, i64 %idx.ext2099
  store i8* %add.ptr2100, i8** %p, align 8
  br label %do.end.2101

do.end.2101:                                      ; preds = %cond.end.2097
  br label %do.body.2102

do.body.2102:                                     ; preds = %do.end.2101
  %1064 = load i8*, i8** %p, align 8
  %1065 = load i8*, i8** %pend, align 8
  %cmp2104 = icmp eq i8* %1064, %1065
  br i1 %cmp2104, label %if.then.2106, label %if.end.2107

if.then.2106:                                     ; preds = %do.body.2102
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.2107:                                      ; preds = %do.body.2102
  %1066 = load i8, i8* %multibyte, align 1
  %conv2108 = sext i8 %1066 to i32
  %tobool2109 = icmp ne i32 %conv2108, 0
  br i1 %tobool2109, label %cond.true.2110, label %cond.false.2165

cond.true.2110:                                   ; preds = %if.end.2107
  %1067 = load i8*, i8** %p, align 8
  %arrayidx2111 = getelementptr inbounds i8, i8* %1067, i64 0
  %1068 = load i8, i8* %arrayidx2111, align 1
  %conv2112 = zext i8 %1068 to i32
  %and2113 = and i32 %conv2112, 128
  %tobool2114 = icmp ne i32 %and2113, 0
  br i1 %tobool2114, label %cond.false.2118, label %cond.true.2115

cond.true.2115:                                   ; preds = %cond.true.2110
  store i32 1, i32* %len2103, align 4
  %1069 = load i8*, i8** %p, align 8
  %arrayidx2116 = getelementptr inbounds i8, i8* %1069, i64 0
  %1070 = load i8, i8* %arrayidx2116, align 1
  %conv2117 = zext i8 %1070 to i32
  br label %cond.end.2163

cond.false.2118:                                  ; preds = %cond.true.2110
  %1071 = load i8*, i8** %p, align 8
  %arrayidx2119 = getelementptr inbounds i8, i8* %1071, i64 0
  %1072 = load i8, i8* %arrayidx2119, align 1
  %conv2120 = zext i8 %1072 to i32
  %and2121 = and i32 %conv2120, 32
  %tobool2122 = icmp ne i32 %and2121, 0
  br i1 %tobool2122, label %cond.false.2138, label %cond.true.2123

cond.true.2123:                                   ; preds = %cond.false.2118
  store i32 2, i32* %len2103, align 4
  %1073 = load i8*, i8** %p, align 8
  %arrayidx2124 = getelementptr inbounds i8, i8* %1073, i64 0
  %1074 = load i8, i8* %arrayidx2124, align 1
  %conv2125 = zext i8 %1074 to i32
  %and2126 = and i32 %conv2125, 31
  %shl2127 = shl i32 %and2126, 6
  %1075 = load i8*, i8** %p, align 8
  %arrayidx2128 = getelementptr inbounds i8, i8* %1075, i64 1
  %1076 = load i8, i8* %arrayidx2128, align 1
  %conv2129 = zext i8 %1076 to i32
  %and2130 = and i32 %conv2129, 63
  %or2131 = or i32 %shl2127, %and2130
  %1077 = load i8*, i8** %p, align 8
  %arrayidx2132 = getelementptr inbounds i8, i8* %1077, i64 0
  %1078 = load i8, i8* %arrayidx2132, align 1
  %conv2133 = zext i8 %1078 to i32
  %cmp2134 = icmp slt i32 %conv2133, 194
  %cond2136 = select i1 %cmp2134, i32 4194176, i32 0
  %add2137 = add nsw i32 %or2131, %cond2136
  br label %cond.end.2161

cond.false.2138:                                  ; preds = %cond.false.2118
  %1079 = load i8*, i8** %p, align 8
  %arrayidx2139 = getelementptr inbounds i8, i8* %1079, i64 0
  %1080 = load i8, i8* %arrayidx2139, align 1
  %conv2140 = zext i8 %1080 to i32
  %and2141 = and i32 %conv2140, 16
  %tobool2142 = icmp ne i32 %and2141, 0
  br i1 %tobool2142, label %cond.false.2157, label %cond.true.2143

cond.true.2143:                                   ; preds = %cond.false.2138
  store i32 3, i32* %len2103, align 4
  %1081 = load i8*, i8** %p, align 8
  %arrayidx2144 = getelementptr inbounds i8, i8* %1081, i64 0
  %1082 = load i8, i8* %arrayidx2144, align 1
  %conv2145 = zext i8 %1082 to i32
  %and2146 = and i32 %conv2145, 15
  %shl2147 = shl i32 %and2146, 12
  %1083 = load i8*, i8** %p, align 8
  %arrayidx2148 = getelementptr inbounds i8, i8* %1083, i64 1
  %1084 = load i8, i8* %arrayidx2148, align 1
  %conv2149 = zext i8 %1084 to i32
  %and2150 = and i32 %conv2149, 63
  %shl2151 = shl i32 %and2150, 6
  %or2152 = or i32 %shl2147, %shl2151
  %1085 = load i8*, i8** %p, align 8
  %arrayidx2153 = getelementptr inbounds i8, i8* %1085, i64 2
  %1086 = load i8, i8* %arrayidx2153, align 1
  %conv2154 = zext i8 %1086 to i32
  %and2155 = and i32 %conv2154, 63
  %or2156 = or i32 %or2152, %and2155
  br label %cond.end.2159

cond.false.2157:                                  ; preds = %cond.false.2138
  %1087 = load i8*, i8** %p, align 8
  %call2158 = call i32 @string_char(i8* %1087, i8** null, i32* %len2103)
  br label %cond.end.2159

cond.end.2159:                                    ; preds = %cond.false.2157, %cond.true.2143
  %cond2160 = phi i32 [ %or2156, %cond.true.2143 ], [ %call2158, %cond.false.2157 ]
  br label %cond.end.2161

cond.end.2161:                                    ; preds = %cond.end.2159, %cond.true.2123
  %cond2162 = phi i32 [ %add2137, %cond.true.2123 ], [ %cond2160, %cond.end.2159 ]
  br label %cond.end.2163

cond.end.2163:                                    ; preds = %cond.end.2161, %cond.true.2115
  %cond2164 = phi i32 [ %conv2117, %cond.true.2115 ], [ %cond2162, %cond.end.2161 ]
  br label %cond.end.2167

cond.false.2165:                                  ; preds = %if.end.2107
  store i32 1, i32* %len2103, align 4
  %1088 = load i8*, i8** %p, align 8
  %1089 = load i8, i8* %1088, align 1
  %conv2166 = zext i8 %1089 to i32
  br label %cond.end.2167

cond.end.2167:                                    ; preds = %cond.false.2165, %cond.end.2163
  %cond2168 = phi i32 [ %cond2164, %cond.end.2163 ], [ %conv2166, %cond.false.2165 ]
  store i32 %cond2168, i32* %c1, align 4
  %1090 = load i32, i32* %len2103, align 4
  %1091 = load i8*, i8** %p, align 8
  %idx.ext2169 = sext i32 %1090 to i64
  %add.ptr2170 = getelementptr inbounds i8, i8* %1091, i64 %idx.ext2169
  store i8* %add.ptr2170, i8** %p, align 8
  br label %do.end.2171

do.end.2171:                                      ; preds = %cond.end.2167
  %1092 = load i32, i32* %c1, align 4
  %cmp2172 = icmp sgt i32 %1092, 4194175
  br i1 %cmp2172, label %land.lhs.true.2174, label %if.end.2189

land.lhs.true.2174:                               ; preds = %do.end.2171
  br i1 true, label %cond.true.2175, label %cond.false.2179

cond.true.2175:                                   ; preds = %land.lhs.true.2174
  %1093 = load i32, i32* %c, align 4
  %add2176 = add i32 %1093, 0
  %cmp2177 = icmp ult i32 %add2176, 128
  br i1 %cmp2177, label %if.end.2189, label %land.lhs.true.2184

cond.false.2179:                                  ; preds = %land.lhs.true.2174
  %1094 = load i32, i32* %c, align 4
  %conv2180 = sext i32 %1094 to i64
  %add2181 = add i64 %conv2180, 0
  %cmp2182 = icmp ult i64 %add2181, 128
  br i1 %cmp2182, label %if.end.2189, label %land.lhs.true.2184

land.lhs.true.2184:                               ; preds = %cond.false.2179, %cond.true.2175
  %1095 = load i32, i32* %c, align 4
  %cmp2185 = icmp sgt i32 %1095, 4194175
  br i1 %cmp2185, label %if.end.2189, label %if.then.2187

if.then.2187:                                     ; preds = %land.lhs.true.2184
  %1096 = load i32, i32* %c1, align 4
  %add2188 = add nsw i32 %1096, 1
  store i32 %add2188, i32* %c, align 4
  br label %if.end.2189

if.end.2189:                                      ; preds = %if.then.2187, %land.lhs.true.2184, %cond.false.2179, %cond.true.2175, %do.end.2171
  br label %if.end.2191

if.else.2190:                                     ; preds = %land.lhs.true.2026, %land.lhs.true.2021, %if.end.2018
  %1097 = load i32, i32* %c, align 4
  store i32 %1097, i32* %c1, align 4
  br label %if.end.2191

if.end.2191:                                      ; preds = %if.else.2190, %if.end.2189
  %1098 = load i32, i32* %c, align 4
  %1099 = load i32, i32* %c1, align 4
  %cmp2192 = icmp sgt i32 %1098, %1099
  br i1 %cmp2192, label %if.then.2194, label %if.else.2209

if.then.2194:                                     ; preds = %if.end.2191
  %1100 = load i64, i64* %syntax.addr, align 8
  %and2195 = and i64 %1100, 65536
  %tobool2196 = icmp ne i64 %and2195, 0
  br i1 %tobool2196, label %if.then.2197, label %if.end.2208

if.then.2197:                                     ; preds = %if.then.2194
  br label %do.body.2198

do.body.2198:                                     ; preds = %if.then.2197
  br label %do.body.2199

do.body.2199:                                     ; preds = %do.body.2198
  %table2200 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1101 = load i32*, i32** %table2200, align 8
  %tobool2201 = icmp ne i32* %1101, null
  br i1 %tobool2201, label %if.then.2202, label %if.end.2204

if.then.2202:                                     ; preds = %do.body.2199
  %table2203 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1102 = load i32*, i32** %table2203, align 8
  %1103 = bitcast i32* %1102 to i8*
  call void @xfree(i8* %1103)
  br label %if.end.2204

if.end.2204:                                      ; preds = %if.then.2202, %do.body.2199
  br label %do.end.2205

do.end.2205:                                      ; preds = %if.end.2204
  %stack2206 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1104 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2206, align 8
  %1105 = bitcast %struct.compile_stack_elt_t* %1104 to i8*
  call void @xfree(i8* %1105)
  store i32 17, i32* %retval
  br label %do.end.6650

do.end.2207:                                      ; No predecessors!
  br label %if.end.2208

if.end.2208:                                      ; preds = %do.end.2207, %if.then.2194
  br label %if.end.2711

if.else.2209:                                     ; preds = %if.end.2191
  %1106 = load i32, i32* %c, align 4
  %cmp2210 = icmp slt i32 %1106, 128
  br i1 %cmp2210, label %if.then.2212, label %if.end.2312

if.then.2212:                                     ; preds = %if.else.2209
  %1107 = load i32, i32* %c1, align 4
  %cmp2213 = icmp slt i32 127, %1107
  br i1 %cmp2213, label %cond.true.2215, label %cond.false.2216

cond.true.2215:                                   ; preds = %if.then.2212
  br label %cond.end.2217

cond.false.2216:                                  ; preds = %if.then.2212
  %1108 = load i32, i32* %c1, align 4
  br label %cond.end.2217

cond.end.2217:                                    ; preds = %cond.false.2216, %cond.true.2215
  %cond2218 = phi i32 [ 127, %cond.true.2215 ], [ %1108, %cond.false.2216 ]
  store i32 %cond2218, i32* %ch, align 4
  br label %do.body.2219

do.body.2219:                                     ; preds = %cond.end.2217
  %1109 = load i32, i32* %c, align 4
  store i32 %1109, i32* %C0, align 4
  br label %for.cond.2220

for.cond.2220:                                    ; preds = %for.inc.2303, %do.body.2219
  %1110 = load i32, i32* %C0, align 4
  %1111 = load i32, i32* %ch, align 4
  %cmp2221 = icmp sle i32 %1110, %1111
  br i1 %cmp2221, label %for.body.2223, label %for.end.2305

for.body.2223:                                    ; preds = %for.cond.2220
  %1112 = load i64, i64* %translate, align 8
  %cmp2224 = icmp eq i64 %1112, 2
  br i1 %cmp2224, label %cond.false.2228, label %cond.true.2226

cond.true.2226:                                   ; preds = %for.body.2223
  %1113 = load i64, i64* %translate, align 8
  %1114 = load i32, i32* %C0, align 4
  %call2227 = call i32 @char_table_translate(i64 %1113, i32 %1114)
  br label %cond.end.2229

cond.false.2228:                                  ; preds = %for.body.2223
  %1115 = load i32, i32* %C0, align 4
  br label %cond.end.2229

cond.end.2229:                                    ; preds = %cond.false.2228, %cond.true.2226
  %cond2230 = phi i32 [ %call2227, %cond.true.2226 ], [ %1115, %cond.false.2228 ]
  store i32 %cond2230, i32* %C1, align 4
  br i1 true, label %cond.true.2231, label %cond.false.2235

cond.true.2231:                                   ; preds = %cond.end.2229
  %1116 = load i32, i32* %C1, align 4
  %add2232 = add i32 %1116, 0
  %cmp2233 = icmp ult i32 %add2232, 128
  br i1 %cmp2233, label %if.end.2294, label %if.then.2240

cond.false.2235:                                  ; preds = %cond.end.2229
  %1117 = load i32, i32* %C1, align 4
  %conv2236 = sext i32 %1117 to i64
  %add2237 = add i64 %conv2236, 0
  %cmp2238 = icmp ult i64 %add2237, 128
  br i1 %cmp2238, label %if.end.2294, label %if.then.2240

if.then.2240:                                     ; preds = %cond.false.2235, %cond.true.2231
  br label %do.body.2241

do.body.2241:                                     ; preds = %if.then.2240
  br label %do.body.2242

do.body.2242:                                     ; preds = %do.body.2241
  %used2243 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1118 = load i32, i32* %used2243, align 4
  %add2244 = add nsw i32 %1118, 2
  %conv2245 = sext i32 %add2244 to i64
  %mul2246 = mul i64 %conv2245, 4
  %allocated2247 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 1
  %1119 = load i32, i32* %allocated2247, align 4
  %conv2248 = sext i32 %1119 to i64
  %cmp2249 = icmp ugt i64 %mul2246, %conv2248
  br i1 %cmp2249, label %if.then.2251, label %if.end.2257

if.then.2251:                                     ; preds = %do.body.2242
  call void @extend_range_table_work_area(%struct.range_table_work_area* %range_table_work)
  %table2252 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1120 = load i32*, i32** %table2252, align 8
  %cmp2253 = icmp eq i32* %1120, null
  br i1 %cmp2253, label %if.then.2255, label %if.end.2256

if.then.2255:                                     ; preds = %if.then.2251
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.2256:                                      ; preds = %if.then.2251
  br label %if.end.2257

if.end.2257:                                      ; preds = %if.end.2256, %do.body.2242
  br label %do.end.2258

do.end.2258:                                      ; preds = %if.end.2257
  %1121 = load i32, i32* %C1, align 4
  %used2259 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1122 = load i32, i32* %used2259, align 4
  %inc2260 = add nsw i32 %1122, 1
  store i32 %inc2260, i32* %used2259, align 4
  %idxprom2261 = sext i32 %1122 to i64
  %table2262 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1123 = load i32*, i32** %table2262, align 8
  %arrayidx2263 = getelementptr inbounds i32, i32* %1123, i64 %idxprom2261
  store i32 %1121, i32* %arrayidx2263, align 4
  %1124 = load i32, i32* %C1, align 4
  %used2264 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1125 = load i32, i32* %used2264, align 4
  %inc2265 = add nsw i32 %1125, 1
  store i32 %inc2265, i32* %used2264, align 4
  %idxprom2266 = sext i32 %1125 to i64
  %table2267 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1126 = load i32*, i32** %table2267, align 8
  %arrayidx2268 = getelementptr inbounds i32, i32* %1126, i64 %idxprom2266
  store i32 %1124, i32* %arrayidx2268, align 4
  br label %do.end.2269

do.end.2269:                                      ; preds = %do.end.2258
  br i1 true, label %cond.true.2270, label %cond.false.2274

cond.true.2270:                                   ; preds = %do.end.2269
  %1127 = load i32, i32* %C1, align 4
  %add2271 = add i32 %1127, 0
  %cmp2272 = icmp ult i32 %add2271, 128
  br i1 %cmp2272, label %cond.true.2279, label %cond.false.2280

cond.false.2274:                                  ; preds = %do.end.2269
  %1128 = load i32, i32* %C1, align 4
  %conv2275 = sext i32 %1128 to i64
  %add2276 = add i64 %conv2275, 0
  %cmp2277 = icmp ult i64 %add2276, 128
  br i1 %cmp2277, label %cond.true.2279, label %cond.false.2280

cond.true.2279:                                   ; preds = %cond.false.2274, %cond.true.2270
  %1129 = load i32, i32* %C1, align 4
  br label %cond.end.2288

cond.false.2280:                                  ; preds = %cond.false.2274, %cond.true.2270
  %1130 = load i32, i32* %C1, align 4
  %cmp2281 = icmp sgt i32 %1130, 4194175
  br i1 %cmp2281, label %cond.true.2283, label %cond.false.2285

cond.true.2283:                                   ; preds = %cond.false.2280
  %1131 = load i32, i32* %C1, align 4
  %sub2284 = sub nsw i32 %1131, 4194048
  br label %cond.end.2286

cond.false.2285:                                  ; preds = %cond.false.2280
  br label %cond.end.2286

cond.end.2286:                                    ; preds = %cond.false.2285, %cond.true.2283
  %cond2287 = phi i32 [ %sub2284, %cond.true.2283 ], [ -1, %cond.false.2285 ]
  br label %cond.end.2288

cond.end.2288:                                    ; preds = %cond.end.2286, %cond.true.2279
  %cond2289 = phi i32 [ %1129, %cond.true.2279 ], [ %cond2287, %cond.end.2286 ]
  store i32 %cond2289, i32* %C1, align 4
  %cmp2290 = icmp slt i32 %cond2289, 0
  br i1 %cmp2290, label %if.then.2292, label %if.end.2293

if.then.2292:                                     ; preds = %cond.end.2288
  %1132 = load i32, i32* %C0, align 4
  store i32 %1132, i32* %C1, align 4
  br label %if.end.2293

if.end.2293:                                      ; preds = %if.then.2292, %cond.end.2288
  br label %if.end.2294

if.end.2294:                                      ; preds = %if.end.2293, %cond.false.2235, %cond.true.2231
  %1133 = load i32, i32* %C1, align 4
  %rem2295 = srem i32 %1133, 8
  %shl2296 = shl i32 1, %rem2295
  %1134 = load i32, i32* %C1, align 4
  %div2297 = sdiv i32 %1134, 8
  %idxprom2298 = sext i32 %div2297 to i64
  %1135 = load i8*, i8** %b, align 8
  %arrayidx2299 = getelementptr inbounds i8, i8* %1135, i64 %idxprom2298
  %1136 = load i8, i8* %arrayidx2299, align 1
  %conv2300 = zext i8 %1136 to i32
  %or2301 = or i32 %conv2300, %shl2296
  %conv2302 = trunc i32 %or2301 to i8
  store i8 %conv2302, i8* %arrayidx2299, align 1
  br label %for.inc.2303

for.inc.2303:                                     ; preds = %if.end.2294
  %1137 = load i32, i32* %C0, align 4
  %inc2304 = add nsw i32 %1137, 1
  store i32 %inc2304, i32* %C0, align 4
  br label %for.cond.2220

for.end.2305:                                     ; preds = %for.cond.2220
  br label %do.end.2306

do.end.2306:                                      ; preds = %for.end.2305
  %1138 = load i32, i32* %ch, align 4
  %add2307 = add nsw i32 %1138, 1
  store i32 %add2307, i32* %c, align 4
  %1139 = load i32, i32* %c1, align 4
  %cmp2308 = icmp sgt i32 %1139, 4194175
  br i1 %cmp2308, label %if.then.2310, label %if.end.2311

if.then.2310:                                     ; preds = %do.end.2306
  store i32 4194176, i32* %c, align 4
  br label %if.end.2311

if.end.2311:                                      ; preds = %if.then.2310, %do.end.2306
  br label %if.end.2312

if.end.2312:                                      ; preds = %if.end.2311, %if.else.2209
  %1140 = load i32, i32* %c, align 4
  %1141 = load i32, i32* %c1, align 4
  %cmp2313 = icmp sle i32 %1140, %1141
  br i1 %cmp2313, label %if.then.2315, label %if.end.2710

if.then.2315:                                     ; preds = %if.end.2312
  %1142 = load i32, i32* %c, align 4
  %cmp2316 = icmp sgt i32 %1142, 4194175
  br i1 %cmp2316, label %if.then.2318, label %if.else.2350

if.then.2318:                                     ; preds = %if.then.2315
  %1143 = load i32, i32* %c, align 4
  %cmp2319 = icmp sgt i32 %1143, 4194175
  br i1 %cmp2319, label %cond.true.2321, label %cond.false.2323

cond.true.2321:                                   ; preds = %if.then.2318
  %1144 = load i32, i32* %c, align 4
  %sub2322 = sub nsw i32 %1144, 4194048
  br label %cond.end.2325

cond.false.2323:                                  ; preds = %if.then.2318
  %1145 = load i32, i32* %c, align 4
  %and2324 = and i32 %1145, 255
  br label %cond.end.2325

cond.end.2325:                                    ; preds = %cond.false.2323, %cond.true.2321
  %cond2326 = phi i32 [ %sub2322, %cond.true.2321 ], [ %and2324, %cond.false.2323 ]
  store i32 %cond2326, i32* %c, align 4
  %1146 = load i32, i32* %c1, align 4
  %cmp2327 = icmp sgt i32 %1146, 4194175
  br i1 %cmp2327, label %cond.true.2329, label %cond.false.2331

cond.true.2329:                                   ; preds = %cond.end.2325
  %1147 = load i32, i32* %c1, align 4
  %sub2330 = sub nsw i32 %1147, 4194048
  br label %cond.end.2333

cond.false.2331:                                  ; preds = %cond.end.2325
  %1148 = load i32, i32* %c1, align 4
  %and2332 = and i32 %1148, 255
  br label %cond.end.2333

cond.end.2333:                                    ; preds = %cond.false.2331, %cond.true.2329
  %cond2334 = phi i32 [ %sub2330, %cond.true.2329 ], [ %and2332, %cond.false.2331 ]
  store i32 %cond2334, i32* %c1, align 4
  br label %for.cond.2335

for.cond.2335:                                    ; preds = %for.inc.2347, %cond.end.2333
  %1149 = load i32, i32* %c, align 4
  %1150 = load i32, i32* %c1, align 4
  %cmp2336 = icmp sle i32 %1149, %1150
  br i1 %cmp2336, label %for.body.2338, label %for.end.2349

for.body.2338:                                    ; preds = %for.cond.2335
  %1151 = load i32, i32* %c, align 4
  %rem2339 = srem i32 %1151, 8
  %shl2340 = shl i32 1, %rem2339
  %1152 = load i32, i32* %c, align 4
  %div2341 = sdiv i32 %1152, 8
  %idxprom2342 = sext i32 %div2341 to i64
  %1153 = load i8*, i8** %b, align 8
  %arrayidx2343 = getelementptr inbounds i8, i8* %1153, i64 %idxprom2342
  %1154 = load i8, i8* %arrayidx2343, align 1
  %conv2344 = zext i8 %1154 to i32
  %or2345 = or i32 %conv2344, %shl2340
  %conv2346 = trunc i32 %or2345 to i8
  store i8 %conv2346, i8* %arrayidx2343, align 1
  br label %for.inc.2347

for.inc.2347:                                     ; preds = %for.body.2338
  %1155 = load i32, i32* %c, align 4
  %inc2348 = add nsw i32 %1155, 1
  store i32 %inc2348, i32* %c, align 4
  br label %for.cond.2335

for.end.2349:                                     ; preds = %for.cond.2335
  br label %if.end.2709

if.else.2350:                                     ; preds = %if.then.2315
  %1156 = load i8, i8* %multibyte, align 1
  %tobool2351 = icmp ne i8 %1156, 0
  br i1 %tobool2351, label %if.then.2352, label %if.else.2543

if.then.2352:                                     ; preds = %if.else.2350
  br label %do.body.2353

do.body.2353:                                     ; preds = %if.then.2352
  %used2356 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1157 = load i32, i32* %used2356, align 4
  store i32 %1157, i32* %USED, align 4
  br label %do.body.2357

do.body.2357:                                     ; preds = %do.body.2353
  br label %do.body.2358

do.body.2358:                                     ; preds = %do.body.2357
  %used2359 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1158 = load i32, i32* %used2359, align 4
  %add2360 = add nsw i32 %1158, 2
  %conv2361 = sext i32 %add2360 to i64
  %mul2362 = mul i64 %conv2361, 4
  %allocated2363 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 1
  %1159 = load i32, i32* %allocated2363, align 4
  %conv2364 = sext i32 %1159 to i64
  %cmp2365 = icmp ugt i64 %mul2362, %conv2364
  br i1 %cmp2365, label %if.then.2367, label %if.end.2373

if.then.2367:                                     ; preds = %do.body.2358
  call void @extend_range_table_work_area(%struct.range_table_work_area* %range_table_work)
  %table2368 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1160 = load i32*, i32** %table2368, align 8
  %cmp2369 = icmp eq i32* %1160, null
  br i1 %cmp2369, label %if.then.2371, label %if.end.2372

if.then.2371:                                     ; preds = %if.then.2367
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.2372:                                      ; preds = %if.then.2367
  br label %if.end.2373

if.end.2373:                                      ; preds = %if.end.2372, %do.body.2358
  br label %do.end.2374

do.end.2374:                                      ; preds = %if.end.2373
  %1161 = load i32, i32* %c, align 4
  %used2375 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1162 = load i32, i32* %used2375, align 4
  %inc2376 = add nsw i32 %1162, 1
  store i32 %inc2376, i32* %used2375, align 4
  %idxprom2377 = sext i32 %1162 to i64
  %table2378 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1163 = load i32*, i32** %table2378, align 8
  %arrayidx2379 = getelementptr inbounds i32, i32* %1163, i64 %idxprom2377
  store i32 %1161, i32* %arrayidx2379, align 4
  %1164 = load i32, i32* %c1, align 4
  %used2380 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1165 = load i32, i32* %used2380, align 4
  %inc2381 = add nsw i32 %1165, 1
  store i32 %inc2381, i32* %used2380, align 4
  %idxprom2382 = sext i32 %1165 to i64
  %table2383 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1166 = load i32*, i32** %table2383, align 8
  %arrayidx2384 = getelementptr inbounds i32, i32* %1166, i64 %idxprom2382
  store i32 %1164, i32* %arrayidx2384, align 4
  br label %do.end.2385

do.end.2385:                                      ; preds = %do.end.2374
  %1167 = load i32, i32* %c, align 4
  store i32 %1167, i32* %C02354, align 4
  br label %for.cond.2386

for.cond.2386:                                    ; preds = %for.inc.2539, %do.end.2385
  %1168 = load i32, i32* %C02354, align 4
  %1169 = load i32, i32* %c1, align 4
  %cmp2387 = icmp sle i32 %1168, %1169
  br i1 %cmp2387, label %for.body.2389, label %for.end.2541

for.body.2389:                                    ; preds = %for.cond.2386
  %1170 = load i64, i64* %translate, align 8
  %cmp2390 = icmp eq i64 %1170, 2
  br i1 %cmp2390, label %cond.false.2394, label %cond.true.2392

cond.true.2392:                                   ; preds = %for.body.2389
  %1171 = load i64, i64* %translate, align 8
  %1172 = load i32, i32* %C02354, align 4
  %call2393 = call i32 @char_table_translate(i64 %1171, i32 %1172)
  br label %cond.end.2395

cond.false.2394:                                  ; preds = %for.body.2389
  %1173 = load i32, i32* %C02354, align 4
  br label %cond.end.2395

cond.end.2395:                                    ; preds = %cond.false.2394, %cond.true.2392
  %cond2396 = phi i32 [ %call2393, %cond.true.2392 ], [ %1173, %cond.false.2394 ]
  store i32 %cond2396, i32* %C12355, align 4
  br i1 true, label %cond.true.2397, label %cond.false.2401

cond.true.2397:                                   ; preds = %cond.end.2395
  %1174 = load i32, i32* %C12355, align 4
  %add2398 = add i32 %1174, 0
  %cmp2399 = icmp ult i32 %add2398, 128
  br i1 %cmp2399, label %cond.true.2406, label %cond.false.2407

cond.false.2401:                                  ; preds = %cond.end.2395
  %1175 = load i32, i32* %C12355, align 4
  %conv2402 = sext i32 %1175 to i64
  %add2403 = add i64 %conv2402, 0
  %cmp2404 = icmp ult i64 %add2403, 128
  br i1 %cmp2404, label %cond.true.2406, label %cond.false.2407

cond.true.2406:                                   ; preds = %cond.false.2401, %cond.true.2397
  %1176 = load i32, i32* %C12355, align 4
  br label %cond.end.2415

cond.false.2407:                                  ; preds = %cond.false.2401, %cond.true.2397
  %1177 = load i32, i32* %C12355, align 4
  %cmp2408 = icmp sgt i32 %1177, 4194175
  br i1 %cmp2408, label %cond.true.2410, label %cond.false.2412

cond.true.2410:                                   ; preds = %cond.false.2407
  %1178 = load i32, i32* %C12355, align 4
  %sub2411 = sub nsw i32 %1178, 4194048
  br label %cond.end.2413

cond.false.2412:                                  ; preds = %cond.false.2407
  br label %cond.end.2413

cond.end.2413:                                    ; preds = %cond.false.2412, %cond.true.2410
  %cond2414 = phi i32 [ %sub2411, %cond.true.2410 ], [ -1, %cond.false.2412 ]
  br label %cond.end.2415

cond.end.2415:                                    ; preds = %cond.end.2413, %cond.true.2406
  %cond2416 = phi i32 [ %1176, %cond.true.2406 ], [ %cond2414, %cond.end.2413 ]
  store i32 %cond2416, i32* %C2, align 4
  %cmp2417 = icmp sge i32 %cond2416, 0
  br i1 %cmp2417, label %if.then.2445, label %lor.lhs.false.2419

lor.lhs.false.2419:                               ; preds = %cond.end.2415
  %1179 = load i32, i32* %C12355, align 4
  %1180 = load i32, i32* %C02354, align 4
  %cmp2420 = icmp ne i32 %1179, %1180
  br i1 %cmp2420, label %land.lhs.true.2422, label %if.end.2454

land.lhs.true.2422:                               ; preds = %lor.lhs.false.2419
  br i1 true, label %cond.true.2423, label %cond.false.2427

cond.true.2423:                                   ; preds = %land.lhs.true.2422
  %1181 = load i32, i32* %C02354, align 4
  %add2424 = add i32 %1181, 0
  %cmp2425 = icmp ult i32 %add2424, 128
  br i1 %cmp2425, label %cond.true.2432, label %cond.false.2433

cond.false.2427:                                  ; preds = %land.lhs.true.2422
  %1182 = load i32, i32* %C02354, align 4
  %conv2428 = sext i32 %1182 to i64
  %add2429 = add i64 %conv2428, 0
  %cmp2430 = icmp ult i64 %add2429, 128
  br i1 %cmp2430, label %cond.true.2432, label %cond.false.2433

cond.true.2432:                                   ; preds = %cond.false.2427, %cond.true.2423
  %1183 = load i32, i32* %C02354, align 4
  br label %cond.end.2441

cond.false.2433:                                  ; preds = %cond.false.2427, %cond.true.2423
  %1184 = load i32, i32* %C02354, align 4
  %cmp2434 = icmp sgt i32 %1184, 4194175
  br i1 %cmp2434, label %cond.true.2436, label %cond.false.2438

cond.true.2436:                                   ; preds = %cond.false.2433
  %1185 = load i32, i32* %C02354, align 4
  %sub2437 = sub nsw i32 %1185, 4194048
  br label %cond.end.2439

cond.false.2438:                                  ; preds = %cond.false.2433
  br label %cond.end.2439

cond.end.2439:                                    ; preds = %cond.false.2438, %cond.true.2436
  %cond2440 = phi i32 [ %sub2437, %cond.true.2436 ], [ -1, %cond.false.2438 ]
  br label %cond.end.2441

cond.end.2441:                                    ; preds = %cond.end.2439, %cond.true.2432
  %cond2442 = phi i32 [ %1183, %cond.true.2432 ], [ %cond2440, %cond.end.2439 ]
  store i32 %cond2442, i32* %C2, align 4
  %cmp2443 = icmp sge i32 %cond2442, 0
  br i1 %cmp2443, label %if.then.2445, label %if.end.2454

if.then.2445:                                     ; preds = %cond.end.2441, %cond.end.2415
  %1186 = load i32, i32* %C2, align 4
  %rem2446 = srem i32 %1186, 8
  %shl2447 = shl i32 1, %rem2446
  %1187 = load i32, i32* %C2, align 4
  %div2448 = sdiv i32 %1187, 8
  %idxprom2449 = sext i32 %div2448 to i64
  %1188 = load i8*, i8** %b, align 8
  %arrayidx2450 = getelementptr inbounds i8, i8* %1188, i64 %idxprom2449
  %1189 = load i8, i8* %arrayidx2450, align 1
  %conv2451 = zext i8 %1189 to i32
  %or2452 = or i32 %conv2451, %shl2447
  %conv2453 = trunc i32 %or2452 to i8
  store i8 %conv2453, i8* %arrayidx2450, align 1
  br label %if.end.2454

if.end.2454:                                      ; preds = %if.then.2445, %cond.end.2441, %lor.lhs.false.2419
  %1190 = load i32, i32* %C12355, align 4
  %1191 = load i32, i32* %c, align 4
  %cmp2455 = icmp sge i32 %1190, %1191
  br i1 %cmp2455, label %land.lhs.true.2457, label %if.end.2461

land.lhs.true.2457:                               ; preds = %if.end.2454
  %1192 = load i32, i32* %C12355, align 4
  %1193 = load i32, i32* %c1, align 4
  %cmp2458 = icmp sle i32 %1192, %1193
  br i1 %cmp2458, label %if.then.2460, label %if.end.2461

if.then.2460:                                     ; preds = %land.lhs.true.2457
  br label %for.inc.2539

if.end.2461:                                      ; preds = %land.lhs.true.2457, %if.end.2454
  %used2462 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1194 = load i32, i32* %used2462, align 4
  %sub2463 = sub nsw i32 %1194, 2
  store i32 %sub2463, i32* %I, align 4
  br label %for.cond.2464

for.cond.2464:                                    ; preds = %for.inc.2503, %if.end.2461
  %1195 = load i32, i32* %I, align 4
  %1196 = load i32, i32* %USED, align 4
  %cmp2465 = icmp sge i32 %1195, %1196
  br i1 %cmp2465, label %for.body.2467, label %for.end.2505

for.body.2467:                                    ; preds = %for.cond.2464
  %1197 = load i32, i32* %I, align 4
  %idxprom2468 = sext i32 %1197 to i64
  %table2469 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1198 = load i32*, i32** %table2469, align 8
  %arrayidx2470 = getelementptr inbounds i32, i32* %1198, i64 %idxprom2468
  %1199 = load i32, i32* %arrayidx2470, align 4
  store i32 %1199, i32* %from, align 4
  %1200 = load i32, i32* %I, align 4
  %add2471 = add nsw i32 %1200, 1
  %idxprom2472 = sext i32 %add2471 to i64
  %table2473 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1201 = load i32*, i32** %table2473, align 8
  %arrayidx2474 = getelementptr inbounds i32, i32* %1201, i64 %idxprom2472
  %1202 = load i32, i32* %arrayidx2474, align 4
  store i32 %1202, i32* %to, align 4
  %1203 = load i32, i32* %C12355, align 4
  %1204 = load i32, i32* %from, align 4
  %sub2475 = sub nsw i32 %1204, 1
  %cmp2476 = icmp sge i32 %1203, %sub2475
  br i1 %cmp2476, label %land.lhs.true.2478, label %if.end.2502

land.lhs.true.2478:                               ; preds = %for.body.2467
  %1205 = load i32, i32* %C12355, align 4
  %1206 = load i32, i32* %to, align 4
  %add2479 = add nsw i32 %1206, 1
  %cmp2480 = icmp sle i32 %1205, %add2479
  br i1 %cmp2480, label %if.then.2482, label %if.end.2502

if.then.2482:                                     ; preds = %land.lhs.true.2478
  %1207 = load i32, i32* %C12355, align 4
  %1208 = load i32, i32* %from, align 4
  %sub2483 = sub nsw i32 %1208, 1
  %cmp2484 = icmp eq i32 %1207, %sub2483
  br i1 %cmp2484, label %if.then.2486, label %if.else.2490

if.then.2486:                                     ; preds = %if.then.2482
  %1209 = load i32, i32* %I, align 4
  %idxprom2487 = sext i32 %1209 to i64
  %table2488 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1210 = load i32*, i32** %table2488, align 8
  %arrayidx2489 = getelementptr inbounds i32, i32* %1210, i64 %idxprom2487
  %1211 = load i32, i32* %arrayidx2489, align 4
  %dec = add nsw i32 %1211, -1
  store i32 %dec, i32* %arrayidx2489, align 4
  br label %if.end.2501

if.else.2490:                                     ; preds = %if.then.2482
  %1212 = load i32, i32* %C12355, align 4
  %1213 = load i32, i32* %to, align 4
  %add2491 = add nsw i32 %1213, 1
  %cmp2492 = icmp eq i32 %1212, %add2491
  br i1 %cmp2492, label %if.then.2494, label %if.end.2500

if.then.2494:                                     ; preds = %if.else.2490
  %1214 = load i32, i32* %I, align 4
  %add2495 = add nsw i32 %1214, 1
  %idxprom2496 = sext i32 %add2495 to i64
  %table2497 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1215 = load i32*, i32** %table2497, align 8
  %arrayidx2498 = getelementptr inbounds i32, i32* %1215, i64 %idxprom2496
  %1216 = load i32, i32* %arrayidx2498, align 4
  %inc2499 = add nsw i32 %1216, 1
  store i32 %inc2499, i32* %arrayidx2498, align 4
  br label %if.end.2500

if.end.2500:                                      ; preds = %if.then.2494, %if.else.2490
  br label %if.end.2501

if.end.2501:                                      ; preds = %if.end.2500, %if.then.2486
  br label %for.end.2505

if.end.2502:                                      ; preds = %land.lhs.true.2478, %for.body.2467
  br label %for.inc.2503

for.inc.2503:                                     ; preds = %if.end.2502
  %1217 = load i32, i32* %I, align 4
  %sub2504 = sub nsw i32 %1217, 2
  store i32 %sub2504, i32* %I, align 4
  br label %for.cond.2464

for.end.2505:                                     ; preds = %if.end.2501, %for.cond.2464
  %1218 = load i32, i32* %I, align 4
  %1219 = load i32, i32* %USED, align 4
  %cmp2506 = icmp slt i32 %1218, %1219
  br i1 %cmp2506, label %if.then.2508, label %if.end.2538

if.then.2508:                                     ; preds = %for.end.2505
  br label %do.body.2509

do.body.2509:                                     ; preds = %if.then.2508
  br label %do.body.2510

do.body.2510:                                     ; preds = %do.body.2509
  %used2511 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1220 = load i32, i32* %used2511, align 4
  %add2512 = add nsw i32 %1220, 2
  %conv2513 = sext i32 %add2512 to i64
  %mul2514 = mul i64 %conv2513, 4
  %allocated2515 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 1
  %1221 = load i32, i32* %allocated2515, align 4
  %conv2516 = sext i32 %1221 to i64
  %cmp2517 = icmp ugt i64 %mul2514, %conv2516
  br i1 %cmp2517, label %if.then.2519, label %if.end.2525

if.then.2519:                                     ; preds = %do.body.2510
  call void @extend_range_table_work_area(%struct.range_table_work_area* %range_table_work)
  %table2520 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1222 = load i32*, i32** %table2520, align 8
  %cmp2521 = icmp eq i32* %1222, null
  br i1 %cmp2521, label %if.then.2523, label %if.end.2524

if.then.2523:                                     ; preds = %if.then.2519
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.2524:                                      ; preds = %if.then.2519
  br label %if.end.2525

if.end.2525:                                      ; preds = %if.end.2524, %do.body.2510
  br label %do.end.2526

do.end.2526:                                      ; preds = %if.end.2525
  %1223 = load i32, i32* %C12355, align 4
  %used2527 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1224 = load i32, i32* %used2527, align 4
  %inc2528 = add nsw i32 %1224, 1
  store i32 %inc2528, i32* %used2527, align 4
  %idxprom2529 = sext i32 %1224 to i64
  %table2530 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1225 = load i32*, i32** %table2530, align 8
  %arrayidx2531 = getelementptr inbounds i32, i32* %1225, i64 %idxprom2529
  store i32 %1223, i32* %arrayidx2531, align 4
  %1226 = load i32, i32* %C12355, align 4
  %used2532 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1227 = load i32, i32* %used2532, align 4
  %inc2533 = add nsw i32 %1227, 1
  store i32 %inc2533, i32* %used2532, align 4
  %idxprom2534 = sext i32 %1227 to i64
  %table2535 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1228 = load i32*, i32** %table2535, align 8
  %arrayidx2536 = getelementptr inbounds i32, i32* %1228, i64 %idxprom2534
  store i32 %1226, i32* %arrayidx2536, align 4
  br label %do.end.2537

do.end.2537:                                      ; preds = %do.end.2526
  br label %if.end.2538

if.end.2538:                                      ; preds = %do.end.2537, %for.end.2505
  br label %for.inc.2539

for.inc.2539:                                     ; preds = %if.end.2538, %if.then.2460
  %1229 = load i32, i32* %C02354, align 4
  %inc2540 = add nsw i32 %1229, 1
  store i32 %inc2540, i32* %C02354, align 4
  br label %for.cond.2386

for.end.2541:                                     ; preds = %for.cond.2386
  br label %do.end.2542

do.end.2542:                                      ; preds = %for.end.2541
  br label %if.end.2708

if.else.2543:                                     ; preds = %if.else.2350
  br label %do.body.2544

do.body.2544:                                     ; preds = %if.else.2543
  %used2550 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1230 = load i32, i32* %used2550, align 4
  store i32 %1230, i32* %USED2549, align 4
  %1231 = load i32, i32* %c, align 4
  store i32 %1231, i32* %C02545, align 4
  br label %for.cond.2551

for.cond.2551:                                    ; preds = %for.inc.2704, %do.body.2544
  %1232 = load i32, i32* %C02545, align 4
  %1233 = load i32, i32* %c1, align 4
  %cmp2552 = icmp sle i32 %1232, %1233
  br i1 %cmp2552, label %for.body.2554, label %for.end.2706

for.body.2554:                                    ; preds = %for.cond.2551
  br i1 true, label %cond.true.2555, label %cond.false.2559

cond.true.2555:                                   ; preds = %for.body.2554
  %1234 = load i32, i32* %C02545, align 4
  %add2556 = add i32 %1234, 0
  %cmp2557 = icmp ult i32 %add2556, 128
  br i1 %cmp2557, label %cond.true.2564, label %cond.false.2565

cond.false.2559:                                  ; preds = %for.body.2554
  %1235 = load i32, i32* %C02545, align 4
  %conv2560 = sext i32 %1235 to i64
  %add2561 = add i64 %conv2560, 0
  %cmp2562 = icmp ult i64 %add2561, 128
  br i1 %cmp2562, label %cond.true.2564, label %cond.false.2565

cond.true.2564:                                   ; preds = %cond.false.2559, %cond.true.2555
  %1236 = load i32, i32* %C02545, align 4
  br label %cond.end.2567

cond.false.2565:                                  ; preds = %cond.false.2559, %cond.true.2555
  %1237 = load i32, i32* %C02545, align 4
  %add2566 = add nsw i32 %1237, 4194048
  br label %cond.end.2567

cond.end.2567:                                    ; preds = %cond.false.2565, %cond.true.2564
  %cond2568 = phi i32 [ %1236, %cond.true.2564 ], [ %add2566, %cond.false.2565 ]
  store i32 %cond2568, i32* %C12546, align 4
  %1238 = load i32, i32* %C12546, align 4
  %cmp2569 = icmp sgt i32 %1238, 4194175
  br i1 %cmp2569, label %if.then.2571, label %if.else.2580

if.then.2571:                                     ; preds = %cond.end.2567
  %1239 = load i32, i32* %C02545, align 4
  %rem2572 = srem i32 %1239, 8
  %shl2573 = shl i32 1, %rem2572
  %1240 = load i32, i32* %C02545, align 4
  %div2574 = sdiv i32 %1240, 8
  %idxprom2575 = sext i32 %div2574 to i64
  %1241 = load i8*, i8** %b, align 8
  %arrayidx2576 = getelementptr inbounds i8, i8* %1241, i64 %idxprom2575
  %1242 = load i8, i8* %arrayidx2576, align 1
  %conv2577 = zext i8 %1242 to i32
  %or2578 = or i32 %conv2577, %shl2573
  %conv2579 = trunc i32 %or2578 to i8
  store i8 %conv2579, i8* %arrayidx2576, align 1
  br label %if.end.2703

if.else.2580:                                     ; preds = %cond.end.2567
  %1243 = load i64, i64* %translate, align 8
  %cmp2581 = icmp eq i64 %1243, 2
  br i1 %cmp2581, label %cond.false.2585, label %cond.true.2583

cond.true.2583:                                   ; preds = %if.else.2580
  %1244 = load i64, i64* %translate, align 8
  %1245 = load i32, i32* %C12546, align 4
  %call2584 = call i32 @char_table_translate(i64 %1244, i32 %1245)
  br label %cond.end.2586

cond.false.2585:                                  ; preds = %if.else.2580
  %1246 = load i32, i32* %C12546, align 4
  br label %cond.end.2586

cond.end.2586:                                    ; preds = %cond.false.2585, %cond.true.2583
  %cond2587 = phi i32 [ %call2584, %cond.true.2583 ], [ %1246, %cond.false.2585 ]
  store i32 %cond2587, i32* %C22547, align 4
  %1247 = load i32, i32* %C22547, align 4
  %1248 = load i32, i32* %C12546, align 4
  %cmp2588 = icmp eq i32 %1247, %1248
  br i1 %cmp2588, label %if.then.2613, label %lor.lhs.false.2590

lor.lhs.false.2590:                               ; preds = %cond.end.2586
  br i1 true, label %cond.true.2591, label %cond.false.2595

cond.true.2591:                                   ; preds = %lor.lhs.false.2590
  %1249 = load i32, i32* %C22547, align 4
  %add2592 = add i32 %1249, 0
  %cmp2593 = icmp ult i32 %add2592, 128
  br i1 %cmp2593, label %cond.true.2600, label %cond.false.2601

cond.false.2595:                                  ; preds = %lor.lhs.false.2590
  %1250 = load i32, i32* %C22547, align 4
  %conv2596 = sext i32 %1250 to i64
  %add2597 = add i64 %conv2596, 0
  %cmp2598 = icmp ult i64 %add2597, 128
  br i1 %cmp2598, label %cond.true.2600, label %cond.false.2601

cond.true.2600:                                   ; preds = %cond.false.2595, %cond.true.2591
  %1251 = load i32, i32* %C22547, align 4
  br label %cond.end.2609

cond.false.2601:                                  ; preds = %cond.false.2595, %cond.true.2591
  %1252 = load i32, i32* %C22547, align 4
  %cmp2602 = icmp sgt i32 %1252, 4194175
  br i1 %cmp2602, label %cond.true.2604, label %cond.false.2606

cond.true.2604:                                   ; preds = %cond.false.2601
  %1253 = load i32, i32* %C22547, align 4
  %sub2605 = sub nsw i32 %1253, 4194048
  br label %cond.end.2607

cond.false.2606:                                  ; preds = %cond.false.2601
  br label %cond.end.2607

cond.end.2607:                                    ; preds = %cond.false.2606, %cond.true.2604
  %cond2608 = phi i32 [ %sub2605, %cond.true.2604 ], [ -1, %cond.false.2606 ]
  br label %cond.end.2609

cond.end.2609:                                    ; preds = %cond.end.2607, %cond.true.2600
  %cond2610 = phi i32 [ %1251, %cond.true.2600 ], [ %cond2608, %cond.end.2607 ]
  store i32 %cond2610, i32* %C12546, align 4
  %cmp2611 = icmp slt i32 %cond2610, 0
  br i1 %cmp2611, label %if.then.2613, label %if.end.2614

if.then.2613:                                     ; preds = %cond.end.2609, %cond.end.2586
  %1254 = load i32, i32* %C02545, align 4
  store i32 %1254, i32* %C12546, align 4
  br label %if.end.2614

if.end.2614:                                      ; preds = %if.then.2613, %cond.end.2609
  %1255 = load i32, i32* %C12546, align 4
  %rem2615 = srem i32 %1255, 8
  %shl2616 = shl i32 1, %rem2615
  %1256 = load i32, i32* %C12546, align 4
  %div2617 = sdiv i32 %1256, 8
  %idxprom2618 = sext i32 %div2617 to i64
  %1257 = load i8*, i8** %b, align 8
  %arrayidx2619 = getelementptr inbounds i8, i8* %1257, i64 %idxprom2618
  %1258 = load i8, i8* %arrayidx2619, align 1
  %conv2620 = zext i8 %1258 to i32
  %or2621 = or i32 %conv2620, %shl2616
  %conv2622 = trunc i32 %or2621 to i8
  store i8 %conv2622, i8* %arrayidx2619, align 1
  %used2623 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1259 = load i32, i32* %used2623, align 4
  %sub2624 = sub nsw i32 %1259, 2
  store i32 %sub2624, i32* %I2548, align 4
  br label %for.cond.2625

for.cond.2625:                                    ; preds = %for.inc.2667, %if.end.2614
  %1260 = load i32, i32* %I2548, align 4
  %1261 = load i32, i32* %USED2549, align 4
  %cmp2626 = icmp sge i32 %1260, %1261
  br i1 %cmp2626, label %for.body.2628, label %for.end.2669

for.body.2628:                                    ; preds = %for.cond.2625
  %1262 = load i32, i32* %I2548, align 4
  %idxprom2630 = sext i32 %1262 to i64
  %table2631 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1263 = load i32*, i32** %table2631, align 8
  %arrayidx2632 = getelementptr inbounds i32, i32* %1263, i64 %idxprom2630
  %1264 = load i32, i32* %arrayidx2632, align 4
  store i32 %1264, i32* %from2629, align 4
  %1265 = load i32, i32* %I2548, align 4
  %add2634 = add nsw i32 %1265, 1
  %idxprom2635 = sext i32 %add2634 to i64
  %table2636 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1266 = load i32*, i32** %table2636, align 8
  %arrayidx2637 = getelementptr inbounds i32, i32* %1266, i64 %idxprom2635
  %1267 = load i32, i32* %arrayidx2637, align 4
  store i32 %1267, i32* %to2633, align 4
  %1268 = load i32, i32* %C22547, align 4
  %1269 = load i32, i32* %from2629, align 4
  %sub2638 = sub nsw i32 %1269, 1
  %cmp2639 = icmp sge i32 %1268, %sub2638
  br i1 %cmp2639, label %land.lhs.true.2641, label %if.end.2666

land.lhs.true.2641:                               ; preds = %for.body.2628
  %1270 = load i32, i32* %C22547, align 4
  %1271 = load i32, i32* %to2633, align 4
  %add2642 = add nsw i32 %1271, 1
  %cmp2643 = icmp sle i32 %1270, %add2642
  br i1 %cmp2643, label %if.then.2645, label %if.end.2666

if.then.2645:                                     ; preds = %land.lhs.true.2641
  %1272 = load i32, i32* %C22547, align 4
  %1273 = load i32, i32* %from2629, align 4
  %sub2646 = sub nsw i32 %1273, 1
  %cmp2647 = icmp eq i32 %1272, %sub2646
  br i1 %cmp2647, label %if.then.2649, label %if.else.2654

if.then.2649:                                     ; preds = %if.then.2645
  %1274 = load i32, i32* %I2548, align 4
  %idxprom2650 = sext i32 %1274 to i64
  %table2651 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1275 = load i32*, i32** %table2651, align 8
  %arrayidx2652 = getelementptr inbounds i32, i32* %1275, i64 %idxprom2650
  %1276 = load i32, i32* %arrayidx2652, align 4
  %dec2653 = add nsw i32 %1276, -1
  store i32 %dec2653, i32* %arrayidx2652, align 4
  br label %if.end.2665

if.else.2654:                                     ; preds = %if.then.2645
  %1277 = load i32, i32* %C22547, align 4
  %1278 = load i32, i32* %to2633, align 4
  %add2655 = add nsw i32 %1278, 1
  %cmp2656 = icmp eq i32 %1277, %add2655
  br i1 %cmp2656, label %if.then.2658, label %if.end.2664

if.then.2658:                                     ; preds = %if.else.2654
  %1279 = load i32, i32* %I2548, align 4
  %add2659 = add nsw i32 %1279, 1
  %idxprom2660 = sext i32 %add2659 to i64
  %table2661 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1280 = load i32*, i32** %table2661, align 8
  %arrayidx2662 = getelementptr inbounds i32, i32* %1280, i64 %idxprom2660
  %1281 = load i32, i32* %arrayidx2662, align 4
  %inc2663 = add nsw i32 %1281, 1
  store i32 %inc2663, i32* %arrayidx2662, align 4
  br label %if.end.2664

if.end.2664:                                      ; preds = %if.then.2658, %if.else.2654
  br label %if.end.2665

if.end.2665:                                      ; preds = %if.end.2664, %if.then.2649
  br label %for.end.2669

if.end.2666:                                      ; preds = %land.lhs.true.2641, %for.body.2628
  br label %for.inc.2667

for.inc.2667:                                     ; preds = %if.end.2666
  %1282 = load i32, i32* %I2548, align 4
  %sub2668 = sub nsw i32 %1282, 2
  store i32 %sub2668, i32* %I2548, align 4
  br label %for.cond.2625

for.end.2669:                                     ; preds = %if.end.2665, %for.cond.2625
  %1283 = load i32, i32* %I2548, align 4
  %1284 = load i32, i32* %USED2549, align 4
  %cmp2670 = icmp slt i32 %1283, %1284
  br i1 %cmp2670, label %if.then.2672, label %if.end.2702

if.then.2672:                                     ; preds = %for.end.2669
  br label %do.body.2673

do.body.2673:                                     ; preds = %if.then.2672
  br label %do.body.2674

do.body.2674:                                     ; preds = %do.body.2673
  %used2675 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1285 = load i32, i32* %used2675, align 4
  %add2676 = add nsw i32 %1285, 2
  %conv2677 = sext i32 %add2676 to i64
  %mul2678 = mul i64 %conv2677, 4
  %allocated2679 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 1
  %1286 = load i32, i32* %allocated2679, align 4
  %conv2680 = sext i32 %1286 to i64
  %cmp2681 = icmp ugt i64 %mul2678, %conv2680
  br i1 %cmp2681, label %if.then.2683, label %if.end.2689

if.then.2683:                                     ; preds = %do.body.2674
  call void @extend_range_table_work_area(%struct.range_table_work_area* %range_table_work)
  %table2684 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1287 = load i32*, i32** %table2684, align 8
  %cmp2685 = icmp eq i32* %1287, null
  br i1 %cmp2685, label %if.then.2687, label %if.end.2688

if.then.2687:                                     ; preds = %if.then.2683
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.2688:                                      ; preds = %if.then.2683
  br label %if.end.2689

if.end.2689:                                      ; preds = %if.end.2688, %do.body.2674
  br label %do.end.2690

do.end.2690:                                      ; preds = %if.end.2689
  %1288 = load i32, i32* %C22547, align 4
  %used2691 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1289 = load i32, i32* %used2691, align 4
  %inc2692 = add nsw i32 %1289, 1
  store i32 %inc2692, i32* %used2691, align 4
  %idxprom2693 = sext i32 %1289 to i64
  %table2694 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1290 = load i32*, i32** %table2694, align 8
  %arrayidx2695 = getelementptr inbounds i32, i32* %1290, i64 %idxprom2693
  store i32 %1288, i32* %arrayidx2695, align 4
  %1291 = load i32, i32* %C22547, align 4
  %used2696 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1292 = load i32, i32* %used2696, align 4
  %inc2697 = add nsw i32 %1292, 1
  store i32 %inc2697, i32* %used2696, align 4
  %idxprom2698 = sext i32 %1292 to i64
  %table2699 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1293 = load i32*, i32** %table2699, align 8
  %arrayidx2700 = getelementptr inbounds i32, i32* %1293, i64 %idxprom2698
  store i32 %1291, i32* %arrayidx2700, align 4
  br label %do.end.2701

do.end.2701:                                      ; preds = %do.end.2690
  br label %if.end.2702

if.end.2702:                                      ; preds = %do.end.2701, %for.end.2669
  br label %if.end.2703

if.end.2703:                                      ; preds = %if.end.2702, %if.then.2571
  br label %for.inc.2704

for.inc.2704:                                     ; preds = %if.end.2703
  %1294 = load i32, i32* %C02545, align 4
  %inc2705 = add nsw i32 %1294, 1
  store i32 %inc2705, i32* %C02545, align 4
  br label %for.cond.2551

for.end.2706:                                     ; preds = %for.cond.2551
  br label %do.end.2707

do.end.2707:                                      ; preds = %for.end.2706
  br label %if.end.2708

if.end.2708:                                      ; preds = %do.end.2707, %do.end.2542
  br label %if.end.2709

if.end.2709:                                      ; preds = %if.end.2708, %for.end.2349
  br label %if.end.2710

if.end.2710:                                      ; preds = %if.end.2709, %if.end.2312
  br label %if.end.2711

if.end.2711:                                      ; preds = %if.end.2710, %if.end.2208
  br label %for.cond.1425

for.end.2712:                                     ; preds = %if.then.1607
  br label %while.cond.2713

while.cond.2713:                                  ; preds = %while.body.2726, %for.end.2712
  %1295 = load i8*, i8** %b, align 8
  %arrayidx2714 = getelementptr inbounds i8, i8* %1295, i64 -1
  %1296 = load i8, i8* %arrayidx2714, align 1
  %conv2715 = zext i8 %1296 to i32
  %cmp2716 = icmp sgt i32 %conv2715, 0
  br i1 %cmp2716, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.2713
  %1297 = load i8*, i8** %b, align 8
  %arrayidx2718 = getelementptr inbounds i8, i8* %1297, i64 -1
  %1298 = load i8, i8* %arrayidx2718, align 1
  %conv2719 = zext i8 %1298 to i32
  %sub2720 = sub nsw i32 %conv2719, 1
  %idxprom2721 = sext i32 %sub2720 to i64
  %1299 = load i8*, i8** %b, align 8
  %arrayidx2722 = getelementptr inbounds i8, i8* %1299, i64 %idxprom2721
  %1300 = load i8, i8* %arrayidx2722, align 1
  %conv2723 = zext i8 %1300 to i32
  %cmp2724 = icmp eq i32 %conv2723, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.2713
  %1301 = phi i1 [ false, %while.cond.2713 ], [ %cmp2724, %land.rhs ]
  br i1 %1301, label %while.body.2726, label %while.end.2729

while.body.2726:                                  ; preds = %land.end
  %1302 = load i8*, i8** %b, align 8
  %arrayidx2727 = getelementptr inbounds i8, i8* %1302, i64 -1
  %1303 = load i8, i8* %arrayidx2727, align 1
  %dec2728 = add i8 %1303, -1
  store i8 %dec2728, i8* %arrayidx2727, align 1
  br label %while.cond.2713

while.end.2729:                                   ; preds = %land.end
  %1304 = load i8*, i8** %b, align 8
  %arrayidx2730 = getelementptr inbounds i8, i8* %1304, i64 -1
  %1305 = load i8, i8* %arrayidx2730, align 1
  %conv2731 = zext i8 %1305 to i32
  %1306 = load i8*, i8** %b, align 8
  %idx.ext2732 = sext i32 %conv2731 to i64
  %add.ptr2733 = getelementptr inbounds i8, i8* %1306, i64 %idx.ext2732
  store i8* %add.ptr2733, i8** %b, align 8
  %used2734 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1307 = load i32, i32* %used2734, align 4
  %tobool2735 = icmp ne i32 %1307, 0
  br i1 %tobool2735, label %if.then.2739, label %lor.lhs.false.2736

lor.lhs.false.2736:                               ; preds = %while.end.2729
  %bits2737 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 3
  %1308 = load i32, i32* %bits2737, align 4
  %tobool2738 = icmp ne i32 %1308, 0
  br i1 %tobool2738, label %if.then.2739, label %if.end.2872

if.then.2739:                                     ; preds = %lor.lhs.false.2736, %while.end.2729
  %used2741 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 2
  %1309 = load i32, i32* %used2741, align 4
  store i32 %1309, i32* %used2740, align 4
  br label %while.cond.2742

while.cond.2742:                                  ; preds = %do.end.2817, %if.then.2739
  %1310 = load i8*, i8** %b, align 8
  %1311 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2743 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1311, i32 0, i32 0
  %1312 = load i8*, i8** %buffer2743, align 8
  %sub.ptr.lhs.cast2744 = ptrtoint i8* %1310 to i64
  %sub.ptr.rhs.cast2745 = ptrtoint i8* %1312 to i64
  %sub.ptr.sub2746 = sub i64 %sub.ptr.lhs.cast2744, %sub.ptr.rhs.cast2745
  %1313 = load i32, i32* %used2740, align 4
  %mul2747 = mul nsw i32 %1313, 3
  %add2748 = add nsw i32 4, %mul2747
  %conv2749 = sext i32 %add2748 to i64
  %add2750 = add nsw i64 %sub.ptr.sub2746, %conv2749
  %1314 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2751 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1314, i32 0, i32 1
  %1315 = load i64, i64* %allocated2751, align 8
  %cmp2752 = icmp ugt i64 %add2750, %1315
  br i1 %cmp2752, label %while.body.2754, label %while.end.2818

while.body.2754:                                  ; preds = %while.cond.2742
  br label %do.body.2755

do.body.2755:                                     ; preds = %while.body.2754
  %1316 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2757 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1316, i32 0, i32 0
  %1317 = load i8*, i8** %buffer2757, align 8
  store i8* %1317, i8** %old_buffer2756, align 8
  %1318 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2758 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1318, i32 0, i32 1
  %1319 = load i64, i64* %allocated2758, align 8
  %cmp2759 = icmp eq i64 %1319, 32768
  br i1 %cmp2759, label %if.then.2761, label %if.end.2762

if.then.2761:                                     ; preds = %do.body.2755
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.2762:                                      ; preds = %do.body.2755
  %1320 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2763 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1320, i32 0, i32 1
  %1321 = load i64, i64* %allocated2763, align 8
  %shl2764 = shl i64 %1321, 1
  store i64 %shl2764, i64* %allocated2763, align 8
  %1322 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2765 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1322, i32 0, i32 1
  %1323 = load i64, i64* %allocated2765, align 8
  %cmp2766 = icmp ugt i64 %1323, 32768
  br i1 %cmp2766, label %if.then.2768, label %if.end.2770

if.then.2768:                                     ; preds = %if.end.2762
  %1324 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2769 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1324, i32 0, i32 1
  store i64 32768, i64* %allocated2769, align 8
  br label %if.end.2770

if.end.2770:                                      ; preds = %if.then.2768, %if.end.2762
  %1325 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2771 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1325, i32 0, i32 0
  %1326 = load i8*, i8** %buffer2771, align 8
  %1327 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated2772 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1327, i32 0, i32 1
  %1328 = load i64, i64* %allocated2772, align 8
  %mul2773 = mul i64 %1328, 1
  %call2774 = call i8* @xrealloc(i8* %1326, i64 %mul2773)
  %1329 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2775 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1329, i32 0, i32 0
  store i8* %call2774, i8** %buffer2775, align 8
  %1330 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2776 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1330, i32 0, i32 0
  %1331 = load i8*, i8** %buffer2776, align 8
  %cmp2777 = icmp eq i8* %1331, null
  br i1 %cmp2777, label %if.then.2779, label %if.end.2780

if.then.2779:                                     ; preds = %if.end.2770
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.2780:                                      ; preds = %if.end.2770
  %1332 = load i8*, i8** %old_buffer2756, align 8
  %1333 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2781 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1333, i32 0, i32 0
  %1334 = load i8*, i8** %buffer2781, align 8
  %cmp2782 = icmp ne i8* %1332, %1334
  br i1 %cmp2782, label %if.then.2784, label %if.end.2816

if.then.2784:                                     ; preds = %if.end.2780
  %1335 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer2786 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1335, i32 0, i32 0
  %1336 = load i8*, i8** %buffer2786, align 8
  store i8* %1336, i8** %new_buffer2785, align 8
  %1337 = load i8*, i8** %new_buffer2785, align 8
  %1338 = load i8*, i8** %b, align 8
  %1339 = load i8*, i8** %old_buffer2756, align 8
  %sub.ptr.lhs.cast2787 = ptrtoint i8* %1338 to i64
  %sub.ptr.rhs.cast2788 = ptrtoint i8* %1339 to i64
  %sub.ptr.sub2789 = sub i64 %sub.ptr.lhs.cast2787, %sub.ptr.rhs.cast2788
  %add.ptr2790 = getelementptr inbounds i8, i8* %1337, i64 %sub.ptr.sub2789
  store i8* %add.ptr2790, i8** %b, align 8
  %1340 = load i8*, i8** %new_buffer2785, align 8
  %1341 = load i8*, i8** %begalt, align 8
  %1342 = load i8*, i8** %old_buffer2756, align 8
  %sub.ptr.lhs.cast2791 = ptrtoint i8* %1341 to i64
  %sub.ptr.rhs.cast2792 = ptrtoint i8* %1342 to i64
  %sub.ptr.sub2793 = sub i64 %sub.ptr.lhs.cast2791, %sub.ptr.rhs.cast2792
  %add.ptr2794 = getelementptr inbounds i8, i8* %1340, i64 %sub.ptr.sub2793
  store i8* %add.ptr2794, i8** %begalt, align 8
  %1343 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool2795 = icmp ne i8* %1343, null
  br i1 %tobool2795, label %if.then.2796, label %if.end.2801

if.then.2796:                                     ; preds = %if.then.2784
  %1344 = load i8*, i8** %new_buffer2785, align 8
  %1345 = load i8*, i8** %fixup_alt_jump, align 8
  %1346 = load i8*, i8** %old_buffer2756, align 8
  %sub.ptr.lhs.cast2797 = ptrtoint i8* %1345 to i64
  %sub.ptr.rhs.cast2798 = ptrtoint i8* %1346 to i64
  %sub.ptr.sub2799 = sub i64 %sub.ptr.lhs.cast2797, %sub.ptr.rhs.cast2798
  %add.ptr2800 = getelementptr inbounds i8, i8* %1344, i64 %sub.ptr.sub2799
  store i8* %add.ptr2800, i8** %fixup_alt_jump, align 8
  br label %if.end.2801

if.end.2801:                                      ; preds = %if.then.2796, %if.then.2784
  %1347 = load i8*, i8** %laststart, align 8
  %tobool2802 = icmp ne i8* %1347, null
  br i1 %tobool2802, label %if.then.2803, label %if.end.2808

if.then.2803:                                     ; preds = %if.end.2801
  %1348 = load i8*, i8** %new_buffer2785, align 8
  %1349 = load i8*, i8** %laststart, align 8
  %1350 = load i8*, i8** %old_buffer2756, align 8
  %sub.ptr.lhs.cast2804 = ptrtoint i8* %1349 to i64
  %sub.ptr.rhs.cast2805 = ptrtoint i8* %1350 to i64
  %sub.ptr.sub2806 = sub i64 %sub.ptr.lhs.cast2804, %sub.ptr.rhs.cast2805
  %add.ptr2807 = getelementptr inbounds i8, i8* %1348, i64 %sub.ptr.sub2806
  store i8* %add.ptr2807, i8** %laststart, align 8
  br label %if.end.2808

if.end.2808:                                      ; preds = %if.then.2803, %if.end.2801
  %1351 = load i8*, i8** %pending_exact, align 8
  %tobool2809 = icmp ne i8* %1351, null
  br i1 %tobool2809, label %if.then.2810, label %if.end.2815

if.then.2810:                                     ; preds = %if.end.2808
  %1352 = load i8*, i8** %new_buffer2785, align 8
  %1353 = load i8*, i8** %pending_exact, align 8
  %1354 = load i8*, i8** %old_buffer2756, align 8
  %sub.ptr.lhs.cast2811 = ptrtoint i8* %1353 to i64
  %sub.ptr.rhs.cast2812 = ptrtoint i8* %1354 to i64
  %sub.ptr.sub2813 = sub i64 %sub.ptr.lhs.cast2811, %sub.ptr.rhs.cast2812
  %add.ptr2814 = getelementptr inbounds i8, i8* %1352, i64 %sub.ptr.sub2813
  store i8* %add.ptr2814, i8** %pending_exact, align 8
  br label %if.end.2815

if.end.2815:                                      ; preds = %if.then.2810, %if.end.2808
  br label %if.end.2816

if.end.2816:                                      ; preds = %if.end.2815, %if.end.2780
  br label %do.end.2817

do.end.2817:                                      ; preds = %if.end.2816
  br label %while.cond.2742

while.end.2818:                                   ; preds = %while.cond.2742
  %1355 = load i8*, i8** %laststart, align 8
  %arrayidx2819 = getelementptr inbounds i8, i8* %1355, i64 1
  %1356 = load i8, i8* %arrayidx2819, align 1
  %conv2820 = zext i8 %1356 to i32
  %or2821 = or i32 %conv2820, 128
  %conv2822 = trunc i32 %or2821 to i8
  store i8 %conv2822, i8* %arrayidx2819, align 1
  %bits2823 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 3
  %1357 = load i32, i32* %bits2823, align 4
  %and2824 = and i32 %1357, 255
  %conv2825 = trunc i32 %and2824 to i8
  %1358 = load i8*, i8** %b, align 8
  %incdec.ptr2826 = getelementptr inbounds i8, i8* %1358, i32 1
  store i8* %incdec.ptr2826, i8** %b, align 8
  store i8 %conv2825, i8* %1358, align 1
  %bits2827 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 3
  %1359 = load i32, i32* %bits2827, align 4
  %shr = ashr i32 %1359, 8
  %conv2828 = trunc i32 %shr to i8
  %1360 = load i8*, i8** %b, align 8
  %incdec.ptr2829 = getelementptr inbounds i8, i8* %1360, i32 1
  store i8* %incdec.ptr2829, i8** %b, align 8
  store i8 %conv2828, i8* %1360, align 1
  br label %do.body.2830

do.body.2830:                                     ; preds = %while.end.2818
  br label %do.body.2831

do.body.2831:                                     ; preds = %do.body.2830
  %1361 = load i32, i32* %used2740, align 4
  %div2832 = sdiv i32 %1361, 2
  %and2833 = and i32 %div2832, 255
  %conv2834 = trunc i32 %and2833 to i8
  %1362 = load i8*, i8** %b, align 8
  %arrayidx2835 = getelementptr inbounds i8, i8* %1362, i64 0
  store i8 %conv2834, i8* %arrayidx2835, align 1
  %1363 = load i32, i32* %used2740, align 4
  %div2836 = sdiv i32 %1363, 2
  %shr2837 = ashr i32 %div2836, 8
  %conv2838 = trunc i32 %shr2837 to i8
  %1364 = load i8*, i8** %b, align 8
  %arrayidx2839 = getelementptr inbounds i8, i8* %1364, i64 1
  store i8 %conv2838, i8* %arrayidx2839, align 1
  br label %do.end.2840

do.end.2840:                                      ; preds = %do.body.2831
  %1365 = load i8*, i8** %b, align 8
  %add.ptr2841 = getelementptr inbounds i8, i8* %1365, i64 2
  store i8* %add.ptr2841, i8** %b, align 8
  br label %do.end.2842

do.end.2842:                                      ; preds = %do.end.2840
  store i32 0, i32* %i, align 4
  br label %for.cond.2843

for.cond.2843:                                    ; preds = %for.inc.2869, %do.end.2842
  %1366 = load i32, i32* %i, align 4
  %1367 = load i32, i32* %used2740, align 4
  %cmp2844 = icmp slt i32 %1366, %1367
  br i1 %cmp2844, label %for.body.2846, label %for.end.2871

for.body.2846:                                    ; preds = %for.cond.2843
  br label %do.body.2847

do.body.2847:                                     ; preds = %for.body.2846
  %1368 = load i32, i32* %i, align 4
  %idxprom2848 = sext i32 %1368 to i64
  %table2849 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1369 = load i32*, i32** %table2849, align 8
  %arrayidx2850 = getelementptr inbounds i32, i32* %1369, i64 %idxprom2848
  %1370 = load i32, i32* %arrayidx2850, align 4
  %and2851 = and i32 %1370, 255
  %conv2852 = trunc i32 %and2851 to i8
  %1371 = load i8*, i8** %b, align 8
  %arrayidx2853 = getelementptr inbounds i8, i8* %1371, i64 0
  store i8 %conv2852, i8* %arrayidx2853, align 1
  %1372 = load i32, i32* %i, align 4
  %idxprom2854 = sext i32 %1372 to i64
  %table2855 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1373 = load i32*, i32** %table2855, align 8
  %arrayidx2856 = getelementptr inbounds i32, i32* %1373, i64 %idxprom2854
  %1374 = load i32, i32* %arrayidx2856, align 4
  %shr2857 = ashr i32 %1374, 8
  %and2858 = and i32 %shr2857, 255
  %conv2859 = trunc i32 %and2858 to i8
  %1375 = load i8*, i8** %b, align 8
  %arrayidx2860 = getelementptr inbounds i8, i8* %1375, i64 1
  store i8 %conv2859, i8* %arrayidx2860, align 1
  %1376 = load i32, i32* %i, align 4
  %idxprom2861 = sext i32 %1376 to i64
  %table2862 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1377 = load i32*, i32** %table2862, align 8
  %arrayidx2863 = getelementptr inbounds i32, i32* %1377, i64 %idxprom2861
  %1378 = load i32, i32* %arrayidx2863, align 4
  %shr2864 = ashr i32 %1378, 16
  %conv2865 = trunc i32 %shr2864 to i8
  %1379 = load i8*, i8** %b, align 8
  %arrayidx2866 = getelementptr inbounds i8, i8* %1379, i64 2
  store i8 %conv2865, i8* %arrayidx2866, align 1
  %1380 = load i8*, i8** %b, align 8
  %add.ptr2867 = getelementptr inbounds i8, i8* %1380, i64 3
  store i8* %add.ptr2867, i8** %b, align 8
  br label %do.end.2868

do.end.2868:                                      ; preds = %do.body.2847
  br label %for.inc.2869

for.inc.2869:                                     ; preds = %do.end.2868
  %1381 = load i32, i32* %i, align 4
  %inc2870 = add nsw i32 %1381, 1
  store i32 %inc2870, i32* %i, align 4
  br label %for.cond.2843

for.end.2871:                                     ; preds = %for.cond.2843
  br label %if.end.2872

if.end.2872:                                      ; preds = %for.end.2871, %lor.lhs.false.2736
  br label %sw.epilog.6529

sw.bb.2873:                                       ; preds = %do.end.106
  %1382 = load i64, i64* %syntax.addr, align 8
  %and2874 = and i64 %1382, 8192
  %tobool2875 = icmp ne i64 %and2874, 0
  br i1 %tobool2875, label %if.then.2876, label %if.else.2877

if.then.2876:                                     ; preds = %sw.bb.2873
  br label %handle_open

if.else.2877:                                     ; preds = %sw.bb.2873
  br label %normal_char

sw.bb.2878:                                       ; preds = %do.end.106
  %1383 = load i64, i64* %syntax.addr, align 8
  %and2879 = and i64 %1383, 8192
  %tobool2880 = icmp ne i64 %and2879, 0
  br i1 %tobool2880, label %if.then.2881, label %if.else.2882

if.then.2881:                                     ; preds = %sw.bb.2878
  br label %handle_close

if.else.2882:                                     ; preds = %sw.bb.2878
  br label %normal_char

sw.bb.2883:                                       ; preds = %do.end.106
  %1384 = load i64, i64* %syntax.addr, align 8
  %and2884 = and i64 %1384, 2048
  %tobool2885 = icmp ne i64 %and2884, 0
  br i1 %tobool2885, label %if.then.2886, label %if.else.2887

if.then.2886:                                     ; preds = %sw.bb.2883
  br label %handle_alt

if.else.2887:                                     ; preds = %sw.bb.2883
  br label %normal_char

sw.bb.2888:                                       ; preds = %do.end.106
  %1385 = load i64, i64* %syntax.addr, align 8
  %and2889 = and i64 %1385, 32768
  %tobool2890 = icmp ne i64 %and2889, 0
  br i1 %tobool2890, label %if.then.2891, label %if.else.2892

if.then.2891:                                     ; preds = %sw.bb.2888
  br label %handle_alt

if.else.2892:                                     ; preds = %sw.bb.2888
  br label %normal_char

sw.bb.2893:                                       ; preds = %do.end.106
  %1386 = load i64, i64* %syntax.addr, align 8
  %and2894 = and i64 %1386, 512
  %tobool2895 = icmp ne i64 %and2894, 0
  br i1 %tobool2895, label %land.lhs.true.2896, label %if.else.2900

land.lhs.true.2896:                               ; preds = %sw.bb.2893
  %1387 = load i64, i64* %syntax.addr, align 8
  %and2897 = and i64 %1387, 4096
  %tobool2898 = icmp ne i64 %and2897, 0
  br i1 %tobool2898, label %if.then.2899, label %if.else.2900

if.then.2899:                                     ; preds = %land.lhs.true.2896
  br label %handle_interval

if.else.2900:                                     ; preds = %land.lhs.true.2896, %sw.bb.2893
  br label %normal_char

sw.bb.2901:                                       ; preds = %do.end.106
  %1388 = load i8*, i8** %p, align 8
  %1389 = load i8*, i8** %pend, align 8
  %cmp2902 = icmp eq i8* %1388, %1389
  br i1 %cmp2902, label %if.then.2904, label %if.end.2915

if.then.2904:                                     ; preds = %sw.bb.2901
  br label %do.body.2905

do.body.2905:                                     ; preds = %if.then.2904
  br label %do.body.2906

do.body.2906:                                     ; preds = %do.body.2905
  %table2907 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1390 = load i32*, i32** %table2907, align 8
  %tobool2908 = icmp ne i32* %1390, null
  br i1 %tobool2908, label %if.then.2909, label %if.end.2911

if.then.2909:                                     ; preds = %do.body.2906
  %table2910 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1391 = load i32*, i32** %table2910, align 8
  %1392 = bitcast i32* %1391 to i8*
  call void @xfree(i8* %1392)
  br label %if.end.2911

if.end.2911:                                      ; preds = %if.then.2909, %do.body.2906
  br label %do.end.2912

do.end.2912:                                      ; preds = %if.end.2911
  %stack2913 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1393 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2913, align 8
  %1394 = bitcast %struct.compile_stack_elt_t* %1393 to i8*
  call void @xfree(i8* %1394)
  store i32 5, i32* %retval
  br label %do.end.6650

do.end.2914:                                      ; No predecessors!
  br label %if.end.2915

if.end.2915:                                      ; preds = %do.end.2914, %sw.bb.2901
  br label %do.body.2916

do.body.2916:                                     ; preds = %if.end.2915
  %1395 = load i8*, i8** %p, align 8
  %1396 = load i8*, i8** %pend, align 8
  %cmp2918 = icmp eq i8* %1395, %1396
  br i1 %cmp2918, label %if.then.2920, label %if.end.2921

if.then.2920:                                     ; preds = %do.body.2916
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.2921:                                      ; preds = %do.body.2916
  %1397 = load i8, i8* %multibyte, align 1
  %conv2922 = sext i8 %1397 to i32
  %tobool2923 = icmp ne i32 %conv2922, 0
  br i1 %tobool2923, label %cond.true.2924, label %cond.false.2979

cond.true.2924:                                   ; preds = %if.end.2921
  %1398 = load i8*, i8** %p, align 8
  %arrayidx2925 = getelementptr inbounds i8, i8* %1398, i64 0
  %1399 = load i8, i8* %arrayidx2925, align 1
  %conv2926 = zext i8 %1399 to i32
  %and2927 = and i32 %conv2926, 128
  %tobool2928 = icmp ne i32 %and2927, 0
  br i1 %tobool2928, label %cond.false.2932, label %cond.true.2929

cond.true.2929:                                   ; preds = %cond.true.2924
  store i32 1, i32* %len2917, align 4
  %1400 = load i8*, i8** %p, align 8
  %arrayidx2930 = getelementptr inbounds i8, i8* %1400, i64 0
  %1401 = load i8, i8* %arrayidx2930, align 1
  %conv2931 = zext i8 %1401 to i32
  br label %cond.end.2977

cond.false.2932:                                  ; preds = %cond.true.2924
  %1402 = load i8*, i8** %p, align 8
  %arrayidx2933 = getelementptr inbounds i8, i8* %1402, i64 0
  %1403 = load i8, i8* %arrayidx2933, align 1
  %conv2934 = zext i8 %1403 to i32
  %and2935 = and i32 %conv2934, 32
  %tobool2936 = icmp ne i32 %and2935, 0
  br i1 %tobool2936, label %cond.false.2952, label %cond.true.2937

cond.true.2937:                                   ; preds = %cond.false.2932
  store i32 2, i32* %len2917, align 4
  %1404 = load i8*, i8** %p, align 8
  %arrayidx2938 = getelementptr inbounds i8, i8* %1404, i64 0
  %1405 = load i8, i8* %arrayidx2938, align 1
  %conv2939 = zext i8 %1405 to i32
  %and2940 = and i32 %conv2939, 31
  %shl2941 = shl i32 %and2940, 6
  %1406 = load i8*, i8** %p, align 8
  %arrayidx2942 = getelementptr inbounds i8, i8* %1406, i64 1
  %1407 = load i8, i8* %arrayidx2942, align 1
  %conv2943 = zext i8 %1407 to i32
  %and2944 = and i32 %conv2943, 63
  %or2945 = or i32 %shl2941, %and2944
  %1408 = load i8*, i8** %p, align 8
  %arrayidx2946 = getelementptr inbounds i8, i8* %1408, i64 0
  %1409 = load i8, i8* %arrayidx2946, align 1
  %conv2947 = zext i8 %1409 to i32
  %cmp2948 = icmp slt i32 %conv2947, 194
  %cond2950 = select i1 %cmp2948, i32 4194176, i32 0
  %add2951 = add nsw i32 %or2945, %cond2950
  br label %cond.end.2975

cond.false.2952:                                  ; preds = %cond.false.2932
  %1410 = load i8*, i8** %p, align 8
  %arrayidx2953 = getelementptr inbounds i8, i8* %1410, i64 0
  %1411 = load i8, i8* %arrayidx2953, align 1
  %conv2954 = zext i8 %1411 to i32
  %and2955 = and i32 %conv2954, 16
  %tobool2956 = icmp ne i32 %and2955, 0
  br i1 %tobool2956, label %cond.false.2971, label %cond.true.2957

cond.true.2957:                                   ; preds = %cond.false.2952
  store i32 3, i32* %len2917, align 4
  %1412 = load i8*, i8** %p, align 8
  %arrayidx2958 = getelementptr inbounds i8, i8* %1412, i64 0
  %1413 = load i8, i8* %arrayidx2958, align 1
  %conv2959 = zext i8 %1413 to i32
  %and2960 = and i32 %conv2959, 15
  %shl2961 = shl i32 %and2960, 12
  %1414 = load i8*, i8** %p, align 8
  %arrayidx2962 = getelementptr inbounds i8, i8* %1414, i64 1
  %1415 = load i8, i8* %arrayidx2962, align 1
  %conv2963 = zext i8 %1415 to i32
  %and2964 = and i32 %conv2963, 63
  %shl2965 = shl i32 %and2964, 6
  %or2966 = or i32 %shl2961, %shl2965
  %1416 = load i8*, i8** %p, align 8
  %arrayidx2967 = getelementptr inbounds i8, i8* %1416, i64 2
  %1417 = load i8, i8* %arrayidx2967, align 1
  %conv2968 = zext i8 %1417 to i32
  %and2969 = and i32 %conv2968, 63
  %or2970 = or i32 %or2966, %and2969
  br label %cond.end.2973

cond.false.2971:                                  ; preds = %cond.false.2952
  %1418 = load i8*, i8** %p, align 8
  %call2972 = call i32 @string_char(i8* %1418, i8** null, i32* %len2917)
  br label %cond.end.2973

cond.end.2973:                                    ; preds = %cond.false.2971, %cond.true.2957
  %cond2974 = phi i32 [ %or2970, %cond.true.2957 ], [ %call2972, %cond.false.2971 ]
  br label %cond.end.2975

cond.end.2975:                                    ; preds = %cond.end.2973, %cond.true.2937
  %cond2976 = phi i32 [ %add2951, %cond.true.2937 ], [ %cond2974, %cond.end.2973 ]
  br label %cond.end.2977

cond.end.2977:                                    ; preds = %cond.end.2975, %cond.true.2929
  %cond2978 = phi i32 [ %conv2931, %cond.true.2929 ], [ %cond2976, %cond.end.2975 ]
  br label %cond.end.2981

cond.false.2979:                                  ; preds = %if.end.2921
  store i32 1, i32* %len2917, align 4
  %1419 = load i8*, i8** %p, align 8
  %1420 = load i8, i8* %1419, align 1
  %conv2980 = zext i8 %1420 to i32
  br label %cond.end.2981

cond.end.2981:                                    ; preds = %cond.false.2979, %cond.end.2977
  %cond2982 = phi i32 [ %cond2978, %cond.end.2977 ], [ %conv2980, %cond.false.2979 ]
  store i32 %cond2982, i32* %c, align 4
  %1421 = load i32, i32* %len2917, align 4
  %1422 = load i8*, i8** %p, align 8
  %idx.ext2983 = sext i32 %1421 to i64
  %add.ptr2984 = getelementptr inbounds i8, i8* %1422, i64 %idx.ext2983
  store i8* %add.ptr2984, i8** %p, align 8
  br label %do.end.2985

do.end.2985:                                      ; preds = %cond.end.2981
  %1423 = load i32, i32* %c, align 4
  switch i32 %1423, label %sw.default.6155 [
    i32 40, label %sw.bb.2986
    i32 41, label %sw.bb.3361
    i32 124, label %sw.bb.3537
    i32 123, label %sw.bb.3715
    i32 61, label %sw.bb.4455
    i32 115, label %sw.bb.4533
    i32 83, label %sw.bb.4684
    i32 99, label %sw.bb.4835
    i32 67, label %sw.bb.4985
    i32 119, label %sw.bb.5135
    i32 87, label %sw.bb.5218
    i32 60, label %sw.bb.5301
    i32 62, label %sw.bb.5383
    i32 95, label %sw.bb.5465
    i32 98, label %sw.bb.5714
    i32 66, label %sw.bb.5796
    i32 96, label %sw.bb.5878
    i32 39, label %sw.bb.5960
    i32 49, label %sw.bb.6042
    i32 50, label %sw.bb.6042
    i32 51, label %sw.bb.6042
    i32 52, label %sw.bb.6042
    i32 53, label %sw.bb.6042
    i32 54, label %sw.bb.6042
    i32 55, label %sw.bb.6042
    i32 56, label %sw.bb.6042
    i32 57, label %sw.bb.6042
    i32 43, label %sw.bb.6150
    i32 63, label %sw.bb.6150
  ]

sw.bb.2986:                                       ; preds = %do.end.2985
  %1424 = load i64, i64* %syntax.addr, align 8
  %and2987 = and i64 %1424, 8192
  %tobool2988 = icmp ne i64 %and2987, 0
  br i1 %tobool2988, label %if.then.2989, label %if.end.2990

if.then.2989:                                     ; preds = %sw.bb.2986
  br label %normal_backslash

if.end.2990:                                      ; preds = %sw.bb.2986
  br label %handle_open

handle_open:                                      ; preds = %if.end.2990, %if.then.2876
  store i32 0, i32* %shy, align 4
  store i32 0, i32* %regnum, align 4
  %1425 = load i8*, i8** %p, align 8
  %add.ptr2991 = getelementptr inbounds i8, i8* %1425, i64 1
  %1426 = load i8*, i8** %pend, align 8
  %cmp2992 = icmp ult i8* %add.ptr2991, %1426
  br i1 %cmp2992, label %if.then.2994, label %if.end.3178

if.then.2994:                                     ; preds = %handle_open
  %1427 = load i64, i64* %syntax.addr, align 8
  %and2995 = and i64 %1427, 2097152
  %tobool2996 = icmp ne i64 %and2995, 0
  br i1 %tobool2996, label %land.lhs.true.2997, label %if.end.3177

land.lhs.true.2997:                               ; preds = %if.then.2994
  %1428 = load i8*, i8** %p, align 8
  %1429 = load i8, i8* %1428, align 1
  %conv2998 = zext i8 %1429 to i32
  %cmp2999 = icmp eq i32 %conv2998, 63
  br i1 %cmp2999, label %if.then.3001, label %if.end.3177

if.then.3001:                                     ; preds = %land.lhs.true.2997
  br label %do.body.3002

do.body.3002:                                     ; preds = %if.then.3001
  %1430 = load i8*, i8** %p, align 8
  %1431 = load i8*, i8** %pend, align 8
  %cmp3004 = icmp eq i8* %1430, %1431
  br i1 %cmp3004, label %if.then.3006, label %if.end.3007

if.then.3006:                                     ; preds = %do.body.3002
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.3007:                                      ; preds = %do.body.3002
  %1432 = load i8, i8* %multibyte, align 1
  %conv3008 = sext i8 %1432 to i32
  %tobool3009 = icmp ne i32 %conv3008, 0
  br i1 %tobool3009, label %cond.true.3010, label %cond.false.3065

cond.true.3010:                                   ; preds = %if.end.3007
  %1433 = load i8*, i8** %p, align 8
  %arrayidx3011 = getelementptr inbounds i8, i8* %1433, i64 0
  %1434 = load i8, i8* %arrayidx3011, align 1
  %conv3012 = zext i8 %1434 to i32
  %and3013 = and i32 %conv3012, 128
  %tobool3014 = icmp ne i32 %and3013, 0
  br i1 %tobool3014, label %cond.false.3018, label %cond.true.3015

cond.true.3015:                                   ; preds = %cond.true.3010
  store i32 1, i32* %len3003, align 4
  %1435 = load i8*, i8** %p, align 8
  %arrayidx3016 = getelementptr inbounds i8, i8* %1435, i64 0
  %1436 = load i8, i8* %arrayidx3016, align 1
  %conv3017 = zext i8 %1436 to i32
  br label %cond.end.3063

cond.false.3018:                                  ; preds = %cond.true.3010
  %1437 = load i8*, i8** %p, align 8
  %arrayidx3019 = getelementptr inbounds i8, i8* %1437, i64 0
  %1438 = load i8, i8* %arrayidx3019, align 1
  %conv3020 = zext i8 %1438 to i32
  %and3021 = and i32 %conv3020, 32
  %tobool3022 = icmp ne i32 %and3021, 0
  br i1 %tobool3022, label %cond.false.3038, label %cond.true.3023

cond.true.3023:                                   ; preds = %cond.false.3018
  store i32 2, i32* %len3003, align 4
  %1439 = load i8*, i8** %p, align 8
  %arrayidx3024 = getelementptr inbounds i8, i8* %1439, i64 0
  %1440 = load i8, i8* %arrayidx3024, align 1
  %conv3025 = zext i8 %1440 to i32
  %and3026 = and i32 %conv3025, 31
  %shl3027 = shl i32 %and3026, 6
  %1441 = load i8*, i8** %p, align 8
  %arrayidx3028 = getelementptr inbounds i8, i8* %1441, i64 1
  %1442 = load i8, i8* %arrayidx3028, align 1
  %conv3029 = zext i8 %1442 to i32
  %and3030 = and i32 %conv3029, 63
  %or3031 = or i32 %shl3027, %and3030
  %1443 = load i8*, i8** %p, align 8
  %arrayidx3032 = getelementptr inbounds i8, i8* %1443, i64 0
  %1444 = load i8, i8* %arrayidx3032, align 1
  %conv3033 = zext i8 %1444 to i32
  %cmp3034 = icmp slt i32 %conv3033, 194
  %cond3036 = select i1 %cmp3034, i32 4194176, i32 0
  %add3037 = add nsw i32 %or3031, %cond3036
  br label %cond.end.3061

cond.false.3038:                                  ; preds = %cond.false.3018
  %1445 = load i8*, i8** %p, align 8
  %arrayidx3039 = getelementptr inbounds i8, i8* %1445, i64 0
  %1446 = load i8, i8* %arrayidx3039, align 1
  %conv3040 = zext i8 %1446 to i32
  %and3041 = and i32 %conv3040, 16
  %tobool3042 = icmp ne i32 %and3041, 0
  br i1 %tobool3042, label %cond.false.3057, label %cond.true.3043

cond.true.3043:                                   ; preds = %cond.false.3038
  store i32 3, i32* %len3003, align 4
  %1447 = load i8*, i8** %p, align 8
  %arrayidx3044 = getelementptr inbounds i8, i8* %1447, i64 0
  %1448 = load i8, i8* %arrayidx3044, align 1
  %conv3045 = zext i8 %1448 to i32
  %and3046 = and i32 %conv3045, 15
  %shl3047 = shl i32 %and3046, 12
  %1449 = load i8*, i8** %p, align 8
  %arrayidx3048 = getelementptr inbounds i8, i8* %1449, i64 1
  %1450 = load i8, i8* %arrayidx3048, align 1
  %conv3049 = zext i8 %1450 to i32
  %and3050 = and i32 %conv3049, 63
  %shl3051 = shl i32 %and3050, 6
  %or3052 = or i32 %shl3047, %shl3051
  %1451 = load i8*, i8** %p, align 8
  %arrayidx3053 = getelementptr inbounds i8, i8* %1451, i64 2
  %1452 = load i8, i8* %arrayidx3053, align 1
  %conv3054 = zext i8 %1452 to i32
  %and3055 = and i32 %conv3054, 63
  %or3056 = or i32 %or3052, %and3055
  br label %cond.end.3059

cond.false.3057:                                  ; preds = %cond.false.3038
  %1453 = load i8*, i8** %p, align 8
  %call3058 = call i32 @string_char(i8* %1453, i8** null, i32* %len3003)
  br label %cond.end.3059

cond.end.3059:                                    ; preds = %cond.false.3057, %cond.true.3043
  %cond3060 = phi i32 [ %or3056, %cond.true.3043 ], [ %call3058, %cond.false.3057 ]
  br label %cond.end.3061

cond.end.3061:                                    ; preds = %cond.end.3059, %cond.true.3023
  %cond3062 = phi i32 [ %add3037, %cond.true.3023 ], [ %cond3060, %cond.end.3059 ]
  br label %cond.end.3063

cond.end.3063:                                    ; preds = %cond.end.3061, %cond.true.3015
  %cond3064 = phi i32 [ %conv3017, %cond.true.3015 ], [ %cond3062, %cond.end.3061 ]
  br label %cond.end.3067

cond.false.3065:                                  ; preds = %if.end.3007
  store i32 1, i32* %len3003, align 4
  %1454 = load i8*, i8** %p, align 8
  %1455 = load i8, i8* %1454, align 1
  %conv3066 = zext i8 %1455 to i32
  br label %cond.end.3067

cond.end.3067:                                    ; preds = %cond.false.3065, %cond.end.3063
  %cond3068 = phi i32 [ %cond3064, %cond.end.3063 ], [ %conv3066, %cond.false.3065 ]
  store i32 %cond3068, i32* %c, align 4
  %1456 = load i32, i32* %len3003, align 4
  %1457 = load i8*, i8** %p, align 8
  %idx.ext3069 = sext i32 %1456 to i64
  %add.ptr3070 = getelementptr inbounds i8, i8* %1457, i64 %idx.ext3069
  store i8* %add.ptr3070, i8** %p, align 8
  br label %do.end.3071

do.end.3071:                                      ; preds = %cond.end.3067
  br label %while.cond.3072

while.cond.3072:                                  ; preds = %sw.epilog, %do.end.3071
  %1458 = load i32, i32* %shy, align 4
  %tobool3073 = icmp ne i32 %1458, 0
  %lnot3074 = xor i1 %tobool3073, true
  br i1 %lnot3074, label %while.body.3075, label %while.end.3176

while.body.3075:                                  ; preds = %while.cond.3072
  br label %do.body.3076

do.body.3076:                                     ; preds = %while.body.3075
  %1459 = load i8*, i8** %p, align 8
  %1460 = load i8*, i8** %pend, align 8
  %cmp3078 = icmp eq i8* %1459, %1460
  br i1 %cmp3078, label %if.then.3080, label %if.end.3081

if.then.3080:                                     ; preds = %do.body.3076
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.3081:                                      ; preds = %do.body.3076
  %1461 = load i8, i8* %multibyte, align 1
  %conv3082 = sext i8 %1461 to i32
  %tobool3083 = icmp ne i32 %conv3082, 0
  br i1 %tobool3083, label %cond.true.3084, label %cond.false.3139

cond.true.3084:                                   ; preds = %if.end.3081
  %1462 = load i8*, i8** %p, align 8
  %arrayidx3085 = getelementptr inbounds i8, i8* %1462, i64 0
  %1463 = load i8, i8* %arrayidx3085, align 1
  %conv3086 = zext i8 %1463 to i32
  %and3087 = and i32 %conv3086, 128
  %tobool3088 = icmp ne i32 %and3087, 0
  br i1 %tobool3088, label %cond.false.3092, label %cond.true.3089

cond.true.3089:                                   ; preds = %cond.true.3084
  store i32 1, i32* %len3077, align 4
  %1464 = load i8*, i8** %p, align 8
  %arrayidx3090 = getelementptr inbounds i8, i8* %1464, i64 0
  %1465 = load i8, i8* %arrayidx3090, align 1
  %conv3091 = zext i8 %1465 to i32
  br label %cond.end.3137

cond.false.3092:                                  ; preds = %cond.true.3084
  %1466 = load i8*, i8** %p, align 8
  %arrayidx3093 = getelementptr inbounds i8, i8* %1466, i64 0
  %1467 = load i8, i8* %arrayidx3093, align 1
  %conv3094 = zext i8 %1467 to i32
  %and3095 = and i32 %conv3094, 32
  %tobool3096 = icmp ne i32 %and3095, 0
  br i1 %tobool3096, label %cond.false.3112, label %cond.true.3097

cond.true.3097:                                   ; preds = %cond.false.3092
  store i32 2, i32* %len3077, align 4
  %1468 = load i8*, i8** %p, align 8
  %arrayidx3098 = getelementptr inbounds i8, i8* %1468, i64 0
  %1469 = load i8, i8* %arrayidx3098, align 1
  %conv3099 = zext i8 %1469 to i32
  %and3100 = and i32 %conv3099, 31
  %shl3101 = shl i32 %and3100, 6
  %1470 = load i8*, i8** %p, align 8
  %arrayidx3102 = getelementptr inbounds i8, i8* %1470, i64 1
  %1471 = load i8, i8* %arrayidx3102, align 1
  %conv3103 = zext i8 %1471 to i32
  %and3104 = and i32 %conv3103, 63
  %or3105 = or i32 %shl3101, %and3104
  %1472 = load i8*, i8** %p, align 8
  %arrayidx3106 = getelementptr inbounds i8, i8* %1472, i64 0
  %1473 = load i8, i8* %arrayidx3106, align 1
  %conv3107 = zext i8 %1473 to i32
  %cmp3108 = icmp slt i32 %conv3107, 194
  %cond3110 = select i1 %cmp3108, i32 4194176, i32 0
  %add3111 = add nsw i32 %or3105, %cond3110
  br label %cond.end.3135

cond.false.3112:                                  ; preds = %cond.false.3092
  %1474 = load i8*, i8** %p, align 8
  %arrayidx3113 = getelementptr inbounds i8, i8* %1474, i64 0
  %1475 = load i8, i8* %arrayidx3113, align 1
  %conv3114 = zext i8 %1475 to i32
  %and3115 = and i32 %conv3114, 16
  %tobool3116 = icmp ne i32 %and3115, 0
  br i1 %tobool3116, label %cond.false.3131, label %cond.true.3117

cond.true.3117:                                   ; preds = %cond.false.3112
  store i32 3, i32* %len3077, align 4
  %1476 = load i8*, i8** %p, align 8
  %arrayidx3118 = getelementptr inbounds i8, i8* %1476, i64 0
  %1477 = load i8, i8* %arrayidx3118, align 1
  %conv3119 = zext i8 %1477 to i32
  %and3120 = and i32 %conv3119, 15
  %shl3121 = shl i32 %and3120, 12
  %1478 = load i8*, i8** %p, align 8
  %arrayidx3122 = getelementptr inbounds i8, i8* %1478, i64 1
  %1479 = load i8, i8* %arrayidx3122, align 1
  %conv3123 = zext i8 %1479 to i32
  %and3124 = and i32 %conv3123, 63
  %shl3125 = shl i32 %and3124, 6
  %or3126 = or i32 %shl3121, %shl3125
  %1480 = load i8*, i8** %p, align 8
  %arrayidx3127 = getelementptr inbounds i8, i8* %1480, i64 2
  %1481 = load i8, i8* %arrayidx3127, align 1
  %conv3128 = zext i8 %1481 to i32
  %and3129 = and i32 %conv3128, 63
  %or3130 = or i32 %or3126, %and3129
  br label %cond.end.3133

cond.false.3131:                                  ; preds = %cond.false.3112
  %1482 = load i8*, i8** %p, align 8
  %call3132 = call i32 @string_char(i8* %1482, i8** null, i32* %len3077)
  br label %cond.end.3133

cond.end.3133:                                    ; preds = %cond.false.3131, %cond.true.3117
  %cond3134 = phi i32 [ %or3130, %cond.true.3117 ], [ %call3132, %cond.false.3131 ]
  br label %cond.end.3135

cond.end.3135:                                    ; preds = %cond.end.3133, %cond.true.3097
  %cond3136 = phi i32 [ %add3111, %cond.true.3097 ], [ %cond3134, %cond.end.3133 ]
  br label %cond.end.3137

cond.end.3137:                                    ; preds = %cond.end.3135, %cond.true.3089
  %cond3138 = phi i32 [ %conv3091, %cond.true.3089 ], [ %cond3136, %cond.end.3135 ]
  br label %cond.end.3141

cond.false.3139:                                  ; preds = %if.end.3081
  store i32 1, i32* %len3077, align 4
  %1483 = load i8*, i8** %p, align 8
  %1484 = load i8, i8* %1483, align 1
  %conv3140 = zext i8 %1484 to i32
  br label %cond.end.3141

cond.end.3141:                                    ; preds = %cond.false.3139, %cond.end.3137
  %cond3142 = phi i32 [ %cond3138, %cond.end.3137 ], [ %conv3140, %cond.false.3139 ]
  store i32 %cond3142, i32* %c, align 4
  %1485 = load i32, i32* %len3077, align 4
  %1486 = load i8*, i8** %p, align 8
  %idx.ext3143 = sext i32 %1485 to i64
  %add.ptr3144 = getelementptr inbounds i8, i8* %1486, i64 %idx.ext3143
  store i8* %add.ptr3144, i8** %p, align 8
  br label %do.end.3145

do.end.3145:                                      ; preds = %cond.end.3141
  %1487 = load i32, i32* %c, align 4
  switch i32 %1487, label %sw.default [
    i32 58, label %sw.bb.3146
    i32 48, label %sw.bb.3147
    i32 49, label %sw.bb.3162
    i32 50, label %sw.bb.3162
    i32 51, label %sw.bb.3162
    i32 52, label %sw.bb.3162
    i32 53, label %sw.bb.3162
    i32 54, label %sw.bb.3162
    i32 55, label %sw.bb.3162
    i32 56, label %sw.bb.3162
    i32 57, label %sw.bb.3162
  ]

sw.bb.3146:                                       ; preds = %do.end.3145
  store i32 1, i32* %shy, align 4
  br label %sw.epilog

sw.bb.3147:                                       ; preds = %do.end.3145
  %1488 = load i32, i32* %regnum, align 4
  %cmp3148 = icmp eq i32 %1488, 0
  br i1 %cmp3148, label %if.then.3150, label %if.end.3161

if.then.3150:                                     ; preds = %sw.bb.3147
  br label %do.body.3151

do.body.3151:                                     ; preds = %if.then.3150
  br label %do.body.3152

do.body.3152:                                     ; preds = %do.body.3151
  %table3153 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1489 = load i32*, i32** %table3153, align 8
  %tobool3154 = icmp ne i32* %1489, null
  br i1 %tobool3154, label %if.then.3155, label %if.end.3157

if.then.3155:                                     ; preds = %do.body.3152
  %table3156 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1490 = load i32*, i32** %table3156, align 8
  %1491 = bitcast i32* %1490 to i8*
  call void @xfree(i8* %1491)
  br label %if.end.3157

if.end.3157:                                      ; preds = %if.then.3155, %do.body.3152
  br label %do.end.3158

do.end.3158:                                      ; preds = %if.end.3157
  %stack3159 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1492 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3159, align 8
  %1493 = bitcast %struct.compile_stack_elt_t* %1492 to i8*
  call void @xfree(i8* %1493)
  store i32 2, i32* %retval
  br label %do.end.6650

do.end.3160:                                      ; No predecessors!
  br label %if.end.3161

if.end.3161:                                      ; preds = %do.end.3160, %sw.bb.3147
  br label %sw.bb.3162

sw.bb.3162:                                       ; preds = %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %do.end.3145, %if.end.3161
  %1494 = load i32, i32* %regnum, align 4
  %mul3163 = mul nsw i32 10, %1494
  %1495 = load i32, i32* %c, align 4
  %sub3164 = sub nsw i32 %1495, 48
  %add3165 = add nsw i32 %mul3163, %sub3164
  store i32 %add3165, i32* %regnum, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %do.end.3145
  br label %do.body.3166

do.body.3166:                                     ; preds = %sw.default
  br label %do.body.3167

do.body.3167:                                     ; preds = %do.body.3166
  %table3168 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1496 = load i32*, i32** %table3168, align 8
  %tobool3169 = icmp ne i32* %1496, null
  br i1 %tobool3169, label %if.then.3170, label %if.end.3172

if.then.3170:                                     ; preds = %do.body.3167
  %table3171 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1497 = load i32*, i32** %table3171, align 8
  %1498 = bitcast i32* %1497 to i8*
  call void @xfree(i8* %1498)
  br label %if.end.3172

if.end.3172:                                      ; preds = %if.then.3170, %do.body.3167
  br label %do.end.3173

do.end.3173:                                      ; preds = %if.end.3172
  %stack3174 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1499 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3174, align 8
  %1500 = bitcast %struct.compile_stack_elt_t* %1499 to i8*
  call void @xfree(i8* %1500)
  store i32 2, i32* %retval
  br label %do.end.6650

do.end.3175:                                      ; No predecessors!
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end.3175, %sw.bb.3162, %sw.bb.3146
  br label %while.cond.3072

while.end.3176:                                   ; preds = %while.cond.3072
  br label %if.end.3177

if.end.3177:                                      ; preds = %while.end.3176, %land.lhs.true.2997, %if.then.2994
  br label %if.end.3178

if.end.3178:                                      ; preds = %if.end.3177, %handle_open
  %1501 = load i32, i32* %shy, align 4
  %tobool3179 = icmp ne i32 %1501, 0
  br i1 %tobool3179, label %if.else.3184, label %if.then.3180

if.then.3180:                                     ; preds = %if.end.3178
  %1502 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub3181 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1502, i32 0, i32 6
  %1503 = load i64, i64* %re_nsub3181, align 8
  %inc3182 = add i64 %1503, 1
  store i64 %inc3182, i64* %re_nsub3181, align 8
  %conv3183 = trunc i64 %inc3182 to i32
  store i32 %conv3183, i32* %regnum, align 4
  br label %if.end.3221

if.else.3184:                                     ; preds = %if.end.3178
  %1504 = load i32, i32* %regnum, align 4
  %tobool3185 = icmp ne i32 %1504, 0
  br i1 %tobool3185, label %if.then.3186, label %if.else.3216

if.then.3186:                                     ; preds = %if.else.3184
  store i32 0, i32* %shy, align 4
  %1505 = load i32, i32* %regnum, align 4
  %conv3187 = sext i32 %1505 to i64
  %1506 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub3188 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1506, i32 0, i32 6
  %1507 = load i64, i64* %re_nsub3188, align 8
  %cmp3189 = icmp ugt i64 %conv3187, %1507
  br i1 %cmp3189, label %if.then.3191, label %if.else.3194

if.then.3191:                                     ; preds = %if.then.3186
  %1508 = load i32, i32* %regnum, align 4
  %conv3192 = sext i32 %1508 to i64
  %1509 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub3193 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1509, i32 0, i32 6
  store i64 %conv3192, i64* %re_nsub3193, align 8
  br label %if.end.3215

if.else.3194:                                     ; preds = %if.then.3186
  %1510 = load i32, i32* %regnum, align 4
  %conv3195 = sext i32 %1510 to i64
  %1511 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub3196 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1511, i32 0, i32 6
  %1512 = load i64, i64* %re_nsub3196, align 8
  %cmp3197 = icmp ugt i64 %conv3195, %1512
  br i1 %cmp3197, label %if.then.3203, label %lor.lhs.false.3199

lor.lhs.false.3199:                               ; preds = %if.else.3194
  %1513 = load i32, i32* %regnum, align 4
  %call3200 = call signext i8 @group_in_compile_stack(%struct.compile_stack_type* byval align 8 %compile_stack, i32 %1513)
  %conv3201 = sext i8 %call3200 to i32
  %tobool3202 = icmp ne i32 %conv3201, 0
  br i1 %tobool3202, label %if.then.3203, label %if.end.3214

if.then.3203:                                     ; preds = %lor.lhs.false.3199, %if.else.3194
  br label %do.body.3204

do.body.3204:                                     ; preds = %if.then.3203
  br label %do.body.3205

do.body.3205:                                     ; preds = %do.body.3204
  %table3206 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1514 = load i32*, i32** %table3206, align 8
  %tobool3207 = icmp ne i32* %1514, null
  br i1 %tobool3207, label %if.then.3208, label %if.end.3210

if.then.3208:                                     ; preds = %do.body.3205
  %table3209 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1515 = load i32*, i32** %table3209, align 8
  %1516 = bitcast i32* %1515 to i8*
  call void @xfree(i8* %1516)
  br label %if.end.3210

if.end.3210:                                      ; preds = %if.then.3208, %do.body.3205
  br label %do.end.3211

do.end.3211:                                      ; preds = %if.end.3210
  %stack3212 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1517 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3212, align 8
  %1518 = bitcast %struct.compile_stack_elt_t* %1517 to i8*
  call void @xfree(i8* %1518)
  store i32 2, i32* %retval
  br label %do.end.6650

do.end.3213:                                      ; No predecessors!
  br label %if.end.3214

if.end.3214:                                      ; preds = %do.end.3213, %lor.lhs.false.3199
  br label %if.end.3215

if.end.3215:                                      ; preds = %if.end.3214, %if.then.3191
  br label %if.end.3220

if.else.3216:                                     ; preds = %if.else.3184
  %1519 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub3217 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1519, i32 0, i32 6
  %1520 = load i64, i64* %re_nsub3217, align 8
  %sub3218 = sub i64 0, %1520
  %conv3219 = trunc i64 %sub3218 to i32
  store i32 %conv3219, i32* %regnum, align 4
  br label %if.end.3220

if.end.3220:                                      ; preds = %if.else.3216, %if.end.3215
  br label %if.end.3221

if.end.3221:                                      ; preds = %if.end.3220, %if.then.3180
  %avail3222 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1521 = load i64, i64* %avail3222, align 8
  %size3223 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1
  %1522 = load i64, i64* %size3223, align 8
  %cmp3224 = icmp eq i64 %1521, %1522
  br i1 %cmp3224, label %if.then.3226, label %if.end.3240

if.then.3226:                                     ; preds = %if.end.3221
  %stack3227 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1523 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3227, align 8
  %1524 = bitcast %struct.compile_stack_elt_t* %1523 to i8*
  %size3228 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1
  %1525 = load i64, i64* %size3228, align 8
  %shl3229 = shl i64 %1525, 1
  %mul3230 = mul i64 %shl3229, 32
  %call3231 = call i8* @xrealloc(i8* %1524, i64 %mul3230)
  %1526 = bitcast i8* %call3231 to %struct.compile_stack_elt_t*
  %stack3232 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  store %struct.compile_stack_elt_t* %1526, %struct.compile_stack_elt_t** %stack3232, align 8
  %stack3233 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1527 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3233, align 8
  %cmp3234 = icmp eq %struct.compile_stack_elt_t* %1527, null
  br i1 %cmp3234, label %if.then.3236, label %if.end.3237

if.then.3236:                                     ; preds = %if.then.3226
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.3237:                                      ; preds = %if.then.3226
  %size3238 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1
  %1528 = load i64, i64* %size3238, align 8
  %shl3239 = shl i64 %1528, 1
  store i64 %shl3239, i64* %size3238, align 8
  br label %if.end.3240

if.end.3240:                                      ; preds = %if.end.3237, %if.end.3221
  %1529 = load i8*, i8** %begalt, align 8
  %1530 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3241 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1530, i32 0, i32 0
  %1531 = load i8*, i8** %buffer3241, align 8
  %sub.ptr.lhs.cast3242 = ptrtoint i8* %1529 to i64
  %sub.ptr.rhs.cast3243 = ptrtoint i8* %1531 to i64
  %sub.ptr.sub3244 = sub i64 %sub.ptr.lhs.cast3242, %sub.ptr.rhs.cast3243
  %avail3245 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1532 = load i64, i64* %avail3245, align 8
  %stack3246 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1533 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3246, align 8
  %arrayidx3247 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1533, i64 %1532
  %begalt_offset = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3247, i32 0, i32 0
  store i64 %sub.ptr.sub3244, i64* %begalt_offset, align 8
  %1534 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3248 = icmp ne i8* %1534, null
  br i1 %tobool3248, label %cond.true.3249, label %cond.false.3255

cond.true.3249:                                   ; preds = %if.end.3240
  %1535 = load i8*, i8** %fixup_alt_jump, align 8
  %1536 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3250 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1536, i32 0, i32 0
  %1537 = load i8*, i8** %buffer3250, align 8
  %sub.ptr.lhs.cast3251 = ptrtoint i8* %1535 to i64
  %sub.ptr.rhs.cast3252 = ptrtoint i8* %1537 to i64
  %sub.ptr.sub3253 = sub i64 %sub.ptr.lhs.cast3251, %sub.ptr.rhs.cast3252
  %add3254 = add nsw i64 %sub.ptr.sub3253, 1
  br label %cond.end.3256

cond.false.3255:                                  ; preds = %if.end.3240
  br label %cond.end.3256

cond.end.3256:                                    ; preds = %cond.false.3255, %cond.true.3249
  %cond3257 = phi i64 [ %add3254, %cond.true.3249 ], [ 0, %cond.false.3255 ]
  %avail3258 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1538 = load i64, i64* %avail3258, align 8
  %stack3259 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1539 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3259, align 8
  %arrayidx3260 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1539, i64 %1538
  %fixup_alt_jump3261 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3260, i32 0, i32 1
  store i64 %cond3257, i64* %fixup_alt_jump3261, align 8
  %1540 = load i8*, i8** %b, align 8
  %1541 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3262 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1541, i32 0, i32 0
  %1542 = load i8*, i8** %buffer3262, align 8
  %sub.ptr.lhs.cast3263 = ptrtoint i8* %1540 to i64
  %sub.ptr.rhs.cast3264 = ptrtoint i8* %1542 to i64
  %sub.ptr.sub3265 = sub i64 %sub.ptr.lhs.cast3263, %sub.ptr.rhs.cast3264
  %avail3266 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1543 = load i64, i64* %avail3266, align 8
  %stack3267 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1544 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3267, align 8
  %arrayidx3268 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1544, i64 %1543
  %laststart_offset = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3268, i32 0, i32 2
  store i64 %sub.ptr.sub3265, i64* %laststart_offset, align 8
  %1545 = load i32, i32* %regnum, align 4
  %avail3269 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1546 = load i64, i64* %avail3269, align 8
  %stack3270 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1547 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3270, align 8
  %arrayidx3271 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1547, i64 %1546
  %regnum3272 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3271, i32 0, i32 3
  store i32 %1545, i32* %regnum3272, align 4
  %1548 = load i32, i32* %regnum, align 4
  %cmp3273 = icmp sle i32 %1548, 255
  br i1 %cmp3273, label %land.lhs.true.3275, label %if.end.3358

land.lhs.true.3275:                               ; preds = %cond.end.3256
  %1549 = load i32, i32* %regnum, align 4
  %cmp3276 = icmp sgt i32 %1549, 0
  br i1 %cmp3276, label %if.then.3278, label %if.end.3358

if.then.3278:                                     ; preds = %land.lhs.true.3275
  br label %do.body.3279

do.body.3279:                                     ; preds = %if.then.3278
  br label %while.cond.3280

while.cond.3280:                                  ; preds = %do.end.3352, %do.body.3279
  %1550 = load i8*, i8** %b, align 8
  %1551 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3281 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1551, i32 0, i32 0
  %1552 = load i8*, i8** %buffer3281, align 8
  %sub.ptr.lhs.cast3282 = ptrtoint i8* %1550 to i64
  %sub.ptr.rhs.cast3283 = ptrtoint i8* %1552 to i64
  %sub.ptr.sub3284 = sub i64 %sub.ptr.lhs.cast3282, %sub.ptr.rhs.cast3283
  %add3285 = add nsw i64 %sub.ptr.sub3284, 2
  %1553 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3286 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1553, i32 0, i32 1
  %1554 = load i64, i64* %allocated3286, align 8
  %cmp3287 = icmp ugt i64 %add3285, %1554
  br i1 %cmp3287, label %while.body.3289, label %while.end.3353

while.body.3289:                                  ; preds = %while.cond.3280
  br label %do.body.3290

do.body.3290:                                     ; preds = %while.body.3289
  %1555 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3292 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1555, i32 0, i32 0
  %1556 = load i8*, i8** %buffer3292, align 8
  store i8* %1556, i8** %old_buffer3291, align 8
  %1557 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3293 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1557, i32 0, i32 1
  %1558 = load i64, i64* %allocated3293, align 8
  %cmp3294 = icmp eq i64 %1558, 32768
  br i1 %cmp3294, label %if.then.3296, label %if.end.3297

if.then.3296:                                     ; preds = %do.body.3290
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.3297:                                      ; preds = %do.body.3290
  %1559 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3298 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1559, i32 0, i32 1
  %1560 = load i64, i64* %allocated3298, align 8
  %shl3299 = shl i64 %1560, 1
  store i64 %shl3299, i64* %allocated3298, align 8
  %1561 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3300 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1561, i32 0, i32 1
  %1562 = load i64, i64* %allocated3300, align 8
  %cmp3301 = icmp ugt i64 %1562, 32768
  br i1 %cmp3301, label %if.then.3303, label %if.end.3305

if.then.3303:                                     ; preds = %if.end.3297
  %1563 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3304 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1563, i32 0, i32 1
  store i64 32768, i64* %allocated3304, align 8
  br label %if.end.3305

if.end.3305:                                      ; preds = %if.then.3303, %if.end.3297
  %1564 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3306 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1564, i32 0, i32 0
  %1565 = load i8*, i8** %buffer3306, align 8
  %1566 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3307 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1566, i32 0, i32 1
  %1567 = load i64, i64* %allocated3307, align 8
  %mul3308 = mul i64 %1567, 1
  %call3309 = call i8* @xrealloc(i8* %1565, i64 %mul3308)
  %1568 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3310 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1568, i32 0, i32 0
  store i8* %call3309, i8** %buffer3310, align 8
  %1569 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3311 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1569, i32 0, i32 0
  %1570 = load i8*, i8** %buffer3311, align 8
  %cmp3312 = icmp eq i8* %1570, null
  br i1 %cmp3312, label %if.then.3314, label %if.end.3315

if.then.3314:                                     ; preds = %if.end.3305
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.3315:                                      ; preds = %if.end.3305
  %1571 = load i8*, i8** %old_buffer3291, align 8
  %1572 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3316 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1572, i32 0, i32 0
  %1573 = load i8*, i8** %buffer3316, align 8
  %cmp3317 = icmp ne i8* %1571, %1573
  br i1 %cmp3317, label %if.then.3319, label %if.end.3351

if.then.3319:                                     ; preds = %if.end.3315
  %1574 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3321 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1574, i32 0, i32 0
  %1575 = load i8*, i8** %buffer3321, align 8
  store i8* %1575, i8** %new_buffer3320, align 8
  %1576 = load i8*, i8** %new_buffer3320, align 8
  %1577 = load i8*, i8** %b, align 8
  %1578 = load i8*, i8** %old_buffer3291, align 8
  %sub.ptr.lhs.cast3322 = ptrtoint i8* %1577 to i64
  %sub.ptr.rhs.cast3323 = ptrtoint i8* %1578 to i64
  %sub.ptr.sub3324 = sub i64 %sub.ptr.lhs.cast3322, %sub.ptr.rhs.cast3323
  %add.ptr3325 = getelementptr inbounds i8, i8* %1576, i64 %sub.ptr.sub3324
  store i8* %add.ptr3325, i8** %b, align 8
  %1579 = load i8*, i8** %new_buffer3320, align 8
  %1580 = load i8*, i8** %begalt, align 8
  %1581 = load i8*, i8** %old_buffer3291, align 8
  %sub.ptr.lhs.cast3326 = ptrtoint i8* %1580 to i64
  %sub.ptr.rhs.cast3327 = ptrtoint i8* %1581 to i64
  %sub.ptr.sub3328 = sub i64 %sub.ptr.lhs.cast3326, %sub.ptr.rhs.cast3327
  %add.ptr3329 = getelementptr inbounds i8, i8* %1579, i64 %sub.ptr.sub3328
  store i8* %add.ptr3329, i8** %begalt, align 8
  %1582 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3330 = icmp ne i8* %1582, null
  br i1 %tobool3330, label %if.then.3331, label %if.end.3336

if.then.3331:                                     ; preds = %if.then.3319
  %1583 = load i8*, i8** %new_buffer3320, align 8
  %1584 = load i8*, i8** %fixup_alt_jump, align 8
  %1585 = load i8*, i8** %old_buffer3291, align 8
  %sub.ptr.lhs.cast3332 = ptrtoint i8* %1584 to i64
  %sub.ptr.rhs.cast3333 = ptrtoint i8* %1585 to i64
  %sub.ptr.sub3334 = sub i64 %sub.ptr.lhs.cast3332, %sub.ptr.rhs.cast3333
  %add.ptr3335 = getelementptr inbounds i8, i8* %1583, i64 %sub.ptr.sub3334
  store i8* %add.ptr3335, i8** %fixup_alt_jump, align 8
  br label %if.end.3336

if.end.3336:                                      ; preds = %if.then.3331, %if.then.3319
  %1586 = load i8*, i8** %laststart, align 8
  %tobool3337 = icmp ne i8* %1586, null
  br i1 %tobool3337, label %if.then.3338, label %if.end.3343

if.then.3338:                                     ; preds = %if.end.3336
  %1587 = load i8*, i8** %new_buffer3320, align 8
  %1588 = load i8*, i8** %laststart, align 8
  %1589 = load i8*, i8** %old_buffer3291, align 8
  %sub.ptr.lhs.cast3339 = ptrtoint i8* %1588 to i64
  %sub.ptr.rhs.cast3340 = ptrtoint i8* %1589 to i64
  %sub.ptr.sub3341 = sub i64 %sub.ptr.lhs.cast3339, %sub.ptr.rhs.cast3340
  %add.ptr3342 = getelementptr inbounds i8, i8* %1587, i64 %sub.ptr.sub3341
  store i8* %add.ptr3342, i8** %laststart, align 8
  br label %if.end.3343

if.end.3343:                                      ; preds = %if.then.3338, %if.end.3336
  %1590 = load i8*, i8** %pending_exact, align 8
  %tobool3344 = icmp ne i8* %1590, null
  br i1 %tobool3344, label %if.then.3345, label %if.end.3350

if.then.3345:                                     ; preds = %if.end.3343
  %1591 = load i8*, i8** %new_buffer3320, align 8
  %1592 = load i8*, i8** %pending_exact, align 8
  %1593 = load i8*, i8** %old_buffer3291, align 8
  %sub.ptr.lhs.cast3346 = ptrtoint i8* %1592 to i64
  %sub.ptr.rhs.cast3347 = ptrtoint i8* %1593 to i64
  %sub.ptr.sub3348 = sub i64 %sub.ptr.lhs.cast3346, %sub.ptr.rhs.cast3347
  %add.ptr3349 = getelementptr inbounds i8, i8* %1591, i64 %sub.ptr.sub3348
  store i8* %add.ptr3349, i8** %pending_exact, align 8
  br label %if.end.3350

if.end.3350:                                      ; preds = %if.then.3345, %if.end.3343
  br label %if.end.3351

if.end.3351:                                      ; preds = %if.end.3350, %if.end.3315
  br label %do.end.3352

do.end.3352:                                      ; preds = %if.end.3351
  br label %while.cond.3280

while.end.3353:                                   ; preds = %while.cond.3280
  %1594 = load i8*, i8** %b, align 8
  %incdec.ptr3354 = getelementptr inbounds i8, i8* %1594, i32 1
  store i8* %incdec.ptr3354, i8** %b, align 8
  store i8 6, i8* %1594, align 1
  %1595 = load i32, i32* %regnum, align 4
  %conv3355 = trunc i32 %1595 to i8
  %1596 = load i8*, i8** %b, align 8
  %incdec.ptr3356 = getelementptr inbounds i8, i8* %1596, i32 1
  store i8* %incdec.ptr3356, i8** %b, align 8
  store i8 %conv3355, i8* %1596, align 1
  br label %do.end.3357

do.end.3357:                                      ; preds = %while.end.3353
  br label %if.end.3358

if.end.3358:                                      ; preds = %do.end.3357, %land.lhs.true.3275, %cond.end.3256
  %avail3359 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1597 = load i64, i64* %avail3359, align 8
  %inc3360 = add i64 %1597, 1
  store i64 %inc3360, i64* %avail3359, align 8
  store i8* null, i8** %fixup_alt_jump, align 8
  store i8* null, i8** %laststart, align 8
  %1598 = load i8*, i8** %b, align 8
  store i8* %1598, i8** %begalt, align 8
  store i8* null, i8** %pending_exact, align 8
  br label %sw.epilog.6156

sw.bb.3361:                                       ; preds = %do.end.2985
  %1599 = load i64, i64* %syntax.addr, align 8
  %and3362 = and i64 %1599, 8192
  %tobool3363 = icmp ne i64 %and3362, 0
  br i1 %tobool3363, label %if.then.3364, label %if.end.3365

if.then.3364:                                     ; preds = %sw.bb.3361
  br label %normal_backslash

if.end.3365:                                      ; preds = %sw.bb.3361
  %avail3366 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1600 = load i64, i64* %avail3366, align 8
  %cmp3367 = icmp eq i64 %1600, 0
  br i1 %cmp3367, label %if.then.3369, label %if.end.3385

if.then.3369:                                     ; preds = %if.end.3365
  %1601 = load i64, i64* %syntax.addr, align 8
  %and3370 = and i64 %1601, 131072
  %tobool3371 = icmp ne i64 %and3370, 0
  br i1 %tobool3371, label %if.then.3372, label %if.else.3373

if.then.3372:                                     ; preds = %if.then.3369
  br label %normal_backslash

if.else.3373:                                     ; preds = %if.then.3369
  br label %do.body.3374

do.body.3374:                                     ; preds = %if.else.3373
  br label %do.body.3375

do.body.3375:                                     ; preds = %do.body.3374
  %table3376 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1602 = load i32*, i32** %table3376, align 8
  %tobool3377 = icmp ne i32* %1602, null
  br i1 %tobool3377, label %if.then.3378, label %if.end.3380

if.then.3378:                                     ; preds = %do.body.3375
  %table3379 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1603 = load i32*, i32** %table3379, align 8
  %1604 = bitcast i32* %1603 to i8*
  call void @xfree(i8* %1604)
  br label %if.end.3380

if.end.3380:                                      ; preds = %if.then.3378, %do.body.3375
  br label %do.end.3381

do.end.3381:                                      ; preds = %if.end.3380
  %stack3382 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1605 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3382, align 8
  %1606 = bitcast %struct.compile_stack_elt_t* %1605 to i8*
  call void @xfree(i8* %1606)
  store i32 16, i32* %retval
  br label %do.end.6650

do.end.3383:                                      ; No predecessors!
  br label %if.end.3384

if.end.3384:                                      ; preds = %do.end.3383
  br label %if.end.3385

if.end.3385:                                      ; preds = %if.end.3384, %if.end.3365
  br label %handle_close

handle_close:                                     ; preds = %if.end.3385, %if.then.2881
  br label %do.body.3386

do.body.3386:                                     ; preds = %handle_close
  %1607 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3387 = icmp ne i8* %1607, null
  br i1 %tobool3387, label %if.then.3388, label %if.end.3394

if.then.3388:                                     ; preds = %do.body.3386
  %1608 = load i8*, i8** %fixup_alt_jump, align 8
  %1609 = load i8*, i8** %b, align 8
  %1610 = load i8*, i8** %fixup_alt_jump, align 8
  %sub.ptr.lhs.cast3389 = ptrtoint i8* %1609 to i64
  %sub.ptr.rhs.cast3390 = ptrtoint i8* %1610 to i64
  %sub.ptr.sub3391 = sub i64 %sub.ptr.lhs.cast3389, %sub.ptr.rhs.cast3390
  %sub3392 = sub nsw i64 %sub.ptr.sub3391, 3
  %conv3393 = trunc i64 %sub3392 to i32
  call void @store_op1(i32 13, i8* %1608, i32 %conv3393)
  br label %if.end.3394

if.end.3394:                                      ; preds = %if.then.3388, %do.body.3386
  br label %do.end.3395

do.end.3395:                                      ; preds = %if.end.3394
  %avail3396 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1611 = load i64, i64* %avail3396, align 8
  %cmp3397 = icmp eq i64 %1611, 0
  br i1 %cmp3397, label %if.then.3399, label %if.end.3415

if.then.3399:                                     ; preds = %do.end.3395
  %1612 = load i64, i64* %syntax.addr, align 8
  %and3400 = and i64 %1612, 131072
  %tobool3401 = icmp ne i64 %and3400, 0
  br i1 %tobool3401, label %if.then.3402, label %if.else.3403

if.then.3402:                                     ; preds = %if.then.3399
  br label %normal_char

if.else.3403:                                     ; preds = %if.then.3399
  br label %do.body.3404

do.body.3404:                                     ; preds = %if.else.3403
  br label %do.body.3405

do.body.3405:                                     ; preds = %do.body.3404
  %table3406 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1613 = load i32*, i32** %table3406, align 8
  %tobool3407 = icmp ne i32* %1613, null
  br i1 %tobool3407, label %if.then.3408, label %if.end.3410

if.then.3408:                                     ; preds = %do.body.3405
  %table3409 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1614 = load i32*, i32** %table3409, align 8
  %1615 = bitcast i32* %1614 to i8*
  call void @xfree(i8* %1615)
  br label %if.end.3410

if.end.3410:                                      ; preds = %if.then.3408, %do.body.3405
  br label %do.end.3411

do.end.3411:                                      ; preds = %if.end.3410
  %stack3412 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1616 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3412, align 8
  %1617 = bitcast %struct.compile_stack_elt_t* %1616 to i8*
  call void @xfree(i8* %1617)
  store i32 16, i32* %retval
  br label %do.end.6650

do.end.3413:                                      ; No predecessors!
  br label %if.end.3414

if.end.3414:                                      ; preds = %do.end.3413
  br label %if.end.3415

if.end.3415:                                      ; preds = %if.end.3414, %do.end.3395
  %avail3417 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1618 = load i64, i64* %avail3417, align 8
  %dec3418 = add i64 %1618, -1
  store i64 %dec3418, i64* %avail3417, align 8
  %1619 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3419 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1619, i32 0, i32 0
  %1620 = load i8*, i8** %buffer3419, align 8
  %avail3420 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1621 = load i64, i64* %avail3420, align 8
  %stack3421 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1622 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3421, align 8
  %arrayidx3422 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1622, i64 %1621
  %begalt_offset3423 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3422, i32 0, i32 0
  %1623 = load i64, i64* %begalt_offset3423, align 8
  %add.ptr3424 = getelementptr inbounds i8, i8* %1620, i64 %1623
  store i8* %add.ptr3424, i8** %begalt, align 8
  %avail3425 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1624 = load i64, i64* %avail3425, align 8
  %stack3426 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1625 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3426, align 8
  %arrayidx3427 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1625, i64 %1624
  %fixup_alt_jump3428 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3427, i32 0, i32 1
  %1626 = load i64, i64* %fixup_alt_jump3428, align 8
  %tobool3429 = icmp ne i64 %1626, 0
  br i1 %tobool3429, label %cond.true.3430, label %cond.false.3438

cond.true.3430:                                   ; preds = %if.end.3415
  %1627 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3431 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1627, i32 0, i32 0
  %1628 = load i8*, i8** %buffer3431, align 8
  %avail3432 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1629 = load i64, i64* %avail3432, align 8
  %stack3433 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1630 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3433, align 8
  %arrayidx3434 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1630, i64 %1629
  %fixup_alt_jump3435 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3434, i32 0, i32 1
  %1631 = load i64, i64* %fixup_alt_jump3435, align 8
  %add.ptr3436 = getelementptr inbounds i8, i8* %1628, i64 %1631
  %add.ptr3437 = getelementptr inbounds i8, i8* %add.ptr3436, i64 -1
  br label %cond.end.3439

cond.false.3438:                                  ; preds = %if.end.3415
  br label %cond.end.3439

cond.end.3439:                                    ; preds = %cond.false.3438, %cond.true.3430
  %cond3440 = phi i8* [ %add.ptr3437, %cond.true.3430 ], [ null, %cond.false.3438 ]
  store i8* %cond3440, i8** %fixup_alt_jump, align 8
  %1632 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3441 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1632, i32 0, i32 0
  %1633 = load i8*, i8** %buffer3441, align 8
  %avail3442 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1634 = load i64, i64* %avail3442, align 8
  %stack3443 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1635 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3443, align 8
  %arrayidx3444 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1635, i64 %1634
  %laststart_offset3445 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3444, i32 0, i32 2
  %1636 = load i64, i64* %laststart_offset3445, align 8
  %add.ptr3446 = getelementptr inbounds i8, i8* %1633, i64 %1636
  store i8* %add.ptr3446, i8** %laststart, align 8
  %avail3447 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %1637 = load i64, i64* %avail3447, align 8
  %stack3448 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1638 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3448, align 8
  %arrayidx3449 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1638, i64 %1637
  %regnum3450 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx3449, i32 0, i32 3
  %1639 = load i32, i32* %regnum3450, align 4
  store i32 %1639, i32* %regnum3416, align 4
  store i8* null, i8** %pending_exact, align 8
  %1640 = load i32, i32* %regnum3416, align 4
  %cmp3451 = icmp sle i32 %1640, 255
  br i1 %cmp3451, label %land.lhs.true.3453, label %if.end.3536

land.lhs.true.3453:                               ; preds = %cond.end.3439
  %1641 = load i32, i32* %regnum3416, align 4
  %cmp3454 = icmp sgt i32 %1641, 0
  br i1 %cmp3454, label %if.then.3456, label %if.end.3536

if.then.3456:                                     ; preds = %land.lhs.true.3453
  br label %do.body.3457

do.body.3457:                                     ; preds = %if.then.3456
  br label %while.cond.3458

while.cond.3458:                                  ; preds = %do.end.3530, %do.body.3457
  %1642 = load i8*, i8** %b, align 8
  %1643 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3459 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1643, i32 0, i32 0
  %1644 = load i8*, i8** %buffer3459, align 8
  %sub.ptr.lhs.cast3460 = ptrtoint i8* %1642 to i64
  %sub.ptr.rhs.cast3461 = ptrtoint i8* %1644 to i64
  %sub.ptr.sub3462 = sub i64 %sub.ptr.lhs.cast3460, %sub.ptr.rhs.cast3461
  %add3463 = add nsw i64 %sub.ptr.sub3462, 2
  %1645 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3464 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1645, i32 0, i32 1
  %1646 = load i64, i64* %allocated3464, align 8
  %cmp3465 = icmp ugt i64 %add3463, %1646
  br i1 %cmp3465, label %while.body.3467, label %while.end.3531

while.body.3467:                                  ; preds = %while.cond.3458
  br label %do.body.3468

do.body.3468:                                     ; preds = %while.body.3467
  %1647 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3470 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1647, i32 0, i32 0
  %1648 = load i8*, i8** %buffer3470, align 8
  store i8* %1648, i8** %old_buffer3469, align 8
  %1649 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3471 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1649, i32 0, i32 1
  %1650 = load i64, i64* %allocated3471, align 8
  %cmp3472 = icmp eq i64 %1650, 32768
  br i1 %cmp3472, label %if.then.3474, label %if.end.3475

if.then.3474:                                     ; preds = %do.body.3468
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.3475:                                      ; preds = %do.body.3468
  %1651 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3476 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1651, i32 0, i32 1
  %1652 = load i64, i64* %allocated3476, align 8
  %shl3477 = shl i64 %1652, 1
  store i64 %shl3477, i64* %allocated3476, align 8
  %1653 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3478 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1653, i32 0, i32 1
  %1654 = load i64, i64* %allocated3478, align 8
  %cmp3479 = icmp ugt i64 %1654, 32768
  br i1 %cmp3479, label %if.then.3481, label %if.end.3483

if.then.3481:                                     ; preds = %if.end.3475
  %1655 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3482 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1655, i32 0, i32 1
  store i64 32768, i64* %allocated3482, align 8
  br label %if.end.3483

if.end.3483:                                      ; preds = %if.then.3481, %if.end.3475
  %1656 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3484 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1656, i32 0, i32 0
  %1657 = load i8*, i8** %buffer3484, align 8
  %1658 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3485 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1658, i32 0, i32 1
  %1659 = load i64, i64* %allocated3485, align 8
  %mul3486 = mul i64 %1659, 1
  %call3487 = call i8* @xrealloc(i8* %1657, i64 %mul3486)
  %1660 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3488 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1660, i32 0, i32 0
  store i8* %call3487, i8** %buffer3488, align 8
  %1661 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3489 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1661, i32 0, i32 0
  %1662 = load i8*, i8** %buffer3489, align 8
  %cmp3490 = icmp eq i8* %1662, null
  br i1 %cmp3490, label %if.then.3492, label %if.end.3493

if.then.3492:                                     ; preds = %if.end.3483
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.3493:                                      ; preds = %if.end.3483
  %1663 = load i8*, i8** %old_buffer3469, align 8
  %1664 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3494 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1664, i32 0, i32 0
  %1665 = load i8*, i8** %buffer3494, align 8
  %cmp3495 = icmp ne i8* %1663, %1665
  br i1 %cmp3495, label %if.then.3497, label %if.end.3529

if.then.3497:                                     ; preds = %if.end.3493
  %1666 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3499 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1666, i32 0, i32 0
  %1667 = load i8*, i8** %buffer3499, align 8
  store i8* %1667, i8** %new_buffer3498, align 8
  %1668 = load i8*, i8** %new_buffer3498, align 8
  %1669 = load i8*, i8** %b, align 8
  %1670 = load i8*, i8** %old_buffer3469, align 8
  %sub.ptr.lhs.cast3500 = ptrtoint i8* %1669 to i64
  %sub.ptr.rhs.cast3501 = ptrtoint i8* %1670 to i64
  %sub.ptr.sub3502 = sub i64 %sub.ptr.lhs.cast3500, %sub.ptr.rhs.cast3501
  %add.ptr3503 = getelementptr inbounds i8, i8* %1668, i64 %sub.ptr.sub3502
  store i8* %add.ptr3503, i8** %b, align 8
  %1671 = load i8*, i8** %new_buffer3498, align 8
  %1672 = load i8*, i8** %begalt, align 8
  %1673 = load i8*, i8** %old_buffer3469, align 8
  %sub.ptr.lhs.cast3504 = ptrtoint i8* %1672 to i64
  %sub.ptr.rhs.cast3505 = ptrtoint i8* %1673 to i64
  %sub.ptr.sub3506 = sub i64 %sub.ptr.lhs.cast3504, %sub.ptr.rhs.cast3505
  %add.ptr3507 = getelementptr inbounds i8, i8* %1671, i64 %sub.ptr.sub3506
  store i8* %add.ptr3507, i8** %begalt, align 8
  %1674 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3508 = icmp ne i8* %1674, null
  br i1 %tobool3508, label %if.then.3509, label %if.end.3514

if.then.3509:                                     ; preds = %if.then.3497
  %1675 = load i8*, i8** %new_buffer3498, align 8
  %1676 = load i8*, i8** %fixup_alt_jump, align 8
  %1677 = load i8*, i8** %old_buffer3469, align 8
  %sub.ptr.lhs.cast3510 = ptrtoint i8* %1676 to i64
  %sub.ptr.rhs.cast3511 = ptrtoint i8* %1677 to i64
  %sub.ptr.sub3512 = sub i64 %sub.ptr.lhs.cast3510, %sub.ptr.rhs.cast3511
  %add.ptr3513 = getelementptr inbounds i8, i8* %1675, i64 %sub.ptr.sub3512
  store i8* %add.ptr3513, i8** %fixup_alt_jump, align 8
  br label %if.end.3514

if.end.3514:                                      ; preds = %if.then.3509, %if.then.3497
  %1678 = load i8*, i8** %laststart, align 8
  %tobool3515 = icmp ne i8* %1678, null
  br i1 %tobool3515, label %if.then.3516, label %if.end.3521

if.then.3516:                                     ; preds = %if.end.3514
  %1679 = load i8*, i8** %new_buffer3498, align 8
  %1680 = load i8*, i8** %laststart, align 8
  %1681 = load i8*, i8** %old_buffer3469, align 8
  %sub.ptr.lhs.cast3517 = ptrtoint i8* %1680 to i64
  %sub.ptr.rhs.cast3518 = ptrtoint i8* %1681 to i64
  %sub.ptr.sub3519 = sub i64 %sub.ptr.lhs.cast3517, %sub.ptr.rhs.cast3518
  %add.ptr3520 = getelementptr inbounds i8, i8* %1679, i64 %sub.ptr.sub3519
  store i8* %add.ptr3520, i8** %laststart, align 8
  br label %if.end.3521

if.end.3521:                                      ; preds = %if.then.3516, %if.end.3514
  %1682 = load i8*, i8** %pending_exact, align 8
  %tobool3522 = icmp ne i8* %1682, null
  br i1 %tobool3522, label %if.then.3523, label %if.end.3528

if.then.3523:                                     ; preds = %if.end.3521
  %1683 = load i8*, i8** %new_buffer3498, align 8
  %1684 = load i8*, i8** %pending_exact, align 8
  %1685 = load i8*, i8** %old_buffer3469, align 8
  %sub.ptr.lhs.cast3524 = ptrtoint i8* %1684 to i64
  %sub.ptr.rhs.cast3525 = ptrtoint i8* %1685 to i64
  %sub.ptr.sub3526 = sub i64 %sub.ptr.lhs.cast3524, %sub.ptr.rhs.cast3525
  %add.ptr3527 = getelementptr inbounds i8, i8* %1683, i64 %sub.ptr.sub3526
  store i8* %add.ptr3527, i8** %pending_exact, align 8
  br label %if.end.3528

if.end.3528:                                      ; preds = %if.then.3523, %if.end.3521
  br label %if.end.3529

if.end.3529:                                      ; preds = %if.end.3528, %if.end.3493
  br label %do.end.3530

do.end.3530:                                      ; preds = %if.end.3529
  br label %while.cond.3458

while.end.3531:                                   ; preds = %while.cond.3458
  %1686 = load i8*, i8** %b, align 8
  %incdec.ptr3532 = getelementptr inbounds i8, i8* %1686, i32 1
  store i8* %incdec.ptr3532, i8** %b, align 8
  store i8 7, i8* %1686, align 1
  %1687 = load i32, i32* %regnum3416, align 4
  %conv3533 = trunc i32 %1687 to i8
  %1688 = load i8*, i8** %b, align 8
  %incdec.ptr3534 = getelementptr inbounds i8, i8* %1688, i32 1
  store i8* %incdec.ptr3534, i8** %b, align 8
  store i8 %conv3533, i8* %1688, align 1
  br label %do.end.3535

do.end.3535:                                      ; preds = %while.end.3531
  br label %if.end.3536

if.end.3536:                                      ; preds = %do.end.3535, %land.lhs.true.3453, %cond.end.3439
  br label %sw.epilog.6156

sw.bb.3537:                                       ; preds = %do.end.2985
  %1689 = load i64, i64* %syntax.addr, align 8
  %and3538 = and i64 %1689, 1024
  %tobool3539 = icmp ne i64 %and3538, 0
  br i1 %tobool3539, label %if.then.3543, label %lor.lhs.false.3540

lor.lhs.false.3540:                               ; preds = %sw.bb.3537
  %1690 = load i64, i64* %syntax.addr, align 8
  %and3541 = and i64 %1690, 32768
  %tobool3542 = icmp ne i64 %and3541, 0
  br i1 %tobool3542, label %if.then.3543, label %if.end.3544

if.then.3543:                                     ; preds = %lor.lhs.false.3540, %sw.bb.3537
  br label %normal_backslash

if.end.3544:                                      ; preds = %lor.lhs.false.3540
  br label %handle_alt

handle_alt:                                       ; preds = %if.end.3544, %if.then.2891, %if.then.2886
  %1691 = load i64, i64* %syntax.addr, align 8
  %and3545 = and i64 %1691, 1024
  %tobool3546 = icmp ne i64 %and3545, 0
  br i1 %tobool3546, label %if.then.3547, label %if.end.3548

if.then.3547:                                     ; preds = %handle_alt
  br label %normal_char

if.end.3548:                                      ; preds = %handle_alt
  br label %while.cond.3549

while.cond.3549:                                  ; preds = %do.end.3621, %if.end.3548
  %1692 = load i8*, i8** %b, align 8
  %1693 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3550 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1693, i32 0, i32 0
  %1694 = load i8*, i8** %buffer3550, align 8
  %sub.ptr.lhs.cast3551 = ptrtoint i8* %1692 to i64
  %sub.ptr.rhs.cast3552 = ptrtoint i8* %1694 to i64
  %sub.ptr.sub3553 = sub i64 %sub.ptr.lhs.cast3551, %sub.ptr.rhs.cast3552
  %add3554 = add nsw i64 %sub.ptr.sub3553, 3
  %1695 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3555 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1695, i32 0, i32 1
  %1696 = load i64, i64* %allocated3555, align 8
  %cmp3556 = icmp ugt i64 %add3554, %1696
  br i1 %cmp3556, label %while.body.3558, label %while.end.3622

while.body.3558:                                  ; preds = %while.cond.3549
  br label %do.body.3559

do.body.3559:                                     ; preds = %while.body.3558
  %1697 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3561 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1697, i32 0, i32 0
  %1698 = load i8*, i8** %buffer3561, align 8
  store i8* %1698, i8** %old_buffer3560, align 8
  %1699 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3562 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1699, i32 0, i32 1
  %1700 = load i64, i64* %allocated3562, align 8
  %cmp3563 = icmp eq i64 %1700, 32768
  br i1 %cmp3563, label %if.then.3565, label %if.end.3566

if.then.3565:                                     ; preds = %do.body.3559
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.3566:                                      ; preds = %do.body.3559
  %1701 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3567 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1701, i32 0, i32 1
  %1702 = load i64, i64* %allocated3567, align 8
  %shl3568 = shl i64 %1702, 1
  store i64 %shl3568, i64* %allocated3567, align 8
  %1703 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3569 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1703, i32 0, i32 1
  %1704 = load i64, i64* %allocated3569, align 8
  %cmp3570 = icmp ugt i64 %1704, 32768
  br i1 %cmp3570, label %if.then.3572, label %if.end.3574

if.then.3572:                                     ; preds = %if.end.3566
  %1705 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3573 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1705, i32 0, i32 1
  store i64 32768, i64* %allocated3573, align 8
  br label %if.end.3574

if.end.3574:                                      ; preds = %if.then.3572, %if.end.3566
  %1706 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3575 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1706, i32 0, i32 0
  %1707 = load i8*, i8** %buffer3575, align 8
  %1708 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3576 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1708, i32 0, i32 1
  %1709 = load i64, i64* %allocated3576, align 8
  %mul3577 = mul i64 %1709, 1
  %call3578 = call i8* @xrealloc(i8* %1707, i64 %mul3577)
  %1710 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3579 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1710, i32 0, i32 0
  store i8* %call3578, i8** %buffer3579, align 8
  %1711 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3580 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1711, i32 0, i32 0
  %1712 = load i8*, i8** %buffer3580, align 8
  %cmp3581 = icmp eq i8* %1712, null
  br i1 %cmp3581, label %if.then.3583, label %if.end.3584

if.then.3583:                                     ; preds = %if.end.3574
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.3584:                                      ; preds = %if.end.3574
  %1713 = load i8*, i8** %old_buffer3560, align 8
  %1714 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3585 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1714, i32 0, i32 0
  %1715 = load i8*, i8** %buffer3585, align 8
  %cmp3586 = icmp ne i8* %1713, %1715
  br i1 %cmp3586, label %if.then.3588, label %if.end.3620

if.then.3588:                                     ; preds = %if.end.3584
  %1716 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3590 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1716, i32 0, i32 0
  %1717 = load i8*, i8** %buffer3590, align 8
  store i8* %1717, i8** %new_buffer3589, align 8
  %1718 = load i8*, i8** %new_buffer3589, align 8
  %1719 = load i8*, i8** %b, align 8
  %1720 = load i8*, i8** %old_buffer3560, align 8
  %sub.ptr.lhs.cast3591 = ptrtoint i8* %1719 to i64
  %sub.ptr.rhs.cast3592 = ptrtoint i8* %1720 to i64
  %sub.ptr.sub3593 = sub i64 %sub.ptr.lhs.cast3591, %sub.ptr.rhs.cast3592
  %add.ptr3594 = getelementptr inbounds i8, i8* %1718, i64 %sub.ptr.sub3593
  store i8* %add.ptr3594, i8** %b, align 8
  %1721 = load i8*, i8** %new_buffer3589, align 8
  %1722 = load i8*, i8** %begalt, align 8
  %1723 = load i8*, i8** %old_buffer3560, align 8
  %sub.ptr.lhs.cast3595 = ptrtoint i8* %1722 to i64
  %sub.ptr.rhs.cast3596 = ptrtoint i8* %1723 to i64
  %sub.ptr.sub3597 = sub i64 %sub.ptr.lhs.cast3595, %sub.ptr.rhs.cast3596
  %add.ptr3598 = getelementptr inbounds i8, i8* %1721, i64 %sub.ptr.sub3597
  store i8* %add.ptr3598, i8** %begalt, align 8
  %1724 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3599 = icmp ne i8* %1724, null
  br i1 %tobool3599, label %if.then.3600, label %if.end.3605

if.then.3600:                                     ; preds = %if.then.3588
  %1725 = load i8*, i8** %new_buffer3589, align 8
  %1726 = load i8*, i8** %fixup_alt_jump, align 8
  %1727 = load i8*, i8** %old_buffer3560, align 8
  %sub.ptr.lhs.cast3601 = ptrtoint i8* %1726 to i64
  %sub.ptr.rhs.cast3602 = ptrtoint i8* %1727 to i64
  %sub.ptr.sub3603 = sub i64 %sub.ptr.lhs.cast3601, %sub.ptr.rhs.cast3602
  %add.ptr3604 = getelementptr inbounds i8, i8* %1725, i64 %sub.ptr.sub3603
  store i8* %add.ptr3604, i8** %fixup_alt_jump, align 8
  br label %if.end.3605

if.end.3605:                                      ; preds = %if.then.3600, %if.then.3588
  %1728 = load i8*, i8** %laststart, align 8
  %tobool3606 = icmp ne i8* %1728, null
  br i1 %tobool3606, label %if.then.3607, label %if.end.3612

if.then.3607:                                     ; preds = %if.end.3605
  %1729 = load i8*, i8** %new_buffer3589, align 8
  %1730 = load i8*, i8** %laststart, align 8
  %1731 = load i8*, i8** %old_buffer3560, align 8
  %sub.ptr.lhs.cast3608 = ptrtoint i8* %1730 to i64
  %sub.ptr.rhs.cast3609 = ptrtoint i8* %1731 to i64
  %sub.ptr.sub3610 = sub i64 %sub.ptr.lhs.cast3608, %sub.ptr.rhs.cast3609
  %add.ptr3611 = getelementptr inbounds i8, i8* %1729, i64 %sub.ptr.sub3610
  store i8* %add.ptr3611, i8** %laststart, align 8
  br label %if.end.3612

if.end.3612:                                      ; preds = %if.then.3607, %if.end.3605
  %1732 = load i8*, i8** %pending_exact, align 8
  %tobool3613 = icmp ne i8* %1732, null
  br i1 %tobool3613, label %if.then.3614, label %if.end.3619

if.then.3614:                                     ; preds = %if.end.3612
  %1733 = load i8*, i8** %new_buffer3589, align 8
  %1734 = load i8*, i8** %pending_exact, align 8
  %1735 = load i8*, i8** %old_buffer3560, align 8
  %sub.ptr.lhs.cast3615 = ptrtoint i8* %1734 to i64
  %sub.ptr.rhs.cast3616 = ptrtoint i8* %1735 to i64
  %sub.ptr.sub3617 = sub i64 %sub.ptr.lhs.cast3615, %sub.ptr.rhs.cast3616
  %add.ptr3618 = getelementptr inbounds i8, i8* %1733, i64 %sub.ptr.sub3617
  store i8* %add.ptr3618, i8** %pending_exact, align 8
  br label %if.end.3619

if.end.3619:                                      ; preds = %if.then.3614, %if.end.3612
  br label %if.end.3620

if.end.3620:                                      ; preds = %if.end.3619, %if.end.3584
  br label %do.end.3621

do.end.3621:                                      ; preds = %if.end.3620
  br label %while.cond.3549

while.end.3622:                                   ; preds = %while.cond.3549
  %1736 = load i8*, i8** %begalt, align 8
  %1737 = load i8*, i8** %b, align 8
  %add.ptr3623 = getelementptr inbounds i8, i8* %1737, i64 6
  %1738 = load i8*, i8** %begalt, align 8
  %sub.ptr.lhs.cast3624 = ptrtoint i8* %add.ptr3623 to i64
  %sub.ptr.rhs.cast3625 = ptrtoint i8* %1738 to i64
  %sub.ptr.sub3626 = sub i64 %sub.ptr.lhs.cast3624, %sub.ptr.rhs.cast3625
  %sub3627 = sub nsw i64 %sub.ptr.sub3626, 3
  %conv3628 = trunc i64 %sub3627 to i32
  %1739 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 14, i8* %1736, i32 %conv3628, i8* %1739)
  store i8* null, i8** %pending_exact, align 8
  %1740 = load i8*, i8** %b, align 8
  %add.ptr3629 = getelementptr inbounds i8, i8* %1740, i64 3
  store i8* %add.ptr3629, i8** %b, align 8
  br label %do.body.3630

do.body.3630:                                     ; preds = %while.end.3622
  %1741 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3631 = icmp ne i8* %1741, null
  br i1 %tobool3631, label %if.then.3632, label %if.end.3638

if.then.3632:                                     ; preds = %do.body.3630
  %1742 = load i8*, i8** %fixup_alt_jump, align 8
  %1743 = load i8*, i8** %b, align 8
  %1744 = load i8*, i8** %fixup_alt_jump, align 8
  %sub.ptr.lhs.cast3633 = ptrtoint i8* %1743 to i64
  %sub.ptr.rhs.cast3634 = ptrtoint i8* %1744 to i64
  %sub.ptr.sub3635 = sub i64 %sub.ptr.lhs.cast3633, %sub.ptr.rhs.cast3634
  %sub3636 = sub nsw i64 %sub.ptr.sub3635, 3
  %conv3637 = trunc i64 %sub3636 to i32
  call void @store_op1(i32 13, i8* %1742, i32 %conv3637)
  br label %if.end.3638

if.end.3638:                                      ; preds = %if.then.3632, %do.body.3630
  br label %do.end.3639

do.end.3639:                                      ; preds = %if.end.3638
  %1745 = load i8*, i8** %b, align 8
  store i8* %1745, i8** %fixup_alt_jump, align 8
  br label %while.cond.3640

while.cond.3640:                                  ; preds = %do.end.3712, %do.end.3639
  %1746 = load i8*, i8** %b, align 8
  %1747 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3641 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1747, i32 0, i32 0
  %1748 = load i8*, i8** %buffer3641, align 8
  %sub.ptr.lhs.cast3642 = ptrtoint i8* %1746 to i64
  %sub.ptr.rhs.cast3643 = ptrtoint i8* %1748 to i64
  %sub.ptr.sub3644 = sub i64 %sub.ptr.lhs.cast3642, %sub.ptr.rhs.cast3643
  %add3645 = add nsw i64 %sub.ptr.sub3644, 3
  %1749 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3646 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1749, i32 0, i32 1
  %1750 = load i64, i64* %allocated3646, align 8
  %cmp3647 = icmp ugt i64 %add3645, %1750
  br i1 %cmp3647, label %while.body.3649, label %while.end.3713

while.body.3649:                                  ; preds = %while.cond.3640
  br label %do.body.3650

do.body.3650:                                     ; preds = %while.body.3649
  %1751 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3652 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1751, i32 0, i32 0
  %1752 = load i8*, i8** %buffer3652, align 8
  store i8* %1752, i8** %old_buffer3651, align 8
  %1753 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3653 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1753, i32 0, i32 1
  %1754 = load i64, i64* %allocated3653, align 8
  %cmp3654 = icmp eq i64 %1754, 32768
  br i1 %cmp3654, label %if.then.3656, label %if.end.3657

if.then.3656:                                     ; preds = %do.body.3650
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.3657:                                      ; preds = %do.body.3650
  %1755 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3658 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1755, i32 0, i32 1
  %1756 = load i64, i64* %allocated3658, align 8
  %shl3659 = shl i64 %1756, 1
  store i64 %shl3659, i64* %allocated3658, align 8
  %1757 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3660 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1757, i32 0, i32 1
  %1758 = load i64, i64* %allocated3660, align 8
  %cmp3661 = icmp ugt i64 %1758, 32768
  br i1 %cmp3661, label %if.then.3663, label %if.end.3665

if.then.3663:                                     ; preds = %if.end.3657
  %1759 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3664 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1759, i32 0, i32 1
  store i64 32768, i64* %allocated3664, align 8
  br label %if.end.3665

if.end.3665:                                      ; preds = %if.then.3663, %if.end.3657
  %1760 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3666 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1760, i32 0, i32 0
  %1761 = load i8*, i8** %buffer3666, align 8
  %1762 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated3667 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1762, i32 0, i32 1
  %1763 = load i64, i64* %allocated3667, align 8
  %mul3668 = mul i64 %1763, 1
  %call3669 = call i8* @xrealloc(i8* %1761, i64 %mul3668)
  %1764 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3670 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1764, i32 0, i32 0
  store i8* %call3669, i8** %buffer3670, align 8
  %1765 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3671 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1765, i32 0, i32 0
  %1766 = load i8*, i8** %buffer3671, align 8
  %cmp3672 = icmp eq i8* %1766, null
  br i1 %cmp3672, label %if.then.3674, label %if.end.3675

if.then.3674:                                     ; preds = %if.end.3665
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.3675:                                      ; preds = %if.end.3665
  %1767 = load i8*, i8** %old_buffer3651, align 8
  %1768 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3676 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1768, i32 0, i32 0
  %1769 = load i8*, i8** %buffer3676, align 8
  %cmp3677 = icmp ne i8* %1767, %1769
  br i1 %cmp3677, label %if.then.3679, label %if.end.3711

if.then.3679:                                     ; preds = %if.end.3675
  %1770 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer3681 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1770, i32 0, i32 0
  %1771 = load i8*, i8** %buffer3681, align 8
  store i8* %1771, i8** %new_buffer3680, align 8
  %1772 = load i8*, i8** %new_buffer3680, align 8
  %1773 = load i8*, i8** %b, align 8
  %1774 = load i8*, i8** %old_buffer3651, align 8
  %sub.ptr.lhs.cast3682 = ptrtoint i8* %1773 to i64
  %sub.ptr.rhs.cast3683 = ptrtoint i8* %1774 to i64
  %sub.ptr.sub3684 = sub i64 %sub.ptr.lhs.cast3682, %sub.ptr.rhs.cast3683
  %add.ptr3685 = getelementptr inbounds i8, i8* %1772, i64 %sub.ptr.sub3684
  store i8* %add.ptr3685, i8** %b, align 8
  %1775 = load i8*, i8** %new_buffer3680, align 8
  %1776 = load i8*, i8** %begalt, align 8
  %1777 = load i8*, i8** %old_buffer3651, align 8
  %sub.ptr.lhs.cast3686 = ptrtoint i8* %1776 to i64
  %sub.ptr.rhs.cast3687 = ptrtoint i8* %1777 to i64
  %sub.ptr.sub3688 = sub i64 %sub.ptr.lhs.cast3686, %sub.ptr.rhs.cast3687
  %add.ptr3689 = getelementptr inbounds i8, i8* %1775, i64 %sub.ptr.sub3688
  store i8* %add.ptr3689, i8** %begalt, align 8
  %1778 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool3690 = icmp ne i8* %1778, null
  br i1 %tobool3690, label %if.then.3691, label %if.end.3696

if.then.3691:                                     ; preds = %if.then.3679
  %1779 = load i8*, i8** %new_buffer3680, align 8
  %1780 = load i8*, i8** %fixup_alt_jump, align 8
  %1781 = load i8*, i8** %old_buffer3651, align 8
  %sub.ptr.lhs.cast3692 = ptrtoint i8* %1780 to i64
  %sub.ptr.rhs.cast3693 = ptrtoint i8* %1781 to i64
  %sub.ptr.sub3694 = sub i64 %sub.ptr.lhs.cast3692, %sub.ptr.rhs.cast3693
  %add.ptr3695 = getelementptr inbounds i8, i8* %1779, i64 %sub.ptr.sub3694
  store i8* %add.ptr3695, i8** %fixup_alt_jump, align 8
  br label %if.end.3696

if.end.3696:                                      ; preds = %if.then.3691, %if.then.3679
  %1782 = load i8*, i8** %laststart, align 8
  %tobool3697 = icmp ne i8* %1782, null
  br i1 %tobool3697, label %if.then.3698, label %if.end.3703

if.then.3698:                                     ; preds = %if.end.3696
  %1783 = load i8*, i8** %new_buffer3680, align 8
  %1784 = load i8*, i8** %laststart, align 8
  %1785 = load i8*, i8** %old_buffer3651, align 8
  %sub.ptr.lhs.cast3699 = ptrtoint i8* %1784 to i64
  %sub.ptr.rhs.cast3700 = ptrtoint i8* %1785 to i64
  %sub.ptr.sub3701 = sub i64 %sub.ptr.lhs.cast3699, %sub.ptr.rhs.cast3700
  %add.ptr3702 = getelementptr inbounds i8, i8* %1783, i64 %sub.ptr.sub3701
  store i8* %add.ptr3702, i8** %laststart, align 8
  br label %if.end.3703

if.end.3703:                                      ; preds = %if.then.3698, %if.end.3696
  %1786 = load i8*, i8** %pending_exact, align 8
  %tobool3704 = icmp ne i8* %1786, null
  br i1 %tobool3704, label %if.then.3705, label %if.end.3710

if.then.3705:                                     ; preds = %if.end.3703
  %1787 = load i8*, i8** %new_buffer3680, align 8
  %1788 = load i8*, i8** %pending_exact, align 8
  %1789 = load i8*, i8** %old_buffer3651, align 8
  %sub.ptr.lhs.cast3706 = ptrtoint i8* %1788 to i64
  %sub.ptr.rhs.cast3707 = ptrtoint i8* %1789 to i64
  %sub.ptr.sub3708 = sub i64 %sub.ptr.lhs.cast3706, %sub.ptr.rhs.cast3707
  %add.ptr3709 = getelementptr inbounds i8, i8* %1787, i64 %sub.ptr.sub3708
  store i8* %add.ptr3709, i8** %pending_exact, align 8
  br label %if.end.3710

if.end.3710:                                      ; preds = %if.then.3705, %if.end.3703
  br label %if.end.3711

if.end.3711:                                      ; preds = %if.end.3710, %if.end.3675
  br label %do.end.3712

do.end.3712:                                      ; preds = %if.end.3711
  br label %while.cond.3640

while.end.3713:                                   ; preds = %while.cond.3640
  %1790 = load i8*, i8** %b, align 8
  %add.ptr3714 = getelementptr inbounds i8, i8* %1790, i64 3
  store i8* %add.ptr3714, i8** %b, align 8
  store i8* null, i8** %laststart, align 8
  %1791 = load i8*, i8** %b, align 8
  store i8* %1791, i8** %begalt, align 8
  br label %sw.epilog.6156

sw.bb.3715:                                       ; preds = %do.end.2985
  %1792 = load i64, i64* %syntax.addr, align 8
  %and3716 = and i64 %1792, 512
  %tobool3717 = icmp ne i64 %and3716, 0
  br i1 %tobool3717, label %lor.lhs.false.3718, label %if.then.3721

lor.lhs.false.3718:                               ; preds = %sw.bb.3715
  %1793 = load i64, i64* %syntax.addr, align 8
  %and3719 = and i64 %1793, 4096
  %tobool3720 = icmp ne i64 %and3719, 0
  br i1 %tobool3720, label %if.then.3721, label %if.end.3722

if.then.3721:                                     ; preds = %lor.lhs.false.3718, %sw.bb.3715
  br label %normal_backslash

if.end.3722:                                      ; preds = %lor.lhs.false.3718
  br label %handle_interval

handle_interval:                                  ; preds = %if.end.3722, %if.then.2899
  store i32 0, i32* %lower_bound, align 4
  store i32 -1, i32* %upper_bound, align 4
  %1794 = load i8*, i8** %p, align 8
  store i8* %1794, i8** %beg_interval, align 8
  br label %do.body.3723

do.body.3723:                                     ; preds = %handle_interval
  %1795 = load i8*, i8** %p, align 8
  %1796 = load i8*, i8** %pend, align 8
  %cmp3724 = icmp eq i8* %1795, %1796
  br i1 %cmp3724, label %if.then.3726, label %if.else.3737

if.then.3726:                                     ; preds = %do.body.3723
  br label %do.body.3727

do.body.3727:                                     ; preds = %if.then.3726
  br label %do.body.3728

do.body.3728:                                     ; preds = %do.body.3727
  %table3729 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1797 = load i32*, i32** %table3729, align 8
  %tobool3730 = icmp ne i32* %1797, null
  br i1 %tobool3730, label %if.then.3731, label %if.end.3733

if.then.3731:                                     ; preds = %do.body.3728
  %table3732 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1798 = load i32*, i32** %table3732, align 8
  %1799 = bitcast i32* %1798 to i8*
  call void @xfree(i8* %1799)
  br label %if.end.3733

if.end.3733:                                      ; preds = %if.then.3731, %do.body.3728
  br label %do.end.3734

do.end.3734:                                      ; preds = %if.end.3733
  %stack3735 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1800 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3735, align 8
  %1801 = bitcast %struct.compile_stack_elt_t* %1800 to i8*
  call void @xfree(i8* %1801)
  store i32 9, i32* %retval
  br label %do.end.6650

do.end.3736:                                      ; No predecessors!
  br label %if.end.3926

if.else.3737:                                     ; preds = %do.body.3723
  br label %do.body.3738

do.body.3738:                                     ; preds = %if.else.3737
  %1802 = load i8*, i8** %p, align 8
  %1803 = load i8*, i8** %pend, align 8
  %cmp3740 = icmp eq i8* %1802, %1803
  br i1 %cmp3740, label %if.then.3742, label %if.end.3743

if.then.3742:                                     ; preds = %do.body.3738
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.3743:                                      ; preds = %do.body.3738
  %1804 = load i8, i8* %multibyte, align 1
  %conv3744 = sext i8 %1804 to i32
  %tobool3745 = icmp ne i32 %conv3744, 0
  br i1 %tobool3745, label %cond.true.3746, label %cond.false.3801

cond.true.3746:                                   ; preds = %if.end.3743
  %1805 = load i8*, i8** %p, align 8
  %arrayidx3747 = getelementptr inbounds i8, i8* %1805, i64 0
  %1806 = load i8, i8* %arrayidx3747, align 1
  %conv3748 = zext i8 %1806 to i32
  %and3749 = and i32 %conv3748, 128
  %tobool3750 = icmp ne i32 %and3749, 0
  br i1 %tobool3750, label %cond.false.3754, label %cond.true.3751

cond.true.3751:                                   ; preds = %cond.true.3746
  store i32 1, i32* %len3739, align 4
  %1807 = load i8*, i8** %p, align 8
  %arrayidx3752 = getelementptr inbounds i8, i8* %1807, i64 0
  %1808 = load i8, i8* %arrayidx3752, align 1
  %conv3753 = zext i8 %1808 to i32
  br label %cond.end.3799

cond.false.3754:                                  ; preds = %cond.true.3746
  %1809 = load i8*, i8** %p, align 8
  %arrayidx3755 = getelementptr inbounds i8, i8* %1809, i64 0
  %1810 = load i8, i8* %arrayidx3755, align 1
  %conv3756 = zext i8 %1810 to i32
  %and3757 = and i32 %conv3756, 32
  %tobool3758 = icmp ne i32 %and3757, 0
  br i1 %tobool3758, label %cond.false.3774, label %cond.true.3759

cond.true.3759:                                   ; preds = %cond.false.3754
  store i32 2, i32* %len3739, align 4
  %1811 = load i8*, i8** %p, align 8
  %arrayidx3760 = getelementptr inbounds i8, i8* %1811, i64 0
  %1812 = load i8, i8* %arrayidx3760, align 1
  %conv3761 = zext i8 %1812 to i32
  %and3762 = and i32 %conv3761, 31
  %shl3763 = shl i32 %and3762, 6
  %1813 = load i8*, i8** %p, align 8
  %arrayidx3764 = getelementptr inbounds i8, i8* %1813, i64 1
  %1814 = load i8, i8* %arrayidx3764, align 1
  %conv3765 = zext i8 %1814 to i32
  %and3766 = and i32 %conv3765, 63
  %or3767 = or i32 %shl3763, %and3766
  %1815 = load i8*, i8** %p, align 8
  %arrayidx3768 = getelementptr inbounds i8, i8* %1815, i64 0
  %1816 = load i8, i8* %arrayidx3768, align 1
  %conv3769 = zext i8 %1816 to i32
  %cmp3770 = icmp slt i32 %conv3769, 194
  %cond3772 = select i1 %cmp3770, i32 4194176, i32 0
  %add3773 = add nsw i32 %or3767, %cond3772
  br label %cond.end.3797

cond.false.3774:                                  ; preds = %cond.false.3754
  %1817 = load i8*, i8** %p, align 8
  %arrayidx3775 = getelementptr inbounds i8, i8* %1817, i64 0
  %1818 = load i8, i8* %arrayidx3775, align 1
  %conv3776 = zext i8 %1818 to i32
  %and3777 = and i32 %conv3776, 16
  %tobool3778 = icmp ne i32 %and3777, 0
  br i1 %tobool3778, label %cond.false.3793, label %cond.true.3779

cond.true.3779:                                   ; preds = %cond.false.3774
  store i32 3, i32* %len3739, align 4
  %1819 = load i8*, i8** %p, align 8
  %arrayidx3780 = getelementptr inbounds i8, i8* %1819, i64 0
  %1820 = load i8, i8* %arrayidx3780, align 1
  %conv3781 = zext i8 %1820 to i32
  %and3782 = and i32 %conv3781, 15
  %shl3783 = shl i32 %and3782, 12
  %1821 = load i8*, i8** %p, align 8
  %arrayidx3784 = getelementptr inbounds i8, i8* %1821, i64 1
  %1822 = load i8, i8* %arrayidx3784, align 1
  %conv3785 = zext i8 %1822 to i32
  %and3786 = and i32 %conv3785, 63
  %shl3787 = shl i32 %and3786, 6
  %or3788 = or i32 %shl3783, %shl3787
  %1823 = load i8*, i8** %p, align 8
  %arrayidx3789 = getelementptr inbounds i8, i8* %1823, i64 2
  %1824 = load i8, i8* %arrayidx3789, align 1
  %conv3790 = zext i8 %1824 to i32
  %and3791 = and i32 %conv3790, 63
  %or3792 = or i32 %or3788, %and3791
  br label %cond.end.3795

cond.false.3793:                                  ; preds = %cond.false.3774
  %1825 = load i8*, i8** %p, align 8
  %call3794 = call i32 @string_char(i8* %1825, i8** null, i32* %len3739)
  br label %cond.end.3795

cond.end.3795:                                    ; preds = %cond.false.3793, %cond.true.3779
  %cond3796 = phi i32 [ %or3792, %cond.true.3779 ], [ %call3794, %cond.false.3793 ]
  br label %cond.end.3797

cond.end.3797:                                    ; preds = %cond.end.3795, %cond.true.3759
  %cond3798 = phi i32 [ %add3773, %cond.true.3759 ], [ %cond3796, %cond.end.3795 ]
  br label %cond.end.3799

cond.end.3799:                                    ; preds = %cond.end.3797, %cond.true.3751
  %cond3800 = phi i32 [ %conv3753, %cond.true.3751 ], [ %cond3798, %cond.end.3797 ]
  br label %cond.end.3803

cond.false.3801:                                  ; preds = %if.end.3743
  store i32 1, i32* %len3739, align 4
  %1826 = load i8*, i8** %p, align 8
  %1827 = load i8, i8* %1826, align 1
  %conv3802 = zext i8 %1827 to i32
  br label %cond.end.3803

cond.end.3803:                                    ; preds = %cond.false.3801, %cond.end.3799
  %cond3804 = phi i32 [ %cond3800, %cond.end.3799 ], [ %conv3802, %cond.false.3801 ]
  store i32 %cond3804, i32* %c, align 4
  %1828 = load i32, i32* %len3739, align 4
  %1829 = load i8*, i8** %p, align 8
  %idx.ext3805 = sext i32 %1828 to i64
  %add.ptr3806 = getelementptr inbounds i8, i8* %1829, i64 %idx.ext3805
  store i8* %add.ptr3806, i8** %p, align 8
  br label %do.end.3807

do.end.3807:                                      ; preds = %cond.end.3803
  br label %while.cond.3808

while.cond.3808:                                  ; preds = %do.end.3924, %do.end.3807
  %1830 = load i32, i32* %c, align 4
  %cmp3809 = icmp sle i32 48, %1830
  br i1 %cmp3809, label %land.rhs.3811, label %land.end.3814

land.rhs.3811:                                    ; preds = %while.cond.3808
  %1831 = load i32, i32* %c, align 4
  %cmp3812 = icmp sle i32 %1831, 57
  br label %land.end.3814

land.end.3814:                                    ; preds = %land.rhs.3811, %while.cond.3808
  %1832 = phi i1 [ false, %while.cond.3808 ], [ %cmp3812, %land.rhs.3811 ]
  br i1 %1832, label %while.body.3815, label %while.end.3925

while.body.3815:                                  ; preds = %land.end.3814
  %1833 = load i32, i32* %lower_bound, align 4
  %cmp3816 = icmp slt i32 %1833, 0
  br i1 %cmp3816, label %if.then.3818, label %if.end.3819

if.then.3818:                                     ; preds = %while.body.3815
  store i32 0, i32* %lower_bound, align 4
  br label %if.end.3819

if.end.3819:                                      ; preds = %if.then.3818, %while.body.3815
  %1834 = load i32, i32* %c, align 4
  %sub3820 = sub nsw i32 %1834, 48
  %cmp3821 = icmp slt i32 7, %sub3820
  %conv3822 = zext i1 %cmp3821 to i32
  %sub3823 = sub nsw i32 3276, %conv3822
  %1835 = load i32, i32* %lower_bound, align 4
  %cmp3824 = icmp slt i32 %sub3823, %1835
  br i1 %cmp3824, label %if.then.3826, label %if.end.3837

if.then.3826:                                     ; preds = %if.end.3819
  br label %do.body.3827

do.body.3827:                                     ; preds = %if.then.3826
  br label %do.body.3828

do.body.3828:                                     ; preds = %do.body.3827
  %table3829 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1836 = load i32*, i32** %table3829, align 8
  %tobool3830 = icmp ne i32* %1836, null
  br i1 %tobool3830, label %if.then.3831, label %if.end.3833

if.then.3831:                                     ; preds = %do.body.3828
  %table3832 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1837 = load i32*, i32** %table3832, align 8
  %1838 = bitcast i32* %1837 to i8*
  call void @xfree(i8* %1838)
  br label %if.end.3833

if.end.3833:                                      ; preds = %if.then.3831, %do.body.3828
  br label %do.end.3834

do.end.3834:                                      ; preds = %if.end.3833
  %stack3835 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1839 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3835, align 8
  %1840 = bitcast %struct.compile_stack_elt_t* %1839 to i8*
  call void @xfree(i8* %1840)
  store i32 10, i32* %retval
  br label %do.end.6650

do.end.3836:                                      ; No predecessors!
  br label %if.end.3837

if.end.3837:                                      ; preds = %do.end.3836, %if.end.3819
  %1841 = load i32, i32* %lower_bound, align 4
  %mul3838 = mul nsw i32 %1841, 10
  %1842 = load i32, i32* %c, align 4
  %add3839 = add nsw i32 %mul3838, %1842
  %sub3840 = sub nsw i32 %add3839, 48
  store i32 %sub3840, i32* %lower_bound, align 4
  %1843 = load i8*, i8** %p, align 8
  %1844 = load i8*, i8** %pend, align 8
  %cmp3841 = icmp eq i8* %1843, %1844
  br i1 %cmp3841, label %if.then.3843, label %if.end.3854

if.then.3843:                                     ; preds = %if.end.3837
  br label %do.body.3844

do.body.3844:                                     ; preds = %if.then.3843
  br label %do.body.3845

do.body.3845:                                     ; preds = %do.body.3844
  %table3846 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1845 = load i32*, i32** %table3846, align 8
  %tobool3847 = icmp ne i32* %1845, null
  br i1 %tobool3847, label %if.then.3848, label %if.end.3850

if.then.3848:                                     ; preds = %do.body.3845
  %table3849 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1846 = load i32*, i32** %table3849, align 8
  %1847 = bitcast i32* %1846 to i8*
  call void @xfree(i8* %1847)
  br label %if.end.3850

if.end.3850:                                      ; preds = %if.then.3848, %do.body.3845
  br label %do.end.3851

do.end.3851:                                      ; preds = %if.end.3850
  %stack3852 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1848 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3852, align 8
  %1849 = bitcast %struct.compile_stack_elt_t* %1848 to i8*
  call void @xfree(i8* %1849)
  store i32 9, i32* %retval
  br label %do.end.6650

do.end.3853:                                      ; No predecessors!
  br label %if.end.3854

if.end.3854:                                      ; preds = %do.end.3853, %if.end.3837
  br label %do.body.3855

do.body.3855:                                     ; preds = %if.end.3854
  %1850 = load i8*, i8** %p, align 8
  %1851 = load i8*, i8** %pend, align 8
  %cmp3857 = icmp eq i8* %1850, %1851
  br i1 %cmp3857, label %if.then.3859, label %if.end.3860

if.then.3859:                                     ; preds = %do.body.3855
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.3860:                                      ; preds = %do.body.3855
  %1852 = load i8, i8* %multibyte, align 1
  %conv3861 = sext i8 %1852 to i32
  %tobool3862 = icmp ne i32 %conv3861, 0
  br i1 %tobool3862, label %cond.true.3863, label %cond.false.3918

cond.true.3863:                                   ; preds = %if.end.3860
  %1853 = load i8*, i8** %p, align 8
  %arrayidx3864 = getelementptr inbounds i8, i8* %1853, i64 0
  %1854 = load i8, i8* %arrayidx3864, align 1
  %conv3865 = zext i8 %1854 to i32
  %and3866 = and i32 %conv3865, 128
  %tobool3867 = icmp ne i32 %and3866, 0
  br i1 %tobool3867, label %cond.false.3871, label %cond.true.3868

cond.true.3868:                                   ; preds = %cond.true.3863
  store i32 1, i32* %len3856, align 4
  %1855 = load i8*, i8** %p, align 8
  %arrayidx3869 = getelementptr inbounds i8, i8* %1855, i64 0
  %1856 = load i8, i8* %arrayidx3869, align 1
  %conv3870 = zext i8 %1856 to i32
  br label %cond.end.3916

cond.false.3871:                                  ; preds = %cond.true.3863
  %1857 = load i8*, i8** %p, align 8
  %arrayidx3872 = getelementptr inbounds i8, i8* %1857, i64 0
  %1858 = load i8, i8* %arrayidx3872, align 1
  %conv3873 = zext i8 %1858 to i32
  %and3874 = and i32 %conv3873, 32
  %tobool3875 = icmp ne i32 %and3874, 0
  br i1 %tobool3875, label %cond.false.3891, label %cond.true.3876

cond.true.3876:                                   ; preds = %cond.false.3871
  store i32 2, i32* %len3856, align 4
  %1859 = load i8*, i8** %p, align 8
  %arrayidx3877 = getelementptr inbounds i8, i8* %1859, i64 0
  %1860 = load i8, i8* %arrayidx3877, align 1
  %conv3878 = zext i8 %1860 to i32
  %and3879 = and i32 %conv3878, 31
  %shl3880 = shl i32 %and3879, 6
  %1861 = load i8*, i8** %p, align 8
  %arrayidx3881 = getelementptr inbounds i8, i8* %1861, i64 1
  %1862 = load i8, i8* %arrayidx3881, align 1
  %conv3882 = zext i8 %1862 to i32
  %and3883 = and i32 %conv3882, 63
  %or3884 = or i32 %shl3880, %and3883
  %1863 = load i8*, i8** %p, align 8
  %arrayidx3885 = getelementptr inbounds i8, i8* %1863, i64 0
  %1864 = load i8, i8* %arrayidx3885, align 1
  %conv3886 = zext i8 %1864 to i32
  %cmp3887 = icmp slt i32 %conv3886, 194
  %cond3889 = select i1 %cmp3887, i32 4194176, i32 0
  %add3890 = add nsw i32 %or3884, %cond3889
  br label %cond.end.3914

cond.false.3891:                                  ; preds = %cond.false.3871
  %1865 = load i8*, i8** %p, align 8
  %arrayidx3892 = getelementptr inbounds i8, i8* %1865, i64 0
  %1866 = load i8, i8* %arrayidx3892, align 1
  %conv3893 = zext i8 %1866 to i32
  %and3894 = and i32 %conv3893, 16
  %tobool3895 = icmp ne i32 %and3894, 0
  br i1 %tobool3895, label %cond.false.3910, label %cond.true.3896

cond.true.3896:                                   ; preds = %cond.false.3891
  store i32 3, i32* %len3856, align 4
  %1867 = load i8*, i8** %p, align 8
  %arrayidx3897 = getelementptr inbounds i8, i8* %1867, i64 0
  %1868 = load i8, i8* %arrayidx3897, align 1
  %conv3898 = zext i8 %1868 to i32
  %and3899 = and i32 %conv3898, 15
  %shl3900 = shl i32 %and3899, 12
  %1869 = load i8*, i8** %p, align 8
  %arrayidx3901 = getelementptr inbounds i8, i8* %1869, i64 1
  %1870 = load i8, i8* %arrayidx3901, align 1
  %conv3902 = zext i8 %1870 to i32
  %and3903 = and i32 %conv3902, 63
  %shl3904 = shl i32 %and3903, 6
  %or3905 = or i32 %shl3900, %shl3904
  %1871 = load i8*, i8** %p, align 8
  %arrayidx3906 = getelementptr inbounds i8, i8* %1871, i64 2
  %1872 = load i8, i8* %arrayidx3906, align 1
  %conv3907 = zext i8 %1872 to i32
  %and3908 = and i32 %conv3907, 63
  %or3909 = or i32 %or3905, %and3908
  br label %cond.end.3912

cond.false.3910:                                  ; preds = %cond.false.3891
  %1873 = load i8*, i8** %p, align 8
  %call3911 = call i32 @string_char(i8* %1873, i8** null, i32* %len3856)
  br label %cond.end.3912

cond.end.3912:                                    ; preds = %cond.false.3910, %cond.true.3896
  %cond3913 = phi i32 [ %or3909, %cond.true.3896 ], [ %call3911, %cond.false.3910 ]
  br label %cond.end.3914

cond.end.3914:                                    ; preds = %cond.end.3912, %cond.true.3876
  %cond3915 = phi i32 [ %add3890, %cond.true.3876 ], [ %cond3913, %cond.end.3912 ]
  br label %cond.end.3916

cond.end.3916:                                    ; preds = %cond.end.3914, %cond.true.3868
  %cond3917 = phi i32 [ %conv3870, %cond.true.3868 ], [ %cond3915, %cond.end.3914 ]
  br label %cond.end.3920

cond.false.3918:                                  ; preds = %if.end.3860
  store i32 1, i32* %len3856, align 4
  %1874 = load i8*, i8** %p, align 8
  %1875 = load i8, i8* %1874, align 1
  %conv3919 = zext i8 %1875 to i32
  br label %cond.end.3920

cond.end.3920:                                    ; preds = %cond.false.3918, %cond.end.3916
  %cond3921 = phi i32 [ %cond3917, %cond.end.3916 ], [ %conv3919, %cond.false.3918 ]
  store i32 %cond3921, i32* %c, align 4
  %1876 = load i32, i32* %len3856, align 4
  %1877 = load i8*, i8** %p, align 8
  %idx.ext3922 = sext i32 %1876 to i64
  %add.ptr3923 = getelementptr inbounds i8, i8* %1877, i64 %idx.ext3922
  store i8* %add.ptr3923, i8** %p, align 8
  br label %do.end.3924

do.end.3924:                                      ; preds = %cond.end.3920
  br label %while.cond.3808

while.end.3925:                                   ; preds = %land.end.3814
  br label %if.end.3926

if.end.3926:                                      ; preds = %while.end.3925, %do.end.3736
  br label %do.end.3927

do.end.3927:                                      ; preds = %if.end.3926
  %1878 = load i32, i32* %c, align 4
  %cmp3928 = icmp eq i32 %1878, 44
  br i1 %cmp3928, label %if.then.3930, label %if.else.4136

if.then.3930:                                     ; preds = %do.end.3927
  br label %do.body.3931

do.body.3931:                                     ; preds = %if.then.3930
  %1879 = load i8*, i8** %p, align 8
  %1880 = load i8*, i8** %pend, align 8
  %cmp3932 = icmp eq i8* %1879, %1880
  br i1 %cmp3932, label %if.then.3934, label %if.else.3945

if.then.3934:                                     ; preds = %do.body.3931
  br label %do.body.3935

do.body.3935:                                     ; preds = %if.then.3934
  br label %do.body.3936

do.body.3936:                                     ; preds = %do.body.3935
  %table3937 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1881 = load i32*, i32** %table3937, align 8
  %tobool3938 = icmp ne i32* %1881, null
  br i1 %tobool3938, label %if.then.3939, label %if.end.3941

if.then.3939:                                     ; preds = %do.body.3936
  %table3940 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1882 = load i32*, i32** %table3940, align 8
  %1883 = bitcast i32* %1882 to i8*
  call void @xfree(i8* %1883)
  br label %if.end.3941

if.end.3941:                                      ; preds = %if.then.3939, %do.body.3936
  br label %do.end.3942

do.end.3942:                                      ; preds = %if.end.3941
  %stack3943 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1884 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3943, align 8
  %1885 = bitcast %struct.compile_stack_elt_t* %1884 to i8*
  call void @xfree(i8* %1885)
  store i32 9, i32* %retval
  br label %do.end.6650

do.end.3944:                                      ; No predecessors!
  br label %if.end.4134

if.else.3945:                                     ; preds = %do.body.3931
  br label %do.body.3946

do.body.3946:                                     ; preds = %if.else.3945
  %1886 = load i8*, i8** %p, align 8
  %1887 = load i8*, i8** %pend, align 8
  %cmp3948 = icmp eq i8* %1886, %1887
  br i1 %cmp3948, label %if.then.3950, label %if.end.3951

if.then.3950:                                     ; preds = %do.body.3946
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.3951:                                      ; preds = %do.body.3946
  %1888 = load i8, i8* %multibyte, align 1
  %conv3952 = sext i8 %1888 to i32
  %tobool3953 = icmp ne i32 %conv3952, 0
  br i1 %tobool3953, label %cond.true.3954, label %cond.false.4009

cond.true.3954:                                   ; preds = %if.end.3951
  %1889 = load i8*, i8** %p, align 8
  %arrayidx3955 = getelementptr inbounds i8, i8* %1889, i64 0
  %1890 = load i8, i8* %arrayidx3955, align 1
  %conv3956 = zext i8 %1890 to i32
  %and3957 = and i32 %conv3956, 128
  %tobool3958 = icmp ne i32 %and3957, 0
  br i1 %tobool3958, label %cond.false.3962, label %cond.true.3959

cond.true.3959:                                   ; preds = %cond.true.3954
  store i32 1, i32* %len3947, align 4
  %1891 = load i8*, i8** %p, align 8
  %arrayidx3960 = getelementptr inbounds i8, i8* %1891, i64 0
  %1892 = load i8, i8* %arrayidx3960, align 1
  %conv3961 = zext i8 %1892 to i32
  br label %cond.end.4007

cond.false.3962:                                  ; preds = %cond.true.3954
  %1893 = load i8*, i8** %p, align 8
  %arrayidx3963 = getelementptr inbounds i8, i8* %1893, i64 0
  %1894 = load i8, i8* %arrayidx3963, align 1
  %conv3964 = zext i8 %1894 to i32
  %and3965 = and i32 %conv3964, 32
  %tobool3966 = icmp ne i32 %and3965, 0
  br i1 %tobool3966, label %cond.false.3982, label %cond.true.3967

cond.true.3967:                                   ; preds = %cond.false.3962
  store i32 2, i32* %len3947, align 4
  %1895 = load i8*, i8** %p, align 8
  %arrayidx3968 = getelementptr inbounds i8, i8* %1895, i64 0
  %1896 = load i8, i8* %arrayidx3968, align 1
  %conv3969 = zext i8 %1896 to i32
  %and3970 = and i32 %conv3969, 31
  %shl3971 = shl i32 %and3970, 6
  %1897 = load i8*, i8** %p, align 8
  %arrayidx3972 = getelementptr inbounds i8, i8* %1897, i64 1
  %1898 = load i8, i8* %arrayidx3972, align 1
  %conv3973 = zext i8 %1898 to i32
  %and3974 = and i32 %conv3973, 63
  %or3975 = or i32 %shl3971, %and3974
  %1899 = load i8*, i8** %p, align 8
  %arrayidx3976 = getelementptr inbounds i8, i8* %1899, i64 0
  %1900 = load i8, i8* %arrayidx3976, align 1
  %conv3977 = zext i8 %1900 to i32
  %cmp3978 = icmp slt i32 %conv3977, 194
  %cond3980 = select i1 %cmp3978, i32 4194176, i32 0
  %add3981 = add nsw i32 %or3975, %cond3980
  br label %cond.end.4005

cond.false.3982:                                  ; preds = %cond.false.3962
  %1901 = load i8*, i8** %p, align 8
  %arrayidx3983 = getelementptr inbounds i8, i8* %1901, i64 0
  %1902 = load i8, i8* %arrayidx3983, align 1
  %conv3984 = zext i8 %1902 to i32
  %and3985 = and i32 %conv3984, 16
  %tobool3986 = icmp ne i32 %and3985, 0
  br i1 %tobool3986, label %cond.false.4001, label %cond.true.3987

cond.true.3987:                                   ; preds = %cond.false.3982
  store i32 3, i32* %len3947, align 4
  %1903 = load i8*, i8** %p, align 8
  %arrayidx3988 = getelementptr inbounds i8, i8* %1903, i64 0
  %1904 = load i8, i8* %arrayidx3988, align 1
  %conv3989 = zext i8 %1904 to i32
  %and3990 = and i32 %conv3989, 15
  %shl3991 = shl i32 %and3990, 12
  %1905 = load i8*, i8** %p, align 8
  %arrayidx3992 = getelementptr inbounds i8, i8* %1905, i64 1
  %1906 = load i8, i8* %arrayidx3992, align 1
  %conv3993 = zext i8 %1906 to i32
  %and3994 = and i32 %conv3993, 63
  %shl3995 = shl i32 %and3994, 6
  %or3996 = or i32 %shl3991, %shl3995
  %1907 = load i8*, i8** %p, align 8
  %arrayidx3997 = getelementptr inbounds i8, i8* %1907, i64 2
  %1908 = load i8, i8* %arrayidx3997, align 1
  %conv3998 = zext i8 %1908 to i32
  %and3999 = and i32 %conv3998, 63
  %or4000 = or i32 %or3996, %and3999
  br label %cond.end.4003

cond.false.4001:                                  ; preds = %cond.false.3982
  %1909 = load i8*, i8** %p, align 8
  %call4002 = call i32 @string_char(i8* %1909, i8** null, i32* %len3947)
  br label %cond.end.4003

cond.end.4003:                                    ; preds = %cond.false.4001, %cond.true.3987
  %cond4004 = phi i32 [ %or4000, %cond.true.3987 ], [ %call4002, %cond.false.4001 ]
  br label %cond.end.4005

cond.end.4005:                                    ; preds = %cond.end.4003, %cond.true.3967
  %cond4006 = phi i32 [ %add3981, %cond.true.3967 ], [ %cond4004, %cond.end.4003 ]
  br label %cond.end.4007

cond.end.4007:                                    ; preds = %cond.end.4005, %cond.true.3959
  %cond4008 = phi i32 [ %conv3961, %cond.true.3959 ], [ %cond4006, %cond.end.4005 ]
  br label %cond.end.4011

cond.false.4009:                                  ; preds = %if.end.3951
  store i32 1, i32* %len3947, align 4
  %1910 = load i8*, i8** %p, align 8
  %1911 = load i8, i8* %1910, align 1
  %conv4010 = zext i8 %1911 to i32
  br label %cond.end.4011

cond.end.4011:                                    ; preds = %cond.false.4009, %cond.end.4007
  %cond4012 = phi i32 [ %cond4008, %cond.end.4007 ], [ %conv4010, %cond.false.4009 ]
  store i32 %cond4012, i32* %c, align 4
  %1912 = load i32, i32* %len3947, align 4
  %1913 = load i8*, i8** %p, align 8
  %idx.ext4013 = sext i32 %1912 to i64
  %add.ptr4014 = getelementptr inbounds i8, i8* %1913, i64 %idx.ext4013
  store i8* %add.ptr4014, i8** %p, align 8
  br label %do.end.4015

do.end.4015:                                      ; preds = %cond.end.4011
  br label %while.cond.4016

while.cond.4016:                                  ; preds = %do.end.4132, %do.end.4015
  %1914 = load i32, i32* %c, align 4
  %cmp4017 = icmp sle i32 48, %1914
  br i1 %cmp4017, label %land.rhs.4019, label %land.end.4022

land.rhs.4019:                                    ; preds = %while.cond.4016
  %1915 = load i32, i32* %c, align 4
  %cmp4020 = icmp sle i32 %1915, 57
  br label %land.end.4022

land.end.4022:                                    ; preds = %land.rhs.4019, %while.cond.4016
  %1916 = phi i1 [ false, %while.cond.4016 ], [ %cmp4020, %land.rhs.4019 ]
  br i1 %1916, label %while.body.4023, label %while.end.4133

while.body.4023:                                  ; preds = %land.end.4022
  %1917 = load i32, i32* %upper_bound, align 4
  %cmp4024 = icmp slt i32 %1917, 0
  br i1 %cmp4024, label %if.then.4026, label %if.end.4027

if.then.4026:                                     ; preds = %while.body.4023
  store i32 0, i32* %upper_bound, align 4
  br label %if.end.4027

if.end.4027:                                      ; preds = %if.then.4026, %while.body.4023
  %1918 = load i32, i32* %c, align 4
  %sub4028 = sub nsw i32 %1918, 48
  %cmp4029 = icmp slt i32 7, %sub4028
  %conv4030 = zext i1 %cmp4029 to i32
  %sub4031 = sub nsw i32 3276, %conv4030
  %1919 = load i32, i32* %upper_bound, align 4
  %cmp4032 = icmp slt i32 %sub4031, %1919
  br i1 %cmp4032, label %if.then.4034, label %if.end.4045

if.then.4034:                                     ; preds = %if.end.4027
  br label %do.body.4035

do.body.4035:                                     ; preds = %if.then.4034
  br label %do.body.4036

do.body.4036:                                     ; preds = %do.body.4035
  %table4037 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1920 = load i32*, i32** %table4037, align 8
  %tobool4038 = icmp ne i32* %1920, null
  br i1 %tobool4038, label %if.then.4039, label %if.end.4041

if.then.4039:                                     ; preds = %do.body.4036
  %table4040 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1921 = load i32*, i32** %table4040, align 8
  %1922 = bitcast i32* %1921 to i8*
  call void @xfree(i8* %1922)
  br label %if.end.4041

if.end.4041:                                      ; preds = %if.then.4039, %do.body.4036
  br label %do.end.4042

do.end.4042:                                      ; preds = %if.end.4041
  %stack4043 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1923 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4043, align 8
  %1924 = bitcast %struct.compile_stack_elt_t* %1923 to i8*
  call void @xfree(i8* %1924)
  store i32 10, i32* %retval
  br label %do.end.6650

do.end.4044:                                      ; No predecessors!
  br label %if.end.4045

if.end.4045:                                      ; preds = %do.end.4044, %if.end.4027
  %1925 = load i32, i32* %upper_bound, align 4
  %mul4046 = mul nsw i32 %1925, 10
  %1926 = load i32, i32* %c, align 4
  %add4047 = add nsw i32 %mul4046, %1926
  %sub4048 = sub nsw i32 %add4047, 48
  store i32 %sub4048, i32* %upper_bound, align 4
  %1927 = load i8*, i8** %p, align 8
  %1928 = load i8*, i8** %pend, align 8
  %cmp4049 = icmp eq i8* %1927, %1928
  br i1 %cmp4049, label %if.then.4051, label %if.end.4062

if.then.4051:                                     ; preds = %if.end.4045
  br label %do.body.4052

do.body.4052:                                     ; preds = %if.then.4051
  br label %do.body.4053

do.body.4053:                                     ; preds = %do.body.4052
  %table4054 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1929 = load i32*, i32** %table4054, align 8
  %tobool4055 = icmp ne i32* %1929, null
  br i1 %tobool4055, label %if.then.4056, label %if.end.4058

if.then.4056:                                     ; preds = %do.body.4053
  %table4057 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1930 = load i32*, i32** %table4057, align 8
  %1931 = bitcast i32* %1930 to i8*
  call void @xfree(i8* %1931)
  br label %if.end.4058

if.end.4058:                                      ; preds = %if.then.4056, %do.body.4053
  br label %do.end.4059

do.end.4059:                                      ; preds = %if.end.4058
  %stack4060 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1932 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4060, align 8
  %1933 = bitcast %struct.compile_stack_elt_t* %1932 to i8*
  call void @xfree(i8* %1933)
  store i32 9, i32* %retval
  br label %do.end.6650

do.end.4061:                                      ; No predecessors!
  br label %if.end.4062

if.end.4062:                                      ; preds = %do.end.4061, %if.end.4045
  br label %do.body.4063

do.body.4063:                                     ; preds = %if.end.4062
  %1934 = load i8*, i8** %p, align 8
  %1935 = load i8*, i8** %pend, align 8
  %cmp4065 = icmp eq i8* %1934, %1935
  br i1 %cmp4065, label %if.then.4067, label %if.end.4068

if.then.4067:                                     ; preds = %do.body.4063
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4068:                                      ; preds = %do.body.4063
  %1936 = load i8, i8* %multibyte, align 1
  %conv4069 = sext i8 %1936 to i32
  %tobool4070 = icmp ne i32 %conv4069, 0
  br i1 %tobool4070, label %cond.true.4071, label %cond.false.4126

cond.true.4071:                                   ; preds = %if.end.4068
  %1937 = load i8*, i8** %p, align 8
  %arrayidx4072 = getelementptr inbounds i8, i8* %1937, i64 0
  %1938 = load i8, i8* %arrayidx4072, align 1
  %conv4073 = zext i8 %1938 to i32
  %and4074 = and i32 %conv4073, 128
  %tobool4075 = icmp ne i32 %and4074, 0
  br i1 %tobool4075, label %cond.false.4079, label %cond.true.4076

cond.true.4076:                                   ; preds = %cond.true.4071
  store i32 1, i32* %len4064, align 4
  %1939 = load i8*, i8** %p, align 8
  %arrayidx4077 = getelementptr inbounds i8, i8* %1939, i64 0
  %1940 = load i8, i8* %arrayidx4077, align 1
  %conv4078 = zext i8 %1940 to i32
  br label %cond.end.4124

cond.false.4079:                                  ; preds = %cond.true.4071
  %1941 = load i8*, i8** %p, align 8
  %arrayidx4080 = getelementptr inbounds i8, i8* %1941, i64 0
  %1942 = load i8, i8* %arrayidx4080, align 1
  %conv4081 = zext i8 %1942 to i32
  %and4082 = and i32 %conv4081, 32
  %tobool4083 = icmp ne i32 %and4082, 0
  br i1 %tobool4083, label %cond.false.4099, label %cond.true.4084

cond.true.4084:                                   ; preds = %cond.false.4079
  store i32 2, i32* %len4064, align 4
  %1943 = load i8*, i8** %p, align 8
  %arrayidx4085 = getelementptr inbounds i8, i8* %1943, i64 0
  %1944 = load i8, i8* %arrayidx4085, align 1
  %conv4086 = zext i8 %1944 to i32
  %and4087 = and i32 %conv4086, 31
  %shl4088 = shl i32 %and4087, 6
  %1945 = load i8*, i8** %p, align 8
  %arrayidx4089 = getelementptr inbounds i8, i8* %1945, i64 1
  %1946 = load i8, i8* %arrayidx4089, align 1
  %conv4090 = zext i8 %1946 to i32
  %and4091 = and i32 %conv4090, 63
  %or4092 = or i32 %shl4088, %and4091
  %1947 = load i8*, i8** %p, align 8
  %arrayidx4093 = getelementptr inbounds i8, i8* %1947, i64 0
  %1948 = load i8, i8* %arrayidx4093, align 1
  %conv4094 = zext i8 %1948 to i32
  %cmp4095 = icmp slt i32 %conv4094, 194
  %cond4097 = select i1 %cmp4095, i32 4194176, i32 0
  %add4098 = add nsw i32 %or4092, %cond4097
  br label %cond.end.4122

cond.false.4099:                                  ; preds = %cond.false.4079
  %1949 = load i8*, i8** %p, align 8
  %arrayidx4100 = getelementptr inbounds i8, i8* %1949, i64 0
  %1950 = load i8, i8* %arrayidx4100, align 1
  %conv4101 = zext i8 %1950 to i32
  %and4102 = and i32 %conv4101, 16
  %tobool4103 = icmp ne i32 %and4102, 0
  br i1 %tobool4103, label %cond.false.4118, label %cond.true.4104

cond.true.4104:                                   ; preds = %cond.false.4099
  store i32 3, i32* %len4064, align 4
  %1951 = load i8*, i8** %p, align 8
  %arrayidx4105 = getelementptr inbounds i8, i8* %1951, i64 0
  %1952 = load i8, i8* %arrayidx4105, align 1
  %conv4106 = zext i8 %1952 to i32
  %and4107 = and i32 %conv4106, 15
  %shl4108 = shl i32 %and4107, 12
  %1953 = load i8*, i8** %p, align 8
  %arrayidx4109 = getelementptr inbounds i8, i8* %1953, i64 1
  %1954 = load i8, i8* %arrayidx4109, align 1
  %conv4110 = zext i8 %1954 to i32
  %and4111 = and i32 %conv4110, 63
  %shl4112 = shl i32 %and4111, 6
  %or4113 = or i32 %shl4108, %shl4112
  %1955 = load i8*, i8** %p, align 8
  %arrayidx4114 = getelementptr inbounds i8, i8* %1955, i64 2
  %1956 = load i8, i8* %arrayidx4114, align 1
  %conv4115 = zext i8 %1956 to i32
  %and4116 = and i32 %conv4115, 63
  %or4117 = or i32 %or4113, %and4116
  br label %cond.end.4120

cond.false.4118:                                  ; preds = %cond.false.4099
  %1957 = load i8*, i8** %p, align 8
  %call4119 = call i32 @string_char(i8* %1957, i8** null, i32* %len4064)
  br label %cond.end.4120

cond.end.4120:                                    ; preds = %cond.false.4118, %cond.true.4104
  %cond4121 = phi i32 [ %or4117, %cond.true.4104 ], [ %call4119, %cond.false.4118 ]
  br label %cond.end.4122

cond.end.4122:                                    ; preds = %cond.end.4120, %cond.true.4084
  %cond4123 = phi i32 [ %add4098, %cond.true.4084 ], [ %cond4121, %cond.end.4120 ]
  br label %cond.end.4124

cond.end.4124:                                    ; preds = %cond.end.4122, %cond.true.4076
  %cond4125 = phi i32 [ %conv4078, %cond.true.4076 ], [ %cond4123, %cond.end.4122 ]
  br label %cond.end.4128

cond.false.4126:                                  ; preds = %if.end.4068
  store i32 1, i32* %len4064, align 4
  %1958 = load i8*, i8** %p, align 8
  %1959 = load i8, i8* %1958, align 1
  %conv4127 = zext i8 %1959 to i32
  br label %cond.end.4128

cond.end.4128:                                    ; preds = %cond.false.4126, %cond.end.4124
  %cond4129 = phi i32 [ %cond4125, %cond.end.4124 ], [ %conv4127, %cond.false.4126 ]
  store i32 %cond4129, i32* %c, align 4
  %1960 = load i32, i32* %len4064, align 4
  %1961 = load i8*, i8** %p, align 8
  %idx.ext4130 = sext i32 %1960 to i64
  %add.ptr4131 = getelementptr inbounds i8, i8* %1961, i64 %idx.ext4130
  store i8* %add.ptr4131, i8** %p, align 8
  br label %do.end.4132

do.end.4132:                                      ; preds = %cond.end.4128
  br label %while.cond.4016

while.end.4133:                                   ; preds = %land.end.4022
  br label %if.end.4134

if.end.4134:                                      ; preds = %while.end.4133, %do.end.3944
  br label %do.end.4135

do.end.4135:                                      ; preds = %if.end.4134
  br label %if.end.4137

if.else.4136:                                     ; preds = %do.end.3927
  %1962 = load i32, i32* %lower_bound, align 4
  store i32 %1962, i32* %upper_bound, align 4
  br label %if.end.4137

if.end.4137:                                      ; preds = %if.else.4136, %do.end.4135
  %1963 = load i32, i32* %lower_bound, align 4
  %cmp4138 = icmp slt i32 %1963, 0
  br i1 %cmp4138, label %if.then.4146, label %lor.lhs.false.4140

lor.lhs.false.4140:                               ; preds = %if.end.4137
  %1964 = load i32, i32* %upper_bound, align 4
  %cmp4141 = icmp sle i32 0, %1964
  br i1 %cmp4141, label %land.lhs.true.4143, label %if.end.4157

land.lhs.true.4143:                               ; preds = %lor.lhs.false.4140
  %1965 = load i32, i32* %upper_bound, align 4
  %1966 = load i32, i32* %lower_bound, align 4
  %cmp4144 = icmp slt i32 %1965, %1966
  br i1 %cmp4144, label %if.then.4146, label %if.end.4157

if.then.4146:                                     ; preds = %land.lhs.true.4143, %if.end.4137
  br label %do.body.4147

do.body.4147:                                     ; preds = %if.then.4146
  br label %do.body.4148

do.body.4148:                                     ; preds = %do.body.4147
  %table4149 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1967 = load i32*, i32** %table4149, align 8
  %tobool4150 = icmp ne i32* %1967, null
  br i1 %tobool4150, label %if.then.4151, label %if.end.4153

if.then.4151:                                     ; preds = %do.body.4148
  %table4152 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1968 = load i32*, i32** %table4152, align 8
  %1969 = bitcast i32* %1968 to i8*
  call void @xfree(i8* %1969)
  br label %if.end.4153

if.end.4153:                                      ; preds = %if.then.4151, %do.body.4148
  br label %do.end.4154

do.end.4154:                                      ; preds = %if.end.4153
  %stack4155 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1970 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4155, align 8
  %1971 = bitcast %struct.compile_stack_elt_t* %1970 to i8*
  call void @xfree(i8* %1971)
  store i32 10, i32* %retval
  br label %do.end.6650

do.end.4156:                                      ; No predecessors!
  br label %if.end.4157

if.end.4157:                                      ; preds = %do.end.4156, %land.lhs.true.4143, %lor.lhs.false.4140
  %1972 = load i64, i64* %syntax.addr, align 8
  %and4158 = and i64 %1972, 4096
  %tobool4159 = icmp ne i64 %and4158, 0
  br i1 %tobool4159, label %if.end.4259, label %if.then.4160

if.then.4160:                                     ; preds = %if.end.4157
  %1973 = load i32, i32* %c, align 4
  %cmp4161 = icmp ne i32 %1973, 92
  br i1 %cmp4161, label %if.then.4163, label %if.end.4174

if.then.4163:                                     ; preds = %if.then.4160
  br label %do.body.4164

do.body.4164:                                     ; preds = %if.then.4163
  br label %do.body.4165

do.body.4165:                                     ; preds = %do.body.4164
  %table4166 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1974 = load i32*, i32** %table4166, align 8
  %tobool4167 = icmp ne i32* %1974, null
  br i1 %tobool4167, label %if.then.4168, label %if.end.4170

if.then.4168:                                     ; preds = %do.body.4165
  %table4169 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1975 = load i32*, i32** %table4169, align 8
  %1976 = bitcast i32* %1975 to i8*
  call void @xfree(i8* %1976)
  br label %if.end.4170

if.end.4170:                                      ; preds = %if.then.4168, %do.body.4165
  br label %do.end.4171

do.end.4171:                                      ; preds = %if.end.4170
  %stack4172 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1977 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4172, align 8
  %1978 = bitcast %struct.compile_stack_elt_t* %1977 to i8*
  call void @xfree(i8* %1978)
  store i32 10, i32* %retval
  br label %do.end.6650

do.end.4173:                                      ; No predecessors!
  br label %if.end.4174

if.end.4174:                                      ; preds = %do.end.4173, %if.then.4160
  %1979 = load i8*, i8** %p, align 8
  %1980 = load i8*, i8** %pend, align 8
  %cmp4175 = icmp eq i8* %1979, %1980
  br i1 %cmp4175, label %if.then.4177, label %if.end.4188

if.then.4177:                                     ; preds = %if.end.4174
  br label %do.body.4178

do.body.4178:                                     ; preds = %if.then.4177
  br label %do.body.4179

do.body.4179:                                     ; preds = %do.body.4178
  %table4180 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1981 = load i32*, i32** %table4180, align 8
  %tobool4181 = icmp ne i32* %1981, null
  br i1 %tobool4181, label %if.then.4182, label %if.end.4184

if.then.4182:                                     ; preds = %do.body.4179
  %table4183 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %1982 = load i32*, i32** %table4183, align 8
  %1983 = bitcast i32* %1982 to i8*
  call void @xfree(i8* %1983)
  br label %if.end.4184

if.end.4184:                                      ; preds = %if.then.4182, %do.body.4179
  br label %do.end.4185

do.end.4185:                                      ; preds = %if.end.4184
  %stack4186 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %1984 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4186, align 8
  %1985 = bitcast %struct.compile_stack_elt_t* %1984 to i8*
  call void @xfree(i8* %1985)
  store i32 5, i32* %retval
  br label %do.end.6650

do.end.4187:                                      ; No predecessors!
  br label %if.end.4188

if.end.4188:                                      ; preds = %do.end.4187, %if.end.4174
  br label %do.body.4189

do.body.4189:                                     ; preds = %if.end.4188
  %1986 = load i8*, i8** %p, align 8
  %1987 = load i8*, i8** %pend, align 8
  %cmp4191 = icmp eq i8* %1986, %1987
  br i1 %cmp4191, label %if.then.4193, label %if.end.4194

if.then.4193:                                     ; preds = %do.body.4189
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4194:                                      ; preds = %do.body.4189
  %1988 = load i8, i8* %multibyte, align 1
  %conv4195 = sext i8 %1988 to i32
  %tobool4196 = icmp ne i32 %conv4195, 0
  br i1 %tobool4196, label %cond.true.4197, label %cond.false.4252

cond.true.4197:                                   ; preds = %if.end.4194
  %1989 = load i8*, i8** %p, align 8
  %arrayidx4198 = getelementptr inbounds i8, i8* %1989, i64 0
  %1990 = load i8, i8* %arrayidx4198, align 1
  %conv4199 = zext i8 %1990 to i32
  %and4200 = and i32 %conv4199, 128
  %tobool4201 = icmp ne i32 %and4200, 0
  br i1 %tobool4201, label %cond.false.4205, label %cond.true.4202

cond.true.4202:                                   ; preds = %cond.true.4197
  store i32 1, i32* %len4190, align 4
  %1991 = load i8*, i8** %p, align 8
  %arrayidx4203 = getelementptr inbounds i8, i8* %1991, i64 0
  %1992 = load i8, i8* %arrayidx4203, align 1
  %conv4204 = zext i8 %1992 to i32
  br label %cond.end.4250

cond.false.4205:                                  ; preds = %cond.true.4197
  %1993 = load i8*, i8** %p, align 8
  %arrayidx4206 = getelementptr inbounds i8, i8* %1993, i64 0
  %1994 = load i8, i8* %arrayidx4206, align 1
  %conv4207 = zext i8 %1994 to i32
  %and4208 = and i32 %conv4207, 32
  %tobool4209 = icmp ne i32 %and4208, 0
  br i1 %tobool4209, label %cond.false.4225, label %cond.true.4210

cond.true.4210:                                   ; preds = %cond.false.4205
  store i32 2, i32* %len4190, align 4
  %1995 = load i8*, i8** %p, align 8
  %arrayidx4211 = getelementptr inbounds i8, i8* %1995, i64 0
  %1996 = load i8, i8* %arrayidx4211, align 1
  %conv4212 = zext i8 %1996 to i32
  %and4213 = and i32 %conv4212, 31
  %shl4214 = shl i32 %and4213, 6
  %1997 = load i8*, i8** %p, align 8
  %arrayidx4215 = getelementptr inbounds i8, i8* %1997, i64 1
  %1998 = load i8, i8* %arrayidx4215, align 1
  %conv4216 = zext i8 %1998 to i32
  %and4217 = and i32 %conv4216, 63
  %or4218 = or i32 %shl4214, %and4217
  %1999 = load i8*, i8** %p, align 8
  %arrayidx4219 = getelementptr inbounds i8, i8* %1999, i64 0
  %2000 = load i8, i8* %arrayidx4219, align 1
  %conv4220 = zext i8 %2000 to i32
  %cmp4221 = icmp slt i32 %conv4220, 194
  %cond4223 = select i1 %cmp4221, i32 4194176, i32 0
  %add4224 = add nsw i32 %or4218, %cond4223
  br label %cond.end.4248

cond.false.4225:                                  ; preds = %cond.false.4205
  %2001 = load i8*, i8** %p, align 8
  %arrayidx4226 = getelementptr inbounds i8, i8* %2001, i64 0
  %2002 = load i8, i8* %arrayidx4226, align 1
  %conv4227 = zext i8 %2002 to i32
  %and4228 = and i32 %conv4227, 16
  %tobool4229 = icmp ne i32 %and4228, 0
  br i1 %tobool4229, label %cond.false.4244, label %cond.true.4230

cond.true.4230:                                   ; preds = %cond.false.4225
  store i32 3, i32* %len4190, align 4
  %2003 = load i8*, i8** %p, align 8
  %arrayidx4231 = getelementptr inbounds i8, i8* %2003, i64 0
  %2004 = load i8, i8* %arrayidx4231, align 1
  %conv4232 = zext i8 %2004 to i32
  %and4233 = and i32 %conv4232, 15
  %shl4234 = shl i32 %and4233, 12
  %2005 = load i8*, i8** %p, align 8
  %arrayidx4235 = getelementptr inbounds i8, i8* %2005, i64 1
  %2006 = load i8, i8* %arrayidx4235, align 1
  %conv4236 = zext i8 %2006 to i32
  %and4237 = and i32 %conv4236, 63
  %shl4238 = shl i32 %and4237, 6
  %or4239 = or i32 %shl4234, %shl4238
  %2007 = load i8*, i8** %p, align 8
  %arrayidx4240 = getelementptr inbounds i8, i8* %2007, i64 2
  %2008 = load i8, i8* %arrayidx4240, align 1
  %conv4241 = zext i8 %2008 to i32
  %and4242 = and i32 %conv4241, 63
  %or4243 = or i32 %or4239, %and4242
  br label %cond.end.4246

cond.false.4244:                                  ; preds = %cond.false.4225
  %2009 = load i8*, i8** %p, align 8
  %call4245 = call i32 @string_char(i8* %2009, i8** null, i32* %len4190)
  br label %cond.end.4246

cond.end.4246:                                    ; preds = %cond.false.4244, %cond.true.4230
  %cond4247 = phi i32 [ %or4243, %cond.true.4230 ], [ %call4245, %cond.false.4244 ]
  br label %cond.end.4248

cond.end.4248:                                    ; preds = %cond.end.4246, %cond.true.4210
  %cond4249 = phi i32 [ %add4224, %cond.true.4210 ], [ %cond4247, %cond.end.4246 ]
  br label %cond.end.4250

cond.end.4250:                                    ; preds = %cond.end.4248, %cond.true.4202
  %cond4251 = phi i32 [ %conv4204, %cond.true.4202 ], [ %cond4249, %cond.end.4248 ]
  br label %cond.end.4254

cond.false.4252:                                  ; preds = %if.end.4194
  store i32 1, i32* %len4190, align 4
  %2010 = load i8*, i8** %p, align 8
  %2011 = load i8, i8* %2010, align 1
  %conv4253 = zext i8 %2011 to i32
  br label %cond.end.4254

cond.end.4254:                                    ; preds = %cond.false.4252, %cond.end.4250
  %cond4255 = phi i32 [ %cond4251, %cond.end.4250 ], [ %conv4253, %cond.false.4252 ]
  store i32 %cond4255, i32* %c, align 4
  %2012 = load i32, i32* %len4190, align 4
  %2013 = load i8*, i8** %p, align 8
  %idx.ext4256 = sext i32 %2012 to i64
  %add.ptr4257 = getelementptr inbounds i8, i8* %2013, i64 %idx.ext4256
  store i8* %add.ptr4257, i8** %p, align 8
  br label %do.end.4258

do.end.4258:                                      ; preds = %cond.end.4254
  br label %if.end.4259

if.end.4259:                                      ; preds = %do.end.4258, %if.end.4157
  %2014 = load i32, i32* %c, align 4
  %cmp4260 = icmp ne i32 %2014, 125
  br i1 %cmp4260, label %if.then.4262, label %if.end.4273

if.then.4262:                                     ; preds = %if.end.4259
  br label %do.body.4263

do.body.4263:                                     ; preds = %if.then.4262
  br label %do.body.4264

do.body.4264:                                     ; preds = %do.body.4263
  %table4265 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2015 = load i32*, i32** %table4265, align 8
  %tobool4266 = icmp ne i32* %2015, null
  br i1 %tobool4266, label %if.then.4267, label %if.end.4269

if.then.4267:                                     ; preds = %do.body.4264
  %table4268 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2016 = load i32*, i32** %table4268, align 8
  %2017 = bitcast i32* %2016 to i8*
  call void @xfree(i8* %2017)
  br label %if.end.4269

if.end.4269:                                      ; preds = %if.then.4267, %do.body.4264
  br label %do.end.4270

do.end.4270:                                      ; preds = %if.end.4269
  %stack4271 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %2018 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4271, align 8
  %2019 = bitcast %struct.compile_stack_elt_t* %2018 to i8*
  call void @xfree(i8* %2019)
  store i32 10, i32* %retval
  br label %do.end.6650

do.end.4272:                                      ; No predecessors!
  br label %if.end.4273

if.end.4273:                                      ; preds = %do.end.4272, %if.end.4259
  %2020 = load i8*, i8** %laststart, align 8
  %tobool4274 = icmp ne i8* %2020, null
  br i1 %tobool4274, label %if.end.4296, label %if.then.4275

if.then.4275:                                     ; preds = %if.end.4273
  %2021 = load i64, i64* %syntax.addr, align 8
  %and4276 = and i64 %2021, 32
  %tobool4277 = icmp ne i64 %and4276, 0
  br i1 %tobool4277, label %if.then.4278, label %if.else.4289

if.then.4278:                                     ; preds = %if.then.4275
  br label %do.body.4279

do.body.4279:                                     ; preds = %if.then.4278
  br label %do.body.4280

do.body.4280:                                     ; preds = %do.body.4279
  %table4281 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2022 = load i32*, i32** %table4281, align 8
  %tobool4282 = icmp ne i32* %2022, null
  br i1 %tobool4282, label %if.then.4283, label %if.end.4285

if.then.4283:                                     ; preds = %do.body.4280
  %table4284 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2023 = load i32*, i32** %table4284, align 8
  %2024 = bitcast i32* %2023 to i8*
  call void @xfree(i8* %2024)
  br label %if.end.4285

if.end.4285:                                      ; preds = %if.then.4283, %do.body.4280
  br label %do.end.4286

do.end.4286:                                      ; preds = %if.end.4285
  %stack4287 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %2025 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack4287, align 8
  %2026 = bitcast %struct.compile_stack_elt_t* %2025 to i8*
  call void @xfree(i8* %2026)
  store i32 13, i32* %retval
  br label %do.end.6650

do.end.4288:                                      ; No predecessors!
  br label %if.end.4295

if.else.4289:                                     ; preds = %if.then.4275
  %2027 = load i64, i64* %syntax.addr, align 8
  %and4290 = and i64 %2027, 16
  %tobool4291 = icmp ne i64 %and4290, 0
  br i1 %tobool4291, label %if.then.4292, label %if.else.4293

if.then.4292:                                     ; preds = %if.else.4289
  %2028 = load i8*, i8** %b, align 8
  store i8* %2028, i8** %laststart, align 8
  br label %if.end.4294

if.else.4293:                                     ; preds = %if.else.4289
  br label %unfetch_interval

if.end.4294:                                      ; preds = %if.then.4292
  br label %if.end.4295

if.end.4295:                                      ; preds = %if.end.4294, %do.end.4288
  br label %if.end.4296

if.end.4296:                                      ; preds = %if.end.4295, %if.end.4273
  %2029 = load i32, i32* %upper_bound, align 4
  %cmp4297 = icmp eq i32 %2029, 0
  br i1 %cmp4297, label %if.then.4299, label %if.else.4300

if.then.4299:                                     ; preds = %if.end.4296
  %2030 = load i8*, i8** %laststart, align 8
  store i8* %2030, i8** %b, align 8
  br label %if.end.4450

if.else.4300:                                     ; preds = %if.end.4296
  %2031 = load i32, i32* %lower_bound, align 4
  %cmp4301 = icmp eq i32 %2031, 1
  br i1 %cmp4301, label %land.lhs.true.4303, label %if.else.4307

land.lhs.true.4303:                               ; preds = %if.else.4300
  %2032 = load i32, i32* %upper_bound, align 4
  %cmp4304 = icmp eq i32 %2032, 1
  br i1 %cmp4304, label %if.then.4306, label %if.else.4307

if.then.4306:                                     ; preds = %land.lhs.true.4303
  br label %if.end.4449

if.else.4307:                                     ; preds = %land.lhs.true.4303, %if.else.4300
  %2033 = load i32, i32* %upper_bound, align 4
  %cmp4308 = icmp slt i32 %2033, 0
  br i1 %cmp4308, label %cond.true.4310, label %cond.false.4311

cond.true.4310:                                   ; preds = %if.else.4307
  br label %cond.end.4315

cond.false.4311:                                  ; preds = %if.else.4307
  %2034 = load i32, i32* %upper_bound, align 4
  %cmp4312 = icmp sgt i32 %2034, 1
  %cond4314 = select i1 %cmp4312, i32 5, i32 0
  br label %cond.end.4315

cond.end.4315:                                    ; preds = %cond.false.4311, %cond.true.4310
  %cond4316 = phi i32 [ 3, %cond.true.4310 ], [ %cond4314, %cond.false.4311 ]
  store i32 %cond4316, i32* %nbytes, align 4
  store i32 0, i32* %startoffset4317, align 4
  br label %while.cond.4318

while.cond.4318:                                  ; preds = %do.end.4390, %cond.end.4315
  %2035 = load i8*, i8** %b, align 8
  %2036 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4319 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2036, i32 0, i32 0
  %2037 = load i8*, i8** %buffer4319, align 8
  %sub.ptr.lhs.cast4320 = ptrtoint i8* %2035 to i64
  %sub.ptr.rhs.cast4321 = ptrtoint i8* %2037 to i64
  %sub.ptr.sub4322 = sub i64 %sub.ptr.lhs.cast4320, %sub.ptr.rhs.cast4321
  %add4323 = add nsw i64 %sub.ptr.sub4322, 20
  %2038 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4324 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2038, i32 0, i32 1
  %2039 = load i64, i64* %allocated4324, align 8
  %cmp4325 = icmp ugt i64 %add4323, %2039
  br i1 %cmp4325, label %while.body.4327, label %while.end.4391

while.body.4327:                                  ; preds = %while.cond.4318
  br label %do.body.4328

do.body.4328:                                     ; preds = %while.body.4327
  %2040 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4330 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2040, i32 0, i32 0
  %2041 = load i8*, i8** %buffer4330, align 8
  store i8* %2041, i8** %old_buffer4329, align 8
  %2042 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4331 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2042, i32 0, i32 1
  %2043 = load i64, i64* %allocated4331, align 8
  %cmp4332 = icmp eq i64 %2043, 32768
  br i1 %cmp4332, label %if.then.4334, label %if.end.4335

if.then.4334:                                     ; preds = %do.body.4328
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.4335:                                      ; preds = %do.body.4328
  %2044 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4336 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2044, i32 0, i32 1
  %2045 = load i64, i64* %allocated4336, align 8
  %shl4337 = shl i64 %2045, 1
  store i64 %shl4337, i64* %allocated4336, align 8
  %2046 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4338 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2046, i32 0, i32 1
  %2047 = load i64, i64* %allocated4338, align 8
  %cmp4339 = icmp ugt i64 %2047, 32768
  br i1 %cmp4339, label %if.then.4341, label %if.end.4343

if.then.4341:                                     ; preds = %if.end.4335
  %2048 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4342 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2048, i32 0, i32 1
  store i64 32768, i64* %allocated4342, align 8
  br label %if.end.4343

if.end.4343:                                      ; preds = %if.then.4341, %if.end.4335
  %2049 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4344 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2049, i32 0, i32 0
  %2050 = load i8*, i8** %buffer4344, align 8
  %2051 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4345 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2051, i32 0, i32 1
  %2052 = load i64, i64* %allocated4345, align 8
  %mul4346 = mul i64 %2052, 1
  %call4347 = call i8* @xrealloc(i8* %2050, i64 %mul4346)
  %2053 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4348 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2053, i32 0, i32 0
  store i8* %call4347, i8** %buffer4348, align 8
  %2054 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4349 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2054, i32 0, i32 0
  %2055 = load i8*, i8** %buffer4349, align 8
  %cmp4350 = icmp eq i8* %2055, null
  br i1 %cmp4350, label %if.then.4352, label %if.end.4353

if.then.4352:                                     ; preds = %if.end.4343
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.4353:                                      ; preds = %if.end.4343
  %2056 = load i8*, i8** %old_buffer4329, align 8
  %2057 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4354 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2057, i32 0, i32 0
  %2058 = load i8*, i8** %buffer4354, align 8
  %cmp4355 = icmp ne i8* %2056, %2058
  br i1 %cmp4355, label %if.then.4357, label %if.end.4389

if.then.4357:                                     ; preds = %if.end.4353
  %2059 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4359 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2059, i32 0, i32 0
  %2060 = load i8*, i8** %buffer4359, align 8
  store i8* %2060, i8** %new_buffer4358, align 8
  %2061 = load i8*, i8** %new_buffer4358, align 8
  %2062 = load i8*, i8** %b, align 8
  %2063 = load i8*, i8** %old_buffer4329, align 8
  %sub.ptr.lhs.cast4360 = ptrtoint i8* %2062 to i64
  %sub.ptr.rhs.cast4361 = ptrtoint i8* %2063 to i64
  %sub.ptr.sub4362 = sub i64 %sub.ptr.lhs.cast4360, %sub.ptr.rhs.cast4361
  %add.ptr4363 = getelementptr inbounds i8, i8* %2061, i64 %sub.ptr.sub4362
  store i8* %add.ptr4363, i8** %b, align 8
  %2064 = load i8*, i8** %new_buffer4358, align 8
  %2065 = load i8*, i8** %begalt, align 8
  %2066 = load i8*, i8** %old_buffer4329, align 8
  %sub.ptr.lhs.cast4364 = ptrtoint i8* %2065 to i64
  %sub.ptr.rhs.cast4365 = ptrtoint i8* %2066 to i64
  %sub.ptr.sub4366 = sub i64 %sub.ptr.lhs.cast4364, %sub.ptr.rhs.cast4365
  %add.ptr4367 = getelementptr inbounds i8, i8* %2064, i64 %sub.ptr.sub4366
  store i8* %add.ptr4367, i8** %begalt, align 8
  %2067 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool4368 = icmp ne i8* %2067, null
  br i1 %tobool4368, label %if.then.4369, label %if.end.4374

if.then.4369:                                     ; preds = %if.then.4357
  %2068 = load i8*, i8** %new_buffer4358, align 8
  %2069 = load i8*, i8** %fixup_alt_jump, align 8
  %2070 = load i8*, i8** %old_buffer4329, align 8
  %sub.ptr.lhs.cast4370 = ptrtoint i8* %2069 to i64
  %sub.ptr.rhs.cast4371 = ptrtoint i8* %2070 to i64
  %sub.ptr.sub4372 = sub i64 %sub.ptr.lhs.cast4370, %sub.ptr.rhs.cast4371
  %add.ptr4373 = getelementptr inbounds i8, i8* %2068, i64 %sub.ptr.sub4372
  store i8* %add.ptr4373, i8** %fixup_alt_jump, align 8
  br label %if.end.4374

if.end.4374:                                      ; preds = %if.then.4369, %if.then.4357
  %2071 = load i8*, i8** %laststart, align 8
  %tobool4375 = icmp ne i8* %2071, null
  br i1 %tobool4375, label %if.then.4376, label %if.end.4381

if.then.4376:                                     ; preds = %if.end.4374
  %2072 = load i8*, i8** %new_buffer4358, align 8
  %2073 = load i8*, i8** %laststart, align 8
  %2074 = load i8*, i8** %old_buffer4329, align 8
  %sub.ptr.lhs.cast4377 = ptrtoint i8* %2073 to i64
  %sub.ptr.rhs.cast4378 = ptrtoint i8* %2074 to i64
  %sub.ptr.sub4379 = sub i64 %sub.ptr.lhs.cast4377, %sub.ptr.rhs.cast4378
  %add.ptr4380 = getelementptr inbounds i8, i8* %2072, i64 %sub.ptr.sub4379
  store i8* %add.ptr4380, i8** %laststart, align 8
  br label %if.end.4381

if.end.4381:                                      ; preds = %if.then.4376, %if.end.4374
  %2075 = load i8*, i8** %pending_exact, align 8
  %tobool4382 = icmp ne i8* %2075, null
  br i1 %tobool4382, label %if.then.4383, label %if.end.4388

if.then.4383:                                     ; preds = %if.end.4381
  %2076 = load i8*, i8** %new_buffer4358, align 8
  %2077 = load i8*, i8** %pending_exact, align 8
  %2078 = load i8*, i8** %old_buffer4329, align 8
  %sub.ptr.lhs.cast4384 = ptrtoint i8* %2077 to i64
  %sub.ptr.rhs.cast4385 = ptrtoint i8* %2078 to i64
  %sub.ptr.sub4386 = sub i64 %sub.ptr.lhs.cast4384, %sub.ptr.rhs.cast4385
  %add.ptr4387 = getelementptr inbounds i8, i8* %2076, i64 %sub.ptr.sub4386
  store i8* %add.ptr4387, i8** %pending_exact, align 8
  br label %if.end.4388

if.end.4388:                                      ; preds = %if.then.4383, %if.end.4381
  br label %if.end.4389

if.end.4389:                                      ; preds = %if.end.4388, %if.end.4353
  br label %do.end.4390

do.end.4390:                                      ; preds = %if.end.4389
  br label %while.cond.4318

while.end.4391:                                   ; preds = %while.cond.4318
  %2079 = load i32, i32* %lower_bound, align 4
  %cmp4392 = icmp eq i32 %2079, 0
  br i1 %cmp4392, label %if.then.4394, label %if.else.4404

if.then.4394:                                     ; preds = %while.end.4391
  %2080 = load i8*, i8** %laststart, align 8
  %2081 = load i8*, i8** %b, align 8
  %add.ptr4395 = getelementptr inbounds i8, i8* %2081, i64 3
  %2082 = load i32, i32* %nbytes, align 4
  %idx.ext4396 = zext i32 %2082 to i64
  %add.ptr4397 = getelementptr inbounds i8, i8* %add.ptr4395, i64 %idx.ext4396
  %2083 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast4398 = ptrtoint i8* %add.ptr4397 to i64
  %sub.ptr.rhs.cast4399 = ptrtoint i8* %2083 to i64
  %sub.ptr.sub4400 = sub i64 %sub.ptr.lhs.cast4398, %sub.ptr.rhs.cast4399
  %sub4401 = sub nsw i64 %sub.ptr.sub4400, 3
  %conv4402 = trunc i64 %sub4401 to i32
  %2084 = load i8*, i8** %b, align 8
  call void @insert_op1(i32 16, i8* %2080, i32 %conv4402, i8* %2084)
  %2085 = load i8*, i8** %b, align 8
  %add.ptr4403 = getelementptr inbounds i8, i8* %2085, i64 3
  store i8* %add.ptr4403, i8** %b, align 8
  br label %if.end.4416

if.else.4404:                                     ; preds = %while.end.4391
  %2086 = load i8*, i8** %laststart, align 8
  %2087 = load i8*, i8** %b, align 8
  %add.ptr4405 = getelementptr inbounds i8, i8* %2087, i64 5
  %2088 = load i32, i32* %nbytes, align 4
  %idx.ext4406 = zext i32 %2088 to i64
  %add.ptr4407 = getelementptr inbounds i8, i8* %add.ptr4405, i64 %idx.ext4406
  %2089 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast4408 = ptrtoint i8* %add.ptr4407 to i64
  %sub.ptr.rhs.cast4409 = ptrtoint i8* %2089 to i64
  %sub.ptr.sub4410 = sub i64 %sub.ptr.lhs.cast4408, %sub.ptr.rhs.cast4409
  %sub4411 = sub nsw i64 %sub.ptr.sub4410, 3
  %conv4412 = trunc i64 %sub4411 to i32
  %2090 = load i32, i32* %lower_bound, align 4
  %2091 = load i8*, i8** %b, align 8
  call void @insert_op2(i32 19, i8* %2086, i32 %conv4412, i32 %2090, i8* %2091)
  %2092 = load i8*, i8** %b, align 8
  %add.ptr4413 = getelementptr inbounds i8, i8* %2092, i64 5
  store i8* %add.ptr4413, i8** %b, align 8
  %2093 = load i8*, i8** %laststart, align 8
  %2094 = load i32, i32* %lower_bound, align 4
  %2095 = load i8*, i8** %b, align 8
  call void @insert_op2(i32 21, i8* %2093, i32 5, i32 %2094, i8* %2095)
  %2096 = load i8*, i8** %b, align 8
  %add.ptr4414 = getelementptr inbounds i8, i8* %2096, i64 5
  store i8* %add.ptr4414, i8** %b, align 8
  %2097 = load i32, i32* %startoffset4317, align 4
  %add4415 = add i32 %2097, 5
  store i32 %add4415, i32* %startoffset4317, align 4
  br label %if.end.4416

if.end.4416:                                      ; preds = %if.else.4404, %if.then.4394
  %2098 = load i32, i32* %upper_bound, align 4
  %cmp4417 = icmp slt i32 %2098, 0
  br i1 %cmp4417, label %if.then.4419, label %if.else.4428

if.then.4419:                                     ; preds = %if.end.4416
  %2099 = load i8*, i8** %b, align 8
  %2100 = load i8*, i8** %laststart, align 8
  %2101 = load i32, i32* %startoffset4317, align 4
  %idx.ext4420 = zext i32 %2101 to i64
  %add.ptr4421 = getelementptr inbounds i8, i8* %2100, i64 %idx.ext4420
  %2102 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast4422 = ptrtoint i8* %add.ptr4421 to i64
  %sub.ptr.rhs.cast4423 = ptrtoint i8* %2102 to i64
  %sub.ptr.sub4424 = sub i64 %sub.ptr.lhs.cast4422, %sub.ptr.rhs.cast4423
  %sub4425 = sub nsw i64 %sub.ptr.sub4424, 3
  %conv4426 = trunc i64 %sub4425 to i32
  call void @store_op1(i32 13, i8* %2099, i32 %conv4426)
  %2103 = load i8*, i8** %b, align 8
  %add.ptr4427 = getelementptr inbounds i8, i8* %2103, i64 3
  store i8* %add.ptr4427, i8** %b, align 8
  br label %if.end.4448

if.else.4428:                                     ; preds = %if.end.4416
  %2104 = load i32, i32* %upper_bound, align 4
  %cmp4429 = icmp sgt i32 %2104, 1
  br i1 %cmp4429, label %if.then.4431, label %if.end.4447

if.then.4431:                                     ; preds = %if.else.4428
  %2105 = load i8*, i8** %b, align 8
  %2106 = load i8*, i8** %laststart, align 8
  %2107 = load i32, i32* %startoffset4317, align 4
  %idx.ext4432 = zext i32 %2107 to i64
  %add.ptr4433 = getelementptr inbounds i8, i8* %2106, i64 %idx.ext4432
  %2108 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast4434 = ptrtoint i8* %add.ptr4433 to i64
  %sub.ptr.rhs.cast4435 = ptrtoint i8* %2108 to i64
  %sub.ptr.sub4436 = sub i64 %sub.ptr.lhs.cast4434, %sub.ptr.rhs.cast4435
  %sub4437 = sub nsw i64 %sub.ptr.sub4436, 3
  %conv4438 = trunc i64 %sub4437 to i32
  %2109 = load i32, i32* %upper_bound, align 4
  %sub4439 = sub nsw i32 %2109, 1
  call void @store_op2(i32 20, i8* %2105, i32 %conv4438, i32 %sub4439)
  %2110 = load i8*, i8** %b, align 8
  %add.ptr4440 = getelementptr inbounds i8, i8* %2110, i64 5
  store i8* %add.ptr4440, i8** %b, align 8
  %2111 = load i8*, i8** %laststart, align 8
  %2112 = load i8*, i8** %b, align 8
  %2113 = load i8*, i8** %laststart, align 8
  %sub.ptr.lhs.cast4441 = ptrtoint i8* %2112 to i64
  %sub.ptr.rhs.cast4442 = ptrtoint i8* %2113 to i64
  %sub.ptr.sub4443 = sub i64 %sub.ptr.lhs.cast4441, %sub.ptr.rhs.cast4442
  %conv4444 = trunc i64 %sub.ptr.sub4443 to i32
  %2114 = load i32, i32* %upper_bound, align 4
  %sub4445 = sub nsw i32 %2114, 1
  %2115 = load i8*, i8** %b, align 8
  call void @insert_op2(i32 21, i8* %2111, i32 %conv4444, i32 %sub4445, i8* %2115)
  %2116 = load i8*, i8** %b, align 8
  %add.ptr4446 = getelementptr inbounds i8, i8* %2116, i64 5
  store i8* %add.ptr4446, i8** %b, align 8
  br label %if.end.4447

if.end.4447:                                      ; preds = %if.then.4431, %if.else.4428
  br label %if.end.4448

if.end.4448:                                      ; preds = %if.end.4447, %if.then.4419
  br label %if.end.4449

if.end.4449:                                      ; preds = %if.end.4448, %if.then.4306
  br label %if.end.4450

if.end.4450:                                      ; preds = %if.end.4449, %if.then.4299
  store i8* null, i8** %pending_exact, align 8
  store i8* null, i8** %beg_interval, align 8
  br label %sw.epilog.6156

unfetch_interval:                                 ; preds = %if.else.4293
  %2117 = load i8*, i8** %beg_interval, align 8
  store i8* %2117, i8** %p, align 8
  store i8* null, i8** %beg_interval, align 8
  store i32 123, i32* %c, align 4
  %2118 = load i64, i64* %syntax.addr, align 8
  %and4451 = and i64 %2118, 4096
  %tobool4452 = icmp ne i64 %and4451, 0
  br i1 %tobool4452, label %if.else.4454, label %if.then.4453

if.then.4453:                                     ; preds = %unfetch_interval
  br label %normal_backslash

if.else.4454:                                     ; preds = %unfetch_interval
  br label %normal_char

sw.bb.4455:                                       ; preds = %do.end.2985
  %2119 = load i8*, i8** %b, align 8
  store i8* %2119, i8** %laststart, align 8
  br label %do.body.4456

do.body.4456:                                     ; preds = %sw.bb.4455
  br label %while.cond.4457

while.cond.4457:                                  ; preds = %do.end.4529, %do.body.4456
  %2120 = load i8*, i8** %b, align 8
  %2121 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4458 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2121, i32 0, i32 0
  %2122 = load i8*, i8** %buffer4458, align 8
  %sub.ptr.lhs.cast4459 = ptrtoint i8* %2120 to i64
  %sub.ptr.rhs.cast4460 = ptrtoint i8* %2122 to i64
  %sub.ptr.sub4461 = sub i64 %sub.ptr.lhs.cast4459, %sub.ptr.rhs.cast4460
  %add4462 = add nsw i64 %sub.ptr.sub4461, 1
  %2123 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4463 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2123, i32 0, i32 1
  %2124 = load i64, i64* %allocated4463, align 8
  %cmp4464 = icmp ugt i64 %add4462, %2124
  br i1 %cmp4464, label %while.body.4466, label %while.end.4530

while.body.4466:                                  ; preds = %while.cond.4457
  br label %do.body.4467

do.body.4467:                                     ; preds = %while.body.4466
  %2125 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4469 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2125, i32 0, i32 0
  %2126 = load i8*, i8** %buffer4469, align 8
  store i8* %2126, i8** %old_buffer4468, align 8
  %2127 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4470 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2127, i32 0, i32 1
  %2128 = load i64, i64* %allocated4470, align 8
  %cmp4471 = icmp eq i64 %2128, 32768
  br i1 %cmp4471, label %if.then.4473, label %if.end.4474

if.then.4473:                                     ; preds = %do.body.4467
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.4474:                                      ; preds = %do.body.4467
  %2129 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4475 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2129, i32 0, i32 1
  %2130 = load i64, i64* %allocated4475, align 8
  %shl4476 = shl i64 %2130, 1
  store i64 %shl4476, i64* %allocated4475, align 8
  %2131 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4477 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2131, i32 0, i32 1
  %2132 = load i64, i64* %allocated4477, align 8
  %cmp4478 = icmp ugt i64 %2132, 32768
  br i1 %cmp4478, label %if.then.4480, label %if.end.4482

if.then.4480:                                     ; preds = %if.end.4474
  %2133 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4481 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2133, i32 0, i32 1
  store i64 32768, i64* %allocated4481, align 8
  br label %if.end.4482

if.end.4482:                                      ; preds = %if.then.4480, %if.end.4474
  %2134 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4483 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2134, i32 0, i32 0
  %2135 = load i8*, i8** %buffer4483, align 8
  %2136 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4484 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2136, i32 0, i32 1
  %2137 = load i64, i64* %allocated4484, align 8
  %mul4485 = mul i64 %2137, 1
  %call4486 = call i8* @xrealloc(i8* %2135, i64 %mul4485)
  %2138 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4487 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2138, i32 0, i32 0
  store i8* %call4486, i8** %buffer4487, align 8
  %2139 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4488 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2139, i32 0, i32 0
  %2140 = load i8*, i8** %buffer4488, align 8
  %cmp4489 = icmp eq i8* %2140, null
  br i1 %cmp4489, label %if.then.4491, label %if.end.4492

if.then.4491:                                     ; preds = %if.end.4482
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.4492:                                      ; preds = %if.end.4482
  %2141 = load i8*, i8** %old_buffer4468, align 8
  %2142 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4493 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2142, i32 0, i32 0
  %2143 = load i8*, i8** %buffer4493, align 8
  %cmp4494 = icmp ne i8* %2141, %2143
  br i1 %cmp4494, label %if.then.4496, label %if.end.4528

if.then.4496:                                     ; preds = %if.end.4492
  %2144 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4498 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2144, i32 0, i32 0
  %2145 = load i8*, i8** %buffer4498, align 8
  store i8* %2145, i8** %new_buffer4497, align 8
  %2146 = load i8*, i8** %new_buffer4497, align 8
  %2147 = load i8*, i8** %b, align 8
  %2148 = load i8*, i8** %old_buffer4468, align 8
  %sub.ptr.lhs.cast4499 = ptrtoint i8* %2147 to i64
  %sub.ptr.rhs.cast4500 = ptrtoint i8* %2148 to i64
  %sub.ptr.sub4501 = sub i64 %sub.ptr.lhs.cast4499, %sub.ptr.rhs.cast4500
  %add.ptr4502 = getelementptr inbounds i8, i8* %2146, i64 %sub.ptr.sub4501
  store i8* %add.ptr4502, i8** %b, align 8
  %2149 = load i8*, i8** %new_buffer4497, align 8
  %2150 = load i8*, i8** %begalt, align 8
  %2151 = load i8*, i8** %old_buffer4468, align 8
  %sub.ptr.lhs.cast4503 = ptrtoint i8* %2150 to i64
  %sub.ptr.rhs.cast4504 = ptrtoint i8* %2151 to i64
  %sub.ptr.sub4505 = sub i64 %sub.ptr.lhs.cast4503, %sub.ptr.rhs.cast4504
  %add.ptr4506 = getelementptr inbounds i8, i8* %2149, i64 %sub.ptr.sub4505
  store i8* %add.ptr4506, i8** %begalt, align 8
  %2152 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool4507 = icmp ne i8* %2152, null
  br i1 %tobool4507, label %if.then.4508, label %if.end.4513

if.then.4508:                                     ; preds = %if.then.4496
  %2153 = load i8*, i8** %new_buffer4497, align 8
  %2154 = load i8*, i8** %fixup_alt_jump, align 8
  %2155 = load i8*, i8** %old_buffer4468, align 8
  %sub.ptr.lhs.cast4509 = ptrtoint i8* %2154 to i64
  %sub.ptr.rhs.cast4510 = ptrtoint i8* %2155 to i64
  %sub.ptr.sub4511 = sub i64 %sub.ptr.lhs.cast4509, %sub.ptr.rhs.cast4510
  %add.ptr4512 = getelementptr inbounds i8, i8* %2153, i64 %sub.ptr.sub4511
  store i8* %add.ptr4512, i8** %fixup_alt_jump, align 8
  br label %if.end.4513

if.end.4513:                                      ; preds = %if.then.4508, %if.then.4496
  %2156 = load i8*, i8** %laststart, align 8
  %tobool4514 = icmp ne i8* %2156, null
  br i1 %tobool4514, label %if.then.4515, label %if.end.4520

if.then.4515:                                     ; preds = %if.end.4513
  %2157 = load i8*, i8** %new_buffer4497, align 8
  %2158 = load i8*, i8** %laststart, align 8
  %2159 = load i8*, i8** %old_buffer4468, align 8
  %sub.ptr.lhs.cast4516 = ptrtoint i8* %2158 to i64
  %sub.ptr.rhs.cast4517 = ptrtoint i8* %2159 to i64
  %sub.ptr.sub4518 = sub i64 %sub.ptr.lhs.cast4516, %sub.ptr.rhs.cast4517
  %add.ptr4519 = getelementptr inbounds i8, i8* %2157, i64 %sub.ptr.sub4518
  store i8* %add.ptr4519, i8** %laststart, align 8
  br label %if.end.4520

if.end.4520:                                      ; preds = %if.then.4515, %if.end.4513
  %2160 = load i8*, i8** %pending_exact, align 8
  %tobool4521 = icmp ne i8* %2160, null
  br i1 %tobool4521, label %if.then.4522, label %if.end.4527

if.then.4522:                                     ; preds = %if.end.4520
  %2161 = load i8*, i8** %new_buffer4497, align 8
  %2162 = load i8*, i8** %pending_exact, align 8
  %2163 = load i8*, i8** %old_buffer4468, align 8
  %sub.ptr.lhs.cast4523 = ptrtoint i8* %2162 to i64
  %sub.ptr.rhs.cast4524 = ptrtoint i8* %2163 to i64
  %sub.ptr.sub4525 = sub i64 %sub.ptr.lhs.cast4523, %sub.ptr.rhs.cast4524
  %add.ptr4526 = getelementptr inbounds i8, i8* %2161, i64 %sub.ptr.sub4525
  store i8* %add.ptr4526, i8** %pending_exact, align 8
  br label %if.end.4527

if.end.4527:                                      ; preds = %if.then.4522, %if.end.4520
  br label %if.end.4528

if.end.4528:                                      ; preds = %if.end.4527, %if.end.4492
  br label %do.end.4529

do.end.4529:                                      ; preds = %if.end.4528
  br label %while.cond.4457

while.end.4530:                                   ; preds = %while.cond.4457
  %2164 = load i8*, i8** %b, align 8
  %incdec.ptr4531 = getelementptr inbounds i8, i8* %2164, i32 1
  store i8* %incdec.ptr4531, i8** %b, align 8
  store i8 31, i8* %2164, align 1
  br label %do.end.4532

do.end.4532:                                      ; preds = %while.end.4530
  br label %sw.epilog.6156

sw.bb.4533:                                       ; preds = %do.end.2985
  %2165 = load i8*, i8** %b, align 8
  store i8* %2165, i8** %laststart, align 8
  br label %do.body.4534

do.body.4534:                                     ; preds = %sw.bb.4533
  %2166 = load i8*, i8** %p, align 8
  %2167 = load i8*, i8** %pend, align 8
  %cmp4536 = icmp eq i8* %2166, %2167
  br i1 %cmp4536, label %if.then.4538, label %if.end.4539

if.then.4538:                                     ; preds = %do.body.4534
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4539:                                      ; preds = %do.body.4534
  %2168 = load i8, i8* %multibyte, align 1
  %conv4540 = sext i8 %2168 to i32
  %tobool4541 = icmp ne i32 %conv4540, 0
  br i1 %tobool4541, label %cond.true.4542, label %cond.false.4597

cond.true.4542:                                   ; preds = %if.end.4539
  %2169 = load i8*, i8** %p, align 8
  %arrayidx4543 = getelementptr inbounds i8, i8* %2169, i64 0
  %2170 = load i8, i8* %arrayidx4543, align 1
  %conv4544 = zext i8 %2170 to i32
  %and4545 = and i32 %conv4544, 128
  %tobool4546 = icmp ne i32 %and4545, 0
  br i1 %tobool4546, label %cond.false.4550, label %cond.true.4547

cond.true.4547:                                   ; preds = %cond.true.4542
  store i32 1, i32* %len4535, align 4
  %2171 = load i8*, i8** %p, align 8
  %arrayidx4548 = getelementptr inbounds i8, i8* %2171, i64 0
  %2172 = load i8, i8* %arrayidx4548, align 1
  %conv4549 = zext i8 %2172 to i32
  br label %cond.end.4595

cond.false.4550:                                  ; preds = %cond.true.4542
  %2173 = load i8*, i8** %p, align 8
  %arrayidx4551 = getelementptr inbounds i8, i8* %2173, i64 0
  %2174 = load i8, i8* %arrayidx4551, align 1
  %conv4552 = zext i8 %2174 to i32
  %and4553 = and i32 %conv4552, 32
  %tobool4554 = icmp ne i32 %and4553, 0
  br i1 %tobool4554, label %cond.false.4570, label %cond.true.4555

cond.true.4555:                                   ; preds = %cond.false.4550
  store i32 2, i32* %len4535, align 4
  %2175 = load i8*, i8** %p, align 8
  %arrayidx4556 = getelementptr inbounds i8, i8* %2175, i64 0
  %2176 = load i8, i8* %arrayidx4556, align 1
  %conv4557 = zext i8 %2176 to i32
  %and4558 = and i32 %conv4557, 31
  %shl4559 = shl i32 %and4558, 6
  %2177 = load i8*, i8** %p, align 8
  %arrayidx4560 = getelementptr inbounds i8, i8* %2177, i64 1
  %2178 = load i8, i8* %arrayidx4560, align 1
  %conv4561 = zext i8 %2178 to i32
  %and4562 = and i32 %conv4561, 63
  %or4563 = or i32 %shl4559, %and4562
  %2179 = load i8*, i8** %p, align 8
  %arrayidx4564 = getelementptr inbounds i8, i8* %2179, i64 0
  %2180 = load i8, i8* %arrayidx4564, align 1
  %conv4565 = zext i8 %2180 to i32
  %cmp4566 = icmp slt i32 %conv4565, 194
  %cond4568 = select i1 %cmp4566, i32 4194176, i32 0
  %add4569 = add nsw i32 %or4563, %cond4568
  br label %cond.end.4593

cond.false.4570:                                  ; preds = %cond.false.4550
  %2181 = load i8*, i8** %p, align 8
  %arrayidx4571 = getelementptr inbounds i8, i8* %2181, i64 0
  %2182 = load i8, i8* %arrayidx4571, align 1
  %conv4572 = zext i8 %2182 to i32
  %and4573 = and i32 %conv4572, 16
  %tobool4574 = icmp ne i32 %and4573, 0
  br i1 %tobool4574, label %cond.false.4589, label %cond.true.4575

cond.true.4575:                                   ; preds = %cond.false.4570
  store i32 3, i32* %len4535, align 4
  %2183 = load i8*, i8** %p, align 8
  %arrayidx4576 = getelementptr inbounds i8, i8* %2183, i64 0
  %2184 = load i8, i8* %arrayidx4576, align 1
  %conv4577 = zext i8 %2184 to i32
  %and4578 = and i32 %conv4577, 15
  %shl4579 = shl i32 %and4578, 12
  %2185 = load i8*, i8** %p, align 8
  %arrayidx4580 = getelementptr inbounds i8, i8* %2185, i64 1
  %2186 = load i8, i8* %arrayidx4580, align 1
  %conv4581 = zext i8 %2186 to i32
  %and4582 = and i32 %conv4581, 63
  %shl4583 = shl i32 %and4582, 6
  %or4584 = or i32 %shl4579, %shl4583
  %2187 = load i8*, i8** %p, align 8
  %arrayidx4585 = getelementptr inbounds i8, i8* %2187, i64 2
  %2188 = load i8, i8* %arrayidx4585, align 1
  %conv4586 = zext i8 %2188 to i32
  %and4587 = and i32 %conv4586, 63
  %or4588 = or i32 %or4584, %and4587
  br label %cond.end.4591

cond.false.4589:                                  ; preds = %cond.false.4570
  %2189 = load i8*, i8** %p, align 8
  %call4590 = call i32 @string_char(i8* %2189, i8** null, i32* %len4535)
  br label %cond.end.4591

cond.end.4591:                                    ; preds = %cond.false.4589, %cond.true.4575
  %cond4592 = phi i32 [ %or4588, %cond.true.4575 ], [ %call4590, %cond.false.4589 ]
  br label %cond.end.4593

cond.end.4593:                                    ; preds = %cond.end.4591, %cond.true.4555
  %cond4594 = phi i32 [ %add4569, %cond.true.4555 ], [ %cond4592, %cond.end.4591 ]
  br label %cond.end.4595

cond.end.4595:                                    ; preds = %cond.end.4593, %cond.true.4547
  %cond4596 = phi i32 [ %conv4549, %cond.true.4547 ], [ %cond4594, %cond.end.4593 ]
  br label %cond.end.4599

cond.false.4597:                                  ; preds = %if.end.4539
  store i32 1, i32* %len4535, align 4
  %2190 = load i8*, i8** %p, align 8
  %2191 = load i8, i8* %2190, align 1
  %conv4598 = zext i8 %2191 to i32
  br label %cond.end.4599

cond.end.4599:                                    ; preds = %cond.false.4597, %cond.end.4595
  %cond4600 = phi i32 [ %cond4596, %cond.end.4595 ], [ %conv4598, %cond.false.4597 ]
  store i32 %cond4600, i32* %c, align 4
  %2192 = load i32, i32* %len4535, align 4
  %2193 = load i8*, i8** %p, align 8
  %idx.ext4601 = sext i32 %2192 to i64
  %add.ptr4602 = getelementptr inbounds i8, i8* %2193, i64 %idx.ext4601
  store i8* %add.ptr4602, i8** %p, align 8
  br label %do.end.4603

do.end.4603:                                      ; preds = %cond.end.4599
  br label %do.body.4604

do.body.4604:                                     ; preds = %do.end.4603
  br label %while.cond.4605

while.cond.4605:                                  ; preds = %do.end.4677, %do.body.4604
  %2194 = load i8*, i8** %b, align 8
  %2195 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4606 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2195, i32 0, i32 0
  %2196 = load i8*, i8** %buffer4606, align 8
  %sub.ptr.lhs.cast4607 = ptrtoint i8* %2194 to i64
  %sub.ptr.rhs.cast4608 = ptrtoint i8* %2196 to i64
  %sub.ptr.sub4609 = sub i64 %sub.ptr.lhs.cast4607, %sub.ptr.rhs.cast4608
  %add4610 = add nsw i64 %sub.ptr.sub4609, 2
  %2197 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4611 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2197, i32 0, i32 1
  %2198 = load i64, i64* %allocated4611, align 8
  %cmp4612 = icmp ugt i64 %add4610, %2198
  br i1 %cmp4612, label %while.body.4614, label %while.end.4678

while.body.4614:                                  ; preds = %while.cond.4605
  br label %do.body.4615

do.body.4615:                                     ; preds = %while.body.4614
  %2199 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4617 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2199, i32 0, i32 0
  %2200 = load i8*, i8** %buffer4617, align 8
  store i8* %2200, i8** %old_buffer4616, align 8
  %2201 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4618 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2201, i32 0, i32 1
  %2202 = load i64, i64* %allocated4618, align 8
  %cmp4619 = icmp eq i64 %2202, 32768
  br i1 %cmp4619, label %if.then.4621, label %if.end.4622

if.then.4621:                                     ; preds = %do.body.4615
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.4622:                                      ; preds = %do.body.4615
  %2203 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4623 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2203, i32 0, i32 1
  %2204 = load i64, i64* %allocated4623, align 8
  %shl4624 = shl i64 %2204, 1
  store i64 %shl4624, i64* %allocated4623, align 8
  %2205 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4625 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2205, i32 0, i32 1
  %2206 = load i64, i64* %allocated4625, align 8
  %cmp4626 = icmp ugt i64 %2206, 32768
  br i1 %cmp4626, label %if.then.4628, label %if.end.4630

if.then.4628:                                     ; preds = %if.end.4622
  %2207 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4629 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2207, i32 0, i32 1
  store i64 32768, i64* %allocated4629, align 8
  br label %if.end.4630

if.end.4630:                                      ; preds = %if.then.4628, %if.end.4622
  %2208 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4631 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2208, i32 0, i32 0
  %2209 = load i8*, i8** %buffer4631, align 8
  %2210 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4632 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2210, i32 0, i32 1
  %2211 = load i64, i64* %allocated4632, align 8
  %mul4633 = mul i64 %2211, 1
  %call4634 = call i8* @xrealloc(i8* %2209, i64 %mul4633)
  %2212 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4635 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2212, i32 0, i32 0
  store i8* %call4634, i8** %buffer4635, align 8
  %2213 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4636 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2213, i32 0, i32 0
  %2214 = load i8*, i8** %buffer4636, align 8
  %cmp4637 = icmp eq i8* %2214, null
  br i1 %cmp4637, label %if.then.4639, label %if.end.4640

if.then.4639:                                     ; preds = %if.end.4630
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.4640:                                      ; preds = %if.end.4630
  %2215 = load i8*, i8** %old_buffer4616, align 8
  %2216 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4641 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2216, i32 0, i32 0
  %2217 = load i8*, i8** %buffer4641, align 8
  %cmp4642 = icmp ne i8* %2215, %2217
  br i1 %cmp4642, label %if.then.4644, label %if.end.4676

if.then.4644:                                     ; preds = %if.end.4640
  %2218 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4646 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2218, i32 0, i32 0
  %2219 = load i8*, i8** %buffer4646, align 8
  store i8* %2219, i8** %new_buffer4645, align 8
  %2220 = load i8*, i8** %new_buffer4645, align 8
  %2221 = load i8*, i8** %b, align 8
  %2222 = load i8*, i8** %old_buffer4616, align 8
  %sub.ptr.lhs.cast4647 = ptrtoint i8* %2221 to i64
  %sub.ptr.rhs.cast4648 = ptrtoint i8* %2222 to i64
  %sub.ptr.sub4649 = sub i64 %sub.ptr.lhs.cast4647, %sub.ptr.rhs.cast4648
  %add.ptr4650 = getelementptr inbounds i8, i8* %2220, i64 %sub.ptr.sub4649
  store i8* %add.ptr4650, i8** %b, align 8
  %2223 = load i8*, i8** %new_buffer4645, align 8
  %2224 = load i8*, i8** %begalt, align 8
  %2225 = load i8*, i8** %old_buffer4616, align 8
  %sub.ptr.lhs.cast4651 = ptrtoint i8* %2224 to i64
  %sub.ptr.rhs.cast4652 = ptrtoint i8* %2225 to i64
  %sub.ptr.sub4653 = sub i64 %sub.ptr.lhs.cast4651, %sub.ptr.rhs.cast4652
  %add.ptr4654 = getelementptr inbounds i8, i8* %2223, i64 %sub.ptr.sub4653
  store i8* %add.ptr4654, i8** %begalt, align 8
  %2226 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool4655 = icmp ne i8* %2226, null
  br i1 %tobool4655, label %if.then.4656, label %if.end.4661

if.then.4656:                                     ; preds = %if.then.4644
  %2227 = load i8*, i8** %new_buffer4645, align 8
  %2228 = load i8*, i8** %fixup_alt_jump, align 8
  %2229 = load i8*, i8** %old_buffer4616, align 8
  %sub.ptr.lhs.cast4657 = ptrtoint i8* %2228 to i64
  %sub.ptr.rhs.cast4658 = ptrtoint i8* %2229 to i64
  %sub.ptr.sub4659 = sub i64 %sub.ptr.lhs.cast4657, %sub.ptr.rhs.cast4658
  %add.ptr4660 = getelementptr inbounds i8, i8* %2227, i64 %sub.ptr.sub4659
  store i8* %add.ptr4660, i8** %fixup_alt_jump, align 8
  br label %if.end.4661

if.end.4661:                                      ; preds = %if.then.4656, %if.then.4644
  %2230 = load i8*, i8** %laststart, align 8
  %tobool4662 = icmp ne i8* %2230, null
  br i1 %tobool4662, label %if.then.4663, label %if.end.4668

if.then.4663:                                     ; preds = %if.end.4661
  %2231 = load i8*, i8** %new_buffer4645, align 8
  %2232 = load i8*, i8** %laststart, align 8
  %2233 = load i8*, i8** %old_buffer4616, align 8
  %sub.ptr.lhs.cast4664 = ptrtoint i8* %2232 to i64
  %sub.ptr.rhs.cast4665 = ptrtoint i8* %2233 to i64
  %sub.ptr.sub4666 = sub i64 %sub.ptr.lhs.cast4664, %sub.ptr.rhs.cast4665
  %add.ptr4667 = getelementptr inbounds i8, i8* %2231, i64 %sub.ptr.sub4666
  store i8* %add.ptr4667, i8** %laststart, align 8
  br label %if.end.4668

if.end.4668:                                      ; preds = %if.then.4663, %if.end.4661
  %2234 = load i8*, i8** %pending_exact, align 8
  %tobool4669 = icmp ne i8* %2234, null
  br i1 %tobool4669, label %if.then.4670, label %if.end.4675

if.then.4670:                                     ; preds = %if.end.4668
  %2235 = load i8*, i8** %new_buffer4645, align 8
  %2236 = load i8*, i8** %pending_exact, align 8
  %2237 = load i8*, i8** %old_buffer4616, align 8
  %sub.ptr.lhs.cast4671 = ptrtoint i8* %2236 to i64
  %sub.ptr.rhs.cast4672 = ptrtoint i8* %2237 to i64
  %sub.ptr.sub4673 = sub i64 %sub.ptr.lhs.cast4671, %sub.ptr.rhs.cast4672
  %add.ptr4674 = getelementptr inbounds i8, i8* %2235, i64 %sub.ptr.sub4673
  store i8* %add.ptr4674, i8** %pending_exact, align 8
  br label %if.end.4675

if.end.4675:                                      ; preds = %if.then.4670, %if.end.4668
  br label %if.end.4676

if.end.4676:                                      ; preds = %if.end.4675, %if.end.4640
  br label %do.end.4677

do.end.4677:                                      ; preds = %if.end.4676
  br label %while.cond.4605

while.end.4678:                                   ; preds = %while.cond.4605
  %2238 = load i8*, i8** %b, align 8
  %incdec.ptr4679 = getelementptr inbounds i8, i8* %2238, i32 1
  store i8* %incdec.ptr4679, i8** %b, align 8
  store i8 28, i8* %2238, align 1
  %2239 = load i32, i32* %c, align 4
  %idxprom4680 = sext i32 %2239 to i64
  %arrayidx4681 = getelementptr inbounds [256 x i8], [256 x i8]* @syntax_spec_code, i32 0, i64 %idxprom4680
  %2240 = load i8, i8* %arrayidx4681, align 1
  %2241 = load i8*, i8** %b, align 8
  %incdec.ptr4682 = getelementptr inbounds i8, i8* %2241, i32 1
  store i8* %incdec.ptr4682, i8** %b, align 8
  store i8 %2240, i8* %2241, align 1
  br label %do.end.4683

do.end.4683:                                      ; preds = %while.end.4678
  br label %sw.epilog.6156

sw.bb.4684:                                       ; preds = %do.end.2985
  %2242 = load i8*, i8** %b, align 8
  store i8* %2242, i8** %laststart, align 8
  br label %do.body.4685

do.body.4685:                                     ; preds = %sw.bb.4684
  %2243 = load i8*, i8** %p, align 8
  %2244 = load i8*, i8** %pend, align 8
  %cmp4687 = icmp eq i8* %2243, %2244
  br i1 %cmp4687, label %if.then.4689, label %if.end.4690

if.then.4689:                                     ; preds = %do.body.4685
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4690:                                      ; preds = %do.body.4685
  %2245 = load i8, i8* %multibyte, align 1
  %conv4691 = sext i8 %2245 to i32
  %tobool4692 = icmp ne i32 %conv4691, 0
  br i1 %tobool4692, label %cond.true.4693, label %cond.false.4748

cond.true.4693:                                   ; preds = %if.end.4690
  %2246 = load i8*, i8** %p, align 8
  %arrayidx4694 = getelementptr inbounds i8, i8* %2246, i64 0
  %2247 = load i8, i8* %arrayidx4694, align 1
  %conv4695 = zext i8 %2247 to i32
  %and4696 = and i32 %conv4695, 128
  %tobool4697 = icmp ne i32 %and4696, 0
  br i1 %tobool4697, label %cond.false.4701, label %cond.true.4698

cond.true.4698:                                   ; preds = %cond.true.4693
  store i32 1, i32* %len4686, align 4
  %2248 = load i8*, i8** %p, align 8
  %arrayidx4699 = getelementptr inbounds i8, i8* %2248, i64 0
  %2249 = load i8, i8* %arrayidx4699, align 1
  %conv4700 = zext i8 %2249 to i32
  br label %cond.end.4746

cond.false.4701:                                  ; preds = %cond.true.4693
  %2250 = load i8*, i8** %p, align 8
  %arrayidx4702 = getelementptr inbounds i8, i8* %2250, i64 0
  %2251 = load i8, i8* %arrayidx4702, align 1
  %conv4703 = zext i8 %2251 to i32
  %and4704 = and i32 %conv4703, 32
  %tobool4705 = icmp ne i32 %and4704, 0
  br i1 %tobool4705, label %cond.false.4721, label %cond.true.4706

cond.true.4706:                                   ; preds = %cond.false.4701
  store i32 2, i32* %len4686, align 4
  %2252 = load i8*, i8** %p, align 8
  %arrayidx4707 = getelementptr inbounds i8, i8* %2252, i64 0
  %2253 = load i8, i8* %arrayidx4707, align 1
  %conv4708 = zext i8 %2253 to i32
  %and4709 = and i32 %conv4708, 31
  %shl4710 = shl i32 %and4709, 6
  %2254 = load i8*, i8** %p, align 8
  %arrayidx4711 = getelementptr inbounds i8, i8* %2254, i64 1
  %2255 = load i8, i8* %arrayidx4711, align 1
  %conv4712 = zext i8 %2255 to i32
  %and4713 = and i32 %conv4712, 63
  %or4714 = or i32 %shl4710, %and4713
  %2256 = load i8*, i8** %p, align 8
  %arrayidx4715 = getelementptr inbounds i8, i8* %2256, i64 0
  %2257 = load i8, i8* %arrayidx4715, align 1
  %conv4716 = zext i8 %2257 to i32
  %cmp4717 = icmp slt i32 %conv4716, 194
  %cond4719 = select i1 %cmp4717, i32 4194176, i32 0
  %add4720 = add nsw i32 %or4714, %cond4719
  br label %cond.end.4744

cond.false.4721:                                  ; preds = %cond.false.4701
  %2258 = load i8*, i8** %p, align 8
  %arrayidx4722 = getelementptr inbounds i8, i8* %2258, i64 0
  %2259 = load i8, i8* %arrayidx4722, align 1
  %conv4723 = zext i8 %2259 to i32
  %and4724 = and i32 %conv4723, 16
  %tobool4725 = icmp ne i32 %and4724, 0
  br i1 %tobool4725, label %cond.false.4740, label %cond.true.4726

cond.true.4726:                                   ; preds = %cond.false.4721
  store i32 3, i32* %len4686, align 4
  %2260 = load i8*, i8** %p, align 8
  %arrayidx4727 = getelementptr inbounds i8, i8* %2260, i64 0
  %2261 = load i8, i8* %arrayidx4727, align 1
  %conv4728 = zext i8 %2261 to i32
  %and4729 = and i32 %conv4728, 15
  %shl4730 = shl i32 %and4729, 12
  %2262 = load i8*, i8** %p, align 8
  %arrayidx4731 = getelementptr inbounds i8, i8* %2262, i64 1
  %2263 = load i8, i8* %arrayidx4731, align 1
  %conv4732 = zext i8 %2263 to i32
  %and4733 = and i32 %conv4732, 63
  %shl4734 = shl i32 %and4733, 6
  %or4735 = or i32 %shl4730, %shl4734
  %2264 = load i8*, i8** %p, align 8
  %arrayidx4736 = getelementptr inbounds i8, i8* %2264, i64 2
  %2265 = load i8, i8* %arrayidx4736, align 1
  %conv4737 = zext i8 %2265 to i32
  %and4738 = and i32 %conv4737, 63
  %or4739 = or i32 %or4735, %and4738
  br label %cond.end.4742

cond.false.4740:                                  ; preds = %cond.false.4721
  %2266 = load i8*, i8** %p, align 8
  %call4741 = call i32 @string_char(i8* %2266, i8** null, i32* %len4686)
  br label %cond.end.4742

cond.end.4742:                                    ; preds = %cond.false.4740, %cond.true.4726
  %cond4743 = phi i32 [ %or4739, %cond.true.4726 ], [ %call4741, %cond.false.4740 ]
  br label %cond.end.4744

cond.end.4744:                                    ; preds = %cond.end.4742, %cond.true.4706
  %cond4745 = phi i32 [ %add4720, %cond.true.4706 ], [ %cond4743, %cond.end.4742 ]
  br label %cond.end.4746

cond.end.4746:                                    ; preds = %cond.end.4744, %cond.true.4698
  %cond4747 = phi i32 [ %conv4700, %cond.true.4698 ], [ %cond4745, %cond.end.4744 ]
  br label %cond.end.4750

cond.false.4748:                                  ; preds = %if.end.4690
  store i32 1, i32* %len4686, align 4
  %2267 = load i8*, i8** %p, align 8
  %2268 = load i8, i8* %2267, align 1
  %conv4749 = zext i8 %2268 to i32
  br label %cond.end.4750

cond.end.4750:                                    ; preds = %cond.false.4748, %cond.end.4746
  %cond4751 = phi i32 [ %cond4747, %cond.end.4746 ], [ %conv4749, %cond.false.4748 ]
  store i32 %cond4751, i32* %c, align 4
  %2269 = load i32, i32* %len4686, align 4
  %2270 = load i8*, i8** %p, align 8
  %idx.ext4752 = sext i32 %2269 to i64
  %add.ptr4753 = getelementptr inbounds i8, i8* %2270, i64 %idx.ext4752
  store i8* %add.ptr4753, i8** %p, align 8
  br label %do.end.4754

do.end.4754:                                      ; preds = %cond.end.4750
  br label %do.body.4755

do.body.4755:                                     ; preds = %do.end.4754
  br label %while.cond.4756

while.cond.4756:                                  ; preds = %do.end.4828, %do.body.4755
  %2271 = load i8*, i8** %b, align 8
  %2272 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4757 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2272, i32 0, i32 0
  %2273 = load i8*, i8** %buffer4757, align 8
  %sub.ptr.lhs.cast4758 = ptrtoint i8* %2271 to i64
  %sub.ptr.rhs.cast4759 = ptrtoint i8* %2273 to i64
  %sub.ptr.sub4760 = sub i64 %sub.ptr.lhs.cast4758, %sub.ptr.rhs.cast4759
  %add4761 = add nsw i64 %sub.ptr.sub4760, 2
  %2274 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4762 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2274, i32 0, i32 1
  %2275 = load i64, i64* %allocated4762, align 8
  %cmp4763 = icmp ugt i64 %add4761, %2275
  br i1 %cmp4763, label %while.body.4765, label %while.end.4829

while.body.4765:                                  ; preds = %while.cond.4756
  br label %do.body.4766

do.body.4766:                                     ; preds = %while.body.4765
  %2276 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4768 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2276, i32 0, i32 0
  %2277 = load i8*, i8** %buffer4768, align 8
  store i8* %2277, i8** %old_buffer4767, align 8
  %2278 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4769 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2278, i32 0, i32 1
  %2279 = load i64, i64* %allocated4769, align 8
  %cmp4770 = icmp eq i64 %2279, 32768
  br i1 %cmp4770, label %if.then.4772, label %if.end.4773

if.then.4772:                                     ; preds = %do.body.4766
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.4773:                                      ; preds = %do.body.4766
  %2280 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4774 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2280, i32 0, i32 1
  %2281 = load i64, i64* %allocated4774, align 8
  %shl4775 = shl i64 %2281, 1
  store i64 %shl4775, i64* %allocated4774, align 8
  %2282 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4776 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2282, i32 0, i32 1
  %2283 = load i64, i64* %allocated4776, align 8
  %cmp4777 = icmp ugt i64 %2283, 32768
  br i1 %cmp4777, label %if.then.4779, label %if.end.4781

if.then.4779:                                     ; preds = %if.end.4773
  %2284 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4780 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2284, i32 0, i32 1
  store i64 32768, i64* %allocated4780, align 8
  br label %if.end.4781

if.end.4781:                                      ; preds = %if.then.4779, %if.end.4773
  %2285 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4782 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2285, i32 0, i32 0
  %2286 = load i8*, i8** %buffer4782, align 8
  %2287 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4783 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2287, i32 0, i32 1
  %2288 = load i64, i64* %allocated4783, align 8
  %mul4784 = mul i64 %2288, 1
  %call4785 = call i8* @xrealloc(i8* %2286, i64 %mul4784)
  %2289 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4786 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2289, i32 0, i32 0
  store i8* %call4785, i8** %buffer4786, align 8
  %2290 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4787 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2290, i32 0, i32 0
  %2291 = load i8*, i8** %buffer4787, align 8
  %cmp4788 = icmp eq i8* %2291, null
  br i1 %cmp4788, label %if.then.4790, label %if.end.4791

if.then.4790:                                     ; preds = %if.end.4781
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.4791:                                      ; preds = %if.end.4781
  %2292 = load i8*, i8** %old_buffer4767, align 8
  %2293 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4792 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2293, i32 0, i32 0
  %2294 = load i8*, i8** %buffer4792, align 8
  %cmp4793 = icmp ne i8* %2292, %2294
  br i1 %cmp4793, label %if.then.4795, label %if.end.4827

if.then.4795:                                     ; preds = %if.end.4791
  %2295 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4797 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2295, i32 0, i32 0
  %2296 = load i8*, i8** %buffer4797, align 8
  store i8* %2296, i8** %new_buffer4796, align 8
  %2297 = load i8*, i8** %new_buffer4796, align 8
  %2298 = load i8*, i8** %b, align 8
  %2299 = load i8*, i8** %old_buffer4767, align 8
  %sub.ptr.lhs.cast4798 = ptrtoint i8* %2298 to i64
  %sub.ptr.rhs.cast4799 = ptrtoint i8* %2299 to i64
  %sub.ptr.sub4800 = sub i64 %sub.ptr.lhs.cast4798, %sub.ptr.rhs.cast4799
  %add.ptr4801 = getelementptr inbounds i8, i8* %2297, i64 %sub.ptr.sub4800
  store i8* %add.ptr4801, i8** %b, align 8
  %2300 = load i8*, i8** %new_buffer4796, align 8
  %2301 = load i8*, i8** %begalt, align 8
  %2302 = load i8*, i8** %old_buffer4767, align 8
  %sub.ptr.lhs.cast4802 = ptrtoint i8* %2301 to i64
  %sub.ptr.rhs.cast4803 = ptrtoint i8* %2302 to i64
  %sub.ptr.sub4804 = sub i64 %sub.ptr.lhs.cast4802, %sub.ptr.rhs.cast4803
  %add.ptr4805 = getelementptr inbounds i8, i8* %2300, i64 %sub.ptr.sub4804
  store i8* %add.ptr4805, i8** %begalt, align 8
  %2303 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool4806 = icmp ne i8* %2303, null
  br i1 %tobool4806, label %if.then.4807, label %if.end.4812

if.then.4807:                                     ; preds = %if.then.4795
  %2304 = load i8*, i8** %new_buffer4796, align 8
  %2305 = load i8*, i8** %fixup_alt_jump, align 8
  %2306 = load i8*, i8** %old_buffer4767, align 8
  %sub.ptr.lhs.cast4808 = ptrtoint i8* %2305 to i64
  %sub.ptr.rhs.cast4809 = ptrtoint i8* %2306 to i64
  %sub.ptr.sub4810 = sub i64 %sub.ptr.lhs.cast4808, %sub.ptr.rhs.cast4809
  %add.ptr4811 = getelementptr inbounds i8, i8* %2304, i64 %sub.ptr.sub4810
  store i8* %add.ptr4811, i8** %fixup_alt_jump, align 8
  br label %if.end.4812

if.end.4812:                                      ; preds = %if.then.4807, %if.then.4795
  %2307 = load i8*, i8** %laststart, align 8
  %tobool4813 = icmp ne i8* %2307, null
  br i1 %tobool4813, label %if.then.4814, label %if.end.4819

if.then.4814:                                     ; preds = %if.end.4812
  %2308 = load i8*, i8** %new_buffer4796, align 8
  %2309 = load i8*, i8** %laststart, align 8
  %2310 = load i8*, i8** %old_buffer4767, align 8
  %sub.ptr.lhs.cast4815 = ptrtoint i8* %2309 to i64
  %sub.ptr.rhs.cast4816 = ptrtoint i8* %2310 to i64
  %sub.ptr.sub4817 = sub i64 %sub.ptr.lhs.cast4815, %sub.ptr.rhs.cast4816
  %add.ptr4818 = getelementptr inbounds i8, i8* %2308, i64 %sub.ptr.sub4817
  store i8* %add.ptr4818, i8** %laststart, align 8
  br label %if.end.4819

if.end.4819:                                      ; preds = %if.then.4814, %if.end.4812
  %2311 = load i8*, i8** %pending_exact, align 8
  %tobool4820 = icmp ne i8* %2311, null
  br i1 %tobool4820, label %if.then.4821, label %if.end.4826

if.then.4821:                                     ; preds = %if.end.4819
  %2312 = load i8*, i8** %new_buffer4796, align 8
  %2313 = load i8*, i8** %pending_exact, align 8
  %2314 = load i8*, i8** %old_buffer4767, align 8
  %sub.ptr.lhs.cast4822 = ptrtoint i8* %2313 to i64
  %sub.ptr.rhs.cast4823 = ptrtoint i8* %2314 to i64
  %sub.ptr.sub4824 = sub i64 %sub.ptr.lhs.cast4822, %sub.ptr.rhs.cast4823
  %add.ptr4825 = getelementptr inbounds i8, i8* %2312, i64 %sub.ptr.sub4824
  store i8* %add.ptr4825, i8** %pending_exact, align 8
  br label %if.end.4826

if.end.4826:                                      ; preds = %if.then.4821, %if.end.4819
  br label %if.end.4827

if.end.4827:                                      ; preds = %if.end.4826, %if.end.4791
  br label %do.end.4828

do.end.4828:                                      ; preds = %if.end.4827
  br label %while.cond.4756

while.end.4829:                                   ; preds = %while.cond.4756
  %2315 = load i8*, i8** %b, align 8
  %incdec.ptr4830 = getelementptr inbounds i8, i8* %2315, i32 1
  store i8* %incdec.ptr4830, i8** %b, align 8
  store i8 29, i8* %2315, align 1
  %2316 = load i32, i32* %c, align 4
  %idxprom4831 = sext i32 %2316 to i64
  %arrayidx4832 = getelementptr inbounds [256 x i8], [256 x i8]* @syntax_spec_code, i32 0, i64 %idxprom4831
  %2317 = load i8, i8* %arrayidx4832, align 1
  %2318 = load i8*, i8** %b, align 8
  %incdec.ptr4833 = getelementptr inbounds i8, i8* %2318, i32 1
  store i8* %incdec.ptr4833, i8** %b, align 8
  store i8 %2317, i8* %2318, align 1
  br label %do.end.4834

do.end.4834:                                      ; preds = %while.end.4829
  br label %sw.epilog.6156

sw.bb.4835:                                       ; preds = %do.end.2985
  %2319 = load i8*, i8** %b, align 8
  store i8* %2319, i8** %laststart, align 8
  br label %do.body.4836

do.body.4836:                                     ; preds = %sw.bb.4835
  %2320 = load i8*, i8** %p, align 8
  %2321 = load i8*, i8** %pend, align 8
  %cmp4838 = icmp eq i8* %2320, %2321
  br i1 %cmp4838, label %if.then.4840, label %if.end.4841

if.then.4840:                                     ; preds = %do.body.4836
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4841:                                      ; preds = %do.body.4836
  %2322 = load i8, i8* %multibyte, align 1
  %conv4842 = sext i8 %2322 to i32
  %tobool4843 = icmp ne i32 %conv4842, 0
  br i1 %tobool4843, label %cond.true.4844, label %cond.false.4899

cond.true.4844:                                   ; preds = %if.end.4841
  %2323 = load i8*, i8** %p, align 8
  %arrayidx4845 = getelementptr inbounds i8, i8* %2323, i64 0
  %2324 = load i8, i8* %arrayidx4845, align 1
  %conv4846 = zext i8 %2324 to i32
  %and4847 = and i32 %conv4846, 128
  %tobool4848 = icmp ne i32 %and4847, 0
  br i1 %tobool4848, label %cond.false.4852, label %cond.true.4849

cond.true.4849:                                   ; preds = %cond.true.4844
  store i32 1, i32* %len4837, align 4
  %2325 = load i8*, i8** %p, align 8
  %arrayidx4850 = getelementptr inbounds i8, i8* %2325, i64 0
  %2326 = load i8, i8* %arrayidx4850, align 1
  %conv4851 = zext i8 %2326 to i32
  br label %cond.end.4897

cond.false.4852:                                  ; preds = %cond.true.4844
  %2327 = load i8*, i8** %p, align 8
  %arrayidx4853 = getelementptr inbounds i8, i8* %2327, i64 0
  %2328 = load i8, i8* %arrayidx4853, align 1
  %conv4854 = zext i8 %2328 to i32
  %and4855 = and i32 %conv4854, 32
  %tobool4856 = icmp ne i32 %and4855, 0
  br i1 %tobool4856, label %cond.false.4872, label %cond.true.4857

cond.true.4857:                                   ; preds = %cond.false.4852
  store i32 2, i32* %len4837, align 4
  %2329 = load i8*, i8** %p, align 8
  %arrayidx4858 = getelementptr inbounds i8, i8* %2329, i64 0
  %2330 = load i8, i8* %arrayidx4858, align 1
  %conv4859 = zext i8 %2330 to i32
  %and4860 = and i32 %conv4859, 31
  %shl4861 = shl i32 %and4860, 6
  %2331 = load i8*, i8** %p, align 8
  %arrayidx4862 = getelementptr inbounds i8, i8* %2331, i64 1
  %2332 = load i8, i8* %arrayidx4862, align 1
  %conv4863 = zext i8 %2332 to i32
  %and4864 = and i32 %conv4863, 63
  %or4865 = or i32 %shl4861, %and4864
  %2333 = load i8*, i8** %p, align 8
  %arrayidx4866 = getelementptr inbounds i8, i8* %2333, i64 0
  %2334 = load i8, i8* %arrayidx4866, align 1
  %conv4867 = zext i8 %2334 to i32
  %cmp4868 = icmp slt i32 %conv4867, 194
  %cond4870 = select i1 %cmp4868, i32 4194176, i32 0
  %add4871 = add nsw i32 %or4865, %cond4870
  br label %cond.end.4895

cond.false.4872:                                  ; preds = %cond.false.4852
  %2335 = load i8*, i8** %p, align 8
  %arrayidx4873 = getelementptr inbounds i8, i8* %2335, i64 0
  %2336 = load i8, i8* %arrayidx4873, align 1
  %conv4874 = zext i8 %2336 to i32
  %and4875 = and i32 %conv4874, 16
  %tobool4876 = icmp ne i32 %and4875, 0
  br i1 %tobool4876, label %cond.false.4891, label %cond.true.4877

cond.true.4877:                                   ; preds = %cond.false.4872
  store i32 3, i32* %len4837, align 4
  %2337 = load i8*, i8** %p, align 8
  %arrayidx4878 = getelementptr inbounds i8, i8* %2337, i64 0
  %2338 = load i8, i8* %arrayidx4878, align 1
  %conv4879 = zext i8 %2338 to i32
  %and4880 = and i32 %conv4879, 15
  %shl4881 = shl i32 %and4880, 12
  %2339 = load i8*, i8** %p, align 8
  %arrayidx4882 = getelementptr inbounds i8, i8* %2339, i64 1
  %2340 = load i8, i8* %arrayidx4882, align 1
  %conv4883 = zext i8 %2340 to i32
  %and4884 = and i32 %conv4883, 63
  %shl4885 = shl i32 %and4884, 6
  %or4886 = or i32 %shl4881, %shl4885
  %2341 = load i8*, i8** %p, align 8
  %arrayidx4887 = getelementptr inbounds i8, i8* %2341, i64 2
  %2342 = load i8, i8* %arrayidx4887, align 1
  %conv4888 = zext i8 %2342 to i32
  %and4889 = and i32 %conv4888, 63
  %or4890 = or i32 %or4886, %and4889
  br label %cond.end.4893

cond.false.4891:                                  ; preds = %cond.false.4872
  %2343 = load i8*, i8** %p, align 8
  %call4892 = call i32 @string_char(i8* %2343, i8** null, i32* %len4837)
  br label %cond.end.4893

cond.end.4893:                                    ; preds = %cond.false.4891, %cond.true.4877
  %cond4894 = phi i32 [ %or4890, %cond.true.4877 ], [ %call4892, %cond.false.4891 ]
  br label %cond.end.4895

cond.end.4895:                                    ; preds = %cond.end.4893, %cond.true.4857
  %cond4896 = phi i32 [ %add4871, %cond.true.4857 ], [ %cond4894, %cond.end.4893 ]
  br label %cond.end.4897

cond.end.4897:                                    ; preds = %cond.end.4895, %cond.true.4849
  %cond4898 = phi i32 [ %conv4851, %cond.true.4849 ], [ %cond4896, %cond.end.4895 ]
  br label %cond.end.4901

cond.false.4899:                                  ; preds = %if.end.4841
  store i32 1, i32* %len4837, align 4
  %2344 = load i8*, i8** %p, align 8
  %2345 = load i8, i8* %2344, align 1
  %conv4900 = zext i8 %2345 to i32
  br label %cond.end.4901

cond.end.4901:                                    ; preds = %cond.false.4899, %cond.end.4897
  %cond4902 = phi i32 [ %cond4898, %cond.end.4897 ], [ %conv4900, %cond.false.4899 ]
  store i32 %cond4902, i32* %c, align 4
  %2346 = load i32, i32* %len4837, align 4
  %2347 = load i8*, i8** %p, align 8
  %idx.ext4903 = sext i32 %2346 to i64
  %add.ptr4904 = getelementptr inbounds i8, i8* %2347, i64 %idx.ext4903
  store i8* %add.ptr4904, i8** %p, align 8
  br label %do.end.4905

do.end.4905:                                      ; preds = %cond.end.4901
  br label %do.body.4906

do.body.4906:                                     ; preds = %do.end.4905
  br label %while.cond.4907

while.cond.4907:                                  ; preds = %do.end.4979, %do.body.4906
  %2348 = load i8*, i8** %b, align 8
  %2349 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4908 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2349, i32 0, i32 0
  %2350 = load i8*, i8** %buffer4908, align 8
  %sub.ptr.lhs.cast4909 = ptrtoint i8* %2348 to i64
  %sub.ptr.rhs.cast4910 = ptrtoint i8* %2350 to i64
  %sub.ptr.sub4911 = sub i64 %sub.ptr.lhs.cast4909, %sub.ptr.rhs.cast4910
  %add4912 = add nsw i64 %sub.ptr.sub4911, 2
  %2351 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4913 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2351, i32 0, i32 1
  %2352 = load i64, i64* %allocated4913, align 8
  %cmp4914 = icmp ugt i64 %add4912, %2352
  br i1 %cmp4914, label %while.body.4916, label %while.end.4980

while.body.4916:                                  ; preds = %while.cond.4907
  br label %do.body.4917

do.body.4917:                                     ; preds = %while.body.4916
  %2353 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4919 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2353, i32 0, i32 0
  %2354 = load i8*, i8** %buffer4919, align 8
  store i8* %2354, i8** %old_buffer4918, align 8
  %2355 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4920 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2355, i32 0, i32 1
  %2356 = load i64, i64* %allocated4920, align 8
  %cmp4921 = icmp eq i64 %2356, 32768
  br i1 %cmp4921, label %if.then.4923, label %if.end.4924

if.then.4923:                                     ; preds = %do.body.4917
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.4924:                                      ; preds = %do.body.4917
  %2357 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4925 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2357, i32 0, i32 1
  %2358 = load i64, i64* %allocated4925, align 8
  %shl4926 = shl i64 %2358, 1
  store i64 %shl4926, i64* %allocated4925, align 8
  %2359 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4927 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2359, i32 0, i32 1
  %2360 = load i64, i64* %allocated4927, align 8
  %cmp4928 = icmp ugt i64 %2360, 32768
  br i1 %cmp4928, label %if.then.4930, label %if.end.4932

if.then.4930:                                     ; preds = %if.end.4924
  %2361 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4931 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2361, i32 0, i32 1
  store i64 32768, i64* %allocated4931, align 8
  br label %if.end.4932

if.end.4932:                                      ; preds = %if.then.4930, %if.end.4924
  %2362 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4933 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2362, i32 0, i32 0
  %2363 = load i8*, i8** %buffer4933, align 8
  %2364 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated4934 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2364, i32 0, i32 1
  %2365 = load i64, i64* %allocated4934, align 8
  %mul4935 = mul i64 %2365, 1
  %call4936 = call i8* @xrealloc(i8* %2363, i64 %mul4935)
  %2366 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4937 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2366, i32 0, i32 0
  store i8* %call4936, i8** %buffer4937, align 8
  %2367 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4938 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2367, i32 0, i32 0
  %2368 = load i8*, i8** %buffer4938, align 8
  %cmp4939 = icmp eq i8* %2368, null
  br i1 %cmp4939, label %if.then.4941, label %if.end.4942

if.then.4941:                                     ; preds = %if.end.4932
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.4942:                                      ; preds = %if.end.4932
  %2369 = load i8*, i8** %old_buffer4918, align 8
  %2370 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4943 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2370, i32 0, i32 0
  %2371 = load i8*, i8** %buffer4943, align 8
  %cmp4944 = icmp ne i8* %2369, %2371
  br i1 %cmp4944, label %if.then.4946, label %if.end.4978

if.then.4946:                                     ; preds = %if.end.4942
  %2372 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer4948 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2372, i32 0, i32 0
  %2373 = load i8*, i8** %buffer4948, align 8
  store i8* %2373, i8** %new_buffer4947, align 8
  %2374 = load i8*, i8** %new_buffer4947, align 8
  %2375 = load i8*, i8** %b, align 8
  %2376 = load i8*, i8** %old_buffer4918, align 8
  %sub.ptr.lhs.cast4949 = ptrtoint i8* %2375 to i64
  %sub.ptr.rhs.cast4950 = ptrtoint i8* %2376 to i64
  %sub.ptr.sub4951 = sub i64 %sub.ptr.lhs.cast4949, %sub.ptr.rhs.cast4950
  %add.ptr4952 = getelementptr inbounds i8, i8* %2374, i64 %sub.ptr.sub4951
  store i8* %add.ptr4952, i8** %b, align 8
  %2377 = load i8*, i8** %new_buffer4947, align 8
  %2378 = load i8*, i8** %begalt, align 8
  %2379 = load i8*, i8** %old_buffer4918, align 8
  %sub.ptr.lhs.cast4953 = ptrtoint i8* %2378 to i64
  %sub.ptr.rhs.cast4954 = ptrtoint i8* %2379 to i64
  %sub.ptr.sub4955 = sub i64 %sub.ptr.lhs.cast4953, %sub.ptr.rhs.cast4954
  %add.ptr4956 = getelementptr inbounds i8, i8* %2377, i64 %sub.ptr.sub4955
  store i8* %add.ptr4956, i8** %begalt, align 8
  %2380 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool4957 = icmp ne i8* %2380, null
  br i1 %tobool4957, label %if.then.4958, label %if.end.4963

if.then.4958:                                     ; preds = %if.then.4946
  %2381 = load i8*, i8** %new_buffer4947, align 8
  %2382 = load i8*, i8** %fixup_alt_jump, align 8
  %2383 = load i8*, i8** %old_buffer4918, align 8
  %sub.ptr.lhs.cast4959 = ptrtoint i8* %2382 to i64
  %sub.ptr.rhs.cast4960 = ptrtoint i8* %2383 to i64
  %sub.ptr.sub4961 = sub i64 %sub.ptr.lhs.cast4959, %sub.ptr.rhs.cast4960
  %add.ptr4962 = getelementptr inbounds i8, i8* %2381, i64 %sub.ptr.sub4961
  store i8* %add.ptr4962, i8** %fixup_alt_jump, align 8
  br label %if.end.4963

if.end.4963:                                      ; preds = %if.then.4958, %if.then.4946
  %2384 = load i8*, i8** %laststart, align 8
  %tobool4964 = icmp ne i8* %2384, null
  br i1 %tobool4964, label %if.then.4965, label %if.end.4970

if.then.4965:                                     ; preds = %if.end.4963
  %2385 = load i8*, i8** %new_buffer4947, align 8
  %2386 = load i8*, i8** %laststart, align 8
  %2387 = load i8*, i8** %old_buffer4918, align 8
  %sub.ptr.lhs.cast4966 = ptrtoint i8* %2386 to i64
  %sub.ptr.rhs.cast4967 = ptrtoint i8* %2387 to i64
  %sub.ptr.sub4968 = sub i64 %sub.ptr.lhs.cast4966, %sub.ptr.rhs.cast4967
  %add.ptr4969 = getelementptr inbounds i8, i8* %2385, i64 %sub.ptr.sub4968
  store i8* %add.ptr4969, i8** %laststart, align 8
  br label %if.end.4970

if.end.4970:                                      ; preds = %if.then.4965, %if.end.4963
  %2388 = load i8*, i8** %pending_exact, align 8
  %tobool4971 = icmp ne i8* %2388, null
  br i1 %tobool4971, label %if.then.4972, label %if.end.4977

if.then.4972:                                     ; preds = %if.end.4970
  %2389 = load i8*, i8** %new_buffer4947, align 8
  %2390 = load i8*, i8** %pending_exact, align 8
  %2391 = load i8*, i8** %old_buffer4918, align 8
  %sub.ptr.lhs.cast4973 = ptrtoint i8* %2390 to i64
  %sub.ptr.rhs.cast4974 = ptrtoint i8* %2391 to i64
  %sub.ptr.sub4975 = sub i64 %sub.ptr.lhs.cast4973, %sub.ptr.rhs.cast4974
  %add.ptr4976 = getelementptr inbounds i8, i8* %2389, i64 %sub.ptr.sub4975
  store i8* %add.ptr4976, i8** %pending_exact, align 8
  br label %if.end.4977

if.end.4977:                                      ; preds = %if.then.4972, %if.end.4970
  br label %if.end.4978

if.end.4978:                                      ; preds = %if.end.4977, %if.end.4942
  br label %do.end.4979

do.end.4979:                                      ; preds = %if.end.4978
  br label %while.cond.4907

while.end.4980:                                   ; preds = %while.cond.4907
  %2392 = load i8*, i8** %b, align 8
  %incdec.ptr4981 = getelementptr inbounds i8, i8* %2392, i32 1
  store i8* %incdec.ptr4981, i8** %b, align 8
  store i8 33, i8* %2392, align 1
  %2393 = load i32, i32* %c, align 4
  %conv4982 = trunc i32 %2393 to i8
  %2394 = load i8*, i8** %b, align 8
  %incdec.ptr4983 = getelementptr inbounds i8, i8* %2394, i32 1
  store i8* %incdec.ptr4983, i8** %b, align 8
  store i8 %conv4982, i8* %2394, align 1
  br label %do.end.4984

do.end.4984:                                      ; preds = %while.end.4980
  br label %sw.epilog.6156

sw.bb.4985:                                       ; preds = %do.end.2985
  %2395 = load i8*, i8** %b, align 8
  store i8* %2395, i8** %laststart, align 8
  br label %do.body.4986

do.body.4986:                                     ; preds = %sw.bb.4985
  %2396 = load i8*, i8** %p, align 8
  %2397 = load i8*, i8** %pend, align 8
  %cmp4988 = icmp eq i8* %2396, %2397
  br i1 %cmp4988, label %if.then.4990, label %if.end.4991

if.then.4990:                                     ; preds = %do.body.4986
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.4991:                                      ; preds = %do.body.4986
  %2398 = load i8, i8* %multibyte, align 1
  %conv4992 = sext i8 %2398 to i32
  %tobool4993 = icmp ne i32 %conv4992, 0
  br i1 %tobool4993, label %cond.true.4994, label %cond.false.5049

cond.true.4994:                                   ; preds = %if.end.4991
  %2399 = load i8*, i8** %p, align 8
  %arrayidx4995 = getelementptr inbounds i8, i8* %2399, i64 0
  %2400 = load i8, i8* %arrayidx4995, align 1
  %conv4996 = zext i8 %2400 to i32
  %and4997 = and i32 %conv4996, 128
  %tobool4998 = icmp ne i32 %and4997, 0
  br i1 %tobool4998, label %cond.false.5002, label %cond.true.4999

cond.true.4999:                                   ; preds = %cond.true.4994
  store i32 1, i32* %len4987, align 4
  %2401 = load i8*, i8** %p, align 8
  %arrayidx5000 = getelementptr inbounds i8, i8* %2401, i64 0
  %2402 = load i8, i8* %arrayidx5000, align 1
  %conv5001 = zext i8 %2402 to i32
  br label %cond.end.5047

cond.false.5002:                                  ; preds = %cond.true.4994
  %2403 = load i8*, i8** %p, align 8
  %arrayidx5003 = getelementptr inbounds i8, i8* %2403, i64 0
  %2404 = load i8, i8* %arrayidx5003, align 1
  %conv5004 = zext i8 %2404 to i32
  %and5005 = and i32 %conv5004, 32
  %tobool5006 = icmp ne i32 %and5005, 0
  br i1 %tobool5006, label %cond.false.5022, label %cond.true.5007

cond.true.5007:                                   ; preds = %cond.false.5002
  store i32 2, i32* %len4987, align 4
  %2405 = load i8*, i8** %p, align 8
  %arrayidx5008 = getelementptr inbounds i8, i8* %2405, i64 0
  %2406 = load i8, i8* %arrayidx5008, align 1
  %conv5009 = zext i8 %2406 to i32
  %and5010 = and i32 %conv5009, 31
  %shl5011 = shl i32 %and5010, 6
  %2407 = load i8*, i8** %p, align 8
  %arrayidx5012 = getelementptr inbounds i8, i8* %2407, i64 1
  %2408 = load i8, i8* %arrayidx5012, align 1
  %conv5013 = zext i8 %2408 to i32
  %and5014 = and i32 %conv5013, 63
  %or5015 = or i32 %shl5011, %and5014
  %2409 = load i8*, i8** %p, align 8
  %arrayidx5016 = getelementptr inbounds i8, i8* %2409, i64 0
  %2410 = load i8, i8* %arrayidx5016, align 1
  %conv5017 = zext i8 %2410 to i32
  %cmp5018 = icmp slt i32 %conv5017, 194
  %cond5020 = select i1 %cmp5018, i32 4194176, i32 0
  %add5021 = add nsw i32 %or5015, %cond5020
  br label %cond.end.5045

cond.false.5022:                                  ; preds = %cond.false.5002
  %2411 = load i8*, i8** %p, align 8
  %arrayidx5023 = getelementptr inbounds i8, i8* %2411, i64 0
  %2412 = load i8, i8* %arrayidx5023, align 1
  %conv5024 = zext i8 %2412 to i32
  %and5025 = and i32 %conv5024, 16
  %tobool5026 = icmp ne i32 %and5025, 0
  br i1 %tobool5026, label %cond.false.5041, label %cond.true.5027

cond.true.5027:                                   ; preds = %cond.false.5022
  store i32 3, i32* %len4987, align 4
  %2413 = load i8*, i8** %p, align 8
  %arrayidx5028 = getelementptr inbounds i8, i8* %2413, i64 0
  %2414 = load i8, i8* %arrayidx5028, align 1
  %conv5029 = zext i8 %2414 to i32
  %and5030 = and i32 %conv5029, 15
  %shl5031 = shl i32 %and5030, 12
  %2415 = load i8*, i8** %p, align 8
  %arrayidx5032 = getelementptr inbounds i8, i8* %2415, i64 1
  %2416 = load i8, i8* %arrayidx5032, align 1
  %conv5033 = zext i8 %2416 to i32
  %and5034 = and i32 %conv5033, 63
  %shl5035 = shl i32 %and5034, 6
  %or5036 = or i32 %shl5031, %shl5035
  %2417 = load i8*, i8** %p, align 8
  %arrayidx5037 = getelementptr inbounds i8, i8* %2417, i64 2
  %2418 = load i8, i8* %arrayidx5037, align 1
  %conv5038 = zext i8 %2418 to i32
  %and5039 = and i32 %conv5038, 63
  %or5040 = or i32 %or5036, %and5039
  br label %cond.end.5043

cond.false.5041:                                  ; preds = %cond.false.5022
  %2419 = load i8*, i8** %p, align 8
  %call5042 = call i32 @string_char(i8* %2419, i8** null, i32* %len4987)
  br label %cond.end.5043

cond.end.5043:                                    ; preds = %cond.false.5041, %cond.true.5027
  %cond5044 = phi i32 [ %or5040, %cond.true.5027 ], [ %call5042, %cond.false.5041 ]
  br label %cond.end.5045

cond.end.5045:                                    ; preds = %cond.end.5043, %cond.true.5007
  %cond5046 = phi i32 [ %add5021, %cond.true.5007 ], [ %cond5044, %cond.end.5043 ]
  br label %cond.end.5047

cond.end.5047:                                    ; preds = %cond.end.5045, %cond.true.4999
  %cond5048 = phi i32 [ %conv5001, %cond.true.4999 ], [ %cond5046, %cond.end.5045 ]
  br label %cond.end.5051

cond.false.5049:                                  ; preds = %if.end.4991
  store i32 1, i32* %len4987, align 4
  %2420 = load i8*, i8** %p, align 8
  %2421 = load i8, i8* %2420, align 1
  %conv5050 = zext i8 %2421 to i32
  br label %cond.end.5051

cond.end.5051:                                    ; preds = %cond.false.5049, %cond.end.5047
  %cond5052 = phi i32 [ %cond5048, %cond.end.5047 ], [ %conv5050, %cond.false.5049 ]
  store i32 %cond5052, i32* %c, align 4
  %2422 = load i32, i32* %len4987, align 4
  %2423 = load i8*, i8** %p, align 8
  %idx.ext5053 = sext i32 %2422 to i64
  %add.ptr5054 = getelementptr inbounds i8, i8* %2423, i64 %idx.ext5053
  store i8* %add.ptr5054, i8** %p, align 8
  br label %do.end.5055

do.end.5055:                                      ; preds = %cond.end.5051
  br label %do.body.5056

do.body.5056:                                     ; preds = %do.end.5055
  br label %while.cond.5057

while.cond.5057:                                  ; preds = %do.end.5129, %do.body.5056
  %2424 = load i8*, i8** %b, align 8
  %2425 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5058 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2425, i32 0, i32 0
  %2426 = load i8*, i8** %buffer5058, align 8
  %sub.ptr.lhs.cast5059 = ptrtoint i8* %2424 to i64
  %sub.ptr.rhs.cast5060 = ptrtoint i8* %2426 to i64
  %sub.ptr.sub5061 = sub i64 %sub.ptr.lhs.cast5059, %sub.ptr.rhs.cast5060
  %add5062 = add nsw i64 %sub.ptr.sub5061, 2
  %2427 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5063 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2427, i32 0, i32 1
  %2428 = load i64, i64* %allocated5063, align 8
  %cmp5064 = icmp ugt i64 %add5062, %2428
  br i1 %cmp5064, label %while.body.5066, label %while.end.5130

while.body.5066:                                  ; preds = %while.cond.5057
  br label %do.body.5067

do.body.5067:                                     ; preds = %while.body.5066
  %2429 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5069 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2429, i32 0, i32 0
  %2430 = load i8*, i8** %buffer5069, align 8
  store i8* %2430, i8** %old_buffer5068, align 8
  %2431 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5070 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2431, i32 0, i32 1
  %2432 = load i64, i64* %allocated5070, align 8
  %cmp5071 = icmp eq i64 %2432, 32768
  br i1 %cmp5071, label %if.then.5073, label %if.end.5074

if.then.5073:                                     ; preds = %do.body.5067
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5074:                                      ; preds = %do.body.5067
  %2433 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5075 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2433, i32 0, i32 1
  %2434 = load i64, i64* %allocated5075, align 8
  %shl5076 = shl i64 %2434, 1
  store i64 %shl5076, i64* %allocated5075, align 8
  %2435 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5077 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2435, i32 0, i32 1
  %2436 = load i64, i64* %allocated5077, align 8
  %cmp5078 = icmp ugt i64 %2436, 32768
  br i1 %cmp5078, label %if.then.5080, label %if.end.5082

if.then.5080:                                     ; preds = %if.end.5074
  %2437 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5081 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2437, i32 0, i32 1
  store i64 32768, i64* %allocated5081, align 8
  br label %if.end.5082

if.end.5082:                                      ; preds = %if.then.5080, %if.end.5074
  %2438 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5083 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2438, i32 0, i32 0
  %2439 = load i8*, i8** %buffer5083, align 8
  %2440 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5084 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2440, i32 0, i32 1
  %2441 = load i64, i64* %allocated5084, align 8
  %mul5085 = mul i64 %2441, 1
  %call5086 = call i8* @xrealloc(i8* %2439, i64 %mul5085)
  %2442 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5087 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2442, i32 0, i32 0
  store i8* %call5086, i8** %buffer5087, align 8
  %2443 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5088 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2443, i32 0, i32 0
  %2444 = load i8*, i8** %buffer5088, align 8
  %cmp5089 = icmp eq i8* %2444, null
  br i1 %cmp5089, label %if.then.5091, label %if.end.5092

if.then.5091:                                     ; preds = %if.end.5082
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5092:                                      ; preds = %if.end.5082
  %2445 = load i8*, i8** %old_buffer5068, align 8
  %2446 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5093 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2446, i32 0, i32 0
  %2447 = load i8*, i8** %buffer5093, align 8
  %cmp5094 = icmp ne i8* %2445, %2447
  br i1 %cmp5094, label %if.then.5096, label %if.end.5128

if.then.5096:                                     ; preds = %if.end.5092
  %2448 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5098 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2448, i32 0, i32 0
  %2449 = load i8*, i8** %buffer5098, align 8
  store i8* %2449, i8** %new_buffer5097, align 8
  %2450 = load i8*, i8** %new_buffer5097, align 8
  %2451 = load i8*, i8** %b, align 8
  %2452 = load i8*, i8** %old_buffer5068, align 8
  %sub.ptr.lhs.cast5099 = ptrtoint i8* %2451 to i64
  %sub.ptr.rhs.cast5100 = ptrtoint i8* %2452 to i64
  %sub.ptr.sub5101 = sub i64 %sub.ptr.lhs.cast5099, %sub.ptr.rhs.cast5100
  %add.ptr5102 = getelementptr inbounds i8, i8* %2450, i64 %sub.ptr.sub5101
  store i8* %add.ptr5102, i8** %b, align 8
  %2453 = load i8*, i8** %new_buffer5097, align 8
  %2454 = load i8*, i8** %begalt, align 8
  %2455 = load i8*, i8** %old_buffer5068, align 8
  %sub.ptr.lhs.cast5103 = ptrtoint i8* %2454 to i64
  %sub.ptr.rhs.cast5104 = ptrtoint i8* %2455 to i64
  %sub.ptr.sub5105 = sub i64 %sub.ptr.lhs.cast5103, %sub.ptr.rhs.cast5104
  %add.ptr5106 = getelementptr inbounds i8, i8* %2453, i64 %sub.ptr.sub5105
  store i8* %add.ptr5106, i8** %begalt, align 8
  %2456 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5107 = icmp ne i8* %2456, null
  br i1 %tobool5107, label %if.then.5108, label %if.end.5113

if.then.5108:                                     ; preds = %if.then.5096
  %2457 = load i8*, i8** %new_buffer5097, align 8
  %2458 = load i8*, i8** %fixup_alt_jump, align 8
  %2459 = load i8*, i8** %old_buffer5068, align 8
  %sub.ptr.lhs.cast5109 = ptrtoint i8* %2458 to i64
  %sub.ptr.rhs.cast5110 = ptrtoint i8* %2459 to i64
  %sub.ptr.sub5111 = sub i64 %sub.ptr.lhs.cast5109, %sub.ptr.rhs.cast5110
  %add.ptr5112 = getelementptr inbounds i8, i8* %2457, i64 %sub.ptr.sub5111
  store i8* %add.ptr5112, i8** %fixup_alt_jump, align 8
  br label %if.end.5113

if.end.5113:                                      ; preds = %if.then.5108, %if.then.5096
  %2460 = load i8*, i8** %laststart, align 8
  %tobool5114 = icmp ne i8* %2460, null
  br i1 %tobool5114, label %if.then.5115, label %if.end.5120

if.then.5115:                                     ; preds = %if.end.5113
  %2461 = load i8*, i8** %new_buffer5097, align 8
  %2462 = load i8*, i8** %laststart, align 8
  %2463 = load i8*, i8** %old_buffer5068, align 8
  %sub.ptr.lhs.cast5116 = ptrtoint i8* %2462 to i64
  %sub.ptr.rhs.cast5117 = ptrtoint i8* %2463 to i64
  %sub.ptr.sub5118 = sub i64 %sub.ptr.lhs.cast5116, %sub.ptr.rhs.cast5117
  %add.ptr5119 = getelementptr inbounds i8, i8* %2461, i64 %sub.ptr.sub5118
  store i8* %add.ptr5119, i8** %laststart, align 8
  br label %if.end.5120

if.end.5120:                                      ; preds = %if.then.5115, %if.end.5113
  %2464 = load i8*, i8** %pending_exact, align 8
  %tobool5121 = icmp ne i8* %2464, null
  br i1 %tobool5121, label %if.then.5122, label %if.end.5127

if.then.5122:                                     ; preds = %if.end.5120
  %2465 = load i8*, i8** %new_buffer5097, align 8
  %2466 = load i8*, i8** %pending_exact, align 8
  %2467 = load i8*, i8** %old_buffer5068, align 8
  %sub.ptr.lhs.cast5123 = ptrtoint i8* %2466 to i64
  %sub.ptr.rhs.cast5124 = ptrtoint i8* %2467 to i64
  %sub.ptr.sub5125 = sub i64 %sub.ptr.lhs.cast5123, %sub.ptr.rhs.cast5124
  %add.ptr5126 = getelementptr inbounds i8, i8* %2465, i64 %sub.ptr.sub5125
  store i8* %add.ptr5126, i8** %pending_exact, align 8
  br label %if.end.5127

if.end.5127:                                      ; preds = %if.then.5122, %if.end.5120
  br label %if.end.5128

if.end.5128:                                      ; preds = %if.end.5127, %if.end.5092
  br label %do.end.5129

do.end.5129:                                      ; preds = %if.end.5128
  br label %while.cond.5057

while.end.5130:                                   ; preds = %while.cond.5057
  %2468 = load i8*, i8** %b, align 8
  %incdec.ptr5131 = getelementptr inbounds i8, i8* %2468, i32 1
  store i8* %incdec.ptr5131, i8** %b, align 8
  store i8 34, i8* %2468, align 1
  %2469 = load i32, i32* %c, align 4
  %conv5132 = trunc i32 %2469 to i8
  %2470 = load i8*, i8** %b, align 8
  %incdec.ptr5133 = getelementptr inbounds i8, i8* %2470, i32 1
  store i8* %incdec.ptr5133, i8** %b, align 8
  store i8 %conv5132, i8* %2470, align 1
  br label %do.end.5134

do.end.5134:                                      ; preds = %while.end.5130
  br label %sw.epilog.6156

sw.bb.5135:                                       ; preds = %do.end.2985
  %2471 = load i64, i64* %syntax.addr, align 8
  %and5136 = and i64 %2471, 524288
  %tobool5137 = icmp ne i64 %and5136, 0
  br i1 %tobool5137, label %if.then.5138, label %if.end.5139

if.then.5138:                                     ; preds = %sw.bb.5135
  br label %normal_char

if.end.5139:                                      ; preds = %sw.bb.5135
  %2472 = load i8*, i8** %b, align 8
  store i8* %2472, i8** %laststart, align 8
  br label %do.body.5140

do.body.5140:                                     ; preds = %if.end.5139
  br label %while.cond.5141

while.cond.5141:                                  ; preds = %do.end.5213, %do.body.5140
  %2473 = load i8*, i8** %b, align 8
  %2474 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5142 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2474, i32 0, i32 0
  %2475 = load i8*, i8** %buffer5142, align 8
  %sub.ptr.lhs.cast5143 = ptrtoint i8* %2473 to i64
  %sub.ptr.rhs.cast5144 = ptrtoint i8* %2475 to i64
  %sub.ptr.sub5145 = sub i64 %sub.ptr.lhs.cast5143, %sub.ptr.rhs.cast5144
  %add5146 = add nsw i64 %sub.ptr.sub5145, 2
  %2476 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5147 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2476, i32 0, i32 1
  %2477 = load i64, i64* %allocated5147, align 8
  %cmp5148 = icmp ugt i64 %add5146, %2477
  br i1 %cmp5148, label %while.body.5150, label %while.end.5214

while.body.5150:                                  ; preds = %while.cond.5141
  br label %do.body.5151

do.body.5151:                                     ; preds = %while.body.5150
  %2478 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5153 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2478, i32 0, i32 0
  %2479 = load i8*, i8** %buffer5153, align 8
  store i8* %2479, i8** %old_buffer5152, align 8
  %2480 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5154 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2480, i32 0, i32 1
  %2481 = load i64, i64* %allocated5154, align 8
  %cmp5155 = icmp eq i64 %2481, 32768
  br i1 %cmp5155, label %if.then.5157, label %if.end.5158

if.then.5157:                                     ; preds = %do.body.5151
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5158:                                      ; preds = %do.body.5151
  %2482 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5159 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2482, i32 0, i32 1
  %2483 = load i64, i64* %allocated5159, align 8
  %shl5160 = shl i64 %2483, 1
  store i64 %shl5160, i64* %allocated5159, align 8
  %2484 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5161 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2484, i32 0, i32 1
  %2485 = load i64, i64* %allocated5161, align 8
  %cmp5162 = icmp ugt i64 %2485, 32768
  br i1 %cmp5162, label %if.then.5164, label %if.end.5166

if.then.5164:                                     ; preds = %if.end.5158
  %2486 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5165 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2486, i32 0, i32 1
  store i64 32768, i64* %allocated5165, align 8
  br label %if.end.5166

if.end.5166:                                      ; preds = %if.then.5164, %if.end.5158
  %2487 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5167 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2487, i32 0, i32 0
  %2488 = load i8*, i8** %buffer5167, align 8
  %2489 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5168 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2489, i32 0, i32 1
  %2490 = load i64, i64* %allocated5168, align 8
  %mul5169 = mul i64 %2490, 1
  %call5170 = call i8* @xrealloc(i8* %2488, i64 %mul5169)
  %2491 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5171 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2491, i32 0, i32 0
  store i8* %call5170, i8** %buffer5171, align 8
  %2492 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5172 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2492, i32 0, i32 0
  %2493 = load i8*, i8** %buffer5172, align 8
  %cmp5173 = icmp eq i8* %2493, null
  br i1 %cmp5173, label %if.then.5175, label %if.end.5176

if.then.5175:                                     ; preds = %if.end.5166
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5176:                                      ; preds = %if.end.5166
  %2494 = load i8*, i8** %old_buffer5152, align 8
  %2495 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5177 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2495, i32 0, i32 0
  %2496 = load i8*, i8** %buffer5177, align 8
  %cmp5178 = icmp ne i8* %2494, %2496
  br i1 %cmp5178, label %if.then.5180, label %if.end.5212

if.then.5180:                                     ; preds = %if.end.5176
  %2497 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5182 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2497, i32 0, i32 0
  %2498 = load i8*, i8** %buffer5182, align 8
  store i8* %2498, i8** %new_buffer5181, align 8
  %2499 = load i8*, i8** %new_buffer5181, align 8
  %2500 = load i8*, i8** %b, align 8
  %2501 = load i8*, i8** %old_buffer5152, align 8
  %sub.ptr.lhs.cast5183 = ptrtoint i8* %2500 to i64
  %sub.ptr.rhs.cast5184 = ptrtoint i8* %2501 to i64
  %sub.ptr.sub5185 = sub i64 %sub.ptr.lhs.cast5183, %sub.ptr.rhs.cast5184
  %add.ptr5186 = getelementptr inbounds i8, i8* %2499, i64 %sub.ptr.sub5185
  store i8* %add.ptr5186, i8** %b, align 8
  %2502 = load i8*, i8** %new_buffer5181, align 8
  %2503 = load i8*, i8** %begalt, align 8
  %2504 = load i8*, i8** %old_buffer5152, align 8
  %sub.ptr.lhs.cast5187 = ptrtoint i8* %2503 to i64
  %sub.ptr.rhs.cast5188 = ptrtoint i8* %2504 to i64
  %sub.ptr.sub5189 = sub i64 %sub.ptr.lhs.cast5187, %sub.ptr.rhs.cast5188
  %add.ptr5190 = getelementptr inbounds i8, i8* %2502, i64 %sub.ptr.sub5189
  store i8* %add.ptr5190, i8** %begalt, align 8
  %2505 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5191 = icmp ne i8* %2505, null
  br i1 %tobool5191, label %if.then.5192, label %if.end.5197

if.then.5192:                                     ; preds = %if.then.5180
  %2506 = load i8*, i8** %new_buffer5181, align 8
  %2507 = load i8*, i8** %fixup_alt_jump, align 8
  %2508 = load i8*, i8** %old_buffer5152, align 8
  %sub.ptr.lhs.cast5193 = ptrtoint i8* %2507 to i64
  %sub.ptr.rhs.cast5194 = ptrtoint i8* %2508 to i64
  %sub.ptr.sub5195 = sub i64 %sub.ptr.lhs.cast5193, %sub.ptr.rhs.cast5194
  %add.ptr5196 = getelementptr inbounds i8, i8* %2506, i64 %sub.ptr.sub5195
  store i8* %add.ptr5196, i8** %fixup_alt_jump, align 8
  br label %if.end.5197

if.end.5197:                                      ; preds = %if.then.5192, %if.then.5180
  %2509 = load i8*, i8** %laststart, align 8
  %tobool5198 = icmp ne i8* %2509, null
  br i1 %tobool5198, label %if.then.5199, label %if.end.5204

if.then.5199:                                     ; preds = %if.end.5197
  %2510 = load i8*, i8** %new_buffer5181, align 8
  %2511 = load i8*, i8** %laststart, align 8
  %2512 = load i8*, i8** %old_buffer5152, align 8
  %sub.ptr.lhs.cast5200 = ptrtoint i8* %2511 to i64
  %sub.ptr.rhs.cast5201 = ptrtoint i8* %2512 to i64
  %sub.ptr.sub5202 = sub i64 %sub.ptr.lhs.cast5200, %sub.ptr.rhs.cast5201
  %add.ptr5203 = getelementptr inbounds i8, i8* %2510, i64 %sub.ptr.sub5202
  store i8* %add.ptr5203, i8** %laststart, align 8
  br label %if.end.5204

if.end.5204:                                      ; preds = %if.then.5199, %if.end.5197
  %2513 = load i8*, i8** %pending_exact, align 8
  %tobool5205 = icmp ne i8* %2513, null
  br i1 %tobool5205, label %if.then.5206, label %if.end.5211

if.then.5206:                                     ; preds = %if.end.5204
  %2514 = load i8*, i8** %new_buffer5181, align 8
  %2515 = load i8*, i8** %pending_exact, align 8
  %2516 = load i8*, i8** %old_buffer5152, align 8
  %sub.ptr.lhs.cast5207 = ptrtoint i8* %2515 to i64
  %sub.ptr.rhs.cast5208 = ptrtoint i8* %2516 to i64
  %sub.ptr.sub5209 = sub i64 %sub.ptr.lhs.cast5207, %sub.ptr.rhs.cast5208
  %add.ptr5210 = getelementptr inbounds i8, i8* %2514, i64 %sub.ptr.sub5209
  store i8* %add.ptr5210, i8** %pending_exact, align 8
  br label %if.end.5211

if.end.5211:                                      ; preds = %if.then.5206, %if.end.5204
  br label %if.end.5212

if.end.5212:                                      ; preds = %if.end.5211, %if.end.5176
  br label %do.end.5213

do.end.5213:                                      ; preds = %if.end.5212
  br label %while.cond.5141

while.end.5214:                                   ; preds = %while.cond.5141
  %2517 = load i8*, i8** %b, align 8
  %incdec.ptr5215 = getelementptr inbounds i8, i8* %2517, i32 1
  store i8* %incdec.ptr5215, i8** %b, align 8
  store i8 28, i8* %2517, align 1
  %2518 = load i8*, i8** %b, align 8
  %incdec.ptr5216 = getelementptr inbounds i8, i8* %2518, i32 1
  store i8* %incdec.ptr5216, i8** %b, align 8
  store i8 2, i8* %2518, align 1
  br label %do.end.5217

do.end.5217:                                      ; preds = %while.end.5214
  br label %sw.epilog.6156

sw.bb.5218:                                       ; preds = %do.end.2985
  %2519 = load i64, i64* %syntax.addr, align 8
  %and5219 = and i64 %2519, 524288
  %tobool5220 = icmp ne i64 %and5219, 0
  br i1 %tobool5220, label %if.then.5221, label %if.end.5222

if.then.5221:                                     ; preds = %sw.bb.5218
  br label %normal_char

if.end.5222:                                      ; preds = %sw.bb.5218
  %2520 = load i8*, i8** %b, align 8
  store i8* %2520, i8** %laststart, align 8
  br label %do.body.5223

do.body.5223:                                     ; preds = %if.end.5222
  br label %while.cond.5224

while.cond.5224:                                  ; preds = %do.end.5296, %do.body.5223
  %2521 = load i8*, i8** %b, align 8
  %2522 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5225 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2522, i32 0, i32 0
  %2523 = load i8*, i8** %buffer5225, align 8
  %sub.ptr.lhs.cast5226 = ptrtoint i8* %2521 to i64
  %sub.ptr.rhs.cast5227 = ptrtoint i8* %2523 to i64
  %sub.ptr.sub5228 = sub i64 %sub.ptr.lhs.cast5226, %sub.ptr.rhs.cast5227
  %add5229 = add nsw i64 %sub.ptr.sub5228, 2
  %2524 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5230 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2524, i32 0, i32 1
  %2525 = load i64, i64* %allocated5230, align 8
  %cmp5231 = icmp ugt i64 %add5229, %2525
  br i1 %cmp5231, label %while.body.5233, label %while.end.5297

while.body.5233:                                  ; preds = %while.cond.5224
  br label %do.body.5234

do.body.5234:                                     ; preds = %while.body.5233
  %2526 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5236 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2526, i32 0, i32 0
  %2527 = load i8*, i8** %buffer5236, align 8
  store i8* %2527, i8** %old_buffer5235, align 8
  %2528 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5237 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2528, i32 0, i32 1
  %2529 = load i64, i64* %allocated5237, align 8
  %cmp5238 = icmp eq i64 %2529, 32768
  br i1 %cmp5238, label %if.then.5240, label %if.end.5241

if.then.5240:                                     ; preds = %do.body.5234
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5241:                                      ; preds = %do.body.5234
  %2530 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5242 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2530, i32 0, i32 1
  %2531 = load i64, i64* %allocated5242, align 8
  %shl5243 = shl i64 %2531, 1
  store i64 %shl5243, i64* %allocated5242, align 8
  %2532 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5244 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2532, i32 0, i32 1
  %2533 = load i64, i64* %allocated5244, align 8
  %cmp5245 = icmp ugt i64 %2533, 32768
  br i1 %cmp5245, label %if.then.5247, label %if.end.5249

if.then.5247:                                     ; preds = %if.end.5241
  %2534 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5248 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2534, i32 0, i32 1
  store i64 32768, i64* %allocated5248, align 8
  br label %if.end.5249

if.end.5249:                                      ; preds = %if.then.5247, %if.end.5241
  %2535 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5250 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2535, i32 0, i32 0
  %2536 = load i8*, i8** %buffer5250, align 8
  %2537 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5251 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2537, i32 0, i32 1
  %2538 = load i64, i64* %allocated5251, align 8
  %mul5252 = mul i64 %2538, 1
  %call5253 = call i8* @xrealloc(i8* %2536, i64 %mul5252)
  %2539 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5254 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2539, i32 0, i32 0
  store i8* %call5253, i8** %buffer5254, align 8
  %2540 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5255 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2540, i32 0, i32 0
  %2541 = load i8*, i8** %buffer5255, align 8
  %cmp5256 = icmp eq i8* %2541, null
  br i1 %cmp5256, label %if.then.5258, label %if.end.5259

if.then.5258:                                     ; preds = %if.end.5249
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5259:                                      ; preds = %if.end.5249
  %2542 = load i8*, i8** %old_buffer5235, align 8
  %2543 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5260 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2543, i32 0, i32 0
  %2544 = load i8*, i8** %buffer5260, align 8
  %cmp5261 = icmp ne i8* %2542, %2544
  br i1 %cmp5261, label %if.then.5263, label %if.end.5295

if.then.5263:                                     ; preds = %if.end.5259
  %2545 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5265 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2545, i32 0, i32 0
  %2546 = load i8*, i8** %buffer5265, align 8
  store i8* %2546, i8** %new_buffer5264, align 8
  %2547 = load i8*, i8** %new_buffer5264, align 8
  %2548 = load i8*, i8** %b, align 8
  %2549 = load i8*, i8** %old_buffer5235, align 8
  %sub.ptr.lhs.cast5266 = ptrtoint i8* %2548 to i64
  %sub.ptr.rhs.cast5267 = ptrtoint i8* %2549 to i64
  %sub.ptr.sub5268 = sub i64 %sub.ptr.lhs.cast5266, %sub.ptr.rhs.cast5267
  %add.ptr5269 = getelementptr inbounds i8, i8* %2547, i64 %sub.ptr.sub5268
  store i8* %add.ptr5269, i8** %b, align 8
  %2550 = load i8*, i8** %new_buffer5264, align 8
  %2551 = load i8*, i8** %begalt, align 8
  %2552 = load i8*, i8** %old_buffer5235, align 8
  %sub.ptr.lhs.cast5270 = ptrtoint i8* %2551 to i64
  %sub.ptr.rhs.cast5271 = ptrtoint i8* %2552 to i64
  %sub.ptr.sub5272 = sub i64 %sub.ptr.lhs.cast5270, %sub.ptr.rhs.cast5271
  %add.ptr5273 = getelementptr inbounds i8, i8* %2550, i64 %sub.ptr.sub5272
  store i8* %add.ptr5273, i8** %begalt, align 8
  %2553 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5274 = icmp ne i8* %2553, null
  br i1 %tobool5274, label %if.then.5275, label %if.end.5280

if.then.5275:                                     ; preds = %if.then.5263
  %2554 = load i8*, i8** %new_buffer5264, align 8
  %2555 = load i8*, i8** %fixup_alt_jump, align 8
  %2556 = load i8*, i8** %old_buffer5235, align 8
  %sub.ptr.lhs.cast5276 = ptrtoint i8* %2555 to i64
  %sub.ptr.rhs.cast5277 = ptrtoint i8* %2556 to i64
  %sub.ptr.sub5278 = sub i64 %sub.ptr.lhs.cast5276, %sub.ptr.rhs.cast5277
  %add.ptr5279 = getelementptr inbounds i8, i8* %2554, i64 %sub.ptr.sub5278
  store i8* %add.ptr5279, i8** %fixup_alt_jump, align 8
  br label %if.end.5280

if.end.5280:                                      ; preds = %if.then.5275, %if.then.5263
  %2557 = load i8*, i8** %laststart, align 8
  %tobool5281 = icmp ne i8* %2557, null
  br i1 %tobool5281, label %if.then.5282, label %if.end.5287

if.then.5282:                                     ; preds = %if.end.5280
  %2558 = load i8*, i8** %new_buffer5264, align 8
  %2559 = load i8*, i8** %laststart, align 8
  %2560 = load i8*, i8** %old_buffer5235, align 8
  %sub.ptr.lhs.cast5283 = ptrtoint i8* %2559 to i64
  %sub.ptr.rhs.cast5284 = ptrtoint i8* %2560 to i64
  %sub.ptr.sub5285 = sub i64 %sub.ptr.lhs.cast5283, %sub.ptr.rhs.cast5284
  %add.ptr5286 = getelementptr inbounds i8, i8* %2558, i64 %sub.ptr.sub5285
  store i8* %add.ptr5286, i8** %laststart, align 8
  br label %if.end.5287

if.end.5287:                                      ; preds = %if.then.5282, %if.end.5280
  %2561 = load i8*, i8** %pending_exact, align 8
  %tobool5288 = icmp ne i8* %2561, null
  br i1 %tobool5288, label %if.then.5289, label %if.end.5294

if.then.5289:                                     ; preds = %if.end.5287
  %2562 = load i8*, i8** %new_buffer5264, align 8
  %2563 = load i8*, i8** %pending_exact, align 8
  %2564 = load i8*, i8** %old_buffer5235, align 8
  %sub.ptr.lhs.cast5290 = ptrtoint i8* %2563 to i64
  %sub.ptr.rhs.cast5291 = ptrtoint i8* %2564 to i64
  %sub.ptr.sub5292 = sub i64 %sub.ptr.lhs.cast5290, %sub.ptr.rhs.cast5291
  %add.ptr5293 = getelementptr inbounds i8, i8* %2562, i64 %sub.ptr.sub5292
  store i8* %add.ptr5293, i8** %pending_exact, align 8
  br label %if.end.5294

if.end.5294:                                      ; preds = %if.then.5289, %if.end.5287
  br label %if.end.5295

if.end.5295:                                      ; preds = %if.end.5294, %if.end.5259
  br label %do.end.5296

do.end.5296:                                      ; preds = %if.end.5295
  br label %while.cond.5224

while.end.5297:                                   ; preds = %while.cond.5224
  %2565 = load i8*, i8** %b, align 8
  %incdec.ptr5298 = getelementptr inbounds i8, i8* %2565, i32 1
  store i8* %incdec.ptr5298, i8** %b, align 8
  store i8 29, i8* %2565, align 1
  %2566 = load i8*, i8** %b, align 8
  %incdec.ptr5299 = getelementptr inbounds i8, i8* %2566, i32 1
  store i8* %incdec.ptr5299, i8** %b, align 8
  store i8 2, i8* %2566, align 1
  br label %do.end.5300

do.end.5300:                                      ; preds = %while.end.5297
  br label %sw.epilog.6156

sw.bb.5301:                                       ; preds = %do.end.2985
  %2567 = load i64, i64* %syntax.addr, align 8
  %and5302 = and i64 %2567, 524288
  %tobool5303 = icmp ne i64 %and5302, 0
  br i1 %tobool5303, label %if.then.5304, label %if.end.5305

if.then.5304:                                     ; preds = %sw.bb.5301
  br label %normal_char

if.end.5305:                                      ; preds = %sw.bb.5301
  %2568 = load i8*, i8** %b, align 8
  store i8* %2568, i8** %laststart, align 8
  br label %do.body.5306

do.body.5306:                                     ; preds = %if.end.5305
  br label %while.cond.5307

while.cond.5307:                                  ; preds = %do.end.5379, %do.body.5306
  %2569 = load i8*, i8** %b, align 8
  %2570 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5308 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2570, i32 0, i32 0
  %2571 = load i8*, i8** %buffer5308, align 8
  %sub.ptr.lhs.cast5309 = ptrtoint i8* %2569 to i64
  %sub.ptr.rhs.cast5310 = ptrtoint i8* %2571 to i64
  %sub.ptr.sub5311 = sub i64 %sub.ptr.lhs.cast5309, %sub.ptr.rhs.cast5310
  %add5312 = add nsw i64 %sub.ptr.sub5311, 1
  %2572 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5313 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2572, i32 0, i32 1
  %2573 = load i64, i64* %allocated5313, align 8
  %cmp5314 = icmp ugt i64 %add5312, %2573
  br i1 %cmp5314, label %while.body.5316, label %while.end.5380

while.body.5316:                                  ; preds = %while.cond.5307
  br label %do.body.5317

do.body.5317:                                     ; preds = %while.body.5316
  %2574 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5319 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2574, i32 0, i32 0
  %2575 = load i8*, i8** %buffer5319, align 8
  store i8* %2575, i8** %old_buffer5318, align 8
  %2576 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5320 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2576, i32 0, i32 1
  %2577 = load i64, i64* %allocated5320, align 8
  %cmp5321 = icmp eq i64 %2577, 32768
  br i1 %cmp5321, label %if.then.5323, label %if.end.5324

if.then.5323:                                     ; preds = %do.body.5317
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5324:                                      ; preds = %do.body.5317
  %2578 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5325 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2578, i32 0, i32 1
  %2579 = load i64, i64* %allocated5325, align 8
  %shl5326 = shl i64 %2579, 1
  store i64 %shl5326, i64* %allocated5325, align 8
  %2580 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5327 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2580, i32 0, i32 1
  %2581 = load i64, i64* %allocated5327, align 8
  %cmp5328 = icmp ugt i64 %2581, 32768
  br i1 %cmp5328, label %if.then.5330, label %if.end.5332

if.then.5330:                                     ; preds = %if.end.5324
  %2582 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5331 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2582, i32 0, i32 1
  store i64 32768, i64* %allocated5331, align 8
  br label %if.end.5332

if.end.5332:                                      ; preds = %if.then.5330, %if.end.5324
  %2583 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5333 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2583, i32 0, i32 0
  %2584 = load i8*, i8** %buffer5333, align 8
  %2585 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5334 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2585, i32 0, i32 1
  %2586 = load i64, i64* %allocated5334, align 8
  %mul5335 = mul i64 %2586, 1
  %call5336 = call i8* @xrealloc(i8* %2584, i64 %mul5335)
  %2587 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5337 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2587, i32 0, i32 0
  store i8* %call5336, i8** %buffer5337, align 8
  %2588 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5338 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2588, i32 0, i32 0
  %2589 = load i8*, i8** %buffer5338, align 8
  %cmp5339 = icmp eq i8* %2589, null
  br i1 %cmp5339, label %if.then.5341, label %if.end.5342

if.then.5341:                                     ; preds = %if.end.5332
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5342:                                      ; preds = %if.end.5332
  %2590 = load i8*, i8** %old_buffer5318, align 8
  %2591 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5343 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2591, i32 0, i32 0
  %2592 = load i8*, i8** %buffer5343, align 8
  %cmp5344 = icmp ne i8* %2590, %2592
  br i1 %cmp5344, label %if.then.5346, label %if.end.5378

if.then.5346:                                     ; preds = %if.end.5342
  %2593 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5348 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2593, i32 0, i32 0
  %2594 = load i8*, i8** %buffer5348, align 8
  store i8* %2594, i8** %new_buffer5347, align 8
  %2595 = load i8*, i8** %new_buffer5347, align 8
  %2596 = load i8*, i8** %b, align 8
  %2597 = load i8*, i8** %old_buffer5318, align 8
  %sub.ptr.lhs.cast5349 = ptrtoint i8* %2596 to i64
  %sub.ptr.rhs.cast5350 = ptrtoint i8* %2597 to i64
  %sub.ptr.sub5351 = sub i64 %sub.ptr.lhs.cast5349, %sub.ptr.rhs.cast5350
  %add.ptr5352 = getelementptr inbounds i8, i8* %2595, i64 %sub.ptr.sub5351
  store i8* %add.ptr5352, i8** %b, align 8
  %2598 = load i8*, i8** %new_buffer5347, align 8
  %2599 = load i8*, i8** %begalt, align 8
  %2600 = load i8*, i8** %old_buffer5318, align 8
  %sub.ptr.lhs.cast5353 = ptrtoint i8* %2599 to i64
  %sub.ptr.rhs.cast5354 = ptrtoint i8* %2600 to i64
  %sub.ptr.sub5355 = sub i64 %sub.ptr.lhs.cast5353, %sub.ptr.rhs.cast5354
  %add.ptr5356 = getelementptr inbounds i8, i8* %2598, i64 %sub.ptr.sub5355
  store i8* %add.ptr5356, i8** %begalt, align 8
  %2601 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5357 = icmp ne i8* %2601, null
  br i1 %tobool5357, label %if.then.5358, label %if.end.5363

if.then.5358:                                     ; preds = %if.then.5346
  %2602 = load i8*, i8** %new_buffer5347, align 8
  %2603 = load i8*, i8** %fixup_alt_jump, align 8
  %2604 = load i8*, i8** %old_buffer5318, align 8
  %sub.ptr.lhs.cast5359 = ptrtoint i8* %2603 to i64
  %sub.ptr.rhs.cast5360 = ptrtoint i8* %2604 to i64
  %sub.ptr.sub5361 = sub i64 %sub.ptr.lhs.cast5359, %sub.ptr.rhs.cast5360
  %add.ptr5362 = getelementptr inbounds i8, i8* %2602, i64 %sub.ptr.sub5361
  store i8* %add.ptr5362, i8** %fixup_alt_jump, align 8
  br label %if.end.5363

if.end.5363:                                      ; preds = %if.then.5358, %if.then.5346
  %2605 = load i8*, i8** %laststart, align 8
  %tobool5364 = icmp ne i8* %2605, null
  br i1 %tobool5364, label %if.then.5365, label %if.end.5370

if.then.5365:                                     ; preds = %if.end.5363
  %2606 = load i8*, i8** %new_buffer5347, align 8
  %2607 = load i8*, i8** %laststart, align 8
  %2608 = load i8*, i8** %old_buffer5318, align 8
  %sub.ptr.lhs.cast5366 = ptrtoint i8* %2607 to i64
  %sub.ptr.rhs.cast5367 = ptrtoint i8* %2608 to i64
  %sub.ptr.sub5368 = sub i64 %sub.ptr.lhs.cast5366, %sub.ptr.rhs.cast5367
  %add.ptr5369 = getelementptr inbounds i8, i8* %2606, i64 %sub.ptr.sub5368
  store i8* %add.ptr5369, i8** %laststart, align 8
  br label %if.end.5370

if.end.5370:                                      ; preds = %if.then.5365, %if.end.5363
  %2609 = load i8*, i8** %pending_exact, align 8
  %tobool5371 = icmp ne i8* %2609, null
  br i1 %tobool5371, label %if.then.5372, label %if.end.5377

if.then.5372:                                     ; preds = %if.end.5370
  %2610 = load i8*, i8** %new_buffer5347, align 8
  %2611 = load i8*, i8** %pending_exact, align 8
  %2612 = load i8*, i8** %old_buffer5318, align 8
  %sub.ptr.lhs.cast5373 = ptrtoint i8* %2611 to i64
  %sub.ptr.rhs.cast5374 = ptrtoint i8* %2612 to i64
  %sub.ptr.sub5375 = sub i64 %sub.ptr.lhs.cast5373, %sub.ptr.rhs.cast5374
  %add.ptr5376 = getelementptr inbounds i8, i8* %2610, i64 %sub.ptr.sub5375
  store i8* %add.ptr5376, i8** %pending_exact, align 8
  br label %if.end.5377

if.end.5377:                                      ; preds = %if.then.5372, %if.end.5370
  br label %if.end.5378

if.end.5378:                                      ; preds = %if.end.5377, %if.end.5342
  br label %do.end.5379

do.end.5379:                                      ; preds = %if.end.5378
  br label %while.cond.5307

while.end.5380:                                   ; preds = %while.cond.5307
  %2613 = load i8*, i8** %b, align 8
  %incdec.ptr5381 = getelementptr inbounds i8, i8* %2613, i32 1
  store i8* %incdec.ptr5381, i8** %b, align 8
  store i8 22, i8* %2613, align 1
  br label %do.end.5382

do.end.5382:                                      ; preds = %while.end.5380
  br label %sw.epilog.6156

sw.bb.5383:                                       ; preds = %do.end.2985
  %2614 = load i64, i64* %syntax.addr, align 8
  %and5384 = and i64 %2614, 524288
  %tobool5385 = icmp ne i64 %and5384, 0
  br i1 %tobool5385, label %if.then.5386, label %if.end.5387

if.then.5386:                                     ; preds = %sw.bb.5383
  br label %normal_char

if.end.5387:                                      ; preds = %sw.bb.5383
  %2615 = load i8*, i8** %b, align 8
  store i8* %2615, i8** %laststart, align 8
  br label %do.body.5388

do.body.5388:                                     ; preds = %if.end.5387
  br label %while.cond.5389

while.cond.5389:                                  ; preds = %do.end.5461, %do.body.5388
  %2616 = load i8*, i8** %b, align 8
  %2617 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5390 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2617, i32 0, i32 0
  %2618 = load i8*, i8** %buffer5390, align 8
  %sub.ptr.lhs.cast5391 = ptrtoint i8* %2616 to i64
  %sub.ptr.rhs.cast5392 = ptrtoint i8* %2618 to i64
  %sub.ptr.sub5393 = sub i64 %sub.ptr.lhs.cast5391, %sub.ptr.rhs.cast5392
  %add5394 = add nsw i64 %sub.ptr.sub5393, 1
  %2619 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5395 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2619, i32 0, i32 1
  %2620 = load i64, i64* %allocated5395, align 8
  %cmp5396 = icmp ugt i64 %add5394, %2620
  br i1 %cmp5396, label %while.body.5398, label %while.end.5462

while.body.5398:                                  ; preds = %while.cond.5389
  br label %do.body.5399

do.body.5399:                                     ; preds = %while.body.5398
  %2621 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5401 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2621, i32 0, i32 0
  %2622 = load i8*, i8** %buffer5401, align 8
  store i8* %2622, i8** %old_buffer5400, align 8
  %2623 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5402 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2623, i32 0, i32 1
  %2624 = load i64, i64* %allocated5402, align 8
  %cmp5403 = icmp eq i64 %2624, 32768
  br i1 %cmp5403, label %if.then.5405, label %if.end.5406

if.then.5405:                                     ; preds = %do.body.5399
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5406:                                      ; preds = %do.body.5399
  %2625 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5407 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2625, i32 0, i32 1
  %2626 = load i64, i64* %allocated5407, align 8
  %shl5408 = shl i64 %2626, 1
  store i64 %shl5408, i64* %allocated5407, align 8
  %2627 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5409 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2627, i32 0, i32 1
  %2628 = load i64, i64* %allocated5409, align 8
  %cmp5410 = icmp ugt i64 %2628, 32768
  br i1 %cmp5410, label %if.then.5412, label %if.end.5414

if.then.5412:                                     ; preds = %if.end.5406
  %2629 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5413 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2629, i32 0, i32 1
  store i64 32768, i64* %allocated5413, align 8
  br label %if.end.5414

if.end.5414:                                      ; preds = %if.then.5412, %if.end.5406
  %2630 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5415 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2630, i32 0, i32 0
  %2631 = load i8*, i8** %buffer5415, align 8
  %2632 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5416 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2632, i32 0, i32 1
  %2633 = load i64, i64* %allocated5416, align 8
  %mul5417 = mul i64 %2633, 1
  %call5418 = call i8* @xrealloc(i8* %2631, i64 %mul5417)
  %2634 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5419 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2634, i32 0, i32 0
  store i8* %call5418, i8** %buffer5419, align 8
  %2635 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5420 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2635, i32 0, i32 0
  %2636 = load i8*, i8** %buffer5420, align 8
  %cmp5421 = icmp eq i8* %2636, null
  br i1 %cmp5421, label %if.then.5423, label %if.end.5424

if.then.5423:                                     ; preds = %if.end.5414
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5424:                                      ; preds = %if.end.5414
  %2637 = load i8*, i8** %old_buffer5400, align 8
  %2638 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5425 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2638, i32 0, i32 0
  %2639 = load i8*, i8** %buffer5425, align 8
  %cmp5426 = icmp ne i8* %2637, %2639
  br i1 %cmp5426, label %if.then.5428, label %if.end.5460

if.then.5428:                                     ; preds = %if.end.5424
  %2640 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5430 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2640, i32 0, i32 0
  %2641 = load i8*, i8** %buffer5430, align 8
  store i8* %2641, i8** %new_buffer5429, align 8
  %2642 = load i8*, i8** %new_buffer5429, align 8
  %2643 = load i8*, i8** %b, align 8
  %2644 = load i8*, i8** %old_buffer5400, align 8
  %sub.ptr.lhs.cast5431 = ptrtoint i8* %2643 to i64
  %sub.ptr.rhs.cast5432 = ptrtoint i8* %2644 to i64
  %sub.ptr.sub5433 = sub i64 %sub.ptr.lhs.cast5431, %sub.ptr.rhs.cast5432
  %add.ptr5434 = getelementptr inbounds i8, i8* %2642, i64 %sub.ptr.sub5433
  store i8* %add.ptr5434, i8** %b, align 8
  %2645 = load i8*, i8** %new_buffer5429, align 8
  %2646 = load i8*, i8** %begalt, align 8
  %2647 = load i8*, i8** %old_buffer5400, align 8
  %sub.ptr.lhs.cast5435 = ptrtoint i8* %2646 to i64
  %sub.ptr.rhs.cast5436 = ptrtoint i8* %2647 to i64
  %sub.ptr.sub5437 = sub i64 %sub.ptr.lhs.cast5435, %sub.ptr.rhs.cast5436
  %add.ptr5438 = getelementptr inbounds i8, i8* %2645, i64 %sub.ptr.sub5437
  store i8* %add.ptr5438, i8** %begalt, align 8
  %2648 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5439 = icmp ne i8* %2648, null
  br i1 %tobool5439, label %if.then.5440, label %if.end.5445

if.then.5440:                                     ; preds = %if.then.5428
  %2649 = load i8*, i8** %new_buffer5429, align 8
  %2650 = load i8*, i8** %fixup_alt_jump, align 8
  %2651 = load i8*, i8** %old_buffer5400, align 8
  %sub.ptr.lhs.cast5441 = ptrtoint i8* %2650 to i64
  %sub.ptr.rhs.cast5442 = ptrtoint i8* %2651 to i64
  %sub.ptr.sub5443 = sub i64 %sub.ptr.lhs.cast5441, %sub.ptr.rhs.cast5442
  %add.ptr5444 = getelementptr inbounds i8, i8* %2649, i64 %sub.ptr.sub5443
  store i8* %add.ptr5444, i8** %fixup_alt_jump, align 8
  br label %if.end.5445

if.end.5445:                                      ; preds = %if.then.5440, %if.then.5428
  %2652 = load i8*, i8** %laststart, align 8
  %tobool5446 = icmp ne i8* %2652, null
  br i1 %tobool5446, label %if.then.5447, label %if.end.5452

if.then.5447:                                     ; preds = %if.end.5445
  %2653 = load i8*, i8** %new_buffer5429, align 8
  %2654 = load i8*, i8** %laststart, align 8
  %2655 = load i8*, i8** %old_buffer5400, align 8
  %sub.ptr.lhs.cast5448 = ptrtoint i8* %2654 to i64
  %sub.ptr.rhs.cast5449 = ptrtoint i8* %2655 to i64
  %sub.ptr.sub5450 = sub i64 %sub.ptr.lhs.cast5448, %sub.ptr.rhs.cast5449
  %add.ptr5451 = getelementptr inbounds i8, i8* %2653, i64 %sub.ptr.sub5450
  store i8* %add.ptr5451, i8** %laststart, align 8
  br label %if.end.5452

if.end.5452:                                      ; preds = %if.then.5447, %if.end.5445
  %2656 = load i8*, i8** %pending_exact, align 8
  %tobool5453 = icmp ne i8* %2656, null
  br i1 %tobool5453, label %if.then.5454, label %if.end.5459

if.then.5454:                                     ; preds = %if.end.5452
  %2657 = load i8*, i8** %new_buffer5429, align 8
  %2658 = load i8*, i8** %pending_exact, align 8
  %2659 = load i8*, i8** %old_buffer5400, align 8
  %sub.ptr.lhs.cast5455 = ptrtoint i8* %2658 to i64
  %sub.ptr.rhs.cast5456 = ptrtoint i8* %2659 to i64
  %sub.ptr.sub5457 = sub i64 %sub.ptr.lhs.cast5455, %sub.ptr.rhs.cast5456
  %add.ptr5458 = getelementptr inbounds i8, i8* %2657, i64 %sub.ptr.sub5457
  store i8* %add.ptr5458, i8** %pending_exact, align 8
  br label %if.end.5459

if.end.5459:                                      ; preds = %if.then.5454, %if.end.5452
  br label %if.end.5460

if.end.5460:                                      ; preds = %if.end.5459, %if.end.5424
  br label %do.end.5461

do.end.5461:                                      ; preds = %if.end.5460
  br label %while.cond.5389

while.end.5462:                                   ; preds = %while.cond.5389
  %2660 = load i8*, i8** %b, align 8
  %incdec.ptr5463 = getelementptr inbounds i8, i8* %2660, i32 1
  store i8* %incdec.ptr5463, i8** %b, align 8
  store i8 23, i8* %2660, align 1
  br label %do.end.5464

do.end.5464:                                      ; preds = %while.end.5462
  br label %sw.epilog.6156

sw.bb.5465:                                       ; preds = %do.end.2985
  %2661 = load i64, i64* %syntax.addr, align 8
  %and5466 = and i64 %2661, 524288
  %tobool5467 = icmp ne i64 %and5466, 0
  br i1 %tobool5467, label %if.then.5468, label %if.end.5469

if.then.5468:                                     ; preds = %sw.bb.5465
  br label %normal_char

if.end.5469:                                      ; preds = %sw.bb.5465
  %2662 = load i8*, i8** %b, align 8
  store i8* %2662, i8** %laststart, align 8
  br label %do.body.5470

do.body.5470:                                     ; preds = %if.end.5469
  %2663 = load i8*, i8** %p, align 8
  %2664 = load i8*, i8** %pend, align 8
  %cmp5472 = icmp eq i8* %2663, %2664
  br i1 %cmp5472, label %if.then.5474, label %if.end.5475

if.then.5474:                                     ; preds = %do.body.5470
  store i32 14, i32* %retval
  br label %do.end.6650

if.end.5475:                                      ; preds = %do.body.5470
  %2665 = load i8, i8* %multibyte, align 1
  %conv5476 = sext i8 %2665 to i32
  %tobool5477 = icmp ne i32 %conv5476, 0
  br i1 %tobool5477, label %cond.true.5478, label %cond.false.5533

cond.true.5478:                                   ; preds = %if.end.5475
  %2666 = load i8*, i8** %p, align 8
  %arrayidx5479 = getelementptr inbounds i8, i8* %2666, i64 0
  %2667 = load i8, i8* %arrayidx5479, align 1
  %conv5480 = zext i8 %2667 to i32
  %and5481 = and i32 %conv5480, 128
  %tobool5482 = icmp ne i32 %and5481, 0
  br i1 %tobool5482, label %cond.false.5486, label %cond.true.5483

cond.true.5483:                                   ; preds = %cond.true.5478
  store i32 1, i32* %len5471, align 4
  %2668 = load i8*, i8** %p, align 8
  %arrayidx5484 = getelementptr inbounds i8, i8* %2668, i64 0
  %2669 = load i8, i8* %arrayidx5484, align 1
  %conv5485 = zext i8 %2669 to i32
  br label %cond.end.5531

cond.false.5486:                                  ; preds = %cond.true.5478
  %2670 = load i8*, i8** %p, align 8
  %arrayidx5487 = getelementptr inbounds i8, i8* %2670, i64 0
  %2671 = load i8, i8* %arrayidx5487, align 1
  %conv5488 = zext i8 %2671 to i32
  %and5489 = and i32 %conv5488, 32
  %tobool5490 = icmp ne i32 %and5489, 0
  br i1 %tobool5490, label %cond.false.5506, label %cond.true.5491

cond.true.5491:                                   ; preds = %cond.false.5486
  store i32 2, i32* %len5471, align 4
  %2672 = load i8*, i8** %p, align 8
  %arrayidx5492 = getelementptr inbounds i8, i8* %2672, i64 0
  %2673 = load i8, i8* %arrayidx5492, align 1
  %conv5493 = zext i8 %2673 to i32
  %and5494 = and i32 %conv5493, 31
  %shl5495 = shl i32 %and5494, 6
  %2674 = load i8*, i8** %p, align 8
  %arrayidx5496 = getelementptr inbounds i8, i8* %2674, i64 1
  %2675 = load i8, i8* %arrayidx5496, align 1
  %conv5497 = zext i8 %2675 to i32
  %and5498 = and i32 %conv5497, 63
  %or5499 = or i32 %shl5495, %and5498
  %2676 = load i8*, i8** %p, align 8
  %arrayidx5500 = getelementptr inbounds i8, i8* %2676, i64 0
  %2677 = load i8, i8* %arrayidx5500, align 1
  %conv5501 = zext i8 %2677 to i32
  %cmp5502 = icmp slt i32 %conv5501, 194
  %cond5504 = select i1 %cmp5502, i32 4194176, i32 0
  %add5505 = add nsw i32 %or5499, %cond5504
  br label %cond.end.5529

cond.false.5506:                                  ; preds = %cond.false.5486
  %2678 = load i8*, i8** %p, align 8
  %arrayidx5507 = getelementptr inbounds i8, i8* %2678, i64 0
  %2679 = load i8, i8* %arrayidx5507, align 1
  %conv5508 = zext i8 %2679 to i32
  %and5509 = and i32 %conv5508, 16
  %tobool5510 = icmp ne i32 %and5509, 0
  br i1 %tobool5510, label %cond.false.5525, label %cond.true.5511

cond.true.5511:                                   ; preds = %cond.false.5506
  store i32 3, i32* %len5471, align 4
  %2680 = load i8*, i8** %p, align 8
  %arrayidx5512 = getelementptr inbounds i8, i8* %2680, i64 0
  %2681 = load i8, i8* %arrayidx5512, align 1
  %conv5513 = zext i8 %2681 to i32
  %and5514 = and i32 %conv5513, 15
  %shl5515 = shl i32 %and5514, 12
  %2682 = load i8*, i8** %p, align 8
  %arrayidx5516 = getelementptr inbounds i8, i8* %2682, i64 1
  %2683 = load i8, i8* %arrayidx5516, align 1
  %conv5517 = zext i8 %2683 to i32
  %and5518 = and i32 %conv5517, 63
  %shl5519 = shl i32 %and5518, 6
  %or5520 = or i32 %shl5515, %shl5519
  %2684 = load i8*, i8** %p, align 8
  %arrayidx5521 = getelementptr inbounds i8, i8* %2684, i64 2
  %2685 = load i8, i8* %arrayidx5521, align 1
  %conv5522 = zext i8 %2685 to i32
  %and5523 = and i32 %conv5522, 63
  %or5524 = or i32 %or5520, %and5523
  br label %cond.end.5527

cond.false.5525:                                  ; preds = %cond.false.5506
  %2686 = load i8*, i8** %p, align 8
  %call5526 = call i32 @string_char(i8* %2686, i8** null, i32* %len5471)
  br label %cond.end.5527

cond.end.5527:                                    ; preds = %cond.false.5525, %cond.true.5511
  %cond5528 = phi i32 [ %or5524, %cond.true.5511 ], [ %call5526, %cond.false.5525 ]
  br label %cond.end.5529

cond.end.5529:                                    ; preds = %cond.end.5527, %cond.true.5491
  %cond5530 = phi i32 [ %add5505, %cond.true.5491 ], [ %cond5528, %cond.end.5527 ]
  br label %cond.end.5531

cond.end.5531:                                    ; preds = %cond.end.5529, %cond.true.5483
  %cond5532 = phi i32 [ %conv5485, %cond.true.5483 ], [ %cond5530, %cond.end.5529 ]
  br label %cond.end.5535

cond.false.5533:                                  ; preds = %if.end.5475
  store i32 1, i32* %len5471, align 4
  %2687 = load i8*, i8** %p, align 8
  %2688 = load i8, i8* %2687, align 1
  %conv5534 = zext i8 %2688 to i32
  br label %cond.end.5535

cond.end.5535:                                    ; preds = %cond.false.5533, %cond.end.5531
  %cond5536 = phi i32 [ %cond5532, %cond.end.5531 ], [ %conv5534, %cond.false.5533 ]
  store i32 %cond5536, i32* %c, align 4
  %2689 = load i32, i32* %len5471, align 4
  %2690 = load i8*, i8** %p, align 8
  %idx.ext5537 = sext i32 %2689 to i64
  %add.ptr5538 = getelementptr inbounds i8, i8* %2690, i64 %idx.ext5537
  store i8* %add.ptr5538, i8** %p, align 8
  br label %do.end.5539

do.end.5539:                                      ; preds = %cond.end.5535
  %2691 = load i32, i32* %c, align 4
  %cmp5540 = icmp eq i32 %2691, 60
  br i1 %cmp5540, label %if.then.5542, label %if.else.5620

if.then.5542:                                     ; preds = %do.end.5539
  br label %do.body.5543

do.body.5543:                                     ; preds = %if.then.5542
  br label %while.cond.5544

while.cond.5544:                                  ; preds = %do.end.5616, %do.body.5543
  %2692 = load i8*, i8** %b, align 8
  %2693 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5545 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2693, i32 0, i32 0
  %2694 = load i8*, i8** %buffer5545, align 8
  %sub.ptr.lhs.cast5546 = ptrtoint i8* %2692 to i64
  %sub.ptr.rhs.cast5547 = ptrtoint i8* %2694 to i64
  %sub.ptr.sub5548 = sub i64 %sub.ptr.lhs.cast5546, %sub.ptr.rhs.cast5547
  %add5549 = add nsw i64 %sub.ptr.sub5548, 1
  %2695 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5550 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2695, i32 0, i32 1
  %2696 = load i64, i64* %allocated5550, align 8
  %cmp5551 = icmp ugt i64 %add5549, %2696
  br i1 %cmp5551, label %while.body.5553, label %while.end.5617

while.body.5553:                                  ; preds = %while.cond.5544
  br label %do.body.5554

do.body.5554:                                     ; preds = %while.body.5553
  %2697 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5556 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2697, i32 0, i32 0
  %2698 = load i8*, i8** %buffer5556, align 8
  store i8* %2698, i8** %old_buffer5555, align 8
  %2699 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5557 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2699, i32 0, i32 1
  %2700 = load i64, i64* %allocated5557, align 8
  %cmp5558 = icmp eq i64 %2700, 32768
  br i1 %cmp5558, label %if.then.5560, label %if.end.5561

if.then.5560:                                     ; preds = %do.body.5554
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5561:                                      ; preds = %do.body.5554
  %2701 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5562 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2701, i32 0, i32 1
  %2702 = load i64, i64* %allocated5562, align 8
  %shl5563 = shl i64 %2702, 1
  store i64 %shl5563, i64* %allocated5562, align 8
  %2703 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5564 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2703, i32 0, i32 1
  %2704 = load i64, i64* %allocated5564, align 8
  %cmp5565 = icmp ugt i64 %2704, 32768
  br i1 %cmp5565, label %if.then.5567, label %if.end.5569

if.then.5567:                                     ; preds = %if.end.5561
  %2705 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5568 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2705, i32 0, i32 1
  store i64 32768, i64* %allocated5568, align 8
  br label %if.end.5569

if.end.5569:                                      ; preds = %if.then.5567, %if.end.5561
  %2706 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5570 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2706, i32 0, i32 0
  %2707 = load i8*, i8** %buffer5570, align 8
  %2708 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5571 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2708, i32 0, i32 1
  %2709 = load i64, i64* %allocated5571, align 8
  %mul5572 = mul i64 %2709, 1
  %call5573 = call i8* @xrealloc(i8* %2707, i64 %mul5572)
  %2710 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5574 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2710, i32 0, i32 0
  store i8* %call5573, i8** %buffer5574, align 8
  %2711 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5575 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2711, i32 0, i32 0
  %2712 = load i8*, i8** %buffer5575, align 8
  %cmp5576 = icmp eq i8* %2712, null
  br i1 %cmp5576, label %if.then.5578, label %if.end.5579

if.then.5578:                                     ; preds = %if.end.5569
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5579:                                      ; preds = %if.end.5569
  %2713 = load i8*, i8** %old_buffer5555, align 8
  %2714 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5580 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2714, i32 0, i32 0
  %2715 = load i8*, i8** %buffer5580, align 8
  %cmp5581 = icmp ne i8* %2713, %2715
  br i1 %cmp5581, label %if.then.5583, label %if.end.5615

if.then.5583:                                     ; preds = %if.end.5579
  %2716 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5585 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2716, i32 0, i32 0
  %2717 = load i8*, i8** %buffer5585, align 8
  store i8* %2717, i8** %new_buffer5584, align 8
  %2718 = load i8*, i8** %new_buffer5584, align 8
  %2719 = load i8*, i8** %b, align 8
  %2720 = load i8*, i8** %old_buffer5555, align 8
  %sub.ptr.lhs.cast5586 = ptrtoint i8* %2719 to i64
  %sub.ptr.rhs.cast5587 = ptrtoint i8* %2720 to i64
  %sub.ptr.sub5588 = sub i64 %sub.ptr.lhs.cast5586, %sub.ptr.rhs.cast5587
  %add.ptr5589 = getelementptr inbounds i8, i8* %2718, i64 %sub.ptr.sub5588
  store i8* %add.ptr5589, i8** %b, align 8
  %2721 = load i8*, i8** %new_buffer5584, align 8
  %2722 = load i8*, i8** %begalt, align 8
  %2723 = load i8*, i8** %old_buffer5555, align 8
  %sub.ptr.lhs.cast5590 = ptrtoint i8* %2722 to i64
  %sub.ptr.rhs.cast5591 = ptrtoint i8* %2723 to i64
  %sub.ptr.sub5592 = sub i64 %sub.ptr.lhs.cast5590, %sub.ptr.rhs.cast5591
  %add.ptr5593 = getelementptr inbounds i8, i8* %2721, i64 %sub.ptr.sub5592
  store i8* %add.ptr5593, i8** %begalt, align 8
  %2724 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5594 = icmp ne i8* %2724, null
  br i1 %tobool5594, label %if.then.5595, label %if.end.5600

if.then.5595:                                     ; preds = %if.then.5583
  %2725 = load i8*, i8** %new_buffer5584, align 8
  %2726 = load i8*, i8** %fixup_alt_jump, align 8
  %2727 = load i8*, i8** %old_buffer5555, align 8
  %sub.ptr.lhs.cast5596 = ptrtoint i8* %2726 to i64
  %sub.ptr.rhs.cast5597 = ptrtoint i8* %2727 to i64
  %sub.ptr.sub5598 = sub i64 %sub.ptr.lhs.cast5596, %sub.ptr.rhs.cast5597
  %add.ptr5599 = getelementptr inbounds i8, i8* %2725, i64 %sub.ptr.sub5598
  store i8* %add.ptr5599, i8** %fixup_alt_jump, align 8
  br label %if.end.5600

if.end.5600:                                      ; preds = %if.then.5595, %if.then.5583
  %2728 = load i8*, i8** %laststart, align 8
  %tobool5601 = icmp ne i8* %2728, null
  br i1 %tobool5601, label %if.then.5602, label %if.end.5607

if.then.5602:                                     ; preds = %if.end.5600
  %2729 = load i8*, i8** %new_buffer5584, align 8
  %2730 = load i8*, i8** %laststart, align 8
  %2731 = load i8*, i8** %old_buffer5555, align 8
  %sub.ptr.lhs.cast5603 = ptrtoint i8* %2730 to i64
  %sub.ptr.rhs.cast5604 = ptrtoint i8* %2731 to i64
  %sub.ptr.sub5605 = sub i64 %sub.ptr.lhs.cast5603, %sub.ptr.rhs.cast5604
  %add.ptr5606 = getelementptr inbounds i8, i8* %2729, i64 %sub.ptr.sub5605
  store i8* %add.ptr5606, i8** %laststart, align 8
  br label %if.end.5607

if.end.5607:                                      ; preds = %if.then.5602, %if.end.5600
  %2732 = load i8*, i8** %pending_exact, align 8
  %tobool5608 = icmp ne i8* %2732, null
  br i1 %tobool5608, label %if.then.5609, label %if.end.5614

if.then.5609:                                     ; preds = %if.end.5607
  %2733 = load i8*, i8** %new_buffer5584, align 8
  %2734 = load i8*, i8** %pending_exact, align 8
  %2735 = load i8*, i8** %old_buffer5555, align 8
  %sub.ptr.lhs.cast5610 = ptrtoint i8* %2734 to i64
  %sub.ptr.rhs.cast5611 = ptrtoint i8* %2735 to i64
  %sub.ptr.sub5612 = sub i64 %sub.ptr.lhs.cast5610, %sub.ptr.rhs.cast5611
  %add.ptr5613 = getelementptr inbounds i8, i8* %2733, i64 %sub.ptr.sub5612
  store i8* %add.ptr5613, i8** %pending_exact, align 8
  br label %if.end.5614

if.end.5614:                                      ; preds = %if.then.5609, %if.end.5607
  br label %if.end.5615

if.end.5615:                                      ; preds = %if.end.5614, %if.end.5579
  br label %do.end.5616

do.end.5616:                                      ; preds = %if.end.5615
  br label %while.cond.5544

while.end.5617:                                   ; preds = %while.cond.5544
  %2736 = load i8*, i8** %b, align 8
  %incdec.ptr5618 = getelementptr inbounds i8, i8* %2736, i32 1
  store i8* %incdec.ptr5618, i8** %b, align 8
  store i8 26, i8* %2736, align 1
  br label %do.end.5619

do.end.5619:                                      ; preds = %while.end.5617
  br label %if.end.5713

if.else.5620:                                     ; preds = %do.end.5539
  %2737 = load i32, i32* %c, align 4
  %cmp5621 = icmp eq i32 %2737, 62
  br i1 %cmp5621, label %if.then.5623, label %if.else.5701

if.then.5623:                                     ; preds = %if.else.5620
  br label %do.body.5624

do.body.5624:                                     ; preds = %if.then.5623
  br label %while.cond.5625

while.cond.5625:                                  ; preds = %do.end.5697, %do.body.5624
  %2738 = load i8*, i8** %b, align 8
  %2739 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5626 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2739, i32 0, i32 0
  %2740 = load i8*, i8** %buffer5626, align 8
  %sub.ptr.lhs.cast5627 = ptrtoint i8* %2738 to i64
  %sub.ptr.rhs.cast5628 = ptrtoint i8* %2740 to i64
  %sub.ptr.sub5629 = sub i64 %sub.ptr.lhs.cast5627, %sub.ptr.rhs.cast5628
  %add5630 = add nsw i64 %sub.ptr.sub5629, 1
  %2741 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5631 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2741, i32 0, i32 1
  %2742 = load i64, i64* %allocated5631, align 8
  %cmp5632 = icmp ugt i64 %add5630, %2742
  br i1 %cmp5632, label %while.body.5634, label %while.end.5698

while.body.5634:                                  ; preds = %while.cond.5625
  br label %do.body.5635

do.body.5635:                                     ; preds = %while.body.5634
  %2743 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5637 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2743, i32 0, i32 0
  %2744 = load i8*, i8** %buffer5637, align 8
  store i8* %2744, i8** %old_buffer5636, align 8
  %2745 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5638 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2745, i32 0, i32 1
  %2746 = load i64, i64* %allocated5638, align 8
  %cmp5639 = icmp eq i64 %2746, 32768
  br i1 %cmp5639, label %if.then.5641, label %if.end.5642

if.then.5641:                                     ; preds = %do.body.5635
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5642:                                      ; preds = %do.body.5635
  %2747 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5643 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2747, i32 0, i32 1
  %2748 = load i64, i64* %allocated5643, align 8
  %shl5644 = shl i64 %2748, 1
  store i64 %shl5644, i64* %allocated5643, align 8
  %2749 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5645 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2749, i32 0, i32 1
  %2750 = load i64, i64* %allocated5645, align 8
  %cmp5646 = icmp ugt i64 %2750, 32768
  br i1 %cmp5646, label %if.then.5648, label %if.end.5650

if.then.5648:                                     ; preds = %if.end.5642
  %2751 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5649 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2751, i32 0, i32 1
  store i64 32768, i64* %allocated5649, align 8
  br label %if.end.5650

if.end.5650:                                      ; preds = %if.then.5648, %if.end.5642
  %2752 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5651 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2752, i32 0, i32 0
  %2753 = load i8*, i8** %buffer5651, align 8
  %2754 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5652 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2754, i32 0, i32 1
  %2755 = load i64, i64* %allocated5652, align 8
  %mul5653 = mul i64 %2755, 1
  %call5654 = call i8* @xrealloc(i8* %2753, i64 %mul5653)
  %2756 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5655 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2756, i32 0, i32 0
  store i8* %call5654, i8** %buffer5655, align 8
  %2757 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5656 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2757, i32 0, i32 0
  %2758 = load i8*, i8** %buffer5656, align 8
  %cmp5657 = icmp eq i8* %2758, null
  br i1 %cmp5657, label %if.then.5659, label %if.end.5660

if.then.5659:                                     ; preds = %if.end.5650
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5660:                                      ; preds = %if.end.5650
  %2759 = load i8*, i8** %old_buffer5636, align 8
  %2760 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5661 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2760, i32 0, i32 0
  %2761 = load i8*, i8** %buffer5661, align 8
  %cmp5662 = icmp ne i8* %2759, %2761
  br i1 %cmp5662, label %if.then.5664, label %if.end.5696

if.then.5664:                                     ; preds = %if.end.5660
  %2762 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5666 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2762, i32 0, i32 0
  %2763 = load i8*, i8** %buffer5666, align 8
  store i8* %2763, i8** %new_buffer5665, align 8
  %2764 = load i8*, i8** %new_buffer5665, align 8
  %2765 = load i8*, i8** %b, align 8
  %2766 = load i8*, i8** %old_buffer5636, align 8
  %sub.ptr.lhs.cast5667 = ptrtoint i8* %2765 to i64
  %sub.ptr.rhs.cast5668 = ptrtoint i8* %2766 to i64
  %sub.ptr.sub5669 = sub i64 %sub.ptr.lhs.cast5667, %sub.ptr.rhs.cast5668
  %add.ptr5670 = getelementptr inbounds i8, i8* %2764, i64 %sub.ptr.sub5669
  store i8* %add.ptr5670, i8** %b, align 8
  %2767 = load i8*, i8** %new_buffer5665, align 8
  %2768 = load i8*, i8** %begalt, align 8
  %2769 = load i8*, i8** %old_buffer5636, align 8
  %sub.ptr.lhs.cast5671 = ptrtoint i8* %2768 to i64
  %sub.ptr.rhs.cast5672 = ptrtoint i8* %2769 to i64
  %sub.ptr.sub5673 = sub i64 %sub.ptr.lhs.cast5671, %sub.ptr.rhs.cast5672
  %add.ptr5674 = getelementptr inbounds i8, i8* %2767, i64 %sub.ptr.sub5673
  store i8* %add.ptr5674, i8** %begalt, align 8
  %2770 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5675 = icmp ne i8* %2770, null
  br i1 %tobool5675, label %if.then.5676, label %if.end.5681

if.then.5676:                                     ; preds = %if.then.5664
  %2771 = load i8*, i8** %new_buffer5665, align 8
  %2772 = load i8*, i8** %fixup_alt_jump, align 8
  %2773 = load i8*, i8** %old_buffer5636, align 8
  %sub.ptr.lhs.cast5677 = ptrtoint i8* %2772 to i64
  %sub.ptr.rhs.cast5678 = ptrtoint i8* %2773 to i64
  %sub.ptr.sub5679 = sub i64 %sub.ptr.lhs.cast5677, %sub.ptr.rhs.cast5678
  %add.ptr5680 = getelementptr inbounds i8, i8* %2771, i64 %sub.ptr.sub5679
  store i8* %add.ptr5680, i8** %fixup_alt_jump, align 8
  br label %if.end.5681

if.end.5681:                                      ; preds = %if.then.5676, %if.then.5664
  %2774 = load i8*, i8** %laststart, align 8
  %tobool5682 = icmp ne i8* %2774, null
  br i1 %tobool5682, label %if.then.5683, label %if.end.5688

if.then.5683:                                     ; preds = %if.end.5681
  %2775 = load i8*, i8** %new_buffer5665, align 8
  %2776 = load i8*, i8** %laststart, align 8
  %2777 = load i8*, i8** %old_buffer5636, align 8
  %sub.ptr.lhs.cast5684 = ptrtoint i8* %2776 to i64
  %sub.ptr.rhs.cast5685 = ptrtoint i8* %2777 to i64
  %sub.ptr.sub5686 = sub i64 %sub.ptr.lhs.cast5684, %sub.ptr.rhs.cast5685
  %add.ptr5687 = getelementptr inbounds i8, i8* %2775, i64 %sub.ptr.sub5686
  store i8* %add.ptr5687, i8** %laststart, align 8
  br label %if.end.5688

if.end.5688:                                      ; preds = %if.then.5683, %if.end.5681
  %2778 = load i8*, i8** %pending_exact, align 8
  %tobool5689 = icmp ne i8* %2778, null
  br i1 %tobool5689, label %if.then.5690, label %if.end.5695

if.then.5690:                                     ; preds = %if.end.5688
  %2779 = load i8*, i8** %new_buffer5665, align 8
  %2780 = load i8*, i8** %pending_exact, align 8
  %2781 = load i8*, i8** %old_buffer5636, align 8
  %sub.ptr.lhs.cast5691 = ptrtoint i8* %2780 to i64
  %sub.ptr.rhs.cast5692 = ptrtoint i8* %2781 to i64
  %sub.ptr.sub5693 = sub i64 %sub.ptr.lhs.cast5691, %sub.ptr.rhs.cast5692
  %add.ptr5694 = getelementptr inbounds i8, i8* %2779, i64 %sub.ptr.sub5693
  store i8* %add.ptr5694, i8** %pending_exact, align 8
  br label %if.end.5695

if.end.5695:                                      ; preds = %if.then.5690, %if.end.5688
  br label %if.end.5696

if.end.5696:                                      ; preds = %if.end.5695, %if.end.5660
  br label %do.end.5697

do.end.5697:                                      ; preds = %if.end.5696
  br label %while.cond.5625

while.end.5698:                                   ; preds = %while.cond.5625
  %2782 = load i8*, i8** %b, align 8
  %incdec.ptr5699 = getelementptr inbounds i8, i8* %2782, i32 1
  store i8* %incdec.ptr5699, i8** %b, align 8
  store i8 27, i8* %2782, align 1
  br label %do.end.5700

do.end.5700:                                      ; preds = %while.end.5698
  br label %if.end.5712

if.else.5701:                                     ; preds = %if.else.5620
  br label %do.body.5702

do.body.5702:                                     ; preds = %if.else.5701
  br label %do.body.5703

do.body.5703:                                     ; preds = %do.body.5702
  %table5704 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2783 = load i32*, i32** %table5704, align 8
  %tobool5705 = icmp ne i32* %2783, null
  br i1 %tobool5705, label %if.then.5706, label %if.end.5708

if.then.5706:                                     ; preds = %do.body.5703
  %table5707 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2784 = load i32*, i32** %table5707, align 8
  %2785 = bitcast i32* %2784 to i8*
  call void @xfree(i8* %2785)
  br label %if.end.5708

if.end.5708:                                      ; preds = %if.then.5706, %do.body.5703
  br label %do.end.5709

do.end.5709:                                      ; preds = %if.end.5708
  %stack5710 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %2786 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack5710, align 8
  %2787 = bitcast %struct.compile_stack_elt_t* %2786 to i8*
  call void @xfree(i8* %2787)
  store i32 2, i32* %retval
  br label %do.end.6650

do.end.5711:                                      ; No predecessors!
  br label %if.end.5712

if.end.5712:                                      ; preds = %do.end.5711, %do.end.5700
  br label %if.end.5713

if.end.5713:                                      ; preds = %if.end.5712, %do.end.5619
  br label %sw.epilog.6156

sw.bb.5714:                                       ; preds = %do.end.2985
  %2788 = load i64, i64* %syntax.addr, align 8
  %and5715 = and i64 %2788, 524288
  %tobool5716 = icmp ne i64 %and5715, 0
  br i1 %tobool5716, label %if.then.5717, label %if.end.5718

if.then.5717:                                     ; preds = %sw.bb.5714
  br label %normal_char

if.end.5718:                                      ; preds = %sw.bb.5714
  br label %do.body.5719

do.body.5719:                                     ; preds = %if.end.5718
  br label %while.cond.5720

while.cond.5720:                                  ; preds = %do.end.5792, %do.body.5719
  %2789 = load i8*, i8** %b, align 8
  %2790 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5721 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2790, i32 0, i32 0
  %2791 = load i8*, i8** %buffer5721, align 8
  %sub.ptr.lhs.cast5722 = ptrtoint i8* %2789 to i64
  %sub.ptr.rhs.cast5723 = ptrtoint i8* %2791 to i64
  %sub.ptr.sub5724 = sub i64 %sub.ptr.lhs.cast5722, %sub.ptr.rhs.cast5723
  %add5725 = add nsw i64 %sub.ptr.sub5724, 1
  %2792 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5726 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2792, i32 0, i32 1
  %2793 = load i64, i64* %allocated5726, align 8
  %cmp5727 = icmp ugt i64 %add5725, %2793
  br i1 %cmp5727, label %while.body.5729, label %while.end.5793

while.body.5729:                                  ; preds = %while.cond.5720
  br label %do.body.5730

do.body.5730:                                     ; preds = %while.body.5729
  %2794 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5732 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2794, i32 0, i32 0
  %2795 = load i8*, i8** %buffer5732, align 8
  store i8* %2795, i8** %old_buffer5731, align 8
  %2796 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5733 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2796, i32 0, i32 1
  %2797 = load i64, i64* %allocated5733, align 8
  %cmp5734 = icmp eq i64 %2797, 32768
  br i1 %cmp5734, label %if.then.5736, label %if.end.5737

if.then.5736:                                     ; preds = %do.body.5730
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5737:                                      ; preds = %do.body.5730
  %2798 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5738 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2798, i32 0, i32 1
  %2799 = load i64, i64* %allocated5738, align 8
  %shl5739 = shl i64 %2799, 1
  store i64 %shl5739, i64* %allocated5738, align 8
  %2800 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5740 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2800, i32 0, i32 1
  %2801 = load i64, i64* %allocated5740, align 8
  %cmp5741 = icmp ugt i64 %2801, 32768
  br i1 %cmp5741, label %if.then.5743, label %if.end.5745

if.then.5743:                                     ; preds = %if.end.5737
  %2802 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5744 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2802, i32 0, i32 1
  store i64 32768, i64* %allocated5744, align 8
  br label %if.end.5745

if.end.5745:                                      ; preds = %if.then.5743, %if.end.5737
  %2803 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5746 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2803, i32 0, i32 0
  %2804 = load i8*, i8** %buffer5746, align 8
  %2805 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5747 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2805, i32 0, i32 1
  %2806 = load i64, i64* %allocated5747, align 8
  %mul5748 = mul i64 %2806, 1
  %call5749 = call i8* @xrealloc(i8* %2804, i64 %mul5748)
  %2807 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5750 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2807, i32 0, i32 0
  store i8* %call5749, i8** %buffer5750, align 8
  %2808 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5751 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2808, i32 0, i32 0
  %2809 = load i8*, i8** %buffer5751, align 8
  %cmp5752 = icmp eq i8* %2809, null
  br i1 %cmp5752, label %if.then.5754, label %if.end.5755

if.then.5754:                                     ; preds = %if.end.5745
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5755:                                      ; preds = %if.end.5745
  %2810 = load i8*, i8** %old_buffer5731, align 8
  %2811 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5756 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2811, i32 0, i32 0
  %2812 = load i8*, i8** %buffer5756, align 8
  %cmp5757 = icmp ne i8* %2810, %2812
  br i1 %cmp5757, label %if.then.5759, label %if.end.5791

if.then.5759:                                     ; preds = %if.end.5755
  %2813 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5761 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2813, i32 0, i32 0
  %2814 = load i8*, i8** %buffer5761, align 8
  store i8* %2814, i8** %new_buffer5760, align 8
  %2815 = load i8*, i8** %new_buffer5760, align 8
  %2816 = load i8*, i8** %b, align 8
  %2817 = load i8*, i8** %old_buffer5731, align 8
  %sub.ptr.lhs.cast5762 = ptrtoint i8* %2816 to i64
  %sub.ptr.rhs.cast5763 = ptrtoint i8* %2817 to i64
  %sub.ptr.sub5764 = sub i64 %sub.ptr.lhs.cast5762, %sub.ptr.rhs.cast5763
  %add.ptr5765 = getelementptr inbounds i8, i8* %2815, i64 %sub.ptr.sub5764
  store i8* %add.ptr5765, i8** %b, align 8
  %2818 = load i8*, i8** %new_buffer5760, align 8
  %2819 = load i8*, i8** %begalt, align 8
  %2820 = load i8*, i8** %old_buffer5731, align 8
  %sub.ptr.lhs.cast5766 = ptrtoint i8* %2819 to i64
  %sub.ptr.rhs.cast5767 = ptrtoint i8* %2820 to i64
  %sub.ptr.sub5768 = sub i64 %sub.ptr.lhs.cast5766, %sub.ptr.rhs.cast5767
  %add.ptr5769 = getelementptr inbounds i8, i8* %2818, i64 %sub.ptr.sub5768
  store i8* %add.ptr5769, i8** %begalt, align 8
  %2821 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5770 = icmp ne i8* %2821, null
  br i1 %tobool5770, label %if.then.5771, label %if.end.5776

if.then.5771:                                     ; preds = %if.then.5759
  %2822 = load i8*, i8** %new_buffer5760, align 8
  %2823 = load i8*, i8** %fixup_alt_jump, align 8
  %2824 = load i8*, i8** %old_buffer5731, align 8
  %sub.ptr.lhs.cast5772 = ptrtoint i8* %2823 to i64
  %sub.ptr.rhs.cast5773 = ptrtoint i8* %2824 to i64
  %sub.ptr.sub5774 = sub i64 %sub.ptr.lhs.cast5772, %sub.ptr.rhs.cast5773
  %add.ptr5775 = getelementptr inbounds i8, i8* %2822, i64 %sub.ptr.sub5774
  store i8* %add.ptr5775, i8** %fixup_alt_jump, align 8
  br label %if.end.5776

if.end.5776:                                      ; preds = %if.then.5771, %if.then.5759
  %2825 = load i8*, i8** %laststart, align 8
  %tobool5777 = icmp ne i8* %2825, null
  br i1 %tobool5777, label %if.then.5778, label %if.end.5783

if.then.5778:                                     ; preds = %if.end.5776
  %2826 = load i8*, i8** %new_buffer5760, align 8
  %2827 = load i8*, i8** %laststart, align 8
  %2828 = load i8*, i8** %old_buffer5731, align 8
  %sub.ptr.lhs.cast5779 = ptrtoint i8* %2827 to i64
  %sub.ptr.rhs.cast5780 = ptrtoint i8* %2828 to i64
  %sub.ptr.sub5781 = sub i64 %sub.ptr.lhs.cast5779, %sub.ptr.rhs.cast5780
  %add.ptr5782 = getelementptr inbounds i8, i8* %2826, i64 %sub.ptr.sub5781
  store i8* %add.ptr5782, i8** %laststart, align 8
  br label %if.end.5783

if.end.5783:                                      ; preds = %if.then.5778, %if.end.5776
  %2829 = load i8*, i8** %pending_exact, align 8
  %tobool5784 = icmp ne i8* %2829, null
  br i1 %tobool5784, label %if.then.5785, label %if.end.5790

if.then.5785:                                     ; preds = %if.end.5783
  %2830 = load i8*, i8** %new_buffer5760, align 8
  %2831 = load i8*, i8** %pending_exact, align 8
  %2832 = load i8*, i8** %old_buffer5731, align 8
  %sub.ptr.lhs.cast5786 = ptrtoint i8* %2831 to i64
  %sub.ptr.rhs.cast5787 = ptrtoint i8* %2832 to i64
  %sub.ptr.sub5788 = sub i64 %sub.ptr.lhs.cast5786, %sub.ptr.rhs.cast5787
  %add.ptr5789 = getelementptr inbounds i8, i8* %2830, i64 %sub.ptr.sub5788
  store i8* %add.ptr5789, i8** %pending_exact, align 8
  br label %if.end.5790

if.end.5790:                                      ; preds = %if.then.5785, %if.end.5783
  br label %if.end.5791

if.end.5791:                                      ; preds = %if.end.5790, %if.end.5755
  br label %do.end.5792

do.end.5792:                                      ; preds = %if.end.5791
  br label %while.cond.5720

while.end.5793:                                   ; preds = %while.cond.5720
  %2833 = load i8*, i8** %b, align 8
  %incdec.ptr5794 = getelementptr inbounds i8, i8* %2833, i32 1
  store i8* %incdec.ptr5794, i8** %b, align 8
  store i8 24, i8* %2833, align 1
  br label %do.end.5795

do.end.5795:                                      ; preds = %while.end.5793
  br label %sw.epilog.6156

sw.bb.5796:                                       ; preds = %do.end.2985
  %2834 = load i64, i64* %syntax.addr, align 8
  %and5797 = and i64 %2834, 524288
  %tobool5798 = icmp ne i64 %and5797, 0
  br i1 %tobool5798, label %if.then.5799, label %if.end.5800

if.then.5799:                                     ; preds = %sw.bb.5796
  br label %normal_char

if.end.5800:                                      ; preds = %sw.bb.5796
  br label %do.body.5801

do.body.5801:                                     ; preds = %if.end.5800
  br label %while.cond.5802

while.cond.5802:                                  ; preds = %do.end.5874, %do.body.5801
  %2835 = load i8*, i8** %b, align 8
  %2836 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5803 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2836, i32 0, i32 0
  %2837 = load i8*, i8** %buffer5803, align 8
  %sub.ptr.lhs.cast5804 = ptrtoint i8* %2835 to i64
  %sub.ptr.rhs.cast5805 = ptrtoint i8* %2837 to i64
  %sub.ptr.sub5806 = sub i64 %sub.ptr.lhs.cast5804, %sub.ptr.rhs.cast5805
  %add5807 = add nsw i64 %sub.ptr.sub5806, 1
  %2838 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5808 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2838, i32 0, i32 1
  %2839 = load i64, i64* %allocated5808, align 8
  %cmp5809 = icmp ugt i64 %add5807, %2839
  br i1 %cmp5809, label %while.body.5811, label %while.end.5875

while.body.5811:                                  ; preds = %while.cond.5802
  br label %do.body.5812

do.body.5812:                                     ; preds = %while.body.5811
  %2840 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5814 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2840, i32 0, i32 0
  %2841 = load i8*, i8** %buffer5814, align 8
  store i8* %2841, i8** %old_buffer5813, align 8
  %2842 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5815 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2842, i32 0, i32 1
  %2843 = load i64, i64* %allocated5815, align 8
  %cmp5816 = icmp eq i64 %2843, 32768
  br i1 %cmp5816, label %if.then.5818, label %if.end.5819

if.then.5818:                                     ; preds = %do.body.5812
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5819:                                      ; preds = %do.body.5812
  %2844 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5820 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2844, i32 0, i32 1
  %2845 = load i64, i64* %allocated5820, align 8
  %shl5821 = shl i64 %2845, 1
  store i64 %shl5821, i64* %allocated5820, align 8
  %2846 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5822 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2846, i32 0, i32 1
  %2847 = load i64, i64* %allocated5822, align 8
  %cmp5823 = icmp ugt i64 %2847, 32768
  br i1 %cmp5823, label %if.then.5825, label %if.end.5827

if.then.5825:                                     ; preds = %if.end.5819
  %2848 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5826 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2848, i32 0, i32 1
  store i64 32768, i64* %allocated5826, align 8
  br label %if.end.5827

if.end.5827:                                      ; preds = %if.then.5825, %if.end.5819
  %2849 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5828 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2849, i32 0, i32 0
  %2850 = load i8*, i8** %buffer5828, align 8
  %2851 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5829 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2851, i32 0, i32 1
  %2852 = load i64, i64* %allocated5829, align 8
  %mul5830 = mul i64 %2852, 1
  %call5831 = call i8* @xrealloc(i8* %2850, i64 %mul5830)
  %2853 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5832 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2853, i32 0, i32 0
  store i8* %call5831, i8** %buffer5832, align 8
  %2854 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5833 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2854, i32 0, i32 0
  %2855 = load i8*, i8** %buffer5833, align 8
  %cmp5834 = icmp eq i8* %2855, null
  br i1 %cmp5834, label %if.then.5836, label %if.end.5837

if.then.5836:                                     ; preds = %if.end.5827
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5837:                                      ; preds = %if.end.5827
  %2856 = load i8*, i8** %old_buffer5813, align 8
  %2857 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5838 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2857, i32 0, i32 0
  %2858 = load i8*, i8** %buffer5838, align 8
  %cmp5839 = icmp ne i8* %2856, %2858
  br i1 %cmp5839, label %if.then.5841, label %if.end.5873

if.then.5841:                                     ; preds = %if.end.5837
  %2859 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5843 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2859, i32 0, i32 0
  %2860 = load i8*, i8** %buffer5843, align 8
  store i8* %2860, i8** %new_buffer5842, align 8
  %2861 = load i8*, i8** %new_buffer5842, align 8
  %2862 = load i8*, i8** %b, align 8
  %2863 = load i8*, i8** %old_buffer5813, align 8
  %sub.ptr.lhs.cast5844 = ptrtoint i8* %2862 to i64
  %sub.ptr.rhs.cast5845 = ptrtoint i8* %2863 to i64
  %sub.ptr.sub5846 = sub i64 %sub.ptr.lhs.cast5844, %sub.ptr.rhs.cast5845
  %add.ptr5847 = getelementptr inbounds i8, i8* %2861, i64 %sub.ptr.sub5846
  store i8* %add.ptr5847, i8** %b, align 8
  %2864 = load i8*, i8** %new_buffer5842, align 8
  %2865 = load i8*, i8** %begalt, align 8
  %2866 = load i8*, i8** %old_buffer5813, align 8
  %sub.ptr.lhs.cast5848 = ptrtoint i8* %2865 to i64
  %sub.ptr.rhs.cast5849 = ptrtoint i8* %2866 to i64
  %sub.ptr.sub5850 = sub i64 %sub.ptr.lhs.cast5848, %sub.ptr.rhs.cast5849
  %add.ptr5851 = getelementptr inbounds i8, i8* %2864, i64 %sub.ptr.sub5850
  store i8* %add.ptr5851, i8** %begalt, align 8
  %2867 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5852 = icmp ne i8* %2867, null
  br i1 %tobool5852, label %if.then.5853, label %if.end.5858

if.then.5853:                                     ; preds = %if.then.5841
  %2868 = load i8*, i8** %new_buffer5842, align 8
  %2869 = load i8*, i8** %fixup_alt_jump, align 8
  %2870 = load i8*, i8** %old_buffer5813, align 8
  %sub.ptr.lhs.cast5854 = ptrtoint i8* %2869 to i64
  %sub.ptr.rhs.cast5855 = ptrtoint i8* %2870 to i64
  %sub.ptr.sub5856 = sub i64 %sub.ptr.lhs.cast5854, %sub.ptr.rhs.cast5855
  %add.ptr5857 = getelementptr inbounds i8, i8* %2868, i64 %sub.ptr.sub5856
  store i8* %add.ptr5857, i8** %fixup_alt_jump, align 8
  br label %if.end.5858

if.end.5858:                                      ; preds = %if.then.5853, %if.then.5841
  %2871 = load i8*, i8** %laststart, align 8
  %tobool5859 = icmp ne i8* %2871, null
  br i1 %tobool5859, label %if.then.5860, label %if.end.5865

if.then.5860:                                     ; preds = %if.end.5858
  %2872 = load i8*, i8** %new_buffer5842, align 8
  %2873 = load i8*, i8** %laststart, align 8
  %2874 = load i8*, i8** %old_buffer5813, align 8
  %sub.ptr.lhs.cast5861 = ptrtoint i8* %2873 to i64
  %sub.ptr.rhs.cast5862 = ptrtoint i8* %2874 to i64
  %sub.ptr.sub5863 = sub i64 %sub.ptr.lhs.cast5861, %sub.ptr.rhs.cast5862
  %add.ptr5864 = getelementptr inbounds i8, i8* %2872, i64 %sub.ptr.sub5863
  store i8* %add.ptr5864, i8** %laststart, align 8
  br label %if.end.5865

if.end.5865:                                      ; preds = %if.then.5860, %if.end.5858
  %2875 = load i8*, i8** %pending_exact, align 8
  %tobool5866 = icmp ne i8* %2875, null
  br i1 %tobool5866, label %if.then.5867, label %if.end.5872

if.then.5867:                                     ; preds = %if.end.5865
  %2876 = load i8*, i8** %new_buffer5842, align 8
  %2877 = load i8*, i8** %pending_exact, align 8
  %2878 = load i8*, i8** %old_buffer5813, align 8
  %sub.ptr.lhs.cast5868 = ptrtoint i8* %2877 to i64
  %sub.ptr.rhs.cast5869 = ptrtoint i8* %2878 to i64
  %sub.ptr.sub5870 = sub i64 %sub.ptr.lhs.cast5868, %sub.ptr.rhs.cast5869
  %add.ptr5871 = getelementptr inbounds i8, i8* %2876, i64 %sub.ptr.sub5870
  store i8* %add.ptr5871, i8** %pending_exact, align 8
  br label %if.end.5872

if.end.5872:                                      ; preds = %if.then.5867, %if.end.5865
  br label %if.end.5873

if.end.5873:                                      ; preds = %if.end.5872, %if.end.5837
  br label %do.end.5874

do.end.5874:                                      ; preds = %if.end.5873
  br label %while.cond.5802

while.end.5875:                                   ; preds = %while.cond.5802
  %2879 = load i8*, i8** %b, align 8
  %incdec.ptr5876 = getelementptr inbounds i8, i8* %2879, i32 1
  store i8* %incdec.ptr5876, i8** %b, align 8
  store i8 25, i8* %2879, align 1
  br label %do.end.5877

do.end.5877:                                      ; preds = %while.end.5875
  br label %sw.epilog.6156

sw.bb.5878:                                       ; preds = %do.end.2985
  %2880 = load i64, i64* %syntax.addr, align 8
  %and5879 = and i64 %2880, 524288
  %tobool5880 = icmp ne i64 %and5879, 0
  br i1 %tobool5880, label %if.then.5881, label %if.end.5882

if.then.5881:                                     ; preds = %sw.bb.5878
  br label %normal_char

if.end.5882:                                      ; preds = %sw.bb.5878
  br label %do.body.5883

do.body.5883:                                     ; preds = %if.end.5882
  br label %while.cond.5884

while.cond.5884:                                  ; preds = %do.end.5956, %do.body.5883
  %2881 = load i8*, i8** %b, align 8
  %2882 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5885 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2882, i32 0, i32 0
  %2883 = load i8*, i8** %buffer5885, align 8
  %sub.ptr.lhs.cast5886 = ptrtoint i8* %2881 to i64
  %sub.ptr.rhs.cast5887 = ptrtoint i8* %2883 to i64
  %sub.ptr.sub5888 = sub i64 %sub.ptr.lhs.cast5886, %sub.ptr.rhs.cast5887
  %add5889 = add nsw i64 %sub.ptr.sub5888, 1
  %2884 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5890 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2884, i32 0, i32 1
  %2885 = load i64, i64* %allocated5890, align 8
  %cmp5891 = icmp ugt i64 %add5889, %2885
  br i1 %cmp5891, label %while.body.5893, label %while.end.5957

while.body.5893:                                  ; preds = %while.cond.5884
  br label %do.body.5894

do.body.5894:                                     ; preds = %while.body.5893
  %2886 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5896 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2886, i32 0, i32 0
  %2887 = load i8*, i8** %buffer5896, align 8
  store i8* %2887, i8** %old_buffer5895, align 8
  %2888 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5897 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2888, i32 0, i32 1
  %2889 = load i64, i64* %allocated5897, align 8
  %cmp5898 = icmp eq i64 %2889, 32768
  br i1 %cmp5898, label %if.then.5900, label %if.end.5901

if.then.5900:                                     ; preds = %do.body.5894
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5901:                                      ; preds = %do.body.5894
  %2890 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5902 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2890, i32 0, i32 1
  %2891 = load i64, i64* %allocated5902, align 8
  %shl5903 = shl i64 %2891, 1
  store i64 %shl5903, i64* %allocated5902, align 8
  %2892 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5904 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2892, i32 0, i32 1
  %2893 = load i64, i64* %allocated5904, align 8
  %cmp5905 = icmp ugt i64 %2893, 32768
  br i1 %cmp5905, label %if.then.5907, label %if.end.5909

if.then.5907:                                     ; preds = %if.end.5901
  %2894 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5908 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2894, i32 0, i32 1
  store i64 32768, i64* %allocated5908, align 8
  br label %if.end.5909

if.end.5909:                                      ; preds = %if.then.5907, %if.end.5901
  %2895 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5910 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2895, i32 0, i32 0
  %2896 = load i8*, i8** %buffer5910, align 8
  %2897 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5911 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2897, i32 0, i32 1
  %2898 = load i64, i64* %allocated5911, align 8
  %mul5912 = mul i64 %2898, 1
  %call5913 = call i8* @xrealloc(i8* %2896, i64 %mul5912)
  %2899 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5914 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2899, i32 0, i32 0
  store i8* %call5913, i8** %buffer5914, align 8
  %2900 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5915 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2900, i32 0, i32 0
  %2901 = load i8*, i8** %buffer5915, align 8
  %cmp5916 = icmp eq i8* %2901, null
  br i1 %cmp5916, label %if.then.5918, label %if.end.5919

if.then.5918:                                     ; preds = %if.end.5909
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.5919:                                      ; preds = %if.end.5909
  %2902 = load i8*, i8** %old_buffer5895, align 8
  %2903 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5920 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2903, i32 0, i32 0
  %2904 = load i8*, i8** %buffer5920, align 8
  %cmp5921 = icmp ne i8* %2902, %2904
  br i1 %cmp5921, label %if.then.5923, label %if.end.5955

if.then.5923:                                     ; preds = %if.end.5919
  %2905 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5925 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2905, i32 0, i32 0
  %2906 = load i8*, i8** %buffer5925, align 8
  store i8* %2906, i8** %new_buffer5924, align 8
  %2907 = load i8*, i8** %new_buffer5924, align 8
  %2908 = load i8*, i8** %b, align 8
  %2909 = load i8*, i8** %old_buffer5895, align 8
  %sub.ptr.lhs.cast5926 = ptrtoint i8* %2908 to i64
  %sub.ptr.rhs.cast5927 = ptrtoint i8* %2909 to i64
  %sub.ptr.sub5928 = sub i64 %sub.ptr.lhs.cast5926, %sub.ptr.rhs.cast5927
  %add.ptr5929 = getelementptr inbounds i8, i8* %2907, i64 %sub.ptr.sub5928
  store i8* %add.ptr5929, i8** %b, align 8
  %2910 = load i8*, i8** %new_buffer5924, align 8
  %2911 = load i8*, i8** %begalt, align 8
  %2912 = load i8*, i8** %old_buffer5895, align 8
  %sub.ptr.lhs.cast5930 = ptrtoint i8* %2911 to i64
  %sub.ptr.rhs.cast5931 = ptrtoint i8* %2912 to i64
  %sub.ptr.sub5932 = sub i64 %sub.ptr.lhs.cast5930, %sub.ptr.rhs.cast5931
  %add.ptr5933 = getelementptr inbounds i8, i8* %2910, i64 %sub.ptr.sub5932
  store i8* %add.ptr5933, i8** %begalt, align 8
  %2913 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool5934 = icmp ne i8* %2913, null
  br i1 %tobool5934, label %if.then.5935, label %if.end.5940

if.then.5935:                                     ; preds = %if.then.5923
  %2914 = load i8*, i8** %new_buffer5924, align 8
  %2915 = load i8*, i8** %fixup_alt_jump, align 8
  %2916 = load i8*, i8** %old_buffer5895, align 8
  %sub.ptr.lhs.cast5936 = ptrtoint i8* %2915 to i64
  %sub.ptr.rhs.cast5937 = ptrtoint i8* %2916 to i64
  %sub.ptr.sub5938 = sub i64 %sub.ptr.lhs.cast5936, %sub.ptr.rhs.cast5937
  %add.ptr5939 = getelementptr inbounds i8, i8* %2914, i64 %sub.ptr.sub5938
  store i8* %add.ptr5939, i8** %fixup_alt_jump, align 8
  br label %if.end.5940

if.end.5940:                                      ; preds = %if.then.5935, %if.then.5923
  %2917 = load i8*, i8** %laststart, align 8
  %tobool5941 = icmp ne i8* %2917, null
  br i1 %tobool5941, label %if.then.5942, label %if.end.5947

if.then.5942:                                     ; preds = %if.end.5940
  %2918 = load i8*, i8** %new_buffer5924, align 8
  %2919 = load i8*, i8** %laststart, align 8
  %2920 = load i8*, i8** %old_buffer5895, align 8
  %sub.ptr.lhs.cast5943 = ptrtoint i8* %2919 to i64
  %sub.ptr.rhs.cast5944 = ptrtoint i8* %2920 to i64
  %sub.ptr.sub5945 = sub i64 %sub.ptr.lhs.cast5943, %sub.ptr.rhs.cast5944
  %add.ptr5946 = getelementptr inbounds i8, i8* %2918, i64 %sub.ptr.sub5945
  store i8* %add.ptr5946, i8** %laststart, align 8
  br label %if.end.5947

if.end.5947:                                      ; preds = %if.then.5942, %if.end.5940
  %2921 = load i8*, i8** %pending_exact, align 8
  %tobool5948 = icmp ne i8* %2921, null
  br i1 %tobool5948, label %if.then.5949, label %if.end.5954

if.then.5949:                                     ; preds = %if.end.5947
  %2922 = load i8*, i8** %new_buffer5924, align 8
  %2923 = load i8*, i8** %pending_exact, align 8
  %2924 = load i8*, i8** %old_buffer5895, align 8
  %sub.ptr.lhs.cast5950 = ptrtoint i8* %2923 to i64
  %sub.ptr.rhs.cast5951 = ptrtoint i8* %2924 to i64
  %sub.ptr.sub5952 = sub i64 %sub.ptr.lhs.cast5950, %sub.ptr.rhs.cast5951
  %add.ptr5953 = getelementptr inbounds i8, i8* %2922, i64 %sub.ptr.sub5952
  store i8* %add.ptr5953, i8** %pending_exact, align 8
  br label %if.end.5954

if.end.5954:                                      ; preds = %if.then.5949, %if.end.5947
  br label %if.end.5955

if.end.5955:                                      ; preds = %if.end.5954, %if.end.5919
  br label %do.end.5956

do.end.5956:                                      ; preds = %if.end.5955
  br label %while.cond.5884

while.end.5957:                                   ; preds = %while.cond.5884
  %2925 = load i8*, i8** %b, align 8
  %incdec.ptr5958 = getelementptr inbounds i8, i8* %2925, i32 1
  store i8* %incdec.ptr5958, i8** %b, align 8
  store i8 11, i8* %2925, align 1
  br label %do.end.5959

do.end.5959:                                      ; preds = %while.end.5957
  br label %sw.epilog.6156

sw.bb.5960:                                       ; preds = %do.end.2985
  %2926 = load i64, i64* %syntax.addr, align 8
  %and5961 = and i64 %2926, 524288
  %tobool5962 = icmp ne i64 %and5961, 0
  br i1 %tobool5962, label %if.then.5963, label %if.end.5964

if.then.5963:                                     ; preds = %sw.bb.5960
  br label %normal_char

if.end.5964:                                      ; preds = %sw.bb.5960
  br label %do.body.5965

do.body.5965:                                     ; preds = %if.end.5964
  br label %while.cond.5966

while.cond.5966:                                  ; preds = %do.end.6038, %do.body.5965
  %2927 = load i8*, i8** %b, align 8
  %2928 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5967 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2928, i32 0, i32 0
  %2929 = load i8*, i8** %buffer5967, align 8
  %sub.ptr.lhs.cast5968 = ptrtoint i8* %2927 to i64
  %sub.ptr.rhs.cast5969 = ptrtoint i8* %2929 to i64
  %sub.ptr.sub5970 = sub i64 %sub.ptr.lhs.cast5968, %sub.ptr.rhs.cast5969
  %add5971 = add nsw i64 %sub.ptr.sub5970, 1
  %2930 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5972 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2930, i32 0, i32 1
  %2931 = load i64, i64* %allocated5972, align 8
  %cmp5973 = icmp ugt i64 %add5971, %2931
  br i1 %cmp5973, label %while.body.5975, label %while.end.6039

while.body.5975:                                  ; preds = %while.cond.5966
  br label %do.body.5976

do.body.5976:                                     ; preds = %while.body.5975
  %2932 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5978 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2932, i32 0, i32 0
  %2933 = load i8*, i8** %buffer5978, align 8
  store i8* %2933, i8** %old_buffer5977, align 8
  %2934 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5979 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2934, i32 0, i32 1
  %2935 = load i64, i64* %allocated5979, align 8
  %cmp5980 = icmp eq i64 %2935, 32768
  br i1 %cmp5980, label %if.then.5982, label %if.end.5983

if.then.5982:                                     ; preds = %do.body.5976
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.5983:                                      ; preds = %do.body.5976
  %2936 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5984 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2936, i32 0, i32 1
  %2937 = load i64, i64* %allocated5984, align 8
  %shl5985 = shl i64 %2937, 1
  store i64 %shl5985, i64* %allocated5984, align 8
  %2938 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5986 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2938, i32 0, i32 1
  %2939 = load i64, i64* %allocated5986, align 8
  %cmp5987 = icmp ugt i64 %2939, 32768
  br i1 %cmp5987, label %if.then.5989, label %if.end.5991

if.then.5989:                                     ; preds = %if.end.5983
  %2940 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5990 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2940, i32 0, i32 1
  store i64 32768, i64* %allocated5990, align 8
  br label %if.end.5991

if.end.5991:                                      ; preds = %if.then.5989, %if.end.5983
  %2941 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5992 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2941, i32 0, i32 0
  %2942 = load i8*, i8** %buffer5992, align 8
  %2943 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated5993 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2943, i32 0, i32 1
  %2944 = load i64, i64* %allocated5993, align 8
  %mul5994 = mul i64 %2944, 1
  %call5995 = call i8* @xrealloc(i8* %2942, i64 %mul5994)
  %2945 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5996 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2945, i32 0, i32 0
  store i8* %call5995, i8** %buffer5996, align 8
  %2946 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer5997 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2946, i32 0, i32 0
  %2947 = load i8*, i8** %buffer5997, align 8
  %cmp5998 = icmp eq i8* %2947, null
  br i1 %cmp5998, label %if.then.6000, label %if.end.6001

if.then.6000:                                     ; preds = %if.end.5991
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.6001:                                      ; preds = %if.end.5991
  %2948 = load i8*, i8** %old_buffer5977, align 8
  %2949 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6002 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2949, i32 0, i32 0
  %2950 = load i8*, i8** %buffer6002, align 8
  %cmp6003 = icmp ne i8* %2948, %2950
  br i1 %cmp6003, label %if.then.6005, label %if.end.6037

if.then.6005:                                     ; preds = %if.end.6001
  %2951 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6007 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2951, i32 0, i32 0
  %2952 = load i8*, i8** %buffer6007, align 8
  store i8* %2952, i8** %new_buffer6006, align 8
  %2953 = load i8*, i8** %new_buffer6006, align 8
  %2954 = load i8*, i8** %b, align 8
  %2955 = load i8*, i8** %old_buffer5977, align 8
  %sub.ptr.lhs.cast6008 = ptrtoint i8* %2954 to i64
  %sub.ptr.rhs.cast6009 = ptrtoint i8* %2955 to i64
  %sub.ptr.sub6010 = sub i64 %sub.ptr.lhs.cast6008, %sub.ptr.rhs.cast6009
  %add.ptr6011 = getelementptr inbounds i8, i8* %2953, i64 %sub.ptr.sub6010
  store i8* %add.ptr6011, i8** %b, align 8
  %2956 = load i8*, i8** %new_buffer6006, align 8
  %2957 = load i8*, i8** %begalt, align 8
  %2958 = load i8*, i8** %old_buffer5977, align 8
  %sub.ptr.lhs.cast6012 = ptrtoint i8* %2957 to i64
  %sub.ptr.rhs.cast6013 = ptrtoint i8* %2958 to i64
  %sub.ptr.sub6014 = sub i64 %sub.ptr.lhs.cast6012, %sub.ptr.rhs.cast6013
  %add.ptr6015 = getelementptr inbounds i8, i8* %2956, i64 %sub.ptr.sub6014
  store i8* %add.ptr6015, i8** %begalt, align 8
  %2959 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6016 = icmp ne i8* %2959, null
  br i1 %tobool6016, label %if.then.6017, label %if.end.6022

if.then.6017:                                     ; preds = %if.then.6005
  %2960 = load i8*, i8** %new_buffer6006, align 8
  %2961 = load i8*, i8** %fixup_alt_jump, align 8
  %2962 = load i8*, i8** %old_buffer5977, align 8
  %sub.ptr.lhs.cast6018 = ptrtoint i8* %2961 to i64
  %sub.ptr.rhs.cast6019 = ptrtoint i8* %2962 to i64
  %sub.ptr.sub6020 = sub i64 %sub.ptr.lhs.cast6018, %sub.ptr.rhs.cast6019
  %add.ptr6021 = getelementptr inbounds i8, i8* %2960, i64 %sub.ptr.sub6020
  store i8* %add.ptr6021, i8** %fixup_alt_jump, align 8
  br label %if.end.6022

if.end.6022:                                      ; preds = %if.then.6017, %if.then.6005
  %2963 = load i8*, i8** %laststart, align 8
  %tobool6023 = icmp ne i8* %2963, null
  br i1 %tobool6023, label %if.then.6024, label %if.end.6029

if.then.6024:                                     ; preds = %if.end.6022
  %2964 = load i8*, i8** %new_buffer6006, align 8
  %2965 = load i8*, i8** %laststart, align 8
  %2966 = load i8*, i8** %old_buffer5977, align 8
  %sub.ptr.lhs.cast6025 = ptrtoint i8* %2965 to i64
  %sub.ptr.rhs.cast6026 = ptrtoint i8* %2966 to i64
  %sub.ptr.sub6027 = sub i64 %sub.ptr.lhs.cast6025, %sub.ptr.rhs.cast6026
  %add.ptr6028 = getelementptr inbounds i8, i8* %2964, i64 %sub.ptr.sub6027
  store i8* %add.ptr6028, i8** %laststart, align 8
  br label %if.end.6029

if.end.6029:                                      ; preds = %if.then.6024, %if.end.6022
  %2967 = load i8*, i8** %pending_exact, align 8
  %tobool6030 = icmp ne i8* %2967, null
  br i1 %tobool6030, label %if.then.6031, label %if.end.6036

if.then.6031:                                     ; preds = %if.end.6029
  %2968 = load i8*, i8** %new_buffer6006, align 8
  %2969 = load i8*, i8** %pending_exact, align 8
  %2970 = load i8*, i8** %old_buffer5977, align 8
  %sub.ptr.lhs.cast6032 = ptrtoint i8* %2969 to i64
  %sub.ptr.rhs.cast6033 = ptrtoint i8* %2970 to i64
  %sub.ptr.sub6034 = sub i64 %sub.ptr.lhs.cast6032, %sub.ptr.rhs.cast6033
  %add.ptr6035 = getelementptr inbounds i8, i8* %2968, i64 %sub.ptr.sub6034
  store i8* %add.ptr6035, i8** %pending_exact, align 8
  br label %if.end.6036

if.end.6036:                                      ; preds = %if.then.6031, %if.end.6029
  br label %if.end.6037

if.end.6037:                                      ; preds = %if.end.6036, %if.end.6001
  br label %do.end.6038

do.end.6038:                                      ; preds = %if.end.6037
  br label %while.cond.5966

while.end.6039:                                   ; preds = %while.cond.5966
  %2971 = load i8*, i8** %b, align 8
  %incdec.ptr6040 = getelementptr inbounds i8, i8* %2971, i32 1
  store i8* %incdec.ptr6040, i8** %b, align 8
  store i8 12, i8* %2971, align 1
  br label %do.end.6041

do.end.6041:                                      ; preds = %while.end.6039
  br label %sw.epilog.6156

sw.bb.6042:                                       ; preds = %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985, %do.end.2985
  %2972 = load i64, i64* %syntax.addr, align 8
  %and6043 = and i64 %2972, 16384
  %tobool6044 = icmp ne i64 %and6043, 0
  br i1 %tobool6044, label %if.then.6045, label %if.end.6046

if.then.6045:                                     ; preds = %sw.bb.6042
  br label %normal_backslash

if.end.6046:                                      ; preds = %sw.bb.6042
  %2973 = load i32, i32* %c, align 4
  %sub6047 = sub nsw i32 %2973, 48
  store i32 %sub6047, i32* %reg, align 4
  %2974 = load i32, i32* %reg, align 4
  %conv6048 = sext i32 %2974 to i64
  %2975 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %re_nsub6049 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2975, i32 0, i32 6
  %2976 = load i64, i64* %re_nsub6049, align 8
  %cmp6050 = icmp ugt i64 %conv6048, %2976
  br i1 %cmp6050, label %if.then.6059, label %lor.lhs.false.6052

lor.lhs.false.6052:                               ; preds = %if.end.6046
  %2977 = load i32, i32* %reg, align 4
  %cmp6053 = icmp slt i32 %2977, 1
  br i1 %cmp6053, label %if.then.6059, label %lor.lhs.false.6055

lor.lhs.false.6055:                               ; preds = %lor.lhs.false.6052
  %2978 = load i32, i32* %reg, align 4
  %call6056 = call signext i8 @group_in_compile_stack(%struct.compile_stack_type* byval align 8 %compile_stack, i32 %2978)
  %conv6057 = sext i8 %call6056 to i32
  %tobool6058 = icmp ne i32 %conv6057, 0
  br i1 %tobool6058, label %if.then.6059, label %if.end.6070

if.then.6059:                                     ; preds = %lor.lhs.false.6055, %lor.lhs.false.6052, %if.end.6046
  br label %do.body.6060

do.body.6060:                                     ; preds = %if.then.6059
  br label %do.body.6061

do.body.6061:                                     ; preds = %do.body.6060
  %table6062 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2979 = load i32*, i32** %table6062, align 8
  %tobool6063 = icmp ne i32* %2979, null
  br i1 %tobool6063, label %if.then.6064, label %if.end.6066

if.then.6064:                                     ; preds = %do.body.6061
  %table6065 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %2980 = load i32*, i32** %table6065, align 8
  %2981 = bitcast i32* %2980 to i8*
  call void @xfree(i8* %2981)
  br label %if.end.6066

if.end.6066:                                      ; preds = %if.then.6064, %do.body.6061
  br label %do.end.6067

do.end.6067:                                      ; preds = %if.end.6066
  %stack6068 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %2982 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack6068, align 8
  %2983 = bitcast %struct.compile_stack_elt_t* %2982 to i8*
  call void @xfree(i8* %2983)
  store i32 6, i32* %retval
  br label %do.end.6650

do.end.6069:                                      ; No predecessors!
  br label %if.end.6070

if.end.6070:                                      ; preds = %do.end.6069, %lor.lhs.false.6055
  %2984 = load i8*, i8** %b, align 8
  store i8* %2984, i8** %laststart, align 8
  br label %do.body.6071

do.body.6071:                                     ; preds = %if.end.6070
  br label %while.cond.6072

while.cond.6072:                                  ; preds = %do.end.6144, %do.body.6071
  %2985 = load i8*, i8** %b, align 8
  %2986 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6073 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2986, i32 0, i32 0
  %2987 = load i8*, i8** %buffer6073, align 8
  %sub.ptr.lhs.cast6074 = ptrtoint i8* %2985 to i64
  %sub.ptr.rhs.cast6075 = ptrtoint i8* %2987 to i64
  %sub.ptr.sub6076 = sub i64 %sub.ptr.lhs.cast6074, %sub.ptr.rhs.cast6075
  %add6077 = add nsw i64 %sub.ptr.sub6076, 2
  %2988 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6078 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2988, i32 0, i32 1
  %2989 = load i64, i64* %allocated6078, align 8
  %cmp6079 = icmp ugt i64 %add6077, %2989
  br i1 %cmp6079, label %while.body.6081, label %while.end.6145

while.body.6081:                                  ; preds = %while.cond.6072
  br label %do.body.6082

do.body.6082:                                     ; preds = %while.body.6081
  %2990 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6084 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2990, i32 0, i32 0
  %2991 = load i8*, i8** %buffer6084, align 8
  store i8* %2991, i8** %old_buffer6083, align 8
  %2992 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6085 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2992, i32 0, i32 1
  %2993 = load i64, i64* %allocated6085, align 8
  %cmp6086 = icmp eq i64 %2993, 32768
  br i1 %cmp6086, label %if.then.6088, label %if.end.6089

if.then.6088:                                     ; preds = %do.body.6082
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.6089:                                      ; preds = %do.body.6082
  %2994 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6090 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2994, i32 0, i32 1
  %2995 = load i64, i64* %allocated6090, align 8
  %shl6091 = shl i64 %2995, 1
  store i64 %shl6091, i64* %allocated6090, align 8
  %2996 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6092 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2996, i32 0, i32 1
  %2997 = load i64, i64* %allocated6092, align 8
  %cmp6093 = icmp ugt i64 %2997, 32768
  br i1 %cmp6093, label %if.then.6095, label %if.end.6097

if.then.6095:                                     ; preds = %if.end.6089
  %2998 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6096 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2998, i32 0, i32 1
  store i64 32768, i64* %allocated6096, align 8
  br label %if.end.6097

if.end.6097:                                      ; preds = %if.then.6095, %if.end.6089
  %2999 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6098 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2999, i32 0, i32 0
  %3000 = load i8*, i8** %buffer6098, align 8
  %3001 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6099 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3001, i32 0, i32 1
  %3002 = load i64, i64* %allocated6099, align 8
  %mul6100 = mul i64 %3002, 1
  %call6101 = call i8* @xrealloc(i8* %3000, i64 %mul6100)
  %3003 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6102 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3003, i32 0, i32 0
  store i8* %call6101, i8** %buffer6102, align 8
  %3004 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6103 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3004, i32 0, i32 0
  %3005 = load i8*, i8** %buffer6103, align 8
  %cmp6104 = icmp eq i8* %3005, null
  br i1 %cmp6104, label %if.then.6106, label %if.end.6107

if.then.6106:                                     ; preds = %if.end.6097
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.6107:                                      ; preds = %if.end.6097
  %3006 = load i8*, i8** %old_buffer6083, align 8
  %3007 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6108 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3007, i32 0, i32 0
  %3008 = load i8*, i8** %buffer6108, align 8
  %cmp6109 = icmp ne i8* %3006, %3008
  br i1 %cmp6109, label %if.then.6111, label %if.end.6143

if.then.6111:                                     ; preds = %if.end.6107
  %3009 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6113 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3009, i32 0, i32 0
  %3010 = load i8*, i8** %buffer6113, align 8
  store i8* %3010, i8** %new_buffer6112, align 8
  %3011 = load i8*, i8** %new_buffer6112, align 8
  %3012 = load i8*, i8** %b, align 8
  %3013 = load i8*, i8** %old_buffer6083, align 8
  %sub.ptr.lhs.cast6114 = ptrtoint i8* %3012 to i64
  %sub.ptr.rhs.cast6115 = ptrtoint i8* %3013 to i64
  %sub.ptr.sub6116 = sub i64 %sub.ptr.lhs.cast6114, %sub.ptr.rhs.cast6115
  %add.ptr6117 = getelementptr inbounds i8, i8* %3011, i64 %sub.ptr.sub6116
  store i8* %add.ptr6117, i8** %b, align 8
  %3014 = load i8*, i8** %new_buffer6112, align 8
  %3015 = load i8*, i8** %begalt, align 8
  %3016 = load i8*, i8** %old_buffer6083, align 8
  %sub.ptr.lhs.cast6118 = ptrtoint i8* %3015 to i64
  %sub.ptr.rhs.cast6119 = ptrtoint i8* %3016 to i64
  %sub.ptr.sub6120 = sub i64 %sub.ptr.lhs.cast6118, %sub.ptr.rhs.cast6119
  %add.ptr6121 = getelementptr inbounds i8, i8* %3014, i64 %sub.ptr.sub6120
  store i8* %add.ptr6121, i8** %begalt, align 8
  %3017 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6122 = icmp ne i8* %3017, null
  br i1 %tobool6122, label %if.then.6123, label %if.end.6128

if.then.6123:                                     ; preds = %if.then.6111
  %3018 = load i8*, i8** %new_buffer6112, align 8
  %3019 = load i8*, i8** %fixup_alt_jump, align 8
  %3020 = load i8*, i8** %old_buffer6083, align 8
  %sub.ptr.lhs.cast6124 = ptrtoint i8* %3019 to i64
  %sub.ptr.rhs.cast6125 = ptrtoint i8* %3020 to i64
  %sub.ptr.sub6126 = sub i64 %sub.ptr.lhs.cast6124, %sub.ptr.rhs.cast6125
  %add.ptr6127 = getelementptr inbounds i8, i8* %3018, i64 %sub.ptr.sub6126
  store i8* %add.ptr6127, i8** %fixup_alt_jump, align 8
  br label %if.end.6128

if.end.6128:                                      ; preds = %if.then.6123, %if.then.6111
  %3021 = load i8*, i8** %laststart, align 8
  %tobool6129 = icmp ne i8* %3021, null
  br i1 %tobool6129, label %if.then.6130, label %if.end.6135

if.then.6130:                                     ; preds = %if.end.6128
  %3022 = load i8*, i8** %new_buffer6112, align 8
  %3023 = load i8*, i8** %laststart, align 8
  %3024 = load i8*, i8** %old_buffer6083, align 8
  %sub.ptr.lhs.cast6131 = ptrtoint i8* %3023 to i64
  %sub.ptr.rhs.cast6132 = ptrtoint i8* %3024 to i64
  %sub.ptr.sub6133 = sub i64 %sub.ptr.lhs.cast6131, %sub.ptr.rhs.cast6132
  %add.ptr6134 = getelementptr inbounds i8, i8* %3022, i64 %sub.ptr.sub6133
  store i8* %add.ptr6134, i8** %laststart, align 8
  br label %if.end.6135

if.end.6135:                                      ; preds = %if.then.6130, %if.end.6128
  %3025 = load i8*, i8** %pending_exact, align 8
  %tobool6136 = icmp ne i8* %3025, null
  br i1 %tobool6136, label %if.then.6137, label %if.end.6142

if.then.6137:                                     ; preds = %if.end.6135
  %3026 = load i8*, i8** %new_buffer6112, align 8
  %3027 = load i8*, i8** %pending_exact, align 8
  %3028 = load i8*, i8** %old_buffer6083, align 8
  %sub.ptr.lhs.cast6138 = ptrtoint i8* %3027 to i64
  %sub.ptr.rhs.cast6139 = ptrtoint i8* %3028 to i64
  %sub.ptr.sub6140 = sub i64 %sub.ptr.lhs.cast6138, %sub.ptr.rhs.cast6139
  %add.ptr6141 = getelementptr inbounds i8, i8* %3026, i64 %sub.ptr.sub6140
  store i8* %add.ptr6141, i8** %pending_exact, align 8
  br label %if.end.6142

if.end.6142:                                      ; preds = %if.then.6137, %if.end.6135
  br label %if.end.6143

if.end.6143:                                      ; preds = %if.end.6142, %if.end.6107
  br label %do.end.6144

do.end.6144:                                      ; preds = %if.end.6143
  br label %while.cond.6072

while.end.6145:                                   ; preds = %while.cond.6072
  %3029 = load i8*, i8** %b, align 8
  %incdec.ptr6146 = getelementptr inbounds i8, i8* %3029, i32 1
  store i8* %incdec.ptr6146, i8** %b, align 8
  store i8 8, i8* %3029, align 1
  %3030 = load i32, i32* %reg, align 4
  %conv6147 = trunc i32 %3030 to i8
  %3031 = load i8*, i8** %b, align 8
  %incdec.ptr6148 = getelementptr inbounds i8, i8* %3031, i32 1
  store i8* %incdec.ptr6148, i8** %b, align 8
  store i8 %conv6147, i8* %3031, align 1
  br label %do.end.6149

do.end.6149:                                      ; preds = %while.end.6145
  br label %sw.epilog.6156

sw.bb.6150:                                       ; preds = %do.end.2985, %do.end.2985
  %3032 = load i64, i64* %syntax.addr, align 8
  %and6151 = and i64 %3032, 2
  %tobool6152 = icmp ne i64 %and6151, 0
  br i1 %tobool6152, label %if.then.6153, label %if.else.6154

if.then.6153:                                     ; preds = %sw.bb.6150
  br label %handle_plus

if.else.6154:                                     ; preds = %sw.bb.6150
  br label %normal_backslash

sw.default.6155:                                  ; preds = %do.end.2985
  br label %normal_backslash

normal_backslash:                                 ; preds = %sw.default.6155, %if.else.6154, %if.then.6045, %if.then.4453, %if.then.3721, %if.then.3543, %if.then.3372, %if.then.3364, %if.then.2989
  br label %normal_char

sw.epilog.6156:                                   ; preds = %do.end.6149, %do.end.6041, %do.end.5959, %do.end.5877, %do.end.5795, %if.end.5713, %do.end.5464, %do.end.5382, %do.end.5300, %do.end.5217, %do.end.5134, %do.end.4984, %do.end.4834, %do.end.4683, %do.end.4532, %if.end.4450, %while.end.3713, %if.end.3536, %if.end.3358
  br label %sw.epilog.6529

sw.default.6157:                                  ; preds = %do.end.106
  br label %normal_char

normal_char:                                      ; preds = %sw.default.6157, %normal_backslash, %if.then.5963, %if.then.5881, %if.then.5799, %if.then.5717, %if.then.5468, %if.then.5386, %if.then.5304, %if.then.5221, %if.then.5138, %if.else.4454, %if.then.3547, %if.then.3402, %if.else.2900, %if.else.2892, %if.else.2887, %if.else.2882, %if.else.2877, %if.then.360, %if.then.339, %if.else.331, %if.else.237, %if.then.146, %if.then.109
  %3033 = load i8*, i8** %pending_exact, align 8
  %tobool6158 = icmp ne i8* %3033, null
  br i1 %tobool6158, label %lor.lhs.false.6159, label %if.then.6240

lor.lhs.false.6159:                               ; preds = %normal_char
  %3034 = load i8*, i8** %pending_exact, align 8
  %3035 = load i8*, i8** %pending_exact, align 8
  %3036 = load i8, i8* %3035, align 1
  %conv6160 = zext i8 %3036 to i32
  %idx.ext6161 = sext i32 %conv6160 to i64
  %add.ptr6162 = getelementptr inbounds i8, i8* %3034, i64 %idx.ext6161
  %add.ptr6163 = getelementptr inbounds i8, i8* %add.ptr6162, i64 1
  %3037 = load i8*, i8** %b, align 8
  %cmp6164 = icmp ne i8* %add.ptr6163, %3037
  br i1 %cmp6164, label %if.then.6240, label %lor.lhs.false.6166

lor.lhs.false.6166:                               ; preds = %lor.lhs.false.6159
  %3038 = load i8*, i8** %pending_exact, align 8
  %3039 = load i8, i8* %3038, align 1
  %conv6167 = zext i8 %3039 to i32
  %cmp6168 = icmp sge i32 %conv6167, 251
  br i1 %cmp6168, label %if.then.6240, label %lor.lhs.false.6170

lor.lhs.false.6170:                               ; preds = %lor.lhs.false.6166
  %3040 = load i8*, i8** %p, align 8
  %3041 = load i8*, i8** %pend, align 8
  %cmp6171 = icmp ne i8* %3040, %3041
  br i1 %cmp6171, label %land.lhs.true.6173, label %lor.lhs.false.6181

land.lhs.true.6173:                               ; preds = %lor.lhs.false.6170
  %3042 = load i8*, i8** %p, align 8
  %3043 = load i8, i8* %3042, align 1
  %conv6174 = zext i8 %3043 to i32
  %cmp6175 = icmp eq i32 %conv6174, 42
  br i1 %cmp6175, label %if.then.6240, label %lor.lhs.false.6177

lor.lhs.false.6177:                               ; preds = %land.lhs.true.6173
  %3044 = load i8*, i8** %p, align 8
  %3045 = load i8, i8* %3044, align 1
  %conv6178 = zext i8 %3045 to i32
  %cmp6179 = icmp eq i32 %conv6178, 94
  br i1 %cmp6179, label %if.then.6240, label %lor.lhs.false.6181

lor.lhs.false.6181:                               ; preds = %lor.lhs.false.6177, %lor.lhs.false.6170
  %3046 = load i64, i64* %syntax.addr, align 8
  %and6182 = and i64 %3046, 2
  %tobool6183 = icmp ne i64 %and6182, 0
  br i1 %tobool6183, label %cond.true.6184, label %cond.false.6202

cond.true.6184:                                   ; preds = %lor.lhs.false.6181
  %3047 = load i8*, i8** %p, align 8
  %add.ptr6185 = getelementptr inbounds i8, i8* %3047, i64 1
  %3048 = load i8*, i8** %pend, align 8
  %cmp6186 = icmp ult i8* %add.ptr6185, %3048
  br i1 %cmp6186, label %land.lhs.true.6188, label %lor.lhs.false.6213

land.lhs.true.6188:                               ; preds = %cond.true.6184
  %3049 = load i8*, i8** %p, align 8
  %3050 = load i8, i8* %3049, align 1
  %conv6189 = zext i8 %3050 to i32
  %cmp6190 = icmp eq i32 %conv6189, 92
  br i1 %cmp6190, label %land.lhs.true.6192, label %lor.lhs.false.6213

land.lhs.true.6192:                               ; preds = %land.lhs.true.6188
  %3051 = load i8*, i8** %p, align 8
  %arrayidx6193 = getelementptr inbounds i8, i8* %3051, i64 1
  %3052 = load i8, i8* %arrayidx6193, align 1
  %conv6194 = zext i8 %3052 to i32
  %cmp6195 = icmp eq i32 %conv6194, 43
  br i1 %cmp6195, label %if.then.6240, label %lor.lhs.false.6197

lor.lhs.false.6197:                               ; preds = %land.lhs.true.6192
  %3053 = load i8*, i8** %p, align 8
  %arrayidx6198 = getelementptr inbounds i8, i8* %3053, i64 1
  %3054 = load i8, i8* %arrayidx6198, align 1
  %conv6199 = zext i8 %3054 to i32
  %cmp6200 = icmp eq i32 %conv6199, 63
  br i1 %cmp6200, label %if.then.6240, label %lor.lhs.false.6213

cond.false.6202:                                  ; preds = %lor.lhs.false.6181
  %3055 = load i8*, i8** %p, align 8
  %3056 = load i8*, i8** %pend, align 8
  %cmp6203 = icmp ne i8* %3055, %3056
  br i1 %cmp6203, label %land.lhs.true.6205, label %lor.lhs.false.6213

land.lhs.true.6205:                               ; preds = %cond.false.6202
  %3057 = load i8*, i8** %p, align 8
  %3058 = load i8, i8* %3057, align 1
  %conv6206 = zext i8 %3058 to i32
  %cmp6207 = icmp eq i32 %conv6206, 43
  br i1 %cmp6207, label %if.then.6240, label %lor.lhs.false.6209

lor.lhs.false.6209:                               ; preds = %land.lhs.true.6205
  %3059 = load i8*, i8** %p, align 8
  %3060 = load i8, i8* %3059, align 1
  %conv6210 = zext i8 %3060 to i32
  %cmp6211 = icmp eq i32 %conv6210, 63
  br i1 %cmp6211, label %if.then.6240, label %lor.lhs.false.6213

lor.lhs.false.6213:                               ; preds = %lor.lhs.false.6209, %cond.false.6202, %lor.lhs.false.6197, %land.lhs.true.6188, %cond.true.6184
  %3061 = load i64, i64* %syntax.addr, align 8
  %and6214 = and i64 %3061, 512
  %tobool6215 = icmp ne i64 %and6214, 0
  br i1 %tobool6215, label %land.lhs.true.6216, label %if.end.6320

land.lhs.true.6216:                               ; preds = %lor.lhs.false.6213
  %3062 = load i64, i64* %syntax.addr, align 8
  %and6217 = and i64 %3062, 4096
  %tobool6218 = icmp ne i64 %and6217, 0
  br i1 %tobool6218, label %cond.true.6219, label %cond.false.6226

cond.true.6219:                                   ; preds = %land.lhs.true.6216
  %3063 = load i8*, i8** %p, align 8
  %3064 = load i8*, i8** %pend, align 8
  %cmp6220 = icmp ne i8* %3063, %3064
  br i1 %cmp6220, label %land.lhs.true.6222, label %if.end.6320

land.lhs.true.6222:                               ; preds = %cond.true.6219
  %3065 = load i8*, i8** %p, align 8
  %3066 = load i8, i8* %3065, align 1
  %conv6223 = zext i8 %3066 to i32
  %cmp6224 = icmp eq i32 %conv6223, 123
  br i1 %cmp6224, label %if.then.6240, label %if.end.6320

cond.false.6226:                                  ; preds = %land.lhs.true.6216
  %3067 = load i8*, i8** %p, align 8
  %add.ptr6227 = getelementptr inbounds i8, i8* %3067, i64 1
  %3068 = load i8*, i8** %pend, align 8
  %cmp6228 = icmp ult i8* %add.ptr6227, %3068
  br i1 %cmp6228, label %land.lhs.true.6230, label %if.end.6320

land.lhs.true.6230:                               ; preds = %cond.false.6226
  %3069 = load i8*, i8** %p, align 8
  %arrayidx6231 = getelementptr inbounds i8, i8* %3069, i64 0
  %3070 = load i8, i8* %arrayidx6231, align 1
  %conv6232 = zext i8 %3070 to i32
  %cmp6233 = icmp eq i32 %conv6232, 92
  br i1 %cmp6233, label %land.lhs.true.6235, label %if.end.6320

land.lhs.true.6235:                               ; preds = %land.lhs.true.6230
  %3071 = load i8*, i8** %p, align 8
  %arrayidx6236 = getelementptr inbounds i8, i8* %3071, i64 1
  %3072 = load i8, i8* %arrayidx6236, align 1
  %conv6237 = zext i8 %3072 to i32
  %cmp6238 = icmp eq i32 %conv6237, 123
  br i1 %cmp6238, label %if.then.6240, label %if.end.6320

if.then.6240:                                     ; preds = %land.lhs.true.6235, %land.lhs.true.6222, %lor.lhs.false.6209, %land.lhs.true.6205, %lor.lhs.false.6197, %land.lhs.true.6192, %lor.lhs.false.6177, %land.lhs.true.6173, %lor.lhs.false.6166, %lor.lhs.false.6159, %normal_char
  %3073 = load i8*, i8** %b, align 8
  store i8* %3073, i8** %laststart, align 8
  br label %do.body.6241

do.body.6241:                                     ; preds = %if.then.6240
  br label %while.cond.6242

while.cond.6242:                                  ; preds = %do.end.6314, %do.body.6241
  %3074 = load i8*, i8** %b, align 8
  %3075 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6243 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3075, i32 0, i32 0
  %3076 = load i8*, i8** %buffer6243, align 8
  %sub.ptr.lhs.cast6244 = ptrtoint i8* %3074 to i64
  %sub.ptr.rhs.cast6245 = ptrtoint i8* %3076 to i64
  %sub.ptr.sub6246 = sub i64 %sub.ptr.lhs.cast6244, %sub.ptr.rhs.cast6245
  %add6247 = add nsw i64 %sub.ptr.sub6246, 2
  %3077 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6248 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3077, i32 0, i32 1
  %3078 = load i64, i64* %allocated6248, align 8
  %cmp6249 = icmp ugt i64 %add6247, %3078
  br i1 %cmp6249, label %while.body.6251, label %while.end.6315

while.body.6251:                                  ; preds = %while.cond.6242
  br label %do.body.6252

do.body.6252:                                     ; preds = %while.body.6251
  %3079 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6254 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3079, i32 0, i32 0
  %3080 = load i8*, i8** %buffer6254, align 8
  store i8* %3080, i8** %old_buffer6253, align 8
  %3081 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6255 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3081, i32 0, i32 1
  %3082 = load i64, i64* %allocated6255, align 8
  %cmp6256 = icmp eq i64 %3082, 32768
  br i1 %cmp6256, label %if.then.6258, label %if.end.6259

if.then.6258:                                     ; preds = %do.body.6252
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.6259:                                      ; preds = %do.body.6252
  %3083 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6260 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3083, i32 0, i32 1
  %3084 = load i64, i64* %allocated6260, align 8
  %shl6261 = shl i64 %3084, 1
  store i64 %shl6261, i64* %allocated6260, align 8
  %3085 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6262 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3085, i32 0, i32 1
  %3086 = load i64, i64* %allocated6262, align 8
  %cmp6263 = icmp ugt i64 %3086, 32768
  br i1 %cmp6263, label %if.then.6265, label %if.end.6267

if.then.6265:                                     ; preds = %if.end.6259
  %3087 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6266 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3087, i32 0, i32 1
  store i64 32768, i64* %allocated6266, align 8
  br label %if.end.6267

if.end.6267:                                      ; preds = %if.then.6265, %if.end.6259
  %3088 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6268 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3088, i32 0, i32 0
  %3089 = load i8*, i8** %buffer6268, align 8
  %3090 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6269 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3090, i32 0, i32 1
  %3091 = load i64, i64* %allocated6269, align 8
  %mul6270 = mul i64 %3091, 1
  %call6271 = call i8* @xrealloc(i8* %3089, i64 %mul6270)
  %3092 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6272 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3092, i32 0, i32 0
  store i8* %call6271, i8** %buffer6272, align 8
  %3093 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6273 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3093, i32 0, i32 0
  %3094 = load i8*, i8** %buffer6273, align 8
  %cmp6274 = icmp eq i8* %3094, null
  br i1 %cmp6274, label %if.then.6276, label %if.end.6277

if.then.6276:                                     ; preds = %if.end.6267
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.6277:                                      ; preds = %if.end.6267
  %3095 = load i8*, i8** %old_buffer6253, align 8
  %3096 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6278 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3096, i32 0, i32 0
  %3097 = load i8*, i8** %buffer6278, align 8
  %cmp6279 = icmp ne i8* %3095, %3097
  br i1 %cmp6279, label %if.then.6281, label %if.end.6313

if.then.6281:                                     ; preds = %if.end.6277
  %3098 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6283 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3098, i32 0, i32 0
  %3099 = load i8*, i8** %buffer6283, align 8
  store i8* %3099, i8** %new_buffer6282, align 8
  %3100 = load i8*, i8** %new_buffer6282, align 8
  %3101 = load i8*, i8** %b, align 8
  %3102 = load i8*, i8** %old_buffer6253, align 8
  %sub.ptr.lhs.cast6284 = ptrtoint i8* %3101 to i64
  %sub.ptr.rhs.cast6285 = ptrtoint i8* %3102 to i64
  %sub.ptr.sub6286 = sub i64 %sub.ptr.lhs.cast6284, %sub.ptr.rhs.cast6285
  %add.ptr6287 = getelementptr inbounds i8, i8* %3100, i64 %sub.ptr.sub6286
  store i8* %add.ptr6287, i8** %b, align 8
  %3103 = load i8*, i8** %new_buffer6282, align 8
  %3104 = load i8*, i8** %begalt, align 8
  %3105 = load i8*, i8** %old_buffer6253, align 8
  %sub.ptr.lhs.cast6288 = ptrtoint i8* %3104 to i64
  %sub.ptr.rhs.cast6289 = ptrtoint i8* %3105 to i64
  %sub.ptr.sub6290 = sub i64 %sub.ptr.lhs.cast6288, %sub.ptr.rhs.cast6289
  %add.ptr6291 = getelementptr inbounds i8, i8* %3103, i64 %sub.ptr.sub6290
  store i8* %add.ptr6291, i8** %begalt, align 8
  %3106 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6292 = icmp ne i8* %3106, null
  br i1 %tobool6292, label %if.then.6293, label %if.end.6298

if.then.6293:                                     ; preds = %if.then.6281
  %3107 = load i8*, i8** %new_buffer6282, align 8
  %3108 = load i8*, i8** %fixup_alt_jump, align 8
  %3109 = load i8*, i8** %old_buffer6253, align 8
  %sub.ptr.lhs.cast6294 = ptrtoint i8* %3108 to i64
  %sub.ptr.rhs.cast6295 = ptrtoint i8* %3109 to i64
  %sub.ptr.sub6296 = sub i64 %sub.ptr.lhs.cast6294, %sub.ptr.rhs.cast6295
  %add.ptr6297 = getelementptr inbounds i8, i8* %3107, i64 %sub.ptr.sub6296
  store i8* %add.ptr6297, i8** %fixup_alt_jump, align 8
  br label %if.end.6298

if.end.6298:                                      ; preds = %if.then.6293, %if.then.6281
  %3110 = load i8*, i8** %laststart, align 8
  %tobool6299 = icmp ne i8* %3110, null
  br i1 %tobool6299, label %if.then.6300, label %if.end.6305

if.then.6300:                                     ; preds = %if.end.6298
  %3111 = load i8*, i8** %new_buffer6282, align 8
  %3112 = load i8*, i8** %laststart, align 8
  %3113 = load i8*, i8** %old_buffer6253, align 8
  %sub.ptr.lhs.cast6301 = ptrtoint i8* %3112 to i64
  %sub.ptr.rhs.cast6302 = ptrtoint i8* %3113 to i64
  %sub.ptr.sub6303 = sub i64 %sub.ptr.lhs.cast6301, %sub.ptr.rhs.cast6302
  %add.ptr6304 = getelementptr inbounds i8, i8* %3111, i64 %sub.ptr.sub6303
  store i8* %add.ptr6304, i8** %laststart, align 8
  br label %if.end.6305

if.end.6305:                                      ; preds = %if.then.6300, %if.end.6298
  %3114 = load i8*, i8** %pending_exact, align 8
  %tobool6306 = icmp ne i8* %3114, null
  br i1 %tobool6306, label %if.then.6307, label %if.end.6312

if.then.6307:                                     ; preds = %if.end.6305
  %3115 = load i8*, i8** %new_buffer6282, align 8
  %3116 = load i8*, i8** %pending_exact, align 8
  %3117 = load i8*, i8** %old_buffer6253, align 8
  %sub.ptr.lhs.cast6308 = ptrtoint i8* %3116 to i64
  %sub.ptr.rhs.cast6309 = ptrtoint i8* %3117 to i64
  %sub.ptr.sub6310 = sub i64 %sub.ptr.lhs.cast6308, %sub.ptr.rhs.cast6309
  %add.ptr6311 = getelementptr inbounds i8, i8* %3115, i64 %sub.ptr.sub6310
  store i8* %add.ptr6311, i8** %pending_exact, align 8
  br label %if.end.6312

if.end.6312:                                      ; preds = %if.then.6307, %if.end.6305
  br label %if.end.6313

if.end.6313:                                      ; preds = %if.end.6312, %if.end.6277
  br label %do.end.6314

do.end.6314:                                      ; preds = %if.end.6313
  br label %while.cond.6242

while.end.6315:                                   ; preds = %while.cond.6242
  %3118 = load i8*, i8** %b, align 8
  %incdec.ptr6316 = getelementptr inbounds i8, i8* %3118, i32 1
  store i8* %incdec.ptr6316, i8** %b, align 8
  store i8 2, i8* %3118, align 1
  %3119 = load i8*, i8** %b, align 8
  %incdec.ptr6317 = getelementptr inbounds i8, i8* %3119, i32 1
  store i8* %incdec.ptr6317, i8** %b, align 8
  store i8 0, i8* %3119, align 1
  br label %do.end.6318

do.end.6318:                                      ; preds = %while.end.6315
  %3120 = load i8*, i8** %b, align 8
  %add.ptr6319 = getelementptr inbounds i8, i8* %3120, i64 -1
  store i8* %add.ptr6319, i8** %pending_exact, align 8
  br label %if.end.6320

if.end.6320:                                      ; preds = %do.end.6318, %land.lhs.true.6235, %land.lhs.true.6230, %cond.false.6226, %land.lhs.true.6222, %cond.true.6219, %lor.lhs.false.6213
  br label %while.cond.6321

while.cond.6321:                                  ; preds = %do.end.6393, %if.end.6320
  %3121 = load i8*, i8** %b, align 8
  %3122 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6322 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3122, i32 0, i32 0
  %3123 = load i8*, i8** %buffer6322, align 8
  %sub.ptr.lhs.cast6323 = ptrtoint i8* %3121 to i64
  %sub.ptr.rhs.cast6324 = ptrtoint i8* %3123 to i64
  %sub.ptr.sub6325 = sub i64 %sub.ptr.lhs.cast6323, %sub.ptr.rhs.cast6324
  %add6326 = add nsw i64 %sub.ptr.sub6325, 5
  %3124 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6327 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3124, i32 0, i32 1
  %3125 = load i64, i64* %allocated6327, align 8
  %cmp6328 = icmp ugt i64 %add6326, %3125
  br i1 %cmp6328, label %while.body.6330, label %while.end.6394

while.body.6330:                                  ; preds = %while.cond.6321
  br label %do.body.6331

do.body.6331:                                     ; preds = %while.body.6330
  %3126 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6333 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3126, i32 0, i32 0
  %3127 = load i8*, i8** %buffer6333, align 8
  store i8* %3127, i8** %old_buffer6332, align 8
  %3128 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6334 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3128, i32 0, i32 1
  %3129 = load i64, i64* %allocated6334, align 8
  %cmp6335 = icmp eq i64 %3129, 32768
  br i1 %cmp6335, label %if.then.6337, label %if.end.6338

if.then.6337:                                     ; preds = %do.body.6331
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.6338:                                      ; preds = %do.body.6331
  %3130 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6339 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3130, i32 0, i32 1
  %3131 = load i64, i64* %allocated6339, align 8
  %shl6340 = shl i64 %3131, 1
  store i64 %shl6340, i64* %allocated6339, align 8
  %3132 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6341 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3132, i32 0, i32 1
  %3133 = load i64, i64* %allocated6341, align 8
  %cmp6342 = icmp ugt i64 %3133, 32768
  br i1 %cmp6342, label %if.then.6344, label %if.end.6346

if.then.6344:                                     ; preds = %if.end.6338
  %3134 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6345 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3134, i32 0, i32 1
  store i64 32768, i64* %allocated6345, align 8
  br label %if.end.6346

if.end.6346:                                      ; preds = %if.then.6344, %if.end.6338
  %3135 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6347 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3135, i32 0, i32 0
  %3136 = load i8*, i8** %buffer6347, align 8
  %3137 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6348 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3137, i32 0, i32 1
  %3138 = load i64, i64* %allocated6348, align 8
  %mul6349 = mul i64 %3138, 1
  %call6350 = call i8* @xrealloc(i8* %3136, i64 %mul6349)
  %3139 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6351 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3139, i32 0, i32 0
  store i8* %call6350, i8** %buffer6351, align 8
  %3140 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6352 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3140, i32 0, i32 0
  %3141 = load i8*, i8** %buffer6352, align 8
  %cmp6353 = icmp eq i8* %3141, null
  br i1 %cmp6353, label %if.then.6355, label %if.end.6356

if.then.6355:                                     ; preds = %if.end.6346
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.6356:                                      ; preds = %if.end.6346
  %3142 = load i8*, i8** %old_buffer6332, align 8
  %3143 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6357 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3143, i32 0, i32 0
  %3144 = load i8*, i8** %buffer6357, align 8
  %cmp6358 = icmp ne i8* %3142, %3144
  br i1 %cmp6358, label %if.then.6360, label %if.end.6392

if.then.6360:                                     ; preds = %if.end.6356
  %3145 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6362 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3145, i32 0, i32 0
  %3146 = load i8*, i8** %buffer6362, align 8
  store i8* %3146, i8** %new_buffer6361, align 8
  %3147 = load i8*, i8** %new_buffer6361, align 8
  %3148 = load i8*, i8** %b, align 8
  %3149 = load i8*, i8** %old_buffer6332, align 8
  %sub.ptr.lhs.cast6363 = ptrtoint i8* %3148 to i64
  %sub.ptr.rhs.cast6364 = ptrtoint i8* %3149 to i64
  %sub.ptr.sub6365 = sub i64 %sub.ptr.lhs.cast6363, %sub.ptr.rhs.cast6364
  %add.ptr6366 = getelementptr inbounds i8, i8* %3147, i64 %sub.ptr.sub6365
  store i8* %add.ptr6366, i8** %b, align 8
  %3150 = load i8*, i8** %new_buffer6361, align 8
  %3151 = load i8*, i8** %begalt, align 8
  %3152 = load i8*, i8** %old_buffer6332, align 8
  %sub.ptr.lhs.cast6367 = ptrtoint i8* %3151 to i64
  %sub.ptr.rhs.cast6368 = ptrtoint i8* %3152 to i64
  %sub.ptr.sub6369 = sub i64 %sub.ptr.lhs.cast6367, %sub.ptr.rhs.cast6368
  %add.ptr6370 = getelementptr inbounds i8, i8* %3150, i64 %sub.ptr.sub6369
  store i8* %add.ptr6370, i8** %begalt, align 8
  %3153 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6371 = icmp ne i8* %3153, null
  br i1 %tobool6371, label %if.then.6372, label %if.end.6377

if.then.6372:                                     ; preds = %if.then.6360
  %3154 = load i8*, i8** %new_buffer6361, align 8
  %3155 = load i8*, i8** %fixup_alt_jump, align 8
  %3156 = load i8*, i8** %old_buffer6332, align 8
  %sub.ptr.lhs.cast6373 = ptrtoint i8* %3155 to i64
  %sub.ptr.rhs.cast6374 = ptrtoint i8* %3156 to i64
  %sub.ptr.sub6375 = sub i64 %sub.ptr.lhs.cast6373, %sub.ptr.rhs.cast6374
  %add.ptr6376 = getelementptr inbounds i8, i8* %3154, i64 %sub.ptr.sub6375
  store i8* %add.ptr6376, i8** %fixup_alt_jump, align 8
  br label %if.end.6377

if.end.6377:                                      ; preds = %if.then.6372, %if.then.6360
  %3157 = load i8*, i8** %laststart, align 8
  %tobool6378 = icmp ne i8* %3157, null
  br i1 %tobool6378, label %if.then.6379, label %if.end.6384

if.then.6379:                                     ; preds = %if.end.6377
  %3158 = load i8*, i8** %new_buffer6361, align 8
  %3159 = load i8*, i8** %laststart, align 8
  %3160 = load i8*, i8** %old_buffer6332, align 8
  %sub.ptr.lhs.cast6380 = ptrtoint i8* %3159 to i64
  %sub.ptr.rhs.cast6381 = ptrtoint i8* %3160 to i64
  %sub.ptr.sub6382 = sub i64 %sub.ptr.lhs.cast6380, %sub.ptr.rhs.cast6381
  %add.ptr6383 = getelementptr inbounds i8, i8* %3158, i64 %sub.ptr.sub6382
  store i8* %add.ptr6383, i8** %laststart, align 8
  br label %if.end.6384

if.end.6384:                                      ; preds = %if.then.6379, %if.end.6377
  %3161 = load i8*, i8** %pending_exact, align 8
  %tobool6385 = icmp ne i8* %3161, null
  br i1 %tobool6385, label %if.then.6386, label %if.end.6391

if.then.6386:                                     ; preds = %if.end.6384
  %3162 = load i8*, i8** %new_buffer6361, align 8
  %3163 = load i8*, i8** %pending_exact, align 8
  %3164 = load i8*, i8** %old_buffer6332, align 8
  %sub.ptr.lhs.cast6387 = ptrtoint i8* %3163 to i64
  %sub.ptr.rhs.cast6388 = ptrtoint i8* %3164 to i64
  %sub.ptr.sub6389 = sub i64 %sub.ptr.lhs.cast6387, %sub.ptr.rhs.cast6388
  %add.ptr6390 = getelementptr inbounds i8, i8* %3162, i64 %sub.ptr.sub6389
  store i8* %add.ptr6390, i8** %pending_exact, align 8
  br label %if.end.6391

if.end.6391:                                      ; preds = %if.then.6386, %if.end.6384
  br label %if.end.6392

if.end.6392:                                      ; preds = %if.end.6391, %if.end.6356
  br label %do.end.6393

do.end.6393:                                      ; preds = %if.end.6392
  br label %while.cond.6321

while.end.6394:                                   ; preds = %while.cond.6321
  %3165 = load i8, i8* %multibyte, align 1
  %tobool6396 = icmp ne i8 %3165, 0
  br i1 %tobool6396, label %if.then.6397, label %if.else.6470

if.then.6397:                                     ; preds = %while.end.6394
  %3166 = load i64, i64* %translate, align 8
  %cmp6398 = icmp eq i64 %3166, 2
  br i1 %cmp6398, label %cond.false.6402, label %cond.true.6400

cond.true.6400:                                   ; preds = %if.then.6397
  %3167 = load i64, i64* %translate, align 8
  %3168 = load i32, i32* %c, align 4
  %call6401 = call i32 @char_table_translate(i64 %3167, i32 %3168)
  br label %cond.end.6403

cond.false.6402:                                  ; preds = %if.then.6397
  %3169 = load i32, i32* %c, align 4
  br label %cond.end.6403

cond.end.6403:                                    ; preds = %cond.false.6402, %cond.true.6400
  %cond6404 = phi i32 [ %call6401, %cond.true.6400 ], [ %3169, %cond.false.6402 ]
  store i32 %cond6404, i32* %c, align 4
  br i1 true, label %cond.true.6405, label %cond.false.6409

cond.true.6405:                                   ; preds = %cond.end.6403
  %3170 = load i32, i32* %c, align 4
  %add6406 = add i32 %3170, 0
  %cmp6407 = icmp ule i32 %add6406, 127
  br i1 %cmp6407, label %cond.true.6414, label %cond.false.6417

cond.false.6409:                                  ; preds = %cond.end.6403
  %3171 = load i32, i32* %c, align 4
  %conv6410 = sext i32 %3171 to i64
  %add6411 = add i64 %conv6410, 0
  %cmp6412 = icmp ule i64 %add6411, 127
  br i1 %cmp6412, label %cond.true.6414, label %cond.false.6417

cond.true.6414:                                   ; preds = %cond.false.6409, %cond.true.6405
  %3172 = load i32, i32* %c, align 4
  %conv6415 = trunc i32 %3172 to i8
  %3173 = load i8*, i8** %b, align 8
  %arrayidx6416 = getelementptr inbounds i8, i8* %3173, i64 0
  store i8 %conv6415, i8* %arrayidx6416, align 1
  br label %cond.end.6466

cond.false.6417:                                  ; preds = %cond.false.6409, %cond.true.6405
  br i1 true, label %cond.true.6418, label %cond.false.6422

cond.true.6418:                                   ; preds = %cond.false.6417
  %3174 = load i32, i32* %c, align 4
  %add6419 = add i32 %3174, 0
  %cmp6420 = icmp ule i32 %add6419, 2047
  br i1 %cmp6420, label %cond.true.6427, label %cond.false.6436

cond.false.6422:                                  ; preds = %cond.false.6417
  %3175 = load i32, i32* %c, align 4
  %conv6423 = sext i32 %3175 to i64
  %add6424 = add i64 %conv6423, 0
  %cmp6425 = icmp ule i64 %add6424, 2047
  br i1 %cmp6425, label %cond.true.6427, label %cond.false.6436

cond.true.6427:                                   ; preds = %cond.false.6422, %cond.true.6418
  %3176 = load i32, i32* %c, align 4
  %shr6428 = ashr i32 %3176, 6
  %or6429 = or i32 192, %shr6428
  %conv6430 = trunc i32 %or6429 to i8
  %3177 = load i8*, i8** %b, align 8
  %arrayidx6431 = getelementptr inbounds i8, i8* %3177, i64 0
  store i8 %conv6430, i8* %arrayidx6431, align 1
  %3178 = load i32, i32* %c, align 4
  %and6432 = and i32 %3178, 63
  %or6433 = or i32 128, %and6432
  %conv6434 = trunc i32 %or6433 to i8
  %3179 = load i8*, i8** %b, align 8
  %arrayidx6435 = getelementptr inbounds i8, i8* %3179, i64 1
  store i8 %conv6434, i8* %arrayidx6435, align 1
  br label %cond.end.6464

cond.false.6436:                                  ; preds = %cond.false.6422, %cond.true.6418
  br i1 true, label %cond.true.6437, label %cond.false.6441

cond.true.6437:                                   ; preds = %cond.false.6436
  %3180 = load i32, i32* %c, align 4
  %add6438 = add i32 %3180, 0
  %cmp6439 = icmp ule i32 %add6438, 65535
  br i1 %cmp6439, label %cond.true.6446, label %cond.false.6460

cond.false.6441:                                  ; preds = %cond.false.6436
  %3181 = load i32, i32* %c, align 4
  %conv6442 = sext i32 %3181 to i64
  %add6443 = add i64 %conv6442, 0
  %cmp6444 = icmp ule i64 %add6443, 65535
  br i1 %cmp6444, label %cond.true.6446, label %cond.false.6460

cond.true.6446:                                   ; preds = %cond.false.6441, %cond.true.6437
  %3182 = load i32, i32* %c, align 4
  %shr6447 = ashr i32 %3182, 12
  %or6448 = or i32 224, %shr6447
  %conv6449 = trunc i32 %or6448 to i8
  %3183 = load i8*, i8** %b, align 8
  %arrayidx6450 = getelementptr inbounds i8, i8* %3183, i64 0
  store i8 %conv6449, i8* %arrayidx6450, align 1
  %3184 = load i32, i32* %c, align 4
  %shr6451 = ashr i32 %3184, 6
  %and6452 = and i32 %shr6451, 63
  %or6453 = or i32 128, %and6452
  %conv6454 = trunc i32 %or6453 to i8
  %3185 = load i8*, i8** %b, align 8
  %arrayidx6455 = getelementptr inbounds i8, i8* %3185, i64 1
  store i8 %conv6454, i8* %arrayidx6455, align 1
  %3186 = load i32, i32* %c, align 4
  %and6456 = and i32 %3186, 63
  %or6457 = or i32 128, %and6456
  %conv6458 = trunc i32 %or6457 to i8
  %3187 = load i8*, i8** %b, align 8
  %arrayidx6459 = getelementptr inbounds i8, i8* %3187, i64 2
  store i8 %conv6458, i8* %arrayidx6459, align 1
  br label %cond.end.6462

cond.false.6460:                                  ; preds = %cond.false.6441, %cond.true.6437
  %3188 = load i32, i32* %c, align 4
  %3189 = load i8*, i8** %b, align 8
  %call6461 = call i32 @char_string(i32 %3188, i8* %3189)
  br label %cond.end.6462

cond.end.6462:                                    ; preds = %cond.false.6460, %cond.true.6446
  %cond6463 = phi i32 [ 3, %cond.true.6446 ], [ %call6461, %cond.false.6460 ]
  br label %cond.end.6464

cond.end.6464:                                    ; preds = %cond.end.6462, %cond.true.6427
  %cond6465 = phi i32 [ 2, %cond.true.6427 ], [ %cond6463, %cond.end.6462 ]
  br label %cond.end.6466

cond.end.6466:                                    ; preds = %cond.end.6464, %cond.true.6414
  %cond6467 = phi i32 [ 1, %cond.true.6414 ], [ %cond6465, %cond.end.6464 ]
  store i32 %cond6467, i32* %len6395, align 4
  %3190 = load i32, i32* %len6395, align 4
  %3191 = load i8*, i8** %b, align 8
  %idx.ext6468 = sext i32 %3190 to i64
  %add.ptr6469 = getelementptr inbounds i8, i8* %3191, i64 %idx.ext6468
  store i8* %add.ptr6469, i8** %b, align 8
  br label %if.end.6525

if.else.6470:                                     ; preds = %while.end.6394
  br i1 true, label %cond.true.6471, label %cond.false.6475

cond.true.6471:                                   ; preds = %if.else.6470
  %3192 = load i32, i32* %c, align 4
  %add6472 = add i32 %3192, 0
  %cmp6473 = icmp ult i32 %add6472, 128
  br i1 %cmp6473, label %cond.true.6480, label %cond.false.6481

cond.false.6475:                                  ; preds = %if.else.6470
  %3193 = load i32, i32* %c, align 4
  %conv6476 = sext i32 %3193 to i64
  %add6477 = add i64 %conv6476, 0
  %cmp6478 = icmp ult i64 %add6477, 128
  br i1 %cmp6478, label %cond.true.6480, label %cond.false.6481

cond.true.6480:                                   ; preds = %cond.false.6475, %cond.true.6471
  %3194 = load i32, i32* %c, align 4
  br label %cond.end.6483

cond.false.6481:                                  ; preds = %cond.false.6475, %cond.true.6471
  %3195 = load i32, i32* %c, align 4
  %add6482 = add nsw i32 %3195, 4194048
  br label %cond.end.6483

cond.end.6483:                                    ; preds = %cond.false.6481, %cond.true.6480
  %cond6484 = phi i32 [ %3194, %cond.true.6480 ], [ %add6482, %cond.false.6481 ]
  store i32 %cond6484, i32* %c1, align 4
  %3196 = load i32, i32* %c1, align 4
  %cmp6485 = icmp sgt i32 %3196, 4194175
  br i1 %cmp6485, label %if.end.6522, label %if.then.6487

if.then.6487:                                     ; preds = %cond.end.6483
  %3197 = load i64, i64* %translate, align 8
  %cmp6488 = icmp eq i64 %3197, 2
  br i1 %cmp6488, label %cond.false.6492, label %cond.true.6490

cond.true.6490:                                   ; preds = %if.then.6487
  %3198 = load i64, i64* %translate, align 8
  %3199 = load i32, i32* %c1, align 4
  %call6491 = call i32 @char_table_translate(i64 %3198, i32 %3199)
  br label %cond.end.6493

cond.false.6492:                                  ; preds = %if.then.6487
  %3200 = load i32, i32* %c1, align 4
  br label %cond.end.6493

cond.end.6493:                                    ; preds = %cond.false.6492, %cond.true.6490
  %cond6494 = phi i32 [ %call6491, %cond.true.6490 ], [ %3200, %cond.false.6492 ]
  store i32 %cond6494, i32* %c2, align 4
  %3201 = load i32, i32* %c1, align 4
  %3202 = load i32, i32* %c2, align 4
  %cmp6495 = icmp ne i32 %3201, %3202
  br i1 %cmp6495, label %land.lhs.true.6497, label %if.end.6521

land.lhs.true.6497:                               ; preds = %cond.end.6493
  br i1 true, label %cond.true.6498, label %cond.false.6502

cond.true.6498:                                   ; preds = %land.lhs.true.6497
  %3203 = load i32, i32* %c2, align 4
  %add6499 = add i32 %3203, 0
  %cmp6500 = icmp ult i32 %add6499, 128
  br i1 %cmp6500, label %cond.true.6507, label %cond.false.6508

cond.false.6502:                                  ; preds = %land.lhs.true.6497
  %3204 = load i32, i32* %c2, align 4
  %conv6503 = sext i32 %3204 to i64
  %add6504 = add i64 %conv6503, 0
  %cmp6505 = icmp ult i64 %add6504, 128
  br i1 %cmp6505, label %cond.true.6507, label %cond.false.6508

cond.true.6507:                                   ; preds = %cond.false.6502, %cond.true.6498
  %3205 = load i32, i32* %c2, align 4
  br label %cond.end.6516

cond.false.6508:                                  ; preds = %cond.false.6502, %cond.true.6498
  %3206 = load i32, i32* %c2, align 4
  %cmp6509 = icmp sgt i32 %3206, 4194175
  br i1 %cmp6509, label %cond.true.6511, label %cond.false.6513

cond.true.6511:                                   ; preds = %cond.false.6508
  %3207 = load i32, i32* %c2, align 4
  %sub6512 = sub nsw i32 %3207, 4194048
  br label %cond.end.6514

cond.false.6513:                                  ; preds = %cond.false.6508
  br label %cond.end.6514

cond.end.6514:                                    ; preds = %cond.false.6513, %cond.true.6511
  %cond6515 = phi i32 [ %sub6512, %cond.true.6511 ], [ -1, %cond.false.6513 ]
  br label %cond.end.6516

cond.end.6516:                                    ; preds = %cond.end.6514, %cond.true.6507
  %cond6517 = phi i32 [ %3205, %cond.true.6507 ], [ %cond6515, %cond.end.6514 ]
  store i32 %cond6517, i32* %c1, align 4
  %cmp6518 = icmp sge i32 %cond6517, 0
  br i1 %cmp6518, label %if.then.6520, label %if.end.6521

if.then.6520:                                     ; preds = %cond.end.6516
  %3208 = load i32, i32* %c1, align 4
  store i32 %3208, i32* %c, align 4
  br label %if.end.6521

if.end.6521:                                      ; preds = %if.then.6520, %cond.end.6516, %cond.end.6493
  br label %if.end.6522

if.end.6522:                                      ; preds = %if.end.6521, %cond.end.6483
  %3209 = load i32, i32* %c, align 4
  %conv6523 = trunc i32 %3209 to i8
  %3210 = load i8*, i8** %b, align 8
  %incdec.ptr6524 = getelementptr inbounds i8, i8* %3210, i32 1
  store i8* %incdec.ptr6524, i8** %b, align 8
  store i8 %conv6523, i8* %3210, align 1
  store i32 1, i32* %len6395, align 4
  br label %if.end.6525

if.end.6525:                                      ; preds = %if.end.6522, %cond.end.6466
  %3211 = load i32, i32* %len6395, align 4
  %3212 = load i8*, i8** %pending_exact, align 8
  %3213 = load i8, i8* %3212, align 1
  %conv6526 = zext i8 %3213 to i32
  %add6527 = add nsw i32 %conv6526, %3211
  %conv6528 = trunc i32 %add6527 to i8
  store i8 %conv6528, i8* %3212, align 1
  br label %sw.epilog.6529

sw.epilog.6529:                                   ; preds = %if.end.6525, %sw.epilog.6156, %if.end.2872, %do.end.1155, %if.end.1077, %if.then.590, %if.end.332, %if.end.238, %if.end.147
  br label %while.body

while.end.6530:                                   ; preds = %if.end.46
  br label %do.body.6531

do.body.6531:                                     ; preds = %while.end.6530
  %3214 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6532 = icmp ne i8* %3214, null
  br i1 %tobool6532, label %if.then.6533, label %if.end.6539

if.then.6533:                                     ; preds = %do.body.6531
  %3215 = load i8*, i8** %fixup_alt_jump, align 8
  %3216 = load i8*, i8** %b, align 8
  %3217 = load i8*, i8** %fixup_alt_jump, align 8
  %sub.ptr.lhs.cast6534 = ptrtoint i8* %3216 to i64
  %sub.ptr.rhs.cast6535 = ptrtoint i8* %3217 to i64
  %sub.ptr.sub6536 = sub i64 %sub.ptr.lhs.cast6534, %sub.ptr.rhs.cast6535
  %sub6537 = sub nsw i64 %sub.ptr.sub6536, 3
  %conv6538 = trunc i64 %sub6537 to i32
  call void @store_op1(i32 13, i8* %3215, i32 %conv6538)
  br label %if.end.6539

if.end.6539:                                      ; preds = %if.then.6533, %do.body.6531
  br label %do.end.6540

do.end.6540:                                      ; preds = %if.end.6539
  %avail6541 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %3218 = load i64, i64* %avail6541, align 8
  %cmp6542 = icmp eq i64 %3218, 0
  br i1 %cmp6542, label %if.end.6555, label %if.then.6544

if.then.6544:                                     ; preds = %do.end.6540
  br label %do.body.6545

do.body.6545:                                     ; preds = %if.then.6544
  br label %do.body.6546

do.body.6546:                                     ; preds = %do.body.6545
  %table6547 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %3219 = load i32*, i32** %table6547, align 8
  %tobool6548 = icmp ne i32* %3219, null
  br i1 %tobool6548, label %if.then.6549, label %if.end.6551

if.then.6549:                                     ; preds = %do.body.6546
  %table6550 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %3220 = load i32*, i32** %table6550, align 8
  %3221 = bitcast i32* %3220 to i8*
  call void @xfree(i8* %3221)
  br label %if.end.6551

if.end.6551:                                      ; preds = %if.then.6549, %do.body.6546
  br label %do.end.6552

do.end.6552:                                      ; preds = %if.end.6551
  %stack6553 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %3222 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack6553, align 8
  %3223 = bitcast %struct.compile_stack_elt_t* %3222 to i8*
  call void @xfree(i8* %3223)
  store i32 8, i32* %retval
  br label %do.end.6650

do.end.6554:                                      ; No predecessors!
  br label %if.end.6555

if.end.6555:                                      ; preds = %do.end.6554, %do.end.6540
  %3224 = load i64, i64* %syntax.addr, align 8
  %and6556 = and i64 %3224, 262144
  %tobool6557 = icmp ne i64 %and6556, 0
  br i1 %tobool6557, label %if.then.6558, label %if.end.6635

if.then.6558:                                     ; preds = %if.end.6555
  br label %do.body.6559

do.body.6559:                                     ; preds = %if.then.6558
  br label %while.cond

while.cond:                                       ; preds = %do.end.6631, %do.body.6559
  %3225 = load i8*, i8** %b, align 8
  %3226 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6560 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3226, i32 0, i32 0
  %3227 = load i8*, i8** %buffer6560, align 8
  %sub.ptr.lhs.cast6561 = ptrtoint i8* %3225 to i64
  %sub.ptr.rhs.cast6562 = ptrtoint i8* %3227 to i64
  %sub.ptr.sub6563 = sub i64 %sub.ptr.lhs.cast6561, %sub.ptr.rhs.cast6562
  %add6564 = add nsw i64 %sub.ptr.sub6563, 1
  %3228 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6565 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3228, i32 0, i32 1
  %3229 = load i64, i64* %allocated6565, align 8
  %cmp6566 = icmp ugt i64 %add6564, %3229
  br i1 %cmp6566, label %while.body.6568, label %while.end.6632

while.body.6568:                                  ; preds = %while.cond
  br label %do.body.6569

do.body.6569:                                     ; preds = %while.body.6568
  %3230 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6571 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3230, i32 0, i32 0
  %3231 = load i8*, i8** %buffer6571, align 8
  store i8* %3231, i8** %old_buffer6570, align 8
  %3232 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6572 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3232, i32 0, i32 1
  %3233 = load i64, i64* %allocated6572, align 8
  %cmp6573 = icmp eq i64 %3233, 32768
  br i1 %cmp6573, label %if.then.6575, label %if.end.6576

if.then.6575:                                     ; preds = %do.body.6569
  store i32 15, i32* %retval
  br label %do.end.6650

if.end.6576:                                      ; preds = %do.body.6569
  %3234 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6577 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3234, i32 0, i32 1
  %3235 = load i64, i64* %allocated6577, align 8
  %shl6578 = shl i64 %3235, 1
  store i64 %shl6578, i64* %allocated6577, align 8
  %3236 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6579 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3236, i32 0, i32 1
  %3237 = load i64, i64* %allocated6579, align 8
  %cmp6580 = icmp ugt i64 %3237, 32768
  br i1 %cmp6580, label %if.then.6582, label %if.end.6584

if.then.6582:                                     ; preds = %if.end.6576
  %3238 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6583 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3238, i32 0, i32 1
  store i64 32768, i64* %allocated6583, align 8
  br label %if.end.6584

if.end.6584:                                      ; preds = %if.then.6582, %if.end.6576
  %3239 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6585 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3239, i32 0, i32 0
  %3240 = load i8*, i8** %buffer6585, align 8
  %3241 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %allocated6586 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3241, i32 0, i32 1
  %3242 = load i64, i64* %allocated6586, align 8
  %mul6587 = mul i64 %3242, 1
  %call6588 = call i8* @xrealloc(i8* %3240, i64 %mul6587)
  %3243 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6589 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3243, i32 0, i32 0
  store i8* %call6588, i8** %buffer6589, align 8
  %3244 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6590 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3244, i32 0, i32 0
  %3245 = load i8*, i8** %buffer6590, align 8
  %cmp6591 = icmp eq i8* %3245, null
  br i1 %cmp6591, label %if.then.6593, label %if.end.6594

if.then.6593:                                     ; preds = %if.end.6584
  store i32 12, i32* %retval
  br label %do.end.6650

if.end.6594:                                      ; preds = %if.end.6584
  %3246 = load i8*, i8** %old_buffer6570, align 8
  %3247 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6595 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3247, i32 0, i32 0
  %3248 = load i8*, i8** %buffer6595, align 8
  %cmp6596 = icmp ne i8* %3246, %3248
  br i1 %cmp6596, label %if.then.6598, label %if.end.6630

if.then.6598:                                     ; preds = %if.end.6594
  %3249 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6600 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3249, i32 0, i32 0
  %3250 = load i8*, i8** %buffer6600, align 8
  store i8* %3250, i8** %new_buffer6599, align 8
  %3251 = load i8*, i8** %new_buffer6599, align 8
  %3252 = load i8*, i8** %b, align 8
  %3253 = load i8*, i8** %old_buffer6570, align 8
  %sub.ptr.lhs.cast6601 = ptrtoint i8* %3252 to i64
  %sub.ptr.rhs.cast6602 = ptrtoint i8* %3253 to i64
  %sub.ptr.sub6603 = sub i64 %sub.ptr.lhs.cast6601, %sub.ptr.rhs.cast6602
  %add.ptr6604 = getelementptr inbounds i8, i8* %3251, i64 %sub.ptr.sub6603
  store i8* %add.ptr6604, i8** %b, align 8
  %3254 = load i8*, i8** %new_buffer6599, align 8
  %3255 = load i8*, i8** %begalt, align 8
  %3256 = load i8*, i8** %old_buffer6570, align 8
  %sub.ptr.lhs.cast6605 = ptrtoint i8* %3255 to i64
  %sub.ptr.rhs.cast6606 = ptrtoint i8* %3256 to i64
  %sub.ptr.sub6607 = sub i64 %sub.ptr.lhs.cast6605, %sub.ptr.rhs.cast6606
  %add.ptr6608 = getelementptr inbounds i8, i8* %3254, i64 %sub.ptr.sub6607
  store i8* %add.ptr6608, i8** %begalt, align 8
  %3257 = load i8*, i8** %fixup_alt_jump, align 8
  %tobool6609 = icmp ne i8* %3257, null
  br i1 %tobool6609, label %if.then.6610, label %if.end.6615

if.then.6610:                                     ; preds = %if.then.6598
  %3258 = load i8*, i8** %new_buffer6599, align 8
  %3259 = load i8*, i8** %fixup_alt_jump, align 8
  %3260 = load i8*, i8** %old_buffer6570, align 8
  %sub.ptr.lhs.cast6611 = ptrtoint i8* %3259 to i64
  %sub.ptr.rhs.cast6612 = ptrtoint i8* %3260 to i64
  %sub.ptr.sub6613 = sub i64 %sub.ptr.lhs.cast6611, %sub.ptr.rhs.cast6612
  %add.ptr6614 = getelementptr inbounds i8, i8* %3258, i64 %sub.ptr.sub6613
  store i8* %add.ptr6614, i8** %fixup_alt_jump, align 8
  br label %if.end.6615

if.end.6615:                                      ; preds = %if.then.6610, %if.then.6598
  %3261 = load i8*, i8** %laststart, align 8
  %tobool6616 = icmp ne i8* %3261, null
  br i1 %tobool6616, label %if.then.6617, label %if.end.6622

if.then.6617:                                     ; preds = %if.end.6615
  %3262 = load i8*, i8** %new_buffer6599, align 8
  %3263 = load i8*, i8** %laststart, align 8
  %3264 = load i8*, i8** %old_buffer6570, align 8
  %sub.ptr.lhs.cast6618 = ptrtoint i8* %3263 to i64
  %sub.ptr.rhs.cast6619 = ptrtoint i8* %3264 to i64
  %sub.ptr.sub6620 = sub i64 %sub.ptr.lhs.cast6618, %sub.ptr.rhs.cast6619
  %add.ptr6621 = getelementptr inbounds i8, i8* %3262, i64 %sub.ptr.sub6620
  store i8* %add.ptr6621, i8** %laststart, align 8
  br label %if.end.6622

if.end.6622:                                      ; preds = %if.then.6617, %if.end.6615
  %3265 = load i8*, i8** %pending_exact, align 8
  %tobool6623 = icmp ne i8* %3265, null
  br i1 %tobool6623, label %if.then.6624, label %if.end.6629

if.then.6624:                                     ; preds = %if.end.6622
  %3266 = load i8*, i8** %new_buffer6599, align 8
  %3267 = load i8*, i8** %pending_exact, align 8
  %3268 = load i8*, i8** %old_buffer6570, align 8
  %sub.ptr.lhs.cast6625 = ptrtoint i8* %3267 to i64
  %sub.ptr.rhs.cast6626 = ptrtoint i8* %3268 to i64
  %sub.ptr.sub6627 = sub i64 %sub.ptr.lhs.cast6625, %sub.ptr.rhs.cast6626
  %add.ptr6628 = getelementptr inbounds i8, i8* %3266, i64 %sub.ptr.sub6627
  store i8* %add.ptr6628, i8** %pending_exact, align 8
  br label %if.end.6629

if.end.6629:                                      ; preds = %if.then.6624, %if.end.6622
  br label %if.end.6630

if.end.6630:                                      ; preds = %if.end.6629, %if.end.6594
  br label %do.end.6631

do.end.6631:                                      ; preds = %if.end.6630
  br label %while.cond

while.end.6632:                                   ; preds = %while.cond
  %3269 = load i8*, i8** %b, align 8
  %incdec.ptr6633 = getelementptr inbounds i8, i8* %3269, i32 1
  store i8* %incdec.ptr6633, i8** %b, align 8
  store i8 1, i8* %3269, align 1
  br label %do.end.6634

do.end.6634:                                      ; preds = %while.end.6632
  br label %if.end.6635

if.end.6635:                                      ; preds = %do.end.6634, %if.end.6555
  %3270 = load i8*, i8** %b, align 8
  %3271 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer6636 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3271, i32 0, i32 0
  %3272 = load i8*, i8** %buffer6636, align 8
  %sub.ptr.lhs.cast6637 = ptrtoint i8* %3270 to i64
  %sub.ptr.rhs.cast6638 = ptrtoint i8* %3272 to i64
  %sub.ptr.sub6639 = sub i64 %sub.ptr.lhs.cast6637, %sub.ptr.rhs.cast6638
  %3273 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used6640 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3273, i32 0, i32 2
  store i64 %sub.ptr.sub6639, i64* %used6640, align 8
  br label %do.body.6641

do.body.6641:                                     ; preds = %if.end.6635
  br label %do.body.6642

do.body.6642:                                     ; preds = %do.body.6641
  %table6643 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %3274 = load i32*, i32** %table6643, align 8
  %tobool6644 = icmp ne i32* %3274, null
  br i1 %tobool6644, label %if.then.6645, label %if.end.6647

if.then.6645:                                     ; preds = %do.body.6642
  %table6646 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %range_table_work, i32 0, i32 0
  %3275 = load i32*, i32** %table6646, align 8
  %3276 = bitcast i32* %3275 to i8*
  call void @xfree(i8* %3276)
  br label %if.end.6647

if.end.6647:                                      ; preds = %if.then.6645, %do.body.6642
  br label %do.end.6648

do.end.6648:                                      ; preds = %if.end.6647
  %stack6649 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %3277 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack6649, align 8
  %3278 = bitcast %struct.compile_stack_elt_t* %3277 to i8*
  call void @xfree(i8* %3278)
  store i32 0, i32* %retval
  br label %do.end.6650

do.end.6650:                                      ; preds = %if.then, %do.end, %if.then.51, %if.then.175, %if.then.192, %if.then.267, %if.then.285, %do.end.354, %do.end.426, %if.then.444, %if.then.520, %if.then.630, %if.then.648, %if.then.712, %if.then.730, %if.then.818, %if.then.836, %if.then.901, %if.then.919, %if.then.982, %if.then.1000, %if.then.1096, %if.then.1114, %do.end.1169, %if.then.1189, %if.then.1207, %if.then.1264, %if.then.1282, %if.then.1352, %if.then.1370, %do.end.1437, %if.then.1445, %do.end.1527, %if.then.1535, %if.then.1626, %do.end.1702, %if.then.1711, %do.end.1817, %if.then.1825, %do.end.1901, %if.then.2036, %if.then.2106, %do.end.2205, %if.then.2255, %if.then.2371, %if.then.2523, %if.then.2687, %if.then.2761, %if.then.2779, %do.end.2912, %if.then.2920, %if.then.3006, %if.then.3080, %do.end.3158, %do.end.3173, %do.end.3211, %if.then.3236, %if.then.3296, %if.then.3314, %do.end.3381, %do.end.3411, %if.then.3474, %if.then.3492, %if.then.3565, %if.then.3583, %if.then.3656, %if.then.3674, %do.end.3734, %if.then.3742, %do.end.3834, %do.end.3851, %if.then.3859, %do.end.3942, %if.then.3950, %do.end.4042, %do.end.4059, %if.then.4067, %do.end.4154, %do.end.4171, %do.end.4185, %if.then.4193, %do.end.4270, %do.end.4286, %if.then.4334, %if.then.4352, %if.then.4473, %if.then.4491, %if.then.4538, %if.then.4621, %if.then.4639, %if.then.4689, %if.then.4772, %if.then.4790, %if.then.4840, %if.then.4923, %if.then.4941, %if.then.4990, %if.then.5073, %if.then.5091, %if.then.5157, %if.then.5175, %if.then.5240, %if.then.5258, %if.then.5323, %if.then.5341, %if.then.5405, %if.then.5423, %if.then.5474, %if.then.5560, %if.then.5578, %if.then.5641, %if.then.5659, %do.end.5709, %if.then.5736, %if.then.5754, %if.then.5818, %if.then.5836, %if.then.5900, %if.then.5918, %if.then.5982, %if.then.6000, %do.end.6067, %if.then.6088, %if.then.6106, %if.then.6258, %if.then.6276, %if.then.6337, %if.then.6355, %do.end.6552, %if.then.6575, %if.then.6593, %do.end.6648
  %3279 = load i32, i32* %retval
  ret i32 %3279
}

; Function Attrs: nounwind uwtable
define internal i32 @extract_number_and_incr(i8** %source) #0 {
entry:
  %source.addr = alloca i8**, align 8
  %num = alloca i32, align 4
  store i8** %source, i8*** %source.addr, align 8
  %0 = load i8**, i8*** %source.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %call = call i32 @extract_number(i8* %1)
  store i32 %call, i32* %num, align 4
  %2 = load i8**, i8*** %source.addr, align 8
  %3 = load i8*, i8** %2, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 2
  store i8* %add.ptr, i8** %2, align 8
  %4 = load i32, i32* %num, align 4
  ret i32 %4
}

declare zeroext i1 @CHAR_HAS_CATEGORY(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @extract_number(i8* %source) #0 {
entry:
  %source.addr = alloca i8*, align 8
  %leading_byte = alloca i32, align 4
  store i8* %source, i8** %source.addr, align 8
  %0 = load i8*, i8** %source.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 1
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  store i32 %conv, i32* %leading_byte, align 4
  %2 = load i32, i32* %leading_byte, align 4
  %shl = shl i32 %2, 8
  %3 = load i8*, i8** %source.addr, align 8
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = load i8, i8* %arrayidx1, align 1
  %conv2 = zext i8 %4 to i32
  %add = add i32 %shl, %conv2
  ret i32 %add
}

declare i64 @SPECPDL_INDEX() #2

declare i8* @record_xmalloc(i64) #2

declare i64 @unbind_to(i64, i64) #2

declare noalias i8* @xmalloc(i64) #2

declare i8* @xrealloc(i8*, i64) #2

declare i32 @upcase(i32) #2

declare i32 @downcase(i32) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @bcmp_translate(i8* %s1, i8* %s2, i64 %len, i64 %translate, i32 %target_multibyte) #0 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %translate.addr = alloca i64, align 8
  %target_multibyte.addr = alloca i32, align 4
  %p1 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %p1_end = alloca i8*, align 8
  %p2_end = alloca i8*, align 8
  %p1_charlen = alloca i32, align 4
  %p2_charlen = alloca i32, align 4
  %p1_ch = alloca i32, align 4
  %p2_ch = alloca i32, align 4
  store i8* %s1, i8** %s1.addr, align 8
  store i8* %s2, i8** %s2.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i64 %translate, i64* %translate.addr, align 8
  store i32 %target_multibyte, i32* %target_multibyte.addr, align 4
  %0 = load i8*, i8** %s1.addr, align 8
  store i8* %0, i8** %p1, align 8
  %1 = load i8*, i8** %s2.addr, align 8
  store i8* %1, i8** %p2, align 8
  %2 = load i8*, i8** %s1.addr, align 8
  %3 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %3
  store i8* %add.ptr, i8** %p1_end, align 8
  %4 = load i8*, i8** %s2.addr, align 8
  %5 = load i64, i64* %len.addr, align 8
  %add.ptr1 = getelementptr inbounds i8, i8* %4, i64 %5
  store i8* %add.ptr1, i8** %p2_end, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.141, %entry
  %6 = load i8*, i8** %p1, align 8
  %7 = load i8*, i8** %p1_end, align 8
  %cmp = icmp ult i8* %6, %7
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %p2, align 8
  %9 = load i8*, i8** %p2_end, align 8
  %cmp2 = icmp ult i8* %8, %9
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %do.body

do.body:                                          ; preds = %while.body
  %11 = load i32, i32* %target_multibyte.addr, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %12 = load i8*, i8** %p1, align 8
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0
  %13 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %13 to i32
  %and = and i32 %conv, 128
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then
  store i32 1, i32* %p1_charlen, align 4
  %14 = load i8*, i8** %p1, align 8
  %arrayidx4 = getelementptr inbounds i8, i8* %14, i64 0
  %15 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %15 to i32
  br label %cond.end.44

cond.false:                                       ; preds = %if.then
  %16 = load i8*, i8** %p1, align 8
  %arrayidx6 = getelementptr inbounds i8, i8* %16, i64 0
  %17 = load i8, i8* %arrayidx6, align 1
  %conv7 = zext i8 %17 to i32
  %and8 = and i32 %conv7, 32
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %cond.false.21, label %cond.true.10

cond.true.10:                                     ; preds = %cond.false
  store i32 2, i32* %p1_charlen, align 4
  %18 = load i8*, i8** %p1, align 8
  %arrayidx11 = getelementptr inbounds i8, i8* %18, i64 0
  %19 = load i8, i8* %arrayidx11, align 1
  %conv12 = zext i8 %19 to i32
  %and13 = and i32 %conv12, 31
  %shl = shl i32 %and13, 6
  %20 = load i8*, i8** %p1, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %arrayidx14, align 1
  %conv15 = zext i8 %21 to i32
  %and16 = and i32 %conv15, 63
  %or = or i32 %shl, %and16
  %22 = load i8*, i8** %p1, align 8
  %arrayidx17 = getelementptr inbounds i8, i8* %22, i64 0
  %23 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %23 to i32
  %cmp19 = icmp slt i32 %conv18, 194
  %cond = select i1 %cmp19, i32 4194176, i32 0
  %add = add nsw i32 %or, %cond
  br label %cond.end.42

cond.false.21:                                    ; preds = %cond.false
  %24 = load i8*, i8** %p1, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %24, i64 0
  %25 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %25 to i32
  %and24 = and i32 %conv23, 16
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %cond.false.40, label %cond.true.26

cond.true.26:                                     ; preds = %cond.false.21
  store i32 3, i32* %p1_charlen, align 4
  %26 = load i8*, i8** %p1, align 8
  %arrayidx27 = getelementptr inbounds i8, i8* %26, i64 0
  %27 = load i8, i8* %arrayidx27, align 1
  %conv28 = zext i8 %27 to i32
  %and29 = and i32 %conv28, 15
  %shl30 = shl i32 %and29, 12
  %28 = load i8*, i8** %p1, align 8
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 1
  %29 = load i8, i8* %arrayidx31, align 1
  %conv32 = zext i8 %29 to i32
  %and33 = and i32 %conv32, 63
  %shl34 = shl i32 %and33, 6
  %or35 = or i32 %shl30, %shl34
  %30 = load i8*, i8** %p1, align 8
  %arrayidx36 = getelementptr inbounds i8, i8* %30, i64 2
  %31 = load i8, i8* %arrayidx36, align 1
  %conv37 = zext i8 %31 to i32
  %and38 = and i32 %conv37, 63
  %or39 = or i32 %or35, %and38
  br label %cond.end

cond.false.40:                                    ; preds = %cond.false.21
  %32 = load i8*, i8** %p1, align 8
  %call = call i32 @string_char(i8* %32, i8** null, i32* %p1_charlen)
  br label %cond.end

cond.end:                                         ; preds = %cond.false.40, %cond.true.26
  %cond41 = phi i32 [ %or39, %cond.true.26 ], [ %call, %cond.false.40 ]
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.end, %cond.true.10
  %cond43 = phi i32 [ %add, %cond.true.10 ], [ %cond41, %cond.end ]
  br label %cond.end.44

cond.end.44:                                      ; preds = %cond.end.42, %cond.true
  %cond45 = phi i32 [ %conv5, %cond.true ], [ %cond43, %cond.end.42 ]
  store i32 %cond45, i32* %p1_ch, align 4
  br label %if.end

if.else:                                          ; preds = %do.body
  %33 = load i8*, i8** %p1, align 8
  %34 = load i8, i8* %33, align 1
  %conv46 = zext i8 %34 to i32
  store i32 %conv46, i32* %p1_ch, align 4
  store i32 1, i32* %p1_charlen, align 4
  br i1 true, label %cond.true.47, label %cond.false.51

cond.true.47:                                     ; preds = %if.else
  %35 = load i32, i32* %p1_ch, align 4
  %add48 = add i32 %35, 0
  %cmp49 = icmp ult i32 %add48, 128
  br i1 %cmp49, label %cond.true.56, label %cond.false.57

cond.false.51:                                    ; preds = %if.else
  %36 = load i32, i32* %p1_ch, align 4
  %conv52 = sext i32 %36 to i64
  %add53 = add i64 %conv52, 0
  %cmp54 = icmp ult i64 %add53, 128
  br i1 %cmp54, label %cond.true.56, label %cond.false.57

cond.true.56:                                     ; preds = %cond.false.51, %cond.true.47
  %37 = load i32, i32* %p1_ch, align 4
  br label %cond.end.59

cond.false.57:                                    ; preds = %cond.false.51, %cond.true.47
  %38 = load i32, i32* %p1_ch, align 4
  %add58 = add nsw i32 %38, 4194048
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.57, %cond.true.56
  %cond60 = phi i32 [ %37, %cond.true.56 ], [ %add58, %cond.false.57 ]
  store i32 %cond60, i32* %p1_ch, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.59, %cond.end.44
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body.61

do.body.61:                                       ; preds = %do.end
  %39 = load i32, i32* %target_multibyte.addr, align 4
  %tobool62 = icmp ne i32 %39, 0
  br i1 %tobool62, label %if.then.63, label %if.else.118

if.then.63:                                       ; preds = %do.body.61
  %40 = load i8*, i8** %p2, align 8
  %arrayidx64 = getelementptr inbounds i8, i8* %40, i64 0
  %41 = load i8, i8* %arrayidx64, align 1
  %conv65 = zext i8 %41 to i32
  %and66 = and i32 %conv65, 128
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %cond.false.71, label %cond.true.68

cond.true.68:                                     ; preds = %if.then.63
  store i32 1, i32* %p2_charlen, align 4
  %42 = load i8*, i8** %p2, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %42, i64 0
  %43 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %43 to i32
  br label %cond.end.116

cond.false.71:                                    ; preds = %if.then.63
  %44 = load i8*, i8** %p2, align 8
  %arrayidx72 = getelementptr inbounds i8, i8* %44, i64 0
  %45 = load i8, i8* %arrayidx72, align 1
  %conv73 = zext i8 %45 to i32
  %and74 = and i32 %conv73, 32
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %cond.false.91, label %cond.true.76

cond.true.76:                                     ; preds = %cond.false.71
  store i32 2, i32* %p2_charlen, align 4
  %46 = load i8*, i8** %p2, align 8
  %arrayidx77 = getelementptr inbounds i8, i8* %46, i64 0
  %47 = load i8, i8* %arrayidx77, align 1
  %conv78 = zext i8 %47 to i32
  %and79 = and i32 %conv78, 31
  %shl80 = shl i32 %and79, 6
  %48 = load i8*, i8** %p2, align 8
  %arrayidx81 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx81, align 1
  %conv82 = zext i8 %49 to i32
  %and83 = and i32 %conv82, 63
  %or84 = or i32 %shl80, %and83
  %50 = load i8*, i8** %p2, align 8
  %arrayidx85 = getelementptr inbounds i8, i8* %50, i64 0
  %51 = load i8, i8* %arrayidx85, align 1
  %conv86 = zext i8 %51 to i32
  %cmp87 = icmp slt i32 %conv86, 194
  %cond89 = select i1 %cmp87, i32 4194176, i32 0
  %add90 = add nsw i32 %or84, %cond89
  br label %cond.end.114

cond.false.91:                                    ; preds = %cond.false.71
  %52 = load i8*, i8** %p2, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %52, i64 0
  %53 = load i8, i8* %arrayidx92, align 1
  %conv93 = zext i8 %53 to i32
  %and94 = and i32 %conv93, 16
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %cond.false.110, label %cond.true.96

cond.true.96:                                     ; preds = %cond.false.91
  store i32 3, i32* %p2_charlen, align 4
  %54 = load i8*, i8** %p2, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %54, i64 0
  %55 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %55 to i32
  %and99 = and i32 %conv98, 15
  %shl100 = shl i32 %and99, 12
  %56 = load i8*, i8** %p2, align 8
  %arrayidx101 = getelementptr inbounds i8, i8* %56, i64 1
  %57 = load i8, i8* %arrayidx101, align 1
  %conv102 = zext i8 %57 to i32
  %and103 = and i32 %conv102, 63
  %shl104 = shl i32 %and103, 6
  %or105 = or i32 %shl100, %shl104
  %58 = load i8*, i8** %p2, align 8
  %arrayidx106 = getelementptr inbounds i8, i8* %58, i64 2
  %59 = load i8, i8* %arrayidx106, align 1
  %conv107 = zext i8 %59 to i32
  %and108 = and i32 %conv107, 63
  %or109 = or i32 %or105, %and108
  br label %cond.end.112

cond.false.110:                                   ; preds = %cond.false.91
  %60 = load i8*, i8** %p2, align 8
  %call111 = call i32 @string_char(i8* %60, i8** null, i32* %p2_charlen)
  br label %cond.end.112

cond.end.112:                                     ; preds = %cond.false.110, %cond.true.96
  %cond113 = phi i32 [ %or109, %cond.true.96 ], [ %call111, %cond.false.110 ]
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.end.112, %cond.true.76
  %cond115 = phi i32 [ %add90, %cond.true.76 ], [ %cond113, %cond.end.112 ]
  br label %cond.end.116

cond.end.116:                                     ; preds = %cond.end.114, %cond.true.68
  %cond117 = phi i32 [ %conv70, %cond.true.68 ], [ %cond115, %cond.end.114 ]
  store i32 %cond117, i32* %p2_ch, align 4
  br label %if.end.134

if.else.118:                                      ; preds = %do.body.61
  %61 = load i8*, i8** %p2, align 8
  %62 = load i8, i8* %61, align 1
  %conv119 = zext i8 %62 to i32
  store i32 %conv119, i32* %p2_ch, align 4
  store i32 1, i32* %p2_charlen, align 4
  br i1 true, label %cond.true.120, label %cond.false.124

cond.true.120:                                    ; preds = %if.else.118
  %63 = load i32, i32* %p2_ch, align 4
  %add121 = add i32 %63, 0
  %cmp122 = icmp ult i32 %add121, 128
  br i1 %cmp122, label %cond.true.129, label %cond.false.130

cond.false.124:                                   ; preds = %if.else.118
  %64 = load i32, i32* %p2_ch, align 4
  %conv125 = sext i32 %64 to i64
  %add126 = add i64 %conv125, 0
  %cmp127 = icmp ult i64 %add126, 128
  br i1 %cmp127, label %cond.true.129, label %cond.false.130

cond.true.129:                                    ; preds = %cond.false.124, %cond.true.120
  %65 = load i32, i32* %p2_ch, align 4
  br label %cond.end.132

cond.false.130:                                   ; preds = %cond.false.124, %cond.true.120
  %66 = load i32, i32* %p2_ch, align 4
  %add131 = add nsw i32 %66, 4194048
  br label %cond.end.132

cond.end.132:                                     ; preds = %cond.false.130, %cond.true.129
  %cond133 = phi i32 [ %65, %cond.true.129 ], [ %add131, %cond.false.130 ]
  store i32 %cond133, i32* %p2_ch, align 4
  br label %if.end.134

if.end.134:                                       ; preds = %cond.end.132, %cond.end.116
  br label %do.end.135

do.end.135:                                       ; preds = %if.end.134
  %67 = load i64, i64* %translate.addr, align 8
  %68 = load i32, i32* %p1_ch, align 4
  %call136 = call i32 @char_table_translate(i64 %67, i32 %68)
  %69 = load i64, i64* %translate.addr, align 8
  %70 = load i32, i32* %p2_ch, align 4
  %call137 = call i32 @char_table_translate(i64 %69, i32 %70)
  %cmp138 = icmp ne i32 %call136, %call137
  br i1 %cmp138, label %if.then.140, label %if.end.141

if.then.140:                                      ; preds = %do.end.135
  store i32 1, i32* %retval
  br label %return

if.end.141:                                       ; preds = %do.end.135
  %71 = load i32, i32* %p1_charlen, align 4
  %72 = load i8*, i8** %p1, align 8
  %idx.ext = sext i32 %71 to i64
  %add.ptr142 = getelementptr inbounds i8, i8* %72, i64 %idx.ext
  store i8* %add.ptr142, i8** %p1, align 8
  %73 = load i32, i32* %p2_charlen, align 4
  %74 = load i8*, i8** %p2, align 8
  %idx.ext143 = sext i32 %73 to i64
  %add.ptr144 = getelementptr inbounds i8, i8* %74, i64 %idx.ext143
  store i8* %add.ptr144, i8** %p2, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %75 = load i8*, i8** %p1, align 8
  %76 = load i8*, i8** %p1_end, align 8
  %cmp145 = icmp ne i8* %75, %76
  br i1 %cmp145, label %if.then.149, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %77 = load i8*, i8** %p2, align 8
  %78 = load i8*, i8** %p2_end, align 8
  %cmp147 = icmp ne i8* %77, %78
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %lor.lhs.false, %while.end
  store i32 1, i32* %retval
  br label %return

if.end.150:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.150, %if.then.149, %if.then.140
  %79 = load i32, i32* %retval
  ret i32 %79
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mutually_exclusive_p(%struct.re_pattern_buffer* %bufp, i8* %p1, i8* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %p1.addr = alloca i8*, align 8
  %p2.addr = alloca i8*, align 8
  %op2 = alloca i32, align 4
  %multibyte = alloca i8, align 1
  %pend = alloca i8*, align 8
  %c = alloca i32, align 4
  %not = alloca i32, align 4
  %count = alloca i32, align 4
  %range_table = alloca i8*, align 8
  %range_start = alloca i32, align 4
  %range_end = alloca i32, align 4
  %rtp = alloca i8*, align 8
  %range_table_end = alloca i8*, align 8
  %idx = alloca i32, align 4
  %idx326 = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  store i8* %p1, i8** %p1.addr, align 8
  store i8* %p2, i8** %p2.addr, align 8
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %multibyte1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 7
  %bf.load = load i16, i16* %multibyte1, align 8
  %bf.lshr = lshr i16 %bf.load, 8
  %bf.clear = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %bf.clear to i32
  %conv = trunc i32 %bf.cast to i8
  store i8 %conv, i8* %multibyte, align 1
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 0
  %2 = load i8*, i8** %buffer, align 8
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 2
  %4 = load i64, i64* %used, align 8
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4
  store i8* %add.ptr, i8** %pend, align 8
  %5 = load i8*, i8** %p2.addr, align 8
  %6 = load i8*, i8** %pend, align 8
  %call = call i8* @skip_noops(i8* %5, i8* %6)
  store i8* %call, i8** %p2.addr, align 8
  %7 = load i8*, i8** %p2.addr, align 8
  %8 = load i8*, i8** %pend, align 8
  %cmp = icmp eq i8* %7, %8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %p2.addr, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = zext i8 %10 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv3, %cond.false ]
  store i32 %cond, i32* %op2, align 4
  %11 = load i32, i32* %op2, align 4
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb.5
    i32 2, label %sw.bb.5
    i32 4, label %sw.bb.265
    i32 5, label %sw.bb.372
    i32 23, label %sw.bb.377
    i32 27, label %sw.bb.387
    i32 29, label %sw.bb.402
    i32 22, label %sw.bb.415
    i32 26, label %sw.bb.426
    i32 28, label %sw.bb.443
    i32 24, label %sw.bb.456
    i32 33, label %sw.bb.471
    i32 34, label %sw.bb.484
  ]

sw.bb:                                            ; preds = %cond.end, %cond.end
  %12 = load i8*, i8** %p1.addr, align 8
  %call4 = call i8* @skip_one_char(i8* %12)
  %tobool = icmp ne i8* %call4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog.497

sw.bb.5:                                          ; preds = %cond.end, %cond.end
  %13 = load i8*, i8** %p2.addr, align 8
  %14 = load i8, i8* %13, align 1
  %conv6 = zext i8 %14 to i32
  %cmp7 = icmp eq i32 %conv6, 10
  br i1 %cmp7, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %sw.bb.5
  br label %cond.end.79

cond.false.10:                                    ; preds = %sw.bb.5
  %15 = load i8, i8* %multibyte, align 1
  %conv11 = sext i8 %15 to i32
  %tobool12 = icmp ne i32 %conv11, 0
  br i1 %tobool12, label %cond.true.13, label %cond.false.74

cond.true.13:                                     ; preds = %cond.false.10
  %16 = load i8*, i8** %p2.addr, align 8
  %add.ptr14 = getelementptr inbounds i8, i8* %16, i64 2
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr14, i64 0
  %17 = load i8, i8* %arrayidx, align 1
  %conv15 = zext i8 %17 to i32
  %and = and i32 %conv15, 128
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %cond.false.21, label %cond.true.17

cond.true.17:                                     ; preds = %cond.true.13
  %18 = load i8*, i8** %p2.addr, align 8
  %add.ptr18 = getelementptr inbounds i8, i8* %18, i64 2
  %arrayidx19 = getelementptr inbounds i8, i8* %add.ptr18, i64 0
  %19 = load i8, i8* %arrayidx19, align 1
  %conv20 = zext i8 %19 to i32
  br label %cond.end.72

cond.false.21:                                    ; preds = %cond.true.13
  %20 = load i8*, i8** %p2.addr, align 8
  %add.ptr22 = getelementptr inbounds i8, i8* %20, i64 2
  %arrayidx23 = getelementptr inbounds i8, i8* %add.ptr22, i64 0
  %21 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %21 to i32
  %and25 = and i32 %conv24, 32
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %cond.false.42, label %cond.true.27

cond.true.27:                                     ; preds = %cond.false.21
  %22 = load i8*, i8** %p2.addr, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %22, i64 2
  %arrayidx29 = getelementptr inbounds i8, i8* %add.ptr28, i64 0
  %23 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %23 to i32
  %and31 = and i32 %conv30, 31
  %shl = shl i32 %and31, 6
  %24 = load i8*, i8** %p2.addr, align 8
  %add.ptr32 = getelementptr inbounds i8, i8* %24, i64 2
  %arrayidx33 = getelementptr inbounds i8, i8* %add.ptr32, i64 1
  %25 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %25 to i32
  %and35 = and i32 %conv34, 63
  %or = or i32 %shl, %and35
  %26 = load i8*, i8** %p2.addr, align 8
  %add.ptr36 = getelementptr inbounds i8, i8* %26, i64 2
  %arrayidx37 = getelementptr inbounds i8, i8* %add.ptr36, i64 0
  %27 = load i8, i8* %arrayidx37, align 1
  %conv38 = zext i8 %27 to i32
  %cmp39 = icmp slt i32 %conv38, 194
  %cond41 = select i1 %cmp39, i32 4194176, i32 0
  %add = add nsw i32 %or, %cond41
  br label %cond.end.70

cond.false.42:                                    ; preds = %cond.false.21
  %28 = load i8*, i8** %p2.addr, align 8
  %add.ptr43 = getelementptr inbounds i8, i8* %28, i64 2
  %arrayidx44 = getelementptr inbounds i8, i8* %add.ptr43, i64 0
  %29 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %29 to i32
  %and46 = and i32 %conv45, 16
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %cond.false.65, label %cond.true.48

cond.true.48:                                     ; preds = %cond.false.42
  %30 = load i8*, i8** %p2.addr, align 8
  %add.ptr49 = getelementptr inbounds i8, i8* %30, i64 2
  %arrayidx50 = getelementptr inbounds i8, i8* %add.ptr49, i64 0
  %31 = load i8, i8* %arrayidx50, align 1
  %conv51 = zext i8 %31 to i32
  %and52 = and i32 %conv51, 15
  %shl53 = shl i32 %and52, 12
  %32 = load i8*, i8** %p2.addr, align 8
  %add.ptr54 = getelementptr inbounds i8, i8* %32, i64 2
  %arrayidx55 = getelementptr inbounds i8, i8* %add.ptr54, i64 1
  %33 = load i8, i8* %arrayidx55, align 1
  %conv56 = zext i8 %33 to i32
  %and57 = and i32 %conv56, 63
  %shl58 = shl i32 %and57, 6
  %or59 = or i32 %shl53, %shl58
  %34 = load i8*, i8** %p2.addr, align 8
  %add.ptr60 = getelementptr inbounds i8, i8* %34, i64 2
  %arrayidx61 = getelementptr inbounds i8, i8* %add.ptr60, i64 2
  %35 = load i8, i8* %arrayidx61, align 1
  %conv62 = zext i8 %35 to i32
  %and63 = and i32 %conv62, 63
  %or64 = or i32 %or59, %and63
  br label %cond.end.68

cond.false.65:                                    ; preds = %cond.false.42
  %36 = load i8*, i8** %p2.addr, align 8
  %add.ptr66 = getelementptr inbounds i8, i8* %36, i64 2
  %call67 = call i32 @string_char(i8* %add.ptr66, i8** null, i32* null)
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.65, %cond.true.48
  %cond69 = phi i32 [ %or64, %cond.true.48 ], [ %call67, %cond.false.65 ]
  br label %cond.end.70

cond.end.70:                                      ; preds = %cond.end.68, %cond.true.27
  %cond71 = phi i32 [ %add, %cond.true.27 ], [ %cond69, %cond.end.68 ]
  br label %cond.end.72

cond.end.72:                                      ; preds = %cond.end.70, %cond.true.17
  %cond73 = phi i32 [ %conv20, %cond.true.17 ], [ %cond71, %cond.end.70 ]
  br label %cond.end.77

cond.false.74:                                    ; preds = %cond.false.10
  %37 = load i8*, i8** %p2.addr, align 8
  %add.ptr75 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %add.ptr75, align 1
  %conv76 = zext i8 %38 to i32
  br label %cond.end.77

cond.end.77:                                      ; preds = %cond.false.74, %cond.end.72
  %cond78 = phi i32 [ %cond73, %cond.end.72 ], [ %conv76, %cond.false.74 ]
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.end.77, %cond.true.9
  %cond80 = phi i32 [ 10, %cond.true.9 ], [ %cond78, %cond.end.77 ]
  store i32 %cond80, i32* %c, align 4
  %39 = load i8*, i8** %p1.addr, align 8
  %40 = load i8, i8* %39, align 1
  %conv81 = zext i8 %40 to i32
  %cmp82 = icmp eq i32 %conv81, 2
  br i1 %cmp82, label %if.then.84, label %if.else

if.then.84:                                       ; preds = %cond.end.79
  %41 = load i32, i32* %c, align 4
  %42 = load i8, i8* %multibyte, align 1
  %conv85 = sext i8 %42 to i32
  %tobool86 = icmp ne i32 %conv85, 0
  br i1 %tobool86, label %cond.true.87, label %cond.false.153

cond.true.87:                                     ; preds = %if.then.84
  %43 = load i8*, i8** %p1.addr, align 8
  %add.ptr88 = getelementptr inbounds i8, i8* %43, i64 2
  %arrayidx89 = getelementptr inbounds i8, i8* %add.ptr88, i64 0
  %44 = load i8, i8* %arrayidx89, align 1
  %conv90 = zext i8 %44 to i32
  %and91 = and i32 %conv90, 128
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %cond.false.97, label %cond.true.93

cond.true.93:                                     ; preds = %cond.true.87
  %45 = load i8*, i8** %p1.addr, align 8
  %add.ptr94 = getelementptr inbounds i8, i8* %45, i64 2
  %arrayidx95 = getelementptr inbounds i8, i8* %add.ptr94, i64 0
  %46 = load i8, i8* %arrayidx95, align 1
  %conv96 = zext i8 %46 to i32
  br label %cond.end.151

cond.false.97:                                    ; preds = %cond.true.87
  %47 = load i8*, i8** %p1.addr, align 8
  %add.ptr98 = getelementptr inbounds i8, i8* %47, i64 2
  %arrayidx99 = getelementptr inbounds i8, i8* %add.ptr98, i64 0
  %48 = load i8, i8* %arrayidx99, align 1
  %conv100 = zext i8 %48 to i32
  %and101 = and i32 %conv100, 32
  %tobool102 = icmp ne i32 %and101, 0
  br i1 %tobool102, label %cond.false.121, label %cond.true.103

cond.true.103:                                    ; preds = %cond.false.97
  %49 = load i8*, i8** %p1.addr, align 8
  %add.ptr104 = getelementptr inbounds i8, i8* %49, i64 2
  %arrayidx105 = getelementptr inbounds i8, i8* %add.ptr104, i64 0
  %50 = load i8, i8* %arrayidx105, align 1
  %conv106 = zext i8 %50 to i32
  %and107 = and i32 %conv106, 31
  %shl108 = shl i32 %and107, 6
  %51 = load i8*, i8** %p1.addr, align 8
  %add.ptr109 = getelementptr inbounds i8, i8* %51, i64 2
  %arrayidx110 = getelementptr inbounds i8, i8* %add.ptr109, i64 1
  %52 = load i8, i8* %arrayidx110, align 1
  %conv111 = zext i8 %52 to i32
  %and112 = and i32 %conv111, 63
  %or113 = or i32 %shl108, %and112
  %53 = load i8*, i8** %p1.addr, align 8
  %add.ptr114 = getelementptr inbounds i8, i8* %53, i64 2
  %arrayidx115 = getelementptr inbounds i8, i8* %add.ptr114, i64 0
  %54 = load i8, i8* %arrayidx115, align 1
  %conv116 = zext i8 %54 to i32
  %cmp117 = icmp slt i32 %conv116, 194
  %cond119 = select i1 %cmp117, i32 4194176, i32 0
  %add120 = add nsw i32 %or113, %cond119
  br label %cond.end.149

cond.false.121:                                   ; preds = %cond.false.97
  %55 = load i8*, i8** %p1.addr, align 8
  %add.ptr122 = getelementptr inbounds i8, i8* %55, i64 2
  %arrayidx123 = getelementptr inbounds i8, i8* %add.ptr122, i64 0
  %56 = load i8, i8* %arrayidx123, align 1
  %conv124 = zext i8 %56 to i32
  %and125 = and i32 %conv124, 16
  %tobool126 = icmp ne i32 %and125, 0
  br i1 %tobool126, label %cond.false.144, label %cond.true.127

cond.true.127:                                    ; preds = %cond.false.121
  %57 = load i8*, i8** %p1.addr, align 8
  %add.ptr128 = getelementptr inbounds i8, i8* %57, i64 2
  %arrayidx129 = getelementptr inbounds i8, i8* %add.ptr128, i64 0
  %58 = load i8, i8* %arrayidx129, align 1
  %conv130 = zext i8 %58 to i32
  %and131 = and i32 %conv130, 15
  %shl132 = shl i32 %and131, 12
  %59 = load i8*, i8** %p1.addr, align 8
  %add.ptr133 = getelementptr inbounds i8, i8* %59, i64 2
  %arrayidx134 = getelementptr inbounds i8, i8* %add.ptr133, i64 1
  %60 = load i8, i8* %arrayidx134, align 1
  %conv135 = zext i8 %60 to i32
  %and136 = and i32 %conv135, 63
  %shl137 = shl i32 %and136, 6
  %or138 = or i32 %shl132, %shl137
  %61 = load i8*, i8** %p1.addr, align 8
  %add.ptr139 = getelementptr inbounds i8, i8* %61, i64 2
  %arrayidx140 = getelementptr inbounds i8, i8* %add.ptr139, i64 2
  %62 = load i8, i8* %arrayidx140, align 1
  %conv141 = zext i8 %62 to i32
  %and142 = and i32 %conv141, 63
  %or143 = or i32 %or138, %and142
  br label %cond.end.147

cond.false.144:                                   ; preds = %cond.false.121
  %63 = load i8*, i8** %p1.addr, align 8
  %add.ptr145 = getelementptr inbounds i8, i8* %63, i64 2
  %call146 = call i32 @string_char(i8* %add.ptr145, i8** null, i32* null)
  br label %cond.end.147

cond.end.147:                                     ; preds = %cond.false.144, %cond.true.127
  %cond148 = phi i32 [ %or143, %cond.true.127 ], [ %call146, %cond.false.144 ]
  br label %cond.end.149

cond.end.149:                                     ; preds = %cond.end.147, %cond.true.103
  %cond150 = phi i32 [ %add120, %cond.true.103 ], [ %cond148, %cond.end.147 ]
  br label %cond.end.151

cond.end.151:                                     ; preds = %cond.end.149, %cond.true.93
  %cond152 = phi i32 [ %conv96, %cond.true.93 ], [ %cond150, %cond.end.149 ]
  br label %cond.end.156

cond.false.153:                                   ; preds = %if.then.84
  %64 = load i8*, i8** %p1.addr, align 8
  %add.ptr154 = getelementptr inbounds i8, i8* %64, i64 2
  %65 = load i8, i8* %add.ptr154, align 1
  %conv155 = zext i8 %65 to i32
  br label %cond.end.156

cond.end.156:                                     ; preds = %cond.false.153, %cond.end.151
  %cond157 = phi i32 [ %cond152, %cond.end.151 ], [ %conv155, %cond.false.153 ]
  %cmp158 = icmp ne i32 %41, %cond157
  br i1 %cmp158, label %if.then.160, label %if.end.161

if.then.160:                                      ; preds = %cond.end.156
  store i32 1, i32* %retval
  br label %return

if.end.161:                                       ; preds = %cond.end.156
  br label %if.end.264

if.else:                                          ; preds = %cond.end.79
  %66 = load i8*, i8** %p1.addr, align 8
  %67 = load i8, i8* %66, align 1
  %conv162 = zext i8 %67 to i32
  %cmp163 = icmp eq i32 %conv162, 4
  br i1 %cmp163, label %if.then.168, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %68 = load i8*, i8** %p1.addr, align 8
  %69 = load i8, i8* %68, align 1
  %conv165 = zext i8 %69 to i32
  %cmp166 = icmp eq i32 %conv165, 5
  br i1 %cmp166, label %if.then.168, label %if.else.254

if.then.168:                                      ; preds = %lor.lhs.false, %if.else
  %70 = load i8*, i8** %p1.addr, align 8
  %71 = load i8, i8* %70, align 1
  %conv169 = zext i8 %71 to i32
  %cmp170 = icmp eq i32 %conv169, 5
  %conv171 = zext i1 %cmp170 to i32
  store i32 %conv171, i32* %not, align 4
  %72 = load i8, i8* %multibyte, align 1
  %tobool172 = icmp ne i8 %72, 0
  br i1 %tobool172, label %lor.lhs.false.173, label %if.then.176

lor.lhs.false.173:                                ; preds = %if.then.168
  %73 = load i32, i32* %c, align 4
  %cmp174 = icmp slt i32 %73, 128
  br i1 %cmp174, label %if.then.176, label %if.else.191

if.then.176:                                      ; preds = %lor.lhs.false.173, %if.then.168
  %74 = load i32, i32* %c, align 4
  %75 = load i8*, i8** %p1.addr, align 8
  %arrayidx177 = getelementptr inbounds i8, i8* %75, i64 1
  %76 = load i8, i8* %arrayidx177, align 1
  %conv178 = zext i8 %76 to i32
  %and179 = and i32 %conv178, 127
  %mul = mul nsw i32 %and179, 8
  %cmp180 = icmp slt i32 %74, %mul
  br i1 %cmp180, label %land.lhs.true, label %if.end.190

land.lhs.true:                                    ; preds = %if.then.176
  %77 = load i32, i32* %c, align 4
  %div = sdiv i32 %77, 8
  %add182 = add nsw i32 2, %div
  %idxprom = sext i32 %add182 to i64
  %78 = load i8*, i8** %p1.addr, align 8
  %arrayidx183 = getelementptr inbounds i8, i8* %78, i64 %idxprom
  %79 = load i8, i8* %arrayidx183, align 1
  %conv184 = zext i8 %79 to i32
  %80 = load i32, i32* %c, align 4
  %rem = srem i32 %80, 8
  %shl185 = shl i32 1, %rem
  %and186 = and i32 %conv184, %shl185
  %tobool187 = icmp ne i32 %and186, 0
  br i1 %tobool187, label %if.then.188, label %if.end.190

if.then.188:                                      ; preds = %land.lhs.true
  %81 = load i32, i32* %not, align 4
  %tobool189 = icmp ne i32 %81, 0
  %lnot = xor i1 %tobool189, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %not, align 4
  br label %if.end.190

if.end.190:                                       ; preds = %if.then.188, %land.lhs.true, %if.then.176
  br label %if.end.250

if.else.191:                                      ; preds = %lor.lhs.false.173
  %82 = load i8*, i8** %p1.addr, align 8
  %arrayidx192 = getelementptr inbounds i8, i8* %82, i64 1
  %83 = load i8, i8* %arrayidx192, align 1
  %conv193 = zext i8 %83 to i32
  %and194 = and i32 %conv193, 128
  %tobool195 = icmp ne i32 %and194, 0
  br i1 %tobool195, label %if.then.196, label %if.end.249

if.then.196:                                      ; preds = %if.else.191
  br label %do.body

do.body:                                          ; preds = %if.then.196
  %84 = load i8*, i8** %p1.addr, align 8
  %arrayidx197 = getelementptr inbounds i8, i8* %84, i64 1
  %85 = load i8, i8* %arrayidx197, align 1
  %conv198 = zext i8 %85 to i32
  %and199 = and i32 %conv198, 127
  %add200 = add nsw i32 4, %and199
  %idxprom201 = sext i32 %add200 to i64
  %86 = load i8*, i8** %p1.addr, align 8
  %arrayidx202 = getelementptr inbounds i8, i8* %86, i64 %idxprom201
  store i8* %arrayidx202, i8** %range_table, align 8
  %call203 = call i32 @extract_number_and_incr(i8** %range_table)
  store i32 %call203, i32* %count, align 4
  br label %do.body.204

do.body.204:                                      ; preds = %do.body
  %87 = load i8*, i8** %range_table, align 8
  %88 = load i32, i32* %count, align 4
  %mul205 = mul nsw i32 %88, 2
  %mul206 = mul nsw i32 %mul205, 3
  %idx.ext = sext i32 %mul206 to i64
  %add.ptr207 = getelementptr inbounds i8, i8* %87, i64 %idx.ext
  store i8* %add.ptr207, i8** %range_table_end, align 8
  %89 = load i8*, i8** %range_table, align 8
  store i8* %89, i8** %rtp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body.204
  %90 = load i8*, i8** %rtp, align 8
  %91 = load i8*, i8** %range_table_end, align 8
  %cmp208 = icmp ult i8* %90, %91
  br i1 %cmp208, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body.210

do.body.210:                                      ; preds = %for.body
  %92 = load i8*, i8** %rtp, align 8
  %arrayidx211 = getelementptr inbounds i8, i8* %92, i64 0
  %93 = load i8, i8* %arrayidx211, align 1
  %conv212 = zext i8 %93 to i32
  %94 = load i8*, i8** %rtp, align 8
  %arrayidx213 = getelementptr inbounds i8, i8* %94, i64 1
  %95 = load i8, i8* %arrayidx213, align 1
  %conv214 = zext i8 %95 to i32
  %shl215 = shl i32 %conv214, 8
  %or216 = or i32 %conv212, %shl215
  %96 = load i8*, i8** %rtp, align 8
  %arrayidx217 = getelementptr inbounds i8, i8* %96, i64 2
  %97 = load i8, i8* %arrayidx217, align 1
  %conv218 = zext i8 %97 to i32
  %shl219 = shl i32 %conv218, 16
  %or220 = or i32 %or216, %shl219
  store i32 %or220, i32* %range_start, align 4
  br label %do.end

do.end:                                           ; preds = %do.body.210
  br label %do.body.221

do.body.221:                                      ; preds = %do.end
  %98 = load i8*, i8** %rtp, align 8
  %add.ptr222 = getelementptr inbounds i8, i8* %98, i64 3
  %arrayidx223 = getelementptr inbounds i8, i8* %add.ptr222, i64 0
  %99 = load i8, i8* %arrayidx223, align 1
  %conv224 = zext i8 %99 to i32
  %100 = load i8*, i8** %rtp, align 8
  %add.ptr225 = getelementptr inbounds i8, i8* %100, i64 3
  %arrayidx226 = getelementptr inbounds i8, i8* %add.ptr225, i64 1
  %101 = load i8, i8* %arrayidx226, align 1
  %conv227 = zext i8 %101 to i32
  %shl228 = shl i32 %conv227, 8
  %or229 = or i32 %conv224, %shl228
  %102 = load i8*, i8** %rtp, align 8
  %add.ptr230 = getelementptr inbounds i8, i8* %102, i64 3
  %arrayidx231 = getelementptr inbounds i8, i8* %add.ptr230, i64 2
  %103 = load i8, i8* %arrayidx231, align 1
  %conv232 = zext i8 %103 to i32
  %shl233 = shl i32 %conv232, 16
  %or234 = or i32 %or229, %shl233
  store i32 %or234, i32* %range_end, align 4
  br label %do.end.235

do.end.235:                                       ; preds = %do.body.221
  %104 = load i32, i32* %range_start, align 4
  %105 = load i32, i32* %c, align 4
  %cmp236 = icmp sle i32 %104, %105
  br i1 %cmp236, label %land.lhs.true.238, label %if.end.245

land.lhs.true.238:                                ; preds = %do.end.235
  %106 = load i32, i32* %c, align 4
  %107 = load i32, i32* %range_end, align 4
  %cmp239 = icmp sle i32 %106, %107
  br i1 %cmp239, label %if.then.241, label %if.end.245

if.then.241:                                      ; preds = %land.lhs.true.238
  %108 = load i32, i32* %not, align 4
  %tobool242 = icmp ne i32 %108, 0
  %lnot243 = xor i1 %tobool242, true
  %lnot.ext244 = zext i1 %lnot243 to i32
  store i32 %lnot.ext244, i32* %not, align 4
  br label %for.end

if.end.245:                                       ; preds = %land.lhs.true.238, %do.end.235
  br label %for.inc

for.inc:                                          ; preds = %if.end.245
  %109 = load i8*, i8** %rtp, align 8
  %add.ptr246 = getelementptr inbounds i8, i8* %109, i64 6
  store i8* %add.ptr246, i8** %rtp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.241, %for.cond
  br label %do.end.247

do.end.247:                                       ; preds = %for.end
  br label %do.end.248

do.end.248:                                       ; preds = %do.end.247
  br label %if.end.249

if.end.249:                                       ; preds = %do.end.248, %if.else.191
  br label %if.end.250

if.end.250:                                       ; preds = %if.end.249, %if.end.190
  %110 = load i32, i32* %not, align 4
  %tobool251 = icmp ne i32 %110, 0
  br i1 %tobool251, label %if.end.253, label %if.then.252

if.then.252:                                      ; preds = %if.end.250
  store i32 1, i32* %retval
  br label %return

if.end.253:                                       ; preds = %if.end.250
  br label %if.end.263

if.else.254:                                      ; preds = %lor.lhs.false
  %111 = load i8*, i8** %p1.addr, align 8
  %112 = load i8, i8* %111, align 1
  %conv255 = zext i8 %112 to i32
  %cmp256 = icmp eq i32 %conv255, 3
  br i1 %cmp256, label %land.lhs.true.258, label %if.end.262

land.lhs.true.258:                                ; preds = %if.else.254
  %113 = load i32, i32* %c, align 4
  %cmp259 = icmp eq i32 %113, 10
  br i1 %cmp259, label %if.then.261, label %if.end.262

if.then.261:                                      ; preds = %land.lhs.true.258
  store i32 1, i32* %retval
  br label %return

if.end.262:                                       ; preds = %land.lhs.true.258, %if.else.254
  br label %if.end.263

if.end.263:                                       ; preds = %if.end.262, %if.end.253
  br label %if.end.264

if.end.264:                                       ; preds = %if.end.263, %if.end.161
  br label %sw.epilog.497

sw.bb.265:                                        ; preds = %cond.end
  %114 = load i8*, i8** %p1.addr, align 8
  %115 = load i8, i8* %114, align 1
  %conv266 = zext i8 %115 to i32
  %cmp267 = icmp eq i32 %conv266, 2
  br i1 %cmp267, label %if.then.269, label %if.else.271

if.then.269:                                      ; preds = %sw.bb.265
  %116 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %117 = load i8*, i8** %p2.addr, align 8
  %118 = load i8*, i8** %p1.addr, align 8
  %call270 = call i32 @mutually_exclusive_p(%struct.re_pattern_buffer* %116, i8* %117, i8* %118)
  store i32 %call270, i32* %retval
  br label %return

if.else.271:                                      ; preds = %sw.bb.265
  %119 = load i8, i8* %multibyte, align 1
  %tobool272 = icmp ne i8 %119, 0
  br i1 %tobool272, label %lor.lhs.false.273, label %if.then.278

lor.lhs.false.273:                                ; preds = %if.else.271
  %120 = load i8*, i8** %p2.addr, align 8
  %arrayidx274 = getelementptr inbounds i8, i8* %120, i64 1
  %121 = load i8, i8* %arrayidx274, align 1
  %conv275 = zext i8 %121 to i32
  %and276 = and i32 %conv275, 128
  %tobool277 = icmp ne i32 %and276, 0
  br i1 %tobool277, label %if.end.370, label %if.then.278

if.then.278:                                      ; preds = %lor.lhs.false.273, %if.else.271
  %122 = load i8*, i8** %p1.addr, align 8
  %123 = load i8, i8* %122, align 1
  %conv279 = zext i8 %123 to i32
  %cmp280 = icmp eq i32 %conv279, 4
  br i1 %cmp280, label %if.then.282, label %if.else.321

if.then.282:                                      ; preds = %if.then.278
  store i32 0, i32* %idx, align 4
  br label %for.cond.283

for.cond.283:                                     ; preds = %for.inc.307, %if.then.282
  %124 = load i32, i32* %idx, align 4
  %125 = load i8*, i8** %p2.addr, align 8
  %arrayidx284 = getelementptr inbounds i8, i8* %125, i64 1
  %126 = load i8, i8* %arrayidx284, align 1
  %conv285 = zext i8 %126 to i32
  %cmp286 = icmp slt i32 %124, %conv285
  br i1 %cmp286, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.283
  %127 = load i32, i32* %idx, align 4
  %128 = load i8*, i8** %p1.addr, align 8
  %arrayidx288 = getelementptr inbounds i8, i8* %128, i64 1
  %129 = load i8, i8* %arrayidx288, align 1
  %conv289 = zext i8 %129 to i32
  %and290 = and i32 %conv289, 127
  %cmp291 = icmp slt i32 %127, %and290
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.283
  %130 = phi i1 [ false, %for.cond.283 ], [ %cmp291, %land.rhs ]
  br i1 %130, label %for.body.293, label %for.end.308

for.body.293:                                     ; preds = %land.end
  %131 = load i32, i32* %idx, align 4
  %add294 = add nsw i32 2, %131
  %idxprom295 = sext i32 %add294 to i64
  %132 = load i8*, i8** %p2.addr, align 8
  %arrayidx296 = getelementptr inbounds i8, i8* %132, i64 %idxprom295
  %133 = load i8, i8* %arrayidx296, align 1
  %conv297 = zext i8 %133 to i32
  %134 = load i32, i32* %idx, align 4
  %add298 = add nsw i32 2, %134
  %idxprom299 = sext i32 %add298 to i64
  %135 = load i8*, i8** %p1.addr, align 8
  %arrayidx300 = getelementptr inbounds i8, i8* %135, i64 %idxprom299
  %136 = load i8, i8* %arrayidx300, align 1
  %conv301 = zext i8 %136 to i32
  %and302 = and i32 %conv297, %conv301
  %cmp303 = icmp ne i32 %and302, 0
  br i1 %cmp303, label %if.then.305, label %if.end.306

if.then.305:                                      ; preds = %for.body.293
  br label %for.end.308

if.end.306:                                       ; preds = %for.body.293
  br label %for.inc.307

for.inc.307:                                      ; preds = %if.end.306
  %137 = load i32, i32* %idx, align 4
  %inc = add nsw i32 %137, 1
  store i32 %inc, i32* %idx, align 4
  br label %for.cond.283

for.end.308:                                      ; preds = %if.then.305, %land.end
  %138 = load i32, i32* %idx, align 4
  %139 = load i8*, i8** %p2.addr, align 8
  %arrayidx309 = getelementptr inbounds i8, i8* %139, i64 1
  %140 = load i8, i8* %arrayidx309, align 1
  %conv310 = zext i8 %140 to i32
  %cmp311 = icmp eq i32 %138, %conv310
  br i1 %cmp311, label %if.then.319, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %for.end.308
  %141 = load i32, i32* %idx, align 4
  %142 = load i8*, i8** %p1.addr, align 8
  %arrayidx314 = getelementptr inbounds i8, i8* %142, i64 1
  %143 = load i8, i8* %arrayidx314, align 1
  %conv315 = zext i8 %143 to i32
  %and316 = and i32 %conv315, 127
  %cmp317 = icmp eq i32 %141, %and316
  br i1 %cmp317, label %if.then.319, label %if.end.320

if.then.319:                                      ; preds = %lor.lhs.false.313, %for.end.308
  store i32 1, i32* %retval
  br label %return

if.end.320:                                       ; preds = %lor.lhs.false.313
  br label %if.end.369

if.else.321:                                      ; preds = %if.then.278
  %144 = load i8*, i8** %p1.addr, align 8
  %145 = load i8, i8* %144, align 1
  %conv322 = zext i8 %145 to i32
  %cmp323 = icmp eq i32 %conv322, 5
  br i1 %cmp323, label %if.then.325, label %if.end.368

if.then.325:                                      ; preds = %if.else.321
  store i32 0, i32* %idx326, align 4
  br label %for.cond.327

for.cond.327:                                     ; preds = %for.inc.359, %if.then.325
  %146 = load i32, i32* %idx326, align 4
  %147 = load i8*, i8** %p2.addr, align 8
  %arrayidx328 = getelementptr inbounds i8, i8* %147, i64 1
  %148 = load i8, i8* %arrayidx328, align 1
  %conv329 = zext i8 %148 to i32
  %cmp330 = icmp slt i32 %146, %conv329
  br i1 %cmp330, label %for.body.332, label %for.end.361

for.body.332:                                     ; preds = %for.cond.327
  %149 = load i32, i32* %idx326, align 4
  %add333 = add nsw i32 2, %149
  %idxprom334 = sext i32 %add333 to i64
  %150 = load i8*, i8** %p2.addr, align 8
  %arrayidx335 = getelementptr inbounds i8, i8* %150, i64 %idxprom334
  %151 = load i8, i8* %arrayidx335, align 1
  %conv336 = zext i8 %151 to i32
  %cmp337 = icmp eq i32 %conv336, 0
  br i1 %cmp337, label %if.end.358, label %lor.lhs.false.339

lor.lhs.false.339:                                ; preds = %for.body.332
  %152 = load i32, i32* %idx326, align 4
  %153 = load i8*, i8** %p1.addr, align 8
  %arrayidx340 = getelementptr inbounds i8, i8* %153, i64 1
  %154 = load i8, i8* %arrayidx340, align 1
  %conv341 = zext i8 %154 to i32
  %and342 = and i32 %conv341, 127
  %cmp343 = icmp slt i32 %152, %and342
  br i1 %cmp343, label %land.lhs.true.345, label %if.then.357

land.lhs.true.345:                                ; preds = %lor.lhs.false.339
  %155 = load i32, i32* %idx326, align 4
  %add346 = add nsw i32 2, %155
  %idxprom347 = sext i32 %add346 to i64
  %156 = load i8*, i8** %p2.addr, align 8
  %arrayidx348 = getelementptr inbounds i8, i8* %156, i64 %idxprom347
  %157 = load i8, i8* %arrayidx348, align 1
  %conv349 = zext i8 %157 to i32
  %158 = load i32, i32* %idx326, align 4
  %add350 = add nsw i32 2, %158
  %idxprom351 = sext i32 %add350 to i64
  %159 = load i8*, i8** %p1.addr, align 8
  %arrayidx352 = getelementptr inbounds i8, i8* %159, i64 %idxprom351
  %160 = load i8, i8* %arrayidx352, align 1
  %conv353 = zext i8 %160 to i32
  %neg = xor i32 %conv353, -1
  %and354 = and i32 %conv349, %neg
  %cmp355 = icmp eq i32 %and354, 0
  br i1 %cmp355, label %if.end.358, label %if.then.357

if.then.357:                                      ; preds = %land.lhs.true.345, %lor.lhs.false.339
  br label %for.end.361

if.end.358:                                       ; preds = %land.lhs.true.345, %for.body.332
  br label %for.inc.359

for.inc.359:                                      ; preds = %if.end.358
  %161 = load i32, i32* %idx326, align 4
  %inc360 = add nsw i32 %161, 1
  store i32 %inc360, i32* %idx326, align 4
  br label %for.cond.327

for.end.361:                                      ; preds = %if.then.357, %for.cond.327
  %162 = load i32, i32* %idx326, align 4
  %163 = load i8*, i8** %p2.addr, align 8
  %arrayidx362 = getelementptr inbounds i8, i8* %163, i64 1
  %164 = load i8, i8* %arrayidx362, align 1
  %conv363 = zext i8 %164 to i32
  %cmp364 = icmp eq i32 %162, %conv363
  br i1 %cmp364, label %if.then.366, label %if.end.367

if.then.366:                                      ; preds = %for.end.361
  store i32 1, i32* %retval
  br label %return

if.end.367:                                       ; preds = %for.end.361
  br label %if.end.368

if.end.368:                                       ; preds = %if.end.367, %if.else.321
  br label %if.end.369

if.end.369:                                       ; preds = %if.end.368, %if.end.320
  br label %if.end.370

if.end.370:                                       ; preds = %if.end.369, %lor.lhs.false.273
  br label %if.end.371

if.end.371:                                       ; preds = %if.end.370
  br label %sw.epilog.497

sw.bb.372:                                        ; preds = %cond.end
  %165 = load i8*, i8** %p1.addr, align 8
  %166 = load i8, i8* %165, align 1
  %conv373 = zext i8 %166 to i32
  switch i32 %conv373, label %sw.epilog [
    i32 2, label %sw.bb.374
    i32 4, label %sw.bb.374
    i32 5, label %sw.bb.376
  ]

sw.bb.374:                                        ; preds = %sw.bb.372, %sw.bb.372
  %167 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8
  %168 = load i8*, i8** %p2.addr, align 8
  %169 = load i8*, i8** %p1.addr, align 8
  %call375 = call i32 @mutually_exclusive_p(%struct.re_pattern_buffer* %167, i8* %168, i8* %169)
  store i32 %call375, i32* %retval
  br label %return

sw.bb.376:                                        ; preds = %sw.bb.372
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb.372, %sw.bb.376
  br label %sw.epilog.497

sw.bb.377:                                        ; preds = %cond.end
  %170 = load i8*, i8** %p1.addr, align 8
  %171 = load i8, i8* %170, align 1
  %conv378 = zext i8 %171 to i32
  %cmp379 = icmp eq i32 %conv378, 28
  br i1 %cmp379, label %land.rhs.381, label %land.end.386

land.rhs.381:                                     ; preds = %sw.bb.377
  %172 = load i8*, i8** %p1.addr, align 8
  %arrayidx382 = getelementptr inbounds i8, i8* %172, i64 1
  %173 = load i8, i8* %arrayidx382, align 1
  %conv383 = zext i8 %173 to i32
  %cmp384 = icmp eq i32 %conv383, 2
  br label %land.end.386

land.end.386:                                     ; preds = %land.rhs.381, %sw.bb.377
  %174 = phi i1 [ false, %sw.bb.377 ], [ %cmp384, %land.rhs.381 ]
  %land.ext = zext i1 %174 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.387:                                        ; preds = %cond.end
  %175 = load i8*, i8** %p1.addr, align 8
  %176 = load i8, i8* %175, align 1
  %conv388 = zext i8 %176 to i32
  %cmp389 = icmp eq i32 %conv388, 28
  br i1 %cmp389, label %land.rhs.391, label %land.end.400

land.rhs.391:                                     ; preds = %sw.bb.387
  %177 = load i8*, i8** %p1.addr, align 8
  %arrayidx392 = getelementptr inbounds i8, i8* %177, i64 1
  %178 = load i8, i8* %arrayidx392, align 1
  %conv393 = zext i8 %178 to i32
  %cmp394 = icmp eq i32 %conv393, 3
  br i1 %cmp394, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.391
  %179 = load i8*, i8** %p1.addr, align 8
  %arrayidx396 = getelementptr inbounds i8, i8* %179, i64 1
  %180 = load i8, i8* %arrayidx396, align 1
  %conv397 = zext i8 %180 to i32
  %cmp398 = icmp eq i32 %conv397, 2
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs.391
  %181 = phi i1 [ true, %land.rhs.391 ], [ %cmp398, %lor.rhs ]
  br label %land.end.400

land.end.400:                                     ; preds = %lor.end, %sw.bb.387
  %182 = phi i1 [ false, %sw.bb.387 ], [ %181, %lor.end ]
  %land.ext401 = zext i1 %182 to i32
  store i32 %land.ext401, i32* %retval
  br label %return

sw.bb.402:                                        ; preds = %cond.end
  %183 = load i8*, i8** %p1.addr, align 8
  %184 = load i8, i8* %183, align 1
  %conv403 = zext i8 %184 to i32
  %cmp404 = icmp eq i32 %conv403, 28
  br i1 %cmp404, label %land.rhs.406, label %land.end.413

land.rhs.406:                                     ; preds = %sw.bb.402
  %185 = load i8*, i8** %p1.addr, align 8
  %arrayidx407 = getelementptr inbounds i8, i8* %185, i64 1
  %186 = load i8, i8* %arrayidx407, align 1
  %conv408 = zext i8 %186 to i32
  %187 = load i8*, i8** %p2.addr, align 8
  %arrayidx409 = getelementptr inbounds i8, i8* %187, i64 1
  %188 = load i8, i8* %arrayidx409, align 1
  %conv410 = zext i8 %188 to i32
  %cmp411 = icmp eq i32 %conv408, %conv410
  br label %land.end.413

land.end.413:                                     ; preds = %land.rhs.406, %sw.bb.402
  %189 = phi i1 [ false, %sw.bb.402 ], [ %cmp411, %land.rhs.406 ]
  %land.ext414 = zext i1 %189 to i32
  store i32 %land.ext414, i32* %retval
  br label %return

sw.bb.415:                                        ; preds = %cond.end
  %190 = load i8*, i8** %p1.addr, align 8
  %191 = load i8, i8* %190, align 1
  %conv416 = zext i8 %191 to i32
  %cmp417 = icmp eq i32 %conv416, 29
  br i1 %cmp417, label %land.rhs.419, label %land.end.424

land.rhs.419:                                     ; preds = %sw.bb.415
  %192 = load i8*, i8** %p1.addr, align 8
  %arrayidx420 = getelementptr inbounds i8, i8* %192, i64 1
  %193 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %193 to i32
  %cmp422 = icmp eq i32 %conv421, 2
  br label %land.end.424

land.end.424:                                     ; preds = %land.rhs.419, %sw.bb.415
  %194 = phi i1 [ false, %sw.bb.415 ], [ %cmp422, %land.rhs.419 ]
  %land.ext425 = zext i1 %194 to i32
  store i32 %land.ext425, i32* %retval
  br label %return

sw.bb.426:                                        ; preds = %cond.end
  %195 = load i8*, i8** %p1.addr, align 8
  %196 = load i8, i8* %195, align 1
  %conv427 = zext i8 %196 to i32
  %cmp428 = icmp eq i32 %conv427, 29
  br i1 %cmp428, label %land.rhs.430, label %land.end.441

land.rhs.430:                                     ; preds = %sw.bb.426
  %197 = load i8*, i8** %p1.addr, align 8
  %arrayidx431 = getelementptr inbounds i8, i8* %197, i64 1
  %198 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %198 to i32
  %cmp433 = icmp eq i32 %conv432, 3
  br i1 %cmp433, label %lor.end.440, label %lor.rhs.435

lor.rhs.435:                                      ; preds = %land.rhs.430
  %199 = load i8*, i8** %p1.addr, align 8
  %arrayidx436 = getelementptr inbounds i8, i8* %199, i64 1
  %200 = load i8, i8* %arrayidx436, align 1
  %conv437 = zext i8 %200 to i32
  %cmp438 = icmp eq i32 %conv437, 2
  br label %lor.end.440

lor.end.440:                                      ; preds = %lor.rhs.435, %land.rhs.430
  %201 = phi i1 [ true, %land.rhs.430 ], [ %cmp438, %lor.rhs.435 ]
  br label %land.end.441

land.end.441:                                     ; preds = %lor.end.440, %sw.bb.426
  %202 = phi i1 [ false, %sw.bb.426 ], [ %201, %lor.end.440 ]
  %land.ext442 = zext i1 %202 to i32
  store i32 %land.ext442, i32* %retval
  br label %return

sw.bb.443:                                        ; preds = %cond.end
  %203 = load i8*, i8** %p1.addr, align 8
  %204 = load i8, i8* %203, align 1
  %conv444 = zext i8 %204 to i32
  %cmp445 = icmp eq i32 %conv444, 29
  br i1 %cmp445, label %land.rhs.447, label %land.end.454

land.rhs.447:                                     ; preds = %sw.bb.443
  %205 = load i8*, i8** %p1.addr, align 8
  %arrayidx448 = getelementptr inbounds i8, i8* %205, i64 1
  %206 = load i8, i8* %arrayidx448, align 1
  %conv449 = zext i8 %206 to i32
  %207 = load i8*, i8** %p2.addr, align 8
  %arrayidx450 = getelementptr inbounds i8, i8* %207, i64 1
  %208 = load i8, i8* %arrayidx450, align 1
  %conv451 = zext i8 %208 to i32
  %cmp452 = icmp eq i32 %conv449, %conv451
  br label %land.end.454

land.end.454:                                     ; preds = %land.rhs.447, %sw.bb.443
  %209 = phi i1 [ false, %sw.bb.443 ], [ %cmp452, %land.rhs.447 ]
  %land.ext455 = zext i1 %209 to i32
  store i32 %land.ext455, i32* %retval
  br label %return

sw.bb.456:                                        ; preds = %cond.end
  %210 = load i8*, i8** %p1.addr, align 8
  %211 = load i8, i8* %210, align 1
  %conv457 = zext i8 %211 to i32
  %cmp458 = icmp eq i32 %conv457, 29
  br i1 %cmp458, label %land.rhs.464, label %lor.lhs.false.460

lor.lhs.false.460:                                ; preds = %sw.bb.456
  %212 = load i8*, i8** %p1.addr, align 8
  %213 = load i8, i8* %212, align 1
  %conv461 = zext i8 %213 to i32
  %cmp462 = icmp eq i32 %conv461, 28
  br i1 %cmp462, label %land.rhs.464, label %land.end.469

land.rhs.464:                                     ; preds = %lor.lhs.false.460, %sw.bb.456
  %214 = load i8*, i8** %p1.addr, align 8
  %arrayidx465 = getelementptr inbounds i8, i8* %214, i64 1
  %215 = load i8, i8* %arrayidx465, align 1
  %conv466 = zext i8 %215 to i32
  %cmp467 = icmp eq i32 %conv466, 2
  br label %land.end.469

land.end.469:                                     ; preds = %land.rhs.464, %lor.lhs.false.460
  %216 = phi i1 [ false, %lor.lhs.false.460 ], [ %cmp467, %land.rhs.464 ]
  %land.ext470 = zext i1 %216 to i32
  store i32 %land.ext470, i32* %retval
  br label %return

sw.bb.471:                                        ; preds = %cond.end
  %217 = load i8*, i8** %p1.addr, align 8
  %218 = load i8, i8* %217, align 1
  %conv472 = zext i8 %218 to i32
  %cmp473 = icmp eq i32 %conv472, 34
  br i1 %cmp473, label %land.rhs.475, label %land.end.482

land.rhs.475:                                     ; preds = %sw.bb.471
  %219 = load i8*, i8** %p1.addr, align 8
  %arrayidx476 = getelementptr inbounds i8, i8* %219, i64 1
  %220 = load i8, i8* %arrayidx476, align 1
  %conv477 = zext i8 %220 to i32
  %221 = load i8*, i8** %p2.addr, align 8
  %arrayidx478 = getelementptr inbounds i8, i8* %221, i64 1
  %222 = load i8, i8* %arrayidx478, align 1
  %conv479 = zext i8 %222 to i32
  %cmp480 = icmp eq i32 %conv477, %conv479
  br label %land.end.482

land.end.482:                                     ; preds = %land.rhs.475, %sw.bb.471
  %223 = phi i1 [ false, %sw.bb.471 ], [ %cmp480, %land.rhs.475 ]
  %land.ext483 = zext i1 %223 to i32
  store i32 %land.ext483, i32* %retval
  br label %return

sw.bb.484:                                        ; preds = %cond.end
  %224 = load i8*, i8** %p1.addr, align 8
  %225 = load i8, i8* %224, align 1
  %conv485 = zext i8 %225 to i32
  %cmp486 = icmp eq i32 %conv485, 33
  br i1 %cmp486, label %land.rhs.488, label %land.end.495

land.rhs.488:                                     ; preds = %sw.bb.484
  %226 = load i8*, i8** %p1.addr, align 8
  %arrayidx489 = getelementptr inbounds i8, i8* %226, i64 1
  %227 = load i8, i8* %arrayidx489, align 1
  %conv490 = zext i8 %227 to i32
  %228 = load i8*, i8** %p2.addr, align 8
  %arrayidx491 = getelementptr inbounds i8, i8* %228, i64 1
  %229 = load i8, i8* %arrayidx491, align 1
  %conv492 = zext i8 %229 to i32
  %cmp493 = icmp eq i32 %conv490, %conv492
  br label %land.end.495

land.end.495:                                     ; preds = %land.rhs.488, %sw.bb.484
  %230 = phi i1 [ false, %sw.bb.484 ], [ %cmp493, %land.rhs.488 ]
  %land.ext496 = zext i1 %230 to i32
  store i32 %land.ext496, i32* %retval
  br label %return

sw.default:                                       ; preds = %cond.end
  br label %sw.epilog.497

sw.epilog.497:                                    ; preds = %sw.default, %sw.epilog, %if.end.371, %if.end.264, %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog.497, %land.end.495, %land.end.482, %land.end.469, %land.end.454, %land.end.441, %land.end.424, %land.end.413, %land.end.400, %land.end.386, %sw.bb.374, %if.then.366, %if.then.319, %if.then.269, %if.then.261, %if.then.252, %if.then.160, %if.then
  %231 = load i32, i32* %retval
  ret i32 %231
}

declare void @process_quit_flag() #2

declare void @process_pending_signals() #2

declare void @UPDATE_SYNTAX_TABLE_FAST(i64) #2

declare void @UPDATE_SYNTAX_TABLE_FORWARD_FAST(i64) #2

declare zeroext i1 @word_boundary_p(i32, i32) #2

declare void @UPDATE_SYNTAX_TABLE_BACKWARD(i64) #2

; Function Attrs: nounwind uwtable
define internal i8* @skip_noops(i8* %p, i8* %pend) #0 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %pend.addr = alloca i8*, align 8
  %mcnt = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  store i8* %pend, i8** %pend.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %p.addr, align 8
  %1 = load i8*, i8** %pend.addr, align 8
  %cmp = icmp ult i8* %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %p.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i32
  switch i32 %conv, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 0, label %sw.bb.1
    i32 13, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %while.body, %while.body
  %4 = load i8*, i8** %p.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 2
  store i8* %add.ptr, i8** %p.addr, align 8
  br label %sw.epilog

sw.bb.1:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8
  %add.ptr2 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %add.ptr2, i8** %p.addr, align 8
  br label %sw.epilog

sw.bb.3:                                          ; preds = %while.body
  %6 = load i8*, i8** %p.addr, align 8
  %add.ptr4 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %add.ptr4, i8** %p.addr, align 8
  %call = call i32 @extract_number_and_incr(i8** %p.addr)
  store i32 %call, i32* %mcnt, align 4
  %7 = load i32, i32* %mcnt, align 4
  %8 = load i8*, i8** %p.addr, align 8
  %idx.ext = sext i32 %7 to i64
  %add.ptr5 = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr5, i8** %p.addr, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %9 = load i8*, i8** %p.addr, align 8
  store i8* %9, i8** %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb.3, %sw.bb.1, %sw.bb
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %10 = load i8*, i8** %p.addr, align 8
  store i8* %10, i8** %retval
  br label %return

return:                                           ; preds = %while.end, %sw.default
  %11 = load i8*, i8** %retval
  ret i8* %11
}

; Function Attrs: nounwind uwtable
define internal i8* @skip_one_char(i8* %p) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %mcnt = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1
  store i8* %incdec.ptr, i8** %p.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
    i32 5, label %sw.bb.3
    i32 4, label %sw.bb.3
    i32 28, label %sw.bb.23
    i32 29, label %sw.bb.23
    i32 33, label %sw.bb.23
    i32 34, label %sw.bb.23
  ]

sw.bb:                                            ; preds = %entry
  br label %sw.epilog

sw.bb.1:                                          ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv2 = zext i8 %3 to i32
  %add = add nsw i32 %conv2, 1
  %4 = load i8*, i8** %p.addr, align 8
  %idx.ext = sext i32 %add to i64
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  store i8* %add.ptr, i8** %p.addr, align 8
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry, %entry
  %5 = load i8*, i8** %p.addr, align 8
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i64 -1
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr4, i64 1
  %6 = load i8, i8* %arrayidx, align 1
  %conv5 = zext i8 %6 to i32
  %and = and i32 %conv5, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb.3
  %7 = load i8*, i8** %p.addr, align 8
  %add.ptr6 = getelementptr inbounds i8, i8* %7, i64 -1
  %arrayidx7 = getelementptr inbounds i8, i8* %add.ptr6, i64 1
  %8 = load i8, i8* %arrayidx7, align 1
  %conv8 = zext i8 %8 to i32
  %and9 = and i32 %conv8, 127
  %add10 = add nsw i32 4, %and9
  %idxprom = sext i32 %add10 to i64
  %9 = load i8*, i8** %p.addr, align 8
  %add.ptr11 = getelementptr inbounds i8, i8* %9, i64 -1
  %arrayidx12 = getelementptr inbounds i8, i8* %add.ptr11, i64 %idxprom
  store i8* %arrayidx12, i8** %p.addr, align 8
  %call = call i32 @extract_number_and_incr(i8** %p.addr)
  store i32 %call, i32* %mcnt, align 4
  %10 = load i8*, i8** %p.addr, align 8
  %11 = load i32, i32* %mcnt, align 4
  %mul = mul nsw i32 %11, 2
  %mul13 = mul nsw i32 %mul, 3
  %idx.ext14 = sext i32 %mul13 to i64
  %add.ptr15 = getelementptr inbounds i8, i8* %10, i64 %idx.ext14
  store i8* %add.ptr15, i8** %p.addr, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb.3
  %12 = load i8*, i8** %p.addr, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %12, i64 -1
  %arrayidx17 = getelementptr inbounds i8, i8* %add.ptr16, i64 1
  %13 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %13 to i32
  %and19 = and i32 %conv18, 127
  %add20 = add nsw i32 1, %and19
  %14 = load i8*, i8** %p.addr, align 8
  %idx.ext21 = sext i32 %add20 to i64
  %add.ptr22 = getelementptr inbounds i8, i8* %14, i64 %idx.ext21
  store i8* %add.ptr22, i8** %p.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb.23:                                         ; preds = %entry, %entry, %entry, %entry
  %15 = load i8*, i8** %p.addr, align 8
  %incdec.ptr24 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr24, i8** %p.addr, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i8* null, i8** %p.addr, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.23, %if.end, %sw.bb.1, %sw.bb
  %16 = load i8*, i8** %p.addr, align 8
  ret i8* %16
}

declare void @xfree(i8*) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #1

; Function Attrs: nounwind uwtable
define internal signext i8 @at_begline_loc_p(i8* %pattern, i8* %p, i64 %syntax) #0 {
entry:
  %retval = alloca i8, align 1
  %pattern.addr = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %syntax.addr = alloca i64, align 8
  %prev = alloca i8*, align 8
  %odd_backslashes = alloca i8, align 1
  store i8* %pattern, i8** %pattern.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64 %syntax, i64* %syntax.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -2
  store i8* %add.ptr, i8** %prev, align 8
  %1 = load i8*, i8** %prev, align 8
  %2 = load i8, i8* %1, align 1
  %conv = zext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 40
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %syntax.addr, align 8
  %and = and i64 %3, 8192
  %cmp2 = icmp eq i64 %and, 0
  %conv3 = zext i1 %cmp2 to i32
  %conv4 = trunc i32 %conv3 to i8
  store i8 %conv4, i8* %odd_backslashes, align 1
  br label %if.end.52

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %prev, align 8
  %5 = load i8, i8* %4, align 1
  %conv5 = zext i8 %5 to i32
  %cmp6 = icmp eq i32 %conv5, 124
  br i1 %cmp6, label %if.then.8, label %if.else.13

if.then.8:                                        ; preds = %if.else
  %6 = load i64, i64* %syntax.addr, align 8
  %and9 = and i64 %6, 32768
  %cmp10 = icmp eq i64 %and9, 0
  %conv11 = zext i1 %cmp10 to i32
  %conv12 = trunc i32 %conv11 to i8
  store i8 %conv12, i8* %odd_backslashes, align 1
  br label %if.end.51

if.else.13:                                       ; preds = %if.else
  %7 = load i8*, i8** %prev, align 8
  %8 = load i8, i8* %7, align 1
  %conv14 = zext i8 %8 to i32
  %cmp15 = icmp eq i32 %conv14, 58
  br i1 %cmp15, label %land.lhs.true, label %if.else.49

land.lhs.true:                                    ; preds = %if.else.13
  %9 = load i64, i64* %syntax.addr, align 8
  %and17 = and i64 %9, 2097152
  %tobool = icmp ne i64 %and17, 0
  br i1 %tobool, label %if.then.18, label %if.else.49

if.then.18:                                       ; preds = %land.lhs.true
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.18
  %10 = load i8*, i8** %prev, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %10, i64 -1
  %11 = load i8*, i8** %pattern.addr, align 8
  %cmp20 = icmp uge i8* %add.ptr19, %11
  br i1 %cmp20, label %land.lhs.true.22, label %land.end

land.lhs.true.22:                                 ; preds = %while.cond
  %12 = load i8*, i8** %prev, align 8
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 -1
  %13 = load i8, i8* %arrayidx, align 1
  %conv23 = zext i8 %13 to i32
  %cmp24 = icmp sge i32 %conv23, 48
  br i1 %cmp24, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.22
  %14 = load i8*, i8** %prev, align 8
  %arrayidx26 = getelementptr inbounds i8, i8* %14, i64 -1
  %15 = load i8, i8* %arrayidx26, align 1
  %conv27 = zext i8 %15 to i32
  %cmp28 = icmp sle i32 %conv27, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.22, %while.cond
  %16 = phi i1 [ false, %land.lhs.true.22 ], [ false, %while.cond ], [ %cmp28, %land.rhs ]
  br i1 %16, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %17 = load i8*, i8** %prev, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 -1
  store i8* %incdec.ptr, i8** %prev, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %18 = load i8*, i8** %prev, align 8
  %add.ptr30 = getelementptr inbounds i8, i8* %18, i64 -2
  %19 = load i8*, i8** %pattern.addr, align 8
  %cmp31 = icmp uge i8* %add.ptr30, %19
  br i1 %cmp31, label %land.lhs.true.33, label %if.then.43

land.lhs.true.33:                                 ; preds = %while.end
  %20 = load i8*, i8** %prev, align 8
  %arrayidx34 = getelementptr inbounds i8, i8* %20, i64 -1
  %21 = load i8, i8* %arrayidx34, align 1
  %conv35 = zext i8 %21 to i32
  %cmp36 = icmp eq i32 %conv35, 63
  br i1 %cmp36, label %land.lhs.true.38, label %if.then.43

land.lhs.true.38:                                 ; preds = %land.lhs.true.33
  %22 = load i8*, i8** %prev, align 8
  %arrayidx39 = getelementptr inbounds i8, i8* %22, i64 -2
  %23 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %23 to i32
  %cmp41 = icmp eq i32 %conv40, 40
  br i1 %cmp41, label %if.end, label %if.then.43

if.then.43:                                       ; preds = %land.lhs.true.38, %land.lhs.true.33, %while.end
  store i8 0, i8* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.38
  %24 = load i8*, i8** %prev, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %24, i64 -2
  store i8* %add.ptr44, i8** %prev, align 8
  %25 = load i64, i64* %syntax.addr, align 8
  %and45 = and i64 %25, 8192
  %cmp46 = icmp eq i64 %and45, 0
  %conv47 = zext i1 %cmp46 to i32
  %conv48 = trunc i32 %conv47 to i8
  store i8 %conv48, i8* %odd_backslashes, align 1
  br label %if.end.50

if.else.49:                                       ; preds = %land.lhs.true, %if.else.13
  store i8 0, i8* %retval
  br label %return

if.end.50:                                        ; preds = %if.end
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.8
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.then
  %26 = load i8*, i8** %prev, align 8
  store i8* %26, i8** %p.addr, align 8
  br label %while.cond.53

while.cond.53:                                    ; preds = %while.body.63, %if.end.52
  %27 = load i8*, i8** %prev, align 8
  %add.ptr54 = getelementptr inbounds i8, i8* %27, i64 -1
  %28 = load i8*, i8** %pattern.addr, align 8
  %cmp55 = icmp uge i8* %add.ptr54, %28
  br i1 %cmp55, label %land.rhs.57, label %land.end.62

land.rhs.57:                                      ; preds = %while.cond.53
  %29 = load i8*, i8** %prev, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %29, i64 -1
  %30 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %30 to i32
  %cmp60 = icmp eq i32 %conv59, 92
  br label %land.end.62

land.end.62:                                      ; preds = %land.rhs.57, %while.cond.53
  %31 = phi i1 [ false, %while.cond.53 ], [ %cmp60, %land.rhs.57 ]
  br i1 %31, label %while.body.63, label %while.end.65

while.body.63:                                    ; preds = %land.end.62
  %32 = load i8*, i8** %prev, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %incdec.ptr64, i8** %prev, align 8
  br label %while.cond.53

while.end.65:                                     ; preds = %land.end.62
  %33 = load i8*, i8** %p.addr, align 8
  %34 = load i8*, i8** %prev, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %33 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %34 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %35 = load i8, i8* %odd_backslashes, align 1
  %conv66 = sext i8 %35 to i64
  %and67 = and i64 %sub.ptr.sub, %conv66
  %conv68 = trunc i64 %and67 to i8
  store i8 %conv68, i8* %retval
  br label %return

return:                                           ; preds = %while.end.65, %if.else.49, %if.then.43
  %36 = load i8, i8* %retval
  ret i8 %36
}

; Function Attrs: nounwind uwtable
define internal signext i8 @at_endline_loc_p(i8* %p, i8* %pend, i64 %syntax) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %pend.addr = alloca i8*, align 8
  %syntax.addr = alloca i64, align 8
  %next = alloca i8*, align 8
  %next_backslash = alloca i8, align 1
  %next_next = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %pend, i8** %pend.addr, align 8
  store i64 %syntax, i64* %syntax.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  store i8* %0, i8** %next, align 8
  %1 = load i8*, i8** %next, align 8
  %2 = load i8, i8* %1, align 1
  %conv = zext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 92
  %conv1 = zext i1 %cmp to i32
  %conv2 = trunc i32 %conv1 to i8
  store i8 %conv2, i8* %next_backslash, align 1
  %3 = load i8*, i8** %p.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1
  %4 = load i8*, i8** %pend.addr, align 8
  %cmp3 = icmp ult i8* %add.ptr, %4
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load i8*, i8** %p.addr, align 8
  %add.ptr5 = getelementptr inbounds i8, i8* %5, i64 1
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr5, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %next_next, align 8
  %6 = load i64, i64* %syntax.addr, align 8
  %and = and i64 %6, 8192
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %cond.true.6, label %cond.false.10

cond.true.6:                                      ; preds = %cond.end
  %7 = load i8*, i8** %next, align 8
  %8 = load i8, i8* %7, align 1
  %conv7 = zext i8 %8 to i32
  %cmp8 = icmp eq i32 %conv7, 41
  br i1 %cmp8, label %lor.end, label %lor.rhs

cond.false.10:                                    ; preds = %cond.end
  %9 = load i8, i8* %next_backslash, align 1
  %conv11 = sext i8 %9 to i32
  %tobool12 = icmp ne i32 %conv11, 0
  br i1 %tobool12, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %cond.false.10
  %10 = load i8*, i8** %next_next, align 8
  %tobool13 = icmp ne i8* %10, null
  br i1 %tobool13, label %land.lhs.true.14, label %lor.rhs

land.lhs.true.14:                                 ; preds = %land.lhs.true
  %11 = load i8*, i8** %next_next, align 8
  %12 = load i8, i8* %11, align 1
  %conv15 = zext i8 %12 to i32
  %cmp16 = icmp eq i32 %conv15, 41
  br i1 %cmp16, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true.14, %land.lhs.true, %cond.false.10, %cond.true.6
  %13 = load i64, i64* %syntax.addr, align 8
  %and18 = and i64 %13, 32768
  %tobool19 = icmp ne i64 %and18, 0
  br i1 %tobool19, label %cond.true.20, label %cond.false.24

cond.true.20:                                     ; preds = %lor.rhs
  %14 = load i8*, i8** %next, align 8
  %15 = load i8, i8* %14, align 1
  %conv21 = zext i8 %15 to i32
  %cmp22 = icmp eq i32 %conv21, 124
  %conv23 = zext i1 %cmp22 to i32
  br label %cond.end.32

cond.false.24:                                    ; preds = %lor.rhs
  %16 = load i8, i8* %next_backslash, align 1
  %conv25 = sext i8 %16 to i32
  %tobool26 = icmp ne i32 %conv25, 0
  br i1 %tobool26, label %land.lhs.true.27, label %land.end

land.lhs.true.27:                                 ; preds = %cond.false.24
  %17 = load i8*, i8** %next_next, align 8
  %tobool28 = icmp ne i8* %17, null
  br i1 %tobool28, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.27
  %18 = load i8*, i8** %next_next, align 8
  %19 = load i8, i8* %18, align 1
  %conv29 = zext i8 %19 to i32
  %cmp30 = icmp eq i32 %conv29, 124
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.27, %cond.false.24
  %20 = phi i1 [ false, %land.lhs.true.27 ], [ false, %cond.false.24 ], [ %cmp30, %land.rhs ]
  %land.ext = zext i1 %20 to i32
  br label %cond.end.32

cond.end.32:                                      ; preds = %land.end, %cond.true.20
  %cond33 = phi i32 [ %conv23, %cond.true.20 ], [ %land.ext, %land.end ]
  %tobool34 = icmp ne i32 %cond33, 0
  br label %lor.end

lor.end:                                          ; preds = %cond.end.32, %land.lhs.true.14, %cond.true.6
  %21 = phi i1 [ true, %land.lhs.true.14 ], [ true, %cond.true.6 ], [ %tobool34, %cond.end.32 ]
  %lor.ext = zext i1 %21 to i32
  %conv35 = trunc i32 %lor.ext to i8
  ret i8 %conv35
}

; Function Attrs: nounwind uwtable
define internal void @store_op1(i32 %op, i8* %loc, i32 %arg) #0 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  store i8* %loc, i8** %loc.addr, align 8
  store i32 %arg, i32* %arg.addr, align 4
  %0 = load i32, i32* %op.addr, align 4
  %conv = trunc i32 %0 to i8
  %1 = load i8*, i8** %loc.addr, align 8
  store i8 %conv, i8* %1, align 1
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %arg.addr, align 4
  %and = and i32 %2, 255
  %conv1 = trunc i32 %and to i8
  %3 = load i8*, i8** %loc.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0
  store i8 %conv1, i8* %arrayidx, align 1
  %4 = load i32, i32* %arg.addr, align 4
  %shr = ashr i32 %4, 8
  %conv2 = trunc i32 %shr to i8
  %5 = load i8*, i8** %loc.addr, align 8
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 1
  %arrayidx4 = getelementptr inbounds i8, i8* %add.ptr3, i64 1
  store i8 %conv2, i8* %arrayidx4, align 1
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @insert_op1(i32 %op, i8* %loc, i32 %arg, i8* %end) #0 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg.addr = alloca i32, align 4
  %end.addr = alloca i8*, align 8
  %pfrom = alloca i8*, align 8
  %pto = alloca i8*, align 8
  store i32 %op, i32* %op.addr, align 4
  store i8* %loc, i8** %loc.addr, align 8
  store i32 %arg, i32* %arg.addr, align 4
  store i8* %end, i8** %end.addr, align 8
  %0 = load i8*, i8** %end.addr, align 8
  store i8* %0, i8** %pfrom, align 8
  %1 = load i8*, i8** %end.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 3
  store i8* %add.ptr, i8** %pto, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %pfrom, align 8
  %3 = load i8*, i8** %loc.addr, align 8
  %cmp = icmp ne i8* %2, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %pfrom, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1
  store i8* %incdec.ptr, i8** %pfrom, align 8
  %5 = load i8, i8* %incdec.ptr, align 1
  %6 = load i8*, i8** %pto, align 8
  %incdec.ptr1 = getelementptr inbounds i8, i8* %6, i32 -1
  store i8* %incdec.ptr1, i8** %pto, align 8
  store i8 %5, i8* %incdec.ptr1, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %op.addr, align 4
  %8 = load i8*, i8** %loc.addr, align 8
  %9 = load i32, i32* %arg.addr, align 4
  call void @store_op1(i32 %7, i8* %8, i32 %9)
  ret void
}

declare void @SETUP_BUFFER_SYNTAX_TABLE() #2

; Function Attrs: nounwind uwtable
define internal i32 @re_wctype_to_bit(i32 %cc) #0 {
entry:
  %retval = alloca i32, align 4
  %cc.addr = alloca i32, align 4
  store i32 %cc, i32* %cc.addr, align 4
  %0 = load i32, i32* %cc.addr, align 4
  switch i32 %0, label %sw.default [
    i32 15, label %sw.bb
    i32 14, label %sw.bb
    i32 2, label %sw.bb.1
    i32 1, label %sw.bb.2
    i32 3, label %sw.bb.3
    i32 6, label %sw.bb.4
    i32 7, label %sw.bb.5
    i32 8, label %sw.bb.6
    i32 13, label %sw.bb.7
    i32 4, label %sw.bb.8
    i32 5, label %sw.bb.9
    i32 16, label %sw.bb.10
    i32 10, label %sw.bb.10
    i32 11, label %sw.bb.10
    i32 9, label %sw.bb.10
    i32 12, label %sw.bb.10
    i32 17, label %sw.bb.10
    i32 0, label %sw.bb.10
  ]

sw.bb:                                            ; preds = %entry, %entry
  store i32 32, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  store i32 64, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %entry
  store i32 128, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  store i32 2, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %entry
  store i32 16, i32* %retval
  br label %return

sw.bb.6:                                          ; preds = %entry
  store i32 4, i32* %retval
  br label %return

sw.bb.7:                                          ; preds = %entry
  store i32 8, i32* %retval
  br label %return

sw.bb.8:                                          ; preds = %entry
  store i32 256, i32* %retval
  br label %return

sw.bb.9:                                          ; preds = %entry
  store i32 512, i32* %retval
  br label %return

sw.bb.10:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  call void @abort() #6
  unreachable

return:                                           ; preds = %sw.bb.10, %sw.bb.9, %sw.bb.8, %sw.bb.7, %sw.bb.6, %sw.bb.5, %sw.bb.4, %sw.bb.3, %sw.bb.2, %sw.bb.1, %sw.bb
  %1 = load i32, i32* %retval
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal void @extend_range_table_work_area(%struct.range_table_work_area* %work_area) #0 {
entry:
  %work_area.addr = alloca %struct.range_table_work_area*, align 8
  store %struct.range_table_work_area* %work_area, %struct.range_table_work_area** %work_area.addr, align 8
  %0 = load %struct.range_table_work_area*, %struct.range_table_work_area** %work_area.addr, align 8
  %allocated = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %0, i32 0, i32 1
  %1 = load i32, i32* %allocated, align 4
  %conv = sext i32 %1 to i64
  %add = add i64 %conv, 64
  %conv1 = trunc i64 %add to i32
  store i32 %conv1, i32* %allocated, align 4
  %2 = load %struct.range_table_work_area*, %struct.range_table_work_area** %work_area.addr, align 8
  %table = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %2, i32 0, i32 0
  %3 = load i32*, i32** %table, align 8
  %4 = bitcast i32* %3 to i8*
  %5 = load %struct.range_table_work_area*, %struct.range_table_work_area** %work_area.addr, align 8
  %allocated2 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %5, i32 0, i32 1
  %6 = load i32, i32* %allocated2, align 4
  %conv3 = sext i32 %6 to i64
  %call = call i8* @xrealloc(i8* %4, i64 %conv3)
  %7 = bitcast i8* %call to i32*
  %8 = load %struct.range_table_work_area*, %struct.range_table_work_area** %work_area.addr, align 8
  %table4 = getelementptr inbounds %struct.range_table_work_area, %struct.range_table_work_area* %8, i32 0, i32 0
  store i32* %7, i32** %table4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal signext i8 @group_in_compile_stack(%struct.compile_stack_type* byval align 8 %compile_stack, i32 %regnum) #0 {
entry:
  %retval = alloca i8, align 1
  %regnum.addr = alloca i32, align 4
  %this_element = alloca i64, align 8
  store i32 %regnum, i32* %regnum.addr, align 4
  %avail = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2
  %0 = load i64, i64* %avail, align 8
  %sub = sub i64 %0, 1
  store i64 %sub, i64* %this_element, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %this_element, align 8
  %cmp = icmp sge i64 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %this_element, align 8
  %stack = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0
  %3 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack, align 8
  %arrayidx = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %3, i64 %2
  %regnum1 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx, i32 0, i32 3
  %4 = load i32, i32* %regnum1, align 4
  %5 = load i32, i32* %regnum.addr, align 4
  %cmp2 = icmp eq i32 %4, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i64, i64* %this_element, align 8
  %dec = add nsw i64 %6, -1
  store i64 %dec, i64* %this_element, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %7 = load i8, i8* %retval
  ret i8 %7
}

; Function Attrs: nounwind uwtable
define internal void @insert_op2(i32 %op, i8* %loc, i32 %arg1, i32 %arg2, i8* %end) #0 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg1.addr = alloca i32, align 4
  %arg2.addr = alloca i32, align 4
  %end.addr = alloca i8*, align 8
  %pfrom = alloca i8*, align 8
  %pto = alloca i8*, align 8
  store i32 %op, i32* %op.addr, align 4
  store i8* %loc, i8** %loc.addr, align 8
  store i32 %arg1, i32* %arg1.addr, align 4
  store i32 %arg2, i32* %arg2.addr, align 4
  store i8* %end, i8** %end.addr, align 8
  %0 = load i8*, i8** %end.addr, align 8
  store i8* %0, i8** %pfrom, align 8
  %1 = load i8*, i8** %end.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 5
  store i8* %add.ptr, i8** %pto, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %pfrom, align 8
  %3 = load i8*, i8** %loc.addr, align 8
  %cmp = icmp ne i8* %2, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %pfrom, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1
  store i8* %incdec.ptr, i8** %pfrom, align 8
  %5 = load i8, i8* %incdec.ptr, align 1
  %6 = load i8*, i8** %pto, align 8
  %incdec.ptr1 = getelementptr inbounds i8, i8* %6, i32 -1
  store i8* %incdec.ptr1, i8** %pto, align 8
  store i8 %5, i8* %incdec.ptr1, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %op.addr, align 4
  %8 = load i8*, i8** %loc.addr, align 8
  %9 = load i32, i32* %arg1.addr, align 4
  %10 = load i32, i32* %arg2.addr, align 4
  call void @store_op2(i32 %7, i8* %8, i32 %9, i32 %10)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @store_op2(i32 %op, i8* %loc, i32 %arg1, i32 %arg2) #0 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg1.addr = alloca i32, align 4
  %arg2.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  store i8* %loc, i8** %loc.addr, align 8
  store i32 %arg1, i32* %arg1.addr, align 4
  store i32 %arg2, i32* %arg2.addr, align 4
  %0 = load i32, i32* %op.addr, align 4
  %conv = trunc i32 %0 to i8
  %1 = load i8*, i8** %loc.addr, align 8
  store i8 %conv, i8* %1, align 1
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %arg1.addr, align 4
  %and = and i32 %2, 255
  %conv1 = trunc i32 %and to i8
  %3 = load i8*, i8** %loc.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0
  store i8 %conv1, i8* %arrayidx, align 1
  %4 = load i32, i32* %arg1.addr, align 4
  %shr = ashr i32 %4, 8
  %conv2 = trunc i32 %shr to i8
  %5 = load i8*, i8** %loc.addr, align 8
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 1
  %arrayidx4 = getelementptr inbounds i8, i8* %add.ptr3, i64 1
  store i8 %conv2, i8* %arrayidx4, align 1
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %do.body.5

do.body.5:                                        ; preds = %do.end
  %6 = load i32, i32* %arg2.addr, align 4
  %and6 = and i32 %6, 255
  %conv7 = trunc i32 %and6 to i8
  %7 = load i8*, i8** %loc.addr, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %7, i64 3
  %arrayidx9 = getelementptr inbounds i8, i8* %add.ptr8, i64 0
  store i8 %conv7, i8* %arrayidx9, align 1
  %8 = load i32, i32* %arg2.addr, align 4
  %shr10 = ashr i32 %8, 8
  %conv11 = trunc i32 %shr10 to i8
  %9 = load i8*, i8** %loc.addr, align 8
  %add.ptr12 = getelementptr inbounds i8, i8* %9, i64 3
  %arrayidx13 = getelementptr inbounds i8, i8* %add.ptr12, i64 1
  store i8 %conv11, i8* %arrayidx13, align 1
  br label %do.end.14

do.end.14:                                        ; preds = %do.body.5
  ret void
}

declare i32 @char_string(i32, i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
