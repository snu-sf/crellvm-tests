; ModuleID = './cmstypes.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._cmsTagTypePluginChunkType = type { %struct._cmsTagTypeLinkedList_st* }
%struct._cmsTagTypeLinkedList_st = type { %struct._cms_typehandler_struct, %struct._cmsTagTypeLinkedList_st* }
%struct._cms_typehandler_struct = type { i32, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)*, i8* (%struct._cms_typehandler_struct*, i8*, i32)*, void (%struct._cms_typehandler_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cms_io_handler = type { i8*, %struct._cmsContext_struct*, i32, i32, [256 x i8], i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*, i32, i8*)* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct._cmsTagPluginChunkType = type { %struct._cmsTagLinkedList_st* }
%struct._cmsTagLinkedList_st = type { i32, %struct.cmsTagDescriptor, %struct._cmsTagLinkedList_st* }
%struct.cmsTagDescriptor = type { i32, i32, [20 x i32], i32 (double, i8*)* }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct.cmsPluginTagType = type { %struct._cmsPluginBaseStruct, %struct._cms_typehandler_struct }
%struct.cmsPluginTag = type { %struct._cmsPluginBaseStruct, i32, %struct.cmsTagDescriptor }
%struct.cmsCIExyYTRIPLE = type { %struct.cmsCIExyY, %struct.cmsCIExyY, %struct.cmsCIExyY }
%struct.cmsCIExyY = type { double, double, double }
%struct._cms_MLU_struct = type { %struct._cmsContext_struct*, i32, i32, %struct._cmsMLUentry*, i32, i32, i8* }
%struct._cmsMLUentry = type { i16, i16, i32, i32 }
%struct._cms_curve_struct = type { %struct._cms_interp_struc*, i32, %struct.cmsCurveSegment*, %struct._cms_interp_struc**, double (i32, double*, double)**, i32, i16* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct.cmsCurveSegment = type { float, float, i32, [10 x double], i32, float* }
%struct.cmsDateTimeNumber = type { i16, i16, i16, i16, i16, i16 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }
%struct.cmsVEC3 = type { [3 x double] }
%struct._cmsStageToneCurvesData = type { i32, %struct._cms_curve_struct** }
%struct._cmsStageMatrixData = type { double*, double* }
%struct._cmsStageCLutData = type { %union.anon, %struct._cms_interp_struc*, i32, i32 }
%union.anon = type { i16* }
%struct._cms_NAMEDCOLORLIST_struct = type { i32, i32, i32, [33 x i8], [33 x i8], %struct._cmsNAMEDCOLOR*, %struct._cmsContext_struct* }
%struct._cmsNAMEDCOLOR = type { [256 x i8], [3 x i16], [16 x i16] }
%struct.cmsSEQ = type { i32, %struct._cmsContext_struct*, %struct.cmsPSEQDESC* }
%struct.cmsPSEQDESC = type { i32, i32, i64, i32, %union.cmsProfileID, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct* }
%union.cmsProfileID = type { [4 x i32] }
%struct.cmsICCMeasurementConditions = type { i32, %struct.cmsCIEXYZ, i32, double, i32 }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsICCData = type { i32, i32, [1 x i8] }
%struct.cmsUcrBg = type { %struct._cms_curve_struct*, %struct._cms_curve_struct*, %struct._cms_MLU_struct* }
%struct.cmsScreening = type { i32, i32, [16 x %struct.cmsScreeningChannel] }
%struct.cmsScreeningChannel = type { double, double, i32 }
%struct.cmsICCViewingConditions = type { %struct.cmsCIEXYZ, %struct.cmsCIEXYZ, i32 }
%struct._cmsDICarray = type { %struct._cmsDICelem, %struct._cmsDICelem, %struct._cmsDICelem, %struct._cmsDICelem }
%struct._cmsDICelem = type { %struct._cmsContext_struct*, i32*, i32* }
%struct._cmsDICTentry_struct = type { %struct._cmsDICTentry_struct*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*, i32*, i32* }
%struct._cmsVCGTGAMMA = type { double, double, double }
%union.anon.0 = type { double }

@_cmsMPETypePluginChunk = global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsTagTypePluginChunk = global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsAllocTagTypePluginChunk.TagTypePluginChunk = internal global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsAllocMPETypePluginChunk.TagTypePluginChunk = internal global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@SupportedTagTypes = internal global [31 x %struct._cmsTagTypeLinkedList_st] [%struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1667789421, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Chromaticity_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Chromaticity_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Chromaticity_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Chromaticity_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 64) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668051567, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ColorantOrderType_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ColorantOrderType_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ColorantOrderType_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ColorantOrderType_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 128) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1936077618, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_S15Fixed16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_S15Fixed16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_S15Fixed16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_S15Fixed16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 192) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1969632050, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_U16Fixed16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_U16Fixed16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_U16Fixed16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_U16Fixed16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 256) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1952807028, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Text_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Text_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Text_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Text_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 320) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684370275, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Text_Description_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Text_Description_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Text_Description_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Text_Description_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 384) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668641398, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Curve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Curve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Curve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Curve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 448) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1885434465, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ParametricCurve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ParametricCurve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ParametricCurve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ParametricCurve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 512) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1685350765, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_DateTime_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_DateTime_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_DateTime_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_DateTime_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 576) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835430961, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUT8_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUT8_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUT8_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUT8_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 640) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835430962, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUT16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUT16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUT16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUT16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 704) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668051572, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ColorantTable_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ColorantTable_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ColorantTable_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ColorantTable_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 768) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1852009522, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_NamedColor_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_NamedColor_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_NamedColor_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_NamedColor_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 832) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835824483, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MLU_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MLU_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_MLU_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_MLU_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 896) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1886610801, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ProfileSequenceDesc_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ProfileSequenceDesc_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ProfileSequenceDesc_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ProfileSequenceDesc_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 960) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1936287520, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Signature_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Signature_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Signature_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Signature_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1024) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835360627, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Measurement_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Measurement_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Measurement_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Measurement_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1088) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684108385, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Data_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Data_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Data_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Data_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1152) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1832993312, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUTA2B_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUTA2B_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUTA2B_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUTA2B_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1216) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1833058592, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUTB2A_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUTB2A_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUTB2A_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUTB2A_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1280) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1650877472, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_UcrBg_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_UcrBg_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_UcrBg_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_UcrBg_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1344) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668441193, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_CrdInfo_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_CrdInfo_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_CrdInfo_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_CrdInfo_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1408) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1836082548, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPE_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPE_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_MPE_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_MPE_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1472) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1935897198, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Screening_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Screening_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Screening_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Screening_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1536) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1986618743, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ViewingConditions_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ViewingConditions_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ViewingConditions_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ViewingConditions_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1600) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1482250784, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_XYZ_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_XYZ_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_XYZ_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_XYZ_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1664) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 396690872, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_XYZ_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_XYZ_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_XYZ_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_XYZ_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1728) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 -1804014080, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Curve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Curve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Curve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Curve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1792) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1886611812, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ProfileSequenceId_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ProfileSequenceId_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ProfileSequenceId_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ProfileSequenceId_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1856) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684628340, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Dictionary_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Dictionary_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Dictionary_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Dictionary_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1920) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1986226036, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_vcgt_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_vcgt_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_vcgt_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_vcgt_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* null }], align 16
@_cmsTagPluginChunk = global %struct._cmsTagPluginChunkType zeroinitializer, align 8
@_cmsAllocTagPluginChunk.TagPluginChunk = internal global %struct._cmsTagPluginChunkType zeroinitializer, align 8
@SupportedTags = internal global [63 x %struct._cmsTagLinkedList_st] [%struct._cmsTagLinkedList_st { i32 1093812784, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1832993312, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 112) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1093812785, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1832993312, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 224) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1093812786, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1832993312, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 336) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110589744, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 448) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110589745, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 560) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110589746, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 672) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1918392666, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1482250784, i32 396690872, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 784) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1733843290, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1482250784, i32 396690872, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 896) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1649957210, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1482250784, i32 396690872, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1008) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1918128707, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1668641398, i32 1885434465, i32 -1804014080, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1120) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1733579331, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1668641398, i32 1885434465, i32 -1804014080, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1232) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1649693251, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1668641398, i32 1885434465, i32 -1804014080, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1344) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1667329140, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1685350765, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1456) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1952543335, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1952807028, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1568) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1667785060, %struct.cmsTagDescriptor { i32 9, i32 1, [20 x i32] [i32 1936077618, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1680) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1667789421, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1667789421, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1792) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1668051567, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1668051567, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 1904) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1668051572, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1668051572, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2016) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1668050804, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1668051572, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2128) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1668313716, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1952807028, i32 1835824483, i32 1684370275, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideTextType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2240) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1685350765, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1685350765, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2352) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1684893284, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1684370275, i32 1835824483, i32 1952807028, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2464) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1684890724, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1684370275, i32 1835824483, i32 1952807028, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2576) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1734438260, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2688) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1800688195, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1668641398, i32 1885434465, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2800) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1819635049, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1482250784, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 2912) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1651208308, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1482250784, i32 396690872, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3024) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 2004119668, %struct.cmsTagDescriptor { i32 1, i32 2, [20 x i32] [i32 1482250784, i32 396690872, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3136) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1852009522, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1852009522, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3248) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886545200, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3360) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886545201, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3472) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886545202, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1835430962, i32 1833058592, i32 1835430961, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3584) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1684370275, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1684370275, i32 1835824483, i32 1952807028, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3696) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886610801, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1886610801, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3808) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1952801640, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1936287520, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 3920) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1667852659, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1936287520, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4032) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1919510320, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1936287520, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4144) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1919510322, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1936287520, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4256) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1835360627, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1835360627, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4368) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886610480, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4480) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886610481, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4592) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886610482, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4704) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886610483, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4816) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886597747, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 4928) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886597737, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684108385, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5040) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1987405156, %struct.cmsTagDescriptor { i32 1, i32 3, [20 x i32] [i32 1684370275, i32 1835824483, i32 1952807028, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5152) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1650877472, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1650877472, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5264) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1668441193, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1668441193, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5376) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1144144432, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5488) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1144144433, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5600) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1144144434, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5712) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1144144435, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5824) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110590512, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 5936) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110590513, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6048) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110590514, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6160) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1110590515, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1836082548, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6272) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1935897188, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684370275, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6384) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1986618743, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1986618743, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6496) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1935897198, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1935897198, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6608) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1986226036, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1986226036, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6720) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1835365473, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1684628340, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6832) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1886611812, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1886611812, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([63 x %struct._cmsTagLinkedList_st]* @SupportedTags to i8*), i64 6944) to %struct._cmsTagLinkedList_st*) }, %struct._cmsTagLinkedList_st { i32 1685283693, %struct.cmsTagDescriptor { i32 1, i32 1, [20 x i32] [i32 1835824483, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* null }], align 16
@.str = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [19 x i8] c"(io != ((void*)0))\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"./lcms2/src/cmstypes.c\00", align 1
@__PRETTY_FUNCTION__._cmsWriteWCharArray = private unnamed_addr constant [78 x i8] c"cmsBool _cmsWriteWCharArray(cmsIOHANDLER *, cmsUInt32Number, const wchar_t *)\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"(!(Array == ((void*)0) && n > 0))\00", align 1
@Type_ParametricCurve_Read.ParamsByType = internal constant [5 x i32] [i32 1, i32 3, i32 4, i32 5, i32 7], align 16
@.str.6 = private unnamed_addr constant [35 x i8] c"Unknown parametric curve type '%d'\00", align 1
@Type_ParametricCurve_Write.ParamsByType = internal constant [6 x i32] [i32 0, i32 1, i32 3, i32 4, i32 5, i32 7], align 16
@.str.7 = private unnamed_addr constant [61 x i8] c"Multisegment or Inverted parametric curves cannot be written\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Unsupported parametric curve\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"LUT is not suitable to be saved as LUT8\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"LUT8 needs 256 entries on prelinearization\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"LUT is not suitable to be saved as LUT16\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"(Tables != ((void*)0))\00", align 1
@__PRETTY_FUNCTION__.Write16bitTables = private unnamed_addr constant [80 x i8] c"cmsBool Write16bitTables(cmsContext, cmsIOHANDLER *, _cmsStageToneCurvesData *)\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Too many colorants '%d'\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"Too many named colors '%d'\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"Too many device coordinates '%d'\00", align 1
@.str.16 = private unnamed_addr constant [57 x i8] c"multiLocalizedUnicodeType of len != 12 is not supported.\00", align 1
@__PRETTY_FUNCTION__._cmsReadWCharArray = private unnamed_addr constant [71 x i8] c"cmsBool _cmsReadWCharArray(cmsIOHANDLER *, cmsUInt32Number, wchar_t *)\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"Unknown curve type '%s'\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Unknown precision of '%d'\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"LUT is not suitable to be saved as LutAToB\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"Cannot save floating point data, CLUT are 8 or 16 bit only\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"LUT is not suitable to be saved as LutBToA\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"nm\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"#0\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"#1\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"#2\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"#3\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"PS\00", align 1
@SupportedMPEtypes = internal global [5 x %struct._cmsTagTypeLinkedList_st] [%struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1648444243, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* null, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* null, i8* (%struct._cms_typehandler_struct*, i8*, i32)* null, void (%struct._cms_typehandler_struct*, i8*)* null, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 64) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1698775891, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* null, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* null, i8* (%struct._cms_typehandler_struct*, i8*, i32)* null, void (%struct._cms_typehandler_struct*, i8*)* null, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 128) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668707188, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEcurve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEcurve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 192) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835103334, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEmatrix_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEmatrix_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 256) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668052340, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEclut_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEclut_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* null }], align 16
@.str.28 = private unnamed_addr constant [29 x i8] c"Unknown MPE type '%s' found.\00", align 1
@ReadSegmentedCurve.ParamsByType = private unnamed_addr constant [3 x i32] [i32 4, i32 5, i32 5], align 4
@.str.29 = private unnamed_addr constant [39 x i8] c"Unknown curve element type '%s' found.\00", align 1
@WriteSegmentedCurve.ParamsByType = private unnamed_addr constant [3 x i32] [i32 4, i32 5, i32 5], align 4
@.str.30 = private unnamed_addr constant [28 x i8] c"Found unknown MPE type '%s'\00", align 1
@.str.31 = private unnamed_addr constant [41 x i8] c"Unknown record length in dictionary '%d'\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"Bad dictionary Name/Value\00", align 1
@.str.33 = private unnamed_addr constant [45 x i8] c"Unsupported number of channels for VCGT '%d'\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"Unsupported bit depth for VCGT '%d'\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c"Unsupported tag type for VCGT '%d'\00", align 1

; Function Attrs: nounwind uwtable
define void @_cmsAllocTagTypePluginChunk(%struct._cmsContext_struct* %ctx, %struct._cmsContext_struct* %src) #0 {
entry:
  %ctx.addr = alloca %struct._cmsContext_struct*, align 8
  %src.addr = alloca %struct._cmsContext_struct*, align 8
  store %struct._cmsContext_struct* %ctx, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  store %struct._cmsContext_struct* %src, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsContext_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  call void @DupTagTypeList(%struct._cmsContext_struct* %1, %struct._cmsContext_struct* %2, i32 8) #7
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i32 0, i32 1
  %4 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool, align 8, !tbaa !5
  %call = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %4, i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsAllocTagTypePluginChunk.TagTypePluginChunk to i8*), i32 8) #7
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %chunks = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %5, i32 0, i32 2
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks, i32 0, i64 8
  store i8* %call, i8** %arrayidx, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DupTagTypeList(%struct._cmsContext_struct* %ctx, %struct._cmsContext_struct* %src, i32 %loc) #0 {
entry:
  %ctx.addr = alloca %struct._cmsContext_struct*, align 8
  %src.addr = alloca %struct._cmsContext_struct*, align 8
  %loc.addr = alloca i32, align 4
  %newHead = alloca %struct._cmsTagTypePluginChunkType, align 8
  %entry1 = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %Anterior = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %head = alloca %struct._cmsTagTypePluginChunkType*, align 8
  %newEntry = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ctx, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  store %struct._cmsContext_struct* %src, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  store i32 %loc, i32* %loc.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsTagTypePluginChunkType* %newHead to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast %struct._cmsTagTypePluginChunkType* %newHead to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8, i32 8, i1 false)
  %2 = bitcast %struct._cmsTagTypeLinkedList_st** %entry1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast %struct._cmsTagTypeLinkedList_st** %Anterior to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %Anterior, align 8, !tbaa !1
  %4 = bitcast %struct._cmsTagTypePluginChunkType** %head to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load i32, i32* %loc.addr, align 4, !tbaa !8
  %idxprom = sext i32 %5 to i64
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %chunks = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %6, i32 0, i32 2
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks, i32 0, i64 %idxprom
  %7 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %8 = bitcast i8* %7 to %struct._cmsTagTypePluginChunkType*
  store %struct._cmsTagTypePluginChunkType* %8, %struct._cmsTagTypePluginChunkType** %head, align 8, !tbaa !1
  %9 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %head, align 8, !tbaa !1
  %TagTypes = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %9, i32 0, i32 0
  %10 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes, align 8, !tbaa !10
  store %struct._cmsTagTypeLinkedList_st* %10, %struct._cmsTagTypeLinkedList_st** %entry1, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %entry1, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsTagTypeLinkedList_st* %11, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = bitcast %struct._cmsTagTypeLinkedList_st** %newEntry to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %13, i32 0, i32 1
  %14 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool, align 8, !tbaa !5
  %15 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %entry1, align 8, !tbaa !1
  %16 = bitcast %struct._cmsTagTypeLinkedList_st* %15 to i8*
  %call = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %14, i8* %16, i32 64) #7
  %17 = bitcast i8* %call to %struct._cmsTagTypeLinkedList_st*
  store %struct._cmsTagTypeLinkedList_st* %17, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  %18 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  %cmp2 = icmp eq %struct._cmsTagTypeLinkedList_st* %18, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %19 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %19, i32 0, i32 1
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %Next, align 8, !tbaa !12
  %20 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %Anterior, align 8, !tbaa !1
  %tobool = icmp ne %struct._cmsTagTypeLinkedList_st* %20, null
  br i1 %tobool, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %21 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  %22 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %Anterior, align 8, !tbaa !1
  %Next4 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %22, i32 0, i32 1
  store %struct._cmsTagTypeLinkedList_st* %21, %struct._cmsTagTypeLinkedList_st** %Next4, align 8, !tbaa !12
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  %23 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  store %struct._cmsTagTypeLinkedList_st* %23, %struct._cmsTagTypeLinkedList_st** %Anterior, align 8, !tbaa !1
  %TagTypes6 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %newHead, i32 0, i32 0
  %24 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes6, align 8, !tbaa !10
  %cmp7 = icmp eq %struct._cmsTagTypeLinkedList_st* %24, null
  br i1 %cmp7, label %if.then.8, label %if.end.10

if.then.8:                                        ; preds = %if.end.5
  %25 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %newEntry, align 8, !tbaa !1
  %TagTypes9 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %newHead, i32 0, i32 0
  store %struct._cmsTagTypeLinkedList_st* %25, %struct._cmsTagTypeLinkedList_st** %TagTypes9, align 8, !tbaa !10
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.8, %if.end.5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then
  %26 = bitcast %struct._cmsTagTypeLinkedList_st** %newEntry to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.17 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %27 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %entry1, align 8, !tbaa !1
  %Next11 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %27, i32 0, i32 1
  %28 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %Next11, align 8, !tbaa !12
  store %struct._cmsTagTypeLinkedList_st* %28, %struct._cmsTagTypeLinkedList_st** %entry1, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %29, i32 0, i32 1
  %30 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool12, align 8, !tbaa !5
  %31 = bitcast %struct._cmsTagTypePluginChunkType* %newHead to i8*
  %call13 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %30, i8* %31, i32 8) #7
  %32 = load i32, i32* %loc.addr, align 4, !tbaa !8
  %idxprom14 = sext i32 %32 to i64
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %chunks15 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %33, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks15, i32 0, i64 %idxprom14
  store i8* %call13, i8** %arrayidx16, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.17

cleanup.17:                                       ; preds = %for.end, %cleanup
  %34 = bitcast %struct._cmsTagTypePluginChunkType** %head to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #2
  %35 = bitcast %struct._cmsTagTypeLinkedList_st** %Anterior to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %36 = bitcast %struct._cmsTagTypeLinkedList_st** %entry1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = bitcast %struct._cmsTagTypePluginChunkType* %newHead to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #2
  %cleanup.dest.21 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.21, label %unreachable [
    i32 0, label %cleanup.cont.22
    i32 1, label %cleanup.cont.22
  ]

cleanup.cont.22:                                  ; preds = %cleanup.17, %cleanup.17
  ret void

unreachable:                                      ; preds = %cleanup.17
  unreachable
}

declare i8* @_cmsSubAllocDup(%struct._cmsSubAllocator*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define void @_cmsAllocMPETypePluginChunk(%struct._cmsContext_struct* %ctx, %struct._cmsContext_struct* %src) #0 {
entry:
  %ctx.addr = alloca %struct._cmsContext_struct*, align 8
  %src.addr = alloca %struct._cmsContext_struct*, align 8
  store %struct._cmsContext_struct* %ctx, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  store %struct._cmsContext_struct* %src, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsContext_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  call void @DupTagTypeList(%struct._cmsContext_struct* %1, %struct._cmsContext_struct* %2, i32 11) #7
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i32 0, i32 1
  %4 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool, align 8, !tbaa !5
  %call = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %4, i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsAllocMPETypePluginChunk.TagTypePluginChunk to i8*), i32 8) #7
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %chunks = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %5, i32 0, i32 2
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks, i32 0, i64 11
  store i8* %call, i8** %arrayidx, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @_cmsRegisterTagTypePlugin(%struct._cmsContext_struct* %id, %struct._cmsPluginBaseStruct* %Data) #0 {
entry:
  %id.addr = alloca %struct._cmsContext_struct*, align 8
  %Data.addr = alloca %struct._cmsPluginBaseStruct*, align 8
  store %struct._cmsContext_struct* %id, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  store %struct._cmsPluginBaseStruct* %Data, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %1 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %call = call i32 @RegisterTypesPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* %1, i32 8) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @RegisterTypesPlugin(%struct._cmsContext_struct* %id, %struct._cmsPluginBaseStruct* %Data, i32 %pos) #0 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca %struct._cmsContext_struct*, align 8
  %Data.addr = alloca %struct._cmsPluginBaseStruct*, align 8
  %pos.addr = alloca i32, align 4
  %Plugin = alloca %struct.cmsPluginTagType*, align 8
  %ctx = alloca %struct._cmsTagTypePluginChunkType*, align 8
  %pt = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %id, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  store %struct._cmsPluginBaseStruct* %Data, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  store i32 %pos, i32* %pos.addr, align 4, !tbaa !15
  %0 = bitcast %struct.cmsPluginTagType** %Plugin to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %2 = bitcast %struct._cmsPluginBaseStruct* %1 to %struct.cmsPluginTagType*
  store %struct.cmsPluginTagType* %2, %struct.cmsPluginTagType** %Plugin, align 8, !tbaa !1
  %3 = bitcast %struct._cmsTagTypePluginChunkType** %ctx to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %5 = load i32, i32* %pos.addr, align 4, !tbaa !15
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %4, i32 %5) #7
  %6 = bitcast i8* %call to %struct._cmsTagTypePluginChunkType*
  store %struct._cmsTagTypePluginChunkType* %6, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %7 = bitcast %struct._cmsTagTypeLinkedList_st** %pt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct._cmsPluginBaseStruct* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %TagTypes = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %9, i32 0, i32 0
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %TagTypes, align 8, !tbaa !10
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %call1 = call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %10, i32 64) #7
  %11 = bitcast i8* %call1 to %struct._cmsTagTypeLinkedList_st*
  store %struct._cmsTagTypeLinkedList_st* %11, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %12 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %cmp2 = icmp eq %struct._cmsTagTypeLinkedList_st* %12, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %13 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Handler = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %13, i32 0, i32 0
  %14 = load %struct.cmsPluginTagType*, %struct.cmsPluginTagType** %Plugin, align 8, !tbaa !1
  %Handler5 = getelementptr inbounds %struct.cmsPluginTagType, %struct.cmsPluginTagType* %14, i32 0, i32 1
  %15 = bitcast %struct._cms_typehandler_struct* %Handler to i8*
  %16 = bitcast %struct._cms_typehandler_struct* %Handler5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 56, i32 8, i1 false), !tbaa.struct !16
  %17 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %TagTypes6 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %17, i32 0, i32 0
  %18 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes6, align 8, !tbaa !10
  %19 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %19, i32 0, i32 1
  store %struct._cmsTagTypeLinkedList_st* %18, %struct._cmsTagTypeLinkedList_st** %Next, align 8, !tbaa !12
  %20 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %21 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %TagTypes7 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %21, i32 0, i32 0
  store %struct._cmsTagTypeLinkedList_st* %20, %struct._cmsTagTypeLinkedList_st** %TagTypes7, align 8, !tbaa !10
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %22 = bitcast %struct._cmsTagTypeLinkedList_st** %pt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #2
  %23 = bitcast %struct._cmsTagTypePluginChunkType** %ctx to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #2
  %24 = bitcast %struct.cmsPluginTagType** %Plugin to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define i32 @_cmsRegisterMultiProcessElementPlugin(%struct._cmsContext_struct* %id, %struct._cmsPluginBaseStruct* %Data) #0 {
entry:
  %id.addr = alloca %struct._cmsContext_struct*, align 8
  %Data.addr = alloca %struct._cmsPluginBaseStruct*, align 8
  store %struct._cmsContext_struct* %id, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  store %struct._cmsPluginBaseStruct* %Data, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %1 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %call = call i32 @RegisterTypesPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* %1, i32 11) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define %struct._cms_typehandler_struct* @_cmsGetTagTypeHandler(%struct._cmsContext_struct* %ContextID, i32 %sig) #0 {
entry:
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %sig.addr = alloca i32, align 4
  %ctx = alloca %struct._cmsTagTypePluginChunkType*, align 8
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !15
  %0 = bitcast %struct._cmsTagTypePluginChunkType** %ctx to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %1, i32 8) #7
  %2 = bitcast i8* %call to %struct._cmsTagTypePluginChunkType*
  store %struct._cmsTagTypePluginChunkType* %2, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %3 = load i32, i32* %sig.addr, align 4, !tbaa !15
  %4 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %ctx, align 8, !tbaa !1
  %TagTypes = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %4, i32 0, i32 0
  %5 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes, align 8, !tbaa !10
  %call1 = call %struct._cms_typehandler_struct* @GetHandler(i32 %3, %struct._cmsTagTypeLinkedList_st* %5, %struct._cmsTagTypeLinkedList_st* getelementptr inbounds ([31 x %struct._cmsTagTypeLinkedList_st], [31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes, i32 0, i32 0)) #7
  %6 = bitcast %struct._cmsTagTypePluginChunkType** %ctx to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6) #2
  ret %struct._cms_typehandler_struct* %call1
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct._cms_typehandler_struct* @GetHandler(i32 %sig, %struct._cmsTagTypeLinkedList_st* %PluginLinkedList, %struct._cmsTagTypeLinkedList_st* %DefaultLinkedList) #0 {
entry:
  %retval = alloca %struct._cms_typehandler_struct*, align 8
  %sig.addr = alloca i32, align 4
  %PluginLinkedList.addr = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %DefaultLinkedList.addr = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %pt = alloca %struct._cmsTagTypeLinkedList_st*, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !15
  store %struct._cmsTagTypeLinkedList_st* %PluginLinkedList, %struct._cmsTagTypeLinkedList_st** %PluginLinkedList.addr, align 8, !tbaa !1
  store %struct._cmsTagTypeLinkedList_st* %DefaultLinkedList, %struct._cmsTagTypeLinkedList_st** %DefaultLinkedList.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cmsTagTypeLinkedList_st** %pt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %PluginLinkedList.addr, align 8, !tbaa !1
  store %struct._cmsTagTypeLinkedList_st* %1, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsTagTypeLinkedList_st* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %sig.addr, align 4, !tbaa !15
  %4 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Handler = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %4, i32 0, i32 0
  %Signature = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %Handler, i32 0, i32 0
  %5 = load i32, i32* %Signature, align 4, !tbaa !17
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %6 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Handler2 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %6, i32 0, i32 0
  store %struct._cms_typehandler_struct* %Handler2, %struct._cms_typehandler_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %7, i32 0, i32 1
  %8 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %Next, align 8, !tbaa !12
  store %struct._cmsTagTypeLinkedList_st* %8, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %DefaultLinkedList.addr, align 8, !tbaa !1
  store %struct._cmsTagTypeLinkedList_st* %9, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc.12, %for.end
  %10 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %cmp4 = icmp ne %struct._cmsTagTypeLinkedList_st* %10, null
  br i1 %cmp4, label %for.body.5, label %for.end.14

for.body.5:                                       ; preds = %for.cond.3
  %11 = load i32, i32* %sig.addr, align 4, !tbaa !15
  %12 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Handler6 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %12, i32 0, i32 0
  %Signature7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %Handler6, i32 0, i32 0
  %13 = load i32, i32* %Signature7, align 4, !tbaa !17
  %cmp8 = icmp eq i32 %11, %13
  br i1 %cmp8, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %for.body.5
  %14 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Handler10 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %14, i32 0, i32 0
  store %struct._cms_typehandler_struct* %Handler10, %struct._cms_typehandler_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %for.body.5
  br label %for.inc.12

for.inc.12:                                       ; preds = %if.end.11
  %15 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  %Next13 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %15, i32 0, i32 1
  %16 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %Next13, align 8, !tbaa !12
  store %struct._cmsTagTypeLinkedList_st* %16, %struct._cmsTagTypeLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond.3

for.end.14:                                       ; preds = %for.cond.3
  store %struct._cms_typehandler_struct* null, %struct._cms_typehandler_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.14, %if.then.9, %if.then
  %17 = bitcast %struct._cmsTagTypeLinkedList_st** %pt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #2
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %retval
  ret %struct._cms_typehandler_struct* %18
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @_cmsAllocTagPluginChunk(%struct._cmsContext_struct* %ctx, %struct._cmsContext_struct* %src) #0 {
entry:
  %ctx.addr = alloca %struct._cmsContext_struct*, align 8
  %src.addr = alloca %struct._cmsContext_struct*, align 8
  store %struct._cmsContext_struct* %ctx, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  store %struct._cmsContext_struct* %src, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsContext_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  call void @DupTagList(%struct._cmsContext_struct* %1, %struct._cmsContext_struct* %2) #7
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i32 0, i32 1
  %4 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool, align 8, !tbaa !5
  %call = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %4, i8* bitcast (%struct._cmsTagPluginChunkType* @_cmsAllocTagPluginChunk.TagPluginChunk to i8*), i32 8) #7
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %chunks = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %5, i32 0, i32 2
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks, i32 0, i64 9
  store i8* %call, i8** %arrayidx, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DupTagList(%struct._cmsContext_struct* %ctx, %struct._cmsContext_struct* %src) #0 {
entry:
  %ctx.addr = alloca %struct._cmsContext_struct*, align 8
  %src.addr = alloca %struct._cmsContext_struct*, align 8
  %newHead = alloca %struct._cmsTagPluginChunkType, align 8
  %entry1 = alloca %struct._cmsTagLinkedList_st*, align 8
  %Anterior = alloca %struct._cmsTagLinkedList_st*, align 8
  %head = alloca %struct._cmsTagPluginChunkType*, align 8
  %newEntry = alloca %struct._cmsTagLinkedList_st*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ctx, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  store %struct._cmsContext_struct* %src, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cmsTagPluginChunkType* %newHead to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast %struct._cmsTagPluginChunkType* %newHead to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8, i32 8, i1 false)
  %2 = bitcast %struct._cmsTagLinkedList_st** %entry1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast %struct._cmsTagLinkedList_st** %Anterior to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  store %struct._cmsTagLinkedList_st* null, %struct._cmsTagLinkedList_st** %Anterior, align 8, !tbaa !1
  %4 = bitcast %struct._cmsTagPluginChunkType** %head to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %src.addr, align 8, !tbaa !1
  %chunks = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %5, i32 0, i32 2
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks, i32 0, i64 9
  %6 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %7 = bitcast i8* %6 to %struct._cmsTagPluginChunkType*
  store %struct._cmsTagPluginChunkType* %7, %struct._cmsTagPluginChunkType** %head, align 8, !tbaa !1
  %8 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %head, align 8, !tbaa !1
  %Tag = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %8, i32 0, i32 0
  %9 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Tag, align 8, !tbaa !10
  store %struct._cmsTagLinkedList_st* %9, %struct._cmsTagLinkedList_st** %entry1, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %entry1, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsTagLinkedList_st* %10, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = bitcast %struct._cmsTagLinkedList_st** %newEntry to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %12, i32 0, i32 1
  %13 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool, align 8, !tbaa !5
  %14 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %entry1, align 8, !tbaa !1
  %15 = bitcast %struct._cmsTagLinkedList_st* %14 to i8*
  %call = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %13, i8* %15, i32 112) #7
  %16 = bitcast i8* %call to %struct._cmsTagLinkedList_st*
  store %struct._cmsTagLinkedList_st* %16, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  %17 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  %cmp2 = icmp eq %struct._cmsTagLinkedList_st* %17, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %18 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %18, i32 0, i32 2
  store %struct._cmsTagLinkedList_st* null, %struct._cmsTagLinkedList_st** %Next, align 8, !tbaa !18
  %19 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Anterior, align 8, !tbaa !1
  %tobool = icmp ne %struct._cmsTagLinkedList_st* %19, null
  br i1 %tobool, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %20 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  %21 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Anterior, align 8, !tbaa !1
  %Next4 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %21, i32 0, i32 2
  store %struct._cmsTagLinkedList_st* %20, %struct._cmsTagLinkedList_st** %Next4, align 8, !tbaa !18
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  %22 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  store %struct._cmsTagLinkedList_st* %22, %struct._cmsTagLinkedList_st** %Anterior, align 8, !tbaa !1
  %Tag6 = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %newHead, i32 0, i32 0
  %23 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Tag6, align 8, !tbaa !10
  %cmp7 = icmp eq %struct._cmsTagLinkedList_st* %23, null
  br i1 %cmp7, label %if.then.8, label %if.end.10

if.then.8:                                        ; preds = %if.end.5
  %24 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %newEntry, align 8, !tbaa !1
  %Tag9 = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %newHead, i32 0, i32 0
  store %struct._cmsTagLinkedList_st* %24, %struct._cmsTagLinkedList_st** %Tag9, align 8, !tbaa !10
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.8, %if.end.5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then
  %25 = bitcast %struct._cmsTagLinkedList_st** %newEntry to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.16 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %26 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %entry1, align 8, !tbaa !1
  %Next11 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %26, i32 0, i32 2
  %27 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Next11, align 8, !tbaa !18
  store %struct._cmsTagLinkedList_st* %27, %struct._cmsTagLinkedList_st** %entry1, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %MemPool12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %28, i32 0, i32 1
  %29 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %MemPool12, align 8, !tbaa !5
  %30 = bitcast %struct._cmsTagPluginChunkType* %newHead to i8*
  %call13 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %29, i8* %30, i32 8) #7
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ctx.addr, align 8, !tbaa !1
  %chunks14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %31, i32 0, i32 2
  %arrayidx15 = getelementptr inbounds [15 x i8*], [15 x i8*]* %chunks14, i32 0, i64 9
  store i8* %call13, i8** %arrayidx15, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.16

cleanup.16:                                       ; preds = %for.end, %cleanup
  %32 = bitcast %struct._cmsTagPluginChunkType** %head to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #2
  %33 = bitcast %struct._cmsTagLinkedList_st** %Anterior to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %34 = bitcast %struct._cmsTagLinkedList_st** %entry1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #2
  %35 = bitcast %struct._cmsTagPluginChunkType* %newHead to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %cleanup.dest.20 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.20, label %unreachable [
    i32 0, label %cleanup.cont.21
    i32 1, label %cleanup.cont.21
  ]

cleanup.cont.21:                                  ; preds = %cleanup.16, %cleanup.16
  ret void

unreachable:                                      ; preds = %cleanup.16
  unreachable
}

; Function Attrs: nounwind uwtable
define i32 @_cmsRegisterTagPlugin(%struct._cmsContext_struct* %id, %struct._cmsPluginBaseStruct* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca %struct._cmsContext_struct*, align 8
  %Data.addr = alloca %struct._cmsPluginBaseStruct*, align 8
  %Plugin = alloca %struct.cmsPluginTag*, align 8
  %pt = alloca %struct._cmsTagLinkedList_st*, align 8
  %TagPluginChunk = alloca %struct._cmsTagPluginChunkType*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %id, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  store %struct._cmsPluginBaseStruct* %Data, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %0 = bitcast %struct.cmsPluginTag** %Plugin to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %2 = bitcast %struct._cmsPluginBaseStruct* %1 to %struct.cmsPluginTag*
  store %struct.cmsPluginTag* %2, %struct.cmsPluginTag** %Plugin, align 8, !tbaa !1
  %3 = bitcast %struct._cmsTagLinkedList_st** %pt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast %struct._cmsTagPluginChunkType** %TagPluginChunk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %5, i32 9) #7
  %6 = bitcast i8* %call to %struct._cmsTagPluginChunkType*
  store %struct._cmsTagPluginChunkType* %6, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %7 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %Data.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct._cmsPluginBaseStruct* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %Tag = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %8, i32 0, i32 0
  store %struct._cmsTagLinkedList_st* null, %struct._cmsTagLinkedList_st** %Tag, align 8, !tbaa !10
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %id.addr, align 8, !tbaa !1
  %call1 = call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %9, i32 112) #7
  %10 = bitcast i8* %call1 to %struct._cmsTagLinkedList_st*
  store %struct._cmsTagLinkedList_st* %10, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %11 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %cmp2 = icmp eq %struct._cmsTagLinkedList_st* %11, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.cmsPluginTag*, %struct.cmsPluginTag** %Plugin, align 8, !tbaa !1
  %Signature = getelementptr inbounds %struct.cmsPluginTag, %struct.cmsPluginTag* %12, i32 0, i32 1
  %13 = load i32, i32* %Signature, align 4, !tbaa !21
  %14 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Signature5 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %14, i32 0, i32 0
  store i32 %13, i32* %Signature5, align 4, !tbaa !24
  %15 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Descriptor = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %15, i32 0, i32 1
  %16 = load %struct.cmsPluginTag*, %struct.cmsPluginTag** %Plugin, align 8, !tbaa !1
  %Descriptor6 = getelementptr inbounds %struct.cmsPluginTag, %struct.cmsPluginTag* %16, i32 0, i32 2
  %17 = bitcast %struct.cmsTagDescriptor* %Descriptor to i8*
  %18 = bitcast %struct.cmsTagDescriptor* %Descriptor6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 96, i32 8, i1 false), !tbaa.struct !25
  %19 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %Tag7 = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %19, i32 0, i32 0
  %20 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Tag7, align 8, !tbaa !10
  %21 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %21, i32 0, i32 2
  store %struct._cmsTagLinkedList_st* %20, %struct._cmsTagLinkedList_st** %Next, align 8, !tbaa !18
  %22 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %23 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %Tag8 = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %23, i32 0, i32 0
  store %struct._cmsTagLinkedList_st* %22, %struct._cmsTagLinkedList_st** %Tag8, align 8, !tbaa !10
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %24 = bitcast %struct._cmsTagPluginChunkType** %TagPluginChunk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = bitcast %struct._cmsTagLinkedList_st** %pt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = bitcast %struct.cmsPluginTag** %Plugin to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #2
  %27 = load i32, i32* %retval
  ret i32 %27
}

declare i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define %struct.cmsTagDescriptor* @_cmsGetTagDescriptor(%struct._cmsContext_struct* %ContextID, i32 %sig) #0 {
entry:
  %retval = alloca %struct.cmsTagDescriptor*, align 8
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %sig.addr = alloca i32, align 4
  %pt = alloca %struct._cmsTagLinkedList_st*, align 8
  %TagPluginChunk = alloca %struct._cmsTagPluginChunkType*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !15
  %0 = bitcast %struct._cmsTagLinkedList_st** %pt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast %struct._cmsTagPluginChunkType** %TagPluginChunk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %2, i32 9) #7
  %3 = bitcast i8* %call to %struct._cmsTagPluginChunkType*
  store %struct._cmsTagPluginChunkType* %3, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %4 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %TagPluginChunk, align 8, !tbaa !1
  %Tag = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %4, i32 0, i32 0
  %5 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Tag, align 8, !tbaa !10
  store %struct._cmsTagLinkedList_st* %5, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsTagLinkedList_st* %6, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %sig.addr, align 4, !tbaa !15
  %8 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Signature = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %8, i32 0, i32 0
  %9 = load i32, i32* %Signature, align 4, !tbaa !24
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Descriptor = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %10, i32 0, i32 1
  store %struct.cmsTagDescriptor* %Descriptor, %struct.cmsTagDescriptor** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %11, i32 0, i32 2
  %12 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Next, align 8, !tbaa !18
  store %struct._cmsTagLinkedList_st* %12, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct._cmsTagLinkedList_st* getelementptr inbounds ([63 x %struct._cmsTagLinkedList_st], [63 x %struct._cmsTagLinkedList_st]* @SupportedTags, i32 0, i32 0), %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc.10, %for.end
  %13 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %cmp3 = icmp ne %struct._cmsTagLinkedList_st* %13, null
  br i1 %cmp3, label %for.body.4, label %for.end.12

for.body.4:                                       ; preds = %for.cond.2
  %14 = load i32, i32* %sig.addr, align 4, !tbaa !15
  %15 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Signature5 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %15, i32 0, i32 0
  %16 = load i32, i32* %Signature5, align 4, !tbaa !24
  %cmp6 = icmp eq i32 %14, %16
  br i1 %cmp6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %for.body.4
  %17 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Descriptor8 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %17, i32 0, i32 1
  store %struct.cmsTagDescriptor* %Descriptor8, %struct.cmsTagDescriptor** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %for.body.4
  br label %for.inc.10

for.inc.10:                                       ; preds = %if.end.9
  %18 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  %Next11 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %18, i32 0, i32 2
  %19 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %Next11, align 8, !tbaa !18
  store %struct._cmsTagLinkedList_st* %19, %struct._cmsTagLinkedList_st** %pt, align 8, !tbaa !1
  br label %for.cond.2

for.end.12:                                       ; preds = %for.cond.2
  store %struct.cmsTagDescriptor* null, %struct.cmsTagDescriptor** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.12, %if.then.7, %if.then
  %20 = bitcast %struct._cmsTagPluginChunkType** %TagPluginChunk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %20) #2
  %21 = bitcast %struct._cmsTagLinkedList_st** %pt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21) #2
  %22 = load %struct.cmsTagDescriptor*, %struct.cmsTagDescriptor** %retval
  ret %struct.cmsTagDescriptor* %22
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i8* @Type_Chromaticity_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %chrm = alloca %struct.cmsCIExyYTRIPLE*, align 8
  %nChans = alloca i16, align 2
  %Table = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsCIExyYTRIPLE** %chrm to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i16* %nChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i16* %Table to i8*
  call void @llvm.lifetime.start(i64 2, i8* %2) #2
  %3 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !8
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %4, i32 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %5, i32 72) #7
  %6 = bitcast i8* %call to %struct.cmsCIExyYTRIPLE*
  store %struct.cmsCIExyYTRIPLE* %6, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %7 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsCIExyYTRIPLE* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %8, i16* %nChans) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  br label %Error

if.end.3:                                         ; preds = %if.end
  %9 = load i16, i16* %nChans, align 2, !tbaa !27
  %conv = zext i16 %9 to i32
  %cmp4 = icmp eq i32 %conv, 0
  br i1 %cmp4, label %land.lhs.true, label %if.end.17

land.lhs.true:                                    ; preds = %if.end.3
  %10 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp6 = icmp eq i32 %10, 32
  br i1 %cmp6, label %if.then.8, label %if.end.17

if.then.8:                                        ; preds = %land.lhs.true
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call9 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %11, i16* null) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.then.8
  br label %Error

if.end.12:                                        ; preds = %if.then.8
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call13 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %12, i16* %nChans) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  br label %Error

if.end.16:                                        ; preds = %if.end.12
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %land.lhs.true, %if.end.3
  %13 = load i16, i16* %nChans, align 2, !tbaa !27
  %conv18 = zext i16 %13 to i32
  %cmp19 = icmp ne i32 %conv18, 3
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.17
  br label %Error

if.end.22:                                        ; preds = %if.end.17
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call23 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %14, i16* %Table) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.22
  br label %Error

if.end.26:                                        ; preds = %if.end.22
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %16 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Red = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %16, i32 0, i32 0
  %x = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Red, i32 0, i32 0
  %call27 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %15, double* %x) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  br label %Error

if.end.30:                                        ; preds = %if.end.26
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Red31 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %18, i32 0, i32 0
  %y = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Red31, i32 0, i32 1
  %call32 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %17, double* %y) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.30
  br label %Error

if.end.35:                                        ; preds = %if.end.30
  %19 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Red36 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %19, i32 0, i32 0
  %Y = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Red36, i32 0, i32 2
  store double 1.000000e+00, double* %Y, align 8, !tbaa !29
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Green = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %21, i32 0, i32 1
  %x37 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Green, i32 0, i32 0
  %call38 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %20, double* %x37) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.35
  br label %Error

if.end.41:                                        ; preds = %if.end.35
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %23 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Green42 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %23, i32 0, i32 1
  %y43 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Green42, i32 0, i32 1
  %call44 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %22, double* %y43) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.end.41
  br label %Error

if.end.47:                                        ; preds = %if.end.41
  %24 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Green48 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %24, i32 0, i32 1
  %Y49 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Green48, i32 0, i32 2
  store double 1.000000e+00, double* %Y49, align 8, !tbaa !33
  %25 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %26 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Blue = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %26, i32 0, i32 2
  %x50 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Blue, i32 0, i32 0
  %call51 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %25, double* %x50) #7
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.end.47
  br label %Error

if.end.54:                                        ; preds = %if.end.47
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %28 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Blue55 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %28, i32 0, i32 2
  %y56 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Blue55, i32 0, i32 1
  %call57 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %27, double* %y56) #7
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %if.end.54
  br label %Error

if.end.60:                                        ; preds = %if.end.54
  %29 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Blue61 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %29, i32 0, i32 2
  %Y62 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Blue61, i32 0, i32 2
  store double 1.000000e+00, double* %Y62, align 8, !tbaa !34
  %30 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %30, align 4, !tbaa !8
  %31 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %32 = bitcast %struct.cmsCIExyYTRIPLE* %31 to i8*
  store i8* %32, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.59, %if.then.53, %if.then.46, %if.then.40, %if.then.34, %if.then.29, %if.then.25, %if.then.21, %if.then.15, %if.then.11, %if.then.2
  %33 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID63 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %33, i32 0, i32 5
  %34 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID63, align 8, !tbaa !26
  %35 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %36 = bitcast %struct.cmsCIExyYTRIPLE* %35 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %34, i8* %36) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.60, %if.then
  %37 = bitcast i16* %Table to i8*
  call void @llvm.lifetime.end(i64 2, i8* %37) #2
  %38 = bitcast i16* %nChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %38) #2
  %39 = bitcast %struct.cmsCIExyYTRIPLE** %chrm to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #2
  %40 = load i8*, i8** %retval
  ret i8* %40
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Chromaticity_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %chrm = alloca %struct.cmsCIExyYTRIPLE*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsCIExyYTRIPLE** %chrm to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsCIExyYTRIPLE*
  store %struct.cmsCIExyYTRIPLE* %2, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %3, i16 zeroext 3) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %4, i16 zeroext 0) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Red = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %5, i32 0, i32 0
  %x = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Red, i32 0, i32 0
  %6 = load double, double* %x, align 8, !tbaa !35
  %7 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Red5 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %7, i32 0, i32 0
  %y = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Red5, i32 0, i32 1
  %8 = load double, double* %y, align 8, !tbaa !36
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call6 = call i32 @SaveOneChromaticity(double %6, double %8, %struct._cms_io_handler* %9) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.4
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.4
  %10 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Green = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %10, i32 0, i32 1
  %x10 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Green, i32 0, i32 0
  %11 = load double, double* %x10, align 8, !tbaa !37
  %12 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Green11 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %12, i32 0, i32 1
  %y12 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Green11, i32 0, i32 1
  %13 = load double, double* %y12, align 8, !tbaa !38
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call13 = call i32 @SaveOneChromaticity(double %11, double %13, %struct._cms_io_handler* %14) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.9
  %15 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Blue = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %15, i32 0, i32 2
  %x17 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Blue, i32 0, i32 0
  %16 = load double, double* %x17, align 8, !tbaa !39
  %17 = load %struct.cmsCIExyYTRIPLE*, %struct.cmsCIExyYTRIPLE** %chrm, align 8, !tbaa !1
  %Blue18 = getelementptr inbounds %struct.cmsCIExyYTRIPLE, %struct.cmsCIExyYTRIPLE* %17, i32 0, i32 2
  %y19 = getelementptr inbounds %struct.cmsCIExyY, %struct.cmsCIExyY* %Blue18, i32 0, i32 1
  %18 = load double, double* %y19, align 8, !tbaa !40
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call20 = call i32 @SaveOneChromaticity(double %16, double %18, %struct._cms_io_handler* %19) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.16
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %if.then.22, %if.then.15, %if.then.8, %if.then.3, %if.then
  %20 = bitcast %struct.cmsCIExyYTRIPLE** %chrm to i8*
  call void @llvm.lifetime.end(i64 8, i8* %20) #2
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Chromaticity_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 72) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Chromaticity_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ColorantOrderType_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %ColorantOrder = alloca i8*, align 8
  %Count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i8** %ColorantOrder to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %2, align 4, !tbaa !8
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %3, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp = icmp ugt i32 %4, 16
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.2:                                         ; preds = %if.end
  %5 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %5, i32 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call3 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %6, i32 16, i32 1) #7
  store i8* %call3, i8** %ColorantOrder, align 8, !tbaa !1
  %7 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  %cmp4 = icmp eq i8* %7, null
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end.2
  %8 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  %call7 = call i8* @memset(i8* %8, i32 255, i64 16) #8
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %9, i32 0, i32 5
  %10 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  %13 = load i32, i32* %Count, align 4, !tbaa !8
  %call8 = call i32 %10(%struct._cms_io_handler* %11, i8* %12, i32 1, i32 %13) #7
  %14 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp9 = icmp ne i32 %call8, %14
  br i1 %cmp9, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end.6
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID11 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID11, align 8, !tbaa !26
  %17 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %16, i8* %17) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.6
  %18 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %18, align 4, !tbaa !8
  %19 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  store i8* %19, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then.10, %if.then.5, %if.then.1, %if.then
  %20 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #2
  %21 = bitcast i8** %ColorantOrder to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21) #2
  %22 = load i8*, i8** %retval
  ret i8* %22
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ColorantOrderType_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %ColorantOrder = alloca i8*, align 8
  %i = alloca i32, align 4
  %sz = alloca i32, align 4
  %Count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i8** %ColorantOrder to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  store i8* %1, i8** %ColorantOrder, align 8, !tbaa !1
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %sz to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  store i32 0, i32* %Count, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !tbaa !8
  %cmp = icmp ult i32 %5, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %6 to i64
  %7 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv = zext i8 %8 to i32
  %cmp1 = icmp ne i32 %conv, 255
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %Count, align 4, !tbaa !8
  %inc = add i32 %9, 1
  store i32 %inc, i32* %Count, align 4, !tbaa !8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %inc3 = add i32 %10, 1
  store i32 %inc3, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load i32, i32* %Count, align 4, !tbaa !8
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %11, i32 %12) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %for.end
  %13 = load i32, i32* %Count, align 4, !tbaa !8
  %conv6 = zext i32 %13 to i64
  %mul = mul i64 %conv6, 1
  %conv7 = trunc i64 %mul to i32
  store i32 %conv7, i32* %sz, align 4, !tbaa !8
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %14, i32 0, i32 9
  %15 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load i32, i32* %sz, align 4, !tbaa !8
  %18 = load i8*, i8** %ColorantOrder, align 8, !tbaa !1
  %call8 = call i32 %15(%struct._cms_io_handler* %16, i32 %17, i8* %18) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.11, %if.then.10, %if.then.4
  %19 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #2
  %20 = bitcast i32* %sz to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #2
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #2
  %22 = bitcast i8** %ColorantOrder to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #2
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ColorantOrderType_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 16) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_ColorantOrderType_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_S15Fixed16_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %array_double = alloca double*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast double** %array_double to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !8
  %4 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %4 to i64
  %div = udiv i64 %conv, 4
  %conv1 = trunc i64 %div to i32
  store i32 %conv1, i32* %n, align 4, !tbaa !8
  %5 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %5, i32 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %7 = load i32, i32* %n, align 4, !tbaa !8
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %6, i32 %7, i32 8) #7
  %8 = bitcast i8* %call to double*
  store double* %8, double** %array_double, align 8, !tbaa !1
  %9 = load double*, double** %array_double, align 8, !tbaa !1
  %cmp = icmp eq double* %9, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %11 = load i32, i32* %n, align 4, !tbaa !8
  %cmp3 = icmp ult i32 %10, %11
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %13 to i64
  %14 = load double*, double** %array_double, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds double, double* %14, i64 %idxprom
  %call5 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %12, double* %arrayidx) #7
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end.8, label %if.then.6

if.then.6:                                        ; preds = %for.body
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID7, align 8, !tbaa !26
  %17 = load double*, double** %array_double, align 8, !tbaa !1
  %18 = bitcast double* %17 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %16, i8* %18) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %19, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %n, align 4, !tbaa !8
  %21 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %20, i32* %21, align 4, !tbaa !8
  %22 = load double*, double** %array_double, align 8, !tbaa !1
  %23 = bitcast double* %22 to i8*
  store i8* %23, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.6, %if.then
  %24 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #2
  %25 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #2
  %26 = bitcast double** %array_double to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #2
  %27 = load i8*, i8** %retval
  ret i8* %27
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_S15Fixed16_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Value = alloca double*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast double** %Value to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to double*
  store double* %2, double** %Value, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !8
  %5 = load i32, i32* %nItems.addr, align 4, !tbaa !8
  %cmp = icmp ult i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %7 to i64
  %8 = load double*, double** %Value, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds double, double* %8, i64 %idxprom
  %9 = load double, double* %arrayidx, align 8, !tbaa !44
  %call = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %6, double %9) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %10, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %11 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %11) #2
  %12 = bitcast double** %Value to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_S15Fixed16_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %3 = load i32, i32* %n.addr, align 4, !tbaa !8
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 8
  %conv1 = trunc i64 %mul to i32
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 %conv1) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_S15Fixed16_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_U16Fixed16_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %array_double = alloca double*, align 8
  %v = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast double** %array_double to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %4, align 4, !tbaa !8
  %5 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %5 to i64
  %div = udiv i64 %conv, 4
  %conv1 = trunc i64 %div to i32
  store i32 %conv1, i32* %n, align 4, !tbaa !8
  %6 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %6, i32 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %8 = load i32, i32* %n, align 4, !tbaa !8
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %7, i32 %8, i32 8) #7
  %9 = bitcast i8* %call to double*
  store double* %9, double** %array_double, align 8, !tbaa !1
  %10 = load double*, double** %array_double, align 8, !tbaa !1
  %cmp = icmp eq double* %10, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !tbaa !8
  %12 = load i32, i32* %n, align 4, !tbaa !8
  %cmp3 = icmp ult i32 %11, %12
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call5 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %13, i32* %v) #7
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end.8, label %if.then.6

if.then.6:                                        ; preds = %for.body
  %14 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %14, i32 0, i32 5
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID7, align 8, !tbaa !26
  %16 = load double*, double** %array_double, align 8, !tbaa !1
  %17 = bitcast double* %16 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %15, i8* %17) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %for.body
  %18 = load i32, i32* %v, align 4, !tbaa !8
  %conv9 = uitofp i32 %18 to double
  %div10 = fdiv double %conv9, 6.553600e+04
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %19 to i64
  %20 = load double*, double** %array_double, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds double, double* %20, i64 %idxprom
  store double %div10, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %21 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %21, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %n, align 4, !tbaa !8
  %23 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %22, i32* %23, align 4, !tbaa !8
  %24 = load double*, double** %array_double, align 8, !tbaa !1
  %25 = bitcast double* %24 to i8*
  store i8* %25, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.6, %if.then
  %26 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast double** %array_double to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #2
  %30 = load i8*, i8** %retval
  ret i8* %30
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_U16Fixed16_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Value = alloca double*, align 8
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast double** %Value to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to double*
  store double* %2, double** %Value, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !8
  %5 = load i32, i32* %nItems.addr, align 4, !tbaa !8
  %cmp = icmp ult i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %7 to i64
  %8 = load double*, double** %Value, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds double, double* %8, i64 %idxprom
  %9 = load double, double* %arrayidx, align 8, !tbaa !44
  %mul = fmul double %9, 6.553600e+04
  %add = fadd double %mul, 5.000000e-01
  %call = call double @floor(double %add) #9
  %conv = fptoui double %call to i32
  store i32 %conv, i32* %v, align 4, !tbaa !8
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load i32, i32* %v, align 4, !tbaa !8
  %call1 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %10, i32 %11) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.2 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2

cleanup.2:                                        ; preds = %for.end, %cleanup
  %14 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #2
  %15 = bitcast double** %Value to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = load i32, i32* %retval
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_U16Fixed16_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %3 = load i32, i32* %n.addr, align 4, !tbaa !8
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 8
  %conv1 = trunc i64 %mul to i32
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 %conv1) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_U16Fixed16_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Text_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %Text = alloca i8*, align 8
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store i8* null, i8** %Text, align 8, !tbaa !1
  %1 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  store %struct._cms_MLU_struct* null, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %2 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %2, i32 0, i32 5
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %3, i32 1) #7
  store %struct._cms_MLU_struct* %call, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %4 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %cmp = icmp eq %struct._cms_MLU_struct* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !8
  %6 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp1 = icmp eq i32 %6, -1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  br label %Error

if.end.3:                                         ; preds = %if.end
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %7, i32 0, i32 5
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID4, align 8, !tbaa !26
  %9 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %add = add i32 %9, 1
  %call5 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %8, i32 %add) #7
  store i8* %call5, i8** %Text, align 8, !tbaa !1
  %10 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp6 = icmp eq i8* %10, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.3
  br label %Error

if.end.8:                                         ; preds = %if.end.3
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %11, i32 0, i32 5
  %12 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load i8*, i8** %Text, align 8, !tbaa !1
  %15 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call9 = call i32 %12(%struct._cms_io_handler* %13, i8* %14, i32 1, i32 %15) #7
  %16 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp10 = icmp ne i32 %call9, %16
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  br label %Error

if.end.12:                                        ; preds = %if.end.8
  %17 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %idxprom = zext i32 %17 to i64
  %18 = load i8*, i8** %Text, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %19 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %19, align 4, !tbaa !8
  %20 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %21 = load i8*, i8** %Text, align 8, !tbaa !1
  %call13 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %21) #7
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.12
  br label %Error

if.end.15:                                        ; preds = %if.end.12
  %22 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID16 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %22, i32 0, i32 5
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID16, align 8, !tbaa !26
  %24 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %23, i8* %24) #7
  %25 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %26 = bitcast %struct._cms_MLU_struct* %25 to i8*
  store i8* %26, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.14, %if.then.11, %if.then.7, %if.then.2
  %27 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %cmp17 = icmp ne %struct._cms_MLU_struct* %27, null
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %Error
  %28 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %28) #7
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.18, %Error
  %29 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp20 = icmp ne i8* %29, null
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.end.19
  %30 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID22 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %30, i32 0, i32 5
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID22, align 8, !tbaa !26
  %32 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %31, i8* %32) #7
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %if.end.19
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %if.end.15, %if.then
  %33 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %34 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #2
  %35 = load i8*, i8** %retval
  ret i8* %35
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Text_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %size = alloca i32, align 4
  %rc = alloca i32, align 4
  %Text = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = bitcast i32* %size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* null, i32 0) #7
  store i32 %call, i32* %size, align 4, !tbaa !8
  %7 = load i32, i32* %size, align 4, !tbaa !8
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %8, i32 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %10 = load i32, i32* %size, align 4, !tbaa !8
  %call1 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %9, i32 %10) #7
  store i8* %call1, i8** %Text, align 8, !tbaa !1
  %11 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp2 = icmp eq i8* %11, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %12 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %13 = load i8*, i8** %Text, align 8, !tbaa !1
  %14 = load i32, i32* %size, align 4, !tbaa !8
  %call5 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %13, i32 %14) #7
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %15, i32 0, i32 9
  %16 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load i32, i32* %size, align 4, !tbaa !8
  %19 = load i8*, i8** %Text, align 8, !tbaa !1
  %call6 = call i32 %16(%struct._cms_io_handler* %17, i32 %18, i8* %19) #7
  store i32 %call6, i32* %rc, align 4, !tbaa !8
  %20 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %20, i32 0, i32 5
  %21 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID7, align 8, !tbaa !26
  %22 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %21, i8* %22) #7
  %23 = load i32, i32* %rc, align 4, !tbaa !8
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %24 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #2
  %26 = bitcast i32* %size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Text_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  %call = call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %1) #7
  %2 = bitcast %struct._cms_MLU_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_Text_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #7
  %4 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Text_Description_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %Text = alloca i8*, align 8
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %AsciiCount = alloca i32, align 4
  %i = alloca i32, align 4
  %UnicodeCode = alloca i32, align 4
  %UnicodeCount = alloca i32, align 4
  %ScriptCodeCode = alloca i16, align 2
  %Dummy = alloca i16, align 2
  %ScriptCodeCount = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store i8* null, i8** %Text, align 8, !tbaa !1
  %1 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  store %struct._cms_MLU_struct* null, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %2 = bitcast i32* %AsciiCount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %UnicodeCode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %UnicodeCount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i16* %ScriptCodeCode to i8*
  call void @llvm.lifetime.start(i64 2, i8* %6) #2
  %7 = bitcast i16* %Dummy to i8*
  call void @llvm.lifetime.start(i64 2, i8* %7) #2
  call void @llvm.lifetime.start(i64 1, i8* %ScriptCodeCount) #2
  %8 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %8, align 4, !tbaa !8
  %9 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %9 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %10, i32* %AsciiCount) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %11 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv4 = zext i32 %11 to i64
  %sub = sub i64 %conv4, 4
  %conv5 = trunc i64 %sub to i32
  store i32 %conv5, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %12 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %13 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %cmp6 = icmp ult i32 %12, %13
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.3
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.3
  %14 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %14, i32 0, i32 5
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call10 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %15, i32 1) #7
  store %struct._cms_MLU_struct* %call10, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %16 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %cmp11 = icmp eq %struct._cms_MLU_struct* %16, null
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.9
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.9
  %17 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID15 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %17, i32 0, i32 5
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID15, align 8, !tbaa !26
  %19 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %add = add i32 %19, 1
  %call16 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %18, i32 %add) #7
  store i8* %call16, i8** %Text, align 8, !tbaa !1
  %20 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp17 = icmp eq i8* %20, null
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.14
  br label %Error

if.end.20:                                        ; preds = %if.end.14
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %21, i32 0, i32 5
  %22 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load i8*, i8** %Text, align 8, !tbaa !1
  %25 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %call21 = call i32 %22(%struct._cms_io_handler* %23, i8* %24, i32 1, i32 %25) #7
  %26 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %cmp22 = icmp ne i32 %call21, %26
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.20
  br label %Error

if.end.25:                                        ; preds = %if.end.20
  %27 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %28 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %sub26 = sub i32 %28, %27
  store i32 %sub26, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %29 = load i32, i32* %AsciiCount, align 4, !tbaa !8
  %idxprom = zext i32 %29 to i64
  %30 = load i8*, i8** %Text, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %30, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %31 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %32 = load i8*, i8** %Text, align 8, !tbaa !1
  %call27 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %32) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.25
  br label %Error

if.end.30:                                        ; preds = %if.end.25
  %33 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID31 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %33, i32 0, i32 5
  %34 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID31, align 8, !tbaa !26
  %35 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %34, i8* %35) #7
  store i8* null, i8** %Text, align 8, !tbaa !1
  %36 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv32 = zext i32 %36 to i64
  %cmp33 = icmp ult i64 %conv32, 8
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.30
  br label %Done

if.end.36:                                        ; preds = %if.end.30
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call37 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %37, i32* %UnicodeCode) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.end.36
  br label %Done

if.end.40:                                        ; preds = %if.end.36
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call41 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %38, i32* %UnicodeCount) #7
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %if.end.40
  br label %Done

if.end.44:                                        ; preds = %if.end.40
  %39 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv45 = zext i32 %39 to i64
  %sub46 = sub i64 %conv45, 8
  %conv47 = trunc i64 %sub46 to i32
  store i32 %conv47, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %40 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv48 = zext i32 %40 to i64
  %41 = load i32, i32* %UnicodeCount, align 4, !tbaa !8
  %conv49 = zext i32 %41 to i64
  %mul = mul i64 %conv49, 2
  %cmp50 = icmp ult i64 %conv48, %mul
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.44
  br label %Done

if.end.53:                                        ; preds = %if.end.44
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.53
  %42 = load i32, i32* %i, align 4, !tbaa !8
  %43 = load i32, i32* %UnicodeCount, align 4, !tbaa !8
  %cmp54 = icmp ult i32 %42, %43
  br i1 %cmp54, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read56 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %44, i32 0, i32 5
  %45 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read56, align 8, !tbaa !41
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %47 = bitcast i16* %Dummy to i8*
  %call57 = call i32 %45(%struct._cms_io_handler* %46, i8* %47, i32 2, i32 1) #7
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %for.body
  br label %Done

if.end.60:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.60
  %48 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %48, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %49 = load i32, i32* %UnicodeCount, align 4, !tbaa !8
  %conv61 = zext i32 %49 to i64
  %mul62 = mul i64 %conv61, 2
  %50 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv63 = zext i32 %50 to i64
  %sub64 = sub i64 %conv63, %mul62
  %conv65 = trunc i64 %sub64 to i32
  store i32 %conv65, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %51 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv66 = zext i32 %51 to i64
  %cmp67 = icmp uge i64 %conv66, 70
  br i1 %cmp67, label %if.then.69, label %if.end.90

if.then.69:                                       ; preds = %for.end
  %52 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call70 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %52, i16* %ScriptCodeCode) #7
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.end.73, label %if.then.72

if.then.72:                                       ; preds = %if.then.69
  br label %Done

if.end.73:                                        ; preds = %if.then.69
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call74 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %53, i8* %ScriptCodeCount) #7
  %tobool75 = icmp ne i32 %call74, 0
  br i1 %tobool75, label %if.end.77, label %if.then.76

if.then.76:                                       ; preds = %if.end.73
  br label %Done

if.end.77:                                        ; preds = %if.end.73
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.78

for.cond.78:                                      ; preds = %for.inc.87, %if.end.77
  %54 = load i32, i32* %i, align 4, !tbaa !8
  %cmp79 = icmp ult i32 %54, 67
  br i1 %cmp79, label %for.body.81, label %for.end.89

for.body.81:                                      ; preds = %for.cond.78
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read82 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %55, i32 0, i32 5
  %56 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read82, align 8, !tbaa !41
  %57 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %58 = bitcast i16* %Dummy to i8*
  %call83 = call i32 %56(%struct._cms_io_handler* %57, i8* %58, i32 1, i32 1) #7
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.end.86, label %if.then.85

if.then.85:                                       ; preds = %for.body.81
  br label %Error

if.end.86:                                        ; preds = %for.body.81
  br label %for.inc.87

for.inc.87:                                       ; preds = %if.end.86
  %59 = load i32, i32* %i, align 4, !tbaa !8
  %inc88 = add i32 %59, 1
  store i32 %inc88, i32* %i, align 4, !tbaa !8
  br label %for.cond.78

for.end.89:                                       ; preds = %for.cond.78
  br label %if.end.90

if.end.90:                                        ; preds = %for.end.89, %for.end
  br label %Done

Done:                                             ; preds = %if.end.90, %if.then.76, %if.then.72, %if.then.59, %if.then.52, %if.then.43, %if.then.39, %if.then.35
  %60 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %60, align 4, !tbaa !8
  %61 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %62 = bitcast %struct._cms_MLU_struct* %61 to i8*
  store i8* %62, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.85, %if.then.29, %if.then.24, %if.then.19
  %63 = load i8*, i8** %Text, align 8, !tbaa !1
  %tobool91 = icmp ne i8* %63, null
  br i1 %tobool91, label %if.then.92, label %if.end.94

if.then.92:                                       ; preds = %Error
  %64 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID93 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %64, i32 0, i32 5
  %65 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID93, align 8, !tbaa !26
  %66 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %65, i8* %66) #7
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.92, %Error
  %67 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %tobool95 = icmp ne %struct._cms_MLU_struct* %67, null
  br i1 %tobool95, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.94
  %68 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %68) #7
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.96, %if.end.94
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.97, %Done, %if.then.13, %if.then.8, %if.then.2, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %ScriptCodeCount) #2
  %69 = bitcast i16* %Dummy to i8*
  call void @llvm.lifetime.end(i64 2, i8* %69) #2
  %70 = bitcast i16* %ScriptCodeCode to i8*
  call void @llvm.lifetime.end(i64 2, i8* %70) #2
  %71 = bitcast i32* %UnicodeCount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = bitcast i32* %UnicodeCode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #2
  %73 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %73) #2
  %74 = bitcast i32* %AsciiCount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #2
  %75 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #2
  %76 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #2
  %77 = load i8*, i8** %retval
  ret i8* %77
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %Text = alloca i8*, align 8
  %Wide = alloca i32*, align 8
  %len = alloca i32, align 4
  %len_aligned = alloca i32, align 4
  %len_filler_alignment = alloca i32, align 4
  %rc = alloca i32, align 4
  %Filler = alloca [68 x i8], align 16
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  store i8* null, i8** %Text, align 8, !tbaa !1
  %4 = bitcast i32** %Wide to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  store i32* null, i32** %Wide, align 8, !tbaa !1
  %5 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %len_aligned to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32* %len_filler_alignment to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  store i32 0, i32* %rc, align 4, !tbaa !8
  %9 = bitcast [68 x i8]* %Filler to i8*
  call void @llvm.lifetime.start(i64 68, i8* %9) #2
  %arraydecay = getelementptr inbounds [68 x i8], [68 x i8]* %Filler, i32 0, i32 0
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 68) #8
  %10 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call1 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* null, i32 0) #7
  store i32 %call1, i32* %len, align 4, !tbaa !8
  %11 = load i32, i32* %len, align 4, !tbaa !8
  %conv = zext i32 %11 to i64
  %add = add i64 %conv, 3
  %and = and i64 %add, -4
  %conv2 = trunc i64 %and to i32
  store i32 %conv2, i32* %len_aligned, align 4, !tbaa !8
  %12 = load i32, i32* %len_aligned, align 4, !tbaa !8
  %13 = load i32, i32* %len, align 4, !tbaa !8
  %sub = sub i32 %12, %13
  store i32 %sub, i32* %len_filler_alignment, align 4, !tbaa !8
  %14 = load i32, i32* %len, align 4, !tbaa !8
  %cmp = icmp ule i32 %14, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call4 = call i8* @_cmsDupMem(%struct._cmsContext_struct* %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0), i32 1) #7
  store i8* %call4, i8** %Text, align 8, !tbaa !1
  %17 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %17, i32 0, i32 5
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID5, align 8, !tbaa !26
  %call6 = call i8* @_cmsDupMem(%struct._cmsContext_struct* %18, i8* bitcast ([1 x i32]* @.str.2 to i8*), i32 4) #7
  %19 = bitcast i8* %call6 to i32*
  store i32* %19, i32** %Wide, align 8, !tbaa !1
  br label %if.end.25

if.else:                                          ; preds = %entry
  %20 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %20, i32 0, i32 5
  %21 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID7, align 8, !tbaa !26
  %22 = load i32, i32* %len, align 4, !tbaa !8
  %call8 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %21, i32 %22, i32 1) #7
  store i8* %call8, i8** %Text, align 8, !tbaa !1
  %23 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp9 = icmp eq i8* %23, null
  br i1 %cmp9, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.else
  br label %Error

if.end:                                           ; preds = %if.else
  %24 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID12 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %24, i32 0, i32 5
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID12, align 8, !tbaa !26
  %26 = load i32, i32* %len, align 4, !tbaa !8
  %call13 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %25, i32 %26, i32 4) #7
  %27 = bitcast i8* %call13 to i32*
  store i32* %27, i32** %Wide, align 8, !tbaa !1
  %28 = load i32*, i32** %Wide, align 8, !tbaa !1
  %cmp14 = icmp eq i32* %28, null
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end
  br label %Error

if.end.17:                                        ; preds = %if.end
  %29 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %30 = load i8*, i8** %Text, align 8, !tbaa !1
  %31 = load i32, i32* %len, align 4, !tbaa !8
  %conv18 = zext i32 %31 to i64
  %mul = mul i64 %conv18, 1
  %conv19 = trunc i64 %mul to i32
  %call20 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %30, i32 %conv19) #7
  %32 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %33 = load i32*, i32** %Wide, align 8, !tbaa !1
  %34 = load i32, i32* %len, align 4, !tbaa !8
  %conv21 = zext i32 %34 to i64
  %mul22 = mul i64 %conv21, 4
  %conv23 = trunc i64 %mul22 to i32
  %call24 = call i32 @cmsMLUgetWide(%struct._cms_MLU_struct* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %33, i32 %conv23) #7
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.17, %if.then
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %36 = load i32, i32* %len_aligned, align 4, !tbaa !8
  %call26 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %35, i32 %36) #7
  %tobool = icmp ne i32 %call26, 0
  br i1 %tobool, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %if.end.25
  br label %Error

if.end.28:                                        ; preds = %if.end.25
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %37, i32 0, i32 9
  %38 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load i32, i32* %len, align 4, !tbaa !8
  %41 = load i8*, i8** %Text, align 8, !tbaa !1
  %call29 = call i32 %38(%struct._cms_io_handler* %39, i32 %40, i8* %41) #7
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.28
  br label %Error

if.end.32:                                        ; preds = %if.end.28
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write33 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %42, i32 0, i32 9
  %43 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write33, align 8, !tbaa !43
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %45 = load i32, i32* %len_filler_alignment, align 4, !tbaa !8
  %arraydecay34 = getelementptr inbounds [68 x i8], [68 x i8]* %Filler, i32 0, i32 0
  %call35 = call i32 %43(%struct._cms_io_handler* %44, i32 %45, i8* %arraydecay34) #7
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %if.end.32
  br label %Error

if.end.38:                                        ; preds = %if.end.32
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call39 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %46, i32 0) #7
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.end.38
  br label %Error

if.end.42:                                        ; preds = %if.end.38
  %47 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %48 = load i32, i32* %len_aligned, align 4, !tbaa !8
  %add43 = add i32 %48, 1
  %call44 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %47, i32 %add43) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.end.42
  br label %Error

if.end.47:                                        ; preds = %if.end.42
  %49 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %50 = load i32, i32* %len, align 4, !tbaa !8
  %51 = load i32*, i32** %Wide, align 8, !tbaa !1
  %call48 = call i32 @_cmsWriteWCharArray(%struct._cms_io_handler* %49, i32 %50, i32* %51) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.47
  br label %Error

if.end.51:                                        ; preds = %if.end.47
  %52 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %53 = load i32, i32* %len_filler_alignment, align 4, !tbaa !8
  %add52 = add i32 %53, 1
  %arraydecay53 = getelementptr inbounds [68 x i8], [68 x i8]* %Filler, i32 0, i32 0
  %54 = bitcast i8* %arraydecay53 to i16*
  %call54 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %52, i32 %add52, i16* %54) #7
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.end.51
  br label %Error

if.end.57:                                        ; preds = %if.end.51
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call58 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %55, i16 zeroext 0) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.end.57
  br label %Error

if.end.61:                                        ; preds = %if.end.57
  %56 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call62 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %56, i8 zeroext 0) #7
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.end.61
  br label %Error

if.end.65:                                        ; preds = %if.end.61
  %57 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write66 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %57, i32 0, i32 9
  %58 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write66, align 8, !tbaa !43
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay67 = getelementptr inbounds [68 x i8], [68 x i8]* %Filler, i32 0, i32 0
  %call68 = call i32 %58(%struct._cms_io_handler* %59, i32 67, i8* %arraydecay67) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.65
  br label %Error

if.end.71:                                        ; preds = %if.end.65
  store i32 1, i32* %rc, align 4, !tbaa !8
  br label %Error

Error:                                            ; preds = %if.end.71, %if.then.70, %if.then.64, %if.then.60, %if.then.56, %if.then.50, %if.then.46, %if.then.41, %if.then.37, %if.then.31, %if.then.27, %if.then.16, %if.then.11
  %60 = load i8*, i8** %Text, align 8, !tbaa !1
  %tobool72 = icmp ne i8* %60, null
  br i1 %tobool72, label %if.then.73, label %if.end.75

if.then.73:                                       ; preds = %Error
  %61 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID74 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %61, i32 0, i32 5
  %62 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID74, align 8, !tbaa !26
  %63 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %62, i8* %63) #7
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.73, %Error
  %64 = load i32*, i32** %Wide, align 8, !tbaa !1
  %tobool76 = icmp ne i32* %64, null
  br i1 %tobool76, label %if.then.77, label %if.end.79

if.then.77:                                       ; preds = %if.end.75
  %65 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID78 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %65, i32 0, i32 5
  %66 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID78, align 8, !tbaa !26
  %67 = load i32*, i32** %Wide, align 8, !tbaa !1
  %68 = bitcast i32* %67 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %66, i8* %68) #7
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.77, %if.end.75
  %69 = load i32, i32* %rc, align 4, !tbaa !8
  %70 = bitcast [68 x i8]* %Filler to i8*
  call void @llvm.lifetime.end(i64 68, i8* %70) #2
  %71 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = bitcast i32* %len_filler_alignment to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #2
  %73 = bitcast i32* %len_aligned to i8*
  call void @llvm.lifetime.end(i64 4, i8* %73) #2
  %74 = bitcast i32* %len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #2
  %75 = bitcast i32** %Wide to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #2
  %76 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #2
  %77 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %77) #2
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Text_Description_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  %call = call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %1) #7
  %2 = bitcast %struct._cms_MLU_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_Text_Description_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #7
  %4 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Curve_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %Count = alloca i32, align 4
  %NewGamma = alloca %struct._cms_curve_struct*, align 8
  %cleanup.dest.slot = alloca i32
  %SingleGamma = alloca double, align 8
  %SingleGammaFixed = alloca i16, align 2
  %SingleGamma6 = alloca double, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct._cms_curve_struct** %NewGamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %2, align 4, !tbaa !8
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %3, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %Count, align 4, !tbaa !8
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.5
  ]

sw.bb:                                            ; preds = %if.end
  %5 = bitcast double* %SingleGamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store double 1.000000e+00, double* %SingleGamma, align 8, !tbaa !44
  %6 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %6, i32 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call1 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %7, i32 1, double* %SingleGamma) #7
  store %struct._cms_curve_struct* %call1, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %8 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %tobool2 = icmp ne %struct._cms_curve_struct* %8, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %sw.bb
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %sw.bb
  %9 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %9, align 4, !tbaa !8
  %10 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %11 = bitcast %struct._cms_curve_struct* %10 to i8*
  store i8* %11, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3
  %12 = bitcast double* %SingleGamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  br label %cleanup.27

sw.bb.5:                                          ; preds = %if.end
  %13 = bitcast i16* %SingleGammaFixed to i8*
  call void @llvm.lifetime.start(i64 2, i8* %13) #2
  %14 = bitcast double* %SingleGamma6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #2
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call7 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %15, i16* %SingleGammaFixed) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %sw.bb.5
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14

if.end.10:                                        ; preds = %sw.bb.5
  %16 = load i16, i16* %SingleGammaFixed, align 2, !tbaa !27
  %call11 = call double @_cms8Fixed8toDouble(i16 zeroext %16) #7
  store double %call11, double* %SingleGamma6, align 8, !tbaa !44
  %17 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %17, align 4, !tbaa !8
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID12 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID12, align 8, !tbaa !26
  %call13 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %19, i32 1, double* %SingleGamma6) #7
  %20 = bitcast %struct._cms_curve_struct* %call13 to i8*
  store i8* %20, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14

cleanup.14:                                       ; preds = %if.end.10, %if.then.9
  %21 = bitcast double* %SingleGamma6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21) #2
  %22 = bitcast i16* %SingleGammaFixed to i8*
  call void @llvm.lifetime.end(i64 2, i8* %22) #2
  br label %cleanup.27

sw.default:                                       ; preds = %if.end
  %23 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp = icmp ugt i32 %23, 32767
  br i1 %cmp, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %sw.default
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

if.end.17:                                        ; preds = %sw.default
  %24 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID18 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %24, i32 0, i32 5
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID18, align 8, !tbaa !26
  %26 = load i32, i32* %Count, align 4, !tbaa !8
  %call19 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %25, i32 %26, i16* null) #7
  store %struct._cms_curve_struct* %call19, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %27 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %tobool20 = icmp ne %struct._cms_curve_struct* %27, null
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.17
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

if.end.22:                                        ; preds = %if.end.17
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %29 = load i32, i32* %Count, align 4, !tbaa !8
  %30 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %30, i32 0, i32 6
  %31 = load i16*, i16** %Table16, align 8, !tbaa !45
  %call23 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %28, i32 %29, i16* %31) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.22
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

if.end.26:                                        ; preds = %if.end.22
  %32 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %32, align 4, !tbaa !8
  %33 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %34 = bitcast %struct._cms_curve_struct* %33 to i8*
  store i8* %34, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

cleanup.27:                                       ; preds = %if.end.26, %if.then.25, %if.then.21, %if.then.16, %cleanup.14, %cleanup, %if.then
  %35 = bitcast %struct._cms_curve_struct** %NewGamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %36 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #2
  %37 = load i8*, i8** %retval
  ret i8* %37
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Curve_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Curve = alloca %struct._cms_curve_struct*, align 8
  %SingleGammaFixed = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %2, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %3 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %nSegments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %3, i32 0, i32 1
  %4 = load i32, i32* %nSegments, align 4, !tbaa !47
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %land.lhs.true, label %if.end.11

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %5, i32 0, i32 2
  %6 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %6, i64 0
  %Type = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx, i32 0, i32 2
  %7 = load i32, i32* %Type, align 4, !tbaa !49
  %cmp1 = icmp eq i32 %7, 1
  br i1 %cmp1, label %if.then, label %if.end.11

if.then:                                          ; preds = %land.lhs.true
  %8 = bitcast i16* %SingleGammaFixed to i8*
  call void @llvm.lifetime.start(i64 2, i8* %8) #2
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments2 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %9, i32 0, i32 2
  %10 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments2, align 8, !tbaa !48
  %arrayidx3 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %10, i64 0
  %Params = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx3, i32 0, i32 3
  %arrayidx4 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 0
  %11 = load double, double* %arrayidx4, align 8, !tbaa !44
  %call = call zeroext i16 @_cmsDoubleTo8Fixed8(double %11) #7
  store i16 %call, i16* %SingleGammaFixed, align 2, !tbaa !27
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call5 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %12, i32 1) #7
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end, label %if.then.6

if.then.6:                                        ; preds = %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load i16, i16* %SingleGammaFixed, align 2, !tbaa !27
  %call7 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %13, i16 zeroext %14) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.6
  %15 = bitcast i16* %SingleGammaFixed to i8*
  call void @llvm.lifetime.end(i64 2, i8* %15) #2
  br label %cleanup.18

if.end.11:                                        ; preds = %land.lhs.true, %entry
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %17, i32 0, i32 5
  %18 = load i32, i32* %nEntries, align 4, !tbaa !52
  %call12 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %16, i32 %18) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.11
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.18

if.end.15:                                        ; preds = %if.end.11
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %20 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %nEntries16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %20, i32 0, i32 5
  %21 = load i32, i32* %nEntries16, align 4, !tbaa !52
  %22 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %22, i32 0, i32 6
  %23 = load i16*, i16** %Table16, align 8, !tbaa !45
  %call17 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %19, i32 %21, i16* %23) #7
  store i32 %call17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.18

cleanup.18:                                       ; preds = %if.end.15, %if.then.14, %cleanup
  %24 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Curve_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_curve_struct*
  %call = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %1) #7
  %2 = bitcast %struct._cms_curve_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_Curve_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %gamma = alloca %struct._cms_curve_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cms_curve_struct** %gamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %2, %struct._cms_curve_struct** %gamma, align 8, !tbaa !1
  %3 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %gamma, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %3) #7
  %4 = bitcast %struct._cms_curve_struct** %gamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ParametricCurve_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %Params = alloca [10 x double], align 16
  %Type = alloca i16, align 2
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %NewGamma = alloca %struct._cms_curve_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast [10 x double]* %Params to i8*
  call void @llvm.lifetime.start(i64 80, i8* %0) #2
  %1 = bitcast i16* %Type to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast %struct._cms_curve_struct** %NewGamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %5, i16* %Type) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %6, i16* null) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %7 = load i16, i16* %Type, align 2, !tbaa !27
  %conv = zext i16 %7 to i32
  %cmp = icmp sgt i32 %conv, 4
  br i1 %cmp, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.end.4
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %8, i32 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %10 = load i16, i16* %Type, align 2, !tbaa !27
  %conv7 = zext i16 %10 to i32
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %9, i32 8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0), i32 %conv7) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.4
  %arraydecay = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i32 0
  %11 = bitcast double* %arraydecay to i8*
  %call9 = call i8* @memset(i8* %11, i32 0, i64 80) #8
  %12 = load i16, i16* %Type, align 2, !tbaa !27
  %idxprom = zext i16 %12 to i64
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @Type_ParametricCurve_Read.ParamsByType, i32 0, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4, !tbaa !8
  store i32 %13, i32* %n, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.8
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %15 = load i32, i32* %n, align 4, !tbaa !8
  %cmp10 = icmp slt i32 %14, %15
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom12 = sext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 %idxprom12
  %call14 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %16, double* %arrayidx13) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %for.body
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.17
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID18 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %19, i32 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID18, align 8, !tbaa !26
  %21 = load i16, i16* %Type, align 2, !tbaa !27
  %conv19 = zext i16 %21 to i32
  %add = add nsw i32 %conv19, 1
  %arraydecay20 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i32 0
  %call21 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %20, i32 %add, double* %arraydecay20) #7
  store %struct._cms_curve_struct* %call21, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %22 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %22, align 4, !tbaa !8
  %23 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %NewGamma, align 8, !tbaa !1
  %24 = bitcast %struct._cms_curve_struct* %23 to i8*
  store i8* %24, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.16, %if.then.6, %if.then.3, %if.then
  %25 = bitcast %struct._cms_curve_struct** %NewGamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = bitcast i16* %Type to i8*
  call void @llvm.lifetime.end(i64 2, i8* %28) #2
  %29 = bitcast [10 x double]* %Params to i8*
  call void @llvm.lifetime.end(i64 80, i8* %29) #2
  %30 = load i8*, i8** %retval
  ret i8* %30
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ParametricCurve_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Curve = alloca %struct._cms_curve_struct*, align 8
  %i = alloca i32, align 4
  %nParams = alloca i32, align 4
  %typen = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %2, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %nParams to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %typen to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %6, i32 0, i32 2
  %7 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %7, i64 0
  %Type = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx, i32 0, i32 2
  %8 = load i32, i32* %Type, align 4, !tbaa !49
  store i32 %8, i32* %typen, align 4, !tbaa !8
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %nSegments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %9, i32 0, i32 1
  %10 = load i32, i32* %nSegments, align 4, !tbaa !47
  %cmp = icmp ugt i32 %10, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %11 = load i32, i32* %typen, align 4, !tbaa !8
  %cmp1 = icmp slt i32 %11, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %12, i32 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %13, i32 8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %14 = load i32, i32* %typen, align 4, !tbaa !8
  %cmp2 = icmp sgt i32 %14, 5
  br i1 %cmp2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID4, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %16, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %17 = load i32, i32* %typen, align 4, !tbaa !8
  %idxprom = sext i32 %17 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* @Type_ParametricCurve_Write.ParamsByType, i32 0, i64 %idxprom
  %18 = load i32, i32* %arrayidx6, align 4, !tbaa !8
  store i32 %18, i32* %nParams, align 4, !tbaa !8
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %20 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments7 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %20, i32 0, i32 2
  %21 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments7, align 8, !tbaa !48
  %arrayidx8 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %21, i64 0
  %Type9 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx8, i32 0, i32 2
  %22 = load i32, i32* %Type9, align 4, !tbaa !49
  %sub = sub nsw i32 %22, 1
  %conv = trunc i32 %sub to i16
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %19, i16 zeroext %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.5
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call12 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %23, i16 zeroext 0) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.11
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.11
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.15
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %25 = load i32, i32* %nParams, align 4, !tbaa !8
  %cmp16 = icmp slt i32 %24, %25
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %27 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom18 = sext i32 %27 to i64
  %28 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments19 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %28, i32 0, i32 2
  %29 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments19, align 8, !tbaa !48
  %arrayidx20 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %29, i64 0
  %Params = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx20, i32 0, i32 3
  %arrayidx21 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 %idxprom18
  %30 = load double, double* %arrayidx21, align 8, !tbaa !44
  %call22 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %26, double %30) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.25
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.24, %if.then.14, %if.then.10, %if.then.3, %if.then
  %32 = bitcast i32* %typen to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %33 = bitcast i32* %nParams to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #2
  %34 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #2
  %35 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %36 = load i32, i32* %retval
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ParametricCurve_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_curve_struct*
  %call = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %1) #7
  %2 = bitcast %struct._cms_curve_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_ParametricCurve_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %gamma = alloca %struct._cms_curve_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cms_curve_struct** %gamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %2, %struct._cms_curve_struct** %gamma, align 8, !tbaa !1
  %3 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %gamma, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %3) #7
  %4 = bitcast %struct._cms_curve_struct** %gamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_DateTime_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %timestamp = alloca %struct.cmsDateTimeNumber, align 2
  %NewDateTime = alloca %struct.tm*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  call void @llvm.lifetime.start(i64 12, i8* %0) #2
  %1 = bitcast %struct.tm** %NewDateTime to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %2, align 4, !tbaa !8
  %3 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %3, i32 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMalloc(%struct._cmsContext_struct* %4, i32 56) #7
  %5 = bitcast i8* %call to %struct.tm*
  store %struct.tm* %5, %struct.tm** %NewDateTime, align 8, !tbaa !1
  %6 = load %struct.tm*, %struct.tm** %NewDateTime, align 8, !tbaa !1
  %cmp = icmp eq %struct.tm* %6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %7, i32 0, i32 5
  %8 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  %call1 = call i32 %8(%struct._cms_io_handler* %9, i8* %10, i32 12, i32 1) #7
  %cmp2 = icmp ne i32 %call1, 1
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %11 = load %struct.tm*, %struct.tm** %NewDateTime, align 8, !tbaa !1
  call void @_cmsDecodeDateTimeNumber(%struct.cmsDateTimeNumber* %timestamp, %struct.tm* %11) #7
  %12 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %12, align 4, !tbaa !8
  %13 = load %struct.tm*, %struct.tm** %NewDateTime, align 8, !tbaa !1
  %14 = bitcast %struct.tm* %13 to i8*
  store i8* %14, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %15 = bitcast %struct.tm** %NewDateTime to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  call void @llvm.lifetime.end(i64 12, i8* %16) #2
  %17 = load i8*, i8** %retval
  ret i8* %17
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_DateTime_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %DateTime = alloca %struct.tm*, align 8
  %timestamp = alloca %struct.cmsDateTimeNumber, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.tm** %DateTime to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.tm*
  store %struct.tm* %2, %struct.tm** %DateTime, align 8, !tbaa !1
  %3 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  call void @llvm.lifetime.start(i64 12, i8* %3) #2
  %4 = load %struct.tm*, %struct.tm** %DateTime, align 8, !tbaa !1
  call void @_cmsEncodeDateTimeNumber(%struct.cmsDateTimeNumber* %timestamp, %struct.tm* %4) #7
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %5, i32 0, i32 9
  %6 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  %call = call i32 %6(%struct._cms_io_handler* %7, i32 12, i8* %8) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast %struct.cmsDateTimeNumber* %timestamp to i8*
  call void @llvm.lifetime.end(i64 12, i8* %9) #2
  %10 = bitcast %struct.tm** %DateTime to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #2
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_DateTime_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 56) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_DateTime_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUT8_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %InputChannels = alloca i8, align 1
  %OutputChannels = alloca i8, align 1
  %CLUTpoints = alloca i8, align 1
  %Temp = alloca i8*, align 8
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %nTabSize = alloca i32, align 4
  %i = alloca i32, align 4
  %Matrix = alloca [9 x double], align 16
  %PtrW = alloca i16*, align 8
  %T = alloca i16*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  call void @llvm.lifetime.start(i64 1, i8* %InputChannels) #2
  call void @llvm.lifetime.start(i64 1, i8* %OutputChannels) #2
  call void @llvm.lifetime.start(i64 1, i8* %CLUTpoints) #2
  %0 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store i8* null, i8** %Temp, align 8, !tbaa !1
  %1 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  store %struct._cmsPipeline_struct* null, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %2 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast [9 x double]* %Matrix to i8*
  call void @llvm.lifetime.start(i64 72, i8* %4) #2
  %5 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !8
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %6, i8* %InputChannels) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %7, i8* %OutputChannels) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  br label %Error

if.end.4:                                         ; preds = %if.end
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call5 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %8, i8* %CLUTpoints) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  br label %Error

if.end.8:                                         ; preds = %if.end.4
  %9 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv = zext i8 %9 to i32
  %cmp = icmp eq i32 %conv, 1
  br i1 %cmp, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.8
  br label %Error

if.end.11:                                        ; preds = %if.end.8
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call12 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %10, i8* null) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.11
  br label %Error

if.end.15:                                        ; preds = %if.end.11
  %11 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv16 = zext i8 %11 to i32
  %cmp17 = icmp sgt i32 %conv16, 16
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.15
  br label %Error

if.end.20:                                        ; preds = %if.end.15
  %12 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv21 = zext i8 %12 to i32
  %cmp22 = icmp sgt i32 %conv21, 16
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.20
  br label %Error

if.end.25:                                        ; preds = %if.end.20
  %13 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %13, i32 0, i32 5
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %15 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv26 = zext i8 %15 to i32
  %16 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv27 = zext i8 %16 to i32
  %call28 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %14, i32 %conv26, i32 %conv27) #7
  store %struct._cmsPipeline_struct* %call28, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %17 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp29 = icmp eq %struct._cmsPipeline_struct* %17, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.25
  br label %Error

if.end.32:                                        ; preds = %if.end.25
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 0
  %call33 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %18, double* %arrayidx) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.end.32
  br label %Error

if.end.36:                                        ; preds = %if.end.32
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 1
  %call38 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %19, double* %arrayidx37) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.36
  br label %Error

if.end.41:                                        ; preds = %if.end.36
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 2
  %call43 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %20, double* %arrayidx42) #7
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %if.end.41
  br label %Error

if.end.46:                                        ; preds = %if.end.41
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 3
  %call48 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %21, double* %arrayidx47) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.46
  br label %Error

if.end.51:                                        ; preds = %if.end.46
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 4
  %call53 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %22, double* %arrayidx52) #7
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %if.end.56, label %if.then.55

if.then.55:                                       ; preds = %if.end.51
  br label %Error

if.end.56:                                        ; preds = %if.end.51
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx57 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 5
  %call58 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %23, double* %arrayidx57) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.end.56
  br label %Error

if.end.61:                                        ; preds = %if.end.56
  %24 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 6
  %call63 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %24, double* %arrayidx62) #7
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %if.end.61
  br label %Error

if.end.66:                                        ; preds = %if.end.61
  %25 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx67 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 7
  %call68 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %25, double* %arrayidx67) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.66
  br label %Error

if.end.71:                                        ; preds = %if.end.66
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 8
  %call73 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %26, double* %arrayidx72) #7
  %tobool74 = icmp ne i32 %call73, 0
  br i1 %tobool74, label %if.end.76, label %if.then.75

if.then.75:                                       ; preds = %if.end.71
  br label %Error

if.end.76:                                        ; preds = %if.end.71
  %27 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv77 = zext i8 %27 to i32
  %cmp78 = icmp eq i32 %conv77, 3
  br i1 %cmp78, label %land.lhs.true, label %if.end.90

land.lhs.true:                                    ; preds = %if.end.76
  %arraydecay = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i32 0
  %28 = bitcast double* %arraydecay to %struct.cmsMAT3*
  %call80 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* %28) #7
  %tobool81 = icmp ne i32 %call80, 0
  br i1 %tobool81, label %if.end.90, label %if.then.82

if.then.82:                                       ; preds = %land.lhs.true
  %29 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %30 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID83 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %30, i32 0, i32 5
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID83, align 8, !tbaa !26
  %arraydecay84 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i32 0
  %call85 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %31, i32 3, i32 3, double* %arraydecay84, double* null) #7
  %call86 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %29, i32 0, %struct._cmsStage_struct* %call85) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.then.82
  br label %Error

if.end.89:                                        ; preds = %if.then.82
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %land.lhs.true, %if.end.76
  %32 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID91 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %32, i32 0, i32 5
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID91, align 8, !tbaa !26
  %34 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %35 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %36 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv92 = zext i8 %36 to i32
  %call93 = call i32 @Read8bitTables(%struct._cmsContext_struct* %33, %struct._cms_io_handler* %34, %struct._cmsPipeline_struct* %35, i32 %conv92) #7
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.end.96, label %if.then.95

if.then.95:                                       ; preds = %if.end.90
  br label %Error

if.end.96:                                        ; preds = %if.end.90
  %37 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv97 = zext i8 %37 to i32
  %38 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv98 = zext i8 %38 to i32
  %39 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv99 = zext i8 %39 to i32
  %call100 = call i32 @uipow(i32 %conv97, i32 %conv98, i32 %conv99) #7
  store i32 %call100, i32* %nTabSize, align 4, !tbaa !8
  %40 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp101 = icmp eq i32 %40, -1
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.96
  br label %Error

if.end.104:                                       ; preds = %if.end.96
  %41 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp105 = icmp ugt i32 %41, 0
  br i1 %cmp105, label %if.then.107, label %if.end.149

if.then.107:                                      ; preds = %if.end.104
  %42 = bitcast i16** %PtrW to i8*
  call void @llvm.lifetime.start(i64 8, i8* %42) #2
  %43 = bitcast i16** %T to i8*
  call void @llvm.lifetime.start(i64 8, i8* %43) #2
  %44 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID108 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %44, i32 0, i32 5
  %45 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID108, align 8, !tbaa !26
  %46 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %call109 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %45, i32 %46, i32 2) #7
  %47 = bitcast i8* %call109 to i16*
  store i16* %47, i16** %T, align 8, !tbaa !1
  store i16* %47, i16** %PtrW, align 8, !tbaa !1
  %48 = load i16*, i16** %T, align 8, !tbaa !1
  %cmp110 = icmp eq i16* %48, null
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %if.then.107
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.113:                                       ; preds = %if.then.107
  %49 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID114 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %49, i32 0, i32 5
  %50 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID114, align 8, !tbaa !26
  %51 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %call115 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %50, i32 %51) #7
  store i8* %call115, i8** %Temp, align 8, !tbaa !1
  %52 = load i8*, i8** %Temp, align 8, !tbaa !1
  %cmp116 = icmp eq i8* %52, null
  br i1 %cmp116, label %if.then.118, label %if.end.120

if.then.118:                                      ; preds = %if.end.113
  %53 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID119 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %53, i32 0, i32 5
  %54 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID119, align 8, !tbaa !26
  %55 = load i16*, i16** %T, align 8, !tbaa !1
  %56 = bitcast i16* %55 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %54, i8* %56) #7
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.120:                                       ; preds = %if.end.113
  %57 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %57, i32 0, i32 5
  %58 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %60 = load i8*, i8** %Temp, align 8, !tbaa !1
  %61 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %call121 = call i32 %58(%struct._cms_io_handler* %59, i8* %60, i32 %61, i32 1) #7
  %cmp122 = icmp ne i32 %call121, 1
  br i1 %cmp122, label %if.then.124, label %if.end.127

if.then.124:                                      ; preds = %if.end.120
  %62 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID125 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %62, i32 0, i32 5
  %63 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID125, align 8, !tbaa !26
  %64 = load i16*, i16** %T, align 8, !tbaa !1
  %65 = bitcast i16* %64 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %63, i8* %65) #7
  %66 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID126 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %66, i32 0, i32 5
  %67 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID126, align 8, !tbaa !26
  %68 = load i8*, i8** %Temp, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %67, i8* %68) #7
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.127:                                       ; preds = %if.end.120
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.127
  %69 = load i32, i32* %i, align 4, !tbaa !8
  %70 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp128 = icmp ult i32 %69, %70
  br i1 %cmp128, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %71 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %71 to i64
  %72 = load i8*, i8** %Temp, align 8, !tbaa !1
  %arrayidx130 = getelementptr inbounds i8, i8* %72, i64 %idxprom
  %73 = load i8, i8* %arrayidx130, align 1, !tbaa !15
  %conv131 = zext i8 %73 to i16
  %conv132 = zext i16 %conv131 to i32
  %shl = shl i32 %conv132, 8
  %74 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom133 = zext i32 %74 to i64
  %75 = load i8*, i8** %Temp, align 8, !tbaa !1
  %arrayidx134 = getelementptr inbounds i8, i8* %75, i64 %idxprom133
  %76 = load i8, i8* %arrayidx134, align 1, !tbaa !15
  %conv135 = zext i8 %76 to i32
  %or = or i32 %shl, %conv135
  %conv136 = trunc i32 %or to i16
  %77 = load i16*, i16** %PtrW, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i16, i16* %77, i32 1
  store i16* %incdec.ptr, i16** %PtrW, align 8, !tbaa !1
  store i16 %conv136, i16* %77, align 2, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %78 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %78, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %79 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID137 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %79, i32 0, i32 5
  %80 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID137, align 8, !tbaa !26
  %81 = load i8*, i8** %Temp, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %80, i8* %81) #7
  store i8* null, i8** %Temp, align 8, !tbaa !1
  %82 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %83 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID138 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %83, i32 0, i32 5
  %84 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID138, align 8, !tbaa !26
  %85 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv139 = zext i8 %85 to i32
  %86 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv140 = zext i8 %86 to i32
  %87 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv141 = zext i8 %87 to i32
  %88 = load i16*, i16** %T, align 8, !tbaa !1
  %call142 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %84, i32 %conv139, i32 %conv140, i32 %conv141, i16* %88) #7
  %call143 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %82, i32 1, %struct._cmsStage_struct* %call142) #7
  %tobool144 = icmp ne i32 %call143, 0
  br i1 %tobool144, label %if.end.146, label %if.then.145

if.then.145:                                      ; preds = %for.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.146:                                       ; preds = %for.end
  %89 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID147 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %89, i32 0, i32 5
  %90 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID147, align 8, !tbaa !26
  %91 = load i16*, i16** %T, align 8, !tbaa !1
  %92 = bitcast i16* %91 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %90, i8* %92) #7
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.145, %if.then.124, %if.then.118, %if.then.112, %if.end.146
  %93 = bitcast i16** %T to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #2
  %94 = bitcast i16** %PtrW to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.160 [
    i32 0, label %cleanup.cont
    i32 2, label %Error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.149

if.end.149:                                       ; preds = %cleanup.cont, %if.end.104
  %95 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID150 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %95, i32 0, i32 5
  %96 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID150, align 8, !tbaa !26
  %97 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %98 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %99 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv151 = zext i8 %99 to i32
  %call152 = call i32 @Read8bitTables(%struct._cmsContext_struct* %96, %struct._cms_io_handler* %97, %struct._cmsPipeline_struct* %98, i32 %conv151) #7
  %tobool153 = icmp ne i32 %call152, 0
  br i1 %tobool153, label %if.end.155, label %if.then.154

if.then.154:                                      ; preds = %if.end.149
  br label %Error

if.end.155:                                       ; preds = %if.end.149
  %100 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %100, align 4, !tbaa !8
  %101 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %102 = bitcast %struct._cmsPipeline_struct* %101 to i8*
  store i8* %102, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.160

Error:                                            ; preds = %cleanup, %if.then.154, %if.then.103, %if.then.95, %if.then.88, %if.then.75, %if.then.70, %if.then.65, %if.then.60, %if.then.55, %if.then.50, %if.then.45, %if.then.40, %if.then.35, %if.then.31, %if.then.24, %if.then.19, %if.then.14, %if.then.10, %if.then.7, %if.then.3, %if.then
  %103 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp156 = icmp ne %struct._cmsPipeline_struct* %103, null
  br i1 %cmp156, label %if.then.158, label %if.end.159

if.then.158:                                      ; preds = %Error
  %104 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %104) #7
  br label %if.end.159

if.end.159:                                       ; preds = %if.then.158, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.160

cleanup.160:                                      ; preds = %if.end.159, %if.end.155, %cleanup
  %105 = bitcast [9 x double]* %Matrix to i8*
  call void @llvm.lifetime.end(i64 72, i8* %105) #2
  %106 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #2
  %107 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #2
  %108 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #2
  %109 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %109) #2
  call void @llvm.lifetime.end(i64 1, i8* %CLUTpoints) #2
  call void @llvm.lifetime.end(i64 1, i8* %OutputChannels) #2
  call void @llvm.lifetime.end(i64 1, i8* %InputChannels) #2
  %110 = load i8*, i8** %retval
  ret i8* %110
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_LUT8_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %nTabSize = alloca i32, align 4
  %val = alloca i8, align 1
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %PreMPE = alloca %struct._cmsStageToneCurvesData*, align 8
  %PostMPE = alloca %struct._cmsStageToneCurvesData*, align 8
  %MatMPE = alloca %struct._cmsStageMatrixData*, align 8
  %clut = alloca %struct._cmsStageCLutData*, align 8
  %clutPoints = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  call void @llvm.lifetime.start(i64 1, i8* %val) #2
  %2 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %4, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %5 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast %struct._cmsStageToneCurvesData** %PreMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsStageToneCurvesData* null, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %7 = bitcast %struct._cmsStageToneCurvesData** %PostMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store %struct._cmsStageToneCurvesData* null, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %8 = bitcast %struct._cmsStageMatrixData** %MatMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store %struct._cmsStageMatrixData* null, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %9 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  store %struct._cmsStageCLutData* null, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %10 = bitcast i32* %clutPoints to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %Elements = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %11, i32 0, i32 0
  %12 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elements, align 8, !tbaa !53
  store %struct._cmsStage_struct* %12, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %13 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %13, i32 0, i32 1
  %14 = load i32, i32* %Type, align 4, !tbaa !55
  %cmp = icmp eq i32 %14, 1835103334
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %15 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %15, i32 0, i32 8
  %16 = load i8*, i8** %Data, align 8, !tbaa !57
  %17 = bitcast i8* %16 to %struct._cmsStageMatrixData*
  store %struct._cmsStageMatrixData* %17, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %18 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %18, i32 0, i32 9
  %19 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next, align 8, !tbaa !58
  store %struct._cmsStage_struct* %19, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp1 = icmp ne %struct._cmsStage_struct* %20, null
  br i1 %cmp1, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.end
  %21 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type2 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %21, i32 0, i32 1
  %22 = load i32, i32* %Type2, align 4, !tbaa !55
  %cmp3 = icmp eq i32 %22, 1668707188
  br i1 %cmp3, label %if.then.4, label %if.end.7

if.then.4:                                        ; preds = %land.lhs.true
  %23 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data5 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %23, i32 0, i32 8
  %24 = load i8*, i8** %Data5, align 8, !tbaa !57
  %25 = bitcast i8* %24 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %25, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %26 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %26, i32 0, i32 9
  %27 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next6, align 8, !tbaa !58
  store %struct._cmsStage_struct* %27, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.4, %land.lhs.true, %if.end
  %28 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp8 = icmp ne %struct._cmsStage_struct* %28, null
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.15

land.lhs.true.9:                                  ; preds = %if.end.7
  %29 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %29, i32 0, i32 1
  %30 = load i32, i32* %Type10, align 4, !tbaa !55
  %cmp11 = icmp eq i32 %30, 1668052340
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %land.lhs.true.9
  %31 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data13 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i32 0, i32 8
  %32 = load i8*, i8** %Data13, align 8, !tbaa !57
  %33 = bitcast i8* %32 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %33, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %34 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next14 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i32 0, i32 9
  %35 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next14, align 8, !tbaa !58
  store %struct._cmsStage_struct* %35, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %land.lhs.true.9, %if.end.7
  %36 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp16 = icmp ne %struct._cmsStage_struct* %36, null
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.23

land.lhs.true.17:                                 ; preds = %if.end.15
  %37 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type18 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %37, i32 0, i32 1
  %38 = load i32, i32* %Type18, align 4, !tbaa !55
  %cmp19 = icmp eq i32 %38, 1668707188
  br i1 %cmp19, label %if.then.20, label %if.end.23

if.then.20:                                       ; preds = %land.lhs.true.17
  %39 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data21 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %39, i32 0, i32 8
  %40 = load i8*, i8** %Data21, align 8, !tbaa !57
  %41 = bitcast i8* %40 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %41, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %42 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next22 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %42, i32 0, i32 9
  %43 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next22, align 8, !tbaa !58
  store %struct._cmsStage_struct* %43, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.20, %land.lhs.true.17, %if.end.15
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp24 = icmp ne %struct._cmsStage_struct* %44, null
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.23
  %45 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %45, i32 0, i32 0
  %46 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !59
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %46, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.23
  %47 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %cmp27 = icmp eq %struct._cmsStageCLutData* %47, null
  br i1 %cmp27, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %if.end.26
  store i32 0, i32* %clutPoints, align 4, !tbaa !8
  br label %if.end.29

if.else:                                          ; preds = %if.end.26
  %48 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Params = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %48, i32 0, i32 1
  %49 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %Params, align 8, !tbaa !60
  %nSamples = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %49, i32 0, i32 4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %nSamples, i32 0, i64 0
  %50 = load i32, i32* %arrayidx, align 4, !tbaa !8
  store i32 %50, i32* %clutPoints, align 4, !tbaa !8
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  %51 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %52 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %InputChannels = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %52, i32 0, i32 1
  %53 = load i32, i32* %InputChannels, align 4, !tbaa !62
  %conv = trunc i32 %53 to i8
  %call = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %51, i8 zeroext %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.end.29
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %55 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %OutputChannels = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %55, i32 0, i32 2
  %56 = load i32, i32* %OutputChannels, align 4, !tbaa !63
  %conv32 = trunc i32 %56 to i8
  %call33 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %54, i8 zeroext %conv32) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.end.31
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.31
  %57 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %58 = load i32, i32* %clutPoints, align 4, !tbaa !8
  %conv37 = trunc i32 %58 to i8
  %call38 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %57, i8 zeroext %conv37) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.36
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.end.36
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call42 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %59, i8 zeroext 0) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.end.41
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.41
  %60 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %cmp46 = icmp ne %struct._cmsStageMatrixData* %60, null
  br i1 %cmp46, label %if.then.48, label %if.else.102

if.then.48:                                       ; preds = %if.end.45
  %61 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %62 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %62, i32 0, i32 0
  %63 = load double*, double** %Double, align 8, !tbaa !64
  %arrayidx49 = getelementptr inbounds double, double* %63, i64 0
  %64 = load double, double* %arrayidx49, align 8, !tbaa !44
  %call50 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %61, double %64) #7
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.then.48
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.then.48
  %65 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %66 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double54 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %66, i32 0, i32 0
  %67 = load double*, double** %Double54, align 8, !tbaa !64
  %arrayidx55 = getelementptr inbounds double, double* %67, i64 1
  %68 = load double, double* %arrayidx55, align 8, !tbaa !44
  %call56 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %65, double %68) #7
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %if.end.53
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.59:                                        ; preds = %if.end.53
  %69 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %70 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double60 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %70, i32 0, i32 0
  %71 = load double*, double** %Double60, align 8, !tbaa !64
  %arrayidx61 = getelementptr inbounds double, double* %71, i64 2
  %72 = load double, double* %arrayidx61, align 8, !tbaa !44
  %call62 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %69, double %72) #7
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.end.59
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.end.59
  %73 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %74 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double66 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %74, i32 0, i32 0
  %75 = load double*, double** %Double66, align 8, !tbaa !64
  %arrayidx67 = getelementptr inbounds double, double* %75, i64 3
  %76 = load double, double* %arrayidx67, align 8, !tbaa !44
  %call68 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %73, double %76) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.65
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.end.65
  %77 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %78 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double72 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %78, i32 0, i32 0
  %79 = load double*, double** %Double72, align 8, !tbaa !64
  %arrayidx73 = getelementptr inbounds double, double* %79, i64 4
  %80 = load double, double* %arrayidx73, align 8, !tbaa !44
  %call74 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %77, double %80) #7
  %tobool75 = icmp ne i32 %call74, 0
  br i1 %tobool75, label %if.end.77, label %if.then.76

if.then.76:                                       ; preds = %if.end.71
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.77:                                        ; preds = %if.end.71
  %81 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %82 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double78 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %82, i32 0, i32 0
  %83 = load double*, double** %Double78, align 8, !tbaa !64
  %arrayidx79 = getelementptr inbounds double, double* %83, i64 5
  %84 = load double, double* %arrayidx79, align 8, !tbaa !44
  %call80 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %81, double %84) #7
  %tobool81 = icmp ne i32 %call80, 0
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %if.end.77
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.83:                                        ; preds = %if.end.77
  %85 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %86 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double84 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %86, i32 0, i32 0
  %87 = load double*, double** %Double84, align 8, !tbaa !64
  %arrayidx85 = getelementptr inbounds double, double* %87, i64 6
  %88 = load double, double* %arrayidx85, align 8, !tbaa !44
  %call86 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %85, double %88) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.end.83
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.89:                                        ; preds = %if.end.83
  %89 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %90 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double90 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %90, i32 0, i32 0
  %91 = load double*, double** %Double90, align 8, !tbaa !64
  %arrayidx91 = getelementptr inbounds double, double* %91, i64 7
  %92 = load double, double* %arrayidx91, align 8, !tbaa !44
  %call92 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %89, double %92) #7
  %tobool93 = icmp ne i32 %call92, 0
  br i1 %tobool93, label %if.end.95, label %if.then.94

if.then.94:                                       ; preds = %if.end.89
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.95:                                        ; preds = %if.end.89
  %93 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %94 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double96 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %94, i32 0, i32 0
  %95 = load double*, double** %Double96, align 8, !tbaa !64
  %arrayidx97 = getelementptr inbounds double, double* %95, i64 8
  %96 = load double, double* %arrayidx97, align 8, !tbaa !44
  %call98 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %93, double %96) #7
  %tobool99 = icmp ne i32 %call98, 0
  br i1 %tobool99, label %if.end.101, label %if.then.100

if.then.100:                                      ; preds = %if.end.95
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.101:                                       ; preds = %if.end.95
  br label %if.end.139

if.else.102:                                      ; preds = %if.end.45
  %97 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call103 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %97, double 1.000000e+00) #7
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %if.end.106, label %if.then.105

if.then.105:                                      ; preds = %if.else.102
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.106:                                       ; preds = %if.else.102
  %98 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call107 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %98, double 0.000000e+00) #7
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.end.110, label %if.then.109

if.then.109:                                      ; preds = %if.end.106
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.110:                                       ; preds = %if.end.106
  %99 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call111 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %99, double 0.000000e+00) #7
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.end.114, label %if.then.113

if.then.113:                                      ; preds = %if.end.110
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.114:                                       ; preds = %if.end.110
  %100 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call115 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %100, double 0.000000e+00) #7
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %if.end.114
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.118:                                       ; preds = %if.end.114
  %101 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call119 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %101, double 1.000000e+00) #7
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.122:                                       ; preds = %if.end.118
  %102 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call123 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %102, double 0.000000e+00) #7
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end.126, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %if.end.122
  %103 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call127 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %103, double 0.000000e+00) #7
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.end.130, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.130:                                       ; preds = %if.end.126
  %104 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call131 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %104, double 0.000000e+00) #7
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.134:                                       ; preds = %if.end.130
  %105 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call135 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %105, double 1.000000e+00) #7
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.end.134
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.138:                                       ; preds = %if.end.134
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.138, %if.end.101
  %106 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID140 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %106, i32 0, i32 5
  %107 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID140, align 8, !tbaa !26
  %108 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %109 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %InputChannels141 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %109, i32 0, i32 1
  %110 = load i32, i32* %InputChannels141, align 4, !tbaa !62
  %111 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %call142 = call i32 @Write8bitTables(%struct._cmsContext_struct* %107, %struct._cms_io_handler* %108, i32 %110, %struct._cmsStageToneCurvesData* %111) #7
  %tobool143 = icmp ne i32 %call142, 0
  br i1 %tobool143, label %if.end.145, label %if.then.144

if.then.144:                                      ; preds = %if.end.139
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.145:                                       ; preds = %if.end.139
  %112 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %OutputChannels146 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %112, i32 0, i32 2
  %113 = load i32, i32* %OutputChannels146, align 4, !tbaa !63
  %114 = load i32, i32* %clutPoints, align 4, !tbaa !8
  %115 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %InputChannels147 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %115, i32 0, i32 1
  %116 = load i32, i32* %InputChannels147, align 4, !tbaa !62
  %call148 = call i32 @uipow(i32 %113, i32 %114, i32 %116) #7
  store i32 %call148, i32* %nTabSize, align 4, !tbaa !8
  %117 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp149 = icmp eq i32 %117, -1
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.end.145
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.152:                                       ; preds = %if.end.145
  %118 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp153 = icmp ugt i32 %118, 0
  br i1 %cmp153, label %if.then.155, label %if.end.169

if.then.155:                                      ; preds = %if.end.152
  %119 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %cmp156 = icmp ne %struct._cmsStageCLutData* %119, null
  br i1 %cmp156, label %if.then.158, label %if.end.168

if.then.158:                                      ; preds = %if.then.155
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.158
  %120 = load i32, i32* %j, align 4, !tbaa !8
  %121 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp159 = icmp ult i32 %120, %121
  br i1 %cmp159, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %122 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom = zext i32 %122 to i64
  %123 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %123, i32 0, i32 0
  %T = bitcast %union.anon* %Tab to i16**
  %124 = load i16*, i16** %T, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds i16, i16* %124, i64 %idxprom
  %125 = load i16, i16* %arrayidx161, align 2, !tbaa !27
  %conv162 = zext i16 %125 to i32
  %mul = mul nsw i32 %conv162, 65281
  %add = add nsw i32 %mul, 8388608
  %shr = ashr i32 %add, 24
  %and = and i32 %shr, 255
  %conv163 = trunc i32 %and to i8
  store i8 %conv163, i8* %val, align 1, !tbaa !15
  %126 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %127 = load i8, i8* %val, align 1, !tbaa !15
  %call164 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %126, i8 zeroext %127) #7
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %if.end.167, label %if.then.166

if.then.166:                                      ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.167:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.167
  %128 = load i32, i32* %j, align 4, !tbaa !8
  %inc = add i32 %128, 1
  store i32 %inc, i32* %j, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.168

if.end.168:                                       ; preds = %for.end, %if.then.155
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.168, %if.end.152
  %129 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID170 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %129, i32 0, i32 5
  %130 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID170, align 8, !tbaa !26
  %131 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %132 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %OutputChannels171 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %132, i32 0, i32 2
  %133 = load i32, i32* %OutputChannels171, align 4, !tbaa !63
  %134 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %call172 = call i32 @Write8bitTables(%struct._cmsContext_struct* %130, %struct._cms_io_handler* %131, i32 %133, %struct._cmsStageToneCurvesData* %134) #7
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %if.end.175, label %if.then.174

if.then.174:                                      ; preds = %if.end.169
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %if.end.169
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.175, %if.then.174, %if.then.166, %if.then.151, %if.then.144, %if.then.137, %if.then.133, %if.then.129, %if.then.125, %if.then.121, %if.then.117, %if.then.113, %if.then.109, %if.then.105, %if.then.100, %if.then.94, %if.then.88, %if.then.82, %if.then.76, %if.then.70, %if.then.64, %if.then.58, %if.then.52, %if.then.44, %if.then.40, %if.then.35, %if.then.30, %if.then.25
  %135 = bitcast i32* %clutPoints to i8*
  call void @llvm.lifetime.end(i64 4, i8* %135) #2
  %136 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %136) #2
  %137 = bitcast %struct._cmsStageMatrixData** %MatMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %137) #2
  %138 = bitcast %struct._cmsStageToneCurvesData** %PostMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %138) #2
  %139 = bitcast %struct._cmsStageToneCurvesData** %PreMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %139) #2
  %140 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %140) #2
  %141 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #2
  call void @llvm.lifetime.end(i64 1, i8* %val) #2
  %142 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %142) #2
  %143 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #2
  %144 = load i32, i32* %retval
  ret i32 %144
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUT8_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  %call = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %1) #7
  %2 = bitcast %struct._cmsPipeline_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_LUT8_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUT16_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %InputChannels = alloca i8, align 1
  %OutputChannels = alloca i8, align 1
  %CLUTpoints = alloca i8, align 1
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %nTabSize = alloca i32, align 4
  %Matrix = alloca [9 x double], align 16
  %InputEntries = alloca i16, align 2
  %OutputEntries = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  %T = alloca i16*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  call void @llvm.lifetime.start(i64 1, i8* %InputChannels) #2
  call void @llvm.lifetime.start(i64 1, i8* %OutputChannels) #2
  call void @llvm.lifetime.start(i64 1, i8* %CLUTpoints) #2
  %0 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store %struct._cmsPipeline_struct* null, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %1 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast [9 x double]* %Matrix to i8*
  call void @llvm.lifetime.start(i64 72, i8* %2) #2
  %3 = bitcast i16* %InputEntries to i8*
  call void @llvm.lifetime.start(i64 2, i8* %3) #2
  %4 = bitcast i16* %OutputEntries to i8*
  call void @llvm.lifetime.start(i64 2, i8* %4) #2
  %5 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !8
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %6, i8* %InputChannels) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %7, i8* %OutputChannels) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

if.end.4:                                         ; preds = %if.end
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call5 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %8, i8* %CLUTpoints) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call9 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %9, i8* null) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.8
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

if.end.12:                                        ; preds = %if.end.8
  %10 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv = zext i8 %10 to i32
  %cmp = icmp sgt i32 %conv, 16
  br i1 %cmp, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.12
  br label %Error

if.end.15:                                        ; preds = %if.end.12
  %11 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv16 = zext i8 %11 to i32
  %cmp17 = icmp sgt i32 %conv16, 16
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.15
  br label %Error

if.end.20:                                        ; preds = %if.end.15
  %12 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %12, i32 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %14 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv21 = zext i8 %14 to i32
  %15 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv22 = zext i8 %15 to i32
  %call23 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %13, i32 %conv21, i32 %conv22) #7
  store %struct._cmsPipeline_struct* %call23, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %16 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp24 = icmp eq %struct._cmsPipeline_struct* %16, null
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.20
  br label %Error

if.end.27:                                        ; preds = %if.end.20
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 0
  %call28 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %17, double* %arrayidx) #7
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.end.27
  br label %Error

if.end.31:                                        ; preds = %if.end.27
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 1
  %call33 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %18, double* %arrayidx32) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.end.31
  br label %Error

if.end.36:                                        ; preds = %if.end.31
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 2
  %call38 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %19, double* %arrayidx37) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.36
  br label %Error

if.end.41:                                        ; preds = %if.end.36
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 3
  %call43 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %20, double* %arrayidx42) #7
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %if.end.41
  br label %Error

if.end.46:                                        ; preds = %if.end.41
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 4
  %call48 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %21, double* %arrayidx47) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.46
  br label %Error

if.end.51:                                        ; preds = %if.end.46
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 5
  %call53 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %22, double* %arrayidx52) #7
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %if.end.56, label %if.then.55

if.then.55:                                       ; preds = %if.end.51
  br label %Error

if.end.56:                                        ; preds = %if.end.51
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx57 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 6
  %call58 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %23, double* %arrayidx57) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.end.56
  br label %Error

if.end.61:                                        ; preds = %if.end.56
  %24 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 7
  %call63 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %24, double* %arrayidx62) #7
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %if.end.61
  br label %Error

if.end.66:                                        ; preds = %if.end.61
  %25 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx67 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i64 8
  %call68 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %25, double* %arrayidx67) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.66
  br label %Error

if.end.71:                                        ; preds = %if.end.66
  %26 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv72 = zext i8 %26 to i32
  %cmp73 = icmp eq i32 %conv72, 3
  br i1 %cmp73, label %land.lhs.true, label %if.end.85

land.lhs.true:                                    ; preds = %if.end.71
  %arraydecay = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i32 0
  %27 = bitcast double* %arraydecay to %struct.cmsMAT3*
  %call75 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* %27) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.85, label %if.then.77

if.then.77:                                       ; preds = %land.lhs.true
  %28 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %29 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID78 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %29, i32 0, i32 5
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID78, align 8, !tbaa !26
  %arraydecay79 = getelementptr inbounds [9 x double], [9 x double]* %Matrix, i32 0, i32 0
  %call80 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %30, i32 3, i32 3, double* %arraydecay79, double* null) #7
  %call81 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %28, i32 1, %struct._cmsStage_struct* %call80) #7
  %tobool82 = icmp ne i32 %call81, 0
  br i1 %tobool82, label %if.end.84, label %if.then.83

if.then.83:                                       ; preds = %if.then.77
  br label %Error

if.end.84:                                        ; preds = %if.then.77
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %land.lhs.true, %if.end.71
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call86 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %31, i16* %InputEntries) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.end.85
  br label %Error

if.end.89:                                        ; preds = %if.end.85
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call90 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %32, i16* %OutputEntries) #7
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.end.89
  br label %Error

if.end.93:                                        ; preds = %if.end.89
  %33 = load i16, i16* %InputEntries, align 2, !tbaa !27
  %conv94 = zext i16 %33 to i32
  %cmp95 = icmp sgt i32 %conv94, 32767
  br i1 %cmp95, label %if.then.100, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.93
  %34 = load i16, i16* %OutputEntries, align 2, !tbaa !27
  %conv97 = zext i16 %34 to i32
  %cmp98 = icmp sgt i32 %conv97, 32767
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %lor.lhs.false, %if.end.93
  br label %Error

if.end.101:                                       ; preds = %lor.lhs.false
  %35 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv102 = zext i8 %35 to i32
  %cmp103 = icmp eq i32 %conv102, 1
  br i1 %cmp103, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.end.101
  br label %Error

if.end.106:                                       ; preds = %if.end.101
  %36 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID107 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %36, i32 0, i32 5
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID107, align 8, !tbaa !26
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %39 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %40 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv108 = zext i8 %40 to i32
  %41 = load i16, i16* %InputEntries, align 2, !tbaa !27
  %conv109 = zext i16 %41 to i32
  %call110 = call i32 @Read16bitTables(%struct._cmsContext_struct* %37, %struct._cms_io_handler* %38, %struct._cmsPipeline_struct* %39, i32 %conv108, i32 %conv109) #7
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %if.end.113, label %if.then.112

if.then.112:                                      ; preds = %if.end.106
  br label %Error

if.end.113:                                       ; preds = %if.end.106
  %42 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv114 = zext i8 %42 to i32
  %43 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv115 = zext i8 %43 to i32
  %44 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv116 = zext i8 %44 to i32
  %call117 = call i32 @uipow(i32 %conv114, i32 %conv115, i32 %conv116) #7
  store i32 %call117, i32* %nTabSize, align 4, !tbaa !8
  %45 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp118 = icmp eq i32 %45, -1
  br i1 %cmp118, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %if.end.113
  br label %Error

if.end.121:                                       ; preds = %if.end.113
  %46 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp122 = icmp ugt i32 %46, 0
  br i1 %cmp122, label %if.then.124, label %if.end.147

if.then.124:                                      ; preds = %if.end.121
  %47 = bitcast i16** %T to i8*
  call void @llvm.lifetime.start(i64 8, i8* %47) #2
  %48 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID125 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %48, i32 0, i32 5
  %49 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID125, align 8, !tbaa !26
  %50 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %call126 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %49, i32 %50, i32 2) #7
  %51 = bitcast i8* %call126 to i16*
  store i16* %51, i16** %T, align 8, !tbaa !1
  %52 = load i16*, i16** %T, align 8, !tbaa !1
  %cmp127 = icmp eq i16* %52, null
  br i1 %cmp127, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.then.124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.130:                                       ; preds = %if.then.124
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %54 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %55 = load i16*, i16** %T, align 8, !tbaa !1
  %call131 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %53, i32 %54, i16* %55) #7
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.end.135, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  %56 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID134 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %56, i32 0, i32 5
  %57 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID134, align 8, !tbaa !26
  %58 = load i16*, i16** %T, align 8, !tbaa !1
  %59 = bitcast i16* %58 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %57, i8* %59) #7
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.135:                                       ; preds = %if.end.130
  %60 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %61 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID136 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %61, i32 0, i32 5
  %62 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID136, align 8, !tbaa !26
  %63 = load i8, i8* %CLUTpoints, align 1, !tbaa !15
  %conv137 = zext i8 %63 to i32
  %64 = load i8, i8* %InputChannels, align 1, !tbaa !15
  %conv138 = zext i8 %64 to i32
  %65 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv139 = zext i8 %65 to i32
  %66 = load i16*, i16** %T, align 8, !tbaa !1
  %call140 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %62, i32 %conv137, i32 %conv138, i32 %conv139, i16* %66) #7
  %call141 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %60, i32 1, %struct._cmsStage_struct* %call140) #7
  %tobool142 = icmp ne i32 %call141, 0
  br i1 %tobool142, label %if.end.145, label %if.then.143

if.then.143:                                      ; preds = %if.end.135
  %67 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID144 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %67, i32 0, i32 5
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID144, align 8, !tbaa !26
  %69 = load i16*, i16** %T, align 8, !tbaa !1
  %70 = bitcast i16* %69 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %68, i8* %70) #7
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.145:                                       ; preds = %if.end.135
  %71 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID146 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %71, i32 0, i32 5
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID146, align 8, !tbaa !26
  %73 = load i16*, i16** %T, align 8, !tbaa !1
  %74 = bitcast i16* %73 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %72, i8* %74) #7
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.143, %if.then.133, %if.then.129, %if.end.145
  %75 = bitcast i16** %T to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.159 [
    i32 0, label %cleanup.cont
    i32 2, label %Error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.147

if.end.147:                                       ; preds = %cleanup.cont, %if.end.121
  %76 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID148 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %76, i32 0, i32 5
  %77 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID148, align 8, !tbaa !26
  %78 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %79 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %80 = load i8, i8* %OutputChannels, align 1, !tbaa !15
  %conv149 = zext i8 %80 to i32
  %81 = load i16, i16* %OutputEntries, align 2, !tbaa !27
  %conv150 = zext i16 %81 to i32
  %call151 = call i32 @Read16bitTables(%struct._cmsContext_struct* %77, %struct._cms_io_handler* %78, %struct._cmsPipeline_struct* %79, i32 %conv149, i32 %conv150) #7
  %tobool152 = icmp ne i32 %call151, 0
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %if.end.147
  br label %Error

if.end.154:                                       ; preds = %if.end.147
  %82 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %82, align 4, !tbaa !8
  %83 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %84 = bitcast %struct._cmsPipeline_struct* %83 to i8*
  store i8* %84, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

Error:                                            ; preds = %cleanup, %if.then.153, %if.then.120, %if.then.112, %if.then.105, %if.then.100, %if.then.92, %if.then.88, %if.then.83, %if.then.70, %if.then.65, %if.then.60, %if.then.55, %if.then.50, %if.then.45, %if.then.40, %if.then.35, %if.then.30, %if.then.26, %if.then.19, %if.then.14
  %85 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp155 = icmp ne %struct._cmsPipeline_struct* %85, null
  br i1 %cmp155, label %if.then.157, label %if.end.158

if.then.157:                                      ; preds = %Error
  %86 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %86) #7
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.157, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.159

cleanup.159:                                      ; preds = %if.end.158, %if.end.154, %cleanup, %if.then.11, %if.then.7, %if.then.3, %if.then
  %87 = bitcast i16* %OutputEntries to i8*
  call void @llvm.lifetime.end(i64 2, i8* %87) #2
  %88 = bitcast i16* %InputEntries to i8*
  call void @llvm.lifetime.end(i64 2, i8* %88) #2
  %89 = bitcast [9 x double]* %Matrix to i8*
  call void @llvm.lifetime.end(i64 72, i8* %89) #2
  %90 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #2
  %91 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #2
  call void @llvm.lifetime.end(i64 1, i8* %CLUTpoints) #2
  call void @llvm.lifetime.end(i64 1, i8* %OutputChannels) #2
  call void @llvm.lifetime.end(i64 1, i8* %InputChannels) #2
  %92 = load i8*, i8** %retval
  ret i8* %92
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_LUT16_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %nTabSize = alloca i32, align 4
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %PreMPE = alloca %struct._cmsStageToneCurvesData*, align 8
  %PostMPE = alloca %struct._cmsStageToneCurvesData*, align 8
  %MatMPE = alloca %struct._cmsStageMatrixData*, align 8
  %clut = alloca %struct._cmsStageCLutData*, align 8
  %i = alloca i32, align 4
  %InputChannels = alloca i32, align 4
  %OutputChannels = alloca i32, align 4
  %clutPoints = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %3 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %3, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %4 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast %struct._cmsStageToneCurvesData** %PreMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store %struct._cmsStageToneCurvesData* null, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %6 = bitcast %struct._cmsStageToneCurvesData** %PostMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsStageToneCurvesData* null, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %7 = bitcast %struct._cmsStageMatrixData** %MatMPE to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store %struct._cmsStageMatrixData* null, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %8 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store %struct._cmsStageCLutData* null, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %9 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %InputChannels to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast i32* %OutputChannels to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  %12 = bitcast i32* %clutPoints to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  %13 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %Elements = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %13, i32 0, i32 0
  %14 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elements, align 8, !tbaa !53
  store %struct._cmsStage_struct* %14, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %15 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsStage_struct* %15, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %16, i32 0, i32 1
  %17 = load i32, i32* %Type, align 4, !tbaa !55
  %cmp1 = icmp eq i32 %17, 1835103334
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %18, i32 0, i32 8
  %19 = load i8*, i8** %Data, align 8, !tbaa !57
  %20 = bitcast i8* %19 to %struct._cmsStageMatrixData*
  store %struct._cmsStageMatrixData* %20, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %21 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %21, i32 0, i32 9
  %22 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next, align 8, !tbaa !58
  store %struct._cmsStage_struct* %22, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %23 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp2 = icmp ne %struct._cmsStage_struct* %23, null
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.9

land.lhs.true.3:                                  ; preds = %if.end
  %24 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %24, i32 0, i32 1
  %25 = load i32, i32* %Type4, align 4, !tbaa !55
  %cmp5 = icmp eq i32 %25, 1668707188
  br i1 %cmp5, label %if.then.6, label %if.end.9

if.then.6:                                        ; preds = %land.lhs.true.3
  %26 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %26, i32 0, i32 8
  %27 = load i8*, i8** %Data7, align 8, !tbaa !57
  %28 = bitcast i8* %27 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %28, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %29 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next8 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %29, i32 0, i32 9
  %30 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next8, align 8, !tbaa !58
  store %struct._cmsStage_struct* %30, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.6, %land.lhs.true.3, %if.end
  %31 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp10 = icmp ne %struct._cmsStage_struct* %31, null
  br i1 %cmp10, label %land.lhs.true.11, label %if.end.17

land.lhs.true.11:                                 ; preds = %if.end.9
  %32 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type12 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %32, i32 0, i32 1
  %33 = load i32, i32* %Type12, align 4, !tbaa !55
  %cmp13 = icmp eq i32 %33, 1668052340
  br i1 %cmp13, label %if.then.14, label %if.end.17

if.then.14:                                       ; preds = %land.lhs.true.11
  %34 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data15 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i32 0, i32 8
  %35 = load i8*, i8** %Data15, align 8, !tbaa !57
  %36 = bitcast i8* %35 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %36, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %37 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next16 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %37, i32 0, i32 9
  %38 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next16, align 8, !tbaa !58
  store %struct._cmsStage_struct* %38, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.14, %land.lhs.true.11, %if.end.9
  %39 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp18 = icmp ne %struct._cmsStage_struct* %39, null
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.25

land.lhs.true.19:                                 ; preds = %if.end.17
  %40 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Type20 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %40, i32 0, i32 1
  %41 = load i32, i32* %Type20, align 4, !tbaa !55
  %cmp21 = icmp eq i32 %41, 1668707188
  br i1 %cmp21, label %if.then.22, label %if.end.25

if.then.22:                                       ; preds = %land.lhs.true.19
  %42 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data23 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %42, i32 0, i32 8
  %43 = load i8*, i8** %Data23, align 8, !tbaa !57
  %44 = bitcast i8* %43 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %44, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %45 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Next24 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %45, i32 0, i32 9
  %46 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next24, align 8, !tbaa !58
  store %struct._cmsStage_struct* %46, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.22, %land.lhs.true.19, %if.end.17
  %47 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp26 = icmp ne %struct._cmsStage_struct* %47, null
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.25
  %48 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %48, i32 0, i32 0
  %49 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !59
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %49, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.25
  %50 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %call = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %50) #7
  store i32 %call, i32* %InputChannels, align 4, !tbaa !8
  %51 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %call29 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %51) #7
  store i32 %call29, i32* %OutputChannels, align 4, !tbaa !8
  %52 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %cmp30 = icmp eq %struct._cmsStageCLutData* %52, null
  br i1 %cmp30, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %if.end.28
  store i32 0, i32* %clutPoints, align 4, !tbaa !8
  br label %if.end.32

if.else:                                          ; preds = %if.end.28
  %53 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Params = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %53, i32 0, i32 1
  %54 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %Params, align 8, !tbaa !60
  %nSamples = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %54, i32 0, i32 4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %nSamples, i32 0, i64 0
  %55 = load i32, i32* %arrayidx, align 4, !tbaa !8
  store i32 %55, i32* %clutPoints, align 4, !tbaa !8
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  %56 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %57 = load i32, i32* %InputChannels, align 4, !tbaa !8
  %conv = trunc i32 %57 to i8
  %call33 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %56, i8 zeroext %conv) #7
  %tobool = icmp ne i32 %call33, 0
  br i1 %tobool, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.32
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %if.end.32
  %58 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %59 = load i32, i32* %OutputChannels, align 4, !tbaa !8
  %conv36 = trunc i32 %59 to i8
  %call37 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %58, i8 zeroext %conv36) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.end.35
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %if.end.35
  %60 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %61 = load i32, i32* %clutPoints, align 4, !tbaa !8
  %conv41 = trunc i32 %61 to i8
  %call42 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %60, i8 zeroext %conv41) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.end.40
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.40
  %62 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call46 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %62, i8 zeroext 0) #7
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.end.49, label %if.then.48

if.then.48:                                       ; preds = %if.end.45
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.end.45
  %63 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %cmp50 = icmp ne %struct._cmsStageMatrixData* %63, null
  br i1 %cmp50, label %if.then.52, label %if.else.106

if.then.52:                                       ; preds = %if.end.49
  %64 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %65 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %65, i32 0, i32 0
  %66 = load double*, double** %Double, align 8, !tbaa !64
  %arrayidx53 = getelementptr inbounds double, double* %66, i64 0
  %67 = load double, double* %arrayidx53, align 8, !tbaa !44
  %call54 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %64, double %67) #7
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.then.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %if.then.52
  %68 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %69 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double58 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %69, i32 0, i32 0
  %70 = load double*, double** %Double58, align 8, !tbaa !64
  %arrayidx59 = getelementptr inbounds double, double* %70, i64 1
  %71 = load double, double* %arrayidx59, align 8, !tbaa !44
  %call60 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %68, double %71) #7
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %if.end.57
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.63:                                        ; preds = %if.end.57
  %72 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %73 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double64 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %73, i32 0, i32 0
  %74 = load double*, double** %Double64, align 8, !tbaa !64
  %arrayidx65 = getelementptr inbounds double, double* %74, i64 2
  %75 = load double, double* %arrayidx65, align 8, !tbaa !44
  %call66 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %72, double %75) #7
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %if.end.63
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.69:                                        ; preds = %if.end.63
  %76 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %77 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double70 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %77, i32 0, i32 0
  %78 = load double*, double** %Double70, align 8, !tbaa !64
  %arrayidx71 = getelementptr inbounds double, double* %78, i64 3
  %79 = load double, double* %arrayidx71, align 8, !tbaa !44
  %call72 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %76, double %79) #7
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %if.end.75, label %if.then.74

if.then.74:                                       ; preds = %if.end.69
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.75:                                        ; preds = %if.end.69
  %80 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %81 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double76 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %81, i32 0, i32 0
  %82 = load double*, double** %Double76, align 8, !tbaa !64
  %arrayidx77 = getelementptr inbounds double, double* %82, i64 4
  %83 = load double, double* %arrayidx77, align 8, !tbaa !44
  %call78 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %80, double %83) #7
  %tobool79 = icmp ne i32 %call78, 0
  br i1 %tobool79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %if.end.75
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.81:                                        ; preds = %if.end.75
  %84 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %85 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double82 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %85, i32 0, i32 0
  %86 = load double*, double** %Double82, align 8, !tbaa !64
  %arrayidx83 = getelementptr inbounds double, double* %86, i64 5
  %87 = load double, double* %arrayidx83, align 8, !tbaa !44
  %call84 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %84, double %87) #7
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %if.end.87, label %if.then.86

if.then.86:                                       ; preds = %if.end.81
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.87:                                        ; preds = %if.end.81
  %88 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %89 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double88 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %89, i32 0, i32 0
  %90 = load double*, double** %Double88, align 8, !tbaa !64
  %arrayidx89 = getelementptr inbounds double, double* %90, i64 6
  %91 = load double, double* %arrayidx89, align 8, !tbaa !44
  %call90 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %88, double %91) #7
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.end.87
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.93:                                        ; preds = %if.end.87
  %92 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %93 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double94 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %93, i32 0, i32 0
  %94 = load double*, double** %Double94, align 8, !tbaa !64
  %arrayidx95 = getelementptr inbounds double, double* %94, i64 7
  %95 = load double, double* %arrayidx95, align 8, !tbaa !44
  %call96 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %92, double %95) #7
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.end.99, label %if.then.98

if.then.98:                                       ; preds = %if.end.93
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.99:                                        ; preds = %if.end.93
  %96 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %97 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %MatMPE, align 8, !tbaa !1
  %Double100 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %97, i32 0, i32 0
  %98 = load double*, double** %Double100, align 8, !tbaa !64
  %arrayidx101 = getelementptr inbounds double, double* %98, i64 8
  %99 = load double, double* %arrayidx101, align 8, !tbaa !44
  %call102 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %96, double %99) #7
  %tobool103 = icmp ne i32 %call102, 0
  br i1 %tobool103, label %if.end.105, label %if.then.104

if.then.104:                                      ; preds = %if.end.99
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.105:                                       ; preds = %if.end.99
  br label %if.end.143

if.else.106:                                      ; preds = %if.end.49
  %100 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call107 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %100, double 1.000000e+00) #7
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.end.110, label %if.then.109

if.then.109:                                      ; preds = %if.else.106
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.110:                                       ; preds = %if.else.106
  %101 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call111 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %101, double 0.000000e+00) #7
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.end.114, label %if.then.113

if.then.113:                                      ; preds = %if.end.110
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.114:                                       ; preds = %if.end.110
  %102 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call115 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %102, double 0.000000e+00) #7
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %if.end.114
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.118:                                       ; preds = %if.end.114
  %103 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call119 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %103, double 0.000000e+00) #7
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.122:                                       ; preds = %if.end.118
  %104 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call123 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %104, double 1.000000e+00) #7
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end.126, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %if.end.122
  %105 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call127 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %105, double 0.000000e+00) #7
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.end.130, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.130:                                       ; preds = %if.end.126
  %106 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call131 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %106, double 0.000000e+00) #7
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.134:                                       ; preds = %if.end.130
  %107 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call135 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %107, double 0.000000e+00) #7
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.end.134
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.138:                                       ; preds = %if.end.134
  %108 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call139 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %108, double 1.000000e+00) #7
  %tobool140 = icmp ne i32 %call139, 0
  br i1 %tobool140, label %if.end.142, label %if.then.141

if.then.141:                                      ; preds = %if.end.138
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.142:                                       ; preds = %if.end.138
  br label %if.end.143

if.end.143:                                       ; preds = %if.end.142, %if.end.105
  %109 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %cmp144 = icmp ne %struct._cmsStageToneCurvesData* %109, null
  br i1 %cmp144, label %if.then.146, label %if.else.153

if.then.146:                                      ; preds = %if.end.143
  %110 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %111 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %TheCurves = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %111, i32 0, i32 1
  %112 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves, align 8, !tbaa !66
  %arrayidx147 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %112, i64 0
  %113 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx147, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %113, i32 0, i32 5
  %114 = load i32, i32* %nEntries, align 4, !tbaa !52
  %conv148 = trunc i32 %114 to i16
  %call149 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %110, i16 zeroext %conv148) #7
  %tobool150 = icmp ne i32 %call149, 0
  br i1 %tobool150, label %if.end.152, label %if.then.151

if.then.151:                                      ; preds = %if.then.146
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.152:                                       ; preds = %if.then.146
  br label %if.end.158

if.else.153:                                      ; preds = %if.end.143
  %115 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call154 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %115, i16 zeroext 2) #7
  %tobool155 = icmp ne i32 %call154, 0
  br i1 %tobool155, label %if.end.157, label %if.then.156

if.then.156:                                      ; preds = %if.else.153
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.157:                                       ; preds = %if.else.153
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.157, %if.end.152
  %116 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %cmp159 = icmp ne %struct._cmsStageToneCurvesData* %116, null
  br i1 %cmp159, label %if.then.161, label %if.else.170

if.then.161:                                      ; preds = %if.end.158
  %117 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %118 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %TheCurves162 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %118, i32 0, i32 1
  %119 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves162, align 8, !tbaa !66
  %arrayidx163 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %119, i64 0
  %120 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx163, align 8, !tbaa !1
  %nEntries164 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %120, i32 0, i32 5
  %121 = load i32, i32* %nEntries164, align 4, !tbaa !52
  %conv165 = trunc i32 %121 to i16
  %call166 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %117, i16 zeroext %conv165) #7
  %tobool167 = icmp ne i32 %call166, 0
  br i1 %tobool167, label %if.end.169, label %if.then.168

if.then.168:                                      ; preds = %if.then.161
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.169:                                       ; preds = %if.then.161
  br label %if.end.175

if.else.170:                                      ; preds = %if.end.158
  %122 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call171 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %122, i16 zeroext 2) #7
  %tobool172 = icmp ne i32 %call171, 0
  br i1 %tobool172, label %if.end.174, label %if.then.173

if.then.173:                                      ; preds = %if.else.170
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.174:                                       ; preds = %if.else.170
  br label %if.end.175

if.end.175:                                       ; preds = %if.end.174, %if.end.169
  %123 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %cmp176 = icmp ne %struct._cmsStageToneCurvesData* %123, null
  br i1 %cmp176, label %if.then.178, label %if.else.184

if.then.178:                                      ; preds = %if.end.175
  %124 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID179 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %124, i32 0, i32 5
  %125 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID179, align 8, !tbaa !26
  %126 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %127 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PreMPE, align 8, !tbaa !1
  %call180 = call i32 @Write16bitTables(%struct._cmsContext_struct* %125, %struct._cms_io_handler* %126, %struct._cmsStageToneCurvesData* %127) #7
  %tobool181 = icmp ne i32 %call180, 0
  br i1 %tobool181, label %if.end.183, label %if.then.182

if.then.182:                                      ; preds = %if.then.178
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.183:                                       ; preds = %if.then.178
  br label %if.end.195

if.else.184:                                      ; preds = %if.end.175
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.184
  %128 = load i32, i32* %i, align 4, !tbaa !8
  %129 = load i32, i32* %InputChannels, align 4, !tbaa !8
  %cmp185 = icmp slt i32 %128, %129
  br i1 %cmp185, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %130 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call187 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %130, i16 zeroext 0) #7
  %tobool188 = icmp ne i32 %call187, 0
  br i1 %tobool188, label %if.end.190, label %if.then.189

if.then.189:                                      ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.190:                                       ; preds = %for.body
  %131 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call191 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %131, i16 zeroext -1) #7
  %tobool192 = icmp ne i32 %call191, 0
  br i1 %tobool192, label %if.end.194, label %if.then.193

if.then.193:                                      ; preds = %if.end.190
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.194:                                       ; preds = %if.end.190
  br label %for.inc

for.inc:                                          ; preds = %if.end.194
  %132 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %132, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.195

if.end.195:                                       ; preds = %for.end, %if.end.183
  %133 = load i32, i32* %OutputChannels, align 4, !tbaa !8
  %134 = load i32, i32* %clutPoints, align 4, !tbaa !8
  %135 = load i32, i32* %InputChannels, align 4, !tbaa !8
  %call196 = call i32 @uipow(i32 %133, i32 %134, i32 %135) #7
  store i32 %call196, i32* %nTabSize, align 4, !tbaa !8
  %136 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp197 = icmp eq i32 %136, -1
  br i1 %cmp197, label %if.then.199, label %if.end.200

if.then.199:                                      ; preds = %if.end.195
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.200:                                       ; preds = %if.end.195
  %137 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %cmp201 = icmp ugt i32 %137, 0
  br i1 %cmp201, label %if.then.203, label %if.end.212

if.then.203:                                      ; preds = %if.end.200
  %138 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %cmp204 = icmp ne %struct._cmsStageCLutData* %138, null
  br i1 %cmp204, label %if.then.206, label %if.end.211

if.then.206:                                      ; preds = %if.then.203
  %139 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %140 = load i32, i32* %nTabSize, align 4, !tbaa !8
  %141 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %141, i32 0, i32 0
  %T = bitcast %union.anon* %Tab to i16**
  %142 = load i16*, i16** %T, align 8, !tbaa !1
  %call207 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %139, i32 %140, i16* %142) #7
  %tobool208 = icmp ne i32 %call207, 0
  br i1 %tobool208, label %if.end.210, label %if.then.209

if.then.209:                                      ; preds = %if.then.206
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.210:                                       ; preds = %if.then.206
  br label %if.end.211

if.end.211:                                       ; preds = %if.end.210, %if.then.203
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.211, %if.end.200
  %143 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %cmp213 = icmp ne %struct._cmsStageToneCurvesData* %143, null
  br i1 %cmp213, label %if.then.215, label %if.else.221

if.then.215:                                      ; preds = %if.end.212
  %144 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID216 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %144, i32 0, i32 5
  %145 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID216, align 8, !tbaa !26
  %146 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %147 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %PostMPE, align 8, !tbaa !1
  %call217 = call i32 @Write16bitTables(%struct._cmsContext_struct* %145, %struct._cms_io_handler* %146, %struct._cmsStageToneCurvesData* %147) #7
  %tobool218 = icmp ne i32 %call217, 0
  br i1 %tobool218, label %if.end.220, label %if.then.219

if.then.219:                                      ; preds = %if.then.215
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.220:                                       ; preds = %if.then.215
  br label %if.end.237

if.else.221:                                      ; preds = %if.end.212
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.222

for.cond.222:                                     ; preds = %for.inc.234, %if.else.221
  %148 = load i32, i32* %i, align 4, !tbaa !8
  %149 = load i32, i32* %OutputChannels, align 4, !tbaa !8
  %cmp223 = icmp slt i32 %148, %149
  br i1 %cmp223, label %for.body.225, label %for.end.236

for.body.225:                                     ; preds = %for.cond.222
  %150 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call226 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %150, i16 zeroext 0) #7
  %tobool227 = icmp ne i32 %call226, 0
  br i1 %tobool227, label %if.end.229, label %if.then.228

if.then.228:                                      ; preds = %for.body.225
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.229:                                       ; preds = %for.body.225
  %151 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call230 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %151, i16 zeroext -1) #7
  %tobool231 = icmp ne i32 %call230, 0
  br i1 %tobool231, label %if.end.233, label %if.then.232

if.then.232:                                      ; preds = %if.end.229
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.233:                                       ; preds = %if.end.229
  br label %for.inc.234

for.inc.234:                                      ; preds = %if.end.233
  %152 = load i32, i32* %i, align 4, !tbaa !8
  %inc235 = add nsw i32 %152, 1
  store i32 %inc235, i32* %i, align 4, !tbaa !8
  br label %for.cond.222

for.end.236:                                      ; preds = %for.cond.222
  br label %if.end.237

if.end.237:                                       ; preds = %for.end.236, %if.end.220
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.237, %if.then.232, %if.then.228, %if.then.219, %if.then.209, %if.then.199, %if.then.193, %if.then.189, %if.then.182, %if.then.173, %if.then.168, %if.then.156, %if.then.151, %if.then.141, %if.then.137, %if.then.133, %if.then.129, %if.then.125, %if.then.121, %if.then.117, %if.then.113, %if.then.109, %if.then.104, %if.then.98, %if.then.92, %if.then.86, %if.then.80, %if.then.74, %if.then.68, %if.then.62, %if.then.56, %if.then.48, %if.then.44, %if.then.39, %if.then.34, %if.then.27
  %153 = bitcast i32* %clutPoints to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #2
  %154 = bitcast i32* %OutputChannels to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #2
  %155 = bitcast i32* %InputChannels to i8*
  call void @llvm.lifetime.end(i64 4, i8* %155) #2
  %156 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #2
  %157 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %157) #2
  %158 = bitcast %struct._cmsStageMatrixData** %MatMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %158) #2
  %159 = bitcast %struct._cmsStageToneCurvesData** %PostMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %159) #2
  %160 = bitcast %struct._cmsStageToneCurvesData** %PreMPE to i8*
  call void @llvm.lifetime.end(i64 8, i8* %160) #2
  %161 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %161) #2
  %162 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %162) #2
  %163 = bitcast i32* %nTabSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #2
  %164 = load i32, i32* %retval
  ret i32 %164
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUT16_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  %call = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %1) #7
  %2 = bitcast %struct._cmsPipeline_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_LUT16_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ColorantTable_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %Count = alloca i32, align 4
  %List = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  %Name = alloca [34 x i8], align 16
  %PCS = alloca [3 x i16], align 2
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %List to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast [34 x i8]* %Name to i8*
  call void @llvm.lifetime.start(i64 34, i8* %3) #2
  %4 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.start(i64 6, i8* %4) #2
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %5, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp = icmp ugt i32 %6, 16
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %7, i32 0, i32 5
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %9 = load i32, i32* %Count, align 4, !tbaa !8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %8, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 %9) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.2:                                         ; preds = %if.end
  %10 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %10, i32 0, i32 5
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID3, align 8, !tbaa !26
  %12 = load i32, i32* %Count, align 4, !tbaa !8
  %call4 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct* %11, i32 %12, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0)) #7
  store %struct._cms_NAMEDCOLORLIST_struct* %call4, %struct._cms_NAMEDCOLORLIST_struct** %List, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.2
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %14 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp5 = icmp ult i32 %13, %14
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %15, i32 0, i32 5
  %16 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [34 x i8], [34 x i8]* %Name, i32 0, i32 0
  %call6 = call i32 %16(%struct._cms_io_handler* %17, i8* %arraydecay, i32 32, i32 1) #7
  %cmp7 = icmp ne i32 %call6, 1
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %for.body
  br label %Error

if.end.9:                                         ; preds = %for.body
  %arrayidx = getelementptr inbounds [34 x i8], [34 x i8]* %Name, i32 0, i64 33
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay10 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call11 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %18, i32 3, i16* %arraydecay10) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.9
  br label %Error

if.end.14:                                        ; preds = %if.end.9
  %19 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %List, align 8, !tbaa !1
  %arraydecay15 = getelementptr inbounds [34 x i8], [34 x i8]* %Name, i32 0, i32 0
  %arraydecay16 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call17 = call i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct* %19, i8* %arraydecay15, i16* %arraydecay16, i16* null) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %if.end.14
  br label %Error

if.end.20:                                        ; preds = %if.end.14
  br label %for.inc

for.inc:                                          ; preds = %if.end.20
  %20 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %20, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %21 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %21, align 4, !tbaa !8
  %22 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %List, align 8, !tbaa !1
  %23 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %22 to i8*
  store i8* %23, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.19, %if.then.13, %if.then.8
  %24 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %24, align 4, !tbaa !8
  %25 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %List, align 8, !tbaa !1
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %25) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %for.end, %if.then.1, %if.then
  %26 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.end(i64 6, i8* %26) #2
  %27 = bitcast [34 x i8]* %Name to i8*
  call void @llvm.lifetime.end(i64 34, i8* %27) #2
  %28 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %List to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #2
  %29 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #2
  %30 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = load i8*, i8** %retval
  ret i8* %31
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ColorantTable_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %NamedColorList = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  %i = alloca i32, align 4
  %nColors = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %root = alloca [33 x i8], align 16
  %PCS = alloca [3 x i16], align 2
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  store %struct._cms_NAMEDCOLORLIST_struct* %2, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %nColors to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %call = call i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct* %5) #7
  store i32 %call, i32* %nColors, align 4, !tbaa !8
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load i32, i32* %nColors, align 4, !tbaa !8
  %call1 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %6, i32 %7) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.18

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !tbaa !8
  %9 = load i32, i32* %nColors, align 4, !tbaa !8
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = bitcast [33 x i8]* %root to i8*
  call void @llvm.lifetime.start(i64 33, i8* %10) #2
  %11 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.start(i64 6, i8* %11) #2
  %12 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %root, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call3 = call i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct* %12, i32 %13, i8* %arraydecay, i8* null, i8* null, i16* %arraydecay2, i16* null) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %for.body
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %root, i32 0, i64 32
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %14, i32 0, i32 9
  %15 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay7 = getelementptr inbounds [33 x i8], [33 x i8]* %root, i32 0, i32 0
  %call8 = call i32 %15(%struct._cms_io_handler* %16, i32 32, i8* %arraydecay7) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.6
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay12 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call13 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %17, i32 3, i16* %arraydecay12) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.11
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.11
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.16, %if.then.15, %if.then.10, %if.then.5
  %18 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.end(i64 6, i8* %18) #2
  %19 = bitcast [33 x i8]* %root to i8*
  call void @llvm.lifetime.end(i64 33, i8* %19) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.18 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %20 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.18

cleanup.18:                                       ; preds = %for.end, %cleanup, %if.then
  %21 = bitcast i32* %nColors to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #2
  %22 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %22) #2
  %23 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #2
  %24 = load i32, i32* %retval
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ColorantTable_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %nc = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %nc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  store %struct._cms_NAMEDCOLORLIST_struct* %2, %struct._cms_NAMEDCOLORLIST_struct** %nc, align 8, !tbaa !1
  %3 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %nc, align 8, !tbaa !1
  %call = call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %3) #7
  %4 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %call to i8*
  %5 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %nc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5) #2
  ret i8* %4
}

; Function Attrs: nounwind uwtable
define internal void @Type_ColorantTable_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_NAMEDCOLORLIST_struct*
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_NamedColor_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %vendorFlag = alloca i32, align 4
  %count = alloca i32, align 4
  %nDeviceCoords = alloca i32, align 4
  %prefix = alloca [32 x i8], align 16
  %suffix = alloca [32 x i8], align 16
  %v = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %PCS = alloca [3 x i16], align 2
  %Colorant = alloca [16 x i16], align 16
  %Root = alloca [33 x i8], align 16
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %vendorFlag to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %nDeviceCoords to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast [32 x i8]* %prefix to i8*
  call void @llvm.lifetime.start(i64 32, i8* %3) #2
  %4 = bitcast [32 x i8]* %suffix to i8*
  call void @llvm.lifetime.start(i64 32, i8* %4) #2
  %5 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !8
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %8, i32* %vendorFlag) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %9, i32* %count) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.4:                                         ; preds = %if.end
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call5 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %10, i32* %nDeviceCoords) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.8:                                         ; preds = %if.end.4
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %11, i32 0, i32 5
  %12 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i32 0
  %call9 = call i32 %12(%struct._cms_io_handler* %13, i8* %arraydecay, i32 32, i32 1) #7
  %cmp = icmp ne i32 %call9, 1
  br i1 %cmp, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.8
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.11:                                        ; preds = %if.end.8
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read12 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %14, i32 0, i32 5
  %15 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read12, align 8, !tbaa !41
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i32 0
  %call14 = call i32 %15(%struct._cms_io_handler* %16, i8* %arraydecay13, i32 32, i32 1) #7
  %cmp15 = icmp ne i32 %call14, 1
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.11
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.17:                                        ; preds = %if.end.11
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %arrayidx18 = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i64 31
  store i8 0, i8* %arrayidx18, align 1, !tbaa !15
  %17 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %17, i32 0, i32 5
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %19 = load i32, i32* %count, align 4, !tbaa !8
  %20 = load i32, i32* %nDeviceCoords, align 4, !tbaa !8
  %arraydecay19 = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i32 0
  %arraydecay20 = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i32 0
  %call21 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct* %18, i32 %19, i32 %20, i8* %arraydecay19, i8* %arraydecay20) #7
  store %struct._cms_NAMEDCOLORLIST_struct* %call21, %struct._cms_NAMEDCOLORLIST_struct** %v, align 8, !tbaa !1
  %21 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %v, align 8, !tbaa !1
  %cmp22 = icmp eq %struct._cms_NAMEDCOLORLIST_struct* %21, null
  br i1 %cmp22, label %if.then.23, label %if.end.25

if.then.23:                                       ; preds = %if.end.17
  %22 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID24 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %22, i32 0, i32 5
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID24, align 8, !tbaa !26
  %24 = load i32, i32* %count, align 4, !tbaa !8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %23, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i32 %24) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.25:                                        ; preds = %if.end.17
  %25 = load i32, i32* %nDeviceCoords, align 4, !tbaa !8
  %cmp26 = icmp ugt i32 %25, 16
  br i1 %cmp26, label %if.then.27, label %if.end.29

if.then.27:                                       ; preds = %if.end.25
  %26 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID28 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %26, i32 0, i32 5
  %27 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID28, align 8, !tbaa !26
  %28 = load i32, i32* %nDeviceCoords, align 4, !tbaa !8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %27, i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i32 0, i32 0), i32 %28) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.29:                                        ; preds = %if.end.25
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.29
  %29 = load i32, i32* %i, align 4, !tbaa !8
  %30 = load i32, i32* %count, align 4, !tbaa !8
  %cmp30 = icmp ult i32 %29, %30
  br i1 %cmp30, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.start(i64 6, i8* %31) #2
  %32 = bitcast [16 x i16]* %Colorant to i8*
  call void @llvm.lifetime.start(i64 32, i8* %32) #2
  %33 = bitcast [33 x i8]* %Root to i8*
  call void @llvm.lifetime.start(i64 33, i8* %33) #2
  %arraydecay31 = getelementptr inbounds [16 x i16], [16 x i16]* %Colorant, i32 0, i32 0
  %34 = bitcast i16* %arraydecay31 to i8*
  %call32 = call i8* @memset(i8* %34, i32 0, i64 32) #8
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read33 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %35, i32 0, i32 5
  %36 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read33, align 8, !tbaa !41
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay34 = getelementptr inbounds [33 x i8], [33 x i8]* %Root, i32 0, i32 0
  %call35 = call i32 %36(%struct._cms_io_handler* %37, i8* %arraydecay34, i32 32, i32 1) #7
  %cmp36 = icmp ne i32 %call35, 1
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %for.body
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %for.body
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay39 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call40 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %38, i32 3, i16* %arraydecay39) #7
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.end.43, label %if.then.42

if.then.42:                                       ; preds = %if.end.38
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.end.38
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load i32, i32* %nDeviceCoords, align 4, !tbaa !8
  %arraydecay44 = getelementptr inbounds [16 x i16], [16 x i16]* %Colorant, i32 0, i32 0
  %call45 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %39, i32 %40, i16* %arraydecay44) #7
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.43
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %if.end.43
  %41 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %v, align 8, !tbaa !1
  %arraydecay49 = getelementptr inbounds [33 x i8], [33 x i8]* %Root, i32 0, i32 0
  %arraydecay50 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %arraydecay51 = getelementptr inbounds [16 x i16], [16 x i16]* %Colorant, i32 0, i32 0
  %call52 = call i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct* %41, i8* %arraydecay49, i16* %arraydecay50, i16* %arraydecay51) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.end.48
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %if.end.48
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.54, %if.then.47, %if.then.42, %if.end.55, %if.then.37
  %42 = bitcast [33 x i8]* %Root to i8*
  call void @llvm.lifetime.end(i64 33, i8* %42) #2
  %43 = bitcast [16 x i16]* %Colorant to i8*
  call void @llvm.lifetime.end(i64 32, i8* %43) #2
  %44 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.end(i64 6, i8* %44) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.58 [
    i32 0, label %cleanup.cont
    i32 5, label %Error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %45 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %45, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %46 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %46, align 4, !tbaa !8
  %47 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %v, align 8, !tbaa !1
  %48 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %47 to i8*
  store i8* %48, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

Error:                                            ; preds = %cleanup
  %49 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %v, align 8, !tbaa !1
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %49) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

cleanup.58:                                       ; preds = %Error, %for.end, %cleanup, %if.then.27, %if.then.23, %if.then.16, %if.then.10, %if.then.7, %if.then.3, %if.then
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  %51 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #2
  %52 = bitcast [32 x i8]* %suffix to i8*
  call void @llvm.lifetime.end(i64 32, i8* %52) #2
  %53 = bitcast [32 x i8]* %prefix to i8*
  call void @llvm.lifetime.end(i64 32, i8* %53) #2
  %54 = bitcast i32* %nDeviceCoords to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54) #2
  %55 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #2
  %56 = bitcast i32* %vendorFlag to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  %57 = load i8*, i8** %retval
  ret i8* %57
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_NamedColor_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %NamedColorList = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  %prefix = alloca [32 x i8], align 16
  %suffix = alloca [32 x i8], align 16
  %i = alloca i32, align 4
  %nColors = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %PCS = alloca [3 x i16], align 2
  %Colorant = alloca [16 x i16], align 16
  %Root = alloca [33 x i8], align 16
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  store %struct._cms_NAMEDCOLORLIST_struct* %2, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %3 = bitcast [32 x i8]* %prefix to i8*
  call void @llvm.lifetime.start(i64 32, i8* %3) #2
  %4 = bitcast [32 x i8]* %suffix to i8*
  call void @llvm.lifetime.start(i64 32, i8* %4) #2
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %nColors to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %call = call i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct* %7) #7
  store i32 %call, i32* %nColors, align 4, !tbaa !8
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %8, i32 0) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load i32, i32* %nColors, align 4, !tbaa !8
  %call2 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %9, i32 %10) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.5:                                         ; preds = %if.end
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %ColorantCount = getelementptr inbounds %struct._cms_NAMEDCOLORLIST_struct, %struct._cms_NAMEDCOLORLIST_struct* %12, i32 0, i32 2
  %13 = load i32, i32* %ColorantCount, align 4, !tbaa !68
  %call6 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %11, i32 %13) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.9:                                         ; preds = %if.end.5
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i32 0
  %14 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %Prefix = getelementptr inbounds %struct._cms_NAMEDCOLORLIST_struct, %struct._cms_NAMEDCOLORLIST_struct* %14, i32 0, i32 3
  %arraydecay10 = getelementptr inbounds [33 x i8], [33 x i8]* %Prefix, i32 0, i32 0
  %call11 = call i8* @strncpy(i8* %arraydecay, i8* %arraydecay10, i64 32) #8
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i32 0
  %15 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %Suffix = getelementptr inbounds %struct._cms_NAMEDCOLORLIST_struct, %struct._cms_NAMEDCOLORLIST_struct* %15, i32 0, i32 4
  %arraydecay13 = getelementptr inbounds [33 x i8], [33 x i8]* %Suffix, i32 0, i32 0
  %call14 = call i8* @strncpy(i8* %arraydecay12, i8* %arraydecay13, i64 32) #8
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %arrayidx15 = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i64 31
  store i8 0, i8* %arrayidx15, align 1, !tbaa !15
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %16, i32 0, i32 9
  %17 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay16 = getelementptr inbounds [32 x i8], [32 x i8]* %prefix, i32 0, i32 0
  %call17 = call i32 %17(%struct._cms_io_handler* %18, i32 32, i8* %arraydecay16) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.20:                                        ; preds = %if.end.9
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write21 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %19, i32 0, i32 9
  %20 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write21, align 8, !tbaa !43
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay22 = getelementptr inbounds [32 x i8], [32 x i8]* %suffix, i32 0, i32 0
  %call23 = call i32 %20(%struct._cms_io_handler* %21, i32 32, i8* %arraydecay22) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.26:                                        ; preds = %if.end.20
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.26
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %23 = load i32, i32* %nColors, align 4, !tbaa !8
  %cmp = icmp slt i32 %22, %23
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.start(i64 6, i8* %24) #2
  %25 = bitcast [16 x i16]* %Colorant to i8*
  call void @llvm.lifetime.start(i64 32, i8* %25) #2
  %26 = bitcast [33 x i8]* %Root to i8*
  call void @llvm.lifetime.start(i64 33, i8* %26) #2
  %27 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %28 = load i32, i32* %i, align 4, !tbaa !8
  %arraydecay27 = getelementptr inbounds [33 x i8], [33 x i8]* %Root, i32 0, i32 0
  %arraydecay28 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [16 x i16], [16 x i16]* %Colorant, i32 0, i32 0
  %call30 = call i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct* %27, i32 %28, i8* %arraydecay27, i8* null, i8* null, i16* %arraydecay28, i16* %arraydecay29) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %for.body
  %29 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write34 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %29, i32 0, i32 9
  %30 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write34, align 8, !tbaa !43
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay35 = getelementptr inbounds [33 x i8], [33 x i8]* %Root, i32 0, i32 0
  %call36 = call i32 %30(%struct._cms_io_handler* %31, i32 32, i8* %arraydecay35) #7
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.33
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay40 = getelementptr inbounds [3 x i16], [3 x i16]* %PCS, i32 0, i32 0
  %call41 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %32, i32 3, i16* %arraydecay40) #7
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %if.end.39
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.44:                                        ; preds = %if.end.39
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %34 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList, align 8, !tbaa !1
  %ColorantCount45 = getelementptr inbounds %struct._cms_NAMEDCOLORLIST_struct, %struct._cms_NAMEDCOLORLIST_struct* %34, i32 0, i32 2
  %35 = load i32, i32* %ColorantCount45, align 4, !tbaa !68
  %arraydecay46 = getelementptr inbounds [16 x i16], [16 x i16]* %Colorant, i32 0, i32 0
  %call47 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %33, i32 %35, i16* %arraydecay46) #7
  %tobool48 = icmp ne i32 %call47, 0
  br i1 %tobool48, label %if.end.50, label %if.then.49

if.then.49:                                       ; preds = %if.end.44
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %if.end.44
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.50, %if.then.49, %if.then.43, %if.then.38, %if.then.32
  %36 = bitcast [33 x i8]* %Root to i8*
  call void @llvm.lifetime.end(i64 33, i8* %36) #2
  %37 = bitcast [16 x i16]* %Colorant to i8*
  call void @llvm.lifetime.end(i64 32, i8* %37) #2
  %38 = bitcast [3 x i16]* %PCS to i8*
  call void @llvm.lifetime.end(i64 6, i8* %38) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.53 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

cleanup.53:                                       ; preds = %for.end, %cleanup, %if.then.25, %if.then.19, %if.then.8, %if.then.4, %if.then
  %40 = bitcast i32* %nColors to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #2
  %41 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #2
  %42 = bitcast [32 x i8]* %suffix to i8*
  call void @llvm.lifetime.end(i64 32, i8* %42) #2
  %43 = bitcast [32 x i8]* %prefix to i8*
  call void @llvm.lifetime.end(i64 32, i8* %43) #2
  %44 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %NamedColorList to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_NamedColor_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %nc = alloca %struct._cms_NAMEDCOLORLIST_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %nc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  store %struct._cms_NAMEDCOLORLIST_struct* %2, %struct._cms_NAMEDCOLORLIST_struct** %nc, align 8, !tbaa !1
  %3 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %nc, align 8, !tbaa !1
  %call = call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %3) #7
  %4 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %call to i8*
  %5 = bitcast %struct._cms_NAMEDCOLORLIST_struct** %nc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5) #2
  ret i8* %4
}

; Function Attrs: nounwind uwtable
define internal void @Type_NamedColor_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_NAMEDCOLORLIST_struct*
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %Count = alloca i32, align 4
  %RecLen = alloca i32, align 4
  %NumOfWchar = alloca i32, align 4
  %SizeOfHeader = alloca i32, align 4
  %Len = alloca i32, align 4
  %Offset = alloca i32, align 4
  %i = alloca i32, align 4
  %Block = alloca i32*, align 8
  %BeginOfThisString = alloca i32, align 4
  %EndOfThisString = alloca i32, align 4
  %LargestPosition = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %RecLen to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %NumOfWchar to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %SizeOfHeader to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %Len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %Offset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast i32** %Block to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = bitcast i32* %BeginOfThisString to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %EndOfThisString to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast i32* %LargestPosition to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  %12 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %12, align 4, !tbaa !8
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %13, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %14, i32* %RecLen) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %15 = load i32, i32* %RecLen, align 4, !tbaa !8
  %cmp = icmp ne i32 %15, 12
  br i1 %cmp, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.4
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %16, i32 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %17, i32 8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i32 0, i32 0)) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end.4
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID7, align 8, !tbaa !26
  %20 = load i32, i32* %Count, align 4, !tbaa !8
  %call8 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %19, i32 %20) #7
  store %struct._cms_MLU_struct* %call8, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %21 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %cmp9 = icmp eq %struct._cms_MLU_struct* %21, null
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.6
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.6
  %22 = load i32, i32* %Count, align 4, !tbaa !8
  %23 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %UsedEntries = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %23, i32 0, i32 2
  store i32 %22, i32* %UsedEntries, align 4, !tbaa !70
  %24 = load i32, i32* %Count, align 4, !tbaa !8
  %mul = mul i32 12, %24
  %conv = zext i32 %mul to i64
  %add = add i64 %conv, 8
  %conv12 = trunc i64 %add to i32
  store i32 %conv12, i32* %SizeOfHeader, align 4, !tbaa !8
  store i32 0, i32* %LargestPosition, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.11
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %26 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp13 = icmp ult i32 %25, %26
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %28 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %28 to i64
  %29 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %29, i32 0, i32 3
  %30 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries, align 8, !tbaa !72
  %arrayidx = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %30, i64 %idxprom
  %Language = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx, i32 0, i32 0
  %call15 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %27, i16* %Language) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %for.body
  br label %Error

if.end.18:                                        ; preds = %for.body
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom19 = zext i32 %32 to i64
  %33 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries20 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %33, i32 0, i32 3
  %34 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries20, align 8, !tbaa !72
  %arrayidx21 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %34, i64 %idxprom19
  %Country = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx21, i32 0, i32 1
  %call22 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %31, i16* %Country) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.18
  br label %Error

if.end.25:                                        ; preds = %if.end.18
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call26 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %35, i32* %Len) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  br label %Error

if.end.29:                                        ; preds = %if.end.25
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call30 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %36, i32* %Offset) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  br label %Error

if.end.33:                                        ; preds = %if.end.29
  %37 = load i32, i32* %Offset, align 4, !tbaa !8
  %38 = load i32, i32* %SizeOfHeader, align 4, !tbaa !8
  %add34 = add i32 %38, 8
  %cmp35 = icmp ult i32 %37, %add34
  br i1 %cmp35, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.end.33
  br label %Error

if.end.38:                                        ; preds = %if.end.33
  %39 = load i32, i32* %Offset, align 4, !tbaa !8
  %40 = load i32, i32* %SizeOfHeader, align 4, !tbaa !8
  %sub = sub i32 %39, %40
  %sub39 = sub i32 %sub, 8
  store i32 %sub39, i32* %BeginOfThisString, align 4, !tbaa !8
  %41 = load i32, i32* %Len, align 4, !tbaa !8
  %conv40 = zext i32 %41 to i64
  %mul41 = mul i64 %conv40, 4
  %div = udiv i64 %mul41, 2
  %conv42 = trunc i64 %div to i32
  %42 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom43 = zext i32 %42 to i64
  %43 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries44 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %43, i32 0, i32 3
  %44 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries44, align 8, !tbaa !72
  %arrayidx45 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %44, i64 %idxprom43
  %Len46 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx45, i32 0, i32 3
  store i32 %conv42, i32* %Len46, align 4, !tbaa !73
  %45 = load i32, i32* %BeginOfThisString, align 4, !tbaa !8
  %conv47 = zext i32 %45 to i64
  %mul48 = mul i64 %conv47, 4
  %div49 = udiv i64 %mul48, 2
  %conv50 = trunc i64 %div49 to i32
  %46 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom51 = zext i32 %46 to i64
  %47 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries52 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %47, i32 0, i32 3
  %48 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries52, align 8, !tbaa !72
  %arrayidx53 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %48, i64 %idxprom51
  %StrW = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx53, i32 0, i32 2
  store i32 %conv50, i32* %StrW, align 4, !tbaa !75
  %49 = load i32, i32* %BeginOfThisString, align 4, !tbaa !8
  %50 = load i32, i32* %Len, align 4, !tbaa !8
  %add54 = add i32 %49, %50
  store i32 %add54, i32* %EndOfThisString, align 4, !tbaa !8
  %51 = load i32, i32* %EndOfThisString, align 4, !tbaa !8
  %52 = load i32, i32* %LargestPosition, align 4, !tbaa !8
  %cmp55 = icmp ugt i32 %51, %52
  br i1 %cmp55, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.38
  %53 = load i32, i32* %EndOfThisString, align 4, !tbaa !8
  store i32 %53, i32* %LargestPosition, align 4, !tbaa !8
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.57, %if.end.38
  br label %for.inc

for.inc:                                          ; preds = %if.end.58
  %54 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %54, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %55 = load i32, i32* %LargestPosition, align 4, !tbaa !8
  %conv59 = zext i32 %55 to i64
  %mul60 = mul i64 %conv59, 4
  %div61 = udiv i64 %mul60, 2
  %conv62 = trunc i64 %div61 to i32
  store i32 %conv62, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %56 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp63 = icmp eq i32 %56, 0
  br i1 %cmp63, label %if.then.65, label %if.else

if.then.65:                                       ; preds = %for.end
  store i32* null, i32** %Block, align 8, !tbaa !1
  store i32 0, i32* %NumOfWchar, align 4, !tbaa !8
  br label %if.end.79

if.else:                                          ; preds = %for.end
  %57 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID66 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %57, i32 0, i32 5
  %58 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID66, align 8, !tbaa !26
  %59 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call67 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %58, i32 %59) #7
  %60 = bitcast i8* %call67 to i32*
  store i32* %60, i32** %Block, align 8, !tbaa !1
  %61 = load i32*, i32** %Block, align 8, !tbaa !1
  %cmp68 = icmp eq i32* %61, null
  br i1 %cmp68, label %if.then.70, label %if.end.71

if.then.70:                                       ; preds = %if.else
  br label %Error

if.end.71:                                        ; preds = %if.else
  %62 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv72 = zext i32 %62 to i64
  %div73 = udiv i64 %conv72, 4
  %conv74 = trunc i64 %div73 to i32
  store i32 %conv74, i32* %NumOfWchar, align 4, !tbaa !8
  %63 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %64 = load i32, i32* %NumOfWchar, align 4, !tbaa !8
  %65 = load i32*, i32** %Block, align 8, !tbaa !1
  %call75 = call i32 @_cmsReadWCharArray(%struct._cms_io_handler* %63, i32 %64, i32* %65) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.end.71
  br label %Error

if.end.78:                                        ; preds = %if.end.71
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.then.65
  %66 = load i32*, i32** %Block, align 8, !tbaa !1
  %67 = bitcast i32* %66 to i8*
  %68 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %68, i32 0, i32 6
  store i8* %67, i8** %MemPool, align 8, !tbaa !76
  %69 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %70 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %PoolSize = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %70, i32 0, i32 4
  store i32 %69, i32* %PoolSize, align 4, !tbaa !77
  %71 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %72 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %PoolUsed = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %72, i32 0, i32 5
  store i32 %71, i32* %PoolUsed, align 4, !tbaa !78
  %73 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %73, align 4, !tbaa !8
  %74 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %75 = bitcast %struct._cms_MLU_struct* %74 to i8*
  store i8* %75, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.77, %if.then.70, %if.then.37, %if.then.32, %if.then.28, %if.then.24, %if.then.17
  %76 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %tobool80 = icmp ne %struct._cms_MLU_struct* %76, null
  br i1 %tobool80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %Error
  %77 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %77) #7
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.end.79, %if.then.10, %if.then.5, %if.then.3, %if.then
  %78 = bitcast i32* %LargestPosition to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #2
  %79 = bitcast i32* %EndOfThisString to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #2
  %80 = bitcast i32* %BeginOfThisString to i8*
  call void @llvm.lifetime.end(i64 4, i8* %80) #2
  %81 = bitcast i32** %Block to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #2
  %82 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #2
  %83 = bitcast i32* %Offset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #2
  %84 = bitcast i32* %Len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #2
  %85 = bitcast i32* %SizeOfHeader to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #2
  %86 = bitcast i32* %NumOfWchar to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #2
  %87 = bitcast i32* %RecLen to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #2
  %88 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #2
  %89 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #2
  %90 = load i8*, i8** %retval
  ret i8* %90
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %HeaderSize = alloca i32, align 4
  %Len = alloca i32, align 4
  %Offset = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = bitcast i32* %HeaderSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %Len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %Offset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %cmp = icmp eq i8* %7, null
  br i1 %cmp, label %if.then, label %if.end.6

if.then:                                          ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %8, i32 0) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %9, i32 12) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %entry
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %UsedEntries = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %11, i32 0, i32 2
  %12 = load i32, i32* %UsedEntries, align 4, !tbaa !70
  %call7 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %10, i32 %12) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %13, i32 12) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.10
  %14 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %UsedEntries15 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %14, i32 0, i32 2
  %15 = load i32, i32* %UsedEntries15, align 4, !tbaa !70
  %mul = mul nsw i32 12, %15
  %conv = sext i32 %mul to i64
  %add = add i64 %conv, 8
  %conv16 = trunc i64 %add to i32
  store i32 %conv16, i32* %HeaderSize, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.14
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %17 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %UsedEntries17 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %17, i32 0, i32 2
  %18 = load i32, i32* %UsedEntries17, align 4, !tbaa !70
  %cmp18 = icmp slt i32 %16, %18
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = sext i32 %19 to i64
  %20 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %20, i32 0, i32 3
  %21 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries, align 8, !tbaa !72
  %arrayidx = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %21, i64 %idxprom
  %Len20 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx, i32 0, i32 3
  %22 = load i32, i32* %Len20, align 4, !tbaa !73
  store i32 %22, i32* %Len, align 4, !tbaa !8
  %23 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom21 = sext i32 %23 to i64
  %24 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries22 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %24, i32 0, i32 3
  %25 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries22, align 8, !tbaa !72
  %arrayidx23 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %25, i64 %idxprom21
  %StrW = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx23, i32 0, i32 2
  %26 = load i32, i32* %StrW, align 4, !tbaa !75
  store i32 %26, i32* %Offset, align 4, !tbaa !8
  %27 = load i32, i32* %Len, align 4, !tbaa !8
  %conv24 = zext i32 %27 to i64
  %mul25 = mul i64 %conv24, 2
  %div = udiv i64 %mul25, 4
  %conv26 = trunc i64 %div to i32
  store i32 %conv26, i32* %Len, align 4, !tbaa !8
  %28 = load i32, i32* %Offset, align 4, !tbaa !8
  %conv27 = zext i32 %28 to i64
  %mul28 = mul i64 %conv27, 2
  %div29 = udiv i64 %mul28, 4
  %29 = load i32, i32* %HeaderSize, align 4, !tbaa !8
  %conv30 = zext i32 %29 to i64
  %add31 = add i64 %div29, %conv30
  %add32 = add i64 %add31, 8
  %conv33 = trunc i64 %add32 to i32
  store i32 %conv33, i32* %Offset, align 4, !tbaa !8
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom34 = sext i32 %31 to i64
  %32 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries35 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %32, i32 0, i32 3
  %33 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries35, align 8, !tbaa !72
  %arrayidx36 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %33, i64 %idxprom34
  %Language = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx36, i32 0, i32 0
  %34 = load i16, i16* %Language, align 2, !tbaa !79
  %call37 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %30, i16 zeroext %34) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %for.body
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %36 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom41 = sext i32 %36 to i64
  %37 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %Entries42 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %37, i32 0, i32 3
  %38 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %Entries42, align 8, !tbaa !72
  %arrayidx43 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %38, i64 %idxprom41
  %Country = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %arrayidx43, i32 0, i32 1
  %39 = load i16, i16* %Country, align 2, !tbaa !80
  %call44 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %35, i16 zeroext %39) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.end.40
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.end.40
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %41 = load i32, i32* %Len, align 4, !tbaa !8
  %call48 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %40, i32 %41) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.47
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.end.47
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %43 = load i32, i32* %Offset, align 4, !tbaa !8
  %call52 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %42, i32 %43) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.end.51
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %if.end.51
  br label %for.inc

for.inc:                                          ; preds = %if.end.55
  %44 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %46 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %PoolUsed = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %46, i32 0, i32 5
  %47 = load i32, i32* %PoolUsed, align 4, !tbaa !78
  %conv56 = zext i32 %47 to i64
  %div57 = udiv i64 %conv56, 4
  %conv58 = trunc i64 %div57 to i32
  %48 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %MemPool = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %48, i32 0, i32 6
  %49 = load i8*, i8** %MemPool, align 8, !tbaa !76
  %50 = bitcast i8* %49 to i32*
  %call59 = call i32 @_cmsWriteWCharArray(%struct._cms_io_handler* %45, i32 %conv58, i32* %50) #7
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %if.end.62, label %if.then.61

if.then.61:                                       ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.62:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.62, %if.then.61, %if.then.54, %if.then.50, %if.then.46, %if.then.39, %if.then.13, %if.then.9, %if.end.5, %if.then.4, %if.then.1
  %51 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #2
  %52 = bitcast i32* %Offset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #2
  %53 = bitcast i32* %Len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #2
  %54 = bitcast i32* %HeaderSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54) #2
  %55 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55) #2
  %56 = load i32, i32* %retval
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MLU_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  %call = call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %1) #7
  %2 = bitcast %struct._cms_MLU_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_MLU_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  call void @cmsMLUfree(%struct._cms_MLU_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ProfileSequenceDesc_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %OutSeq = alloca %struct.cmsSEQ*, align 8
  %i = alloca i32, align 4
  %Count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %sec = alloca %struct.cmsPSEQDESC*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !8
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %4, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %5 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

if.end.3:                                         ; preds = %if.end
  %6 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv4 = zext i32 %6 to i64
  %sub = sub i64 %conv4, 4
  %conv5 = trunc i64 %sub to i32
  store i32 %conv5, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %7, i32 0, i32 5
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %9 = load i32, i32* %Count, align 4, !tbaa !8
  %call6 = call %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct* %8, i32 %9) #7
  store %struct.cmsSEQ* %call6, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %10 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %cmp7 = icmp eq %struct.cmsSEQ* %10, null
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.3
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

if.end.10:                                        ; preds = %if.end.3
  %11 = load i32, i32* %Count, align 4, !tbaa !8
  %12 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %n = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %12, i32 0, i32 0
  store i32 %11, i32* %n, align 4, !tbaa !81
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %14 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp11 = icmp ult i32 %13, %14
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = bitcast %struct.cmsPSEQDESC** %sec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #2
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %16 to i64
  %17 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %seq = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %17, i32 0, i32 2
  %18 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !83
  %arrayidx = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %18, i64 %idxprom
  store %struct.cmsPSEQDESC* %arrayidx, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %20 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %deviceMfg = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %20, i32 0, i32 0
  %call13 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %19, i32* %deviceMfg) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %for.body
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %for.body
  %21 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv17 = zext i32 %21 to i64
  %cmp18 = icmp ult i64 %conv17, 4
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.16
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.16
  %22 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv22 = zext i32 %22 to i64
  %sub23 = sub i64 %conv22, 4
  %conv24 = trunc i64 %sub23 to i32
  store i32 %conv24, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %deviceModel = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %24, i32 0, i32 1
  %call25 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %23, i32* %deviceModel) #7
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %if.end.21
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.21
  %25 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv29 = zext i32 %25 to i64
  %cmp30 = icmp ult i64 %conv29, 4
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.28
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.28
  %26 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv34 = zext i32 %26 to i64
  %sub35 = sub i64 %conv34, 4
  %conv36 = trunc i64 %sub35 to i32
  store i32 %conv36, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %28 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %attributes = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %28, i32 0, i32 2
  %call37 = call i32 @_cmsReadUInt64Number(%struct._cms_io_handler* %27, i64* %attributes) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.end.33
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %if.end.33
  %29 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv41 = zext i32 %29 to i64
  %cmp42 = icmp ult i64 %conv41, 8
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.end.40
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.40
  %30 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv46 = zext i32 %30 to i64
  %sub47 = sub i64 %conv46, 8
  %conv48 = trunc i64 %sub47 to i32
  store i32 %conv48, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %technology = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i32 0, i32 3
  %call49 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %31, i32* %technology) #7
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.end.45
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %if.end.45
  %33 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv53 = zext i32 %33 to i64
  %cmp54 = icmp ult i64 %conv53, 4
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.52
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %if.end.52
  %34 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv58 = zext i32 %34 to i64
  %sub59 = sub i64 %conv58, 4
  %conv60 = trunc i64 %sub59 to i32
  store i32 %conv60, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %35 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %37 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %Manufacturer = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %37, i32 0, i32 5
  %38 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call61 = call i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %35, %struct._cms_io_handler* %36, %struct._cms_MLU_struct** %Manufacturer, i32 %38) #7
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.end.64, label %if.then.63

if.then.63:                                       ; preds = %if.end.57
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.64:                                        ; preds = %if.end.57
  %39 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %41 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %Model = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %41, i32 0, i32 6
  %42 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call65 = call i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %39, %struct._cms_io_handler* %40, %struct._cms_MLU_struct** %Model, i32 %42) #7
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.end.68, label %if.then.67

if.then.67:                                       ; preds = %if.end.64
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.68:                                        ; preds = %if.end.64
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.67, %if.then.63, %if.then.56, %if.then.51, %if.then.44, %if.then.39, %if.then.32, %if.then.27, %if.then.20, %if.then.15, %if.end.68
  %43 = bitcast %struct.cmsPSEQDESC** %sec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.69 [
    i32 0, label %cleanup.cont
    i32 5, label %Error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %44 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %44, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %45 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %45, align 4, !tbaa !8
  %46 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %47 = bitcast %struct.cmsSEQ* %46 to i8*
  store i8* %47, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

Error:                                            ; preds = %cleanup
  %48 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %48) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

cleanup.69:                                       ; preds = %Error, %for.end, %cleanup, %if.then.9, %if.then.2, %if.then
  %49 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  %51 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #2
  %52 = load i8*, i8** %retval
  ret i8* %52
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ProfileSequenceDesc_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Seq = alloca %struct.cmsSEQ*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %sec = alloca %struct.cmsPSEQDESC*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsSEQ*
  store %struct.cmsSEQ* %2, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %n = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %5, i32 0, i32 0
  %6 = load i32, i32* %n, align 4, !tbaa !81
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %4, i32 %6) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.26

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !tbaa !8
  %8 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %n1 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %8, i32 0, i32 0
  %9 = load i32, i32* %n1, align 4, !tbaa !81
  %cmp = icmp ult i32 %7, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = bitcast %struct.cmsPSEQDESC** %sec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  %11 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %11 to i64
  %12 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %seq = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %12, i32 0, i32 2
  %13 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !83
  %arrayidx = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %13, i64 %idxprom
  store %struct.cmsPSEQDESC* %arrayidx, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %deviceMfg = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %15, i32 0, i32 0
  %16 = load i32, i32* %deviceMfg, align 4, !tbaa !84
  %call2 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %14, i32 %16) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %for.body
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %deviceModel = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %18, i32 0, i32 1
  %19 = load i32, i32* %deviceModel, align 4, !tbaa !87
  %call6 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %17, i32 %19) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.5
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %attributes = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %21, i32 0, i32 2
  %call10 = call i32 @_cmsWriteUInt64Number(%struct._cms_io_handler* %20, i64* %attributes) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %23 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %technology = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %23, i32 0, i32 3
  %24 = load i32, i32* %technology, align 4, !tbaa !88
  %call14 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %22, i32 %24) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %27 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %Manufacturer = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %27, i32 0, i32 5
  %28 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Manufacturer, align 8, !tbaa !89
  %call18 = call i32 @SaveDescription(%struct._cms_typehandler_struct* %25, %struct._cms_io_handler* %26, %struct._cms_MLU_struct* %28) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %29 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %31 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %sec, align 8, !tbaa !1
  %Model = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %31, i32 0, i32 6
  %32 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Model, align 8, !tbaa !90
  %call22 = call i32 @SaveDescription(%struct._cms_typehandler_struct* %29, %struct._cms_io_handler* %30, %struct._cms_MLU_struct* %32) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.21
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.25, %if.then.24, %if.then.20, %if.then.16, %if.then.12, %if.then.8, %if.then.4
  %33 = bitcast %struct.cmsPSEQDESC** %sec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.26 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %34, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.26

cleanup.26:                                       ; preds = %for.end, %cleanup, %if.then
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #2
  %36 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = load i32, i32* %retval
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ProfileSequenceDesc_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct.cmsSEQ*
  %call = call %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ* %1) #7
  %2 = bitcast %struct.cmsSEQ* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_ProfileSequenceDesc_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct.cmsSEQ*
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Signature_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %SigPtr = alloca i32*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32** %SigPtr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %1, i32 0, i32 5
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMalloc(%struct._cmsContext_struct* %2, i32 4) #7
  %3 = bitcast i8* %call to i32*
  store i32* %3, i32** %SigPtr, align 8, !tbaa !1
  %4 = load i32*, i32** %SigPtr, align 8, !tbaa !1
  %cmp = icmp eq i32* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load i32*, i32** %SigPtr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %5, i32* %6) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %7 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %7, align 4, !tbaa !8
  %8 = load i32*, i32** %SigPtr, align 8, !tbaa !1
  %9 = bitcast i32* %8 to i8*
  store i8* %9, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %10 = bitcast i32** %SigPtr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #2
  %11 = load i8*, i8** %retval
  ret i8* %11
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Signature_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %SigPtr = alloca i32*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32** %SigPtr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to i32*
  store i32* %2, i32** %SigPtr, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load i32*, i32** %SigPtr, align 8, !tbaa !1
  %5 = load i32, i32* %4, align 4, !tbaa !8
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %3, i32 %5) #7
  %6 = bitcast i32** %SigPtr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Signature_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %3 = load i32, i32* %n.addr, align 4, !tbaa !8
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 4
  %conv1 = trunc i64 %mul to i32
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 %conv1) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Signature_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Measurement_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mc = alloca %struct.cmsICCMeasurementConditions, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCMeasurementConditions* %mc to i8*
  call void @llvm.lifetime.start(i64 56, i8* %0) #2
  %1 = bitcast %struct.cmsICCMeasurementConditions* %mc to i8*
  %call = call i8* @memset(i8* %1, i32 0, i64 56) #8
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Observer = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %mc, i32 0, i32 0
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %2, i32* %Observer) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Backing = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %mc, i32 0, i32 1
  %call2 = call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %3, %struct.cmsCIEXYZ* %Backing) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Geometry = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %mc, i32 0, i32 2
  %call6 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %4, i32* %Geometry) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.5
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Flare = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %mc, i32 0, i32 3
  %call10 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %5, double* %Flare) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %IlluminantType = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %mc, i32 0, i32 4
  %call14 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %6, i32* %IlluminantType) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %7 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %7, align 4, !tbaa !8
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %8, i32 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %10 = bitcast %struct.cmsICCMeasurementConditions* %mc to i8*
  %call18 = call i8* @_cmsDupMem(%struct._cmsContext_struct* %9, i8* %10, i32 56) #7
  store i8* %call18, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.17, %if.then.16, %if.then.12, %if.then.8, %if.then.4, %if.then
  %11 = bitcast %struct.cmsICCMeasurementConditions* %mc to i8*
  call void @llvm.lifetime.end(i64 56, i8* %11) #2
  %12 = load i8*, i8** %retval
  ret i8* %12
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Measurement_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %mc = alloca %struct.cmsICCMeasurementConditions*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCMeasurementConditions** %mc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsICCMeasurementConditions*
  store %struct.cmsICCMeasurementConditions* %2, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load %struct.cmsICCMeasurementConditions*, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %Observer = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %4, i32 0, i32 0
  %5 = load i32, i32* %Observer, align 4, !tbaa !91
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %3, i32 %5) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load %struct.cmsICCMeasurementConditions*, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %Backing = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %7, i32 0, i32 1
  %call1 = call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %6, %struct.cmsCIEXYZ* %Backing) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load %struct.cmsICCMeasurementConditions*, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %Geometry = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %9, i32 0, i32 2
  %10 = load i32, i32* %Geometry, align 4, !tbaa !93
  %call5 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %8, i32 %10) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.4
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load %struct.cmsICCMeasurementConditions*, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %Flare = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %12, i32 0, i32 3
  %13 = load double, double* %Flare, align 8, !tbaa !94
  %call9 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %11, double %13) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.8
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load %struct.cmsICCMeasurementConditions*, %struct.cmsICCMeasurementConditions** %mc, align 8, !tbaa !1
  %IlluminantType = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %15, i32 0, i32 4
  %16 = load i32, i32* %IlluminantType, align 4, !tbaa !95
  %call13 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %14, i32 %16) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.12
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.16, %if.then.15, %if.then.11, %if.then.7, %if.then.3, %if.then
  %17 = bitcast %struct.cmsICCMeasurementConditions** %mc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Measurement_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 56) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Measurement_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Data_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %BinData = alloca %struct.cmsICCData*, align 8
  %LenOfData = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %LenOfData to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %2, align 4, !tbaa !8
  %3 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %3 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv2 = zext i32 %4 to i64
  %sub = sub i64 %conv2, 4
  %conv3 = trunc i64 %sub to i32
  store i32 %conv3, i32* %LenOfData, align 4, !tbaa !8
  %5 = load i32, i32* %LenOfData, align 4, !tbaa !8
  %cmp4 = icmp ugt i32 %5, 2147483647
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end
  %6 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %6, i32 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %8 = load i32, i32* %LenOfData, align 4, !tbaa !8
  %conv8 = zext i32 %8 to i64
  %add = add i64 12, %conv8
  %sub9 = sub i64 %add, 1
  %conv10 = trunc i64 %sub9 to i32
  %call = call i8* @_cmsMalloc(%struct._cmsContext_struct* %7, i32 %conv10) #7
  %9 = bitcast i8* %call to %struct.cmsICCData*
  store %struct.cmsICCData* %9, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %10 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %cmp11 = icmp eq %struct.cmsICCData* %10, null
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.7
  %11 = load i32, i32* %LenOfData, align 4, !tbaa !8
  %12 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %len = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %12, i32 0, i32 0
  store i32 %11, i32* %len, align 4, !tbaa !96
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %flag = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %14, i32 0, i32 1
  %call15 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %13, i32* %flag) #7
  %tobool = icmp ne i32 %call15, 0
  br i1 %tobool, label %if.end.18, label %if.then.16

if.then.16:                                       ; preds = %if.end.14
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID17 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID17, align 8, !tbaa !26
  %17 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %18 = bitcast %struct.cmsICCData* %17 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %16, i8* %18) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.14
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %19, i32 0, i32 5
  %20 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %22 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %22, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %data, i32 0, i32 0
  %23 = load i32, i32* %LenOfData, align 4, !tbaa !8
  %call19 = call i32 %20(%struct._cms_io_handler* %21, i8* %arraydecay, i32 1, i32 %23) #7
  %24 = load i32, i32* %LenOfData, align 4, !tbaa !8
  %cmp20 = icmp ne i32 %call19, %24
  br i1 %cmp20, label %if.then.22, label %if.end.24

if.then.22:                                       ; preds = %if.end.18
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID23 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %25, i32 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID23, align 8, !tbaa !26
  %27 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %28 = bitcast %struct.cmsICCData* %27 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %26, i8* %28) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.18
  %29 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %29, align 4, !tbaa !8
  %30 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %31 = bitcast %struct.cmsICCData* %30 to i8*
  store i8* %31, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.24, %if.then.22, %if.then.16, %if.then.13, %if.then.6, %if.then
  %32 = bitcast i32* %LenOfData to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %33 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %34 = load i8*, i8** %retval
  ret i8* %34
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Data_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %BinData = alloca %struct.cmsICCData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsICCData*
  store %struct.cmsICCData* %2, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %flag = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %4, i32 0, i32 1
  %5 = load i32, i32* %flag, align 4, !tbaa !98
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %3, i32 %5) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %6, i32 0, i32 9
  %7 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %len = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %9, i32 0, i32 0
  %10 = load i32, i32* %len, align 4, !tbaa !96
  %11 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %11, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %data, i32 0, i32 0
  %call1 = call i32 %7(%struct._cms_io_handler* %8, i32 %10, i8* %arraydecay) #7
  store i32 %call1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Data_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %BinData = alloca %struct.cmsICCData*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsICCData*
  store %struct.cmsICCData* %2, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %3 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %3, i32 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %5 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %6 = load %struct.cmsICCData*, %struct.cmsICCData** %BinData, align 8, !tbaa !1
  %len = getelementptr inbounds %struct.cmsICCData, %struct.cmsICCData* %6, i32 0, i32 0
  %7 = load i32, i32* %len, align 4, !tbaa !96
  %conv = zext i32 %7 to i64
  %add = add i64 12, %conv
  %sub = sub i64 %add, 1
  %conv1 = trunc i64 %sub to i32
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %4, i8* %5, i32 %conv1) #7
  %8 = bitcast %struct.cmsICCData** %BinData to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8) #2
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Data_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUTA2B_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %inputChan = alloca i8, align 1
  %outputChan = alloca i8, align 1
  %offsetB = alloca i32, align 4
  %offsetMat = alloca i32, align 4
  %offsetM = alloca i32, align 4
  %offsetC = alloca i32, align 4
  %offsetA = alloca i32, align 4
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  call void @llvm.lifetime.start(i64 1, i8* %inputChan) #2
  call void @llvm.lifetime.start(i64 1, i8* %outputChan) #2
  %1 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsPipeline_struct* null, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %7, i32 0, i32 8
  %8 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %8(%struct._cms_io_handler* %9) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %10, i8* %inputChan) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %11, i8* %outputChan) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call7 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %12, i16* null) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %13, i32* %offsetB) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.10
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call15 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %14, i32* %offsetMat) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.14
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call19 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %15, i32* %offsetM) #7
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.18
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.18
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call23 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %16, i32* %offsetC) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.22
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.22
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call27 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %17, i32* %offsetA) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.26
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %20 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv31 = zext i8 %20 to i32
  %21 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv32 = zext i8 %21 to i32
  %call33 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %19, i32 %conv31, i32 %conv32) #7
  store %struct._cmsPipeline_struct* %call33, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %22 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp = icmp eq %struct._cmsPipeline_struct* %22, null
  br i1 %cmp, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.30
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.30
  %23 = load i32, i32* %offsetA, align 4, !tbaa !8
  %cmp37 = icmp ne i32 %23, 0
  br i1 %cmp37, label %if.then.39, label %if.end.46

if.then.39:                                       ; preds = %if.end.36
  %24 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %27 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %28 = load i32, i32* %offsetA, align 4, !tbaa !8
  %add = add i32 %27, %28
  %29 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv40 = zext i8 %29 to i32
  %call41 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %25, %struct._cms_io_handler* %26, i32 %add, i32 %conv40) #7
  %call42 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %24, i32 1, %struct._cmsStage_struct* %call41) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.then.39
  br label %Error

if.end.45:                                        ; preds = %if.then.39
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.end.36
  %30 = load i32, i32* %offsetC, align 4, !tbaa !8
  %cmp47 = icmp ne i32 %30, 0
  br i1 %cmp47, label %if.then.49, label %if.end.58

if.then.49:                                       ; preds = %if.end.46
  %31 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %32 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %34 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %35 = load i32, i32* %offsetC, align 4, !tbaa !8
  %add50 = add i32 %34, %35
  %36 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv51 = zext i8 %36 to i32
  %37 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv52 = zext i8 %37 to i32
  %call53 = call %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* %32, %struct._cms_io_handler* %33, i32 %add50, i32 %conv51, i32 %conv52) #7
  %call54 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %31, i32 1, %struct._cmsStage_struct* %call53) #7
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.then.49
  br label %Error

if.end.57:                                        ; preds = %if.then.49
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.end.46
  %38 = load i32, i32* %offsetM, align 4, !tbaa !8
  %cmp59 = icmp ne i32 %38, 0
  br i1 %cmp59, label %if.then.61, label %if.end.69

if.then.61:                                       ; preds = %if.end.58
  %39 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %40 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %41 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %42 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %43 = load i32, i32* %offsetM, align 4, !tbaa !8
  %add62 = add i32 %42, %43
  %44 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv63 = zext i8 %44 to i32
  %call64 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %40, %struct._cms_io_handler* %41, i32 %add62, i32 %conv63) #7
  %call65 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %39, i32 1, %struct._cmsStage_struct* %call64) #7
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.end.68, label %if.then.67

if.then.67:                                       ; preds = %if.then.61
  br label %Error

if.end.68:                                        ; preds = %if.then.61
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %if.end.58
  %45 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %cmp70 = icmp ne i32 %45, 0
  br i1 %cmp70, label %if.then.72, label %if.end.79

if.then.72:                                       ; preds = %if.end.69
  %46 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %47 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %48 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %49 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %50 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %add73 = add i32 %49, %50
  %call74 = call %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* %47, %struct._cms_io_handler* %48, i32 %add73) #7
  %call75 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %46, i32 1, %struct._cmsStage_struct* %call74) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.then.72
  br label %Error

if.end.78:                                        ; preds = %if.then.72
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.end.69
  %51 = load i32, i32* %offsetB, align 4, !tbaa !8
  %cmp80 = icmp ne i32 %51, 0
  br i1 %cmp80, label %if.then.82, label %if.end.90

if.then.82:                                       ; preds = %if.end.79
  %52 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %53 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %55 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %56 = load i32, i32* %offsetB, align 4, !tbaa !8
  %add83 = add i32 %55, %56
  %57 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv84 = zext i8 %57 to i32
  %call85 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %53, %struct._cms_io_handler* %54, i32 %add83, i32 %conv84) #7
  %call86 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %52, i32 1, %struct._cmsStage_struct* %call85) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.then.82
  br label %Error

if.end.89:                                        ; preds = %if.then.82
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.79
  %58 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %58, align 4, !tbaa !8
  %59 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %60 = bitcast %struct._cmsPipeline_struct* %59 to i8*
  store i8* %60, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.88, %if.then.77, %if.then.67, %if.then.56, %if.then.44
  %61 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %61) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.90, %if.then.35, %if.then.29, %if.then.25, %if.then.21, %if.then.17, %if.then.13, %if.then.9, %if.then.5, %if.then
  %62 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #2
  %63 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #2
  %64 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.end(i64 4, i8* %64) #2
  %65 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %66 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #2
  %67 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  call void @llvm.lifetime.end(i64 1, i8* %outputChan) #2
  call void @llvm.lifetime.end(i64 1, i8* %inputChan) #2
  %68 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = load i8*, i8** %retval
  ret i8* %69
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_LUTA2B_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Lut = alloca %struct._cmsPipeline_struct*, align 8
  %inputChan = alloca i32, align 4
  %outputChan = alloca i32, align 4
  %A = alloca %struct._cmsStage_struct*, align 8
  %B = alloca %struct._cmsStage_struct*, align 8
  %M = alloca %struct._cmsStage_struct*, align 8
  %Matrix = alloca %struct._cmsStage_struct*, align 8
  %CLUT = alloca %struct._cmsStage_struct*, align 8
  %offsetB = alloca i32, align 4
  %offsetMat = alloca i32, align 4
  %offsetM = alloca i32, align 4
  %offsetC = alloca i32, align 4
  %offsetA = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %DirectoryPos = alloca i32, align 4
  %CurrentPos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %2, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %3 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast %struct._cmsStage_struct** %A to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %6 = bitcast %struct._cmsStage_struct** %B to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %7 = bitcast %struct._cmsStage_struct** %M to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %8 = bitcast %struct._cmsStage_struct** %Matrix to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %9 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %10 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  store i32 0, i32* %offsetB, align 4, !tbaa !8
  %11 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  store i32 0, i32* %offsetMat, align 4, !tbaa !8
  %12 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  store i32 0, i32* %offsetM, align 4, !tbaa !8
  %13 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  store i32 0, i32* %offsetC, align 4, !tbaa !8
  %14 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  store i32 0, i32* %offsetA, align 4, !tbaa !8
  %15 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  %16 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #2
  %17 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #2
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %18, i32 0, i32 8
  %19 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %19(%struct._cms_io_handler* %20) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %21 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %Elements = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %21, i32 0, i32 0
  %22 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elements, align 8, !tbaa !53
  %cmp = icmp ne %struct._cmsStage_struct* %22, null
  br i1 %cmp, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %23 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call3 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %23, i32 1, i32 1668707188, %struct._cmsStage_struct** %B) #7
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %if.end.16, label %if.then.4

if.then.4:                                        ; preds = %if.then
  %24 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call5 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %24, i32 3, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** %M, %struct._cmsStage_struct** %Matrix, %struct._cmsStage_struct** %B) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.15, label %if.then.7

if.then.7:                                        ; preds = %if.then.4
  %25 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call8 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %25, i32 3, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** %A, %struct._cmsStage_struct** %CLUT, %struct._cmsStage_struct** %B) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.14, label %if.then.10

if.then.10:                                       ; preds = %if.then.7
  %26 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call11 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %26, i32 5, i32 1668707188, i32 1668052340, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** %A, %struct._cmsStage_struct** %CLUT, %struct._cmsStage_struct** %M, %struct._cmsStage_struct** %Matrix, %struct._cmsStage_struct** %B) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end, label %if.then.13

if.then.13:                                       ; preds = %if.then.10
  %27 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %27, i32 0, i32 5
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %28, i32 13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.10
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %if.then.7
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.4
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.then
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %entry
  %29 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call18 = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %29) #7
  store i32 %call18, i32* %inputChan, align 4, !tbaa !8
  %30 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call19 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %30) #7
  store i32 %call19, i32* %outputChan, align 4, !tbaa !8
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load i32, i32* %inputChan, align 4, !tbaa !8
  %conv20 = trunc i32 %32 to i8
  %call21 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %31, i8 zeroext %conv20) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.17
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %34 = load i32, i32* %outputChan, align 4, !tbaa !8
  %conv25 = trunc i32 %34 to i8
  %call26 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %33, i8 zeroext %conv25) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call30 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %35, i16 zeroext 0) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell34 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %36, i32 0, i32 8
  %37 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell34, align 8, !tbaa !99
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call35 = call i32 %37(%struct._cms_io_handler* %38) #7
  store i32 %call35, i32* %DirectoryPos, align 4, !tbaa !8
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call36 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %39, i32 0) #7
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.33
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call40 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %40, i32 0) #7
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.end.43, label %if.then.42

if.then.42:                                       ; preds = %if.end.39
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.end.39
  %41 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call44 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %41, i32 0) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.end.43
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.end.43
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call48 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %42, i32 0) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.47
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.end.47
  %43 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call52 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %43, i32 0) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.end.51
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %if.end.51
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %cmp56 = icmp ne %struct._cmsStage_struct* %44, null
  br i1 %cmp56, label %if.then.58, label %if.end.66

if.then.58:                                       ; preds = %if.end.55
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell59 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %45, i32 0, i32 8
  %46 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell59, align 8, !tbaa !99
  %47 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call60 = call i32 %46(%struct._cms_io_handler* %47) #7
  %48 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub61 = sub i32 %call60, %48
  store i32 %sub61, i32* %offsetA, align 4, !tbaa !8
  %49 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %50 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %51 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %call62 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %49, %struct._cms_io_handler* %50, i32 1885434465, %struct._cmsStage_struct* %51) #7
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.then.58
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.then.58
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.end.55
  %52 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %cmp67 = icmp ne %struct._cmsStage_struct* %52, null
  br i1 %cmp67, label %if.then.69, label %if.end.79

if.then.69:                                       ; preds = %if.end.66
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell70 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %53, i32 0, i32 8
  %54 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell70, align 8, !tbaa !99
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call71 = call i32 %54(%struct._cms_io_handler* %55) #7
  %56 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub72 = sub i32 %call71, %56
  store i32 %sub72, i32* %offsetC, align 4, !tbaa !8
  %57 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %58 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %59 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %SaveAs8Bits = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %59, i32 0, i32 9
  %60 = load i32, i32* %SaveAs8Bits, align 4, !tbaa !100
  %tobool73 = icmp ne i32 %60, 0
  %cond = select i1 %tobool73, i32 1, i32 2
  %conv74 = trunc i32 %cond to i8
  %61 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %call75 = call i32 @WriteCLUT(%struct._cms_typehandler_struct* %57, %struct._cms_io_handler* %58, i8 zeroext %conv74, %struct._cmsStage_struct* %61) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.then.69
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.then.69
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.end.66
  %62 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %cmp80 = icmp ne %struct._cmsStage_struct* %62, null
  br i1 %cmp80, label %if.then.82, label %if.end.90

if.then.82:                                       ; preds = %if.end.79
  %63 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell83 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %63, i32 0, i32 8
  %64 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell83, align 8, !tbaa !99
  %65 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call84 = call i32 %64(%struct._cms_io_handler* %65) #7
  %66 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub85 = sub i32 %call84, %66
  store i32 %sub85, i32* %offsetM, align 4, !tbaa !8
  %67 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %68 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %69 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %call86 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %67, %struct._cms_io_handler* %68, i32 1885434465, %struct._cmsStage_struct* %69) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.then.82
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.89:                                        ; preds = %if.then.82
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.79
  %70 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %cmp91 = icmp ne %struct._cmsStage_struct* %70, null
  br i1 %cmp91, label %if.then.93, label %if.end.101

if.then.93:                                       ; preds = %if.end.90
  %71 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell94 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %71, i32 0, i32 8
  %72 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell94, align 8, !tbaa !99
  %73 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call95 = call i32 %72(%struct._cms_io_handler* %73) #7
  %74 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub96 = sub i32 %call95, %74
  store i32 %sub96, i32* %offsetMat, align 4, !tbaa !8
  %75 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %76 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %77 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %call97 = call i32 @WriteMatrix(%struct._cms_typehandler_struct* %75, %struct._cms_io_handler* %76, %struct._cmsStage_struct* %77) #7
  %tobool98 = icmp ne i32 %call97, 0
  br i1 %tobool98, label %if.end.100, label %if.then.99

if.then.99:                                       ; preds = %if.then.93
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.100:                                       ; preds = %if.then.93
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.end.90
  %78 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %cmp102 = icmp ne %struct._cmsStage_struct* %78, null
  br i1 %cmp102, label %if.then.104, label %if.end.112

if.then.104:                                      ; preds = %if.end.101
  %79 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell105 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %79, i32 0, i32 8
  %80 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell105, align 8, !tbaa !99
  %81 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call106 = call i32 %80(%struct._cms_io_handler* %81) #7
  %82 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub107 = sub i32 %call106, %82
  store i32 %sub107, i32* %offsetB, align 4, !tbaa !8
  %83 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %84 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %85 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %call108 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %83, %struct._cms_io_handler* %84, i32 1885434465, %struct._cmsStage_struct* %85) #7
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.end.111, label %if.then.110

if.then.110:                                      ; preds = %if.then.104
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.111:                                       ; preds = %if.then.104
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %if.end.101
  %86 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell113 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %86, i32 0, i32 8
  %87 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell113, align 8, !tbaa !99
  %88 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call114 = call i32 %87(%struct._cms_io_handler* %88) #7
  store i32 %call114, i32* %CurrentPos, align 4, !tbaa !8
  %89 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %89, i32 0, i32 6
  %90 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %91 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %92 = load i32, i32* %DirectoryPos, align 4, !tbaa !8
  %call115 = call i32 %90(%struct._cms_io_handler* %91, i32 %92) #7
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %if.end.112
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.118:                                       ; preds = %if.end.112
  %93 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %94 = load i32, i32* %offsetB, align 4, !tbaa !8
  %call119 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %93, i32 %94) #7
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.122:                                       ; preds = %if.end.118
  %95 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %96 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %call123 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %95, i32 %96) #7
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end.126, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %if.end.122
  %97 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %98 = load i32, i32* %offsetM, align 4, !tbaa !8
  %call127 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %97, i32 %98) #7
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.end.130, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.130:                                       ; preds = %if.end.126
  %99 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %100 = load i32, i32* %offsetC, align 4, !tbaa !8
  %call131 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %99, i32 %100) #7
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.134:                                       ; preds = %if.end.130
  %101 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %102 = load i32, i32* %offsetA, align 4, !tbaa !8
  %call135 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %101, i32 %102) #7
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.end.134
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.138:                                       ; preds = %if.end.134
  %103 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek139 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %103, i32 0, i32 6
  %104 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek139, align 8, !tbaa !101
  %105 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %106 = load i32, i32* %CurrentPos, align 4, !tbaa !8
  %call140 = call i32 %104(%struct._cms_io_handler* %105, i32 %106) #7
  %tobool141 = icmp ne i32 %call140, 0
  br i1 %tobool141, label %if.end.143, label %if.then.142

if.then.142:                                      ; preds = %if.end.138
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.143:                                       ; preds = %if.end.138
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.143, %if.then.142, %if.then.137, %if.then.133, %if.then.129, %if.then.125, %if.then.121, %if.then.117, %if.then.110, %if.then.99, %if.then.88, %if.then.77, %if.then.64, %if.then.54, %if.then.50, %if.then.46, %if.then.42, %if.then.38, %if.then.32, %if.then.28, %if.then.23, %if.then.13
  %107 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #2
  %108 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #2
  %109 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #2
  %110 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #2
  %111 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #2
  %112 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #2
  %113 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #2
  %114 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #2
  %115 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #2
  %116 = bitcast %struct._cmsStage_struct** %Matrix to i8*
  call void @llvm.lifetime.end(i64 8, i8* %116) #2
  %117 = bitcast %struct._cmsStage_struct** %M to i8*
  call void @llvm.lifetime.end(i64 8, i8* %117) #2
  %118 = bitcast %struct._cmsStage_struct** %B to i8*
  call void @llvm.lifetime.end(i64 8, i8* %118) #2
  %119 = bitcast %struct._cmsStage_struct** %A to i8*
  call void @llvm.lifetime.end(i64 8, i8* %119) #2
  %120 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #2
  %121 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %121) #2
  %122 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %122) #2
  %123 = load i32, i32* %retval
  ret i32 %123
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUTA2B_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  %call = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %1) #7
  %2 = bitcast %struct._cmsPipeline_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_LUTA2B_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUTB2A_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %inputChan = alloca i8, align 1
  %outputChan = alloca i8, align 1
  %BaseOffset = alloca i32, align 4
  %offsetB = alloca i32, align 4
  %offsetMat = alloca i32, align 4
  %offsetM = alloca i32, align 4
  %offsetC = alloca i32, align 4
  %offsetA = alloca i32, align 4
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  call void @llvm.lifetime.start(i64 1, i8* %inputChan) #2
  call void @llvm.lifetime.start(i64 1, i8* %outputChan) #2
  %0 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsPipeline_struct* null, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %7, i32 0, i32 8
  %8 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %8(%struct._cms_io_handler* %9) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %10, i8* %inputChan) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %11, i8* %outputChan) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call7 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %12, i16* null) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %13, i32* %offsetB) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.10
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call15 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %14, i32* %offsetMat) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.14
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call19 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %15, i32* %offsetM) #7
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.18
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.18
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call23 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %16, i32* %offsetC) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.22
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.22
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call27 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %17, i32* %offsetA) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.26
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %20 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv31 = zext i8 %20 to i32
  %21 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv32 = zext i8 %21 to i32
  %call33 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %19, i32 %conv31, i32 %conv32) #7
  store %struct._cmsPipeline_struct* %call33, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %22 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp = icmp eq %struct._cmsPipeline_struct* %22, null
  br i1 %cmp, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.30
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.30
  %23 = load i32, i32* %offsetB, align 4, !tbaa !8
  %cmp37 = icmp ne i32 %23, 0
  br i1 %cmp37, label %if.then.39, label %if.end.46

if.then.39:                                       ; preds = %if.end.36
  %24 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %27 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %28 = load i32, i32* %offsetB, align 4, !tbaa !8
  %add = add i32 %27, %28
  %29 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv40 = zext i8 %29 to i32
  %call41 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %25, %struct._cms_io_handler* %26, i32 %add, i32 %conv40) #7
  %call42 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %24, i32 1, %struct._cmsStage_struct* %call41) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.then.39
  br label %Error

if.end.45:                                        ; preds = %if.then.39
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.end.36
  %30 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %cmp47 = icmp ne i32 %30, 0
  br i1 %cmp47, label %if.then.49, label %if.end.56

if.then.49:                                       ; preds = %if.end.46
  %31 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %32 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %34 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %35 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %add50 = add i32 %34, %35
  %call51 = call %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* %32, %struct._cms_io_handler* %33, i32 %add50) #7
  %call52 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %31, i32 1, %struct._cmsStage_struct* %call51) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.then.49
  br label %Error

if.end.55:                                        ; preds = %if.then.49
  br label %if.end.56

if.end.56:                                        ; preds = %if.end.55, %if.end.46
  %36 = load i32, i32* %offsetM, align 4, !tbaa !8
  %cmp57 = icmp ne i32 %36, 0
  br i1 %cmp57, label %if.then.59, label %if.end.67

if.then.59:                                       ; preds = %if.end.56
  %37 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %38 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %41 = load i32, i32* %offsetM, align 4, !tbaa !8
  %add60 = add i32 %40, %41
  %42 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv61 = zext i8 %42 to i32
  %call62 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %38, %struct._cms_io_handler* %39, i32 %add60, i32 %conv61) #7
  %call63 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %37, i32 1, %struct._cmsStage_struct* %call62) #7
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %if.then.59
  br label %Error

if.end.66:                                        ; preds = %if.then.59
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %if.end.56
  %43 = load i32, i32* %offsetC, align 4, !tbaa !8
  %cmp68 = icmp ne i32 %43, 0
  br i1 %cmp68, label %if.then.70, label %if.end.79

if.then.70:                                       ; preds = %if.end.67
  %44 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %45 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %47 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %48 = load i32, i32* %offsetC, align 4, !tbaa !8
  %add71 = add i32 %47, %48
  %49 = load i8, i8* %inputChan, align 1, !tbaa !15
  %conv72 = zext i8 %49 to i32
  %50 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv73 = zext i8 %50 to i32
  %call74 = call %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* %45, %struct._cms_io_handler* %46, i32 %add71, i32 %conv72, i32 %conv73) #7
  %call75 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %44, i32 1, %struct._cmsStage_struct* %call74) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.then.70
  br label %Error

if.end.78:                                        ; preds = %if.then.70
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.end.67
  %51 = load i32, i32* %offsetA, align 4, !tbaa !8
  %cmp80 = icmp ne i32 %51, 0
  br i1 %cmp80, label %if.then.82, label %if.end.90

if.then.82:                                       ; preds = %if.end.79
  %52 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %53 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %55 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %56 = load i32, i32* %offsetA, align 4, !tbaa !8
  %add83 = add i32 %55, %56
  %57 = load i8, i8* %outputChan, align 1, !tbaa !15
  %conv84 = zext i8 %57 to i32
  %call85 = call %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %53, %struct._cms_io_handler* %54, i32 %add83, i32 %conv84) #7
  %call86 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %52, i32 1, %struct._cmsStage_struct* %call85) #7
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.then.82
  br label %Error

if.end.89:                                        ; preds = %if.then.82
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.79
  %58 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %58, align 4, !tbaa !8
  %59 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %60 = bitcast %struct._cmsPipeline_struct* %59 to i8*
  store i8* %60, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.88, %if.then.77, %if.then.65, %if.then.54, %if.then.44
  %61 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %61) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.90, %if.then.35, %if.then.29, %if.then.25, %if.then.21, %if.then.17, %if.then.13, %if.then.9, %if.then.5, %if.then
  %62 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #2
  %63 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #2
  %64 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.end(i64 4, i8* %64) #2
  %65 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %66 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #2
  %67 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  call void @llvm.lifetime.end(i64 1, i8* %outputChan) #2
  call void @llvm.lifetime.end(i64 1, i8* %inputChan) #2
  %69 = load i8*, i8** %retval
  ret i8* %69
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_LUTB2A_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Lut = alloca %struct._cmsPipeline_struct*, align 8
  %inputChan = alloca i32, align 4
  %outputChan = alloca i32, align 4
  %A = alloca %struct._cmsStage_struct*, align 8
  %B = alloca %struct._cmsStage_struct*, align 8
  %M = alloca %struct._cmsStage_struct*, align 8
  %Matrix = alloca %struct._cmsStage_struct*, align 8
  %CLUT = alloca %struct._cmsStage_struct*, align 8
  %offsetB = alloca i32, align 4
  %offsetMat = alloca i32, align 4
  %offsetM = alloca i32, align 4
  %offsetC = alloca i32, align 4
  %offsetA = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %DirectoryPos = alloca i32, align 4
  %CurrentPos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %2, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %3 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast %struct._cmsStage_struct** %A to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %6 = bitcast %struct._cmsStage_struct** %B to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %7 = bitcast %struct._cmsStage_struct** %M to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %8 = bitcast %struct._cmsStage_struct** %Matrix to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %9 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %10 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  store i32 0, i32* %offsetB, align 4, !tbaa !8
  %11 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  store i32 0, i32* %offsetMat, align 4, !tbaa !8
  %12 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  store i32 0, i32* %offsetM, align 4, !tbaa !8
  %13 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  store i32 0, i32* %offsetC, align 4, !tbaa !8
  %14 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  store i32 0, i32* %offsetA, align 4, !tbaa !8
  %15 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  %16 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #2
  %17 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #2
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %18, i32 0, i32 8
  %19 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %19(%struct._cms_io_handler* %20) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %21 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call2 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %21, i32 1, i32 1668707188, %struct._cmsStage_struct** %B) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end.14, label %if.then

if.then:                                          ; preds = %entry
  %22 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call3 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %22, i32 3, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** %B, %struct._cmsStage_struct** %Matrix, %struct._cmsStage_struct** %M) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.13, label %if.then.5

if.then.5:                                        ; preds = %if.then
  %23 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call6 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %23, i32 3, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** %B, %struct._cmsStage_struct** %CLUT, %struct._cmsStage_struct** %A) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.12, label %if.then.8

if.then.8:                                        ; preds = %if.then.5
  %24 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call9 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %24, i32 5, i32 1668707188, i32 1835103334, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** %B, %struct._cmsStage_struct** %Matrix, %struct._cmsStage_struct** %M, %struct._cmsStage_struct** %CLUT, %struct._cmsStage_struct** %A) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end, label %if.then.11

if.then.11:                                       ; preds = %if.then.8
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %25, i32 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %26, i32 13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.8
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %if.then.5
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %entry
  %27 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call15 = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %27) #7
  store i32 %call15, i32* %inputChan, align 4, !tbaa !8
  %28 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call16 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %28) #7
  store i32 %call16, i32* %outputChan, align 4, !tbaa !8
  %29 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %30 = load i32, i32* %inputChan, align 4, !tbaa !8
  %conv17 = trunc i32 %30 to i8
  %call18 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %29, i8 zeroext %conv17) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.14
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.14
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load i32, i32* %outputChan, align 4, !tbaa !8
  %conv22 = trunc i32 %32 to i8
  %call23 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %31, i8 zeroext %conv22) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.21
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call27 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %33, i16 zeroext 0) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.26
  %34 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell31 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %34, i32 0, i32 8
  %35 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell31, align 8, !tbaa !99
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call32 = call i32 %35(%struct._cms_io_handler* %36) #7
  store i32 %call32, i32* %DirectoryPos, align 4, !tbaa !8
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call33 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %37, i32 0) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.end.30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.30
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call37 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %38, i32 0) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.end.36
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %if.end.36
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call41 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %39, i32 0) #7
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %if.end.40
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.44:                                        ; preds = %if.end.40
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call45 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %40, i32 0) #7
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.44
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %if.end.44
  %41 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call49 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %41, i32 0) #7
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.end.48
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %if.end.48
  %42 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsStage_struct* %42, null
  br i1 %cmp, label %if.then.54, label %if.end.62

if.then.54:                                       ; preds = %if.end.52
  %43 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell55 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %43, i32 0, i32 8
  %44 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell55, align 8, !tbaa !99
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call56 = call i32 %44(%struct._cms_io_handler* %45) #7
  %46 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub57 = sub i32 %call56, %46
  store i32 %sub57, i32* %offsetA, align 4, !tbaa !8
  %47 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %48 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %49 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %A, align 8, !tbaa !1
  %call58 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %47, %struct._cms_io_handler* %48, i32 1885434465, %struct._cmsStage_struct* %49) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.then.54
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %if.then.54
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61, %if.end.52
  %50 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %cmp63 = icmp ne %struct._cmsStage_struct* %50, null
  br i1 %cmp63, label %if.then.65, label %if.end.75

if.then.65:                                       ; preds = %if.end.62
  %51 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell66 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %51, i32 0, i32 8
  %52 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell66, align 8, !tbaa !99
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call67 = call i32 %52(%struct._cms_io_handler* %53) #7
  %54 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub68 = sub i32 %call67, %54
  store i32 %sub68, i32* %offsetC, align 4, !tbaa !8
  %55 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %56 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %57 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %SaveAs8Bits = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %57, i32 0, i32 9
  %58 = load i32, i32* %SaveAs8Bits, align 4, !tbaa !100
  %tobool69 = icmp ne i32 %58, 0
  %cond = select i1 %tobool69, i32 1, i32 2
  %conv70 = trunc i32 %cond to i8
  %59 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %call71 = call i32 @WriteCLUT(%struct._cms_typehandler_struct* %55, %struct._cms_io_handler* %56, i8 zeroext %conv70, %struct._cmsStage_struct* %59) #7
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.end.74, label %if.then.73

if.then.73:                                       ; preds = %if.then.65
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %if.then.65
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.end.62
  %60 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %cmp76 = icmp ne %struct._cmsStage_struct* %60, null
  br i1 %cmp76, label %if.then.78, label %if.end.86

if.then.78:                                       ; preds = %if.end.75
  %61 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell79 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %61, i32 0, i32 8
  %62 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell79, align 8, !tbaa !99
  %63 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call80 = call i32 %62(%struct._cms_io_handler* %63) #7
  %64 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub81 = sub i32 %call80, %64
  store i32 %sub81, i32* %offsetM, align 4, !tbaa !8
  %65 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %66 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %67 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %M, align 8, !tbaa !1
  %call82 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %65, %struct._cms_io_handler* %66, i32 1885434465, %struct._cmsStage_struct* %67) #7
  %tobool83 = icmp ne i32 %call82, 0
  br i1 %tobool83, label %if.end.85, label %if.then.84

if.then.84:                                       ; preds = %if.then.78
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.85:                                        ; preds = %if.then.78
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.end.75
  %68 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %cmp87 = icmp ne %struct._cmsStage_struct* %68, null
  br i1 %cmp87, label %if.then.89, label %if.end.97

if.then.89:                                       ; preds = %if.end.86
  %69 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell90 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %69, i32 0, i32 8
  %70 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell90, align 8, !tbaa !99
  %71 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call91 = call i32 %70(%struct._cms_io_handler* %71) #7
  %72 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub92 = sub i32 %call91, %72
  store i32 %sub92, i32* %offsetMat, align 4, !tbaa !8
  %73 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %74 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %75 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Matrix, align 8, !tbaa !1
  %call93 = call i32 @WriteMatrix(%struct._cms_typehandler_struct* %73, %struct._cms_io_handler* %74, %struct._cmsStage_struct* %75) #7
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.end.96, label %if.then.95

if.then.95:                                       ; preds = %if.then.89
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.96:                                        ; preds = %if.then.89
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.86
  %76 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %cmp98 = icmp ne %struct._cmsStage_struct* %76, null
  br i1 %cmp98, label %if.then.100, label %if.end.108

if.then.100:                                      ; preds = %if.end.97
  %77 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell101 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %77, i32 0, i32 8
  %78 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell101, align 8, !tbaa !99
  %79 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call102 = call i32 %78(%struct._cms_io_handler* %79) #7
  %80 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub103 = sub i32 %call102, %80
  store i32 %sub103, i32* %offsetB, align 4, !tbaa !8
  %81 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %82 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %83 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %B, align 8, !tbaa !1
  %call104 = call i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %81, %struct._cms_io_handler* %82, i32 1885434465, %struct._cmsStage_struct* %83) #7
  %tobool105 = icmp ne i32 %call104, 0
  br i1 %tobool105, label %if.end.107, label %if.then.106

if.then.106:                                      ; preds = %if.then.100
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.107:                                       ; preds = %if.then.100
  br label %if.end.108

if.end.108:                                       ; preds = %if.end.107, %if.end.97
  %84 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell109 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %84, i32 0, i32 8
  %85 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell109, align 8, !tbaa !99
  %86 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call110 = call i32 %85(%struct._cms_io_handler* %86) #7
  store i32 %call110, i32* %CurrentPos, align 4, !tbaa !8
  %87 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %87, i32 0, i32 6
  %88 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %89 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %90 = load i32, i32* %DirectoryPos, align 4, !tbaa !8
  %call111 = call i32 %88(%struct._cms_io_handler* %89, i32 %90) #7
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.end.114, label %if.then.113

if.then.113:                                      ; preds = %if.end.108
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.114:                                       ; preds = %if.end.108
  %91 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %92 = load i32, i32* %offsetB, align 4, !tbaa !8
  %call115 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %91, i32 %92) #7
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %if.end.114
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.118:                                       ; preds = %if.end.114
  %93 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %94 = load i32, i32* %offsetMat, align 4, !tbaa !8
  %call119 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %93, i32 %94) #7
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.122:                                       ; preds = %if.end.118
  %95 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %96 = load i32, i32* %offsetM, align 4, !tbaa !8
  %call123 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %95, i32 %96) #7
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end.126, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %if.end.122
  %97 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %98 = load i32, i32* %offsetC, align 4, !tbaa !8
  %call127 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %97, i32 %98) #7
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.end.130, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.130:                                       ; preds = %if.end.126
  %99 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %100 = load i32, i32* %offsetA, align 4, !tbaa !8
  %call131 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %99, i32 %100) #7
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.134:                                       ; preds = %if.end.130
  %101 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek135 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %101, i32 0, i32 6
  %102 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek135, align 8, !tbaa !101
  %103 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %104 = load i32, i32* %CurrentPos, align 4, !tbaa !8
  %call136 = call i32 %102(%struct._cms_io_handler* %103, i32 %104) #7
  %tobool137 = icmp ne i32 %call136, 0
  br i1 %tobool137, label %if.end.139, label %if.then.138

if.then.138:                                      ; preds = %if.end.134
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.139:                                       ; preds = %if.end.134
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.139, %if.then.138, %if.then.133, %if.then.129, %if.then.125, %if.then.121, %if.then.117, %if.then.113, %if.then.106, %if.then.95, %if.then.84, %if.then.73, %if.then.60, %if.then.51, %if.then.47, %if.then.43, %if.then.39, %if.then.35, %if.then.29, %if.then.25, %if.then.20, %if.then.11
  %105 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105) #2
  %106 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #2
  %107 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #2
  %108 = bitcast i32* %offsetA to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #2
  %109 = bitcast i32* %offsetC to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #2
  %110 = bitcast i32* %offsetM to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #2
  %111 = bitcast i32* %offsetMat to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #2
  %112 = bitcast i32* %offsetB to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #2
  %113 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #2
  %114 = bitcast %struct._cmsStage_struct** %Matrix to i8*
  call void @llvm.lifetime.end(i64 8, i8* %114) #2
  %115 = bitcast %struct._cmsStage_struct** %M to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #2
  %116 = bitcast %struct._cmsStage_struct** %B to i8*
  call void @llvm.lifetime.end(i64 8, i8* %116) #2
  %117 = bitcast %struct._cmsStage_struct** %A to i8*
  call void @llvm.lifetime.end(i64 8, i8* %117) #2
  %118 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %118) #2
  %119 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %119) #2
  %120 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %120) #2
  %121 = load i32, i32* %retval
  ret i32 %121
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_LUTB2A_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  %call = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %1) #7
  %2 = bitcast %struct._cmsPipeline_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_LUTB2A_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_UcrBg_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %n = alloca %struct.cmsUcrBg*, align 8
  %CountUcr = alloca i32, align 4
  %CountBg = alloca i32, align 4
  %ASCIIString = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsUcrBg** %n to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %1, i32 0, i32 5
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %2, i32 24) #7
  %3 = bitcast i8* %call to %struct.cmsUcrBg*
  store %struct.cmsUcrBg* %3, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %4 = bitcast i32* %CountUcr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %CountBg to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i8** %ASCIIString to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !8
  %8 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsUcrBg* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %9, i32* %CountUcr) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %10 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv = zext i32 %10 to i64
  %cmp4 = icmp ult i64 %conv, 4
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.3
  %11 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv8 = zext i32 %11 to i64
  %sub = sub i64 %conv8, 4
  %conv9 = trunc i64 %sub to i32
  store i32 %conv9, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %12 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID10 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %12, i32 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID10, align 8, !tbaa !26
  %14 = load i32, i32* %CountUcr, align 4, !tbaa !8
  %call11 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %13, i32 %14, i16* null) #7
  %15 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Ucr = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %15, i32 0, i32 0
  store %struct._cms_curve_struct* %call11, %struct._cms_curve_struct** %Ucr, align 8, !tbaa !102
  %16 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Ucr12 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %16, i32 0, i32 0
  %17 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr12, align 8, !tbaa !102
  %cmp13 = icmp eq %struct._cms_curve_struct* %17, null
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.7
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %19 = load i32, i32* %CountUcr, align 4, !tbaa !8
  %20 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Ucr17 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %20, i32 0, i32 0
  %21 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr17, align 8, !tbaa !102
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %21, i32 0, i32 6
  %22 = load i16*, i16** %Table16, align 8, !tbaa !45
  %call18 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %18, i32 %19, i16* %22) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.16
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.16
  %23 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv22 = zext i32 %23 to i64
  %cmp23 = icmp ult i64 %conv22, 4
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.21
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.21
  %24 = load i32, i32* %CountUcr, align 4, !tbaa !8
  %conv27 = zext i32 %24 to i64
  %mul = mul i64 %conv27, 2
  %25 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv28 = zext i32 %25 to i64
  %sub29 = sub i64 %conv28, %mul
  %conv30 = trunc i64 %sub29 to i32
  store i32 %conv30, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call31 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %26, i32* %CountBg) #7
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.26
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %if.end.26
  %27 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv35 = zext i32 %27 to i64
  %cmp36 = icmp ult i64 %conv35, 4
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.end.34
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.34
  %28 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv40 = zext i32 %28 to i64
  %sub41 = sub i64 %conv40, 4
  %conv42 = trunc i64 %sub41 to i32
  store i32 %conv42, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %29 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID43 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %29, i32 0, i32 5
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID43, align 8, !tbaa !26
  %31 = load i32, i32* %CountBg, align 4, !tbaa !8
  %call44 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %30, i32 %31, i16* null) #7
  %32 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Bg = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %32, i32 0, i32 1
  store %struct._cms_curve_struct* %call44, %struct._cms_curve_struct** %Bg, align 8, !tbaa !104
  %33 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Bg45 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %33, i32 0, i32 1
  %34 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg45, align 8, !tbaa !104
  %cmp46 = icmp eq %struct._cms_curve_struct* %34, null
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.39
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.end.39
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %36 = load i32, i32* %CountBg, align 4, !tbaa !8
  %37 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Bg50 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %37, i32 0, i32 1
  %38 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg50, align 8, !tbaa !104
  %Table1651 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %38, i32 0, i32 6
  %39 = load i16*, i16** %Table1651, align 8, !tbaa !45
  %call52 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %35, i32 %36, i16* %39) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.end.49
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %if.end.49
  %40 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv56 = zext i32 %40 to i64
  %41 = load i32, i32* %CountBg, align 4, !tbaa !8
  %conv57 = zext i32 %41 to i64
  %mul58 = mul i64 %conv57, 2
  %cmp59 = icmp ult i64 %conv56, %mul58
  br i1 %cmp59, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.55
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.62:                                        ; preds = %if.end.55
  %42 = load i32, i32* %CountBg, align 4, !tbaa !8
  %conv63 = zext i32 %42 to i64
  %mul64 = mul i64 %conv63, 2
  %43 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv65 = zext i32 %43 to i64
  %sub66 = sub i64 %conv65, %mul64
  %conv67 = trunc i64 %sub66 to i32
  store i32 %conv67, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %44 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp68 = icmp eq i32 %44, -1
  br i1 %cmp68, label %if.then.70, label %if.end.71

if.then.70:                                       ; preds = %if.end.62
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.end.62
  %45 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID72 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %45, i32 0, i32 5
  %46 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID72, align 8, !tbaa !26
  %call73 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %46, i32 1) #7
  %47 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Desc = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %47, i32 0, i32 2
  store %struct._cms_MLU_struct* %call73, %struct._cms_MLU_struct** %Desc, align 8, !tbaa !105
  %48 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Desc74 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %48, i32 0, i32 2
  %49 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc74, align 8, !tbaa !105
  %cmp75 = icmp eq %struct._cms_MLU_struct* %49, null
  br i1 %cmp75, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.71
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.end.71
  %50 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID79 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %50, i32 0, i32 5
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID79, align 8, !tbaa !26
  %52 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %add = add i32 %52, 1
  %call80 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %51, i32 %add) #7
  store i8* %call80, i8** %ASCIIString, align 8, !tbaa !1
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %53, i32 0, i32 5
  %54 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %56 = load i8*, i8** %ASCIIString, align 8, !tbaa !1
  %57 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call81 = call i32 %54(%struct._cms_io_handler* %55, i8* %56, i32 1, i32 %57) #7
  %58 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp82 = icmp ne i32 %call81, %58
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.end.78
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.85:                                        ; preds = %if.end.78
  %59 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %idxprom = zext i32 %59 to i64
  %60 = load i8*, i8** %ASCIIString, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %60, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %61 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %Desc86 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %61, i32 0, i32 2
  %62 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc86, align 8, !tbaa !105
  %63 = load i8*, i8** %ASCIIString, align 8, !tbaa !1
  %call87 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %63) #7
  %64 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID88 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %64, i32 0, i32 5
  %65 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID88, align 8, !tbaa !26
  %66 = load i8*, i8** %ASCIIString, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %65, i8* %66) #7
  %67 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %67, align 4, !tbaa !8
  %68 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %n, align 8, !tbaa !1
  %69 = bitcast %struct.cmsUcrBg* %68 to i8*
  store i8* %69, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.85, %if.then.84, %if.then.77, %if.then.70, %if.then.61, %if.then.54, %if.then.48, %if.then.38, %if.then.33, %if.then.25, %if.then.20, %if.then.15, %if.then.6, %if.then.2, %if.then
  %70 = bitcast i8** %ASCIIString to i8*
  call void @llvm.lifetime.end(i64 8, i8* %70) #2
  %71 = bitcast i32* %CountBg to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = bitcast i32* %CountUcr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #2
  %73 = bitcast %struct.cmsUcrBg** %n to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #2
  %74 = load i8*, i8** %retval
  ret i8* %74
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_UcrBg_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Value = alloca %struct.cmsUcrBg*, align 8
  %TextSize = alloca i32, align 4
  %Text = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsUcrBg** %Value to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsUcrBg*
  store %struct.cmsUcrBg* %2, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %3 = bitcast i32* %TextSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Ucr = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %6, i32 0, i32 0
  %7 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr, align 8, !tbaa !102
  %nEntries = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %7, i32 0, i32 5
  %8 = load i32, i32* %nEntries, align 4, !tbaa !52
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %5, i32 %8) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Ucr1 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %10, i32 0, i32 0
  %11 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr1, align 8, !tbaa !102
  %nEntries2 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %11, i32 0, i32 5
  %12 = load i32, i32* %nEntries2, align 4, !tbaa !52
  %13 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Ucr3 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %13, i32 0, i32 0
  %14 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr3, align 8, !tbaa !102
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %14, i32 0, i32 6
  %15 = load i16*, i16** %Table16, align 8, !tbaa !45
  %call4 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %9, i32 %12, i16* %15) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Bg = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %17, i32 0, i32 1
  %18 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg, align 8, !tbaa !104
  %nEntries8 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %18, i32 0, i32 5
  %19 = load i32, i32* %nEntries8, align 4, !tbaa !52
  %call9 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %16, i32 %19) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.7
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Bg13 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %21, i32 0, i32 1
  %22 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg13, align 8, !tbaa !104
  %nEntries14 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %22, i32 0, i32 5
  %23 = load i32, i32* %nEntries14, align 4, !tbaa !52
  %24 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Bg15 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %24, i32 0, i32 1
  %25 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg15, align 8, !tbaa !104
  %Table1616 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %25, i32 0, i32 6
  %26 = load i16*, i16** %Table1616, align 8, !tbaa !45
  %call17 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %20, i32 %23, i16* %26) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.12
  %27 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Desc = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %27, i32 0, i32 2
  %28 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc, align 8, !tbaa !105
  %call21 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* null, i32 0) #7
  store i32 %call21, i32* %TextSize, align 4, !tbaa !8
  %29 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %29, i32 0, i32 5
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %31 = load i32, i32* %TextSize, align 4, !tbaa !8
  %call22 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %30, i32 %31) #7
  store i8* %call22, i8** %Text, align 8, !tbaa !1
  %32 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Value, align 8, !tbaa !1
  %Desc23 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %32, i32 0, i32 2
  %33 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc23, align 8, !tbaa !105
  %34 = load i8*, i8** %Text, align 8, !tbaa !1
  %35 = load i32, i32* %TextSize, align 4, !tbaa !8
  %call24 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* %34, i32 %35) #7
  %36 = load i32, i32* %TextSize, align 4, !tbaa !8
  %cmp = icmp ne i32 %call24, %36
  br i1 %cmp, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.20
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %37, i32 0, i32 9
  %38 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load i32, i32* %TextSize, align 4, !tbaa !8
  %41 = load i8*, i8** %Text, align 8, !tbaa !1
  %call27 = call i32 %38(%struct._cms_io_handler* %39, i32 %40, i8* %41) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.26
  %42 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID31 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %42, i32 0, i32 5
  %43 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID31, align 8, !tbaa !26
  %44 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %43, i8* %44) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.30, %if.then.29, %if.then.25, %if.then.19, %if.then.11, %if.then.6, %if.then
  %45 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast i32* %TextSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #2
  %47 = bitcast %struct.cmsUcrBg** %Value to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #2
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_UcrBg_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %Src = alloca %struct.cmsUcrBg*, align 8
  %NewUcrBg = alloca %struct.cmsUcrBg*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsUcrBg** %Src to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsUcrBg*
  store %struct.cmsUcrBg* %2, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %3 = bitcast %struct.cmsUcrBg** %NewUcrBg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %4, i32 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %5, i32 24) #7
  %6 = bitcast i8* %call to %struct.cmsUcrBg*
  store %struct.cmsUcrBg* %6, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %7 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsUcrBg* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Bg = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %8, i32 0, i32 1
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg, align 8, !tbaa !104
  %call1 = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %9) #7
  %10 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %Bg2 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %10, i32 0, i32 1
  store %struct._cms_curve_struct* %call1, %struct._cms_curve_struct** %Bg2, align 8, !tbaa !104
  %11 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Ucr = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %11, i32 0, i32 0
  %12 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr, align 8, !tbaa !102
  %call3 = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %12) #7
  %13 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %Ucr4 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %13, i32 0, i32 0
  store %struct._cms_curve_struct* %call3, %struct._cms_curve_struct** %Ucr4, align 8, !tbaa !102
  %14 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Desc = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %14, i32 0, i32 2
  %15 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc, align 8, !tbaa !105
  %call5 = call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %15) #7
  %16 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %Desc6 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %16, i32 0, i32 2
  store %struct._cms_MLU_struct* %call5, %struct._cms_MLU_struct** %Desc6, align 8, !tbaa !105
  %17 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %NewUcrBg, align 8, !tbaa !1
  %18 = bitcast %struct.cmsUcrBg* %17 to i8*
  store i8* %18, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %19 = bitcast %struct.cmsUcrBg** %NewUcrBg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %19) #2
  %20 = bitcast %struct.cmsUcrBg** %Src to i8*
  call void @llvm.lifetime.end(i64 8, i8* %20) #2
  %21 = load i8*, i8** %retval
  ret i8* %21
}

; Function Attrs: nounwind uwtable
define internal void @Type_UcrBg_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %Src = alloca %struct.cmsUcrBg*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct.cmsUcrBg** %Src to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsUcrBg*
  store %struct.cmsUcrBg* %2, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %3 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Ucr = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %3, i32 0, i32 0
  %4 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr, align 8, !tbaa !102
  %tobool = icmp ne %struct._cms_curve_struct* %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Ucr1 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %5, i32 0, i32 0
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Ucr1, align 8, !tbaa !102
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %6) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Bg = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %7, i32 0, i32 1
  %8 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg, align 8, !tbaa !104
  %tobool2 = icmp ne %struct._cms_curve_struct* %8, null
  br i1 %tobool2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %9 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Bg4 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %9, i32 0, i32 1
  %10 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Bg4, align 8, !tbaa !104
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %10) #7
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  %11 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Desc = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %11, i32 0, i32 2
  %12 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc, align 8, !tbaa !105
  %tobool6 = icmp ne %struct._cms_MLU_struct* %12, null
  br i1 %tobool6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.5
  %13 = load %struct.cmsUcrBg*, %struct.cmsUcrBg** %Src, align 8, !tbaa !1
  %Desc8 = getelementptr inbounds %struct.cmsUcrBg, %struct.cmsUcrBg* %13, i32 0, i32 2
  %14 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Desc8, align 8, !tbaa !105
  call void @cmsMLUfree(%struct._cms_MLU_struct* %14) #7
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %if.end.5
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %15, i32 0, i32 5
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %17 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %16, i8* %17) #7
  %18 = bitcast %struct.cmsUcrBg** %Src to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_CrdInfo_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %1, i32 0, i32 5
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %2, i32 5) #7
  store %struct._cms_MLU_struct* %call, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !8
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call1 = call i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %4, %struct._cms_io_handler* %5, %struct._cms_MLU_struct* %6, i32* %SizeOfTag.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call2 = call i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %7, %struct._cms_io_handler* %8, %struct._cms_MLU_struct* %9, i32* %SizeOfTag.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0)) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  br label %Error

if.end.5:                                         ; preds = %if.end
  %10 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call6 = call i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %10, %struct._cms_io_handler* %11, %struct._cms_MLU_struct* %12, i32* %SizeOfTag.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0)) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  br label %Error

if.end.9:                                         ; preds = %if.end.5
  %13 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call10 = call i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %13, %struct._cms_io_handler* %14, %struct._cms_MLU_struct* %15, i32* %SizeOfTag.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  br label %Error

if.end.13:                                        ; preds = %if.end.9
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call14 = call i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %16, %struct._cms_io_handler* %17, %struct._cms_MLU_struct* %18, i32* %SizeOfTag.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0)) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  br label %Error

if.end.17:                                        ; preds = %if.end.13
  %19 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %19, align 4, !tbaa !8
  %20 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %21 = bitcast %struct._cms_MLU_struct* %20 to i8*
  store i8* %21, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.16, %if.then.12, %if.then.8, %if.then.4, %if.then
  %22 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %22) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.17
  %23 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #2
  %24 = load i8*, i8** %retval
  ret i8* %24
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_CrdInfo_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %mlu = alloca %struct._cms_MLU_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_MLU_struct*
  store %struct._cms_MLU_struct* %2, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %3 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call = call i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %3, %struct._cms_io_handler* %4, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call1 = call i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %6, %struct._cms_io_handler* %7, %struct._cms_MLU_struct* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0)) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  br label %Error

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call5 = call i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %9, %struct._cms_io_handler* %10, %struct._cms_MLU_struct* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0)) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  br label %Error

if.end.8:                                         ; preds = %if.end.4
  %12 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call9 = call i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %12, %struct._cms_io_handler* %13, %struct._cms_MLU_struct* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.8
  br label %Error

if.end.12:                                        ; preds = %if.end.8
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu, align 8, !tbaa !1
  %call13 = call i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %15, %struct._cms_io_handler* %16, %struct._cms_MLU_struct* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0)) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  br label %Error

if.end.16:                                        ; preds = %if.end.12
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.15, %if.then.11, %if.then.7, %if.then.3, %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.16
  %18 = bitcast %struct._cms_MLU_struct** %mlu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #2
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_CrdInfo_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  %call = call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %1) #7
  %2 = bitcast %struct._cms_MLU_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_CrdInfo_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_MLU_struct*
  call void @cmsMLUfree(%struct._cms_MLU_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MPE_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %InputChans = alloca i16, align 2
  %OutputChans = alloca i16, align 2
  %ElementCount = alloca i32, align 4
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %BaseOffset = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %0) #2
  %1 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i32* %ElementCount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  store %struct._cmsPipeline_struct* null, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %4 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %5, i32 0, i32 8
  %6 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %6(%struct._cms_io_handler* %7) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %8, i16* %InputChans) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %9, i16* %OutputChans) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %10 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %10, i32 0, i32 5
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %12 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv7 = zext i16 %12 to i32
  %13 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv8 = zext i16 %13 to i32
  %call9 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %11, i32 %conv7, i32 %conv8) #7
  store %struct._cmsPipeline_struct* %call9, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %14 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp = icmp eq %struct._cmsPipeline_struct* %14, null
  br i1 %cmp, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.6
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.6
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call13 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %15, i32* %ElementCount) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.12
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load i32, i32* %ElementCount, align 4, !tbaa !8
  %19 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %20 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %21 = bitcast %struct._cmsPipeline_struct* %20 to i8*
  %call17 = call i32 @ReadPositionTable(%struct._cms_typehandler_struct* %16, %struct._cms_io_handler* %17, i32 %18, i32 %19, i8* %21, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadMPEElem) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.24, label %if.then.19

if.then.19:                                       ; preds = %if.end.16
  %22 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %cmp20 = icmp ne %struct._cmsPipeline_struct* %22, null
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.19
  %23 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %23) #7
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %if.then.19
  %24 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %24, align 4, !tbaa !8
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.16
  %25 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %25, align 4, !tbaa !8
  %26 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %27 = bitcast %struct._cmsPipeline_struct* %26 to i8*
  store i8* %27, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.24, %if.end.23, %if.then.15, %if.then.11, %if.then.5, %if.then
  %28 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #2
  %30 = bitcast i32* %ElementCount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %31) #2
  %32 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %32) #2
  %33 = load i8*, i8** %retval
  ret i8* %33
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_MPE_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %DirectoryPos = alloca i32, align 4
  %CurrentPos = alloca i32, align 4
  %inputChan = alloca i32, align 4
  %outputChan = alloca i32, align 4
  %ElemCount = alloca i32, align 4
  %ElementOffsets = alloca i32*, align 8
  %ElementSizes = alloca i32*, align 8
  %Before = alloca i32, align 4
  %ElementSig = alloca i32, align 4
  %Lut = alloca %struct._cmsPipeline_struct*, align 8
  %Elem = alloca %struct._cmsStage_struct*, align 8
  %TypeHandler = alloca %struct._cms_typehandler_struct*, align 8
  %MPETypePluginChunk = alloca %struct._cmsTagTypePluginChunkType*, align 8
  %String = alloca [5 x i8], align 1
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %ElemCount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store i32* null, i32** %ElementOffsets, align 8, !tbaa !1
  %8 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store i32* null, i32** %ElementSizes, align 8, !tbaa !1
  %9 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %13 = bitcast i8* %12 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %13, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %14 = bitcast %struct._cmsStage_struct** %Elem to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #2
  %15 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %Elements = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %15, i32 0, i32 0
  %16 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elements, align 8, !tbaa !53
  store %struct._cmsStage_struct* %16, %struct._cmsStage_struct** %Elem, align 8, !tbaa !1
  %17 = bitcast %struct._cms_typehandler_struct** %TypeHandler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #2
  %18 = bitcast %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #2
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %19, i32 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %20, i32 11) #7
  %21 = bitcast i8* %call to %struct._cmsTagTypePluginChunkType*
  store %struct._cmsTagTypePluginChunkType* %21, %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk, align 8, !tbaa !1
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %22, i32 0, i32 8
  %23 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %24 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 %23(%struct._cms_io_handler* %24) #7
  %conv = zext i32 %call1 to i64
  %sub = sub i64 %conv, 8
  %conv2 = trunc i64 %sub to i32
  store i32 %conv2, i32* %BaseOffset, align 4, !tbaa !8
  %25 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call3 = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %25) #7
  store i32 %call3, i32* %inputChan, align 4, !tbaa !8
  %26 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call4 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %26) #7
  store i32 %call4, i32* %outputChan, align 4, !tbaa !8
  %27 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %call5 = call i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct* %27) #7
  store i32 %call5, i32* %ElemCount, align 4, !tbaa !8
  %28 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID6 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %28, i32 0, i32 5
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID6, align 8, !tbaa !26
  %30 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %call7 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %29, i32 %30, i32 4) #7
  %31 = bitcast i8* %call7 to i32*
  store i32* %31, i32** %ElementOffsets, align 8, !tbaa !1
  %32 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp = icmp eq i32* %32, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %33 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID9 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %33, i32 0, i32 5
  %34 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID9, align 8, !tbaa !26
  %35 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %call10 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %34, i32 %35, i32 4) #7
  %36 = bitcast i8* %call10 to i32*
  store i32* %36, i32** %ElementSizes, align 8, !tbaa !1
  %37 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp11 = icmp eq i32* %37, null
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end
  br label %Error

if.end.14:                                        ; preds = %if.end
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %39 = load i32, i32* %inputChan, align 4, !tbaa !8
  %conv15 = trunc i32 %39 to i16
  %call16 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %38, i16 zeroext %conv15) #7
  %tobool = icmp ne i32 %call16, 0
  br i1 %tobool, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  br label %Error

if.end.18:                                        ; preds = %if.end.14
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %41 = load i32, i32* %outputChan, align 4, !tbaa !8
  %conv19 = trunc i32 %41 to i16
  %call20 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %40, i16 zeroext %conv19) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.18
  br label %Error

if.end.23:                                        ; preds = %if.end.18
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %43 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %conv24 = trunc i32 %43 to i16
  %conv25 = zext i16 %conv24 to i32
  %call26 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %42, i32 %conv25) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.23
  br label %Error

if.end.29:                                        ; preds = %if.end.23
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell30 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %44, i32 0, i32 8
  %45 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell30, align 8, !tbaa !99
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call31 = call i32 %45(%struct._cms_io_handler* %46) #7
  store i32 %call31, i32* %DirectoryPos, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.29
  %47 = load i32, i32* %i, align 4, !tbaa !8
  %48 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %cmp32 = icmp ult i32 %47, %48
  br i1 %cmp32, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %49 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call34 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %49, i32 0) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %for.body
  br label %Error

if.end.37:                                        ; preds = %for.body
  %50 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call38 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %50, i32 0) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.37
  br label %Error

if.end.41:                                        ; preds = %if.end.37
  br label %for.inc

for.inc:                                          ; preds = %if.end.41
  %51 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %51, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.42

for.cond.42:                                      ; preds = %for.inc.79, %for.end
  %52 = load i32, i32* %i, align 4, !tbaa !8
  %53 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %cmp43 = icmp ult i32 %52, %53
  br i1 %cmp43, label %for.body.45, label %for.end.81

for.body.45:                                      ; preds = %for.cond.42
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell46 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %54, i32 0, i32 8
  %55 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell46, align 8, !tbaa !99
  %56 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call47 = call i32 %55(%struct._cms_io_handler* %56) #7
  %57 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %sub48 = sub i32 %call47, %57
  %58 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %58 to i64
  %59 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %59, i64 %idxprom
  store i32 %sub48, i32* %arrayidx, align 4, !tbaa !8
  %60 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elem, align 8, !tbaa !1
  %Type = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %60, i32 0, i32 1
  %61 = load i32, i32* %Type, align 4, !tbaa !55
  store i32 %61, i32* %ElementSig, align 4, !tbaa !15
  %62 = load i32, i32* %ElementSig, align 4, !tbaa !15
  %63 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk, align 8, !tbaa !1
  %TagTypes = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %63, i32 0, i32 0
  %64 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes, align 8, !tbaa !10
  %call49 = call %struct._cms_typehandler_struct* @GetHandler(i32 %62, %struct._cmsTagTypeLinkedList_st* %64, %struct._cmsTagTypeLinkedList_st* getelementptr inbounds ([5 x %struct._cmsTagTypeLinkedList_st], [5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes, i32 0, i32 0)) #7
  store %struct._cms_typehandler_struct* %call49, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %65 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %cmp50 = icmp eq %struct._cms_typehandler_struct* %65, null
  br i1 %cmp50, label %if.then.52, label %if.end.55

if.then.52:                                       ; preds = %for.body.45
  %66 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.start(i64 5, i8* %66) #2
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  %67 = load i32, i32* %ElementSig, align 4, !tbaa !15
  call void @_cmsTagSignature2String(i8* %arraydecay, i32 %67) #7
  %68 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID53 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %68, i32 0, i32 5
  %69 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID53, align 8, !tbaa !26
  %arraydecay54 = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %69, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i8* %arraydecay54) #7
  store i32 2, i32* %cleanup.dest.slot
  %70 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.end(i64 5, i8* %70) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup [
    i32 2, label %Error
  ]

if.end.55:                                        ; preds = %for.body.45
  %71 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %72 = load i32, i32* %ElementSig, align 4, !tbaa !15
  %call56 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %71, i32 %72) #7
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %if.end.55
  br label %Error

if.end.59:                                        ; preds = %if.end.55
  %73 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call60 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %73, i32 0) #7
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %if.end.59
  br label %Error

if.end.63:                                        ; preds = %if.end.59
  %74 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell64 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %74, i32 0, i32 8
  %75 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell64, align 8, !tbaa !99
  %76 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call65 = call i32 %75(%struct._cms_io_handler* %76) #7
  store i32 %call65, i32* %Before, align 4, !tbaa !8
  %77 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %WritePtr = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %77, i32 0, i32 2
  %78 = load i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)** %WritePtr, align 8, !tbaa !106
  %79 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %80 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %81 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elem, align 8, !tbaa !1
  %82 = bitcast %struct._cmsStage_struct* %81 to i8*
  %call66 = call i32 %78(%struct._cms_typehandler_struct* %79, %struct._cms_io_handler* %80, i8* %82, i32 1) #7
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %if.end.63
  br label %Error

if.end.69:                                        ; preds = %if.end.63
  %83 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call70 = call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %83) #7
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.end.73, label %if.then.72

if.then.72:                                       ; preds = %if.end.69
  br label %Error

if.end.73:                                        ; preds = %if.end.69
  %84 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell74 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %84, i32 0, i32 8
  %85 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell74, align 8, !tbaa !99
  %86 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call75 = call i32 %85(%struct._cms_io_handler* %86) #7
  %87 = load i32, i32* %Before, align 4, !tbaa !8
  %sub76 = sub i32 %call75, %87
  %88 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom77 = zext i32 %88 to i64
  %89 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx78 = getelementptr inbounds i32, i32* %89, i64 %idxprom77
  store i32 %sub76, i32* %arrayidx78, align 4, !tbaa !8
  %90 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Elem, align 8, !tbaa !1
  %Next = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %90, i32 0, i32 9
  %91 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Next, align 8, !tbaa !58
  store %struct._cmsStage_struct* %91, %struct._cmsStage_struct** %Elem, align 8, !tbaa !1
  br label %for.inc.79

for.inc.79:                                       ; preds = %if.end.73
  %92 = load i32, i32* %i, align 4, !tbaa !8
  %inc80 = add i32 %92, 1
  store i32 %inc80, i32* %i, align 4, !tbaa !8
  br label %for.cond.42

for.end.81:                                       ; preds = %for.cond.42
  %93 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell82 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %93, i32 0, i32 8
  %94 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell82, align 8, !tbaa !99
  %95 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call83 = call i32 %94(%struct._cms_io_handler* %95) #7
  store i32 %call83, i32* %CurrentPos, align 4, !tbaa !8
  %96 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %96, i32 0, i32 6
  %97 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %98 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %99 = load i32, i32* %DirectoryPos, align 4, !tbaa !8
  %call84 = call i32 %97(%struct._cms_io_handler* %98, i32 %99) #7
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %if.end.87, label %if.then.86

if.then.86:                                       ; preds = %for.end.81
  br label %Error

if.end.87:                                        ; preds = %for.end.81
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.88

for.cond.88:                                      ; preds = %for.inc.104, %if.end.87
  %100 = load i32, i32* %i, align 4, !tbaa !8
  %101 = load i32, i32* %ElemCount, align 4, !tbaa !8
  %cmp89 = icmp ult i32 %100, %101
  br i1 %cmp89, label %for.body.91, label %for.end.106

for.body.91:                                      ; preds = %for.cond.88
  %102 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %103 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom92 = zext i32 %103 to i64
  %104 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds i32, i32* %104, i64 %idxprom92
  %105 = load i32, i32* %arrayidx93, align 4, !tbaa !8
  %call94 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %102, i32 %105) #7
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %if.end.97, label %if.then.96

if.then.96:                                       ; preds = %for.body.91
  br label %Error

if.end.97:                                        ; preds = %for.body.91
  %106 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %107 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom98 = zext i32 %107 to i64
  %108 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx99 = getelementptr inbounds i32, i32* %108, i64 %idxprom98
  %109 = load i32, i32* %arrayidx99, align 4, !tbaa !8
  %call100 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %106, i32 %109) #7
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.end.103, label %if.then.102

if.then.102:                                      ; preds = %if.end.97
  br label %Error

if.end.103:                                       ; preds = %if.end.97
  br label %for.inc.104

for.inc.104:                                      ; preds = %if.end.103
  %110 = load i32, i32* %i, align 4, !tbaa !8
  %inc105 = add i32 %110, 1
  store i32 %inc105, i32* %i, align 4, !tbaa !8
  br label %for.cond.88

for.end.106:                                      ; preds = %for.cond.88
  %111 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek107 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %111, i32 0, i32 6
  %112 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek107, align 8, !tbaa !101
  %113 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %114 = load i32, i32* %CurrentPos, align 4, !tbaa !8
  %call108 = call i32 %112(%struct._cms_io_handler* %113, i32 %114) #7
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.end.111, label %if.then.110

if.then.110:                                      ; preds = %for.end.106
  br label %Error

if.end.111:                                       ; preds = %for.end.106
  %115 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp112 = icmp ne i32* %115, null
  br i1 %cmp112, label %if.then.114, label %if.end.116

if.then.114:                                      ; preds = %if.end.111
  %116 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID115 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %116, i32 0, i32 5
  %117 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID115, align 8, !tbaa !26
  %118 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %119 = bitcast i32* %118 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %117, i8* %119) #7
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.114, %if.end.111
  %120 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp117 = icmp ne i32* %120, null
  br i1 %cmp117, label %if.then.119, label %if.end.121

if.then.119:                                      ; preds = %if.end.116
  %121 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID120 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %121, i32 0, i32 5
  %122 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID120, align 8, !tbaa !26
  %123 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %124 = bitcast i32* %123 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %122, i8* %124) #7
  br label %if.end.121

if.end.121:                                       ; preds = %if.then.119, %if.end.116
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.52, %if.then.110, %if.then.102, %if.then.96, %if.then.86, %if.then.72, %if.then.68, %if.then.62, %if.then.58, %if.then.40, %if.then.36, %if.then.28, %if.then.22, %if.then.17, %if.then.13, %if.then
  %125 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp122 = icmp ne i32* %125, null
  br i1 %cmp122, label %if.then.124, label %if.end.126

if.then.124:                                      ; preds = %Error
  %126 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID125 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %126, i32 0, i32 5
  %127 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID125, align 8, !tbaa !26
  %128 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %129 = bitcast i32* %128 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %127, i8* %129) #7
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.124, %Error
  %130 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp127 = icmp ne i32* %130, null
  br i1 %cmp127, label %if.then.129, label %if.end.131

if.then.129:                                      ; preds = %if.end.126
  %131 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID130 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %131, i32 0, i32 5
  %132 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID130, align 8, !tbaa !26
  %133 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %134 = bitcast i32* %133 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %132, i8* %134) #7
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.129, %if.end.126
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.131, %if.then.52, %if.end.121
  %135 = bitcast %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %135) #2
  %136 = bitcast %struct._cms_typehandler_struct** %TypeHandler to i8*
  call void @llvm.lifetime.end(i64 8, i8* %136) #2
  %137 = bitcast %struct._cmsStage_struct** %Elem to i8*
  call void @llvm.lifetime.end(i64 8, i8* %137) #2
  %138 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %138) #2
  %139 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.end(i64 4, i8* %139) #2
  %140 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #2
  %141 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #2
  %142 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #2
  %143 = bitcast i32* %ElemCount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #2
  %144 = bitcast i32* %outputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %144) #2
  %145 = bitcast i32* %inputChan to i8*
  call void @llvm.lifetime.end(i64 4, i8* %145) #2
  %146 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %146) #2
  %147 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %147) #2
  %148 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %148) #2
  %149 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %149) #2
  %150 = load i32, i32* %retval
  ret i32 %150
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MPE_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  %call = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %1) #7
  %2 = bitcast %struct._cmsPipeline_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_MPE_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsPipeline_struct*
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Screening_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %sc = alloca %struct.cmsScreening*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsScreening** %sc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store %struct.cmsScreening* null, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %2, i32 0, i32 5
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %3, i32 392) #7
  %4 = bitcast i8* %call to %struct.cmsScreening*
  store %struct.cmsScreening* %4, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %5 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsScreening* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %6, align 4, !tbaa !8
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Flag = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %8, i32 0, i32 0
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %7, i32* %Flag) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  br label %Error

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %10, i32 0, i32 1
  %call4 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %9, i32* %nChannels) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %Error

if.end.7:                                         ; preds = %if.end.3
  %11 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels8 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %11, i32 0, i32 1
  %12 = load i32, i32* %nChannels8, align 4, !tbaa !98
  %cmp9 = icmp ugt i32 %12, 15
  br i1 %cmp9, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end.7
  %13 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels11 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %13, i32 0, i32 1
  store i32 15, i32* %nChannels11, align 4, !tbaa !98
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.end.7
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.12
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %15 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels13 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %15, i32 0, i32 1
  %16 = load i32, i32* %nChannels13, align 4, !tbaa !98
  %cmp14 = icmp ult i32 %14, %16
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %18 to i64
  %19 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %19, i32 0, i32 2
  %arrayidx = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels, i32 0, i64 %idxprom
  %Frequency = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx, i32 0, i32 0
  %call15 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %17, double* %Frequency) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %for.body
  br label %Error

if.end.18:                                        ; preds = %for.body
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom19 = zext i32 %21 to i64
  %22 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels20 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %22, i32 0, i32 2
  %arrayidx21 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels20, i32 0, i64 %idxprom19
  %ScreenAngle = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx21, i32 0, i32 1
  %call22 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %20, double* %ScreenAngle) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.18
  br label %Error

if.end.25:                                        ; preds = %if.end.18
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom26 = zext i32 %24 to i64
  %25 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels27 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %25, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels27, i32 0, i64 %idxprom26
  %SpotShape = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx28, i32 0, i32 2
  %call29 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %23, i32* %SpotShape) #7
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.25
  br label %Error

if.end.32:                                        ; preds = %if.end.25
  br label %for.inc

for.inc:                                          ; preds = %if.end.32
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %26, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %27, align 4, !tbaa !8
  %28 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %29 = bitcast %struct.cmsScreening* %28 to i8*
  store i8* %29, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.31, %if.then.24, %if.then.17, %if.then.6, %if.then.2
  %30 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %cmp33 = icmp ne %struct.cmsScreening* %30, null
  br i1 %cmp33, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %Error
  %31 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID35 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %31, i32 0, i32 5
  %32 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID35, align 8, !tbaa !26
  %33 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %34 = bitcast %struct.cmsScreening* %33 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %32, i8* %34) #7
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.34, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.36, %for.end, %if.then
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #2
  %36 = bitcast %struct.cmsScreening** %sc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = load i8*, i8** %retval
  ret i8* %37
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Screening_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %sc = alloca %struct.cmsScreening*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsScreening** %sc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsScreening*
  store %struct.cmsScreening* %2, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Flag = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %5, i32 0, i32 0
  %6 = load i32, i32* %Flag, align 4, !tbaa !96
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %4, i32 %6) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %8, i32 0, i32 1
  %9 = load i32, i32* %nChannels, align 4, !tbaa !98
  %call1 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %7, i32 %9) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.4
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %11 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %nChannels5 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %11, i32 0, i32 1
  %12 = load i32, i32* %nChannels5, align 4, !tbaa !98
  %cmp = icmp ult i32 %10, %12
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %14 to i64
  %15 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %15, i32 0, i32 2
  %arrayidx = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels, i32 0, i64 %idxprom
  %Frequency = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx, i32 0, i32 0
  %16 = load double, double* %Frequency, align 8, !tbaa !107
  %call6 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %13, double %16) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %for.body
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom10 = zext i32 %18 to i64
  %19 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels11 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %19, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels11, i32 0, i64 %idxprom10
  %ScreenAngle = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx12, i32 0, i32 1
  %20 = load double, double* %ScreenAngle, align 8, !tbaa !109
  %call13 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %17, double %20) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.9
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom17 = zext i32 %22 to i64
  %23 = load %struct.cmsScreening*, %struct.cmsScreening** %sc, align 8, !tbaa !1
  %Channels18 = getelementptr inbounds %struct.cmsScreening, %struct.cmsScreening* %23, i32 0, i32 2
  %arrayidx19 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %Channels18, i32 0, i64 %idxprom17
  %SpotShape = getelementptr inbounds %struct.cmsScreeningChannel, %struct.cmsScreeningChannel* %arrayidx19, i32 0, i32 2
  %24 = load i32, i32* %SpotShape, align 4, !tbaa !110
  %call20 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %21, i32 %24) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.16
  br label %for.inc

for.inc:                                          ; preds = %if.end.23
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %25, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.22, %if.then.15, %if.then.8, %if.then.3, %if.then
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast %struct.cmsScreening** %sc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Screening_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 392) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Screening_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ViewingConditions_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %vc = alloca %struct.cmsICCViewingConditions*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCViewingConditions** %vc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store %struct.cmsICCViewingConditions* null, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %1 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %1, i32 0, i32 5
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %2, i32 56) #7
  %3 = bitcast i8* %call to %struct.cmsICCViewingConditions*
  store %struct.cmsICCViewingConditions* %3, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %4 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsICCViewingConditions* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !8
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %IlluminantXYZ = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %7, i32 0, i32 0
  %call1 = call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %6, %struct.cmsCIEXYZ* %IlluminantXYZ) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  br label %Error

if.end.3:                                         ; preds = %if.end
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %SurroundXYZ = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %9, i32 0, i32 1
  %call4 = call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %8, %struct.cmsCIEXYZ* %SurroundXYZ) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %Error

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %IlluminantType = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %11, i32 0, i32 2
  %call8 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %10, i32* %IlluminantType) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.7
  br label %Error

if.end.11:                                        ; preds = %if.end.7
  %12 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %12, align 4, !tbaa !8
  %13 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %14 = bitcast %struct.cmsICCViewingConditions* %13 to i8*
  store i8* %14, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.10, %if.then.6, %if.then.2
  %15 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %cmp12 = icmp ne %struct.cmsICCViewingConditions* %15, null
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %Error
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID14 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %16, i32 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID14, align 8, !tbaa !26
  %18 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %vc, align 8, !tbaa !1
  %19 = bitcast %struct.cmsICCViewingConditions* %18 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %17, i8* %19) #7
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.13, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.15, %if.end.11, %if.then
  %20 = bitcast %struct.cmsICCViewingConditions** %vc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %20) #2
  %21 = load i8*, i8** %retval
  ret i8* %21
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ViewingConditions_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %sc = alloca %struct.cmsICCViewingConditions*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsICCViewingConditions** %sc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsICCViewingConditions*
  store %struct.cmsICCViewingConditions* %2, %struct.cmsICCViewingConditions** %sc, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %sc, align 8, !tbaa !1
  %IlluminantXYZ = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %4, i32 0, i32 0
  %call = call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %3, %struct.cmsCIEXYZ* %IlluminantXYZ) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %sc, align 8, !tbaa !1
  %SurroundXYZ = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %6, i32 0, i32 1
  %call1 = call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %5, %struct.cmsCIEXYZ* %SurroundXYZ) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct.cmsICCViewingConditions*, %struct.cmsICCViewingConditions** %sc, align 8, !tbaa !1
  %IlluminantType = getelementptr inbounds %struct.cmsICCViewingConditions, %struct.cmsICCViewingConditions* %8, i32 0, i32 2
  %9 = load i32, i32* %IlluminantType, align 4, !tbaa !111
  %call5 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %7, i32 %9) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.4
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then.3, %if.then
  %10 = bitcast %struct.cmsICCViewingConditions** %sc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #2
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ViewingConditions_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 392) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_ViewingConditions_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_XYZ_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %xyz = alloca %struct.cmsCIEXYZ*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsCIEXYZ** %xyz to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %1, align 4, !tbaa !8
  %2 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %2, i32 0, i32 5
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %3, i32 24) #7
  %4 = bitcast i8* %call to %struct.cmsCIEXYZ*
  store %struct.cmsCIEXYZ* %4, %struct.cmsCIEXYZ** %xyz, align 8, !tbaa !1
  %5 = load %struct.cmsCIEXYZ*, %struct.cmsCIEXYZ** %xyz, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsCIEXYZ* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load %struct.cmsCIEXYZ*, %struct.cmsCIEXYZ** %xyz, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %6, %struct.cmsCIEXYZ* %7) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.4, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %8, i32 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID3, align 8, !tbaa !26
  %10 = load %struct.cmsCIEXYZ*, %struct.cmsCIEXYZ** %xyz, align 8, !tbaa !1
  %11 = bitcast %struct.cmsCIEXYZ* %10 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %9, i8* %11) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %12 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %12, align 4, !tbaa !8
  %13 = load %struct.cmsCIEXYZ*, %struct.cmsCIEXYZ** %xyz, align 8, !tbaa !1
  %14 = bitcast %struct.cmsCIEXYZ* %13 to i8*
  store i8* %14, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.2, %if.then
  %15 = bitcast %struct.cmsCIEXYZ** %xyz to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = load i8*, i8** %retval
  ret i8* %16
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_XYZ_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsCIEXYZ*
  %call = call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %0, %struct.cmsCIEXYZ* %2) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_XYZ_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @_cmsDupMem(%struct._cmsContext_struct* %1, i8* %2, i32 24) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_XYZ_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 5
  %1 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %1, i8* %2) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ProfileSequenceId_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %OutSeq = alloca %struct.cmsSEQ*, align 8
  %Count = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !8
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %4, i32 0, i32 8
  %5 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %5(%struct._cms_io_handler* %6) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %7, i32* %Count) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv3 = zext i32 %8 to i64
  %sub4 = sub i64 %conv3, 4
  %conv5 = trunc i64 %sub4 to i32
  store i32 %conv5, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %9 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %9, i32 0, i32 5
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %11 = load i32, i32* %Count, align 4, !tbaa !8
  %call6 = call %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct* %10, i32 %11) #7
  store %struct.cmsSEQ* %call6, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %12 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %cmp = icmp eq %struct.cmsSEQ* %12, null
  br i1 %cmp, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %13 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load i32, i32* %Count, align 4, !tbaa !8
  %16 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %17 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %18 = bitcast %struct.cmsSEQ* %17 to i8*
  %call10 = call i32 @ReadPositionTable(%struct._cms_typehandler_struct* %13, %struct._cms_io_handler* %14, i32 %15, i32 %16, i8* %18, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadSeqID) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  %19 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %19) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %20 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %20, align 4, !tbaa !8
  %21 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %22 = bitcast %struct.cmsSEQ* %21 to i8*
  store i8* %22, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.13, %if.then.12, %if.then.8, %if.then
  %23 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #2
  %24 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #2
  %25 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = load i8*, i8** %retval
  ret i8* %26
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_ProfileSequenceId_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Seq = alloca %struct.cmsSEQ*, align 8
  %BaseOffset = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsSEQ*
  store %struct.cmsSEQ* %2, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %3 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %4, i32 0, i32 8
  %5 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %5(%struct._cms_io_handler* %6) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %n = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %8, i32 0, i32 0
  %9 = load i32, i32* %n, align 4, !tbaa !81
  %call2 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %7, i32 %9) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %n3 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %12, i32 0, i32 0
  %13 = load i32, i32* %n3, align 4, !tbaa !81
  %14 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %15 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %16 = bitcast %struct.cmsSEQ* %15 to i8*
  %call4 = call i32 @WritePositionTable(%struct._cms_typehandler_struct* %10, %struct._cms_io_handler* %11, i32 0, i32 %13, i32 %14, i8* %16, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @WriteSeqID) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then
  %17 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #2
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_ProfileSequenceId_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct.cmsSEQ*
  %call = call %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ* %1) #7
  %2 = bitcast %struct.cmsSEQ* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @Type_ProfileSequenceId_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct.cmsSEQ*
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Dictionary_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %hDict = alloca i8*, align 8
  %i = alloca i32, align 4
  %Count = alloca i32, align 4
  %Length = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %a = alloca %struct._cmsDICarray, align 8
  %NameWCS = alloca i32*, align 8
  %ValueWCS = alloca i32*, align 8
  %DisplayNameMLU = alloca %struct._cms_MLU_struct*, align 8
  %DisplayValueMLU = alloca %struct._cms_MLU_struct*, align 8
  %rc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i8** %hDict to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %Length to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast %struct._cmsDICarray* %a to i8*
  call void @llvm.lifetime.start(i64 96, i8* %5) #2
  %6 = bitcast i32** %NameWCS to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store i32* null, i32** %NameWCS, align 8, !tbaa !1
  %7 = bitcast i32** %ValueWCS to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  store i32* null, i32** %ValueWCS, align 8, !tbaa !1
  %8 = bitcast %struct._cms_MLU_struct** %DisplayNameMLU to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store %struct._cms_MLU_struct* null, %struct._cms_MLU_struct** %DisplayNameMLU, align 8, !tbaa !1
  %9 = bitcast %struct._cms_MLU_struct** %DisplayValueMLU to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  store %struct._cms_MLU_struct* null, %struct._cms_MLU_struct** %DisplayValueMLU, align 8, !tbaa !1
  %10 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %11, align 4, !tbaa !8
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %12, i32 0, i32 8
  %13 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %13(%struct._cms_io_handler* %14) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %15, i32* %Count) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %16 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv3 = zext i32 %16 to i64
  %sub4 = sub i64 %conv3, 4
  %conv5 = trunc i64 %sub4 to i32
  store i32 %conv5, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call6 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %17, i32* %Length) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %18 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %conv10 = zext i32 %18 to i64
  %sub11 = sub i64 %conv10, 4
  %conv12 = trunc i64 %sub11 to i32
  store i32 %conv12, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %19 = load i32, i32* %Length, align 4, !tbaa !8
  %cmp = icmp ne i32 %19, 16
  br i1 %cmp, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %if.end.9
  %20 = load i32, i32* %Length, align 4, !tbaa !8
  %cmp14 = icmp ne i32 %20, 24
  br i1 %cmp14, label %land.lhs.true.16, label %if.end.20

land.lhs.true.16:                                 ; preds = %land.lhs.true
  %21 = load i32, i32* %Length, align 4, !tbaa !8
  %cmp17 = icmp ne i32 %21, 32
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %land.lhs.true.16
  %22 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %22, i32 0, i32 5
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %24 = load i32, i32* %Length, align 4, !tbaa !8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %23, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.31, i32 0, i32 0), i32 %24) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %land.lhs.true.16, %land.lhs.true, %if.end.9
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID21 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %25, i32 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID21, align 8, !tbaa !26
  %call22 = call i8* @cmsDictAlloc(%struct._cmsContext_struct* %26) #7
  store i8* %call22, i8** %hDict, align 8, !tbaa !1
  %27 = load i8*, i8** %hDict, align 8, !tbaa !1
  %cmp23 = icmp eq i8* %27, null
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.20
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.20
  %28 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID27 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %28, i32 0, i32 5
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID27, align 8, !tbaa !26
  %30 = load i32, i32* %Count, align 4, !tbaa !8
  %31 = load i32, i32* %Length, align 4, !tbaa !8
  %call28 = call i32 @AllocArray(%struct._cmsContext_struct* %29, %struct._cmsDICarray* %a, i32 %30, i32 %31) #7
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.end.26
  br label %Error

if.end.31:                                        ; preds = %if.end.26
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %33 = load i32, i32* %Count, align 4, !tbaa !8
  %34 = load i32, i32* %Length, align 4, !tbaa !8
  %35 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %call32 = call i32 @ReadOffsetArray(%struct._cms_io_handler* %32, %struct._cmsDICarray* %a, i32 %33, i32 %34, i32 %35) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.31
  br label %Error

if.end.35:                                        ; preds = %if.end.31
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.35
  %36 = load i32, i32* %i, align 4, !tbaa !8
  %37 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp36 = icmp ult i32 %36, %37
  br i1 %cmp36, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 0
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %call38 = call i32 @ReadOneWChar(%struct._cms_io_handler* %38, %struct._cmsDICelem* %Name, i32 %39, i32** %NameWCS) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %for.body
  br label %Error

if.end.41:                                        ; preds = %for.body
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 1
  %41 = load i32, i32* %i, align 4, !tbaa !8
  %call42 = call i32 @ReadOneWChar(%struct._cms_io_handler* %40, %struct._cmsDICelem* %Value, i32 %41, i32** %ValueWCS) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.end.41
  br label %Error

if.end.45:                                        ; preds = %if.end.41
  %42 = load i32, i32* %Length, align 4, !tbaa !8
  %cmp46 = icmp ugt i32 %42, 16
  br i1 %cmp46, label %if.then.48, label %if.end.53

if.then.48:                                       ; preds = %if.end.45
  %43 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 2
  %45 = load i32, i32* %i, align 4, !tbaa !8
  %call49 = call i32 @ReadOneMLUC(%struct._cms_typehandler_struct* %43, %struct._cms_io_handler* %44, %struct._cmsDICelem* %DisplayName, i32 %45, %struct._cms_MLU_struct** %DisplayNameMLU) #7
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.then.48
  br label %Error

if.end.52:                                        ; preds = %if.then.48
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end.45
  %46 = load i32, i32* %Length, align 4, !tbaa !8
  %cmp54 = icmp ugt i32 %46, 24
  br i1 %cmp54, label %if.then.56, label %if.end.61

if.then.56:                                       ; preds = %if.end.53
  %47 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %48 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 3
  %49 = load i32, i32* %i, align 4, !tbaa !8
  %call57 = call i32 @ReadOneMLUC(%struct._cms_typehandler_struct* %47, %struct._cms_io_handler* %48, %struct._cmsDICelem* %DisplayValue, i32 %49, %struct._cms_MLU_struct** %DisplayValueMLU) #7
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %if.then.56
  br label %Error

if.end.60:                                        ; preds = %if.then.56
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.end.53
  %50 = load i32*, i32** %NameWCS, align 8, !tbaa !1
  %cmp62 = icmp eq i32* %50, null
  br i1 %cmp62, label %if.then.66, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.61
  %51 = load i32*, i32** %ValueWCS, align 8, !tbaa !1
  %cmp64 = icmp eq i32* %51, null
  br i1 %cmp64, label %if.then.66, label %if.else

if.then.66:                                       ; preds = %lor.lhs.false, %if.end.61
  %52 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID67 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %52, i32 0, i32 5
  %53 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID67, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %53, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i32 0, i32 0)) #7
  store i32 0, i32* %rc, align 4, !tbaa !8
  br label %if.end.69

if.else:                                          ; preds = %lor.lhs.false
  %54 = load i8*, i8** %hDict, align 8, !tbaa !1
  %55 = load i32*, i32** %NameWCS, align 8, !tbaa !1
  %56 = load i32*, i32** %ValueWCS, align 8, !tbaa !1
  %57 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayNameMLU, align 8, !tbaa !1
  %58 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValueMLU, align 8, !tbaa !1
  %call68 = call i32 @cmsDictAddEntry(i8* %54, i32* %55, i32* %56, %struct._cms_MLU_struct* %57, %struct._cms_MLU_struct* %58) #7
  store i32 %call68, i32* %rc, align 4, !tbaa !8
  br label %if.end.69

if.end.69:                                        ; preds = %if.else, %if.then.66
  %59 = load i32*, i32** %NameWCS, align 8, !tbaa !1
  %cmp70 = icmp ne i32* %59, null
  br i1 %cmp70, label %if.then.72, label %if.end.74

if.then.72:                                       ; preds = %if.end.69
  %60 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID73 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %60, i32 0, i32 5
  %61 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID73, align 8, !tbaa !26
  %62 = load i32*, i32** %NameWCS, align 8, !tbaa !1
  %63 = bitcast i32* %62 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %61, i8* %63) #7
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.72, %if.end.69
  %64 = load i32*, i32** %ValueWCS, align 8, !tbaa !1
  %cmp75 = icmp ne i32* %64, null
  br i1 %cmp75, label %if.then.77, label %if.end.79

if.then.77:                                       ; preds = %if.end.74
  %65 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID78 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %65, i32 0, i32 5
  %66 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID78, align 8, !tbaa !26
  %67 = load i32*, i32** %ValueWCS, align 8, !tbaa !1
  %68 = bitcast i32* %67 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %66, i8* %68) #7
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.77, %if.end.74
  %69 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayNameMLU, align 8, !tbaa !1
  %cmp80 = icmp ne %struct._cms_MLU_struct* %69, null
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %if.end.79
  %70 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayNameMLU, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %70) #7
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.82, %if.end.79
  %71 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValueMLU, align 8, !tbaa !1
  %cmp84 = icmp ne %struct._cms_MLU_struct* %71, null
  br i1 %cmp84, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %if.end.83
  %72 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValueMLU, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %72) #7
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.86, %if.end.83
  %73 = load i32, i32* %rc, align 4, !tbaa !8
  %tobool88 = icmp ne i32 %73, 0
  br i1 %tobool88, label %if.end.90, label %if.then.89

if.then.89:                                       ; preds = %if.end.87
  br label %Error

if.end.90:                                        ; preds = %if.end.87
  br label %for.inc

for.inc:                                          ; preds = %if.end.90
  %74 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %74, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @FreeArray(%struct._cmsDICarray* %a) #7
  %75 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %75, align 4, !tbaa !8
  %76 = load i8*, i8** %hDict, align 8, !tbaa !1
  store i8* %76, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.89, %if.then.59, %if.then.51, %if.then.44, %if.then.40, %if.then.34, %if.then.30
  call void @FreeArray(%struct._cmsDICarray* %a) #7
  %77 = load i8*, i8** %hDict, align 8, !tbaa !1
  call void @cmsDictFree(i8* %77) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %for.end, %if.then.25, %if.then.19, %if.then.8, %if.then
  %78 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #2
  %79 = bitcast %struct._cms_MLU_struct** %DisplayValueMLU to i8*
  call void @llvm.lifetime.end(i64 8, i8* %79) #2
  %80 = bitcast %struct._cms_MLU_struct** %DisplayNameMLU to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #2
  %81 = bitcast i32** %ValueWCS to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #2
  %82 = bitcast i32** %NameWCS to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #2
  %83 = bitcast %struct._cmsDICarray* %a to i8*
  call void @llvm.lifetime.end(i64 96, i8* %83) #2
  %84 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #2
  %85 = bitcast i32* %Length to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #2
  %86 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #2
  %87 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #2
  %88 = bitcast i8** %hDict to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #2
  %89 = load i8*, i8** %retval
  ret i8* %89
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_Dictionary_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %hDict = alloca i8*, align 8
  %p = alloca %struct._cmsDICTentry_struct*, align 8
  %AnyName = alloca i32, align 4
  %AnyValue = alloca i32, align 4
  %i = alloca i32, align 4
  %Count = alloca i32, align 4
  %Length = alloca i32, align 4
  %DirectoryPos = alloca i32, align 4
  %CurrentPos = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %a = alloca %struct._cmsDICarray, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i8** %hDict to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  store i8* %1, i8** %hDict, align 8, !tbaa !1
  %2 = bitcast %struct._cmsDICTentry_struct** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast i32* %AnyName to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %AnyValue to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32* %Length to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast %struct._cmsDICarray* %a to i8*
  call void @llvm.lifetime.start(i64 96, i8* %11) #2
  %12 = load i8*, i8** %hDict, align 8, !tbaa !1
  %cmp = icmp eq i8* %12, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %13, i32 0, i32 8
  %14 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %14(%struct._cms_io_handler* %15) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  store i32 0, i32* %Count, align 4, !tbaa !8
  store i32 0, i32* %AnyName, align 4, !tbaa !8
  store i32 0, i32* %AnyValue, align 4, !tbaa !8
  %16 = load i8*, i8** %hDict, align 8, !tbaa !1
  %call2 = call %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8* %16) #7
  store %struct._cmsDICTentry_struct* %call2, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %cmp3 = icmp ne %struct._cmsDICTentry_struct* %17, null
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %18, i32 0, i32 1
  %19 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayName, align 8, !tbaa !113
  %cmp5 = icmp ne %struct._cms_MLU_struct* %19, null
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.body
  store i32 1, i32* %AnyName, align 4, !tbaa !8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %for.body
  %20 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %20, i32 0, i32 2
  %21 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValue, align 8, !tbaa !115
  %cmp9 = icmp ne %struct._cms_MLU_struct* %21, null
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  store i32 1, i32* %AnyValue, align 4, !tbaa !8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.end.8
  %22 = load i32, i32* %Count, align 4, !tbaa !8
  %inc = add i32 %22, 1
  store i32 %inc, i32* %Count, align 4, !tbaa !8
  br label %for.inc

for.inc:                                          ; preds = %if.end.12
  %23 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %call13 = call %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct* %23) #7
  store %struct._cmsDICTentry_struct* %call13, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 16, i32* %Length, align 4, !tbaa !8
  %24 = load i32, i32* %AnyName, align 4, !tbaa !8
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %for.end
  %25 = load i32, i32* %Length, align 4, !tbaa !8
  %add = add i32 %25, 8
  store i32 %add, i32* %Length, align 4, !tbaa !8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %for.end
  %26 = load i32, i32* %AnyValue, align 4, !tbaa !8
  %tobool16 = icmp ne i32 %26, 0
  br i1 %tobool16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end.15
  %27 = load i32, i32* %Length, align 4, !tbaa !8
  %add18 = add i32 %27, 8
  store i32 %add18, i32* %Length, align 4, !tbaa !8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.17, %if.end.15
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %29 = load i32, i32* %Count, align 4, !tbaa !8
  %call20 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %28, i32 %29) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.19
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %31 = load i32, i32* %Length, align 4, !tbaa !8
  %call24 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %30, i32 %31) #7
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %if.end.23
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.23
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell28 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %32, i32 0, i32 8
  %33 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell28, align 8, !tbaa !99
  %34 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call29 = call i32 %33(%struct._cms_io_handler* %34) #7
  store i32 %call29, i32* %DirectoryPos, align 4, !tbaa !8
  %35 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %35, i32 0, i32 5
  %36 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %37 = load i32, i32* %Count, align 4, !tbaa !8
  %38 = load i32, i32* %Length, align 4, !tbaa !8
  %call30 = call i32 @AllocArray(%struct._cmsContext_struct* %36, %struct._cmsDICarray* %a, i32 %37, i32 %38) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.27
  br label %Error

if.end.33:                                        ; preds = %if.end.27
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load i32, i32* %Count, align 4, !tbaa !8
  %41 = load i32, i32* %Length, align 4, !tbaa !8
  %call34 = call i32 @WriteOffsetArray(%struct._cms_io_handler* %39, %struct._cmsDICarray* %a, i32 %40, i32 %41) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.33
  br label %Error

if.end.37:                                        ; preds = %if.end.33
  %42 = load i8*, i8** %hDict, align 8, !tbaa !1
  %call38 = call %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8* %42) #7
  store %struct._cmsDICTentry_struct* %call38, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.76, %if.end.37
  %43 = load i32, i32* %i, align 4, !tbaa !8
  %44 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp40 = icmp ult i32 %43, %44
  br i1 %cmp40, label %for.body.42, label %for.end.78

for.body.42:                                      ; preds = %for.cond.39
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 0
  %46 = load i32, i32* %i, align 4, !tbaa !8
  %47 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %Name43 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %47, i32 0, i32 3
  %48 = load i32*, i32** %Name43, align 8, !tbaa !116
  %49 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %call44 = call i32 @WriteOneWChar(%struct._cms_io_handler* %45, %struct._cmsDICelem* %Name, i32 %46, i32* %48, i32 %49) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %for.body.42
  br label %Error

if.end.47:                                        ; preds = %for.body.42
  %50 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 1
  %51 = load i32, i32* %i, align 4, !tbaa !8
  %52 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %Value48 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %52, i32 0, i32 4
  %53 = load i32*, i32** %Value48, align 8, !tbaa !117
  %54 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %call49 = call i32 @WriteOneWChar(%struct._cms_io_handler* %50, %struct._cmsDICelem* %Value, i32 %51, i32* %53, i32 %54) #7
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.end.47
  br label %Error

if.end.52:                                        ; preds = %if.end.47
  %55 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayName53 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %55, i32 0, i32 1
  %56 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayName53, align 8, !tbaa !113
  %cmp54 = icmp ne %struct._cms_MLU_struct* %56, null
  br i1 %cmp54, label %if.then.56, label %if.end.63

if.then.56:                                       ; preds = %if.end.52
  %57 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %58 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %DisplayName57 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 2
  %59 = load i32, i32* %i, align 4, !tbaa !8
  %60 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayName58 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %60, i32 0, i32 1
  %61 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayName58, align 8, !tbaa !113
  %62 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %call59 = call i32 @WriteOneMLUC(%struct._cms_typehandler_struct* %57, %struct._cms_io_handler* %58, %struct._cmsDICelem* %DisplayName57, i32 %59, %struct._cms_MLU_struct* %61, i32 %62) #7
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %if.end.62, label %if.then.61

if.then.61:                                       ; preds = %if.then.56
  br label %Error

if.end.62:                                        ; preds = %if.then.56
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.end.52
  %63 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayValue64 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %63, i32 0, i32 2
  %64 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValue64, align 8, !tbaa !115
  %cmp65 = icmp ne %struct._cms_MLU_struct* %64, null
  br i1 %cmp65, label %if.then.67, label %if.end.74

if.then.67:                                       ; preds = %if.end.63
  %65 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %66 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %DisplayValue68 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %a, i32 0, i32 3
  %67 = load i32, i32* %i, align 4, !tbaa !8
  %68 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %DisplayValue69 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %68, i32 0, i32 2
  %69 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %DisplayValue69, align 8, !tbaa !115
  %70 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %call70 = call i32 @WriteOneMLUC(%struct._cms_typehandler_struct* %65, %struct._cms_io_handler* %66, %struct._cmsDICelem* %DisplayValue68, i32 %67, %struct._cms_MLU_struct* %69, i32 %70) #7
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.end.73, label %if.then.72

if.then.72:                                       ; preds = %if.then.67
  br label %Error

if.end.73:                                        ; preds = %if.then.67
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.end.63
  %71 = load %struct._cmsDICTentry_struct*, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  %call75 = call %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct* %71) #7
  store %struct._cmsDICTentry_struct* %call75, %struct._cmsDICTentry_struct** %p, align 8, !tbaa !1
  br label %for.inc.76

for.inc.76:                                       ; preds = %if.end.74
  %72 = load i32, i32* %i, align 4, !tbaa !8
  %inc77 = add i32 %72, 1
  store i32 %inc77, i32* %i, align 4, !tbaa !8
  br label %for.cond.39

for.end.78:                                       ; preds = %for.cond.39
  %73 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell79 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %73, i32 0, i32 8
  %74 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell79, align 8, !tbaa !99
  %75 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call80 = call i32 %74(%struct._cms_io_handler* %75) #7
  store i32 %call80, i32* %CurrentPos, align 4, !tbaa !8
  %76 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %76, i32 0, i32 6
  %77 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %78 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %79 = load i32, i32* %DirectoryPos, align 4, !tbaa !8
  %call81 = call i32 %77(%struct._cms_io_handler* %78, i32 %79) #7
  %tobool82 = icmp ne i32 %call81, 0
  br i1 %tobool82, label %if.end.84, label %if.then.83

if.then.83:                                       ; preds = %for.end.78
  br label %Error

if.end.84:                                        ; preds = %for.end.78
  %80 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %81 = load i32, i32* %Count, align 4, !tbaa !8
  %82 = load i32, i32* %Length, align 4, !tbaa !8
  %call85 = call i32 @WriteOffsetArray(%struct._cms_io_handler* %80, %struct._cmsDICarray* %a, i32 %81, i32 %82) #7
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.end.88, label %if.then.87

if.then.87:                                       ; preds = %if.end.84
  br label %Error

if.end.88:                                        ; preds = %if.end.84
  %83 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek89 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %83, i32 0, i32 6
  %84 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek89, align 8, !tbaa !101
  %85 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %86 = load i32, i32* %CurrentPos, align 4, !tbaa !8
  %call90 = call i32 %84(%struct._cms_io_handler* %85, i32 %86) #7
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.end.88
  br label %Error

if.end.93:                                        ; preds = %if.end.88
  call void @FreeArray(%struct._cmsDICarray* %a) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.92, %if.then.87, %if.then.83, %if.then.72, %if.then.61, %if.then.51, %if.then.46, %if.then.36, %if.then.32
  call void @FreeArray(%struct._cmsDICarray* %a) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %Error, %if.end.93, %if.then.26, %if.then.22, %if.then
  %87 = bitcast %struct._cmsDICarray* %a to i8*
  call void @llvm.lifetime.end(i64 96, i8* %87) #2
  %88 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #2
  %89 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #2
  %90 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #2
  %91 = bitcast i32* %Length to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #2
  %92 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #2
  %93 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #2
  %94 = bitcast i32* %AnyValue to i8*
  call void @llvm.lifetime.end(i64 4, i8* %94) #2
  %95 = bitcast i32* %AnyName to i8*
  call void @llvm.lifetime.end(i64 4, i8* %95) #2
  %96 = bitcast %struct._cmsDICTentry_struct** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #2
  %97 = bitcast i8** %hDict to i8*
  call void @llvm.lifetime.end(i64 8, i8* %97) #2
  %98 = load i32, i32* %retval
  ret i32 %98
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_Dictionary_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %call = call i8* @cmsDictDup(i8* %0) #7
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @Type_Dictionary_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @cmsDictFree(i8* %0) #7
  %1 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_vcgt_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %TagType = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %Curves = alloca %struct._cms_curve_struct**, align 8
  %cleanup.dest.slot = alloca i32
  %nChannels = alloca i16, align 2
  %nElems = alloca i16, align 2
  %nBytes = alloca i16, align 2
  %v = alloca i8, align 1
  %Colorant = alloca [3 x %struct._cmsVCGTGAMMA], align 16
  %Params = alloca [10 x double], align 16
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %TagType to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %4, align 4, !tbaa !8
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %5, i32* %TagType) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %6, i32 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call1 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %7, i32 3, i32 8) #7
  %8 = bitcast i8* %call1 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %8, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %9 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %cmp = icmp eq %struct._cms_curve_struct** %9, null
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151

if.end.3:                                         ; preds = %if.end
  %10 = load i32, i32* %TagType, align 4, !tbaa !8
  switch i32 %10, label %sw.default.147 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.82
  ]

sw.bb:                                            ; preds = %if.end.3
  %11 = bitcast i16* %nChannels to i8*
  call void @llvm.lifetime.start(i64 2, i8* %11) #2
  %12 = bitcast i16* %nElems to i8*
  call void @llvm.lifetime.start(i64 2, i8* %12) #2
  %13 = bitcast i16* %nBytes to i8*
  call void @llvm.lifetime.start(i64 2, i8* %13) #2
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call4 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %14, i16* %nChannels) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %sw.bb
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.7:                                         ; preds = %sw.bb
  %15 = load i16, i16* %nChannels, align 2, !tbaa !27
  %conv = zext i16 %15 to i32
  %cmp8 = icmp ne i32 %conv, 3
  br i1 %cmp8, label %if.then.10, label %if.end.13

if.then.10:                                       ; preds = %if.end.7
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID11 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %16, i32 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID11, align 8, !tbaa !26
  %18 = load i16, i16* %nChannels, align 2, !tbaa !27
  %conv12 = zext i16 %18 to i32
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %17, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i32 0, i32 0), i32 %conv12) #7
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.13:                                        ; preds = %if.end.7
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call14 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %19, i16* %nElems) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.17:                                        ; preds = %if.end.13
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call18 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %20, i16* %nBytes) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.21:                                        ; preds = %if.end.17
  %21 = load i16, i16* %nElems, align 2, !tbaa !27
  %conv22 = zext i16 %21 to i32
  %cmp23 = icmp eq i32 %conv22, 256
  br i1 %cmp23, label %land.lhs.true, label %if.end.32

land.lhs.true:                                    ; preds = %if.end.21
  %22 = load i16, i16* %nBytes, align 2, !tbaa !27
  %conv25 = zext i16 %22 to i32
  %cmp26 = icmp eq i32 %conv25, 1
  br i1 %cmp26, label %land.lhs.true.28, label %if.end.32

land.lhs.true.28:                                 ; preds = %land.lhs.true
  %23 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %cmp29 = icmp eq i32 %23, 1576
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.28
  store i16 2, i16* %nBytes, align 2, !tbaa !27
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %land.lhs.true.28, %land.lhs.true, %if.end.21
  store i32 0, i32* %n, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.74, %if.end.32
  %24 = load i32, i32* %n, align 4, !tbaa !8
  %cmp33 = icmp ult i32 %24, 3
  br i1 %cmp33, label %for.body, label %for.end.76

for.body:                                         ; preds = %for.cond
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID35 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %25, i32 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID35, align 8, !tbaa !26
  %27 = load i16, i16* %nElems, align 2, !tbaa !27
  %conv36 = zext i16 %27 to i32
  %call37 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %26, i32 %conv36, i16* null) #7
  %28 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom = zext i32 %28 to i64
  %29 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %29, i64 %idxprom
  store %struct._cms_curve_struct* %call37, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %30 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom38 = zext i32 %30 to i64
  %31 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %31, i64 %idxprom38
  %32 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx39, align 8, !tbaa !1
  %cmp40 = icmp eq %struct._cms_curve_struct* %32, null
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %for.body
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.43:                                        ; preds = %for.body
  %33 = load i16, i16* %nBytes, align 2, !tbaa !27
  %conv44 = zext i16 %33 to i32
  switch i32 %conv44, label %sw.default [
    i32 1, label %sw.bb.45
    i32 2, label %sw.bb.63
  ]

sw.bb.45:                                         ; preds = %if.end.43
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.46

for.cond.46:                                      ; preds = %for.inc, %sw.bb.45
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %35 = load i16, i16* %nElems, align 2, !tbaa !27
  %conv47 = zext i16 %35 to i32
  %cmp48 = icmp ult i32 %34, %conv47
  br i1 %cmp48, label %for.body.50, label %for.end

for.body.50:                                      ; preds = %for.cond.46
  call void @llvm.lifetime.start(i64 1, i8* %v) #2
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call51 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %36, i8* %v) #7
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %for.body.50
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %for.body.50
  %37 = load i8, i8* %v, align 1, !tbaa !15
  %conv55 = zext i8 %37 to i16
  %conv56 = zext i16 %conv55 to i32
  %shl = shl i32 %conv56, 8
  %38 = load i8, i8* %v, align 1, !tbaa !15
  %conv57 = zext i8 %38 to i32
  %or = or i32 %shl, %conv57
  %conv58 = trunc i32 %or to i16
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom59 = zext i32 %39 to i64
  %40 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom60 = zext i32 %40 to i64
  %41 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %41, i64 %idxprom60
  %42 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx61, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %42, i32 0, i32 6
  %43 = load i16*, i16** %Table16, align 8, !tbaa !45
  %arrayidx62 = getelementptr inbounds i16, i16* %43, i64 %idxprom59
  store i16 %conv58, i16* %arrayidx62, align 2, !tbaa !27
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.53, %if.end.54
  call void @llvm.lifetime.end(i64 1, i8* %v) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.77 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %44 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %44, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond.46

for.end:                                          ; preds = %for.cond.46
  br label %sw.epilog

sw.bb.63:                                         ; preds = %if.end.43
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %46 = load i16, i16* %nElems, align 2, !tbaa !27
  %conv64 = zext i16 %46 to i32
  %47 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom65 = zext i32 %47 to i64
  %48 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %48, i64 %idxprom65
  %49 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx66, align 8, !tbaa !1
  %Table1667 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %49, i32 0, i32 6
  %50 = load i16*, i16** %Table1667, align 8, !tbaa !45
  %call68 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %45, i32 %conv64, i16* %50) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %sw.bb.63
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.71:                                        ; preds = %sw.bb.63
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.43
  %51 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID72 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %51, i32 0, i32 5
  %52 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID72, align 8, !tbaa !26
  %53 = load i16, i16* %nBytes, align 2, !tbaa !27
  %conv73 = zext i16 %53 to i32
  %mul = mul nsw i32 %conv73, 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %52, i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i32 0, i32 0), i32 %mul) #7
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.77

sw.epilog:                                        ; preds = %if.end.71, %for.end
  br label %for.inc.74

for.inc.74:                                       ; preds = %sw.epilog
  %54 = load i32, i32* %n, align 4, !tbaa !8
  %inc75 = add i32 %54, 1
  store i32 %inc75, i32* %n, align 4, !tbaa !8
  br label %for.cond

for.end.76:                                       ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.77

cleanup.77:                                       ; preds = %sw.default, %if.then.70, %if.then.42, %if.then.20, %if.then.16, %if.then.10, %if.then.6, %for.end.76, %cleanup
  %55 = bitcast i16* %nBytes to i8*
  call void @llvm.lifetime.end(i64 2, i8* %55) #2
  %56 = bitcast i16* %nElems to i8*
  call void @llvm.lifetime.end(i64 2, i8* %56) #2
  %57 = bitcast i16* %nChannels to i8*
  call void @llvm.lifetime.end(i64 2, i8* %57) #2
  %cleanup.dest.80 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.80, label %cleanup.151 [
    i32 0, label %cleanup.cont.81
    i32 3, label %Error
  ]

cleanup.cont.81:                                  ; preds = %cleanup.77
  br label %sw.epilog.149

sw.bb.82:                                         ; preds = %if.end.3
  %58 = bitcast [3 x %struct._cmsVCGTGAMMA]* %Colorant to i8*
  call void @llvm.lifetime.start(i64 72, i8* %58) #2
  store i32 0, i32* %n, align 4, !tbaa !8
  br label %for.cond.83

for.cond.83:                                      ; preds = %for.inc.141, %sw.bb.82
  %59 = load i32, i32* %n, align 4, !tbaa !8
  %cmp84 = icmp ult i32 %59, 3
  br i1 %cmp84, label %for.body.86, label %for.end.143

for.body.86:                                      ; preds = %for.cond.83
  %60 = bitcast [10 x double]* %Params to i8*
  call void @llvm.lifetime.start(i64 80, i8* %60) #2
  %61 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %62 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom87 = zext i32 %62 to i64
  %arrayidx88 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom87
  %Gamma = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx88, i32 0, i32 0
  %call89 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %61, double* %Gamma) #7
  %tobool90 = icmp ne i32 %call89, 0
  br i1 %tobool90, label %if.end.92, label %if.then.91

if.then.91:                                       ; preds = %for.body.86
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.92:                                        ; preds = %for.body.86
  %63 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %64 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom93 = zext i32 %64 to i64
  %arrayidx94 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom93
  %Min = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx94, i32 0, i32 1
  %call95 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %63, double* %Min) #7
  %tobool96 = icmp ne i32 %call95, 0
  br i1 %tobool96, label %if.end.98, label %if.then.97

if.then.97:                                       ; preds = %if.end.92
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.98:                                        ; preds = %if.end.92
  %65 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %66 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom99 = zext i32 %66 to i64
  %arrayidx100 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom99
  %Max = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx100, i32 0, i32 2
  %call101 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %65, double* %Max) #7
  %tobool102 = icmp ne i32 %call101, 0
  br i1 %tobool102, label %if.end.104, label %if.then.103

if.then.103:                                      ; preds = %if.end.98
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.104:                                       ; preds = %if.end.98
  %67 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom105 = zext i32 %67 to i64
  %arrayidx106 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom105
  %Gamma107 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx106, i32 0, i32 0
  %68 = load double, double* %Gamma107, align 8, !tbaa !118
  %arrayidx108 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 0
  store double %68, double* %arrayidx108, align 8, !tbaa !44
  %69 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom109 = zext i32 %69 to i64
  %arrayidx110 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom109
  %Max111 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx110, i32 0, i32 2
  %70 = load double, double* %Max111, align 8, !tbaa !119
  %71 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom112 = zext i32 %71 to i64
  %arrayidx113 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom112
  %Min114 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx113, i32 0, i32 1
  %72 = load double, double* %Min114, align 8, !tbaa !120
  %sub = fsub double %70, %72
  %73 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom115 = zext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom115
  %Gamma117 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx116, i32 0, i32 0
  %74 = load double, double* %Gamma117, align 8, !tbaa !118
  %div = fdiv double 1.000000e+00, %74
  %call118 = call double @pow(double %sub, double %div) #8
  %arrayidx119 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 1
  store double %call118, double* %arrayidx119, align 8, !tbaa !44
  %arrayidx120 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 2
  store double 0.000000e+00, double* %arrayidx120, align 8, !tbaa !44
  %arrayidx121 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 3
  store double 0.000000e+00, double* %arrayidx121, align 8, !tbaa !44
  %arrayidx122 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 4
  store double 0.000000e+00, double* %arrayidx122, align 8, !tbaa !44
  %75 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom123 = zext i32 %75 to i64
  %arrayidx124 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %Colorant, i32 0, i64 %idxprom123
  %Min125 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %arrayidx124, i32 0, i32 1
  %76 = load double, double* %Min125, align 8, !tbaa !120
  %arrayidx126 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 5
  store double %76, double* %arrayidx126, align 8, !tbaa !44
  %arrayidx127 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 6
  store double 0.000000e+00, double* %arrayidx127, align 8, !tbaa !44
  %77 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID128 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %77, i32 0, i32 5
  %78 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID128, align 8, !tbaa !26
  %arraydecay = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i32 0
  %call129 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %78, i32 5, double* %arraydecay) #7
  %79 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom130 = zext i32 %79 to i64
  %80 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %80, i64 %idxprom130
  store %struct._cms_curve_struct* %call129, %struct._cms_curve_struct** %arrayidx131, align 8, !tbaa !1
  %81 = load i32, i32* %n, align 4, !tbaa !8
  %idxprom132 = zext i32 %81 to i64
  %82 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx133 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %82, i64 %idxprom132
  %83 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx133, align 8, !tbaa !1
  %cmp134 = icmp eq %struct._cms_curve_struct* %83, null
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.104
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.137:                                       ; preds = %if.end.104
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.138

cleanup.138:                                      ; preds = %if.then.136, %if.then.103, %if.then.97, %if.then.91, %if.end.137
  %84 = bitcast [10 x double]* %Params to i8*
  call void @llvm.lifetime.end(i64 80, i8* %84) #2
  %cleanup.dest.139 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.139, label %cleanup.144 [
    i32 0, label %cleanup.cont.140
  ]

cleanup.cont.140:                                 ; preds = %cleanup.138
  br label %for.inc.141

for.inc.141:                                      ; preds = %cleanup.cont.140
  %85 = load i32, i32* %n, align 4, !tbaa !8
  %inc142 = add i32 %85, 1
  store i32 %inc142, i32* %n, align 4, !tbaa !8
  br label %for.cond.83

for.end.143:                                      ; preds = %for.cond.83
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.144

cleanup.144:                                      ; preds = %for.end.143, %cleanup.138
  %86 = bitcast [3 x %struct._cmsVCGTGAMMA]* %Colorant to i8*
  call void @llvm.lifetime.end(i64 72, i8* %86) #2
  %cleanup.dest.145 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.145, label %cleanup.151 [
    i32 0, label %cleanup.cont.146
    i32 3, label %Error
  ]

cleanup.cont.146:                                 ; preds = %cleanup.144
  br label %sw.epilog.149

sw.default.147:                                   ; preds = %if.end.3
  %87 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID148 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %87, i32 0, i32 5
  %88 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID148, align 8, !tbaa !26
  %89 = load i32, i32* %TagType, align 4, !tbaa !8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %88, i32 8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i32 0, i32 0), i32 %89) #7
  br label %Error

sw.epilog.149:                                    ; preds = %cleanup.cont.146, %cleanup.cont.81
  %90 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %90, align 4, !tbaa !8
  %91 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %92 = bitcast %struct._cms_curve_struct** %91 to i8*
  store i8* %92, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151

Error:                                            ; preds = %cleanup.144, %cleanup.77, %sw.default.147
  %93 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** %93) #7
  %94 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID150 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %94, i32 0, i32 5
  %95 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID150, align 8, !tbaa !26
  %96 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %97 = bitcast %struct._cms_curve_struct** %96 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %95, i8* %97) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.151

cleanup.151:                                      ; preds = %Error, %sw.epilog.149, %cleanup.144, %cleanup.77, %if.then.2, %if.then
  %98 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %98) #2
  %99 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %99) #2
  %100 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %100) #2
  %101 = bitcast i32* %TagType to i8*
  call void @llvm.lifetime.end(i64 4, i8* %101) #2
  %102 = load i8*, i8** %retval
  ret i8* %102
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_vcgt_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Curves = alloca %struct._cms_curve_struct**, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %v = alloca %struct._cmsVCGTGAMMA, align 8
  %v66 = alloca float, align 4
  %n = alloca i16, align 2
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %2, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, i64 0
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %call = call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %6) #7
  %cmp = icmp eq i32 %call, 5
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %7, i64 1
  %8 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx1, align 8, !tbaa !1
  %call2 = call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %8) #7
  %cmp3 = icmp eq i32 %call2, 5
  br i1 %cmp3, label %land.lhs.true.4, label %if.else

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %9 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %9, i64 2
  %10 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx5, align 8, !tbaa !1
  %call6 = call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %10) #7
  %cmp7 = icmp eq i32 %call6, 5
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.4
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call8 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %11, i32 1) #7
  %tobool = icmp ne i32 %call8, 0
  br i1 %tobool, label %if.end, label %if.then.9

if.then.9:                                        ; preds = %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

if.end:                                           ; preds = %if.then
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %cmp10 = icmp ult i32 %12, 3
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = bitcast %struct._cmsVCGTGAMMA* %v to i8*
  call void @llvm.lifetime.start(i64 24, i8* %13) #2
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %14 to i64
  %15 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %15, i64 %idxprom
  %16 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx11, align 8, !tbaa !1
  %Segments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %16, i32 0, i32 2
  %17 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !48
  %arrayidx12 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %17, i64 0
  %Params = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx12, i32 0, i32 3
  %arrayidx13 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 0
  %18 = load double, double* %arrayidx13, align 8, !tbaa !44
  %Gamma = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 0
  store double %18, double* %Gamma, align 8, !tbaa !118
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom14 = zext i32 %19 to i64
  %20 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %20, i64 %idxprom14
  %21 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx15, align 8, !tbaa !1
  %Segments16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %21, i32 0, i32 2
  %22 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments16, align 8, !tbaa !48
  %arrayidx17 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %22, i64 0
  %Params18 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx17, i32 0, i32 3
  %arrayidx19 = getelementptr inbounds [10 x double], [10 x double]* %Params18, i32 0, i64 5
  %23 = load double, double* %arrayidx19, align 8, !tbaa !44
  %Min = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 1
  store double %23, double* %Min, align 8, !tbaa !120
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom20 = zext i32 %24 to i64
  %25 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %25, i64 %idxprom20
  %26 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx21, align 8, !tbaa !1
  %Segments22 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %26, i32 0, i32 2
  %27 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments22, align 8, !tbaa !48
  %arrayidx23 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %27, i64 0
  %Params24 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx23, i32 0, i32 3
  %arrayidx25 = getelementptr inbounds [10 x double], [10 x double]* %Params24, i32 0, i64 1
  %28 = load double, double* %arrayidx25, align 8, !tbaa !44
  %Gamma26 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 0
  %29 = load double, double* %Gamma26, align 8, !tbaa !118
  %call27 = call double @pow(double %28, double %29) #8
  %Min28 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 1
  %30 = load double, double* %Min28, align 8, !tbaa !120
  %add = fadd double %call27, %30
  %Max = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 2
  store double %add, double* %Max, align 8, !tbaa !119
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Gamma29 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 0
  %32 = load double, double* %Gamma29, align 8, !tbaa !118
  %call30 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %31, double %32) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %for.body
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Min34 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 1
  %34 = load double, double* %Min34, align 8, !tbaa !120
  %call35 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %33, double %34) #7
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %if.end.33
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Max39 = getelementptr inbounds %struct._cmsVCGTGAMMA, %struct._cmsVCGTGAMMA* %v, i32 0, i32 2
  %36 = load double, double* %Max39, align 8, !tbaa !119
  %call40 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %35, double %36) #7
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.end.43, label %if.then.42

if.then.42:                                       ; preds = %if.end.38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.end.38
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.43, %if.then.42, %if.then.37, %if.then.32
  %37 = bitcast %struct._cmsVCGTGAMMA* %v to i8*
  call void @llvm.lifetime.end(i64 24, i8* %37) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.88 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %38 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.87

if.else:                                          ; preds = %land.lhs.true.4, %land.lhs.true, %entry
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call44 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %39, i32 0) #7
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

if.end.47:                                        ; preds = %if.else
  %40 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call48 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %40, i16 zeroext 3) #7
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.end.47
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

if.end.51:                                        ; preds = %if.end.47
  %41 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call52 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %41, i16 zeroext 256) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.end.51
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

if.end.55:                                        ; preds = %if.end.51
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call56 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %42, i16 zeroext 2) #7
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %if.end.55
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

if.end.59:                                        ; preds = %if.end.55
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.60

for.cond.60:                                      ; preds = %for.inc.84, %if.end.59
  %43 = load i32, i32* %i, align 4, !tbaa !8
  %cmp61 = icmp ult i32 %43, 3
  br i1 %cmp61, label %for.body.62, label %for.end.86

for.body.62:                                      ; preds = %for.cond.60
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.63

for.cond.63:                                      ; preds = %for.inc.81, %for.body.62
  %44 = load i32, i32* %j, align 4, !tbaa !8
  %cmp64 = icmp ult i32 %44, 256
  br i1 %cmp64, label %for.body.65, label %for.end.83

for.body.65:                                      ; preds = %for.cond.63
  %45 = bitcast float* %v66 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #2
  %46 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom67 = zext i32 %46 to i64
  %47 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx68 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %47, i64 %idxprom67
  %48 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx68, align 8, !tbaa !1
  %49 = load i32, i32* %j, align 4, !tbaa !8
  %conv = uitofp i32 %49 to double
  %div = fdiv double %conv, 2.550000e+02
  %conv69 = fptrunc double %div to float
  %call70 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %48, float %conv69) #7
  store float %call70, float* %v66, align 4, !tbaa !121
  %50 = bitcast i16* %n to i8*
  call void @llvm.lifetime.start(i64 2, i8* %50) #2
  %51 = load float, float* %v66, align 4, !tbaa !121
  %conv71 = fpext float %51 to double
  %mul = fmul double %conv71, 6.553500e+04
  %call72 = call zeroext i16 @_cmsQuickSaturateWord(double %mul) #7
  store i16 %call72, i16* %n, align 2, !tbaa !27
  %52 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %53 = load i16, i16* %n, align 2, !tbaa !27
  %call73 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %52, i16 zeroext %53) #7
  %tobool74 = icmp ne i32 %call73, 0
  br i1 %tobool74, label %if.end.76, label %if.then.75

if.then.75:                                       ; preds = %for.body.65
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.77

if.end.76:                                        ; preds = %for.body.65
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.77

cleanup.77:                                       ; preds = %if.end.76, %if.then.75
  %54 = bitcast i16* %n to i8*
  call void @llvm.lifetime.end(i64 2, i8* %54) #2
  %55 = bitcast float* %v66 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #2
  %cleanup.dest.79 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.79, label %cleanup.88 [
    i32 0, label %cleanup.cont.80
  ]

cleanup.cont.80:                                  ; preds = %cleanup.77
  br label %for.inc.81

for.inc.81:                                       ; preds = %cleanup.cont.80
  %56 = load i32, i32* %j, align 4, !tbaa !8
  %inc82 = add i32 %56, 1
  store i32 %inc82, i32* %j, align 4, !tbaa !8
  br label %for.cond.63

for.end.83:                                       ; preds = %for.cond.63
  br label %for.inc.84

for.inc.84:                                       ; preds = %for.end.83
  %57 = load i32, i32* %i, align 4, !tbaa !8
  %inc85 = add i32 %57, 1
  store i32 %inc85, i32* %i, align 4, !tbaa !8
  br label %for.cond.60

for.end.86:                                       ; preds = %for.cond.60
  br label %if.end.87

if.end.87:                                        ; preds = %for.end.86, %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88

cleanup.88:                                       ; preds = %if.end.87, %cleanup.77, %if.then.58, %if.then.54, %if.then.50, %if.then.46, %cleanup, %if.then.9
  %58 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #2
  %59 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #2
  %60 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %60) #2
  %61 = load i32, i32* %retval
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_vcgt_Dup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %OldCurves = alloca %struct._cms_curve_struct**, align 8
  %NewCurves = alloca %struct._cms_curve_struct**, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_curve_struct*** %OldCurves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %2, %struct._cms_curve_struct*** %OldCurves, align 8, !tbaa !1
  %3 = bitcast %struct._cms_curve_struct*** %NewCurves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %4, i32 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %5, i32 3, i32 8) #7
  %6 = bitcast i8* %call to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %6, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %7 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %cmp = icmp eq %struct._cms_curve_struct** %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %OldCurves, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %8, i64 0
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %call1 = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %9) #7
  %10 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, i64 0
  store %struct._cms_curve_struct* %call1, %struct._cms_curve_struct** %arrayidx2, align 8, !tbaa !1
  %11 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %OldCurves, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %11, i64 1
  %12 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx3, align 8, !tbaa !1
  %call4 = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %12) #7
  %13 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %13, i64 1
  store %struct._cms_curve_struct* %call4, %struct._cms_curve_struct** %arrayidx5, align 8, !tbaa !1
  %14 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %OldCurves, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, i64 2
  %15 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx6, align 8, !tbaa !1
  %call7 = call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %15) #7
  %16 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %16, i64 2
  store %struct._cms_curve_struct* %call7, %struct._cms_curve_struct** %arrayidx8, align 8, !tbaa !1
  %17 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %NewCurves, align 8, !tbaa !1
  %18 = bitcast %struct._cms_curve_struct** %17 to i8*
  store i8* %18, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %19 = bitcast %struct._cms_curve_struct*** %NewCurves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %19) #2
  %20 = bitcast %struct._cms_curve_struct*** %OldCurves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %20) #2
  %21 = load i8*, i8** %retval
  ret i8* %21
}

; Function Attrs: nounwind uwtable
define internal void @Type_vcgt_Free(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cms_curve_struct**
  call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** %1) #7
  %2 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %2, i32 0, i32 5
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %4 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %3, i8* %4) #7
  ret void
}

declare i8* @_cmsMallocZero(%struct._cmsContext_struct*, i32) #1

declare i32 @_cmsReadUInt16Number(%struct._cms_io_handler*, i16*) #1

declare i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler*, double*) #1

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) #1

declare i32 @_cmsWriteUInt16Number(%struct._cms_io_handler*, i16 zeroext) #1

; Function Attrs: nounwind uwtable
define internal i32 @SaveOneChromaticity(double %x, double %y, %struct._cms_io_handler* %io) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  store double %x, double* %x.addr, align 8, !tbaa !44
  store double %y, double* %y.addr, align 8, !tbaa !44
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %0 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %1 = load double, double* %x.addr, align 8, !tbaa !44
  %call = call i32 @_cmsDoubleTo15Fixed16(double %1) #7
  %call1 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %0, i32 %call) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %3 = load double, double* %y.addr, align 8, !tbaa !44
  %call2 = call i32 @_cmsDoubleTo15Fixed16(double %3) #7
  %call3 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %2, i32 %call2) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %4 = load i32, i32* %retval
  ret i32 %4
}

declare i32 @_cmsWriteUInt32Number(%struct._cms_io_handler*, i32) #1

declare i32 @_cmsDoubleTo15Fixed16(double) #1

declare i8* @_cmsDupMem(%struct._cmsContext_struct*, i8*, i32) #1

declare i32 @_cmsReadUInt32Number(%struct._cms_io_handler*, i32*) #1

declare i8* @_cmsCalloc(%struct._cmsContext_struct*, i32, i32) #1

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #3

declare i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler*, double) #1

; Function Attrs: nounwind readnone
declare double @floor(double) #4

declare %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct*, i32) #1

declare i8* @_cmsMalloc(%struct._cmsContext_struct*, i32) #1

declare i32 @cmsMLUsetASCII(%struct._cms_MLU_struct*, i8*, i8*, i8*) #1

declare void @cmsMLUfree(%struct._cms_MLU_struct*) #1

declare i32 @cmsMLUgetASCII(%struct._cms_MLU_struct*, i8*, i8*, i8*, i32) #1

declare %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct*) #1

declare i32 @_cmsReadUInt8Number(%struct._cms_io_handler*, i8*) #1

declare i32 @cmsMLUgetWide(%struct._cms_MLU_struct*, i8*, i8*, i32*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @_cmsWriteWCharArray(%struct._cms_io_handler* %io, i32 %n, i32* %Array) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %n.addr = alloca i32, align 4
  %Array.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32* %Array, i32** %Array.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cms_io_handler* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 122, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._cmsWriteWCharArray, i32 0, i32 0)) #10
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i32*, i32** %Array.addr, align 8, !tbaa !1
  %cmp1 = icmp eq i32* %3, null
  br i1 %cmp1, label %land.lhs.true, label %cond.true.3

land.lhs.true:                                    ; preds = %cond.end
  %4 = load i32, i32* %n.addr, align 4, !tbaa !8
  %cmp2 = icmp ugt i32 %4, 0
  br i1 %cmp2, label %cond.false.4, label %cond.true.3

cond.true.3:                                      ; preds = %land.lhs.true, %cond.end
  br label %cond.end.5

cond.false.4:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 123, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._cmsWriteWCharArray, i32 0, i32 0)) #10
  unreachable
                                                  ; No predecessors!
  br label %cond.end.5

cond.end.5:                                       ; preds = %5, %cond.true.3
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.5
  %6 = load i32, i32* %i, align 4, !tbaa !8
  %7 = load i32, i32* %n.addr, align 4, !tbaa !8
  %cmp6 = icmp ult i32 %6, %7
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %9 to i64
  %10 = load i32*, i32** %Array.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %conv = trunc i32 %11 to i16
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %8, i16 zeroext %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %13 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %13) #2
  %14 = load i32, i32* %retval
  ret i32 %14
}

declare i32 @_cmsWriteUInt16Array(%struct._cms_io_handler*, i32, i16*) #1

declare i32 @_cmsWriteUInt8Number(%struct._cms_io_handler*, i8 zeroext) #1

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #5

declare %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct*, i32, double*) #1

declare double @_cms8Fixed8toDouble(i16 zeroext) #1

declare %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct*, i32, i16*) #1

declare i32 @_cmsReadUInt16Array(%struct._cms_io_handler*, i32, i16*) #1

declare zeroext i16 @_cmsDoubleTo8Fixed8(double) #1

declare %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct*) #1

declare void @cmsFreeToneCurve(%struct._cms_curve_struct*) #1

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) #1

declare void @_cmsDecodeDateTimeNumber(%struct.cmsDateTimeNumber*, %struct.tm*) #1

declare void @_cmsEncodeDateTimeNumber(%struct.cmsDateTimeNumber*, %struct.tm*) #1

declare %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct*, i32, i32) #1

declare i32 @_cmsMAT3isIdentity(%struct.cmsMAT3*) #1

declare i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct*) #1

declare %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct*, i32, i32, double*, double*) #1

; Function Attrs: nounwind uwtable
define internal i32 @Read8bitTables(%struct._cmsContext_struct* %ContextID, %struct._cms_io_handler* %io, %struct._cmsPipeline_struct* %lut, i32 %nChannels) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %lut.addr = alloca %struct._cmsPipeline_struct*, align 8
  %nChannels.addr = alloca i32, align 4
  %Temp = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %Tables = alloca [16 x %struct._cms_curve_struct*], align 16
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsPipeline_struct* %lut, %struct._cmsPipeline_struct** %lut.addr, align 8, !tbaa !1
  store i32 %nChannels, i32* %nChannels.addr, align 4, !tbaa !8
  %0 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store i8* null, i8** %Temp, align 8, !tbaa !1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast [16 x %struct._cms_curve_struct*]* %Tables to i8*
  call void @llvm.lifetime.start(i64 128, i8* %3) #2
  %4 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp = icmp sgt i32 %4, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp1 = icmp sle i32 %5, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i32 0
  %6 = bitcast %struct._cms_curve_struct** %arraydecay to i8*
  %call = call i8* @memset(i8* %6, i32 0, i64 128) #8
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %call4 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %7, i32 256) #7
  store i8* %call4, i8** %Temp, align 8, !tbaa !1
  %8 = load i8*, i8** %Temp, align 8, !tbaa !1
  %cmp5 = icmp eq i8* %8, null
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.3
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.7
  %9 = load i32, i32* %i, align 4, !tbaa !8
  %10 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp8 = icmp slt i32 %9, %10
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %call9 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %11, i32 256, i16* null) #7
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom
  store %struct._cms_curve_struct* %call9, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom10 = sext i32 %13 to i64
  %arrayidx11 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom10
  %14 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx11, align 8, !tbaa !1
  %cmp12 = icmp eq %struct._cms_curve_struct* %14, null
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %for.body
  br label %Error

if.end.14:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.14
  %15 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.15

for.cond.15:                                      ; preds = %for.inc.39, %for.end
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %17 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp16 = icmp slt i32 %16, %17
  br i1 %cmp16, label %for.body.17, label %for.end.41

for.body.17:                                      ; preds = %for.cond.15
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %18, i32 0, i32 5
  %19 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load i8*, i8** %Temp, align 8, !tbaa !1
  %call18 = call i32 %19(%struct._cms_io_handler* %20, i8* %21, i32 256, i32 1) #7
  %cmp19 = icmp ne i32 %call18, 1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %for.body.17
  br label %Error

if.end.21:                                        ; preds = %for.body.17
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc.36, %if.end.21
  %22 = load i32, i32* %j, align 4, !tbaa !8
  %cmp23 = icmp slt i32 %22, 256
  br i1 %cmp23, label %for.body.24, label %for.end.38

for.body.24:                                      ; preds = %for.cond.22
  %23 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom25 = sext i32 %23 to i64
  %24 = load i8*, i8** %Temp, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 %idxprom25
  %25 = load i8, i8* %arrayidx26, align 1, !tbaa !15
  %conv = zext i8 %25 to i16
  %conv27 = zext i16 %conv to i32
  %shl = shl i32 %conv27, 8
  %26 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom28 = sext i32 %26 to i64
  %27 = load i8*, i8** %Temp, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds i8, i8* %27, i64 %idxprom28
  %28 = load i8, i8* %arrayidx29, align 1, !tbaa !15
  %conv30 = zext i8 %28 to i32
  %or = or i32 %shl, %conv30
  %conv31 = trunc i32 %or to i16
  %29 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom32 = sext i32 %29 to i64
  %30 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom33 = sext i32 %30 to i64
  %arrayidx34 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom33
  %31 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx34, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %31, i32 0, i32 6
  %32 = load i16*, i16** %Table16, align 8, !tbaa !45
  %arrayidx35 = getelementptr inbounds i16, i16* %32, i64 %idxprom32
  store i16 %conv31, i16* %arrayidx35, align 2, !tbaa !27
  br label %for.inc.36

for.inc.36:                                       ; preds = %for.body.24
  %33 = load i32, i32* %j, align 4, !tbaa !8
  %inc37 = add nsw i32 %33, 1
  store i32 %inc37, i32* %j, align 4, !tbaa !8
  br label %for.cond.22

for.end.38:                                       ; preds = %for.cond.22
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.end.38
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %inc40 = add nsw i32 %34, 1
  store i32 %inc40, i32* %i, align 4, !tbaa !8
  br label %for.cond.15

for.end.41:                                       ; preds = %for.cond.15
  %35 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %36 = load i8*, i8** %Temp, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %35, i8* %36) #7
  store i8* null, i8** %Temp, align 8, !tbaa !1
  %37 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %lut.addr, align 8, !tbaa !1
  %38 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %39 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %arraydecay42 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i32 0
  %call43 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %38, i32 %39, %struct._cms_curve_struct** %arraydecay42) #7
  %call44 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %37, i32 1, %struct._cmsStage_struct* %call43) #7
  %tobool = icmp ne i32 %call44, 0
  br i1 %tobool, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %for.end.41
  br label %Error

if.end.46:                                        ; preds = %for.end.41
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.47

for.cond.47:                                      ; preds = %for.inc.53, %if.end.46
  %40 = load i32, i32* %i, align 4, !tbaa !8
  %41 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp48 = icmp slt i32 %40, %41
  br i1 %cmp48, label %for.body.50, label %for.end.55

for.body.50:                                      ; preds = %for.cond.47
  %42 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom51 = sext i32 %42 to i64
  %arrayidx52 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom51
  %43 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx52, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %43) #7
  br label %for.inc.53

for.inc.53:                                       ; preds = %for.body.50
  %44 = load i32, i32* %i, align 4, !tbaa !8
  %inc54 = add nsw i32 %44, 1
  store i32 %inc54, i32* %i, align 4, !tbaa !8
  br label %for.cond.47

for.end.55:                                       ; preds = %for.cond.47
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.45, %if.then.20, %if.then.13
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.56

for.cond.56:                                      ; preds = %for.inc.67, %Error
  %45 = load i32, i32* %i, align 4, !tbaa !8
  %46 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp57 = icmp slt i32 %45, %46
  br i1 %cmp57, label %for.body.59, label %for.end.69

for.body.59:                                      ; preds = %for.cond.56
  %47 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom60 = sext i32 %47 to i64
  %arrayidx61 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom60
  %48 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx61, align 8, !tbaa !1
  %tobool62 = icmp ne %struct._cms_curve_struct* %48, null
  br i1 %tobool62, label %if.then.63, label %if.end.66

if.then.63:                                       ; preds = %for.body.59
  %49 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom64 = sext i32 %49 to i64
  %arrayidx65 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom64
  %50 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx65, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %50) #7
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.63, %for.body.59
  br label %for.inc.67

for.inc.67:                                       ; preds = %if.end.66
  %51 = load i32, i32* %i, align 4, !tbaa !8
  %inc68 = add nsw i32 %51, 1
  store i32 %inc68, i32* %i, align 4, !tbaa !8
  br label %for.cond.56

for.end.69:                                       ; preds = %for.cond.56
  %52 = load i8*, i8** %Temp, align 8, !tbaa !1
  %tobool70 = icmp ne i8* %52, null
  br i1 %tobool70, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %for.end.69
  %53 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %54 = load i8*, i8** %Temp, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %53, i8* %54) #7
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.71, %for.end.69
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.72, %for.end.55, %if.then.6, %if.then.2, %if.then
  %55 = bitcast [16 x %struct._cms_curve_struct*]* %Tables to i8*
  call void @llvm.lifetime.end(i64 128, i8* %55) #2
  %56 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  %57 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #2
  %58 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #2
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal i32 @uipow(i32 %n, i32 %a, i32 %b) #0 {
entry:
  %retval = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %rv = alloca i32, align 4
  %rc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %a, i32* %a.addr, align 4, !tbaa !8
  store i32 %b, i32* %b.addr, align 4, !tbaa !8
  %0 = bitcast i32* %rv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 1, i32* %rv, align 4, !tbaa !8
  %1 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load i32, i32* %a.addr, align 4, !tbaa !8
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %n.addr, align 4, !tbaa !8
  %cmp1 = icmp eq i32 %3, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.3
  %4 = load i32, i32* %b.addr, align 4, !tbaa !8
  %cmp4 = icmp ugt i32 %4, 0
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %a.addr, align 4, !tbaa !8
  %6 = load i32, i32* %rv, align 4, !tbaa !8
  %mul = mul i32 %6, %5
  store i32 %mul, i32* %rv, align 4, !tbaa !8
  %7 = load i32, i32* %rv, align 4, !tbaa !8
  %8 = load i32, i32* %a.addr, align 4, !tbaa !8
  %div = udiv i32 -1, %8
  %cmp5 = icmp ugt i32 %7, %div
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %for.body
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.7
  %9 = load i32, i32* %b.addr, align 4, !tbaa !8
  %dec = add i32 %9, -1
  store i32 %dec, i32* %b.addr, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %rv, align 4, !tbaa !8
  %11 = load i32, i32* %n.addr, align 4, !tbaa !8
  %mul8 = mul i32 %10, %11
  store i32 %mul8, i32* %rc, align 4, !tbaa !8
  %12 = load i32, i32* %rv, align 4, !tbaa !8
  %13 = load i32, i32* %rc, align 4, !tbaa !8
  %14 = load i32, i32* %n.addr, align 4, !tbaa !8
  %div9 = udiv i32 %13, %14
  %cmp10 = icmp ne i32 %12, %div9
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %for.end
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %for.end
  %15 = load i32, i32* %rc, align 4, !tbaa !8
  store i32 %15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then.11, %if.then.6, %if.then.2, %if.then
  %16 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #2
  %17 = bitcast i32* %rv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct*, i32, i32, i32, i16*) #1

declare void @cmsPipelineFree(%struct._cmsPipeline_struct*) #1

declare %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct*, i32, %struct._cms_curve_struct**) #1

; Function Attrs: nounwind uwtable
define internal i32 @Write8bitTables(%struct._cmsContext_struct* %ContextID, %struct._cms_io_handler* %io, i32 %n, %struct._cmsStageToneCurvesData* %Tables) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %n.addr = alloca i32, align 4
  %Tables.addr = alloca %struct._cmsStageToneCurvesData*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store %struct._cmsStageToneCurvesData* %Tables, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  call void @llvm.lifetime.start(i64 1, i8* %val) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.61, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !8
  %3 = load i32, i32* %n.addr, align 4, !tbaa !8
  %cmp = icmp ult i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end.63

for.body:                                         ; preds = %for.cond
  %4 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct._cmsStageToneCurvesData* %4, null
  br i1 %tobool, label %if.then, label %if.end.60

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %5 to i64
  %6 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %6, i32 0, i32 1
  %7 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %7, i64 %idxprom
  %8 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %8, i32 0, i32 5
  %9 = load i32, i32* %nEntries, align 4, !tbaa !52
  %cmp1 = icmp eq i32 %9, 2
  br i1 %cmp1, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom2 = zext i32 %10 to i64
  %11 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves3 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %11, i32 0, i32 1
  %12 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves3, align 8, !tbaa !66
  %arrayidx4 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %12, i64 %idxprom2
  %13 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx4, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %13, i32 0, i32 6
  %14 = load i16*, i16** %Table16, align 8, !tbaa !45
  %arrayidx5 = getelementptr inbounds i16, i16* %14, i64 0
  %15 = load i16, i16* %arrayidx5, align 2, !tbaa !27
  %conv = zext i16 %15 to i32
  %cmp6 = icmp eq i32 %conv, 0
  br i1 %cmp6, label %land.lhs.true.8, label %if.else

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom9 = zext i32 %16 to i64
  %17 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves10 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %17, i32 0, i32 1
  %18 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves10, align 8, !tbaa !66
  %arrayidx11 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %18, i64 %idxprom9
  %19 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx11, align 8, !tbaa !1
  %Table1612 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %19, i32 0, i32 6
  %20 = load i16*, i16** %Table1612, align 8, !tbaa !45
  %arrayidx13 = getelementptr inbounds i16, i16* %20, i64 1
  %21 = load i16, i16* %arrayidx13, align 2, !tbaa !27
  %conv14 = zext i16 %21 to i32
  %cmp15 = icmp eq i32 %conv14, 65535
  br i1 %cmp15, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %land.lhs.true.8
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc, %if.then.17
  %22 = load i32, i32* %j, align 4, !tbaa !8
  %cmp19 = icmp slt i32 %22, 256
  br i1 %cmp19, label %for.body.21, label %for.end

for.body.21:                                      ; preds = %for.cond.18
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load i32, i32* %j, align 4, !tbaa !8
  %conv22 = trunc i32 %24 to i8
  %call = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %23, i8 zeroext %conv22) #7
  %tobool23 = icmp ne i32 %call, 0
  br i1 %tobool23, label %if.end, label %if.then.24

if.then.24:                                       ; preds = %for.body.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body.21
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %j, align 4, !tbaa !8
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %j, align 4, !tbaa !8
  br label %for.cond.18

for.end:                                          ; preds = %for.cond.18
  br label %if.end.59

if.else:                                          ; preds = %land.lhs.true.8, %land.lhs.true, %if.then
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom25 = zext i32 %26 to i64
  %27 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves26 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %27, i32 0, i32 1
  %28 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves26, align 8, !tbaa !66
  %arrayidx27 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %28, i64 %idxprom25
  %29 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx27, align 8, !tbaa !1
  %nEntries28 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %29, i32 0, i32 5
  %30 = load i32, i32* %nEntries28, align 4, !tbaa !52
  %cmp29 = icmp ne i32 %30, 256
  br i1 %cmp29, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %if.else
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %31, i32 2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.32:                                       ; preds = %if.else
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc.55, %if.else.32
  %32 = load i32, i32* %j, align 4, !tbaa !8
  %cmp34 = icmp slt i32 %32, 256
  br i1 %cmp34, label %for.body.36, label %for.end.57

for.body.36:                                      ; preds = %for.cond.33
  %33 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %cmp37 = icmp ne %struct._cmsStageToneCurvesData* %33, null
  br i1 %cmp37, label %if.then.39, label %if.else.48

if.then.39:                                       ; preds = %for.body.36
  %34 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom40 = sext i32 %34 to i64
  %35 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom41 = zext i32 %35 to i64
  %36 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves42 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %36, i32 0, i32 1
  %37 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves42, align 8, !tbaa !66
  %arrayidx43 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %37, i64 %idxprom41
  %38 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx43, align 8, !tbaa !1
  %Table1644 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %38, i32 0, i32 6
  %39 = load i16*, i16** %Table1644, align 8, !tbaa !45
  %arrayidx45 = getelementptr inbounds i16, i16* %39, i64 %idxprom40
  %40 = load i16, i16* %arrayidx45, align 2, !tbaa !27
  %conv46 = zext i16 %40 to i32
  %mul = mul nsw i32 %conv46, 65281
  %add = add nsw i32 %mul, 8388608
  %shr = ashr i32 %add, 24
  %and = and i32 %shr, 255
  %conv47 = trunc i32 %and to i8
  store i8 %conv47, i8* %val, align 1, !tbaa !15
  br label %if.end.50

if.else.48:                                       ; preds = %for.body.36
  %41 = load i32, i32* %j, align 4, !tbaa !8
  %conv49 = trunc i32 %41 to i8
  store i8 %conv49, i8* %val, align 1, !tbaa !15
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.48, %if.then.39
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %43 = load i8, i8* %val, align 1, !tbaa !15
  %call51 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %42, i8 zeroext %43) #7
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.end.50
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %if.end.50
  br label %for.inc.55

for.inc.55:                                       ; preds = %if.end.54
  %44 = load i32, i32* %j, align 4, !tbaa !8
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %j, align 4, !tbaa !8
  br label %for.cond.33

for.end.57:                                       ; preds = %for.cond.33
  br label %if.end.58

if.end.58:                                        ; preds = %for.end.57
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %for.end
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %for.body
  br label %for.inc.61

for.inc.61:                                       ; preds = %if.end.60
  %45 = load i32, i32* %i, align 4, !tbaa !8
  %inc62 = add i32 %45, 1
  store i32 %inc62, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end.63:                                       ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.63, %if.then.53, %if.then.31, %if.then.24
  call void @llvm.lifetime.end(i64 1, i8* %val) #2
  %46 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #2
  %47 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = load i32, i32* %retval
  ret i32 %48
}

declare %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct*) #1

; Function Attrs: nounwind uwtable
define internal i32 @Read16bitTables(%struct._cmsContext_struct* %ContextID, %struct._cms_io_handler* %io, %struct._cmsPipeline_struct* %lut, i32 %nChannels, i32 %nEntries) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %lut.addr = alloca %struct._cmsPipeline_struct*, align 8
  %nChannels.addr = alloca i32, align 4
  %nEntries.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %Tables = alloca [16 x %struct._cms_curve_struct*], align 16
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsPipeline_struct* %lut, %struct._cmsPipeline_struct** %lut.addr, align 8, !tbaa !1
  store i32 %nChannels, i32* %nChannels.addr, align 4, !tbaa !8
  store i32 %nEntries, i32* %nEntries.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast [16 x %struct._cms_curve_struct*]* %Tables to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #2
  %2 = load i32, i32* %nEntries.addr, align 4, !tbaa !8
  %cmp = icmp sle i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %nEntries.addr, align 4, !tbaa !8
  %cmp1 = icmp slt i32 %3, 2
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %4 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp4 = icmp sgt i32 %4, 16
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end.3
  %arraydecay = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i32 0
  %5 = bitcast %struct._cms_curve_struct** %arraydecay to i8*
  %call = call i8* @memset(i8* %5, i32 0, i64 128) #8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.6
  %6 = load i32, i32* %i, align 4, !tbaa !8
  %7 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp7 = icmp slt i32 %6, %7
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %9 = load i32, i32* %nEntries.addr, align 4, !tbaa !8
  %call8 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %8, i32 %9, i16* null) #7
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom
  store %struct._cms_curve_struct* %call8, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %11 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom9
  %12 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx10, align 8, !tbaa !1
  %cmp11 = icmp eq %struct._cms_curve_struct* %12, null
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %for.body
  br label %Error

if.end.13:                                        ; preds = %for.body
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load i32, i32* %nEntries.addr, align 4, !tbaa !8
  %15 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom14 = sext i32 %15 to i64
  %arrayidx15 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom14
  %16 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx15, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %16, i32 0, i32 6
  %17 = load i16*, i16** %Table16, align 8, !tbaa !45
  %call16 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %13, i32 %14, i16* %17) #7
  %tobool = icmp ne i32 %call16, 0
  br i1 %tobool, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.13
  br label %Error

if.end.18:                                        ; preds = %if.end.13
  br label %for.inc

for.inc:                                          ; preds = %if.end.18
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %lut.addr, align 8, !tbaa !1
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %21 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %arraydecay19 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i32 0
  %call20 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %20, i32 %21, %struct._cms_curve_struct** %arraydecay19) #7
  %call21 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %19, i32 1, %struct._cmsStage_struct* %call20) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %for.end
  br label %Error

if.end.24:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.30, %if.end.24
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %23 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp26 = icmp slt i32 %22, %23
  br i1 %cmp26, label %for.body.27, label %for.end.32

for.body.27:                                      ; preds = %for.cond.25
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom28 = sext i32 %24 to i64
  %arrayidx29 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom28
  %25 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx29, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %25) #7
  br label %for.inc.30

for.inc.30:                                       ; preds = %for.body.27
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %inc31 = add nsw i32 %26, 1
  store i32 %inc31, i32* %i, align 4, !tbaa !8
  br label %for.cond.25

for.end.32:                                       ; preds = %for.cond.25
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.23, %if.then.17, %if.then.12
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc.43, %Error
  %27 = load i32, i32* %i, align 4, !tbaa !8
  %28 = load i32, i32* %nChannels.addr, align 4, !tbaa !8
  %cmp34 = icmp slt i32 %27, %28
  br i1 %cmp34, label %for.body.35, label %for.end.45

for.body.35:                                      ; preds = %for.cond.33
  %29 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom36 = sext i32 %29 to i64
  %arrayidx37 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom36
  %30 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx37, align 8, !tbaa !1
  %tobool38 = icmp ne %struct._cms_curve_struct* %30, null
  br i1 %tobool38, label %if.then.39, label %if.end.42

if.then.39:                                       ; preds = %for.body.35
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom40 = sext i32 %31 to i64
  %arrayidx41 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Tables, i32 0, i64 %idxprom40
  %32 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx41, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %32) #7
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.39, %for.body.35
  br label %for.inc.43

for.inc.43:                                       ; preds = %if.end.42
  %33 = load i32, i32* %i, align 4, !tbaa !8
  %inc44 = add nsw i32 %33, 1
  store i32 %inc44, i32* %i, align 4, !tbaa !8
  br label %for.cond.33

for.end.45:                                       ; preds = %for.cond.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.45, %for.end.32, %if.then.5, %if.then.2, %if.then
  %34 = bitcast [16 x %struct._cms_curve_struct*]* %Tables to i8*
  call void @llvm.lifetime.end(i64 128, i8* %34) #2
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #2
  %36 = load i32, i32* %retval
  ret i32 %36
}

declare i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct*) #1

declare i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct*) #1

; Function Attrs: nounwind uwtable
define internal i32 @Write16bitTables(%struct._cmsContext_struct* %ContextID, %struct._cms_io_handler* %io, %struct._cmsStageToneCurvesData* %Tables) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Tables.addr = alloca %struct._cmsStageToneCurvesData*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i16, align 2
  %nEntries = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsStageToneCurvesData* %Tables, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i16* %val to i8*
  call void @llvm.lifetime.start(i64 2, i8* %2) #2
  %3 = bitcast i32* %nEntries to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cmsStageToneCurvesData* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 2012, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.Write16bitTables, i32 0, i32 0)) #10
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %6, i32 0, i32 1
  %7 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %7, i64 0
  %8 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %nEntries1 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %8, i32 0, i32 5
  %9 = load i32, i32* %nEntries1, align 4, !tbaa !52
  store i32 %9, i32* %nEntries, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.10, %cond.end
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %11 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %nCurves = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %11, i32 0, i32 0
  %12 = load i32, i32* %nCurves, align 4, !tbaa !122
  %cmp2 = icmp ult i32 %10, %12
  br i1 %cmp2, label %for.body, label %for.end.12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !tbaa !8
  %14 = load i32, i32* %nEntries, align 4, !tbaa !8
  %cmp4 = icmp slt i32 %13, %14
  br i1 %cmp4, label %for.body.5, label %for.end

for.body.5:                                       ; preds = %for.cond.3
  %15 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom = sext i32 %15 to i64
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom6 = zext i32 %16 to i64
  %17 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Tables.addr, align 8, !tbaa !1
  %TheCurves7 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %17, i32 0, i32 1
  %18 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves7, align 8, !tbaa !66
  %arrayidx8 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %18, i64 %idxprom6
  %19 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx8, align 8, !tbaa !1
  %Table16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %19, i32 0, i32 6
  %20 = load i16*, i16** %Table16, align 8, !tbaa !45
  %arrayidx9 = getelementptr inbounds i16, i16* %20, i64 %idxprom
  %21 = load i16, i16* %arrayidx9, align 2, !tbaa !27
  store i16 %21, i16* %val, align 2, !tbaa !27
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %23 = load i16, i16* %val, align 2, !tbaa !27
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %22, i16 zeroext %23) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body.5
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %j, align 4, !tbaa !8
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %j, align 4, !tbaa !8
  br label %for.cond.3

for.end:                                          ; preds = %for.cond.3
  br label %for.inc.10

for.inc.10:                                       ; preds = %for.end
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %inc11 = add i32 %25, 1
  store i32 %inc11, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end.12:                                       ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.12, %if.then
  %26 = bitcast i32* %nEntries to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast i16* %val to i8*
  call void @llvm.lifetime.end(i64 2, i8* %27) #2
  %28 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #2
  %30 = load i32, i32* %retval
  ret i32 %30
}

declare %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct*, i32, i32, i8*, i8*) #1

declare i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct*, i8*, i16*, i16*) #1

declare void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) #1

declare i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct*) #1

declare i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct*, i32, i8*, i8*, i8*, i16*, i16*) #1

declare %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) #1

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @_cmsReadWCharArray(%struct._cms_io_handler* %io, i32 %n, i32* %Array) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %n.addr = alloca i32, align 4
  %Array.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32* %Array, i32** %Array.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i16* %tmp to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct._cms_io_handler* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 139, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._cmsReadWCharArray, i32 0, i32 0)) #10
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load i32, i32* %i, align 4, !tbaa !8
  %5 = load i32, i32* %n.addr, align 4, !tbaa !8
  %cmp1 = icmp ult i32 %4, %5
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32*, i32** %Array.addr, align 8, !tbaa !1
  %cmp2 = icmp ne i32* %6, null
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %7, i16* %tmp) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then.3

if.then.3:                                        ; preds = %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %8 = load i16, i16* %tmp, align 2, !tbaa !27
  %conv = zext i16 %8 to i32
  %9 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %9 to i64
  %10 = load i32*, i32** %Array.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom
  store i32 %conv, i32* %arrayidx, align 4, !tbaa !8
  br label %if.end.8

if.else:                                          ; preds = %for.body
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call4 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %11, i16* null) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.else
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.6, %if.then.3
  %13 = bitcast i16* %tmp to i8*
  call void @llvm.lifetime.end(i64 2, i8* %13) #2
  %14 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #2
  %15 = load i32, i32* %retval
  ret i32 %15
}

declare %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct*, i32) #1

declare i32 @_cmsReadUInt64Number(%struct._cms_io_handler*, i64*) #1

; Function Attrs: nounwind uwtable
define internal i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cms_MLU_struct** %mlu, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %mlu.addr = alloca %struct._cms_MLU_struct**, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %BaseType = alloca i32, align 4
  %nItems = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct** %mlu, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %BaseType to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadTypeBase(%struct._cms_io_handler* %2) #7
  store i32 %call, i32* %BaseType, align 4, !tbaa !15
  %3 = load i32, i32* %BaseType, align 4, !tbaa !15
  switch i32 %3, label %sw.default [
    i32 1952807028, label %sw.bb
    i32 1684370275, label %sw.bb.2
    i32 1835824483, label %sw.bb.9
  ]

sw.bb:                                            ; preds = %entry
  %4 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %5 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %4, align 8, !tbaa !1
  %tobool = icmp ne %struct._cms_MLU_struct* %5, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %6 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %7 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %6, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %7) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call1 = call i8* @Type_Text_Read(%struct._cms_typehandler_struct* %8, %struct._cms_io_handler* %9, i32* %nItems, i32 %10) #7
  %11 = bitcast i8* %call1 to %struct._cms_MLU_struct*
  %12 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %11, %struct._cms_MLU_struct** %12, align 8, !tbaa !1
  %13 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %14 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %13, align 8, !tbaa !1
  %cmp = icmp ne %struct._cms_MLU_struct* %14, null
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.2:                                          ; preds = %entry
  %15 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %16 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %15, align 8, !tbaa !1
  %tobool3 = icmp ne %struct._cms_MLU_struct* %16, null
  br i1 %tobool3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %sw.bb.2
  %17 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %18 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %17, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %18) #7
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %sw.bb.2
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call6 = call i8* @Type_Text_Description_Read(%struct._cms_typehandler_struct* %19, %struct._cms_io_handler* %20, i32* %nItems, i32 %21) #7
  %22 = bitcast i8* %call6 to %struct._cms_MLU_struct*
  %23 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %22, %struct._cms_MLU_struct** %23, align 8, !tbaa !1
  %24 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %25 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %24, align 8, !tbaa !1
  %cmp7 = icmp ne %struct._cms_MLU_struct* %25, null
  %conv8 = zext i1 %cmp7 to i32
  store i32 %conv8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.9:                                          ; preds = %entry
  %26 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %27 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %26, align 8, !tbaa !1
  %tobool10 = icmp ne %struct._cms_MLU_struct* %27, null
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %sw.bb.9
  %28 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %29 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %28, align 8, !tbaa !1
  call void @cmsMLUfree(%struct._cms_MLU_struct* %29) #7
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %sw.bb.9
  %30 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call13 = call i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %30, %struct._cms_io_handler* %31, i32* %nItems, i32 %32) #7
  %33 = bitcast i8* %call13 to %struct._cms_MLU_struct*
  %34 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %33, %struct._cms_MLU_struct** %34, align 8, !tbaa !1
  %35 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %36 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %35, align 8, !tbaa !1
  %cmp14 = icmp ne %struct._cms_MLU_struct* %36, null
  %conv15 = zext i1 %cmp14 to i32
  store i32 %conv15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %if.end.12, %if.end.5, %if.end
  %37 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #2
  %38 = bitcast i32* %BaseType to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38) #2
  %39 = load i32, i32* %retval
  ret i32 %39
}

declare void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ*) #1

declare i32 @_cmsReadTypeBase(%struct._cms_io_handler*) #1

declare i32 @_cmsWriteUInt64Number(%struct._cms_io_handler*, i64*) #1

; Function Attrs: nounwind uwtable
define internal i32 @SaveDescription(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cms_MLU_struct* %Text) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Text.addr = alloca %struct._cms_MLU_struct*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %Text, %struct._cms_MLU_struct** %Text.addr, align 8, !tbaa !1
  %0 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ICCVersion = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i32 0, i32 6
  %1 = load i32, i32* %ICCVersion, align 4, !tbaa !123
  %cmp = icmp ult i32 %1, 67108864
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %2, i32 1684370275) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %3 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Text.addr, align 8, !tbaa !1
  %6 = bitcast %struct._cms_MLU_struct* %5 to i8*
  %call2 = call i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* %3, %struct._cms_io_handler* %4, i8* %6, i32 1) #7
  store i32 %call2, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %7, i32 1835824483) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.else
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Text.addr, align 8, !tbaa !1
  %11 = bitcast %struct._cms_MLU_struct* %10 to i8*
  %call7 = call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %8, %struct._cms_io_handler* %9, i8* %11, i32 1) #7
  store i32 %call7, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.end, %if.then.1
  %12 = load i32, i32* %retval
  ret i32 %12
}

declare i32 @_cmsWriteTypeBase(%struct._cms_io_handler*, i32) #1

declare %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ*) #1

declare i32 @_cmsReadXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ*) #1

declare i32 @_cmsWriteXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ*) #1

; Function Attrs: nounwind uwtable
define internal %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %Offset, i32 %nCurves) #0 {
entry:
  %retval = alloca %struct._cmsStage_struct*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Offset.addr = alloca i32, align 4
  %nCurves.addr = alloca i32, align 4
  %Curves = alloca [16 x %struct._cms_curve_struct*], align 16
  %i = alloca i32, align 4
  %Lin = alloca %struct._cmsStage_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %Offset, i32* %Offset.addr, align 4, !tbaa !8
  store i32 %nCurves, i32* %nCurves.addr, align 4, !tbaa !8
  %0 = bitcast [16 x %struct._cms_curve_struct*]* %Curves to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct._cmsStage_struct** %Lin to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %Lin, align 8, !tbaa !1
  %3 = load i32, i32* %nCurves.addr, align 4, !tbaa !8
  %cmp = icmp ugt i32 %3, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %4, i32 0, i32 6
  %5 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load i32, i32* %Offset.addr, align 4, !tbaa !8
  %call = call i32 %5(%struct._cms_io_handler* %6, i32 %7) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.2, label %if.then.1

if.then.1:                                        ; preds = %if.end
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.2
  %8 = load i32, i32* %i, align 4, !tbaa !8
  %9 = load i32, i32* %nCurves.addr, align 4, !tbaa !8
  %cmp3 = icmp ult i32 %8, %9
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %10 to i64
  %arrayidx = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Curves, i32 0, i64 %idxprom
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %11, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc.19, %for.end
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %13 = load i32, i32* %nCurves.addr, align 4, !tbaa !8
  %cmp5 = icmp ult i32 %12, %13
  br i1 %cmp5, label %for.body.6, label %for.end.21

for.body.6:                                       ; preds = %for.cond.4
  %14 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call7 = call %struct._cms_curve_struct* @ReadEmbeddedCurve(%struct._cms_typehandler_struct* %14, %struct._cms_io_handler* %15) #7
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom8 = zext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Curves, i32 0, i64 %idxprom8
  store %struct._cms_curve_struct* %call7, %struct._cms_curve_struct** %arrayidx9, align 8, !tbaa !1
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom10 = zext i32 %17 to i64
  %arrayidx11 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Curves, i32 0, i64 %idxprom10
  %18 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx11, align 8, !tbaa !1
  %cmp12 = icmp eq %struct._cms_curve_struct* %18, null
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %for.body.6
  br label %Error

if.end.14:                                        ; preds = %for.body.6
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call15 = call i32 @_cmsReadAlignment(%struct._cms_io_handler* %19) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  br label %Error

if.end.18:                                        ; preds = %if.end.14
  br label %for.inc.19

for.inc.19:                                       ; preds = %if.end.18
  %20 = load i32, i32* %i, align 4, !tbaa !8
  %inc20 = add i32 %20, 1
  store i32 %inc20, i32* %i, align 4, !tbaa !8
  br label %for.cond.4

for.end.21:                                       ; preds = %for.cond.4
  %21 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %21, i32 0, i32 5
  %22 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %23 = load i32, i32* %nCurves.addr, align 4, !tbaa !8
  %arraydecay = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Curves, i32 0, i32 0
  %call22 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %22, i32 %23, %struct._cms_curve_struct** %arraydecay) #7
  store %struct._cmsStage_struct* %call22, %struct._cmsStage_struct** %Lin, align 8, !tbaa !1
  br label %Error

Error:                                            ; preds = %for.end.21, %if.then.17, %if.then.13
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.23

for.cond.23:                                      ; preds = %for.inc.28, %Error
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %25 = load i32, i32* %nCurves.addr, align 4, !tbaa !8
  %cmp24 = icmp ult i32 %24, %25
  br i1 %cmp24, label %for.body.25, label %for.end.30

for.body.25:                                      ; preds = %for.cond.23
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom26 = zext i32 %26 to i64
  %arrayidx27 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %Curves, i32 0, i64 %idxprom26
  %27 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx27, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %27) #7
  br label %for.inc.28

for.inc.28:                                       ; preds = %for.body.25
  %28 = load i32, i32* %i, align 4, !tbaa !8
  %inc29 = add i32 %28, 1
  store i32 %inc29, i32* %i, align 4, !tbaa !8
  br label %for.cond.23

for.end.30:                                       ; preds = %for.cond.23
  %29 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Lin, align 8, !tbaa !1
  store %struct._cmsStage_struct* %29, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.30, %if.then.1, %if.then
  %30 = bitcast %struct._cmsStage_struct** %Lin to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30) #2
  %31 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #2
  %32 = bitcast [16 x %struct._cms_curve_struct*]* %Curves to i8*
  call void @llvm.lifetime.end(i64 128, i8* %32) #2
  %33 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %retval
  ret %struct._cmsStage_struct* %33
}

; Function Attrs: nounwind uwtable
define internal %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %Offset, i32 %InputChannels, i32 %OutputChannels) #0 {
entry:
  %retval = alloca %struct._cmsStage_struct*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Offset.addr = alloca i32, align 4
  %InputChannels.addr = alloca i32, align 4
  %OutputChannels.addr = alloca i32, align 4
  %gridPoints8 = alloca [16 x i8], align 16
  %GridPoints = alloca [16 x i32], align 16
  %i = alloca i32, align 4
  %Precision = alloca i8, align 1
  %CLUT = alloca %struct._cmsStage_struct*, align 8
  %Data = alloca %struct._cmsStageCLutData*, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca i8, align 1
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %Offset, i32* %Offset.addr, align 4, !tbaa !8
  store i32 %InputChannels, i32* %InputChannels.addr, align 4, !tbaa !8
  store i32 %OutputChannels, i32* %OutputChannels.addr, align 4, !tbaa !8
  %0 = bitcast [16 x i8]* %gridPoints8 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast [16 x i32]* %GridPoints to i8*
  call void @llvm.lifetime.start(i64 64, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  call void @llvm.lifetime.start(i64 1, i8* %Precision) #2
  %3 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast %struct._cmsStageCLutData** %Data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %5, i32 0, i32 6
  %6 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load i32, i32* %Offset.addr, align 4, !tbaa !8
  %call = call i32 %6(%struct._cms_io_handler* %7, i32 %8) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %9, i32 0, i32 5
  %10 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints8, i32 0, i32 0
  %call1 = call i32 %10(%struct._cms_io_handler* %11, i8* %arraydecay, i32 16, i32 1) #7
  %cmp = icmp ne i32 %call1, 1
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.3
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %cmp4 = icmp ult i32 %12, 16
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %13 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints8, i32 0, i64 %idxprom
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv = zext i8 %14 to i32
  %cmp5 = icmp eq i32 %conv, 1
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.body
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.8:                                         ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom9 = zext i32 %15 to i64
  %arrayidx10 = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints8, i32 0, i64 %idxprom9
  %16 = load i8, i8* %arrayidx10, align 1, !tbaa !15
  %conv11 = zext i8 %16 to i32
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom12 = zext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds [16 x i32], [16 x i32]* %GridPoints, i32 0, i64 %idxprom12
  store i32 %conv11, i32* %arrayidx13, align 4, !tbaa !8
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %18, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call14 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %19, i8* %Precision) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %for.end
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.17:                                        ; preds = %for.end
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call18 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %20, i8* null) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.21:                                        ; preds = %if.end.17
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call22 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %21, i8* null) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.25:                                        ; preds = %if.end.21
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call26 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %22, i8* null) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.29:                                        ; preds = %if.end.25
  %23 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %23, i32 0, i32 5
  %24 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %arraydecay30 = getelementptr inbounds [16 x i32], [16 x i32]* %GridPoints, i32 0, i32 0
  %25 = load i32, i32* %InputChannels.addr, align 4, !tbaa !8
  %26 = load i32, i32* %OutputChannels.addr, align 4, !tbaa !8
  %call31 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct* %24, i32* %arraydecay30, i32 %25, i32 %26, i16* null) #7
  store %struct._cmsStage_struct* %call31, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %27 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %cmp32 = icmp eq %struct._cmsStage_struct* %27, null
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.end.29
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.35:                                        ; preds = %if.end.29
  %28 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  %Data36 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %28, i32 0, i32 8
  %29 = load i8*, i8** %Data36, align 8, !tbaa !57
  %30 = bitcast i8* %29 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %30, %struct._cmsStageCLutData** %Data, align 8, !tbaa !1
  %31 = load i8, i8* %Precision, align 1, !tbaa !15
  %conv37 = zext i8 %31 to i32
  %cmp38 = icmp eq i32 %conv37, 1
  br i1 %cmp38, label %if.then.40, label %if.else

if.then.40:                                       ; preds = %if.end.35
  call void @llvm.lifetime.start(i64 1, i8* %v) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.57, %if.then.40
  %32 = load i32, i32* %i, align 4, !tbaa !8
  %33 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %Data, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %33, i32 0, i32 2
  %34 = load i32, i32* %nEntries, align 4, !tbaa !124
  %cmp42 = icmp ult i32 %32, %34
  br i1 %cmp42, label %for.body.44, label %for.end.59

for.body.44:                                      ; preds = %for.cond.41
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read45 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %35, i32 0, i32 5
  %36 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read45, align 8, !tbaa !41
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call46 = call i32 %36(%struct._cms_io_handler* %37, i8* %v, i32 1, i32 1) #7
  %cmp47 = icmp ne i32 %call46, 1
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %for.body.44
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %for.body.44
  %38 = load i8, i8* %v, align 1, !tbaa !15
  %conv51 = zext i8 %38 to i16
  %conv52 = zext i16 %conv51 to i32
  %shl = shl i32 %conv52, 8
  %39 = load i8, i8* %v, align 1, !tbaa !15
  %conv53 = zext i8 %39 to i32
  %or = or i32 %shl, %conv53
  %conv54 = trunc i32 %or to i16
  %40 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom55 = zext i32 %40 to i64
  %41 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %Data, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %41, i32 0, i32 0
  %T = bitcast %union.anon* %Tab to i16**
  %42 = load i16*, i16** %T, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds i16, i16* %42, i64 %idxprom55
  store i16 %conv54, i16* %arrayidx56, align 2, !tbaa !27
  br label %for.inc.57

for.inc.57:                                       ; preds = %if.end.50
  %43 = load i32, i32* %i, align 4, !tbaa !8
  %inc58 = add i32 %43, 1
  store i32 %inc58, i32* %i, align 4, !tbaa !8
  br label %for.cond.41

for.end.59:                                       ; preds = %for.cond.41
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.59, %if.then.49
  call void @llvm.lifetime.end(i64 1, i8* %v) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.76 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.75

if.else:                                          ; preds = %if.end.35
  %44 = load i8, i8* %Precision, align 1, !tbaa !15
  %conv60 = zext i8 %44 to i32
  %cmp61 = icmp eq i32 %conv60, 2
  br i1 %cmp61, label %if.then.63, label %if.else.71

if.then.63:                                       ; preds = %if.else
  %45 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %46 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %Data, align 8, !tbaa !1
  %nEntries64 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %46, i32 0, i32 2
  %47 = load i32, i32* %nEntries64, align 4, !tbaa !124
  %48 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %Data, align 8, !tbaa !1
  %Tab65 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %48, i32 0, i32 0
  %T66 = bitcast %union.anon* %Tab65 to i16**
  %49 = load i16*, i16** %T66, align 8, !tbaa !1
  %call67 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %45, i32 %47, i16* %49) #7
  %tobool68 = icmp ne i32 %call67, 0
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %if.then.63
  %50 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  call void @cmsStageFree(%struct._cmsStage_struct* %50) #7
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.70:                                        ; preds = %if.then.63
  br label %if.end.74

if.else.71:                                       ; preds = %if.else
  %51 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  call void @cmsStageFree(%struct._cmsStage_struct* %51) #7
  %52 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID72 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %52, i32 0, i32 5
  %53 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID72, align 8, !tbaa !26
  %54 = load i8, i8* %Precision, align 1, !tbaa !15
  %conv73 = zext i8 %54 to i32
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %53, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0), i32 %conv73) #7
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.74:                                        ; preds = %if.end.70
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %cleanup.cont
  %55 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %CLUT, align 8, !tbaa !1
  store %struct._cmsStage_struct* %55, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

cleanup.76:                                       ; preds = %if.end.75, %if.else.71, %if.then.69, %cleanup, %if.then.34, %if.then.28, %if.then.24, %if.then.20, %if.then.16, %if.then.7, %if.then.2, %if.then
  %56 = bitcast %struct._cmsStageCLutData** %Data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %56) #2
  %57 = bitcast %struct._cmsStage_struct** %CLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #2
  call void @llvm.lifetime.end(i64 1, i8* %Precision) #2
  %58 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #2
  %59 = bitcast [16 x i32]* %GridPoints to i8*
  call void @llvm.lifetime.end(i64 64, i8* %59) #2
  %60 = bitcast [16 x i8]* %gridPoints8 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %60) #2
  %61 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %retval
  ret %struct._cmsStage_struct* %61
}

; Function Attrs: nounwind uwtable
define internal %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %Offset) #0 {
entry:
  %retval = alloca %struct._cmsStage_struct*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Offset.addr = alloca i32, align 4
  %dMat = alloca [9 x double], align 16
  %dOff = alloca [3 x double], align 16
  %Mat = alloca %struct._cmsStage_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %Offset, i32* %Offset.addr, align 4, !tbaa !8
  %0 = bitcast [9 x double]* %dMat to i8*
  call void @llvm.lifetime.start(i64 72, i8* %0) #2
  %1 = bitcast [3 x double]* %dOff to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #2
  %2 = bitcast %struct._cmsStage_struct** %Mat to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %3, i32 0, i32 6
  %4 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load i32, i32* %Offset.addr, align 4, !tbaa !8
  %call = call i32 %4(%struct._cms_io_handler* %5, i32 %6) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 0
  %call1 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %7, double* %arrayidx) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 1
  %call6 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %8, double* %arrayidx5) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.4
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.4
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 2
  %call11 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %9, double* %arrayidx10) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.9
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.9
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 3
  %call16 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %10, double* %arrayidx15) #7
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %if.end.14
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end.14
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 4
  %call21 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %11, double* %arrayidx20) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.19
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.19
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 5
  %call26 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %12, double* %arrayidx25) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.24
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 6
  %call31 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %13, double* %arrayidx30) #7
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.29
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %if.end.29
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 7
  %call36 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %14, double* %arrayidx35) #7
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %if.end.34
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.34
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i64 8
  %call41 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %15, double* %arrayidx40) #7
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %if.end.39
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.44:                                        ; preds = %if.end.39
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds [3 x double], [3 x double]* %dOff, i32 0, i64 0
  %call46 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %16, double* %arrayidx45) #7
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.end.49, label %if.then.48

if.then.48:                                       ; preds = %if.end.44
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.end.44
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds [3 x double], [3 x double]* %dOff, i32 0, i64 1
  %call51 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %17, double* %arrayidx50) #7
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.end.49
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %if.end.49
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds [3 x double], [3 x double]* %dOff, i32 0, i64 2
  %call56 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %18, double* %arrayidx55) #7
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %if.end.54
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.59:                                        ; preds = %if.end.54
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %19, i32 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %arraydecay = getelementptr inbounds [9 x double], [9 x double]* %dMat, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [3 x double], [3 x double]* %dOff, i32 0, i32 0
  %call61 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %20, i32 3, i32 3, double* %arraydecay, double* %arraydecay60) #7
  store %struct._cmsStage_struct* %call61, %struct._cmsStage_struct** %Mat, align 8, !tbaa !1
  %21 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %Mat, align 8, !tbaa !1
  store %struct._cmsStage_struct* %21, %struct._cmsStage_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.59, %if.then.58, %if.then.53, %if.then.48, %if.then.43, %if.then.38, %if.then.33, %if.then.28, %if.then.23, %if.then.18, %if.then.13, %if.then.8, %if.then.3, %if.then
  %22 = bitcast %struct._cmsStage_struct** %Mat to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #2
  %23 = bitcast [3 x double]* %dOff to i8*
  call void @llvm.lifetime.end(i64 24, i8* %23) #2
  %24 = bitcast [9 x double]* %dMat to i8*
  call void @llvm.lifetime.end(i64 72, i8* %24) #2
  %25 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %retval
  ret %struct._cmsStage_struct* %25
}

; Function Attrs: nounwind uwtable
define internal %struct._cms_curve_struct* @ReadEmbeddedCurve(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io) #0 {
entry:
  %retval = alloca %struct._cms_curve_struct*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %BaseType = alloca i32, align 4
  %nItems = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %String = alloca [5 x i8], align 1
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %0 = bitcast i32* %BaseType to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadTypeBase(%struct._cms_io_handler* %2) #7
  store i32 %call, i32* %BaseType, align 4, !tbaa !15
  %3 = load i32, i32* %BaseType, align 4, !tbaa !15
  switch i32 %3, label %sw.default [
    i32 1668641398, label %sw.bb
    i32 1885434465, label %sw.bb.2
  ]

sw.bb:                                            ; preds = %entry
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i8* @Type_Curve_Read(%struct._cms_typehandler_struct* %4, %struct._cms_io_handler* %5, i32* %nItems, i32 0) #7
  %6 = bitcast i8* %call1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %6, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.2:                                          ; preds = %entry
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i8* @Type_ParametricCurve_Read(%struct._cms_typehandler_struct* %7, %struct._cms_io_handler* %8, i32* %nItems, i32 0) #7
  %9 = bitcast i8* %call3 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %9, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.default:                                       ; preds = %entry
  %10 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.start(i64 5, i8* %10) #2
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  %11 = load i32, i32* %BaseType, align 4, !tbaa !15
  call void @_cmsTagSignature2String(i8* %arraydecay, i32 %11) #7
  %12 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %12, i32 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %arraydecay4 = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %13, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i32 0, i32 0), i8* %arraydecay4) #7
  %14 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.end(i64 5, i8* %14) #2
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb.2, %sw.bb
  %15 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #2
  %16 = bitcast i32* %BaseType to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #2
  %17 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %retval
  ret %struct._cms_curve_struct* %17
}

declare i32 @_cmsReadAlignment(%struct._cms_io_handler*) #1

declare void @_cmsTagSignature2String(i8*, i32) #1

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct*, i32*, i32, i32, i16*) #1

declare void @cmsStageFree(%struct._cmsStage_struct*) #1

declare i32 @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct*, i32, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %Type, %struct._cmsStage_struct* %mpe) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Type.addr = alloca i32, align 4
  %mpe.addr = alloca %struct._cmsStage_struct*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %CurrentType = alloca i32, align 4
  %Curves = alloca %struct._cms_curve_struct**, align 8
  %cleanup.dest.slot = alloca i32
  %String = alloca [5 x i8], align 1
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %Type, i32* %Type.addr, align 4, !tbaa !15
  store %struct._cmsStage_struct* %mpe, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %CurrentType to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %call = call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* %4) #7
  store i32 %call, i32* %n, align 4, !tbaa !8
  %5 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %call1 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* %5) #7
  store %struct._cms_curve_struct** %call1, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !tbaa !8
  %7 = load i32, i32* %n, align 4, !tbaa !8
  %cmp = icmp ult i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %Type.addr, align 4, !tbaa !15
  store i32 %8, i32* %CurrentType, align 4, !tbaa !15
  %9 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %9 to i64
  %10 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, i64 %idxprom
  %11 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %nSegments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %11, i32 0, i32 1
  %12 = load i32, i32* %nSegments, align 4, !tbaa !47
  %cmp2 = icmp eq i32 %12, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom3 = zext i32 %13 to i64
  %14 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, i64 %idxprom3
  %15 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx4, align 8, !tbaa !1
  %nSegments5 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i32 0, i32 1
  %16 = load i32, i32* %nSegments5, align 4, !tbaa !47
  %cmp6 = icmp eq i32 %16, 2
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom7 = zext i32 %17 to i64
  %18 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %18, i64 %idxprom7
  %19 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx8, align 8, !tbaa !1
  %Segments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %19, i32 0, i32 2
  %20 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !48
  %arrayidx9 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %20, i64 1
  %Type10 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx9, i32 0, i32 2
  %21 = load i32, i32* %Type10, align 4, !tbaa !49
  %cmp11 = icmp eq i32 %21, 0
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %for.body
  store i32 1668641398, i32* %CurrentType, align 4, !tbaa !15
  br label %if.end.19

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom12 = zext i32 %22 to i64
  %23 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %23, i64 %idxprom12
  %24 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx13, align 8, !tbaa !1
  %Segments14 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %24, i32 0, i32 2
  %25 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments14, align 8, !tbaa !48
  %arrayidx15 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %25, i64 0
  %Type16 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx15, i32 0, i32 2
  %26 = load i32, i32* %Type16, align 4, !tbaa !49
  %cmp17 = icmp slt i32 %26, 0
  br i1 %cmp17, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %if.else
  store i32 1668641398, i32* %CurrentType, align 4, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %if.then.18, %if.else
  br label %if.end.19

if.end.19:                                        ; preds = %if.end, %if.then
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %28 = load i32, i32* %CurrentType, align 4, !tbaa !15
  %call20 = call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %27, i32 %28) #7
  %tobool = icmp ne i32 %call20, 0
  br i1 %tobool, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.19
  %29 = load i32, i32* %CurrentType, align 4, !tbaa !15
  switch i32 %29, label %sw.default [
    i32 1668641398, label %sw.bb
    i32 1885434465, label %sw.bb.29
  ]

sw.bb:                                            ; preds = %if.end.22
  %30 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %31 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %32 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom23 = zext i32 %32 to i64
  %33 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %33, i64 %idxprom23
  %34 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx24, align 8, !tbaa !1
  %35 = bitcast %struct._cms_curve_struct* %34 to i8*
  %call25 = call i32 @Type_Curve_Write(%struct._cms_typehandler_struct* %30, %struct._cms_io_handler* %31, i8* %35, i32 1) #7
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %sw.bb
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %sw.bb
  br label %sw.epilog

sw.bb.29:                                         ; preds = %if.end.22
  %36 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %38 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom30 = zext i32 %38 to i64
  %39 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %Curves, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %39, i64 %idxprom30
  %40 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx31, align 8, !tbaa !1
  %41 = bitcast %struct._cms_curve_struct* %40 to i8*
  %call32 = call i32 @Type_ParametricCurve_Write(%struct._cms_typehandler_struct* %36, %struct._cms_io_handler* %37, i8* %41, i32 1) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %sw.bb.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %sw.bb.29
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.22
  %42 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.start(i64 5, i8* %42) #2
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  %43 = load i32, i32* %Type.addr, align 4, !tbaa !15
  call void @_cmsTagSignature2String(i8* %arraydecay, i32 %43) #7
  %44 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %44, i32 0, i32 5
  %45 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %arraydecay36 = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %45, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i32 0, i32 0), i8* %arraydecay36) #7
  %46 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.end(i64 5, i8* %46) #2
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %if.end.35, %if.end.28
  %47 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call37 = call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %47) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %sw.epilog
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %sw.epilog
  br label %for.inc

for.inc:                                          ; preds = %if.end.40
  %48 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %48, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.39, %sw.default, %if.then.34, %if.then.27, %if.then.21
  %49 = bitcast %struct._cms_curve_struct*** %Curves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #2
  %50 = bitcast i32* %CurrentType to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  %51 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #2
  %52 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #2
  %53 = load i32, i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteCLUT(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8 zeroext %Precision, %struct._cmsStage_struct* %mpe) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Precision.addr = alloca i8, align 1
  %mpe.addr = alloca %struct._cmsStage_struct*, align 8
  %gridPoints = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  %CLUT = alloca %struct._cmsStageCLutData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8 %Precision, i8* %Precision.addr, align 1, !tbaa !15
  store %struct._cmsStage_struct* %mpe, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %0 = bitcast [16 x i8]* %gridPoints to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct._cmsStageCLutData** %CLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %3, i32 0, i32 8
  %4 = load i8*, i8** %Data, align 8, !tbaa !57
  %5 = bitcast i8* %4 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %5, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %6 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %HasFloatValues = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %6, i32 0, i32 3
  %7 = load i32, i32* %HasFloatValues, align 4, !tbaa !125
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %8, i32 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %9, i32 13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints, i32 0, i32 0
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 16) #8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !8
  %11 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %Params = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %11, i32 0, i32 1
  %12 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %Params, align 8, !tbaa !60
  %nInputs = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %12, i32 0, i32 2
  %13 = load i32, i32* %nInputs, align 4, !tbaa !126
  %cmp = icmp ult i32 %10, %13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %14 to i64
  %15 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %Params1 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %15, i32 0, i32 1
  %16 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %Params1, align 8, !tbaa !60
  %nSamples = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %16, i32 0, i32 4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %nSamples, i32 0, i64 %idxprom
  %17 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %conv = trunc i32 %17 to i8
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom2 = zext i32 %18 to i64
  %arrayidx3 = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints, i32 0, i64 %idxprom2
  store i8 %conv, i8* %arrayidx3, align 1, !tbaa !15
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %19, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %20, i32 0, i32 9
  %21 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %gridPoints, i32 0, i32 0
  %call5 = call i32 %21(%struct._cms_io_handler* %22, i32 16, i8* %arraydecay4) #7
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %for.end
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load i8, i8* %Precision.addr, align 1, !tbaa !15
  %call9 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %23, i8 zeroext %24) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.8
  %25 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call13 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %25, i8 zeroext 0) #7
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.12
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call17 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %26, i8 zeroext 0) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %if.end.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.16
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call21 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %27, i8 zeroext 0) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.20
  %28 = load i8, i8* %Precision.addr, align 1, !tbaa !15
  %conv25 = zext i8 %28 to i32
  %cmp26 = icmp eq i32 %conv25, 1
  br i1 %cmp26, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %if.end.24
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.29

for.cond.29:                                      ; preds = %for.inc.41, %if.then.28
  %29 = load i32, i32* %i, align 4, !tbaa !8
  %30 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %30, i32 0, i32 2
  %31 = load i32, i32* %nEntries, align 4, !tbaa !124
  %cmp30 = icmp ult i32 %29, %31
  br i1 %cmp30, label %for.body.32, label %for.end.43

for.body.32:                                      ; preds = %for.cond.29
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %33 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom33 = zext i32 %33 to i64
  %34 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %34, i32 0, i32 0
  %T = bitcast %union.anon* %Tab to i16**
  %35 = load i16*, i16** %T, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33
  %36 = load i16, i16* %arrayidx34, align 2, !tbaa !27
  %conv35 = zext i16 %36 to i32
  %mul = mul nsw i32 %conv35, 65281
  %add = add nsw i32 %mul, 8388608
  %shr = ashr i32 %add, 24
  %and = and i32 %shr, 255
  %conv36 = trunc i32 %and to i8
  %call37 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %32, i8 zeroext %conv36) #7
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %for.body.32
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %for.body.32
  br label %for.inc.41

for.inc.41:                                       ; preds = %if.end.40
  %37 = load i32, i32* %i, align 4, !tbaa !8
  %inc42 = add i32 %37, 1
  store i32 %inc42, i32* %i, align 4, !tbaa !8
  br label %for.cond.29

for.end.43:                                       ; preds = %for.cond.29
  br label %if.end.59

if.else:                                          ; preds = %if.end.24
  %38 = load i8, i8* %Precision.addr, align 1, !tbaa !15
  %conv44 = zext i8 %38 to i32
  %cmp45 = icmp eq i32 %conv44, 2
  br i1 %cmp45, label %if.then.47, label %if.else.55

if.then.47:                                       ; preds = %if.else
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %40 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %nEntries48 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %40, i32 0, i32 2
  %41 = load i32, i32* %nEntries48, align 4, !tbaa !124
  %42 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %CLUT, align 8, !tbaa !1
  %Tab49 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %42, i32 0, i32 0
  %T50 = bitcast %union.anon* %Tab49 to i16**
  %43 = load i16*, i16** %T50, align 8, !tbaa !1
  %call51 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %39, i32 %41, i16* %43) #7
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.then.47
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %if.then.47
  br label %if.end.58

if.else.55:                                       ; preds = %if.else
  %44 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID56 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %44, i32 0, i32 5
  %45 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID56, align 8, !tbaa !26
  %46 = load i8, i8* %Precision.addr, align 1, !tbaa !15
  %conv57 = zext i8 %46 to i32
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %45, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0), i32 %conv57) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.58:                                        ; preds = %if.end.54
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %for.end.43
  %47 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call60 = call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %47) #7
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %if.end.59
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.63:                                        ; preds = %if.end.59
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.63, %if.then.62, %if.else.55, %if.then.53, %if.then.39, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.7, %if.then
  %48 = bitcast %struct._cmsStageCLutData** %CLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #2
  %49 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = bitcast [16 x i8]* %gridPoints to i8*
  call void @llvm.lifetime.end(i64 16, i8* %50) #2
  %51 = load i32, i32* %retval
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteMatrix(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cmsStage_struct* %mpe) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %mpe.addr = alloca %struct._cmsStage_struct*, align 8
  %m = alloca %struct._cmsStageMatrixData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsStage_struct* %mpe, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cmsStageMatrixData** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe.addr, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %1, i32 0, i32 8
  %2 = load i8*, i8** %Data, align 8, !tbaa !57
  %3 = bitcast i8* %2 to %struct._cmsStageMatrixData*
  store %struct._cmsStageMatrixData* %3, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %5, i32 0, i32 0
  %6 = load double*, double** %Double, align 8, !tbaa !64
  %arrayidx = getelementptr inbounds double, double* %6, i64 0
  %7 = load double, double* %arrayidx, align 8, !tbaa !44
  %call = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %4, double %7) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double1 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %9, i32 0, i32 0
  %10 = load double*, double** %Double1, align 8, !tbaa !64
  %arrayidx2 = getelementptr inbounds double, double* %10, i64 1
  %11 = load double, double* %arrayidx2, align 8, !tbaa !44
  %call3 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %8, double %11) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double7 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %13, i32 0, i32 0
  %14 = load double*, double** %Double7, align 8, !tbaa !64
  %arrayidx8 = getelementptr inbounds double, double* %14, i64 2
  %15 = load double, double* %arrayidx8, align 8, !tbaa !44
  %call9 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %12, double %15) #7
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.6
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double13 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %17, i32 0, i32 0
  %18 = load double*, double** %Double13, align 8, !tbaa !64
  %arrayidx14 = getelementptr inbounds double, double* %18, i64 3
  %19 = load double, double* %arrayidx14, align 8, !tbaa !44
  %call15 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %16, double %19) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.12
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double19 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %21, i32 0, i32 0
  %22 = load double*, double** %Double19, align 8, !tbaa !64
  %arrayidx20 = getelementptr inbounds double, double* %22, i64 4
  %23 = load double, double* %arrayidx20, align 8, !tbaa !44
  %call21 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %20, double %23) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.18
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.18
  %24 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %25 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double25 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %25, i32 0, i32 0
  %26 = load double*, double** %Double25, align 8, !tbaa !64
  %arrayidx26 = getelementptr inbounds double, double* %26, i64 5
  %27 = load double, double* %arrayidx26, align 8, !tbaa !44
  %call27 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %24, double %27) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.24
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %29 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double31 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %29, i32 0, i32 0
  %30 = load double*, double** %Double31, align 8, !tbaa !64
  %arrayidx32 = getelementptr inbounds double, double* %30, i64 6
  %31 = load double, double* %arrayidx32, align 8, !tbaa !44
  %call33 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %28, double %31) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.end.30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.30
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %33 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double37 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %33, i32 0, i32 0
  %34 = load double*, double** %Double37, align 8, !tbaa !64
  %arrayidx38 = getelementptr inbounds double, double* %34, i64 7
  %35 = load double, double* %arrayidx38, align 8, !tbaa !44
  %call39 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %32, double %35) #7
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.end.36
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.42:                                        ; preds = %if.end.36
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %37 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Double43 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %37, i32 0, i32 0
  %38 = load double*, double** %Double43, align 8, !tbaa !64
  %arrayidx44 = getelementptr inbounds double, double* %38, i64 8
  %39 = load double, double* %arrayidx44, align 8, !tbaa !44
  %call45 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %36, double %39) #7
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.42
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %if.end.42
  %40 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Offset = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %40, i32 0, i32 1
  %41 = load double*, double** %Offset, align 8, !tbaa !128
  %cmp = icmp ne double* %41, null
  br i1 %cmp, label %if.then.49, label %if.else

if.then.49:                                       ; preds = %if.end.48
  %42 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %43 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Offset50 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %43, i32 0, i32 1
  %44 = load double*, double** %Offset50, align 8, !tbaa !128
  %arrayidx51 = getelementptr inbounds double, double* %44, i64 0
  %45 = load double, double* %arrayidx51, align 8, !tbaa !44
  %call52 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %42, double %45) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %if.then.49
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %if.then.49
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %47 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Offset56 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %47, i32 0, i32 1
  %48 = load double*, double** %Offset56, align 8, !tbaa !128
  %arrayidx57 = getelementptr inbounds double, double* %48, i64 1
  %49 = load double, double* %arrayidx57, align 8, !tbaa !44
  %call58 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %46, double %49) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.end.55
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %if.end.55
  %50 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %51 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %m, align 8, !tbaa !1
  %Offset62 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %51, i32 0, i32 1
  %52 = load double*, double** %Offset62, align 8, !tbaa !128
  %arrayidx63 = getelementptr inbounds double, double* %52, i64 2
  %53 = load double, double* %arrayidx63, align 8, !tbaa !44
  %call64 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %50, double %53) #7
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.end.67, label %if.then.66

if.then.66:                                       ; preds = %if.end.61
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.67:                                        ; preds = %if.end.61
  br label %if.end.80

if.else:                                          ; preds = %if.end.48
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call68 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %54, double 0.000000e+00) #7
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.else
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call72 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %55, double 0.000000e+00) #7
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %if.end.75, label %if.then.74

if.then.74:                                       ; preds = %if.end.71
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.75:                                        ; preds = %if.end.71
  %56 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call76 = call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %56, double 0.000000e+00) #7
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %if.end.79, label %if.then.78

if.then.78:                                       ; preds = %if.end.75
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.79:                                        ; preds = %if.end.75
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.end.67
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.80, %if.then.78, %if.then.74, %if.then.70, %if.then.66, %if.then.60, %if.then.54, %if.then.47, %if.then.41, %if.then.35, %if.then.29, %if.then.23, %if.then.17, %if.then.11, %if.then.5, %if.then
  %57 = bitcast %struct._cmsStageMatrixData** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #2
  %58 = load i32, i32* %retval
  ret i32 %58
}

declare i32 @cmsStageOutputChannels(%struct._cmsStage_struct*) #1

declare %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct*) #1

declare i32 @_cmsWriteAlignment(%struct._cms_io_handler*) #1

; Function Attrs: nounwind uwtable
define internal i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cms_MLU_struct* %mlu, i32* %SizeOfTag, i8* %Section) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %mlu.addr = alloca %struct._cms_MLU_struct*, align 8
  %SizeOfTag.addr = alloca i32*, align 8
  %Section.addr = alloca i8*, align 8
  %Count = alloca i32, align 4
  %Text = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %mlu, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  store i32* %SizeOfTag, i32** %SizeOfTag.addr, align 8, !tbaa !1
  store i8* %Section, i8** %Section.addr, align 8, !tbaa !1
  %0 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i32*, i32** %SizeOfTag.addr, align 8, !tbaa !1
  %3 = load i32, i32* %2, align 4, !tbaa !8
  %conv = zext i32 %3 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %4, i32* %Count) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %5 = load i32, i32* %Count, align 4, !tbaa !8
  %conv4 = zext i32 %5 to i64
  %cmp5 = icmp ugt i64 %conv4, 4294967291
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.3
  %6 = load i32*, i32** %SizeOfTag.addr, align 8, !tbaa !1
  %7 = load i32, i32* %6, align 4, !tbaa !8
  %conv9 = zext i32 %7 to i64
  %8 = load i32, i32* %Count, align 4, !tbaa !8
  %conv10 = zext i32 %8 to i64
  %add = add i64 %conv10, 4
  %cmp11 = icmp ult i64 %conv9, %add
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.8
  %9 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %9, i32 0, i32 5
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %11 = load i32, i32* %Count, align 4, !tbaa !8
  %add15 = add i32 %11, 1
  %call16 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %10, i32 %add15) #7
  store i8* %call16, i8** %Text, align 8, !tbaa !1
  %12 = load i8*, i8** %Text, align 8, !tbaa !1
  %cmp17 = icmp eq i8* %12, null
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.14
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.14
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %13, i32 0, i32 5
  %14 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %16 = load i8*, i8** %Text, align 8, !tbaa !1
  %17 = load i32, i32* %Count, align 4, !tbaa !8
  %call21 = call i32 %14(%struct._cms_io_handler* %15, i8* %16, i32 1, i32 %17) #7
  %18 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp22 = icmp ne i32 %call21, %18
  br i1 %cmp22, label %if.then.24, label %if.end.26

if.then.24:                                       ; preds = %if.end.20
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID25 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %19, i32 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID25, align 8, !tbaa !26
  %21 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %20, i8* %21) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.20
  %22 = load i32, i32* %Count, align 4, !tbaa !8
  %idxprom = zext i32 %22 to i64
  %23 = load i8*, i8** %Text, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %24 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  %25 = load i8*, i8** %Section.addr, align 8, !tbaa !1
  %26 = load i8*, i8** %Text, align 8, !tbaa !1
  %call27 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8* %25, i8* %26) #7
  %27 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID28 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %27, i32 0, i32 5
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID28, align 8, !tbaa !26
  %29 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %28, i8* %29) #7
  %30 = load i32, i32* %Count, align 4, !tbaa !8
  %conv29 = zext i32 %30 to i64
  %add30 = add i64 %conv29, 4
  %31 = load i32*, i32** %SizeOfTag.addr, align 8, !tbaa !1
  %32 = load i32, i32* %31, align 4, !tbaa !8
  %conv31 = zext i32 %32 to i64
  %sub = sub i64 %conv31, %add30
  %conv32 = trunc i64 %sub to i32
  store i32 %conv32, i32* %31, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.26, %if.then.24, %if.then.19, %if.then.13, %if.then.7, %if.then.2, %if.then
  %33 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %34 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #2
  %35 = load i32, i32* %retval
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cms_MLU_struct* %mlu, i8* %Section) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %mlu.addr = alloca %struct._cms_MLU_struct*, align 8
  %Section.addr = alloca i8*, align 8
  %TextSize = alloca i32, align 4
  %Text = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %mlu, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  store i8* %Section, i8** %Section.addr, align 8, !tbaa !1
  %0 = bitcast i32* %TextSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  %3 = load i8*, i8** %Section.addr, align 8, !tbaa !1
  %call = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8* %3, i8* null, i32 0) #7
  store i32 %call, i32* %TextSize, align 4, !tbaa !8
  %4 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %4, i32 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %6 = load i32, i32* %TextSize, align 4, !tbaa !8
  %call1 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %5, i32 %6) #7
  store i8* %call1, i8** %Text, align 8, !tbaa !1
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load i32, i32* %TextSize, align 4, !tbaa !8
  %call2 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %7, i32 %8) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  %10 = load i8*, i8** %Section.addr, align 8, !tbaa !1
  %11 = load i8*, i8** %Text, align 8, !tbaa !1
  %12 = load i32, i32* %TextSize, align 4, !tbaa !8
  %call3 = call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8* %10, i8* %11, i32 %12) #7
  %cmp = icmp eq i32 %call3, 0
  br i1 %cmp, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %13, i32 0, i32 9
  %14 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %16 = load i32, i32* %TextSize, align 4, !tbaa !8
  %17 = load i8*, i8** %Text, align 8, !tbaa !1
  %call6 = call i32 %14(%struct._cms_io_handler* %15, i32 %16, i8* %17) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.5
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID10 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID10, align 8, !tbaa !26
  %20 = load i8*, i8** %Text, align 8, !tbaa !1
  call void @_cmsFree(%struct._cmsContext_struct* %19, i8* %20) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.9, %if.then.8, %if.then.4, %if.then
  %21 = bitcast i8** %Text to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21) #2
  %22 = bitcast i32* %TextSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %22) #2
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadPositionTable(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %Count, i32 %BaseOffset, i8* %Cargo, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* %ElementFn) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Count.addr = alloca i32, align 4
  %BaseOffset.addr = alloca i32, align 4
  %Cargo.addr = alloca i8*, align 8
  %ElementFn.addr = alloca i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)*, align 8
  %i = alloca i32, align 4
  %ElementOffsets = alloca i32*, align 8
  %ElementSizes = alloca i32*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* %ElementFn, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)** %ElementFn.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  store i32* null, i32** %ElementOffsets, align 8, !tbaa !1
  %2 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  store i32* null, i32** %ElementSizes, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %3, i32 0, i32 1
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !129
  %5 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %4, i32 %5, i32 4) #7
  %6 = bitcast i8* %call to i32*
  store i32* %6, i32** %ElementOffsets, align 8, !tbaa !1
  %7 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp = icmp eq i32* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID1 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %8, i32 0, i32 1
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID1, align 8, !tbaa !129
  %10 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call2 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %9, i32 %10, i32 4) #7
  %11 = bitcast i8* %call2 to i32*
  store i32* %11, i32** %ElementSizes, align 8, !tbaa !1
  %12 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp3 = icmp eq i32* %12, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  br label %Error

if.end.5:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.5
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %14 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp6 = icmp ult i32 %13, %14
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %16 to i64
  %17 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 %idxprom
  %call7 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %15, i32* %arrayidx) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %for.body
  br label %Error

if.end.9:                                         ; preds = %for.body
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom10 = zext i32 %19 to i64
  %20 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i32, i32* %20, i64 %idxprom10
  %call12 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %18, i32* %arrayidx11) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.9
  br label %Error

if.end.15:                                        ; preds = %if.end.9
  %21 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom16 = zext i32 %22 to i64
  %23 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom16
  %24 = load i32, i32* %arrayidx17, align 4, !tbaa !8
  %add = add i32 %24, %21
  store i32 %add, i32* %arrayidx17, align 4, !tbaa !8
  br label %for.inc

for.inc:                                          ; preds = %if.end.15
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %25, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc.33, %for.end
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %27 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp19 = icmp ult i32 %26, %27
  br i1 %cmp19, label %for.body.20, label %for.end.35

for.body.20:                                      ; preds = %for.cond.18
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %28, i32 0, i32 6
  %29 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom21 = zext i32 %31 to i64
  %32 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds i32, i32* %32, i64 %idxprom21
  %33 = load i32, i32* %arrayidx22, align 4, !tbaa !8
  %call23 = call i32 %29(%struct._cms_io_handler* %30, i32 %33) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %for.body.20
  br label %Error

if.end.26:                                        ; preds = %for.body.20
  %34 = load i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)** %ElementFn.addr, align 8, !tbaa !1
  %35 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %36 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %37 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %38 = load i32, i32* %i, align 4, !tbaa !8
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom27 = zext i32 %39 to i64
  %40 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i32, i32* %40, i64 %idxprom27
  %41 = load i32, i32* %arrayidx28, align 4, !tbaa !8
  %call29 = call i32 %34(%struct._cms_typehandler_struct* %35, %struct._cms_io_handler* %36, i8* %37, i32 %38, i32 %41) #7
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.26
  br label %Error

if.end.32:                                        ; preds = %if.end.26
  br label %for.inc.33

for.inc.33:                                       ; preds = %if.end.32
  %42 = load i32, i32* %i, align 4, !tbaa !8
  %inc34 = add i32 %42, 1
  store i32 %inc34, i32* %i, align 4, !tbaa !8
  br label %for.cond.18

for.end.35:                                       ; preds = %for.cond.18
  %43 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp36 = icmp ne i32* %43, null
  br i1 %cmp36, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %for.end.35
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID38 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %44, i32 0, i32 1
  %45 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID38, align 8, !tbaa !129
  %46 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %47 = bitcast i32* %46 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %45, i8* %47) #7
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.37, %for.end.35
  %48 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp40 = icmp ne i32* %48, null
  br i1 %cmp40, label %if.then.41, label %if.end.43

if.then.41:                                       ; preds = %if.end.39
  %49 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID42 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %49, i32 0, i32 1
  %50 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID42, align 8, !tbaa !129
  %51 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %52 = bitcast i32* %51 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %50, i8* %52) #7
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.41, %if.end.39
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.31, %if.then.25, %if.then.14, %if.then.8, %if.then.4, %if.then
  %53 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp44 = icmp ne i32* %53, null
  br i1 %cmp44, label %if.then.45, label %if.end.47

if.then.45:                                       ; preds = %Error
  %54 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID46 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %54, i32 0, i32 1
  %55 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID46, align 8, !tbaa !129
  %56 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %57 = bitcast i32* %56 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %55, i8* %57) #7
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.45, %Error
  %58 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp48 = icmp ne i32* %58, null
  br i1 %cmp48, label %if.then.49, label %if.end.51

if.then.49:                                       ; preds = %if.end.47
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID50 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %59, i32 0, i32 1
  %60 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID50, align 8, !tbaa !129
  %61 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %62 = bitcast i32* %61 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %60, i8* %62) #7
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.49, %if.end.47
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.end.43
  %63 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #2
  %64 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.end(i64 8, i8* %64) #2
  %65 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %66 = load i32, i32* %retval
  ret i32 %66
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadMPEElem(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Cargo, i32 %n, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Cargo.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %SizeOfTag.addr = alloca i32, align 4
  %ElementSig = alloca i32, align 4
  %TypeHandler = alloca %struct._cms_typehandler_struct*, align 8
  %nItems = alloca i32, align 4
  %NewLUT = alloca %struct._cmsPipeline_struct*, align 8
  %MPETypePluginChunk = alloca %struct._cmsTagTypePluginChunkType*, align 8
  %cleanup.dest.slot = alloca i32
  %String = alloca [5 x i8], align 1
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct._cms_typehandler_struct** %TypeHandler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %5 = bitcast i8* %4 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %5, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %6 = bitcast %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %7, i32 0, i32 5
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %call = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %8, i32 11) #7
  %9 = bitcast i8* %call to %struct._cmsTagTypePluginChunkType*
  store %struct._cmsTagTypePluginChunkType* %9, %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk, align 8, !tbaa !1
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %10, i32* %ElementSig) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %11, i32* null) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %12 = load i32, i32* %ElementSig, align 4, !tbaa !15
  %13 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk, align 8, !tbaa !1
  %TagTypes = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %13, i32 0, i32 0
  %14 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %TagTypes, align 8, !tbaa !10
  %call6 = call %struct._cms_typehandler_struct* @GetHandler(i32 %12, %struct._cmsTagTypeLinkedList_st* %14, %struct._cmsTagTypeLinkedList_st* getelementptr inbounds ([5 x %struct._cmsTagTypeLinkedList_st], [5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes, i32 0, i32 0)) #7
  store %struct._cms_typehandler_struct* %call6, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %15 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %cmp = icmp eq %struct._cms_typehandler_struct* %15, null
  br i1 %cmp, label %if.then.7, label %if.end.10

if.then.7:                                        ; preds = %if.end.5
  %16 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.start(i64 5, i8* %16) #2
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  %17 = load i32, i32* %ElementSig, align 4, !tbaa !15
  call void @_cmsTagSignature2String(i8* %arraydecay, i32 %17) #7
  %18 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID8 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %18, i32 0, i32 5
  %19 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID8, align 8, !tbaa !26
  %arraydecay9 = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %19, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i8* %arraydecay9) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %20 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.end(i64 5, i8* %20) #2
  br label %cleanup

if.end.10:                                        ; preds = %if.end.5
  %21 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %ReadPtr = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %21, i32 0, i32 1
  %22 = load i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)*, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)** %ReadPtr, align 8, !tbaa !130
  %cmp11 = icmp ne i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* %22, null
  br i1 %cmp11, label %if.then.12, label %if.end.19

if.then.12:                                       ; preds = %if.end.10
  %23 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %NewLUT, align 8, !tbaa !1
  %24 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %TypeHandler, align 8, !tbaa !1
  %ReadPtr13 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %24, i32 0, i32 1
  %25 = load i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)*, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)** %ReadPtr13, align 8, !tbaa !130
  %26 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %27 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %28 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call14 = call i8* %25(%struct._cms_typehandler_struct* %26, %struct._cms_io_handler* %27, i32* %nItems, i32 %28) #7
  %29 = bitcast i8* %call14 to %struct._cmsStage_struct*
  %call15 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %23, i32 1, %struct._cmsStage_struct* %29) #7
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.then.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.then.12
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.end.10
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.17, %if.then.7, %if.then.4, %if.then
  %30 = bitcast %struct._cmsTagTypePluginChunkType** %MPETypePluginChunk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30) #2
  %31 = bitcast %struct._cmsPipeline_struct** %NewLUT to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #2
  %32 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %33 = bitcast %struct._cms_typehandler_struct** %TypeHandler to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %34 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #2
  %35 = load i32, i32* %retval
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MPEcurve_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %InputChans = alloca i16, align 2
  %OutputChans = alloca i16, align 2
  %i = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %GammaTables = alloca %struct._cms_curve_struct**, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %1 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast %struct._cms_curve_struct*** %GammaTables to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %6, align 4, !tbaa !8
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %7, i32 0, i32 8
  %8 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %8(%struct._cms_io_handler* %9) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call2 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %10, i16* %InputChans) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %11, i16* %OutputChans) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %12 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv7 = zext i16 %12 to i32
  %13 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv8 = zext i16 %13 to i32
  %cmp = icmp ne i32 %conv7, %conv8
  br i1 %cmp, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.6
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.6
  %14 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %14, i32 0, i32 5
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %16 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv12 = zext i16 %16 to i32
  %call13 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %15, i32 %conv12, i32 8) #7
  %17 = bitcast i8* %call13 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %17, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %18 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %cmp14 = icmp eq %struct._cms_curve_struct** %18, null
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.11
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.11
  %19 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %21 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv18 = zext i16 %21 to i32
  %22 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %23 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %24 = bitcast %struct._cms_curve_struct** %23 to i8*
  %call19 = call i32 @ReadPositionTable(%struct._cms_typehandler_struct* %19, %struct._cms_io_handler* %20, i32 %conv18, i32 %22, i8* %24, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadMPECurve) #7
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %if.end.17
  %25 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID22 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %25, i32 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID22, align 8, !tbaa !26
  %27 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv23 = zext i16 %27 to i32
  %28 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %call24 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %26, i32 %conv23, %struct._cms_curve_struct** %28) #7
  store %struct._cmsStage_struct* %call24, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.25

if.else:                                          ; preds = %if.end.17
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.21
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.25
  %29 = load i32, i32* %i, align 4, !tbaa !8
  %30 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv26 = zext i16 %30 to i32
  %cmp27 = icmp ult i32 %29, %conv26
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %31 to i64
  %32 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %32, i64 %idxprom
  %33 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %tobool29 = icmp ne %struct._cms_curve_struct* %33, null
  br i1 %tobool29, label %if.then.30, label %if.end.33

if.then.30:                                       ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom31 = zext i32 %34 to i64
  %35 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %35, i64 %idxprom31
  %36 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx32, align 8, !tbaa !1
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %36) #7
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.30, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.33
  %37 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %37, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %38 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID34 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %38, i32 0, i32 5
  %39 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID34, align 8, !tbaa !26
  %40 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %41 = bitcast %struct._cms_curve_struct** %40 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %39, i8* %41) #7
  %42 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp35 = icmp ne %struct._cmsStage_struct* %42, null
  %cond = select i1 %cmp35, i32 1, i32 0
  %43 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %cond, i32* %43, align 4, !tbaa !8
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %45 = bitcast %struct._cmsStage_struct* %44 to i8*
  store i8* %45, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.16, %if.then.10, %if.then.5, %if.then
  %46 = bitcast %struct._cms_curve_struct*** %GammaTables to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #2
  %47 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #2
  %49 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %49) #2
  %50 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %50) #2
  %51 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #2
  %52 = load i8*, i8** %retval
  ret i8* %52
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_MPEcurve_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %BaseOffset = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %Curves = alloca %struct._cmsStageToneCurvesData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %3 = bitcast i8* %2 to %struct._cmsStage_struct*
  store %struct._cmsStage_struct* %3, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %4 = bitcast %struct._cmsStageToneCurvesData** %Curves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %5, i32 0, i32 8
  %6 = load i8*, i8** %Data, align 8, !tbaa !57
  %7 = bitcast i8* %6 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %7, %struct._cmsStageToneCurvesData** %Curves, align 8, !tbaa !1
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %8, i32 0, i32 8
  %9 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %9(%struct._cms_io_handler* %10) #7
  %conv = zext i32 %call to i64
  %sub = sub i64 %conv, 8
  %conv1 = trunc i64 %sub to i32
  store i32 %conv1, i32* %BaseOffset, align 4, !tbaa !8
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %12 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %12, i32 0, i32 3
  %13 = load i32, i32* %InputChannels, align 4, !tbaa !131
  %conv2 = trunc i32 %13 to i16
  %call3 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %11, i16 zeroext %conv2) #7
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %15, i32 0, i32 3
  %16 = load i32, i32* %InputChannels4, align 4, !tbaa !131
  %conv5 = trunc i32 %16 to i16
  %call6 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %14, i16 zeroext %conv5) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %17 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %19 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %19, i32 0, i32 3
  %20 = load i32, i32* %InputChannels10, align 4, !tbaa !131
  %21 = load i32, i32* %BaseOffset, align 4, !tbaa !8
  %22 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Curves, align 8, !tbaa !1
  %23 = bitcast %struct._cmsStageToneCurvesData* %22 to i8*
  %call11 = call i32 @WritePositionTable(%struct._cms_typehandler_struct* %17, %struct._cms_io_handler* %18, i32 0, i32 %20, i32 %21, i8* %23, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @WriteMPECurve) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.9
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.13, %if.then.8, %if.then
  %24 = bitcast %struct._cmsStageToneCurvesData** %Curves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = bitcast i32* %BaseOffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i8* @GenericMPEdup(%struct._cms_typehandler_struct* %self, i8* %Ptr, i32 %n) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsStage_struct*
  %call = call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* %1) #7
  %2 = bitcast %struct._cmsStage_struct* %call to i8*
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define internal void @GenericMPEfree(%struct._cms_typehandler_struct* %self, i8* %Ptr) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %Ptr.addr = alloca i8*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct._cmsStage_struct*
  call void @cmsStageFree(%struct._cmsStage_struct* %1) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MPEmatrix_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %InputChans = alloca i16, align 2
  %OutputChans = alloca i16, align 2
  %nElems = alloca i32, align 4
  %i = alloca i32, align 4
  %Matrix = alloca double*, align 8
  %Offsets = alloca double*, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca float, align 4
  %v30 = alloca float, align 4
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %2) #2
  %3 = bitcast i32* %nElems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast double** %Matrix to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast double** %Offsets to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %7, i16* %InputChans) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %8, i16* %OutputChans) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

if.end.4:                                         ; preds = %if.end
  %9 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv = zext i16 %9 to i32
  %10 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv5 = zext i16 %10 to i32
  %mul = mul nsw i32 %conv, %conv5
  store i32 %mul, i32* %nElems, align 4, !tbaa !8
  %11 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %11, i32 0, i32 5
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %13 = load i32, i32* %nElems, align 4, !tbaa !8
  %call6 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %12, i32 %13, i32 8) #7
  %14 = bitcast i8* %call6 to double*
  store double* %14, double** %Matrix, align 8, !tbaa !1
  %15 = load double*, double** %Matrix, align 8, !tbaa !1
  %cmp = icmp eq double* %15, null
  br i1 %cmp, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.4
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

if.end.9:                                         ; preds = %if.end.4
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID10 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %16, i32 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID10, align 8, !tbaa !26
  %18 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv11 = zext i16 %18 to i32
  %call12 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %17, i32 %conv11, i32 8) #7
  %19 = bitcast i8* %call12 to double*
  store double* %19, double** %Offsets, align 8, !tbaa !1
  %20 = load double*, double** %Offsets, align 8, !tbaa !1
  %cmp13 = icmp eq double* %20, null
  br i1 %cmp13, label %if.then.15, label %if.end.17

if.then.15:                                       ; preds = %if.end.9
  %21 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID16 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %21, i32 0, i32 5
  %22 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID16, align 8, !tbaa !26
  %23 = load double*, double** %Matrix, align 8, !tbaa !1
  %24 = bitcast double* %23 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %22, i8* %24) #7
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

if.end.17:                                        ; preds = %if.end.9
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.17
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %26 = load i32, i32* %nElems, align 4, !tbaa !8
  %cmp18 = icmp ult i32 %25, %26
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = bitcast float* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #2
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call20 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %28, float* %v) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %for.body
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %for.body
  %29 = load float, float* %v, align 4, !tbaa !121
  %conv24 = fpext float %29 to double
  %30 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %30 to i64
  %31 = load double*, double** %Matrix, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds double, double* %31, i64 %idxprom
  store double %conv24, double* %arrayidx, align 8, !tbaa !44
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %if.then.22
  %32 = bitcast float* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.50 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %33 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %33, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.41, %for.end
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %35 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv26 = zext i16 %35 to i32
  %cmp27 = icmp ult i32 %34, %conv26
  br i1 %cmp27, label %for.body.29, label %for.end.43

for.body.29:                                      ; preds = %for.cond.25
  %36 = bitcast float* %v30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %36) #2
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call31 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %37, float* %v30) #7
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %for.body.29
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.38

if.end.34:                                        ; preds = %for.body.29
  %38 = load float, float* %v30, align 4, !tbaa !121
  %conv35 = fpext float %38 to double
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom36 = zext i32 %39 to i64
  %40 = load double*, double** %Offsets, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds double, double* %40, i64 %idxprom36
  store double %conv35, double* %arrayidx37, align 8, !tbaa !44
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.38

cleanup.38:                                       ; preds = %if.end.34, %if.then.33
  %41 = bitcast float* %v30 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #2
  %cleanup.dest.39 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.39, label %cleanup.50 [
    i32 0, label %cleanup.cont.40
  ]

cleanup.cont.40:                                  ; preds = %cleanup.38
  br label %for.inc.41

for.inc.41:                                       ; preds = %cleanup.cont.40
  %42 = load i32, i32* %i, align 4, !tbaa !8
  %inc42 = add i32 %42, 1
  store i32 %inc42, i32* %i, align 4, !tbaa !8
  br label %for.cond.25

for.end.43:                                       ; preds = %for.cond.25
  %43 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID44 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %43, i32 0, i32 5
  %44 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID44, align 8, !tbaa !26
  %45 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv45 = zext i16 %45 to i32
  %46 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv46 = zext i16 %46 to i32
  %47 = load double*, double** %Matrix, align 8, !tbaa !1
  %48 = load double*, double** %Offsets, align 8, !tbaa !1
  %call47 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %44, i32 %conv45, i32 %conv46, double* %47, double* %48) #7
  store %struct._cmsStage_struct* %call47, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %49 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID48 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %49, i32 0, i32 5
  %50 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID48, align 8, !tbaa !26
  %51 = load double*, double** %Matrix, align 8, !tbaa !1
  %52 = bitcast double* %51 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %50, i8* %52) #7
  %53 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID49 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %53, i32 0, i32 5
  %54 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID49, align 8, !tbaa !26
  %55 = load double*, double** %Offsets, align 8, !tbaa !1
  %56 = bitcast double* %55 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %54, i8* %56) #7
  %57 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %57, align 4, !tbaa !8
  %58 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %59 = bitcast %struct._cmsStage_struct* %58 to i8*
  store i8* %59, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

cleanup.50:                                       ; preds = %for.end.43, %cleanup.38, %cleanup, %if.then.15, %if.then.8, %if.then.3, %if.then
  %60 = bitcast double** %Offsets to i8*
  call void @llvm.lifetime.end(i64 8, i8* %60) #2
  %61 = bitcast double** %Matrix to i8*
  call void @llvm.lifetime.end(i64 8, i8* %61) #2
  %62 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #2
  %63 = bitcast i32* %nElems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #2
  %64 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %64) #2
  %65 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %65) #2
  %66 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %67 = load i8*, i8** %retval
  ret i8* %67
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_MPEmatrix_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %nElems = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %Matrix = alloca %struct._cmsStageMatrixData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nElems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to %struct._cmsStage_struct*
  store %struct._cmsStage_struct* %4, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %5 = bitcast %struct._cmsStageMatrixData** %Matrix to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i32 0, i32 8
  %7 = load i8*, i8** %Data, align 8, !tbaa !57
  %8 = bitcast i8* %7 to %struct._cmsStageMatrixData*
  store %struct._cmsStageMatrixData* %8, %struct._cmsStageMatrixData** %Matrix, align 8, !tbaa !1
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %10, i32 0, i32 3
  %11 = load i32, i32* %InputChannels, align 4, !tbaa !131
  %conv = trunc i32 %11 to i16
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %9, i16 zeroext %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %OutputChannels = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %13, i32 0, i32 4
  %14 = load i32, i32* %OutputChannels, align 4, !tbaa !132
  %conv1 = trunc i32 %14 to i16
  %call2 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %12, i16 zeroext %conv1) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %15 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %15, i32 0, i32 3
  %16 = load i32, i32* %InputChannels6, align 4, !tbaa !131
  %17 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %OutputChannels7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i32 0, i32 4
  %18 = load i32, i32* %OutputChannels7, align 4, !tbaa !132
  %mul = mul i32 %16, %18
  store i32 %mul, i32* %nElems, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.5
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %20 = load i32, i32* %nElems, align 4, !tbaa !8
  %cmp = icmp ult i32 %19, %20
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %22 to i64
  %23 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %Matrix, align 8, !tbaa !1
  %Double = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %23, i32 0, i32 0
  %24 = load double*, double** %Double, align 8, !tbaa !64
  %arrayidx = getelementptr inbounds double, double* %24, i64 %idxprom
  %25 = load double, double* %arrayidx, align 8, !tbaa !44
  %conv9 = fptrunc double %25 to float
  %call10 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %21, float %conv9) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %26, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.14

for.cond.14:                                      ; preds = %for.inc.35, %for.end
  %27 = load i32, i32* %i, align 4, !tbaa !8
  %28 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %OutputChannels15 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %28, i32 0, i32 4
  %29 = load i32, i32* %OutputChannels15, align 4, !tbaa !132
  %cmp16 = icmp ult i32 %27, %29
  br i1 %cmp16, label %for.body.18, label %for.end.37

for.body.18:                                      ; preds = %for.cond.14
  %30 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %Matrix, align 8, !tbaa !1
  %Offset = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %30, i32 0, i32 1
  %31 = load double*, double** %Offset, align 8, !tbaa !128
  %cmp19 = icmp eq double* %31, null
  br i1 %cmp19, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %for.body.18
  %32 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call22 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %32, float 0.000000e+00) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.then.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.then.21
  br label %if.end.34

if.else:                                          ; preds = %for.body.18
  %33 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom26 = zext i32 %34 to i64
  %35 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %Matrix, align 8, !tbaa !1
  %Offset27 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %35, i32 0, i32 1
  %36 = load double*, double** %Offset27, align 8, !tbaa !128
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom26
  %37 = load double, double* %arrayidx28, align 8, !tbaa !44
  %conv29 = fptrunc double %37 to float
  %call30 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %33, float %conv29) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.else
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.end.25
  br label %for.inc.35

for.inc.35:                                       ; preds = %if.end.34
  %38 = load i32, i32* %i, align 4, !tbaa !8
  %inc36 = add i32 %38, 1
  store i32 %inc36, i32* %i, align 4, !tbaa !8
  br label %for.cond.14

for.end.37:                                       ; preds = %for.cond.14
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.37, %if.then.32, %if.then.24, %if.then.12, %if.then.4, %if.then
  %39 = bitcast %struct._cmsStageMatrixData** %Matrix to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #2
  %40 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #2
  %41 = bitcast i32* %nElems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #2
  %42 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #2
  %43 = load i32, i32* %retval
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define internal i8* @Type_MPEclut_Read(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32* %nItems, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i8*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %nItems.addr = alloca i32*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %InputChans = alloca i16, align 2
  %OutputChans = alloca i16, align 2
  %Dimensions8 = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  %nMaxGrids = alloca i32, align 4
  %GridPoints = alloca [8 x i32], align 16
  %clut = alloca %struct._cmsStageCLutData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32* %nItems, i32** %nItems.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %1 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.start(i64 2, i8* %2) #2
  %3 = bitcast [16 x i8]* %Dimensions8 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #2
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %nMaxGrids to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast [8 x i32]* %GridPoints to i8*
  call void @llvm.lifetime.start(i64 32, i8* %6) #2
  %7 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %8, i16* %InputChans) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call1 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %9, i16* %OutputChans) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %10 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv = zext i16 %10 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  br label %Error

if.end.7:                                         ; preds = %if.end.4
  %11 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv8 = zext i16 %11 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.7
  br label %Error

if.end.12:                                        ; preds = %if.end.7
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %12, i32 0, i32 5
  %13 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %Dimensions8, i32 0, i32 0
  %call13 = call i32 %13(%struct._cms_io_handler* %14, i8* %arraydecay, i32 1, i32 16) #7
  %cmp14 = icmp ne i32 %call13, 16
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.12
  br label %Error

if.end.17:                                        ; preds = %if.end.12
  %15 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv18 = zext i16 %15 to i32
  %cmp19 = icmp sgt i32 %conv18, 8
  br i1 %cmp19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.17
  br label %cond.end

cond.false:                                       ; preds = %if.end.17
  %16 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv21 = zext i16 %16 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %conv21, %cond.false ]
  store i32 %cond, i32* %nMaxGrids, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %18 = load i32, i32* %nMaxGrids, align 4, !tbaa !8
  %cmp22 = icmp ult i32 %17, %18
  br i1 %cmp22, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %19 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %Dimensions8, i32 0, i64 %idxprom
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv24 = zext i8 %20 to i32
  %21 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom25 = zext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %GridPoints, i32 0, i64 %idxprom25
  store i32 %conv24, i32* %arrayidx26, align 4, !tbaa !8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %22, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %23, i32 0, i32 5
  %24 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %arraydecay27 = getelementptr inbounds [8 x i32], [8 x i32]* %GridPoints, i32 0, i32 0
  %25 = load i16, i16* %InputChans, align 2, !tbaa !27
  %conv28 = zext i16 %25 to i32
  %26 = load i16, i16* %OutputChans, align 2, !tbaa !27
  %conv29 = zext i16 %26 to i32
  %call30 = call %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct* %24, i32* %arraydecay27, i32 %conv28, i32 %conv29, float* null) #7
  store %struct._cmsStage_struct* %call30, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %27 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp31 = icmp eq %struct._cmsStage_struct* %27, null
  br i1 %cmp31, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %for.end
  br label %Error

if.end.34:                                        ; preds = %for.end
  %28 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %28, i32 0, i32 8
  %29 = load i8*, i8** %Data, align 8, !tbaa !57
  %30 = bitcast i8* %29 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %30, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.35

for.cond.35:                                      ; preds = %for.inc.45, %if.end.34
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %32 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %32, i32 0, i32 2
  %33 = load i32, i32* %nEntries, align 4, !tbaa !124
  %cmp36 = icmp ult i32 %31, %33
  br i1 %cmp36, label %for.body.38, label %for.end.47

for.body.38:                                      ; preds = %for.cond.35
  %34 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %35 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom39 = zext i32 %35 to i64
  %36 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %36, i32 0, i32 0
  %TFloat = bitcast %union.anon* %Tab to float**
  %37 = load float*, float** %TFloat, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds float, float* %37, i64 %idxprom39
  %call41 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %34, float* %arrayidx40) #7
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %for.body.38
  br label %Error

if.end.44:                                        ; preds = %for.body.38
  br label %for.inc.45

for.inc.45:                                       ; preds = %if.end.44
  %38 = load i32, i32* %i, align 4, !tbaa !8
  %inc46 = add i32 %38, 1
  store i32 %inc46, i32* %i, align 4, !tbaa !8
  br label %for.cond.35

for.end.47:                                       ; preds = %for.cond.35
  %39 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 1, i32* %39, align 4, !tbaa !8
  %40 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %41 = bitcast %struct._cmsStage_struct* %40 to i8*
  store i8* %41, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.43, %if.then.33, %if.then.16, %if.then.11, %if.then.6
  %42 = load i32*, i32** %nItems.addr, align 8, !tbaa !1
  store i32 0, i32* %42, align 4, !tbaa !8
  %43 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %cmp48 = icmp ne %struct._cmsStage_struct* %43, null
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %Error
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  call void @cmsStageFree(%struct._cmsStage_struct* %44) #7
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.50, %Error
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %for.end.47, %if.then.3, %if.then
  %45 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast [8 x i32]* %GridPoints to i8*
  call void @llvm.lifetime.end(i64 32, i8* %46) #2
  %47 = bitcast i32* %nMaxGrids to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #2
  %49 = bitcast [16 x i8]* %Dimensions8 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #2
  %50 = bitcast i16* %OutputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %50) #2
  %51 = bitcast i16* %InputChans to i8*
  call void @llvm.lifetime.end(i64 2, i8* %51) #2
  %52 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #2
  %53 = load i8*, i8** %retval
  ret i8* %53
}

; Function Attrs: nounwind uwtable
define internal i32 @Type_MPEclut_Write(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Ptr, i32 %nItems) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Ptr.addr = alloca i8*, align 8
  %nItems.addr = alloca i32, align 4
  %Dimensions8 = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  %mpe = alloca %struct._cmsStage_struct*, align 8
  %clut = alloca %struct._cmsStageCLutData*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Ptr, i8** %Ptr.addr, align 8, !tbaa !1
  store i32 %nItems, i32* %nItems.addr, align 4, !tbaa !8
  %0 = bitcast [16 x i8]* %Dimensions8 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load i8*, i8** %Ptr.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to %struct._cmsStage_struct*
  store %struct._cmsStage_struct* %4, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %5 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %Data = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i32 0, i32 8
  %7 = load i8*, i8** %Data, align 8, !tbaa !57
  %8 = bitcast i8* %7 to %struct._cmsStageCLutData*
  store %struct._cmsStageCLutData* %8, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %9 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %9, i32 0, i32 3
  %10 = load i32, i32* %InputChannels, align 4, !tbaa !131
  %cmp = icmp ugt i32 %10, 15
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %HasFloatValues = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %11, i32 0, i32 3
  %12 = load i32, i32* %HasFloatValues, align 4, !tbaa !125
  %cmp1 = icmp eq i32 %12, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %13 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %14 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels4 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %14, i32 0, i32 3
  %15 = load i32, i32* %InputChannels4, align 4, !tbaa !131
  %conv = trunc i32 %15 to i16
  %call = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %13, i16 zeroext %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end.3
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %17 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %OutputChannels = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i32 0, i32 4
  %18 = load i32, i32* %OutputChannels, align 4, !tbaa !132
  %conv7 = trunc i32 %18 to i16
  %call8 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %16, i16 zeroext %conv7) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.6
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %Dimensions8, i32 0, i32 0
  %call12 = call i8* @memset(i8* %arraydecay, i32 0, i64 16) #8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.11
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %20 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %mpe, align 8, !tbaa !1
  %InputChannels13 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %20, i32 0, i32 3
  %21 = load i32, i32* %InputChannels13, align 4, !tbaa !131
  %cmp14 = icmp ult i32 %19, %21
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %22 to i64
  %23 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Params = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %23, i32 0, i32 1
  %24 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %Params, align 8, !tbaa !60
  %nSamples = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %24, i32 0, i32 4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %nSamples, i32 0, i64 %idxprom
  %25 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %conv16 = trunc i32 %25 to i8
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom17 = zext i32 %26 to i64
  %arrayidx18 = getelementptr inbounds [16 x i8], [16 x i8]* %Dimensions8, i32 0, i64 %idxprom17
  store i8 %conv16, i8* %arrayidx18, align 1, !tbaa !15
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %27, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %28, i32 0, i32 9
  %29 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %arraydecay19 = getelementptr inbounds [16 x i8], [16 x i8]* %Dimensions8, i32 0, i32 0
  %call20 = call i32 %29(%struct._cms_io_handler* %30, i32 16, i8* %arraydecay19) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc.34, %if.end.23
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %32 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %nEntries = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %32, i32 0, i32 2
  %33 = load i32, i32* %nEntries, align 4, !tbaa !124
  %cmp25 = icmp ult i32 %31, %33
  br i1 %cmp25, label %for.body.27, label %for.end.36

for.body.27:                                      ; preds = %for.cond.24
  %34 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %35 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom28 = zext i32 %35 to i64
  %36 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %clut, align 8, !tbaa !1
  %Tab = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %36, i32 0, i32 0
  %TFloat = bitcast %union.anon* %Tab to float**
  %37 = load float*, float** %TFloat, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds float, float* %37, i64 %idxprom28
  %38 = load float, float* %arrayidx29, align 4, !tbaa !121
  %call30 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %34, float %38) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %for.body.27
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %for.body.27
  br label %for.inc.34

for.inc.34:                                       ; preds = %if.end.33
  %39 = load i32, i32* %i, align 4, !tbaa !8
  %inc35 = add i32 %39, 1
  store i32 %inc35, i32* %i, align 4, !tbaa !8
  br label %for.cond.24

for.end.36:                                       ; preds = %for.cond.24
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.36, %if.then.32, %if.then.22, %if.then.10, %if.then.5, %if.then.2, %if.then
  %40 = bitcast %struct._cmsStageCLutData** %clut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #2
  %41 = bitcast %struct._cmsStage_struct** %mpe to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #2
  %42 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #2
  %43 = bitcast [16 x i8]* %Dimensions8 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %43) #2
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadMPECurve(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Cargo, i32 %n, i32 %SizeOfTag) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Cargo.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %SizeOfTag.addr = alloca i32, align 4
  %GammaTables = alloca %struct._cms_curve_struct**, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cms_curve_struct*** %GammaTables to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct** %2, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %3 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call %struct._cms_curve_struct* @ReadSegmentedCurve(%struct._cms_typehandler_struct* %3, %struct._cms_io_handler* %4) #7
  %5 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom = zext i32 %5 to i64
  %6 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, i64 %idxprom
  store %struct._cms_curve_struct* %call, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %7 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %7 to i64
  %8 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %GammaTables, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %8, i64 %idxprom1
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx2, align 8, !tbaa !1
  %cmp = icmp ne %struct._cms_curve_struct* %9, null
  %conv = zext i1 %cmp to i32
  %10 = bitcast %struct._cms_curve_struct*** %GammaTables to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #2
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal %struct._cms_curve_struct* @ReadSegmentedCurve(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io) #0 {
entry:
  %retval = alloca %struct._cms_curve_struct*, align 8
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %ElementSig = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %nSegments = alloca i16, align 2
  %Segments = alloca %struct.cmsCurveSegment*, align 8
  %Curve = alloca %struct._cms_curve_struct*, align 8
  %PrevBreak = alloca float, align 4
  %cleanup.dest.slot = alloca i32
  %Type = alloca i16, align 2
  %ParamsByType = alloca [3 x i32], align 4
  %f = alloca float, align 4
  %Count = alloca i32, align 4
  %String = alloca [5 x i8], align 1
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %0 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i16* %nSegments to i8*
  call void @llvm.lifetime.start(i64 2, i8* %3) #2
  %4 = bitcast %struct.cmsCurveSegment** %Segments to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast float* %PrevBreak to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  store float 0xC480F0CF00000000, float* %PrevBreak, align 4, !tbaa !121
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %7, i32* %ElementSig) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %ElementSig, align 4, !tbaa !15
  %cmp = icmp ne i32 %8, 1668641382
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.2:                                         ; preds = %if.end
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %9, i32* null) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.2
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.6:                                         ; preds = %if.end.2
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call7 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %10, i16* %nSegments) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.10:                                        ; preds = %if.end.6
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %11, i16* null) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.14:                                        ; preds = %if.end.10
  %12 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv = zext i16 %12 to i32
  %cmp15 = icmp slt i32 %conv, 1
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.14
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.18:                                        ; preds = %if.end.14
  %13 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %13, i32 0, i32 5
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !26
  %15 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv19 = zext i16 %15 to i32
  %call20 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %14, i32 %conv19, i32 112) #7
  %16 = bitcast i8* %call20 to %struct.cmsCurveSegment*
  store %struct.cmsCurveSegment* %16, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %17 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %cmp21 = icmp eq %struct.cmsCurveSegment* %17, null
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.18
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.24:                                        ; preds = %if.end.18
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.24
  %18 = load i32, i32* %i, align 4, !tbaa !8
  %19 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv25 = zext i16 %19 to i32
  %sub = sub i32 %conv25, 1
  %cmp26 = icmp ult i32 %18, %sub
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load float, float* %PrevBreak, align 4, !tbaa !121
  %21 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %21 to i64
  %22 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %22, i64 %idxprom
  %x0 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx, i32 0, i32 0
  store float %20, float* %x0, align 4, !tbaa !133
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom28 = zext i32 %24 to i64
  %25 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %25, i64 %idxprom28
  %x1 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx29, i32 0, i32 1
  %call30 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %23, float* %x1) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %for.body
  br label %Error

if.end.33:                                        ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom34 = zext i32 %26 to i64
  %27 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %27, i64 %idxprom34
  %x136 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx35, i32 0, i32 1
  %28 = load float, float* %x136, align 4, !tbaa !134
  store float %28, float* %PrevBreak, align 4, !tbaa !121
  br label %for.inc

for.inc:                                          ; preds = %if.end.33
  %29 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %29, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %30 = load float, float* %PrevBreak, align 4, !tbaa !121
  %31 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv37 = zext i16 %31 to i32
  %sub38 = sub nsw i32 %conv37, 1
  %idxprom39 = sext i32 %sub38 to i64
  %32 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %32, i64 %idxprom39
  %x041 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx40, i32 0, i32 0
  store float %30, float* %x041, align 4, !tbaa !133
  %33 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv42 = zext i16 %33 to i32
  %sub43 = sub nsw i32 %conv42, 1
  %idxprom44 = sext i32 %sub43 to i64
  %34 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %34, i64 %idxprom44
  %x146 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx45, i32 0, i32 1
  store float 0x4480F0CF00000000, float* %x146, align 4, !tbaa !134
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.47

for.cond.47:                                      ; preds = %for.inc.138, %for.end
  %35 = load i32, i32* %i, align 4, !tbaa !8
  %36 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv48 = zext i16 %36 to i32
  %cmp49 = icmp ult i32 %35, %conv48
  br i1 %cmp49, label %for.body.51, label %for.end.140

for.body.51:                                      ; preds = %for.cond.47
  %37 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call52 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %37, i32* %ElementSig) #7
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %for.body.51
  br label %Error

if.end.55:                                        ; preds = %for.body.51
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call56 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %38, i32* null) #7
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %if.end.55
  br label %Error

if.end.59:                                        ; preds = %if.end.55
  %39 = load i32, i32* %ElementSig, align 4, !tbaa !15
  switch i32 %39, label %sw.default [
    i32 1885434470, label %sw.bb
    i32 1935764838, label %sw.bb.99
  ]

sw.bb:                                            ; preds = %if.end.59
  %40 = bitcast i16* %Type to i8*
  call void @llvm.lifetime.start(i64 2, i8* %40) #2
  %41 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.lifetime.start(i64 12, i8* %41) #2
  %42 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* bitcast ([3 x i32]* @ReadSegmentedCurve.ParamsByType to i8*), i64 12, i32 4, i1 false)
  %43 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call60 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %43, i16* %Type) #7
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %sw.bb
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.95

if.end.63:                                        ; preds = %sw.bb
  %44 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call64 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %44, i16* null) #7
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.end.67, label %if.then.66

if.then.66:                                       ; preds = %if.end.63
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.95

if.end.67:                                        ; preds = %if.end.63
  %45 = load i16, i16* %Type, align 2, !tbaa !27
  %conv68 = zext i16 %45 to i32
  %add = add nsw i32 %conv68, 6
  %46 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom69 = zext i32 %46 to i64
  %47 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx70 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %47, i64 %idxprom69
  %Type71 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx70, i32 0, i32 2
  store i32 %add, i32* %Type71, align 4, !tbaa !49
  %48 = load i16, i16* %Type, align 2, !tbaa !27
  %conv72 = zext i16 %48 to i32
  %cmp73 = icmp sgt i32 %conv72, 2
  br i1 %cmp73, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.67
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.95

if.end.76:                                        ; preds = %if.end.67
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.77

for.cond.77:                                      ; preds = %for.inc.92, %if.end.76
  %49 = load i32, i32* %j, align 4, !tbaa !8
  %50 = load i16, i16* %Type, align 2, !tbaa !27
  %idxprom78 = zext i16 %50 to i64
  %arrayidx79 = getelementptr inbounds [3 x i32], [3 x i32]* %ParamsByType, i32 0, i64 %idxprom78
  %51 = load i32, i32* %arrayidx79, align 4, !tbaa !8
  %cmp80 = icmp ult i32 %49, %51
  br i1 %cmp80, label %for.body.82, label %for.end.94

for.body.82:                                      ; preds = %for.cond.77
  %52 = bitcast float* %f to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #2
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call83 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %53, float* %f) #7
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.end.86, label %if.then.85

if.then.85:                                       ; preds = %for.body.82
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %for.body.82
  %54 = load float, float* %f, align 4, !tbaa !121
  %conv87 = fpext float %54 to double
  %55 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom88 = zext i32 %55 to i64
  %56 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom89 = zext i32 %56 to i64
  %57 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx90 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %57, i64 %idxprom89
  %Params = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx90, i32 0, i32 3
  %arrayidx91 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 %idxprom88
  store double %conv87, double* %arrayidx91, align 8, !tbaa !44
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.85, %if.end.86
  %58 = bitcast float* %f to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.95 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.92

for.inc.92:                                       ; preds = %cleanup.cont
  %59 = load i32, i32* %j, align 4, !tbaa !8
  %inc93 = add i32 %59, 1
  store i32 %inc93, i32* %j, align 4, !tbaa !8
  br label %for.cond.77

for.end.94:                                       ; preds = %for.cond.77
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.95

cleanup.95:                                       ; preds = %if.then.75, %if.then.66, %if.then.62, %for.end.94, %cleanup
  %60 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.lifetime.end(i64 12, i8* %60) #2
  %61 = bitcast i16* %Type to i8*
  call void @llvm.lifetime.end(i64 2, i8* %61) #2
  %cleanup.dest.97 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.97, label %cleanup.167 [
    i32 0, label %cleanup.cont.98
    i32 5, label %Error
  ]

cleanup.cont.98:                                  ; preds = %cleanup.95
  br label %sw.epilog

sw.bb.99:                                         ; preds = %if.end.59
  %62 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %62) #2
  %63 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call100 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %63, i32* %Count) #7
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.end.103, label %if.then.102

if.then.102:                                      ; preds = %sw.bb.99
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.133

if.end.103:                                       ; preds = %sw.bb.99
  %64 = load i32, i32* %Count, align 4, !tbaa !8
  %65 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom104 = zext i32 %65 to i64
  %66 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %66, i64 %idxprom104
  %nGridPoints = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx105, i32 0, i32 4
  store i32 %64, i32* %nGridPoints, align 4, !tbaa !135
  %67 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID106 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %67, i32 0, i32 5
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID106, align 8, !tbaa !26
  %69 = load i32, i32* %Count, align 4, !tbaa !8
  %call107 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %68, i32 %69, i32 4) #7
  %70 = bitcast i8* %call107 to float*
  %71 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom108 = zext i32 %71 to i64
  %72 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx109 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %72, i64 %idxprom108
  %SampledPoints = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx109, i32 0, i32 5
  store float* %70, float** %SampledPoints, align 8, !tbaa !136
  %73 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom110 = zext i32 %73 to i64
  %74 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx111 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %74, i64 %idxprom110
  %SampledPoints112 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx111, i32 0, i32 5
  %75 = load float*, float** %SampledPoints112, align 8, !tbaa !136
  %cmp113 = icmp eq float* %75, null
  br i1 %cmp113, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.end.103
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.133

if.end.116:                                       ; preds = %if.end.103
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.117

for.cond.117:                                     ; preds = %for.inc.130, %if.end.116
  %76 = load i32, i32* %j, align 4, !tbaa !8
  %77 = load i32, i32* %Count, align 4, !tbaa !8
  %cmp118 = icmp ult i32 %76, %77
  br i1 %cmp118, label %for.body.120, label %for.end.132

for.body.120:                                     ; preds = %for.cond.117
  %78 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %79 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom121 = zext i32 %79 to i64
  %80 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom122 = zext i32 %80 to i64
  %81 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %81, i64 %idxprom122
  %SampledPoints124 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx123, i32 0, i32 5
  %82 = load float*, float** %SampledPoints124, align 8, !tbaa !136
  %arrayidx125 = getelementptr inbounds float, float* %82, i64 %idxprom121
  %call126 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %78, float* %arrayidx125) #7
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %if.end.129, label %if.then.128

if.then.128:                                      ; preds = %for.body.120
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.133

if.end.129:                                       ; preds = %for.body.120
  br label %for.inc.130

for.inc.130:                                      ; preds = %if.end.129
  %83 = load i32, i32* %j, align 4, !tbaa !8
  %inc131 = add i32 %83, 1
  store i32 %inc131, i32* %j, align 4, !tbaa !8
  br label %for.cond.117

for.end.132:                                      ; preds = %for.cond.117
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.133

cleanup.133:                                      ; preds = %if.then.128, %if.then.115, %for.end.132, %if.then.102
  %84 = bitcast i32* %Count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #2
  %cleanup.dest.134 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.134, label %cleanup.167 [
    i32 0, label %cleanup.cont.135
    i32 5, label %Error
  ]

cleanup.cont.135:                                 ; preds = %cleanup.133
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.59
  %85 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.start(i64 5, i8* %85) #2
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  %86 = load i32, i32* %ElementSig, align 4, !tbaa !15
  call void @_cmsTagSignature2String(i8* %arraydecay, i32 %86) #7
  %87 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID136 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %87, i32 0, i32 5
  %88 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID136, align 8, !tbaa !26
  %arraydecay137 = getelementptr inbounds [5 x i8], [5 x i8]* %String, i32 0, i32 0
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %88, i32 8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i32 0, i32 0), i8* %arraydecay137) #7
  %89 = bitcast [5 x i8]* %String to i8*
  call void @llvm.lifetime.end(i64 5, i8* %89) #2
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

sw.epilog:                                        ; preds = %cleanup.cont.135, %cleanup.cont.98
  br label %for.inc.138

for.inc.138:                                      ; preds = %sw.epilog
  %90 = load i32, i32* %i, align 4, !tbaa !8
  %inc139 = add i32 %90, 1
  store i32 %inc139, i32* %i, align 4, !tbaa !8
  br label %for.cond.47

for.end.140:                                      ; preds = %for.cond.47
  %91 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID141 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %91, i32 0, i32 5
  %92 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID141, align 8, !tbaa !26
  %93 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv142 = zext i16 %93 to i32
  %94 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %call143 = call %struct._cms_curve_struct* @cmsBuildSegmentedToneCurve(%struct._cmsContext_struct* %92, i32 %conv142, %struct.cmsCurveSegment* %94) #7
  store %struct._cms_curve_struct* %call143, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.144

for.cond.144:                                     ; preds = %for.inc.159, %for.end.140
  %95 = load i32, i32* %i, align 4, !tbaa !8
  %96 = load i16, i16* %nSegments, align 2, !tbaa !27
  %conv145 = zext i16 %96 to i32
  %cmp146 = icmp ult i32 %95, %conv145
  br i1 %cmp146, label %for.body.148, label %for.end.161

for.body.148:                                     ; preds = %for.cond.144
  %97 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom149 = zext i32 %97 to i64
  %98 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx150 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %98, i64 %idxprom149
  %SampledPoints151 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx150, i32 0, i32 5
  %99 = load float*, float** %SampledPoints151, align 8, !tbaa !136
  %tobool152 = icmp ne float* %99, null
  br i1 %tobool152, label %if.then.153, label %if.end.158

if.then.153:                                      ; preds = %for.body.148
  %100 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID154 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %100, i32 0, i32 5
  %101 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID154, align 8, !tbaa !26
  %102 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom155 = zext i32 %102 to i64
  %103 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx156 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %103, i64 %idxprom155
  %SampledPoints157 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx156, i32 0, i32 5
  %104 = load float*, float** %SampledPoints157, align 8, !tbaa !136
  %105 = bitcast float* %104 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %101, i8* %105) #7
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.153, %for.body.148
  br label %for.inc.159

for.inc.159:                                      ; preds = %if.end.158
  %106 = load i32, i32* %i, align 4, !tbaa !8
  %inc160 = add i32 %106, 1
  store i32 %inc160, i32* %i, align 4, !tbaa !8
  br label %for.cond.144

for.end.161:                                      ; preds = %for.cond.144
  %107 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID162 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %107, i32 0, i32 5
  %108 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID162, align 8, !tbaa !26
  %109 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %110 = bitcast %struct.cmsCurveSegment* %109 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %108, i8* %110) #7
  %111 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  store %struct._cms_curve_struct* %111, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

Error:                                            ; preds = %cleanup.133, %cleanup.95, %if.then.58, %if.then.54, %if.then.32
  %112 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %tobool163 = icmp ne %struct.cmsCurveSegment* %112, null
  br i1 %tobool163, label %if.then.164, label %if.end.166

if.then.164:                                      ; preds = %Error
  %113 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %ContextID165 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %113, i32 0, i32 5
  %114 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID165, align 8, !tbaa !26
  %115 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %116 = bitcast %struct.cmsCurveSegment* %115 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %114, i8* %116) #7
  br label %if.end.166

if.end.166:                                       ; preds = %if.then.164, %Error
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

cleanup.167:                                      ; preds = %if.end.166, %for.end.161, %sw.default, %cleanup.133, %cleanup.95, %if.then.23, %if.then.17, %if.then.13, %if.then.9, %if.then.5, %if.then.1, %if.then
  %117 = bitcast float* %PrevBreak to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #2
  %118 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.end(i64 8, i8* %118) #2
  %119 = bitcast %struct.cmsCurveSegment** %Segments to i8*
  call void @llvm.lifetime.end(i64 8, i8* %119) #2
  %120 = bitcast i16* %nSegments to i8*
  call void @llvm.lifetime.end(i64 2, i8* %120) #2
  %121 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %121) #2
  %122 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %122) #2
  %123 = bitcast i32* %ElementSig to i8*
  call void @llvm.lifetime.end(i64 4, i8* %123) #2
  %124 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %retval
  ret %struct._cms_curve_struct* %124
}

declare i32 @_cmsReadFloat32Number(%struct._cms_io_handler*, float*) #1

declare %struct._cms_curve_struct* @cmsBuildSegmentedToneCurve(%struct._cmsContext_struct*, i32, %struct.cmsCurveSegment*) #1

; Function Attrs: nounwind uwtable
define internal i32 @WritePositionTable(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i32 %SizeOfTag, i32 %Count, i32 %BaseOffset, i8* %Cargo, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* %ElementFn) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %SizeOfTag.addr = alloca i32, align 4
  %Count.addr = alloca i32, align 4
  %BaseOffset.addr = alloca i32, align 4
  %Cargo.addr = alloca i8*, align 8
  %ElementFn.addr = alloca i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)*, align 8
  %i = alloca i32, align 4
  %DirectoryPos = alloca i32, align 4
  %CurrentPos = alloca i32, align 4
  %Before = alloca i32, align 4
  %ElementOffsets = alloca i32*, align 8
  %ElementSizes = alloca i32*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* %ElementFn, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)** %ElementFn.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  store i32* null, i32** %ElementOffsets, align 8, !tbaa !1
  %5 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store i32* null, i32** %ElementSizes, align 8, !tbaa !1
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %6, i32 0, i32 1
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !129
  %8 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %7, i32 %8, i32 4) #7
  %9 = bitcast i8* %call to i32*
  store i32* %9, i32** %ElementOffsets, align 8, !tbaa !1
  %10 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp = icmp eq i32* %10, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID1 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %11, i32 0, i32 1
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID1, align 8, !tbaa !129
  %13 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call2 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %12, i32 %13, i32 4) #7
  %14 = bitcast i8* %call2 to i32*
  store i32* %14, i32** %ElementSizes, align 8, !tbaa !1
  %15 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp3 = icmp eq i32* %15, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  br label %Error

if.end.5:                                         ; preds = %if.end
  %16 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %16, i32 0, i32 8
  %17 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call6 = call i32 %17(%struct._cms_io_handler* %18) #7
  store i32 %call6, i32* %DirectoryPos, align 4, !tbaa !8
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.5
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %20 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp7 = icmp ult i32 %19, %20
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call8 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %21, i32 0) #7
  %tobool = icmp ne i32 %call8, 0
  br i1 %tobool, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %for.body
  br label %Error

if.end.10:                                        ; preds = %for.body
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %22, i32 0) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  br label %Error

if.end.14:                                        ; preds = %if.end.10
  br label %for.inc

for.inc:                                          ; preds = %if.end.14
  %23 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %23, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.15

for.cond.15:                                      ; preds = %for.inc.29, %for.end
  %24 = load i32, i32* %i, align 4, !tbaa !8
  %25 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp16 = icmp ult i32 %24, %25
  br i1 %cmp16, label %for.body.17, label %for.end.31

for.body.17:                                      ; preds = %for.cond.15
  %26 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell18 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %26, i32 0, i32 8
  %27 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell18, align 8, !tbaa !99
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call19 = call i32 %27(%struct._cms_io_handler* %28) #7
  store i32 %call19, i32* %Before, align 4, !tbaa !8
  %29 = load i32, i32* %Before, align 4, !tbaa !8
  %30 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %sub = sub i32 %29, %30
  %31 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %31 to i64
  %32 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %32, i64 %idxprom
  store i32 %sub, i32* %arrayidx, align 4, !tbaa !8
  %33 = load i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)** %ElementFn.addr, align 8, !tbaa !1
  %34 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %35 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %36 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %37 = load i32, i32* %i, align 4, !tbaa !8
  %38 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call20 = call i32 %33(%struct._cms_typehandler_struct* %34, %struct._cms_io_handler* %35, i8* %36, i32 %37, i32 %38) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %for.body.17
  br label %Error

if.end.23:                                        ; preds = %for.body.17
  %39 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell24 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %39, i32 0, i32 8
  %40 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell24, align 8, !tbaa !99
  %41 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call25 = call i32 %40(%struct._cms_io_handler* %41) #7
  %42 = load i32, i32* %Before, align 4, !tbaa !8
  %sub26 = sub i32 %call25, %42
  %43 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom27 = zext i32 %43 to i64
  %44 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i32, i32* %44, i64 %idxprom27
  store i32 %sub26, i32* %arrayidx28, align 4, !tbaa !8
  br label %for.inc.29

for.inc.29:                                       ; preds = %if.end.23
  %45 = load i32, i32* %i, align 4, !tbaa !8
  %inc30 = add i32 %45, 1
  store i32 %inc30, i32* %i, align 4, !tbaa !8
  br label %for.cond.15

for.end.31:                                       ; preds = %for.cond.15
  %46 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell32 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %46, i32 0, i32 8
  %47 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell32, align 8, !tbaa !99
  %48 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call33 = call i32 %47(%struct._cms_io_handler* %48) #7
  store i32 %call33, i32* %CurrentPos, align 4, !tbaa !8
  %49 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %49, i32 0, i32 6
  %50 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %51 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %52 = load i32, i32* %DirectoryPos, align 4, !tbaa !8
  %call34 = call i32 %50(%struct._cms_io_handler* %51, i32 %52) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %for.end.31
  br label %Error

if.end.37:                                        ; preds = %for.end.31
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc.53, %if.end.37
  %53 = load i32, i32* %i, align 4, !tbaa !8
  %54 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp39 = icmp ult i32 %53, %54
  br i1 %cmp39, label %for.body.40, label %for.end.55

for.body.40:                                      ; preds = %for.cond.38
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %56 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom41 = zext i32 %56 to i64
  %57 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds i32, i32* %57, i64 %idxprom41
  %58 = load i32, i32* %arrayidx42, align 4, !tbaa !8
  %call43 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %55, i32 %58) #7
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %for.body.40
  br label %Error

if.end.46:                                        ; preds = %for.body.40
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %60 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom47 = zext i32 %60 to i64
  %61 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds i32, i32* %61, i64 %idxprom47
  %62 = load i32, i32* %arrayidx48, align 4, !tbaa !8
  %call49 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %59, i32 %62) #7
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.end.46
  br label %Error

if.end.52:                                        ; preds = %if.end.46
  br label %for.inc.53

for.inc.53:                                       ; preds = %if.end.52
  %63 = load i32, i32* %i, align 4, !tbaa !8
  %inc54 = add i32 %63, 1
  store i32 %inc54, i32* %i, align 4, !tbaa !8
  br label %for.cond.38

for.end.55:                                       ; preds = %for.cond.38
  %64 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek56 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %64, i32 0, i32 6
  %65 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek56, align 8, !tbaa !101
  %66 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %67 = load i32, i32* %CurrentPos, align 4, !tbaa !8
  %call57 = call i32 %65(%struct._cms_io_handler* %66, i32 %67) #7
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %for.end.55
  br label %Error

if.end.60:                                        ; preds = %for.end.55
  %68 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp61 = icmp ne i32* %68, null
  br i1 %cmp61, label %if.then.62, label %if.end.64

if.then.62:                                       ; preds = %if.end.60
  %69 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID63 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %69, i32 0, i32 1
  %70 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID63, align 8, !tbaa !129
  %71 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %72 = bitcast i32* %71 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %70, i8* %72) #7
  br label %if.end.64

if.end.64:                                        ; preds = %if.then.62, %if.end.60
  %73 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp65 = icmp ne i32* %73, null
  br i1 %cmp65, label %if.then.66, label %if.end.68

if.then.66:                                       ; preds = %if.end.64
  %74 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID67 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %74, i32 0, i32 1
  %75 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID67, align 8, !tbaa !129
  %76 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %77 = bitcast i32* %76 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %75, i8* %77) #7
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.66, %if.end.64
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

Error:                                            ; preds = %if.then.59, %if.then.51, %if.then.45, %if.then.36, %if.then.22, %if.then.13, %if.then.9, %if.then.4, %if.then
  %78 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %cmp69 = icmp ne i32* %78, null
  br i1 %cmp69, label %if.then.70, label %if.end.72

if.then.70:                                       ; preds = %Error
  %79 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID71 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %79, i32 0, i32 1
  %80 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID71, align 8, !tbaa !129
  %81 = load i32*, i32** %ElementOffsets, align 8, !tbaa !1
  %82 = bitcast i32* %81 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %80, i8* %82) #7
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.70, %Error
  %83 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %cmp73 = icmp ne i32* %83, null
  br i1 %cmp73, label %if.then.74, label %if.end.76

if.then.74:                                       ; preds = %if.end.72
  %84 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %ContextID75 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %84, i32 0, i32 1
  %85 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID75, align 8, !tbaa !129
  %86 = load i32*, i32** %ElementSizes, align 8, !tbaa !1
  %87 = bitcast i32* %86 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %85, i8* %87) #7
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.74, %if.end.72
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.76, %if.end.68
  %88 = bitcast i32** %ElementSizes to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #2
  %89 = bitcast i32** %ElementOffsets to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #2
  %90 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #2
  %91 = bitcast i32* %CurrentPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #2
  %92 = bitcast i32* %DirectoryPos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #2
  %93 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #2
  %94 = load i32, i32* %retval
  ret i32 %94
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteMPECurve(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Cargo, i32 %n, i32 %SizeOfTag) #0 {
entry:
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Cargo.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %SizeOfTag.addr = alloca i32, align 4
  %Curves = alloca %struct._cmsStageToneCurvesData*, align 8
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct._cmsStageToneCurvesData** %Curves to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cmsStageToneCurvesData*
  store %struct._cmsStageToneCurvesData* %2, %struct._cmsStageToneCurvesData** %Curves, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom = zext i32 %4 to i64
  %5 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %Curves, align 8, !tbaa !1
  %TheCurves = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %5, i32 0, i32 1
  %6 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %TheCurves, align 8, !tbaa !66
  %arrayidx = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, i64 %idxprom
  %7 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %arrayidx, align 8, !tbaa !1
  %call = call i32 @WriteSegmentedCurve(%struct._cms_io_handler* %3, %struct._cms_curve_struct* %7) #7
  %8 = bitcast %struct._cmsStageToneCurvesData** %Curves to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteSegmentedCurve(%struct._cms_io_handler* %io, %struct._cms_curve_struct* %g) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %g.addr = alloca %struct._cms_curve_struct*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %Segments = alloca %struct.cmsCurveSegment*, align 8
  %nSegments = alloca i32, align 4
  %ActualSeg = alloca %struct.cmsCurveSegment*, align 8
  %Type57 = alloca i32, align 4
  %ParamsByType = alloca [3 x i32], align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cms_curve_struct* %g, %struct._cms_curve_struct** %g.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct.cmsCurveSegment** %Segments to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %g.addr, align 8, !tbaa !1
  %Segments1 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %3, i32 0, i32 2
  %4 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments1, align 8, !tbaa !48
  store %struct.cmsCurveSegment* %4, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %5 = bitcast i32* %nSegments to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %g.addr, align 8, !tbaa !1
  %nSegments2 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %6, i32 0, i32 1
  %7 = load i32, i32* %nSegments2, align 4, !tbaa !47
  store i32 %7, i32* %nSegments, align 4, !tbaa !8
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %8, i32 1668641382) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call3 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %9, i32 0) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  br label %Error

if.end.6:                                         ; preds = %if.end
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load i32, i32* %nSegments, align 4, !tbaa !8
  %conv = trunc i32 %11 to i16
  %call7 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %10, i16 zeroext %conv) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  br label %Error

if.end.10:                                        ; preds = %if.end.6
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %12, i16 zeroext 0) #7
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  br label %Error

if.end.14:                                        ; preds = %if.end.10
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.14
  %13 = load i32, i32* %i, align 4, !tbaa !8
  %14 = load i32, i32* %nSegments, align 4, !tbaa !8
  %sub = sub i32 %14, 1
  %cmp = icmp ult i32 %13, %sub
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom = zext i32 %16 to i64
  %17 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %17, i64 %idxprom
  %x1 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx, i32 0, i32 1
  %18 = load float, float* %x1, align 4, !tbaa !134
  %call16 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %15, float %18) #7
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %for.body
  br label %Error

if.end.19:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.19
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %19, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond.20

for.cond.20:                                      ; preds = %for.inc.104, %for.end
  %20 = load i32, i32* %i, align 4, !tbaa !8
  %21 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %g.addr, align 8, !tbaa !1
  %nSegments21 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %21, i32 0, i32 1
  %22 = load i32, i32* %nSegments21, align 4, !tbaa !47
  %cmp22 = icmp ult i32 %20, %22
  br i1 %cmp22, label %for.body.24, label %for.end.106

for.body.24:                                      ; preds = %for.cond.20
  %23 = bitcast %struct.cmsCurveSegment** %ActualSeg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #2
  %24 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !1
  %25 = load i32, i32* %i, align 4, !tbaa !8
  %idx.ext = zext i32 %25 to i64
  %add.ptr = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %24, i64 %idx.ext
  store %struct.cmsCurveSegment* %add.ptr, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %26 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %Type = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %26, i32 0, i32 2
  %27 = load i32, i32* %Type, align 4, !tbaa !49
  %cmp25 = icmp eq i32 %27, 0
  br i1 %cmp25, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %for.body.24
  %28 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call28 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %28, i32 1935764838) #7
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.then.27
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.101

if.end.31:                                        ; preds = %if.then.27
  %29 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call32 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %29, i32 0) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.31
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.101

if.end.35:                                        ; preds = %if.end.31
  %30 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %31 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %nGridPoints = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %31, i32 0, i32 4
  %32 = load i32, i32* %nGridPoints, align 4, !tbaa !135
  %call36 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %30, i32 %32) #7
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %if.end.35
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.101

if.end.39:                                        ; preds = %if.end.35
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.54, %if.end.39
  %33 = load i32, i32* %j, align 4, !tbaa !8
  %34 = load i32, i32* %i, align 4, !tbaa !8
  %idxprom41 = zext i32 %34 to i64
  %35 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %g.addr, align 8, !tbaa !1
  %Segments42 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %35, i32 0, i32 2
  %36 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments42, align 8, !tbaa !48
  %arrayidx43 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %36, i64 %idxprom41
  %nGridPoints44 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx43, i32 0, i32 4
  %37 = load i32, i32* %nGridPoints44, align 4, !tbaa !135
  %cmp45 = icmp ult i32 %33, %37
  br i1 %cmp45, label %for.body.47, label %for.end.56

for.body.47:                                      ; preds = %for.cond.40
  %38 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %39 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom48 = zext i32 %39 to i64
  %40 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %SampledPoints = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %40, i32 0, i32 5
  %41 = load float*, float** %SampledPoints, align 8, !tbaa !136
  %arrayidx49 = getelementptr inbounds float, float* %41, i64 %idxprom48
  %42 = load float, float* %arrayidx49, align 4, !tbaa !121
  %call50 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %38, float %42) #7
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %for.body.47
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.101

if.end.53:                                        ; preds = %for.body.47
  br label %for.inc.54

for.inc.54:                                       ; preds = %if.end.53
  %43 = load i32, i32* %j, align 4, !tbaa !8
  %inc55 = add i32 %43, 1
  store i32 %inc55, i32* %j, align 4, !tbaa !8
  br label %for.cond.40

for.end.56:                                       ; preds = %for.cond.40
  br label %if.end.100

if.else:                                          ; preds = %for.body.24
  %44 = bitcast i32* %Type57 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %45 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.lifetime.start(i64 12, i8* %45) #2
  %46 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* bitcast ([3 x i32]* @WriteSegmentedCurve.ParamsByType to i8*), i64 12, i32 4, i1 false)
  %47 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call58 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %47, i32 1885434470) #7
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %if.else
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %if.else
  %48 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call62 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %48, i32 0) #7
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.end.61
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.end.61
  %49 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %Type66 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %49, i32 0, i32 2
  %50 = load i32, i32* %Type66, align 4, !tbaa !49
  %sub67 = sub nsw i32 %50, 6
  store i32 %sub67, i32* %Type57, align 4, !tbaa !8
  %51 = load i32, i32* %Type57, align 4, !tbaa !8
  %cmp68 = icmp sgt i32 %51, 2
  br i1 %cmp68, label %if.then.72, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.65
  %52 = load i32, i32* %Type57, align 4, !tbaa !8
  %cmp70 = icmp slt i32 %52, 0
  br i1 %cmp70, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %lor.lhs.false, %if.end.65
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.73:                                        ; preds = %lor.lhs.false
  %53 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %54 = load i32, i32* %Type57, align 4, !tbaa !8
  %conv74 = trunc i32 %54 to i16
  %call75 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %53, i16 zeroext %conv74) #7
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.end.73
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.end.73
  %55 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call79 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %55, i16 zeroext 0) #7
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.end.82, label %if.then.81

if.then.81:                                       ; preds = %if.end.78
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.end.78
  store i32 0, i32* %j, align 4, !tbaa !8
  br label %for.cond.83

for.cond.83:                                      ; preds = %for.inc.96, %if.end.82
  %56 = load i32, i32* %j, align 4, !tbaa !8
  %57 = load i32, i32* %Type57, align 4, !tbaa !8
  %idxprom84 = sext i32 %57 to i64
  %arrayidx85 = getelementptr inbounds [3 x i32], [3 x i32]* %ParamsByType, i32 0, i64 %idxprom84
  %58 = load i32, i32* %arrayidx85, align 4, !tbaa !8
  %cmp86 = icmp ult i32 %56, %58
  br i1 %cmp86, label %for.body.88, label %for.end.98

for.body.88:                                      ; preds = %for.cond.83
  %59 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %60 = load i32, i32* %j, align 4, !tbaa !8
  %idxprom89 = zext i32 %60 to i64
  %61 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %ActualSeg, align 8, !tbaa !1
  %Params = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %61, i32 0, i32 3
  %arrayidx90 = getelementptr inbounds [10 x double], [10 x double]* %Params, i32 0, i64 %idxprom89
  %62 = load double, double* %arrayidx90, align 8, !tbaa !44
  %conv91 = fptrunc double %62 to float
  %call92 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %59, float %conv91) #7
  %tobool93 = icmp ne i32 %call92, 0
  br i1 %tobool93, label %if.end.95, label %if.then.94

if.then.94:                                       ; preds = %for.body.88
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.95:                                        ; preds = %for.body.88
  br label %for.inc.96

for.inc.96:                                       ; preds = %if.end.95
  %63 = load i32, i32* %j, align 4, !tbaa !8
  %inc97 = add i32 %63, 1
  store i32 %inc97, i32* %j, align 4, !tbaa !8
  br label %for.cond.83

for.end.98:                                       ; preds = %for.cond.83
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.94, %if.then.81, %if.then.77, %if.then.72, %if.then.64, %if.then.60, %for.end.98
  %64 = bitcast [3 x i32]* %ParamsByType to i8*
  call void @llvm.lifetime.end(i64 12, i8* %64) #2
  %65 = bitcast i32* %Type57 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.101 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.100

if.end.100:                                       ; preds = %cleanup.cont, %for.end.56
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.101

cleanup.101:                                      ; preds = %if.then.52, %if.then.38, %if.then.34, %if.then.30, %if.end.100, %cleanup
  %66 = bitcast %struct.cmsCurveSegment** %ActualSeg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %cleanup.dest.102 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.102, label %cleanup.107 [
    i32 0, label %cleanup.cont.103
    i32 2, label %Error
  ]

cleanup.cont.103:                                 ; preds = %cleanup.101
  br label %for.inc.104

for.inc.104:                                      ; preds = %cleanup.cont.103
  %67 = load i32, i32* %i, align 4, !tbaa !8
  %inc105 = add i32 %67, 1
  store i32 %inc105, i32* %i, align 4, !tbaa !8
  br label %for.cond.20

for.end.106:                                      ; preds = %for.cond.20
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

Error:                                            ; preds = %cleanup.101, %if.then.18, %if.then.13, %if.then.9, %if.then.5, %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

cleanup.107:                                      ; preds = %Error, %for.end.106, %cleanup.101
  %68 = bitcast i32* %nSegments to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast %struct.cmsCurveSegment** %Segments to i8*
  call void @llvm.lifetime.end(i64 8, i8* %69) #2
  %70 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = load i32, i32* %retval
  ret i32 %72
}

declare i32 @_cmsWriteFloat32Number(%struct._cms_io_handler*, float) #1

declare %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct*) #1

declare %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct*, i32*, i32, i32, float*) #1

declare i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct*) #1

; Function Attrs: nounwind uwtable
define internal i32 @ReadSeqID(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Cargo, i32 %n, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Cargo.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %SizeOfTag.addr = alloca i32, align 4
  %OutSeq = alloca %struct.cmsSEQ*, align 8
  %seq = alloca %struct.cmsPSEQDESC*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsSEQ*
  store %struct.cmsSEQ* %2, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %3 = bitcast %struct.cmsPSEQDESC** %seq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom = zext i32 %4 to i64
  %5 = load %struct.cmsSEQ*, %struct.cmsSEQ** %OutSeq, align 8, !tbaa !1
  %seq1 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %5, i32 0, i32 2
  %6 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq1, align 8, !tbaa !83
  %arrayidx = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %6, i64 %idxprom
  store %struct.cmsPSEQDESC* %arrayidx, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !1
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Read = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %7, i32 0, i32 5
  %8 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %Read, align 8, !tbaa !41
  %9 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %10 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !1
  %ProfileID = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %10, i32 0, i32 4
  %ID8 = bitcast %union.cmsProfileID* %ProfileID to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %ID8, i32 0, i32 0
  %call = call i32 %8(%struct._cms_io_handler* %9, i8* %arraydecay, i32 16, i32 1) #7
  %cmp = icmp ne i32 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !1
  %Description = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %13, i32 0, i32 7
  %14 = load i32, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %call2 = call i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %11, %struct._cms_io_handler* %12, %struct._cms_MLU_struct** %Description, i32 %14) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %15 = bitcast %struct.cmsPSEQDESC** %seq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = bitcast %struct.cmsSEQ** %OutSeq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #2
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteSeqID(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, i8* %Cargo, i32 %n, i32 %SizeOfTag) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %Cargo.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %SizeOfTag.addr = alloca i32, align 4
  %Seq = alloca %struct.cmsSEQ*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store i8* %Cargo, i8** %Cargo.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !8
  store i32 %SizeOfTag, i32* %SizeOfTag.addr, align 4, !tbaa !8
  %0 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Cargo.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.cmsSEQ*
  store %struct.cmsSEQ* %2, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Write = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %3, i32 0, i32 9
  %4 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %Write, align 8, !tbaa !43
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom = zext i32 %6 to i64
  %7 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %seq = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %7, i32 0, i32 2
  %8 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq, align 8, !tbaa !83
  %arrayidx = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %8, i64 %idxprom
  %ProfileID = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %arrayidx, i32 0, i32 4
  %ID8 = bitcast %union.cmsProfileID* %ProfileID to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %ID8, i32 0, i32 0
  %call = call i32 %4(%struct._cms_io_handler* %5, i32 16, i8* %arraydecay) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load i32, i32* %n.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %11 to i64
  %12 = load %struct.cmsSEQ*, %struct.cmsSEQ** %Seq, align 8, !tbaa !1
  %seq2 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %12, i32 0, i32 2
  %13 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %seq2, align 8, !tbaa !83
  %arrayidx3 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %13, i64 %idxprom1
  %Description = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %arrayidx3, i32 0, i32 7
  %14 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %Description, align 8, !tbaa !137
  %call4 = call i32 @SaveDescription(%struct._cms_typehandler_struct* %9, %struct._cms_io_handler* %10, %struct._cms_MLU_struct* %14) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then
  %15 = bitcast %struct.cmsSEQ** %Seq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = load i32, i32* %retval
  ret i32 %16
}

declare i8* @cmsDictAlloc(%struct._cmsContext_struct*) #1

; Function Attrs: nounwind uwtable
define internal i32 @AllocArray(%struct._cmsContext_struct* %ContextID, %struct._cmsDICarray* %a, i32 %Count, i32 %Length) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %a.addr = alloca %struct._cmsDICarray*, align 8
  %Count.addr = alloca i32, align 4
  %Length.addr = alloca i32, align 4
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cmsDICarray* %a, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  store i32 %Length, i32* %Length.addr, align 4, !tbaa !8
  %0 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %1 = bitcast %struct._cmsDICarray* %0 to i8*
  %call = call i8* @memset(i8* %1, i32 0, i64 96) #8
  %2 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %3 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %3, i32 0, i32 0
  %4 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call1 = call i32 @AllocElem(%struct._cmsContext_struct* %2, %struct._cmsDICelem* %Name, i32 %4) #7
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %Error

if.end:                                           ; preds = %entry
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %6 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %6, i32 0, i32 1
  %7 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call2 = call i32 @AllocElem(%struct._cmsContext_struct* %5, %struct._cmsDICelem* %Value, i32 %7) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  br label %Error

if.end.5:                                         ; preds = %if.end
  %8 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp = icmp ugt i32 %8, 16
  br i1 %cmp, label %if.then.6, label %if.end.11

if.then.6:                                        ; preds = %if.end.5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %10 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %10, i32 0, i32 2
  %11 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call7 = call i32 @AllocElem(%struct._cmsContext_struct* %9, %struct._cmsDICelem* %DisplayName, i32 %11) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.then.6
  br label %Error

if.end.10:                                        ; preds = %if.then.6
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end.5
  %12 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp12 = icmp ugt i32 %12, 24
  br i1 %cmp12, label %if.then.13, label %if.end.18

if.then.13:                                       ; preds = %if.end.11
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %14 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %14, i32 0, i32 3
  %15 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call14 = call i32 @AllocElem(%struct._cmsContext_struct* %13, %struct._cmsDICelem* %DisplayValue, i32 %15) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.then.13
  br label %Error

if.end.17:                                        ; preds = %if.then.13
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.end.11
  store i32 1, i32* %retval
  br label %return

Error:                                            ; preds = %if.then.16, %if.then.9, %if.then.4, %if.then
  %16 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  call void @FreeArray(%struct._cmsDICarray* %16) #7
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %Error, %if.end.18
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadOffsetArray(%struct._cms_io_handler* %io, %struct._cmsDICarray* %a, i32 %Count, i32 %Length, i32 %BaseOffset) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %a.addr = alloca %struct._cmsDICarray*, align 8
  %Count.addr = alloca i32, align 4
  %Length.addr = alloca i32, align 4
  %BaseOffset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICarray* %a, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  store i32 %Length, i32* %Length.addr, align 4, !tbaa !8
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !8
  %2 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp = icmp ult i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %4, i32 0, i32 0
  %5 = load i32, i32* %i, align 4, !tbaa !8
  %6 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %call = call i32 @ReadOneElem(%struct._cms_io_handler* %3, %struct._cmsDICelem* %Name, i32 %5, i32 %6) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %7 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %8 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %8, i32 0, i32 1
  %9 = load i32, i32* %i, align 4, !tbaa !8
  %10 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %call1 = call i32 @ReadOneElem(%struct._cms_io_handler* %7, %struct._cmsDICelem* %Value, i32 %9, i32 %10) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %11 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp5 = icmp ugt i32 %11, 16
  br i1 %cmp5, label %if.then.6, label %if.end.11

if.then.6:                                        ; preds = %if.end.4
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %13, i32 0, i32 2
  %14 = load i32, i32* %i, align 4, !tbaa !8
  %15 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %call7 = call i32 @ReadOneElem(%struct._cms_io_handler* %12, %struct._cmsDICelem* %DisplayName, i32 %14, i32 %15) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.then.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.then.6
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end.4
  %16 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp12 = icmp ugt i32 %16, 24
  br i1 %cmp12, label %if.then.13, label %if.end.18

if.then.13:                                       ; preds = %if.end.11
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %18, i32 0, i32 3
  %19 = load i32, i32* %i, align 4, !tbaa !8
  %20 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %call14 = call i32 @ReadOneElem(%struct._cms_io_handler* %17, %struct._cmsDICelem* %DisplayValue, i32 %19, i32 %20) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.then.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.then.13
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.end.11
  br label %for.inc

for.inc:                                          ; preds = %if.end.18
  %21 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %21, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.16, %if.then.9, %if.then.3, %if.then
  %22 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %22) #2
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadOneWChar(%struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i, i32** %wcstr) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  %wcstr.addr = alloca i32**, align 8
  %nChars = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  store i32** %wcstr, i32*** %wcstr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %nChars to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %1 to i64
  %2 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %2, i32 0, i32 1
  %3 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  store i32* null, i32** %5, align 8, !tbaa !1
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %6, i32 0, i32 6
  %7 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %9 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %9 to i64
  %10 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets2 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %10, i32 0, i32 1
  %11 = load i32*, i32** %Offsets2, align 8, !tbaa !104
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom1
  %12 = load i32, i32* %arrayidx3, align 4, !tbaa !8
  %call = call i32 %7(%struct._cms_io_handler* %8, i32 %12) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %13 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom6 = zext i32 %13 to i64
  %14 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %14, i32 0, i32 2
  %15 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx7 = getelementptr inbounds i32, i32* %15, i64 %idxprom6
  %16 = load i32, i32* %arrayidx7, align 4, !tbaa !8
  %conv = zext i32 %16 to i64
  %div = udiv i64 %conv, 2
  %conv8 = trunc i64 %div to i32
  store i32 %conv8, i32* %nChars, align 4, !tbaa !8
  %17 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %17, i32 0, i32 0
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !102
  %19 = load i32, i32* %nChars, align 4, !tbaa !8
  %add = add i32 %19, 1
  %conv9 = zext i32 %add to i64
  %mul = mul i64 %conv9, 4
  %conv10 = trunc i64 %mul to i32
  %call11 = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %18, i32 %conv10) #7
  %20 = bitcast i8* %call11 to i32*
  %21 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  store i32* %20, i32** %21, align 8, !tbaa !1
  %22 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  %23 = load i32*, i32** %22, align 8, !tbaa !1
  %cmp12 = icmp eq i32* %23, null
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.5
  %24 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %25 = load i32, i32* %nChars, align 4, !tbaa !8
  %26 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  %27 = load i32*, i32** %26, align 8, !tbaa !1
  %call16 = call i32 @_cmsReadWCharArray(%struct._cms_io_handler* %24, i32 %25, i32* %27) #7
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.20, label %if.then.18

if.then.18:                                       ; preds = %if.end.15
  %28 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %ContextID19 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %28, i32 0, i32 0
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID19, align 8, !tbaa !102
  %30 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  %31 = load i32*, i32** %30, align 8, !tbaa !1
  %32 = bitcast i32* %31 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %29, i8* %32) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.15
  %33 = load i32, i32* %nChars, align 4, !tbaa !8
  %idxprom21 = zext i32 %33 to i64
  %34 = load i32**, i32*** %wcstr.addr, align 8, !tbaa !1
  %35 = load i32*, i32** %34, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds i32, i32* %35, i64 %idxprom21
  store i32 0, i32* %arrayidx22, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.20, %if.then.18, %if.then.14, %if.then.4, %if.then
  %36 = bitcast i32* %nChars to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #2
  %37 = load i32, i32* %retval
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadOneMLUC(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i, %struct._cms_MLU_struct** %mlu) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  %mlu.addr = alloca %struct._cms_MLU_struct**, align 8
  %nItems = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  store %struct._cms_MLU_struct** %mlu, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %0 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %nItems, align 4, !tbaa !8
  %1 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %1 to i64
  %2 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %2, i32 0, i32 1
  %3 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %5 to i64
  %6 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %6, i32 0, i32 2
  %7 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1
  %8 = load i32, i32* %arrayidx2, align 4, !tbaa !8
  %cmp3 = icmp eq i32 %8, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* null, %struct._cms_MLU_struct** %9, align 8, !tbaa !1
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Seek = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %10, i32 0, i32 6
  %11 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %Seek, align 8, !tbaa !101
  %12 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %13 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom4 = zext i32 %13 to i64
  %14 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets5 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %14, i32 0, i32 1
  %15 = load i32*, i32** %Offsets5, align 8, !tbaa !104
  %arrayidx6 = getelementptr inbounds i32, i32* %15, i64 %idxprom4
  %16 = load i32, i32* %arrayidx6, align 4, !tbaa !8
  %call = call i32 %11(%struct._cms_io_handler* %12, i32 %16) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  %17 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %19 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom9 = zext i32 %19 to i64
  %20 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes10 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %20, i32 0, i32 2
  %21 = load i32*, i32** %Sizes10, align 8, !tbaa !105
  %arrayidx11 = getelementptr inbounds i32, i32* %21, i64 %idxprom9
  %22 = load i32, i32* %arrayidx11, align 4, !tbaa !8
  %call12 = call i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %17, %struct._cms_io_handler* %18, i32* %nItems, i32 %22) #7
  %23 = bitcast i8* %call12 to %struct._cms_MLU_struct*
  %24 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  store %struct._cms_MLU_struct* %23, %struct._cms_MLU_struct** %24, align 8, !tbaa !1
  %25 = load %struct._cms_MLU_struct**, %struct._cms_MLU_struct*** %mlu.addr, align 8, !tbaa !1
  %26 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %25, align 8, !tbaa !1
  %cmp13 = icmp ne %struct._cms_MLU_struct* %26, null
  %conv = zext i1 %cmp13 to i32
  store i32 %conv, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then
  %27 = bitcast i32* %nItems to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

declare i32 @cmsDictAddEntry(i8*, i32*, i32*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*) #1

; Function Attrs: nounwind uwtable
define internal void @FreeArray(%struct._cmsDICarray* %a) #0 {
entry:
  %a.addr = alloca %struct._cmsDICarray*, align 8
  store %struct._cmsDICarray* %a, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %0 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %0, i32 0, i32 0
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %Name, i32 0, i32 1
  %1 = load i32*, i32** %Offsets, align 8, !tbaa !138
  %cmp = icmp ne i32* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Name1 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %2, i32 0, i32 0
  call void @FreeElem(%struct._cmsDICelem* %Name1) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %3, i32 0, i32 1
  %Offsets2 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %Value, i32 0, i32 1
  %4 = load i32*, i32** %Offsets2, align 8, !tbaa !140
  %cmp3 = icmp ne i32* %4, null
  br i1 %cmp3, label %if.then.4, label %if.end.6

if.then.4:                                        ; preds = %if.end
  %5 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Value5 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i32 0, i32 1
  call void @FreeElem(%struct._cmsDICelem* %Value5) #7
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.4, %if.end
  %6 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %6, i32 0, i32 2
  %Offsets7 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %DisplayName, i32 0, i32 1
  %7 = load i32*, i32** %Offsets7, align 8, !tbaa !141
  %cmp8 = icmp ne i32* %7, null
  br i1 %cmp8, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %if.end.6
  %8 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayName10 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %8, i32 0, i32 2
  call void @FreeElem(%struct._cmsDICelem* %DisplayName10) #7
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.9, %if.end.6
  %9 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %9, i32 0, i32 3
  %Offsets12 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %DisplayValue, i32 0, i32 1
  %10 = load i32*, i32** %Offsets12, align 8, !tbaa !142
  %cmp13 = icmp ne i32* %10, null
  br i1 %cmp13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.end.11
  %11 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayValue15 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i32 0, i32 3
  call void @FreeElem(%struct._cmsDICelem* %DisplayValue15) #7
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %if.end.11
  ret void
}

declare void @cmsDictFree(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @AllocElem(%struct._cmsContext_struct* %ContextID, %struct._cmsDICelem* %e, i32 %Count) #0 {
entry:
  %retval = alloca i32, align 4
  %ContextID.addr = alloca %struct._cmsContext_struct*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %Count.addr = alloca i32, align 4
  store %struct._cmsContext_struct* %ContextID, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  %0 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %1 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call = call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %1, i32 4) #7
  %2 = bitcast i8* %call to i32*
  %3 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %3, i32 0, i32 1
  store i32* %2, i32** %Offsets, align 8, !tbaa !104
  %4 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets1 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %4, i32 0, i32 1
  %5 = load i32*, i32** %Offsets1, align 8, !tbaa !104
  %cmp = icmp eq i32* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %7 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %call2 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %6, i32 %7, i32 4) #7
  %8 = bitcast i8* %call2 to i32*
  %9 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %9, i32 0, i32 2
  store i32* %8, i32** %Sizes, align 8, !tbaa !105
  %10 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes3 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %10, i32 0, i32 2
  %11 = load i32*, i32** %Sizes3, align 8, !tbaa !105
  %cmp4 = icmp eq i32* %11, null
  br i1 %cmp4, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %if.end
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %13 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets6 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %13, i32 0, i32 1
  %14 = load i32*, i32** %Offsets6, align 8, !tbaa !104
  %15 = bitcast i32* %14 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %12, i8* %15) #7
  store i32 0, i32* %retval
  br label %return

if.end.7:                                         ; preds = %if.end
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID.addr, align 8, !tbaa !1
  %17 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %ContextID8 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %17, i32 0, i32 0
  store %struct._cmsContext_struct* %16, %struct._cmsContext_struct** %ContextID8, align 8, !tbaa !102
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.5, %if.then
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i32 @ReadOneElem(%struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i, i32 %BaseOffset) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  %BaseOffset.addr = alloca i32, align 4
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  %0 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %1 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %1 to i64
  %2 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %2, i32 0, i32 1
  %3 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %call = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %0, i32* %arrayidx) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %5 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %5 to i64
  %6 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %6, i32 0, i32 2
  %7 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1
  %call3 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %4, i32* %arrayidx2) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %8 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom7 = zext i32 %8 to i64
  %9 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets8 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %9, i32 0, i32 1
  %10 = load i32*, i32** %Offsets8, align 8, !tbaa !104
  %arrayidx9 = getelementptr inbounds i32, i32* %10, i64 %idxprom7
  %11 = load i32, i32* %arrayidx9, align 4, !tbaa !8
  %cmp = icmp ugt i32 %11, 0
  br i1 %cmp, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %if.end.6
  %12 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %13 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom11 = zext i32 %13 to i64
  %14 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets12 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %14, i32 0, i32 1
  %15 = load i32*, i32** %Offsets12, align 8, !tbaa !104
  %arrayidx13 = getelementptr inbounds i32, i32* %15, i64 %idxprom11
  %16 = load i32, i32* %arrayidx13, align 4, !tbaa !8
  %add = add i32 %16, %12
  store i32 %add, i32* %arrayidx13, align 4, !tbaa !8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.10, %if.end.6
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then.5, %if.then
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal void @FreeElem(%struct._cmsDICelem* %e) #0 {
entry:
  %e.addr = alloca %struct._cmsDICelem*, align 8
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %0 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %0, i32 0, i32 1
  %1 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %cmp = icmp ne i32* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %ContextID = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %2, i32 0, i32 0
  %3 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID, align 8, !tbaa !102
  %4 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets1 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %4, i32 0, i32 1
  %5 = load i32*, i32** %Offsets1, align 8, !tbaa !104
  %6 = bitcast i32* %5 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %3, i8* %6) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %7, i32 0, i32 2
  %8 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %cmp2 = icmp ne i32* %8, null
  br i1 %cmp2, label %if.then.3, label %if.end.6

if.then.3:                                        ; preds = %if.end
  %9 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %ContextID4 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %9, i32 0, i32 0
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %ContextID4, align 8, !tbaa !102
  %11 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes5 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %11, i32 0, i32 2
  %12 = load i32*, i32** %Sizes5, align 8, !tbaa !105
  %13 = bitcast i32* %12 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %10, i8* %13) #7
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.3, %if.end
  %14 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes7 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %14, i32 0, i32 2
  store i32* null, i32** %Sizes7, align 8, !tbaa !105
  %15 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets8 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %15, i32 0, i32 1
  store i32* null, i32** %Offsets8, align 8, !tbaa !104
  ret void
}

declare %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8*) #1

declare %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct*) #1

; Function Attrs: nounwind uwtable
define internal i32 @WriteOffsetArray(%struct._cms_io_handler* %io, %struct._cmsDICarray* %a, i32 %Count, i32 %Length) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %a.addr = alloca %struct._cmsDICarray*, align 8
  %Count.addr = alloca i32, align 4
  %Length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICarray* %a, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  store i32 %Count, i32* %Count.addr, align 4, !tbaa !8
  store i32 %Length, i32* %Length.addr, align 4, !tbaa !8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !8
  %2 = load i32, i32* %Count.addr, align 4, !tbaa !8
  %cmp = icmp ult i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %4 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Name = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %4, i32 0, i32 0
  %5 = load i32, i32* %i, align 4, !tbaa !8
  %call = call i32 @WriteOneElem(%struct._cms_io_handler* %3, %struct._cmsDICelem* %Name, i32 %5) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %6 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %7 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %Value = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %7, i32 0, i32 1
  %8 = load i32, i32* %i, align 4, !tbaa !8
  %call1 = call i32 @WriteOneElem(%struct._cms_io_handler* %6, %struct._cmsDICelem* %Value, i32 %8) #7
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %9 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp5 = icmp ugt i32 %9, 16
  br i1 %cmp5, label %if.then.6, label %if.end.11

if.then.6:                                        ; preds = %if.end.4
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %11 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayName = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i32 0, i32 2
  %12 = load i32, i32* %i, align 4, !tbaa !8
  %call7 = call i32 @WriteOneElem(%struct._cms_io_handler* %10, %struct._cmsDICelem* %DisplayName, i32 %12) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.then.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.then.6
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end.4
  %13 = load i32, i32* %Length.addr, align 4, !tbaa !8
  %cmp12 = icmp ugt i32 %13, 24
  br i1 %cmp12, label %if.then.13, label %if.end.18

if.then.13:                                       ; preds = %if.end.11
  %14 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %15 = load %struct._cmsDICarray*, %struct._cmsDICarray** %a.addr, align 8, !tbaa !1
  %DisplayValue = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %15, i32 0, i32 3
  %16 = load i32, i32* %i, align 4, !tbaa !8
  %call14 = call i32 @WriteOneElem(%struct._cms_io_handler* %14, %struct._cmsDICelem* %DisplayValue, i32 %16) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.then.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.then.13
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.end.11
  br label %for.inc

for.inc:                                          ; preds = %if.end.18
  %17 = load i32, i32* %i, align 4, !tbaa !8
  %inc = add i32 %17, 1
  store i32 %inc, i32* %i, align 4, !tbaa !8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.16, %if.then.9, %if.then.3, %if.then
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %18) #2
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteOneWChar(%struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i, i32* %wcstr, i32 %BaseOffset) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  %wcstr.addr = alloca i32*, align 8
  %BaseOffset.addr = alloca i32, align 4
  %Before = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  store i32* %wcstr, i32** %wcstr.addr, align 8, !tbaa !1
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  %0 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i32 0, i32 8
  %2 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %3 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %2(%struct._cms_io_handler* %3) #7
  store i32 %call, i32* %Before, align 4, !tbaa !8
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load i32, i32* %Before, align 4, !tbaa !8
  %6 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %sub = sub i32 %5, %6
  %7 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %7 to i64
  %8 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %8, i32 0, i32 1
  %9 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  store i32 %sub, i32* %arrayidx, align 4, !tbaa !8
  %10 = load i32*, i32** %wcstr.addr, align 8, !tbaa !1
  %cmp = icmp eq i32* %10, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %11 to i64
  %12 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %12, i32 0, i32 2
  %13 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx2 = getelementptr inbounds i32, i32* %13, i64 %idxprom1
  store i32 0, i32* %arrayidx2, align 4, !tbaa !8
  %14 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom3 = zext i32 %14 to i64
  %15 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets4 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %15, i32 0, i32 1
  %16 = load i32*, i32** %Offsets4, align 8, !tbaa !104
  %arrayidx5 = getelementptr inbounds i32, i32* %16, i64 %idxprom3
  store i32 0, i32* %arrayidx5, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %17 = load i32*, i32** %wcstr.addr, align 8, !tbaa !1
  %call6 = call i32 @mywcslen(i32* %17) #7
  store i32 %call6, i32* %n, align 4, !tbaa !8
  %18 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %19 = load i32, i32* %n, align 4, !tbaa !8
  %20 = load i32*, i32** %wcstr.addr, align 8, !tbaa !1
  %call7 = call i32 @_cmsWriteWCharArray(%struct._cms_io_handler* %18, i32 %19, i32* %20) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %21 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %21, i32 0, i32 8
  %22 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell10, align 8, !tbaa !99
  %23 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call11 = call i32 %22(%struct._cms_io_handler* %23) #7
  %24 = load i32, i32* %Before, align 4, !tbaa !8
  %sub12 = sub i32 %call11, %24
  %25 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom13 = zext i32 %25 to i64
  %26 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes14 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %26, i32 0, i32 2
  %27 = load i32*, i32** %Sizes14, align 8, !tbaa !105
  %arrayidx15 = getelementptr inbounds i32, i32* %27, i64 %idxprom13
  store i32 %sub12, i32* %arrayidx15, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.9, %if.then.8, %if.then
  %28 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #2
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteOneMLUC(%struct._cms_typehandler_struct* %self, %struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i, %struct._cms_MLU_struct* %mlu, i32 %BaseOffset) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._cms_typehandler_struct*, align 8
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  %mlu.addr = alloca %struct._cms_MLU_struct*, align 8
  %BaseOffset.addr = alloca i32, align 4
  %Before = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._cms_typehandler_struct* %self, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  store %struct._cms_MLU_struct* %mlu, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  store i32 %BaseOffset, i32* %BaseOffset.addr, align 4, !tbaa !8
  %0 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct._cms_MLU_struct* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %2 to i64
  %3 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %3, i32 0, i32 2
  %4 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4, !tbaa !8
  %5 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %5 to i64
  %6 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %6, i32 0, i32 1
  %7 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1
  store i32 0, i32* %arrayidx2, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %8, i32 0, i32 8
  %9 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell, align 8, !tbaa !99
  %10 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call = call i32 %9(%struct._cms_io_handler* %10) #7
  store i32 %call, i32* %Before, align 4, !tbaa !8
  %11 = load i32, i32* %Before, align 4, !tbaa !8
  %12 = load i32, i32* %BaseOffset.addr, align 4, !tbaa !8
  %sub = sub i32 %11, %12
  %13 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom3 = zext i32 %13 to i64
  %14 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets4 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %14, i32 0, i32 1
  %15 = load i32*, i32** %Offsets4, align 8, !tbaa !104
  %arrayidx5 = getelementptr inbounds i32, i32* %15, i64 %idxprom3
  store i32 %sub, i32* %arrayidx5, align 4, !tbaa !8
  %16 = load %struct._cms_typehandler_struct*, %struct._cms_typehandler_struct** %self.addr, align 8, !tbaa !1
  %17 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %18 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %mlu.addr, align 8, !tbaa !1
  %19 = bitcast %struct._cms_MLU_struct* %18 to i8*
  %call6 = call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %16, %struct._cms_io_handler* %17, i8* %19, i32 1) #7
  %tobool = icmp ne i32 %call6, 0
  br i1 %tobool, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  %20 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %Tell9 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %20, i32 0, i32 8
  %21 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %Tell9, align 8, !tbaa !99
  %22 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %call10 = call i32 %21(%struct._cms_io_handler* %22) #7
  %23 = load i32, i32* %Before, align 4, !tbaa !8
  %sub11 = sub i32 %call10, %23
  %24 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom12 = zext i32 %24 to i64
  %25 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes13 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %25, i32 0, i32 2
  %26 = load i32*, i32** %Sizes13, align 8, !tbaa !105
  %arrayidx14 = getelementptr inbounds i32, i32* %26, i64 %idxprom12
  store i32 %sub11, i32* %arrayidx14, align 4, !tbaa !8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then
  %27 = bitcast i32* %Before to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i32 @WriteOneElem(%struct._cms_io_handler* %io, %struct._cmsDICelem* %e, i32 %i) #0 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca %struct._cms_io_handler*, align 8
  %e.addr = alloca %struct._cmsDICelem*, align 8
  %i.addr = alloca i32, align 4
  store %struct._cms_io_handler* %io, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  store %struct._cmsDICelem* %e, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !8
  %0 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %1 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom = zext i32 %1 to i64
  %2 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %2, i32 0, i32 1
  %3 = load i32*, i32** %Offsets, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %call = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %0, i32 %4) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct._cms_io_handler*, %struct._cms_io_handler** %io.addr, align 8, !tbaa !1
  %6 = load i32, i32* %i.addr, align 4, !tbaa !8
  %idxprom1 = zext i32 %6 to i64
  %7 = load %struct._cmsDICelem*, %struct._cmsDICelem** %e.addr, align 8, !tbaa !1
  %Sizes = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %7, i32 0, i32 2
  %8 = load i32*, i32** %Sizes, align 8, !tbaa !105
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 %idxprom1
  %9 = load i32, i32* %arrayidx2, align 4, !tbaa !8
  %call3 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %5, i32 %9) #7
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %10 = load i32, i32* %retval
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal i32 @mywcslen(i32* %s) #0 {
entry:
  %s.addr = alloca i32*, align 8
  %p = alloca i32*, align 8
  store i32* %s, i32** %s.addr, align 8, !tbaa !1
  %0 = bitcast i32** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i32*, i32** %s.addr, align 8, !tbaa !1
  store i32* %1, i32** %p, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32*, i32** %p, align 8, !tbaa !1
  %3 = load i32, i32* %2, align 4, !tbaa !8
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %p, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %4, i32 1
  store i32* %incdec.ptr, i32** %p, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load i32*, i32** %p, align 8, !tbaa !1
  %6 = load i32*, i32** %s.addr, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint i32* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  %conv = trunc i64 %sub.ptr.div to i32
  %7 = bitcast i32** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7) #2
  ret i32 %conv
}

declare i8* @cmsDictDup(i8*) #1

; Function Attrs: nounwind
declare double @pow(double, double) #3

declare void @cmsFreeToneCurveTriple(%struct._cms_curve_struct**) #1

declare i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct*) #1

declare float @cmsEvalToneCurveFloat(%struct._cms_curve_struct*, float) #1

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @_cmsQuickSaturateWord(double %d) #6 {
entry:
  %retval = alloca i16, align 2
  %d.addr = alloca double, align 8
  store double %d, double* %d.addr, align 8, !tbaa !44
  %0 = load double, double* %d.addr, align 8, !tbaa !44
  %add = fadd double %0, 5.000000e-01
  store double %add, double* %d.addr, align 8, !tbaa !44
  %1 = load double, double* %d.addr, align 8, !tbaa !44
  %cmp = fcmp ole double %1, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load double, double* %d.addr, align 8, !tbaa !44
  %cmp1 = fcmp oge double %2, 6.553500e+04
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i16 -1, i16* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %3 = load double, double* %d.addr, align 8, !tbaa !44
  %call = call zeroext i16 @_cmsQuickFloorWord(double %3) #7
  store i16 %call, i16* %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %4 = load i16, i16* %retval
  ret i16 %4
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @_cmsQuickFloorWord(double %d) #6 {
entry:
  %d.addr = alloca double, align 8
  store double %d, double* %d.addr, align 8, !tbaa !44
  %0 = load double, double* %d.addr, align 8, !tbaa !44
  %sub = fsub double %0, 3.276700e+04
  %call = call i32 @_cmsQuickFloor(double %sub) #7
  %conv = trunc i32 %call to i16
  %conv1 = zext i16 %conv to i32
  %add = add i32 %conv1, 32767
  %conv2 = trunc i32 %add to i16
  ret i16 %conv2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_cmsQuickFloor(double %val) #6 {
entry:
  %val.addr = alloca double, align 8
  %_lcms_double2fixmagic = alloca double, align 8
  %temp = alloca %union.anon.0, align 8
  store double %val, double* %val.addr, align 8, !tbaa !44
  %0 = bitcast double* %_lcms_double2fixmagic to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  store double 0x4238000000000000, double* %_lcms_double2fixmagic, align 8, !tbaa !44
  %1 = bitcast %union.anon.0* %temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load double, double* %val.addr, align 8, !tbaa !44
  %add = fadd double %2, 0x4238000000000000
  %val1 = bitcast %union.anon.0* %temp to double*
  store double %add, double* %val1, align 8, !tbaa !44
  %halves = bitcast %union.anon.0* %temp to [2 x i32]*
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %halves, i32 0, i64 0
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !8
  %shr = ashr i32 %3, 16
  %4 = bitcast %union.anon.0* %temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4) #2
  %5 = bitcast double* %_lcms_double2fixmagic to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5) #2
  ret i32 %shr
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideLUTtypeA2B(double %ICCVersion, i8* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  %Lut = alloca %struct._cmsPipeline_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Data.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %2, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %3 = load double, double* %ICCVersion.addr, align 8, !tbaa !44
  %cmp = fcmp olt double %3, 4.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %SaveAs8Bits = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %4, i32 0, i32 9
  %5 = load i32, i32* %SaveAs8Bits, align 4, !tbaa !100
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  store i32 1835430961, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 1835430962, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %entry
  store i32 1832993312, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.end, %if.then.1
  %6 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6) #2
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideLUTtypeB2A(double %ICCVersion, i8* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  %Lut = alloca %struct._cmsPipeline_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Data.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  store %struct._cmsPipeline_struct* %2, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %3 = load double, double* %ICCVersion.addr, align 8, !tbaa !44
  %cmp = fcmp olt double %3, 4.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %Lut, align 8, !tbaa !1
  %SaveAs8Bits = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %4, i32 0, i32 9
  %5 = load i32, i32* %SaveAs8Bits, align 4, !tbaa !100
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  store i32 1835430961, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 1835430962, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %entry
  store i32 1833058592, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.end, %if.then.1
  %6 = bitcast %struct._cmsPipeline_struct** %Lut to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6) #2
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideXYZtype(double %ICCVersion, i8* %Data) #0 {
entry:
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  ret i32 1482250784
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideCurveType(double %ICCVersion, i8* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  %Curve = alloca %struct._cms_curve_struct*, align 8
  %cleanup.dest.slot = alloca i32
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  %0 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %Data.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct._cms_curve_struct*
  store %struct._cms_curve_struct* %2, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %3 = load double, double* %ICCVersion.addr, align 8, !tbaa !44
  %cmp = fcmp olt double %3, 4.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1668641398, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %nSegments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %nSegments, align 4, !tbaa !47
  %cmp1 = icmp ne i32 %5, 1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 1668641398, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %6, i32 0, i32 2
  %7 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %7, i64 0
  %Type = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx, i32 0, i32 2
  %8 = load i32, i32* %Type, align 4, !tbaa !49
  %cmp4 = icmp slt i32 %8, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  store i32 1668641398, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end.3
  %9 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %Curve, align 8, !tbaa !1
  %Segments7 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %9, i32 0, i32 2
  %10 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %Segments7, align 8, !tbaa !48
  %arrayidx8 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %10, i64 0
  %Type9 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %arrayidx8, i32 0, i32 2
  %11 = load i32, i32* %Type9, align 4, !tbaa !49
  %cmp10 = icmp sgt i32 %11, 5
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.6
  store i32 1668641398, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.6
  store i32 1885434465, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then.11, %if.then.5, %if.then.2, %if.then
  %12 = bitcast %struct._cms_curve_struct** %Curve to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideTextType(double %ICCVersion, i8* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  %0 = load double, double* %ICCVersion.addr, align 8, !tbaa !44
  %cmp = fcmp oge double %0, 4.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1835824483, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 1952807028, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @DecideTextDescType(double %ICCVersion, i8* %Data) #0 {
entry:
  %retval = alloca i32, align 4
  %ICCVersion.addr = alloca double, align 8
  %Data.addr = alloca i8*, align 8
  store double %ICCVersion, double* %ICCVersion.addr, align 8, !tbaa !44
  store i8* %Data, i8** %Data.addr, align 8, !tbaa !1
  %0 = load double, double* %ICCVersion.addr, align 8, !tbaa !44
  %cmp = fcmp oge double %0, 4.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1835824483, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 1684370275, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval
  ret i32 %1
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin }
attributes #8 = { nobuiltin nounwind }
attributes #9 = { nobuiltin nounwind readnone }
attributes #10 = { nobuiltin noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !2, i64 8}
!6 = !{!"_cmsContext_struct", !2, i64 0, !2, i64 8, !3, i64 16, !7, i64 136}
!7 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40}
!8 = !{!9, !9, i64 0}
!9 = !{!"int", !3, i64 0}
!10 = !{!11, !2, i64 0}
!11 = !{!"", !2, i64 0}
!12 = !{!13, !2, i64 56}
!13 = !{!"_cmsTagTypeLinkedList_st", !14, i64 0, !2, i64 56}
!14 = !{!"_cms_typehandler_struct", !3, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !9, i64 48}
!15 = !{!3, !3, i64 0}
!16 = !{i64 0, i64 4, !15, i64 8, i64 8, !1, i64 16, i64 8, !1, i64 24, i64 8, !1, i64 32, i64 8, !1, i64 40, i64 8, !1, i64 48, i64 4, !8}
!17 = !{!13, !3, i64 0}
!18 = !{!19, !2, i64 104}
!19 = !{!"_cmsTagLinkedList_st", !3, i64 0, !20, i64 8, !2, i64 104}
!20 = !{!"", !9, i64 0, !9, i64 4, !3, i64 8, !2, i64 88}
!21 = !{!22, !3, i64 24}
!22 = !{!"", !23, i64 0, !3, i64 24, !20, i64 32}
!23 = !{!"_cmsPluginBaseStruct", !9, i64 0, !9, i64 4, !9, i64 8, !2, i64 16}
!24 = !{!19, !3, i64 0}
!25 = !{i64 0, i64 4, !8, i64 4, i64 4, !8, i64 8, i64 80, !15, i64 88, i64 8, !1}
!26 = !{!14, !2, i64 40}
!27 = !{!28, !28, i64 0}
!28 = !{!"short", !3, i64 0}
!29 = !{!30, !32, i64 16}
!30 = !{!"", !31, i64 0, !31, i64 24, !31, i64 48}
!31 = !{!"", !32, i64 0, !32, i64 8, !32, i64 16}
!32 = !{!"double", !3, i64 0}
!33 = !{!30, !32, i64 40}
!34 = !{!30, !32, i64 64}
!35 = !{!30, !32, i64 0}
!36 = !{!30, !32, i64 8}
!37 = !{!30, !32, i64 24}
!38 = !{!30, !32, i64 32}
!39 = !{!30, !32, i64 48}
!40 = !{!30, !32, i64 56}
!41 = !{!42, !2, i64 280}
!42 = !{!"_cms_io_handler", !2, i64 0, !2, i64 8, !9, i64 16, !9, i64 20, !3, i64 24, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312}
!43 = !{!42, !2, i64 312}
!44 = !{!32, !32, i64 0}
!45 = !{!46, !2, i64 48}
!46 = !{!"_cms_curve_struct", !2, i64 0, !9, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !9, i64 40, !2, i64 48}
!47 = !{!46, !9, i64 8}
!48 = !{!46, !2, i64 16}
!49 = !{!50, !9, i64 8}
!50 = !{!"", !51, i64 0, !51, i64 4, !9, i64 8, !3, i64 16, !9, i64 96, !2, i64 104}
!51 = !{!"float", !3, i64 0}
!52 = !{!46, !9, i64 40}
!53 = !{!54, !2, i64 0}
!54 = !{!"_cmsPipeline_struct", !2, i64 0, !9, i64 8, !9, i64 12, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !9, i64 64}
!55 = !{!56, !3, i64 8}
!56 = !{!"_cmsStage_struct", !2, i64 0, !3, i64 8, !3, i64 12, !9, i64 16, !9, i64 20, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56}
!57 = !{!56, !2, i64 48}
!58 = !{!56, !2, i64 56}
!59 = !{!56, !2, i64 0}
!60 = !{!61, !2, i64 8}
!61 = !{!"", !3, i64 0, !2, i64 8, !9, i64 16, !9, i64 20}
!62 = !{!54, !9, i64 8}
!63 = !{!54, !9, i64 12}
!64 = !{!65, !2, i64 0}
!65 = !{!"", !2, i64 0, !2, i64 8}
!66 = !{!67, !2, i64 8}
!67 = !{!"", !9, i64 0, !2, i64 8}
!68 = !{!69, !9, i64 8}
!69 = !{!"_cms_NAMEDCOLORLIST_struct", !9, i64 0, !9, i64 4, !9, i64 8, !3, i64 12, !3, i64 45, !2, i64 80, !2, i64 88}
!70 = !{!71, !9, i64 12}
!71 = !{!"_cms_MLU_struct", !2, i64 0, !9, i64 8, !9, i64 12, !2, i64 16, !9, i64 24, !9, i64 28, !2, i64 32}
!72 = !{!71, !2, i64 16}
!73 = !{!74, !9, i64 8}
!74 = !{!"", !28, i64 0, !28, i64 2, !9, i64 4, !9, i64 8}
!75 = !{!74, !9, i64 4}
!76 = !{!71, !2, i64 32}
!77 = !{!71, !9, i64 24}
!78 = !{!71, !9, i64 28}
!79 = !{!74, !28, i64 0}
!80 = !{!74, !28, i64 2}
!81 = !{!82, !9, i64 0}
!82 = !{!"", !9, i64 0, !2, i64 8, !2, i64 16}
!83 = !{!82, !2, i64 16}
!84 = !{!85, !9, i64 0}
!85 = !{!"", !9, i64 0, !9, i64 4, !86, i64 8, !3, i64 16, !3, i64 20, !2, i64 40, !2, i64 48, !2, i64 56}
!86 = !{!"long", !3, i64 0}
!87 = !{!85, !9, i64 4}
!88 = !{!85, !3, i64 16}
!89 = !{!85, !2, i64 40}
!90 = !{!85, !2, i64 48}
!91 = !{!92, !9, i64 0}
!92 = !{!"", !9, i64 0, !31, i64 8, !9, i64 32, !32, i64 40, !9, i64 48}
!93 = !{!92, !9, i64 32}
!94 = !{!92, !32, i64 40}
!95 = !{!92, !9, i64 48}
!96 = !{!97, !9, i64 0}
!97 = !{!"", !9, i64 0, !9, i64 4, !3, i64 8}
!98 = !{!97, !9, i64 4}
!99 = !{!42, !2, i64 304}
!100 = !{!54, !9, i64 64}
!101 = !{!42, !2, i64 288}
!102 = !{!103, !2, i64 0}
!103 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16}
!104 = !{!103, !2, i64 8}
!105 = !{!103, !2, i64 16}
!106 = !{!14, !2, i64 16}
!107 = !{!108, !32, i64 0}
!108 = !{!"", !32, i64 0, !32, i64 8, !9, i64 16}
!109 = !{!108, !32, i64 8}
!110 = !{!108, !9, i64 16}
!111 = !{!112, !9, i64 48}
!112 = !{!"", !31, i64 0, !31, i64 24, !9, i64 48}
!113 = !{!114, !2, i64 8}
!114 = !{!"_cmsDICTentry_struct", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32}
!115 = !{!114, !2, i64 16}
!116 = !{!114, !2, i64 24}
!117 = !{!114, !2, i64 32}
!118 = !{!31, !32, i64 0}
!119 = !{!31, !32, i64 16}
!120 = !{!31, !32, i64 8}
!121 = !{!51, !51, i64 0}
!122 = !{!67, !9, i64 0}
!123 = !{!14, !9, i64 48}
!124 = !{!61, !9, i64 16}
!125 = !{!61, !9, i64 20}
!126 = !{!127, !9, i64 12}
!127 = !{!"_cms_interp_struc", !2, i64 0, !9, i64 8, !9, i64 12, !9, i64 16, !3, i64 20, !3, i64 52, !3, i64 84, !2, i64 120, !3, i64 128}
!128 = !{!65, !2, i64 8}
!129 = !{!42, !2, i64 8}
!130 = !{!14, !2, i64 8}
!131 = !{!56, !9, i64 16}
!132 = !{!56, !9, i64 20}
!133 = !{!50, !51, i64 0}
!134 = !{!50, !51, i64 4}
!135 = !{!50, !9, i64 96}
!136 = !{!50, !2, i64 104}
!137 = !{!85, !2, i64 56}
!138 = !{!139, !2, i64 8}
!139 = !{!"", !103, i64 0, !103, i64 24, !103, i64 48, !103, i64 72}
!140 = !{!139, !2, i64 32}
!141 = !{!139, !2, i64 56}
!142 = !{!139, !2, i64 80}
