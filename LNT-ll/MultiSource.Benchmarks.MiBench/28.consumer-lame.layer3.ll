; ModuleID = './MultiSource.Benchmarks.MiBench/28.consumer-lame.layer3.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bandInfoStruct = type { [23 x i16], [22 x i16], [14 x i16], [13 x i16] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.newhuff = type { i32, i16* }
%struct.mpstr = type { %struct.buf*, %struct.buf*, i32, i32, i32, %struct.frame, [2 x [2304 x i8]], [2 x [2 x [576 x double]]], [2 x i32], i64, i32, [2 x [2 x [272 x double]]], i32 }
%struct.buf = type { i8*, i64, i64, %struct.buf*, %struct.buf* }
%struct.frame = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.III_sideinfo = type { i32, i32, [2 x %struct.anon] }
%struct.anon = type { [2 x %struct.gr_info_s] }
%struct.gr_info_s = type { i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, [3 x double*], double* }

@bandInfo = global [9 x %struct.bandInfoStruct] [%struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 44, i16 52, i16 62, i16 74, i16 90, i16 110, i16 134, i16 162, i16 196, i16 238, i16 288, i16 342, i16 418, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 8, i16 10, i16 12, i16 16, i16 20, i16 24, i16 28, i16 34, i16 42, i16 50, i16 54, i16 76, i16 158], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 90, i16 120, i16 156, i16 198, i16 252, i16 318, i16 408, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 22, i16 30, i16 56] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 42, i16 50, i16 60, i16 72, i16 88, i16 106, i16 128, i16 156, i16 190, i16 230, i16 276, i16 330, i16 384, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 16, i16 18, i16 22, i16 28, i16 34, i16 40, i16 46, i16 54, i16 54, i16 192], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 84, i16 114, i16 150, i16 192, i16 240, i16 300, i16 378, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 10, i16 12, i16 14, i16 16, i16 20, i16 26, i16 66] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 82, i16 102, i16 126, i16 156, i16 194, i16 240, i16 296, i16 364, i16 448, i16 550, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 10, i16 12, i16 16, i16 20, i16 24, i16 30, i16 38, i16 46, i16 56, i16 68, i16 84, i16 102, i16 26], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 90, i16 126, i16 174, i16 234, i16 312, i16 414, i16 540, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 8, i16 12, i16 16, i16 20, i16 26, i16 34, i16 42, i16 12] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 72, i16 96, i16 126, i16 168, i16 222, i16 300, i16 396, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 10, i16 14, i16 18, i16 26, i16 32, i16 42, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 114, i16 136, i16 162, i16 194, i16 232, i16 278, i16 332, i16 394, i16 464, i16 540, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 18, i16 22, i16 26, i16 32, i16 38, i16 46, i16 52, i16 64, i16 70, i16 76, i16 36], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 408, i16 540, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 32, i16 44, i16 12] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 60, i16 72, i16 88, i16 108, i16 132, i16 160, i16 192, i16 232, i16 280, i16 336, i16 400, i16 476, i16 566, i16 568, i16 570, i16 572, i16 574, i16 576], [22 x i16] [i16 12, i16 12, i16 12, i16 12, i16 12, i16 12, i16 16, i16 20, i16 24, i16 28, i16 32, i16 40, i16 48, i16 56, i16 64, i16 76, i16 90, i16 2, i16 2, i16 2, i16 2, i16 2], [14 x i16] [i16 0, i16 24, i16 48, i16 72, i16 108, i16 156, i16 216, i16 288, i16 372, i16 480, i16 486, i16 492, i16 498, i16 576], [13 x i16] [i16 8, i16 8, i16 8, i16 12, i16 16, i16 20, i16 24, i16 28, i16 36, i16 2, i16 2, i16 2, i16 26] }], align 16
@gainpow2 = internal global [378 x double] zeroinitializer, align 16
@ispow = internal global [8207 x double] zeroinitializer, align 16
@init_layer3.Ci = internal global [8 x double] [double -6.000000e-01, double -5.350000e-01, double -3.300000e-01, double -1.850000e-01, double -9.500000e-02, double -4.100000e-02, double -1.420000e-02, double -3.700000e-03], align 16
@aa_cs = internal global [8 x double] zeroinitializer, align 16
@aa_ca = internal global [8 x double] zeroinitializer, align 16
@win = internal global [4 x [36 x double]] zeroinitializer, align 16
@COS9 = internal global [9 x double] zeroinitializer, align 16
@tfcos36 = internal global [9 x double] zeroinitializer, align 16
@tfcos12 = internal global [3 x double] zeroinitializer, align 16
@COS6_1 = internal global double 0.000000e+00, align 8
@COS6_2 = internal global double 0.000000e+00, align 8
@COS1 = internal global [12 x [6 x double]] zeroinitializer, align 16
@init_layer3.len = internal global [4 x i32] [i32 36, i32 36, i32 12, i32 36], align 16
@win1 = internal global [4 x [36 x double]] zeroinitializer, align 16
@tan1_1 = internal global [16 x double] zeroinitializer, align 16
@tan2_1 = internal global [16 x double] zeroinitializer, align 16
@tan1_2 = internal global [16 x double] zeroinitializer, align 16
@tan2_2 = internal global [16 x double] zeroinitializer, align 16
@pow1_1 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow2_1 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow1_2 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow2_2 = internal global [2 x [16 x double]] zeroinitializer, align 16
@mapbuf0 = internal global [9 x [152 x i32]] zeroinitializer, align 16
@map = internal global [9 x [3 x i32*]] zeroinitializer, align 16
@mapend = internal global [9 x [3 x i32*]] zeroinitializer, align 16
@mapbuf1 = internal global [9 x [156 x i32]] zeroinitializer, align 16
@mapbuf2 = internal global [9 x [44 x i32]] zeroinitializer, align 16
@longLimit = common global [9 x [23 x i32]] zeroinitializer, align 16
@shortLimit = common global [9 x [14 x i32]] zeroinitializer, align 16
@i_slen2 = internal global [256 x i32] zeroinitializer, align 16
@n_slen2 = internal global [512 x i32] zeroinitializer, align 16
@do_layer3.hybridIn = internal global [2 x [32 x [18 x double]]] zeroinitializer, align 16
@do_layer3.hybridOut = internal global [2 x [18 x [32 x double]]] zeroinitializer, align 16
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"big_values too large!\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"Blocktype == 0 and window-switching == 1 not allowed.\0A\00", align 1
@wordpointer = external global i8*, align 8
@bitindex = external global i32, align 4
@III_get_scale_factors_2.stab = internal global [3 x [6 x [4 x i8]]] [[6 x [4 x i8]] [[4 x i8] c"\06\05\05\05", [4 x i8] c"\06\05\07\03", [4 x i8] c"\0B\0A\00\00", [4 x i8] c"\07\07\07\00", [4 x i8] c"\06\06\06\03", [4 x i8] c"\08\08\05\00"], [6 x [4 x i8]] [[4 x i8] c"\09\09\09\09", [4 x i8] c"\09\09\0C\06", [4 x i8] c"\12\12\00\00", [4 x i8] c"\0C\0C\0C\00", [4 x i8] c"\0C\09\09\06", [4 x i8] c"\0F\0C\09\00"], [6 x [4 x i8]] [[4 x i8] c"\06\09\09\09", [4 x i8] c"\06\09\0C\06", [4 x i8] c"\0F\12\00\00", [4 x i8] c"\06\0F\0C\00", [4 x i8] c"\06\0C\09\06", [4 x i8] c"\06\12\09\00"]], align 16
@III_get_scale_factors_1.slen = internal global [2 x [16 x i8]] [[16 x i8] c"\00\00\00\00\03\01\01\01\02\02\02\03\03\03\04\04", [16 x i8] c"\00\01\02\03\00\01\02\03\01\02\03\01\02\03\02\03"], align 16
@ht = internal global [32 x %struct.newhuff] [%struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([7 x i16], [7 x i16]* @tab1, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([17 x i16], [17 x i16]* @tab2, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([17 x i16], [17 x i16]* @tab3, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab5, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab6, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab7, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab8, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab9, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab10, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab11, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab12, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab13, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab15, i32 0, i32 0) }, %struct.newhuff { i32 1, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 2, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 3, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 4, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 6, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 8, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 10, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 13, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 4, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 5, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 6, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 7, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 8, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 9, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 11, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 13, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }], align 16
@htc = internal global [2 x %struct.newhuff] [%struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab_c0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab_c1, i32 0, i32 0) }], align 16
@pretab1 = internal global [22 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 3, i32 2, i32 0], align 16
@pretab2 = internal global [22 x i32] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [41 x i8] c"mpg123: Can't rewind stream by %d bits!\0A\00", align 1
@tab0 = internal global [1 x i16] zeroinitializer, align 2
@tab1 = internal global [7 x i16] [i16 -5, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 2
@tab2 = internal global [17 x i16] [i16 -15, i16 -11, i16 -9, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab3 = internal global [17 x i16] [i16 -13, i16 -11, i16 -9, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 16, i16 17, i16 -1, i16 1, i16 0], align 16
@tab5 = internal global [31 x i16] [i16 -29, i16 -25, i16 -23, i16 -15, i16 -7, i16 -5, i16 -3, i16 -1, i16 51, i16 35, i16 50, i16 49, i16 -3, i16 -1, i16 19, i16 3, i16 -1, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab6 = internal global [31 x i16] [i16 -25, i16 -19, i16 -13, i16 -9, i16 -5, i16 -3, i16 -1, i16 51, i16 3, i16 35, i16 -1, i16 50, i16 48, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -3, i16 -1, i16 33, i16 32, i16 1, i16 -1, i16 17, i16 -1, i16 16, i16 0], align 16
@tab7 = internal global [71 x i16] [i16 -69, i16 -65, i16 -57, i16 -39, i16 -29, i16 -17, i16 -11, i16 -7, i16 -3, i16 -1, i16 85, i16 69, i16 -1, i16 84, i16 83, i16 -1, i16 53, i16 68, i16 -3, i16 -1, i16 37, i16 82, i16 21, i16 -5, i16 -1, i16 81, i16 -1, i16 5, i16 52, i16 -1, i16 80, i16 -1, i16 67, i16 51, i16 -5, i16 -3, i16 -1, i16 36, i16 66, i16 20, i16 -1, i16 65, i16 64, i16 -11, i16 -7, i16 -3, i16 -1, i16 4, i16 35, i16 -1, i16 50, i16 3, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 48, i16 34, i16 18, i16 -5, i16 -1, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab8 = internal global [71 x i16] [i16 -65, i16 -63, i16 -59, i16 -45, i16 -31, i16 -19, i16 -13, i16 -7, i16 -5, i16 -3, i16 -1, i16 85, i16 84, i16 69, i16 83, i16 -3, i16 -1, i16 53, i16 68, i16 37, i16 -3, i16 -1, i16 82, i16 5, i16 21, i16 -5, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 80, i16 51, i16 36, i16 -5, i16 -3, i16 -1, i16 66, i16 20, i16 65, i16 -3, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -9, i16 -7, i16 -3, i16 -1, i16 19, i16 49, i16 -1, i16 3, i16 48, i16 34, i16 -1, i16 2, i16 32, i16 -1, i16 18, i16 33, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab9 = internal global [71 x i16] [i16 -63, i16 -53, i16 -41, i16 -29, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 85, i16 69, i16 53, i16 -1, i16 83, i16 -1, i16 84, i16 5, i16 -3, i16 -1, i16 68, i16 37, i16 -1, i16 82, i16 21, i16 -3, i16 -1, i16 81, i16 52, i16 -1, i16 67, i16 -1, i16 80, i16 4, i16 -7, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 64, i16 -1, i16 20, i16 65, i16 -5, i16 -3, i16 -1, i16 35, i16 50, i16 19, i16 -1, i16 49, i16 -1, i16 3, i16 48, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 -1, i16 16, i16 0], align 16
@tab10 = internal global [127 x i16] [i16 -125, i16 -121, i16 -111, i16 -83, i16 -55, i16 -35, i16 -21, i16 -13, i16 -7, i16 -3, i16 -1, i16 119, i16 103, i16 -1, i16 118, i16 87, i16 -3, i16 -1, i16 117, i16 102, i16 71, i16 -3, i16 -1, i16 116, i16 86, i16 -1, i16 101, i16 55, i16 -9, i16 -3, i16 -1, i16 115, i16 70, i16 -3, i16 -1, i16 85, i16 84, i16 99, i16 -1, i16 39, i16 114, i16 -11, i16 -5, i16 -3, i16 -1, i16 100, i16 7, i16 112, i16 -1, i16 98, i16 -1, i16 69, i16 53, i16 -5, i16 -1, i16 6, i16 -1, i16 83, i16 68, i16 23, i16 -17, i16 -5, i16 -1, i16 113, i16 -1, i16 54, i16 38, i16 -5, i16 -3, i16 -1, i16 37, i16 82, i16 21, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 22, i16 97, i16 -1, i16 96, i16 -1, i16 5, i16 80, i16 -19, i16 -11, i16 -7, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 4, i16 -1, i16 20, i16 65, i16 -3, i16 -1, i16 64, i16 35, i16 -1, i16 50, i16 3, i16 -3, i16 -1, i16 19, i16 49, i16 -1, i16 48, i16 34, i16 -7, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab11 = internal global [127 x i16] [i16 -121, i16 -113, i16 -89, i16 -59, i16 -43, i16 -27, i16 -17, i16 -7, i16 -3, i16 -1, i16 119, i16 103, i16 -1, i16 118, i16 117, i16 -3, i16 -1, i16 102, i16 71, i16 -1, i16 116, i16 -1, i16 87, i16 85, i16 -5, i16 -3, i16 -1, i16 86, i16 101, i16 55, i16 -1, i16 115, i16 70, i16 -9, i16 -7, i16 -3, i16 -1, i16 69, i16 84, i16 -1, i16 53, i16 83, i16 39, i16 -1, i16 114, i16 -1, i16 100, i16 7, i16 -5, i16 -1, i16 113, i16 -1, i16 23, i16 112, i16 -3, i16 -1, i16 54, i16 99, i16 -1, i16 96, i16 -1, i16 68, i16 37, i16 -13, i16 -7, i16 -5, i16 -3, i16 -1, i16 82, i16 5, i16 21, i16 98, i16 -3, i16 -1, i16 38, i16 6, i16 22, i16 -5, i16 -1, i16 97, i16 -1, i16 81, i16 52, i16 -5, i16 -1, i16 80, i16 -1, i16 67, i16 51, i16 -1, i16 36, i16 66, i16 -15, i16 -11, i16 -7, i16 -3, i16 -1, i16 20, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -1, i16 19, i16 49, i16 -5, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 33, i16 -5, i16 -1, i16 18, i16 -1, i16 2, i16 32, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab12 = internal global [127 x i16] [i16 -115, i16 -99, i16 -73, i16 -45, i16 -27, i16 -17, i16 -9, i16 -5, i16 -3, i16 -1, i16 119, i16 103, i16 118, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 102, i16 71, i16 -1, i16 116, i16 101, i16 -3, i16 -1, i16 86, i16 55, i16 -3, i16 -1, i16 115, i16 85, i16 39, i16 -7, i16 -3, i16 -1, i16 114, i16 70, i16 -1, i16 100, i16 23, i16 -5, i16 -1, i16 113, i16 -1, i16 7, i16 112, i16 -1, i16 54, i16 99, i16 -13, i16 -9, i16 -3, i16 -1, i16 69, i16 84, i16 -1, i16 68, i16 -1, i16 6, i16 5, i16 -1, i16 38, i16 98, i16 -5, i16 -1, i16 97, i16 -1, i16 22, i16 96, i16 -3, i16 -1, i16 53, i16 83, i16 -1, i16 37, i16 82, i16 -17, i16 -7, i16 -3, i16 -1, i16 21, i16 81, i16 -1, i16 52, i16 67, i16 -5, i16 -3, i16 -1, i16 80, i16 4, i16 36, i16 -1, i16 66, i16 20, i16 -3, i16 -1, i16 51, i16 65, i16 -1, i16 35, i16 50, i16 -11, i16 -7, i16 -5, i16 -3, i16 -1, i16 64, i16 3, i16 48, i16 19, i16 -1, i16 49, i16 34, i16 -1, i16 18, i16 33, i16 -7, i16 -5, i16 -3, i16 -1, i16 2, i16 32, i16 0, i16 17, i16 -1, i16 1, i16 16], align 16
@tab13 = internal global [511 x i16] [i16 -509, i16 -503, i16 -475, i16 -405, i16 -333, i16 -265, i16 -205, i16 -153, i16 -115, i16 -83, i16 -53, i16 -35, i16 -21, i16 -13, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 254, i16 252, i16 253, i16 237, i16 255, i16 -1, i16 239, i16 223, i16 -3, i16 -1, i16 238, i16 207, i16 -1, i16 222, i16 191, i16 -9, i16 -3, i16 -1, i16 251, i16 206, i16 -1, i16 220, i16 -1, i16 175, i16 233, i16 -1, i16 236, i16 221, i16 -9, i16 -5, i16 -3, i16 -1, i16 250, i16 205, i16 190, i16 -1, i16 235, i16 159, i16 -3, i16 -1, i16 249, i16 234, i16 -1, i16 189, i16 219, i16 -17, i16 -9, i16 -3, i16 -1, i16 143, i16 248, i16 -1, i16 204, i16 -1, i16 174, i16 158, i16 -5, i16 -1, i16 142, i16 -1, i16 127, i16 126, i16 247, i16 -5, i16 -1, i16 218, i16 -1, i16 173, i16 188, i16 -3, i16 -1, i16 203, i16 246, i16 111, i16 -15, i16 -7, i16 -3, i16 -1, i16 232, i16 95, i16 -1, i16 157, i16 217, i16 -3, i16 -1, i16 245, i16 231, i16 -1, i16 172, i16 187, i16 -9, i16 -3, i16 -1, i16 79, i16 244, i16 -3, i16 -1, i16 202, i16 230, i16 243, i16 -1, i16 63, i16 -1, i16 141, i16 216, i16 -21, i16 -9, i16 -3, i16 -1, i16 47, i16 242, i16 -3, i16 -1, i16 110, i16 156, i16 15, i16 -5, i16 -3, i16 -1, i16 201, i16 94, i16 171, i16 -3, i16 -1, i16 125, i16 215, i16 78, i16 -11, i16 -5, i16 -3, i16 -1, i16 200, i16 214, i16 62, i16 -1, i16 185, i16 -1, i16 155, i16 170, i16 -1, i16 31, i16 241, i16 -23, i16 -13, i16 -5, i16 -1, i16 240, i16 -1, i16 186, i16 229, i16 -3, i16 -1, i16 228, i16 140, i16 -1, i16 109, i16 227, i16 -5, i16 -1, i16 226, i16 -1, i16 46, i16 14, i16 -1, i16 30, i16 225, i16 -15, i16 -7, i16 -3, i16 -1, i16 224, i16 93, i16 -1, i16 213, i16 124, i16 -3, i16 -1, i16 199, i16 77, i16 -1, i16 139, i16 184, i16 -7, i16 -3, i16 -1, i16 212, i16 154, i16 -1, i16 169, i16 108, i16 -1, i16 198, i16 61, i16 -37, i16 -21, i16 -9, i16 -5, i16 -3, i16 -1, i16 211, i16 123, i16 45, i16 -1, i16 210, i16 29, i16 -5, i16 -1, i16 183, i16 -1, i16 92, i16 197, i16 -3, i16 -1, i16 153, i16 122, i16 195, i16 -7, i16 -5, i16 -3, i16 -1, i16 167, i16 151, i16 75, i16 209, i16 -3, i16 -1, i16 13, i16 208, i16 -1, i16 138, i16 168, i16 -11, i16 -7, i16 -3, i16 -1, i16 76, i16 196, i16 -1, i16 107, i16 182, i16 -1, i16 60, i16 44, i16 -3, i16 -1, i16 194, i16 91, i16 -3, i16 -1, i16 181, i16 137, i16 28, i16 -43, i16 -23, i16 -11, i16 -5, i16 -1, i16 193, i16 -1, i16 152, i16 12, i16 -1, i16 192, i16 -1, i16 180, i16 106, i16 -5, i16 -3, i16 -1, i16 166, i16 121, i16 59, i16 -1, i16 179, i16 -1, i16 136, i16 90, i16 -11, i16 -5, i16 -1, i16 43, i16 -1, i16 165, i16 105, i16 -1, i16 164, i16 -1, i16 120, i16 135, i16 -5, i16 -1, i16 148, i16 -1, i16 119, i16 118, i16 178, i16 -11, i16 -3, i16 -1, i16 27, i16 177, i16 -3, i16 -1, i16 11, i16 176, i16 -1, i16 150, i16 74, i16 -7, i16 -3, i16 -1, i16 58, i16 163, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -47, i16 -23, i16 -9, i16 -3, i16 -1, i16 26, i16 161, i16 -3, i16 -1, i16 10, i16 104, i16 160, i16 -5, i16 -3, i16 -1, i16 134, i16 73, i16 147, i16 -3, i16 -1, i16 57, i16 88, i16 -1, i16 133, i16 103, i16 -9, i16 -3, i16 -1, i16 41, i16 146, i16 -3, i16 -1, i16 87, i16 117, i16 56, i16 -5, i16 -1, i16 131, i16 -1, i16 102, i16 71, i16 -3, i16 -1, i16 116, i16 86, i16 -1, i16 101, i16 115, i16 -11, i16 -3, i16 -1, i16 25, i16 145, i16 -3, i16 -1, i16 9, i16 144, i16 -1, i16 72, i16 132, i16 -7, i16 -5, i16 -1, i16 114, i16 -1, i16 70, i16 100, i16 40, i16 -1, i16 130, i16 24, i16 -41, i16 -27, i16 -11, i16 -5, i16 -3, i16 -1, i16 55, i16 39, i16 23, i16 -1, i16 113, i16 -1, i16 85, i16 7, i16 -7, i16 -3, i16 -1, i16 112, i16 54, i16 -1, i16 99, i16 69, i16 -3, i16 -1, i16 84, i16 38, i16 -1, i16 98, i16 53, i16 -5, i16 -1, i16 129, i16 -1, i16 8, i16 128, i16 -3, i16 -1, i16 22, i16 97, i16 -1, i16 6, i16 96, i16 -13, i16 -9, i16 -5, i16 -3, i16 -1, i16 83, i16 68, i16 37, i16 -1, i16 82, i16 5, i16 -1, i16 21, i16 81, i16 -7, i16 -3, i16 -1, i16 52, i16 67, i16 -1, i16 80, i16 36, i16 -3, i16 -1, i16 66, i16 51, i16 20, i16 -19, i16 -11, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -3, i16 -1, i16 35, i16 50, i16 19, i16 -3, i16 -1, i16 49, i16 3, i16 -1, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 16
@tab15 = internal global [511 x i16] [i16 -495, i16 -445, i16 -355, i16 -263, i16 -183, i16 -115, i16 -77, i16 -43, i16 -27, i16 -13, i16 -7, i16 -3, i16 -1, i16 255, i16 239, i16 -1, i16 254, i16 223, i16 -1, i16 238, i16 -1, i16 253, i16 207, i16 -7, i16 -3, i16 -1, i16 252, i16 222, i16 -1, i16 237, i16 191, i16 -1, i16 251, i16 -1, i16 206, i16 236, i16 -7, i16 -3, i16 -1, i16 221, i16 175, i16 -1, i16 250, i16 190, i16 -3, i16 -1, i16 235, i16 205, i16 -1, i16 220, i16 159, i16 -15, i16 -7, i16 -3, i16 -1, i16 249, i16 234, i16 -1, i16 189, i16 219, i16 -3, i16 -1, i16 143, i16 248, i16 -1, i16 204, i16 158, i16 -7, i16 -3, i16 -1, i16 233, i16 127, i16 -1, i16 247, i16 173, i16 -3, i16 -1, i16 218, i16 188, i16 -1, i16 111, i16 -1, i16 174, i16 15, i16 -19, i16 -11, i16 -3, i16 -1, i16 203, i16 246, i16 -3, i16 -1, i16 142, i16 232, i16 -1, i16 95, i16 157, i16 -3, i16 -1, i16 245, i16 126, i16 -1, i16 231, i16 172, i16 -9, i16 -3, i16 -1, i16 202, i16 187, i16 -3, i16 -1, i16 217, i16 141, i16 79, i16 -3, i16 -1, i16 244, i16 63, i16 -1, i16 243, i16 216, i16 -33, i16 -17, i16 -9, i16 -3, i16 -1, i16 230, i16 47, i16 -1, i16 242, i16 -1, i16 110, i16 240, i16 -3, i16 -1, i16 31, i16 241, i16 -1, i16 156, i16 201, i16 -7, i16 -3, i16 -1, i16 94, i16 171, i16 -1, i16 186, i16 229, i16 -3, i16 -1, i16 125, i16 215, i16 -1, i16 78, i16 228, i16 -15, i16 -7, i16 -3, i16 -1, i16 140, i16 200, i16 -1, i16 62, i16 109, i16 -3, i16 -1, i16 214, i16 227, i16 -1, i16 155, i16 185, i16 -7, i16 -3, i16 -1, i16 46, i16 170, i16 -1, i16 226, i16 30, i16 -5, i16 -1, i16 225, i16 -1, i16 14, i16 224, i16 -1, i16 93, i16 213, i16 -45, i16 -25, i16 -13, i16 -7, i16 -3, i16 -1, i16 124, i16 199, i16 -1, i16 77, i16 139, i16 -1, i16 212, i16 -1, i16 184, i16 154, i16 -7, i16 -3, i16 -1, i16 169, i16 108, i16 -1, i16 198, i16 61, i16 -1, i16 211, i16 210, i16 -9, i16 -5, i16 -3, i16 -1, i16 45, i16 13, i16 29, i16 -1, i16 123, i16 183, i16 -5, i16 -1, i16 209, i16 -1, i16 92, i16 208, i16 -1, i16 197, i16 138, i16 -17, i16 -7, i16 -3, i16 -1, i16 168, i16 76, i16 -1, i16 196, i16 107, i16 -5, i16 -1, i16 182, i16 -1, i16 153, i16 12, i16 -1, i16 60, i16 195, i16 -9, i16 -3, i16 -1, i16 122, i16 167, i16 -1, i16 166, i16 -1, i16 192, i16 11, i16 -1, i16 194, i16 -1, i16 44, i16 91, i16 -55, i16 -29, i16 -15, i16 -7, i16 -3, i16 -1, i16 181, i16 28, i16 -1, i16 137, i16 152, i16 -3, i16 -1, i16 193, i16 75, i16 -1, i16 180, i16 106, i16 -5, i16 -3, i16 -1, i16 59, i16 121, i16 179, i16 -3, i16 -1, i16 151, i16 136, i16 -1, i16 43, i16 90, i16 -11, i16 -5, i16 -1, i16 178, i16 -1, i16 165, i16 27, i16 -1, i16 177, i16 -1, i16 176, i16 105, i16 -7, i16 -3, i16 -1, i16 150, i16 74, i16 -1, i16 164, i16 120, i16 -3, i16 -1, i16 135, i16 58, i16 163, i16 -17, i16 -7, i16 -3, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -3, i16 -1, i16 26, i16 161, i16 -3, i16 -1, i16 10, i16 160, i16 104, i16 -7, i16 -3, i16 -1, i16 134, i16 73, i16 -1, i16 148, i16 57, i16 -5, i16 -1, i16 147, i16 -1, i16 119, i16 9, i16 -1, i16 88, i16 133, i16 -53, i16 -29, i16 -13, i16 -7, i16 -3, i16 -1, i16 41, i16 103, i16 -1, i16 118, i16 146, i16 -1, i16 145, i16 -1, i16 25, i16 144, i16 -7, i16 -3, i16 -1, i16 72, i16 132, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 56, i16 131, i16 -1, i16 102, i16 71, i16 -7, i16 -3, i16 -1, i16 40, i16 130, i16 -1, i16 24, i16 129, i16 -7, i16 -3, i16 -1, i16 116, i16 8, i16 -1, i16 128, i16 86, i16 -3, i16 -1, i16 101, i16 55, i16 -1, i16 115, i16 70, i16 -17, i16 -7, i16 -3, i16 -1, i16 39, i16 114, i16 -1, i16 100, i16 23, i16 -3, i16 -1, i16 85, i16 113, i16 -3, i16 -1, i16 7, i16 112, i16 54, i16 -7, i16 -3, i16 -1, i16 99, i16 69, i16 -1, i16 84, i16 38, i16 -3, i16 -1, i16 98, i16 22, i16 -3, i16 -1, i16 6, i16 96, i16 53, i16 -33, i16 -19, i16 -9, i16 -5, i16 -1, i16 97, i16 -1, i16 83, i16 68, i16 -1, i16 37, i16 82, i16 -3, i16 -1, i16 21, i16 81, i16 -3, i16 -1, i16 5, i16 80, i16 52, i16 -7, i16 -3, i16 -1, i16 67, i16 36, i16 -1, i16 66, i16 51, i16 -1, i16 65, i16 -1, i16 20, i16 4, i16 -9, i16 -3, i16 -1, i16 35, i16 50, i16 -3, i16 -1, i16 64, i16 3, i16 19, i16 -3, i16 -1, i16 49, i16 48, i16 34, i16 -9, i16 -7, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab16 = internal global [511 x i16] [i16 -509, i16 -503, i16 -461, i16 -323, i16 -103, i16 -37, i16 -27, i16 -15, i16 -7, i16 -3, i16 -1, i16 239, i16 254, i16 -1, i16 223, i16 253, i16 -3, i16 -1, i16 207, i16 252, i16 -1, i16 191, i16 251, i16 -5, i16 -1, i16 175, i16 -1, i16 250, i16 159, i16 -3, i16 -1, i16 249, i16 248, i16 143, i16 -7, i16 -3, i16 -1, i16 127, i16 247, i16 -1, i16 111, i16 246, i16 255, i16 -9, i16 -5, i16 -3, i16 -1, i16 95, i16 245, i16 79, i16 -1, i16 244, i16 243, i16 -53, i16 -1, i16 240, i16 -1, i16 63, i16 -29, i16 -19, i16 -13, i16 -7, i16 -5, i16 -1, i16 206, i16 -1, i16 236, i16 221, i16 222, i16 -1, i16 233, i16 -1, i16 234, i16 217, i16 -1, i16 238, i16 -1, i16 237, i16 235, i16 -3, i16 -1, i16 190, i16 205, i16 -3, i16 -1, i16 220, i16 219, i16 174, i16 -11, i16 -5, i16 -1, i16 204, i16 -1, i16 173, i16 218, i16 -3, i16 -1, i16 126, i16 172, i16 202, i16 -5, i16 -3, i16 -1, i16 201, i16 125, i16 94, i16 189, i16 242, i16 -93, i16 -5, i16 -3, i16 -1, i16 47, i16 15, i16 31, i16 -1, i16 241, i16 -49, i16 -25, i16 -13, i16 -5, i16 -1, i16 158, i16 -1, i16 188, i16 203, i16 -3, i16 -1, i16 142, i16 232, i16 -1, i16 157, i16 231, i16 -7, i16 -3, i16 -1, i16 187, i16 141, i16 -1, i16 216, i16 110, i16 -1, i16 230, i16 156, i16 -13, i16 -7, i16 -3, i16 -1, i16 171, i16 186, i16 -1, i16 229, i16 215, i16 -1, i16 78, i16 -1, i16 228, i16 140, i16 -3, i16 -1, i16 200, i16 62, i16 -1, i16 109, i16 -1, i16 214, i16 155, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 185, i16 170, i16 225, i16 -1, i16 212, i16 -1, i16 184, i16 169, i16 -5, i16 -1, i16 123, i16 -1, i16 183, i16 208, i16 227, i16 -7, i16 -3, i16 -1, i16 14, i16 224, i16 -1, i16 93, i16 213, i16 -3, i16 -1, i16 124, i16 199, i16 -1, i16 77, i16 139, i16 -75, i16 -45, i16 -27, i16 -13, i16 -7, i16 -3, i16 -1, i16 154, i16 108, i16 -1, i16 198, i16 61, i16 -3, i16 -1, i16 92, i16 197, i16 13, i16 -7, i16 -3, i16 -1, i16 138, i16 168, i16 -1, i16 153, i16 76, i16 -3, i16 -1, i16 182, i16 122, i16 60, i16 -11, i16 -5, i16 -3, i16 -1, i16 91, i16 137, i16 28, i16 -1, i16 192, i16 -1, i16 152, i16 121, i16 -1, i16 226, i16 -1, i16 46, i16 30, i16 -15, i16 -7, i16 -3, i16 -1, i16 211, i16 45, i16 -1, i16 210, i16 209, i16 -5, i16 -1, i16 59, i16 -1, i16 151, i16 136, i16 29, i16 -7, i16 -3, i16 -1, i16 196, i16 107, i16 -1, i16 195, i16 167, i16 -1, i16 44, i16 -1, i16 194, i16 181, i16 -23, i16 -13, i16 -7, i16 -3, i16 -1, i16 193, i16 12, i16 -1, i16 75, i16 180, i16 -3, i16 -1, i16 106, i16 166, i16 179, i16 -5, i16 -3, i16 -1, i16 90, i16 165, i16 43, i16 -1, i16 178, i16 27, i16 -13, i16 -5, i16 -1, i16 177, i16 -1, i16 11, i16 176, i16 -3, i16 -1, i16 105, i16 150, i16 -1, i16 74, i16 164, i16 -5, i16 -3, i16 -1, i16 120, i16 135, i16 163, i16 -3, i16 -1, i16 58, i16 89, i16 42, i16 -97, i16 -57, i16 -33, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 149, i16 104, i16 161, i16 -3, i16 -1, i16 134, i16 119, i16 148, i16 -5, i16 -3, i16 -1, i16 73, i16 87, i16 103, i16 162, i16 -5, i16 -1, i16 26, i16 -1, i16 10, i16 160, i16 -3, i16 -1, i16 57, i16 147, i16 -1, i16 88, i16 133, i16 -9, i16 -3, i16 -1, i16 41, i16 146, i16 -3, i16 -1, i16 118, i16 9, i16 25, i16 -5, i16 -1, i16 145, i16 -1, i16 144, i16 72, i16 -3, i16 -1, i16 132, i16 117, i16 -1, i16 56, i16 131, i16 -21, i16 -11, i16 -5, i16 -3, i16 -1, i16 102, i16 40, i16 130, i16 -3, i16 -1, i16 71, i16 116, i16 24, i16 -3, i16 -1, i16 129, i16 128, i16 -3, i16 -1, i16 8, i16 86, i16 55, i16 -9, i16 -5, i16 -1, i16 115, i16 -1, i16 101, i16 70, i16 -1, i16 39, i16 114, i16 -5, i16 -3, i16 -1, i16 100, i16 85, i16 7, i16 23, i16 -23, i16 -13, i16 -5, i16 -1, i16 113, i16 -1, i16 112, i16 54, i16 -3, i16 -1, i16 99, i16 69, i16 -1, i16 84, i16 38, i16 -3, i16 -1, i16 98, i16 22, i16 -1, i16 97, i16 -1, i16 6, i16 96, i16 -9, i16 -5, i16 -1, i16 83, i16 -1, i16 53, i16 68, i16 -1, i16 37, i16 82, i16 -1, i16 81, i16 -1, i16 21, i16 5, i16 -33, i16 -23, i16 -13, i16 -7, i16 -3, i16 -1, i16 52, i16 67, i16 -1, i16 80, i16 36, i16 -3, i16 -1, i16 66, i16 51, i16 20, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -3, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 16
@tab24 = internal global [511 x i16] [i16 -451, i16 -117, i16 -43, i16 -25, i16 -15, i16 -7, i16 -3, i16 -1, i16 239, i16 254, i16 -1, i16 223, i16 253, i16 -3, i16 -1, i16 207, i16 252, i16 -1, i16 191, i16 251, i16 -5, i16 -1, i16 250, i16 -1, i16 175, i16 159, i16 -1, i16 249, i16 248, i16 -9, i16 -5, i16 -3, i16 -1, i16 143, i16 127, i16 247, i16 -1, i16 111, i16 246, i16 -3, i16 -1, i16 95, i16 245, i16 -1, i16 79, i16 244, i16 -71, i16 -7, i16 -3, i16 -1, i16 63, i16 243, i16 -1, i16 47, i16 242, i16 -5, i16 -1, i16 241, i16 -1, i16 31, i16 240, i16 -25, i16 -9, i16 -1, i16 15, i16 -3, i16 -1, i16 238, i16 222, i16 -1, i16 237, i16 206, i16 -7, i16 -3, i16 -1, i16 236, i16 221, i16 -1, i16 190, i16 235, i16 -3, i16 -1, i16 205, i16 220, i16 -1, i16 174, i16 234, i16 -15, i16 -7, i16 -3, i16 -1, i16 189, i16 219, i16 -1, i16 204, i16 158, i16 -3, i16 -1, i16 233, i16 173, i16 -1, i16 218, i16 188, i16 -7, i16 -3, i16 -1, i16 203, i16 142, i16 -1, i16 232, i16 157, i16 -3, i16 -1, i16 217, i16 126, i16 -1, i16 231, i16 172, i16 255, i16 -235, i16 -143, i16 -77, i16 -45, i16 -25, i16 -15, i16 -7, i16 -3, i16 -1, i16 202, i16 187, i16 -1, i16 141, i16 216, i16 -5, i16 -3, i16 -1, i16 14, i16 224, i16 13, i16 230, i16 -5, i16 -3, i16 -1, i16 110, i16 156, i16 201, i16 -1, i16 94, i16 186, i16 -9, i16 -5, i16 -1, i16 229, i16 -1, i16 171, i16 125, i16 -1, i16 215, i16 228, i16 -3, i16 -1, i16 140, i16 200, i16 -3, i16 -1, i16 78, i16 46, i16 62, i16 -15, i16 -7, i16 -3, i16 -1, i16 109, i16 214, i16 -1, i16 227, i16 155, i16 -3, i16 -1, i16 185, i16 170, i16 -1, i16 226, i16 30, i16 -7, i16 -3, i16 -1, i16 225, i16 93, i16 -1, i16 213, i16 124, i16 -3, i16 -1, i16 199, i16 77, i16 -1, i16 139, i16 184, i16 -31, i16 -15, i16 -7, i16 -3, i16 -1, i16 212, i16 154, i16 -1, i16 169, i16 108, i16 -3, i16 -1, i16 198, i16 61, i16 -1, i16 211, i16 45, i16 -7, i16 -3, i16 -1, i16 210, i16 29, i16 -1, i16 123, i16 183, i16 -3, i16 -1, i16 209, i16 92, i16 -1, i16 197, i16 138, i16 -17, i16 -7, i16 -3, i16 -1, i16 168, i16 153, i16 -1, i16 76, i16 196, i16 -3, i16 -1, i16 107, i16 182, i16 -3, i16 -1, i16 208, i16 12, i16 60, i16 -7, i16 -3, i16 -1, i16 195, i16 122, i16 -1, i16 167, i16 44, i16 -3, i16 -1, i16 194, i16 91, i16 -1, i16 181, i16 28, i16 -57, i16 -35, i16 -19, i16 -7, i16 -3, i16 -1, i16 137, i16 152, i16 -1, i16 193, i16 75, i16 -5, i16 -3, i16 -1, i16 192, i16 11, i16 59, i16 -3, i16 -1, i16 176, i16 10, i16 26, i16 -5, i16 -1, i16 180, i16 -1, i16 106, i16 166, i16 -3, i16 -1, i16 121, i16 151, i16 -3, i16 -1, i16 160, i16 9, i16 144, i16 -9, i16 -3, i16 -1, i16 179, i16 136, i16 -3, i16 -1, i16 43, i16 90, i16 178, i16 -7, i16 -3, i16 -1, i16 165, i16 27, i16 -1, i16 177, i16 105, i16 -1, i16 150, i16 164, i16 -17, i16 -9, i16 -5, i16 -3, i16 -1, i16 74, i16 120, i16 135, i16 -1, i16 58, i16 163, i16 -3, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -7, i16 -3, i16 -1, i16 161, i16 104, i16 -1, i16 134, i16 119, i16 -3, i16 -1, i16 73, i16 148, i16 -1, i16 57, i16 147, i16 -63, i16 -31, i16 -15, i16 -7, i16 -3, i16 -1, i16 88, i16 133, i16 -1, i16 41, i16 103, i16 -3, i16 -1, i16 118, i16 146, i16 -1, i16 25, i16 145, i16 -7, i16 -3, i16 -1, i16 72, i16 132, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 56, i16 131, i16 -1, i16 102, i16 40, i16 -17, i16 -7, i16 -3, i16 -1, i16 130, i16 24, i16 -1, i16 71, i16 116, i16 -5, i16 -1, i16 129, i16 -1, i16 8, i16 128, i16 -1, i16 86, i16 101, i16 -7, i16 -5, i16 -1, i16 23, i16 -1, i16 7, i16 112, i16 115, i16 -3, i16 -1, i16 55, i16 39, i16 114, i16 -15, i16 -7, i16 -3, i16 -1, i16 70, i16 100, i16 -1, i16 85, i16 113, i16 -3, i16 -1, i16 54, i16 99, i16 -1, i16 69, i16 84, i16 -7, i16 -3, i16 -1, i16 38, i16 98, i16 -1, i16 22, i16 97, i16 -5, i16 -3, i16 -1, i16 6, i16 96, i16 53, i16 -1, i16 83, i16 68, i16 -51, i16 -37, i16 -23, i16 -15, i16 -9, i16 -3, i16 -1, i16 37, i16 82, i16 -1, i16 21, i16 -1, i16 5, i16 80, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 20, i16 -9, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -1, i16 19, i16 49, i16 -7, i16 -5, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 18, i16 -1, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 -1, i16 16, i16 0], align 16
@tab_c0 = internal global [31 x i16] [i16 -29, i16 -21, i16 -13, i16 -7, i16 -3, i16 -1, i16 11, i16 15, i16 -1, i16 13, i16 14, i16 -3, i16 -1, i16 7, i16 5, i16 9, i16 -3, i16 -1, i16 6, i16 3, i16 -1, i16 10, i16 12, i16 -3, i16 -1, i16 2, i16 1, i16 -1, i16 4, i16 8, i16 0], align 16
@tab_c1 = internal global [31 x i16] [i16 -15, i16 -7, i16 -3, i16 -1, i16 15, i16 14, i16 -1, i16 13, i16 12, i16 -3, i16 -1, i16 11, i16 10, i16 -1, i16 9, i16 8, i16 -7, i16 -3, i16 -1, i16 7, i16 6, i16 -1, i16 5, i16 4, i16 -3, i16 -1, i16 3, i16 2, i16 -1, i16 1, i16 0], align 16
@gmp = external global %struct.mpstr*, align 8

; Function Attrs: nounwind uwtable
define void @init_layer3(i32 %down_sample_sblimit) #0 {
entry:
  %down_sample_sblimit.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %sq = alloca double, align 8
  %t = alloca double, align 8
  %base = alloca double, align 8
  %p1 = alloca double, align 8
  %p2 = alloca double, align 8
  %bi = alloca %struct.bandInfoStruct*, align 8
  %mp = alloca i32*, align 8
  %cb = alloca i32, align 4
  %lwin = alloca i32, align 4
  %bdf = alloca i16*, align 8
  %l376 = alloca i32, align 4
  %l413 = alloca i32, align 4
  %n = alloca i32, align 4
  %n575 = alloca i32, align 4
  %n605 = alloca i32, align 4
  %n643 = alloca i32, align 4
  %n682 = alloca i32, align 4
  store i32 %down_sample_sblimit, i32* %down_sample_sblimit.addr, align 4, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 -256, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !1
  %cmp = icmp slt i32 %4, 122
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !tbaa !1
  %add = add nsw i32 %5, 210
  %conv = sitofp i32 %add to double
  %mul = fmul double -2.500000e-01, %conv
  %call = call double @pow(double 2.000000e+00, double %mul) #1
  %6 = load i32, i32* %i, align 4, !tbaa !1
  %add1 = add nsw i32 %6, 256
  %idxprom = sext i32 %add1 to i64
  %arrayidx = getelementptr inbounds [378 x double], [378 x double]* @gainpow2, i32 0, i64 %idxprom
  store double %call, double* %arrayidx, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !tbaa !1
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc.10, %for.end
  %8 = load i32, i32* %i, align 4, !tbaa !1
  %cmp3 = icmp slt i32 %8, 8207
  br i1 %cmp3, label %for.body.5, label %for.end.12

for.body.5:                                       ; preds = %for.cond.2
  %9 = load i32, i32* %i, align 4, !tbaa !1
  %conv6 = sitofp i32 %9 to double
  %call7 = call double @pow(double %conv6, double 0x3FF5555555555555) #1
  %10 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom8
  store double %call7, double* %arrayidx9, align 8, !tbaa !5
  br label %for.inc.10

for.inc.10:                                       ; preds = %for.body.5
  %11 = load i32, i32* %i, align 4, !tbaa !1
  %inc11 = add nsw i32 %11, 1
  store i32 %inc11, i32* %i, align 4, !tbaa !1
  br label %for.cond.2

for.end.12:                                       ; preds = %for.cond.2
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.31, %for.end.12
  %12 = load i32, i32* %i, align 4, !tbaa !1
  %cmp14 = icmp slt i32 %12, 8
  br i1 %cmp14, label %for.body.16, label %for.end.33

for.body.16:                                      ; preds = %for.cond.13
  %13 = bitcast double* %sq to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom17 = sext i32 %14 to i64
  %arrayidx18 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i32 0, i64 %idxprom17
  %15 = load double, double* %arrayidx18, align 8, !tbaa !5
  %16 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom19 = sext i32 %16 to i64
  %arrayidx20 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i32 0, i64 %idxprom19
  %17 = load double, double* %arrayidx20, align 8, !tbaa !5
  %mul21 = fmul double %15, %17
  %add22 = fadd double 1.000000e+00, %mul21
  %call23 = call double @sqrt(double %add22) #1
  store double %call23, double* %sq, align 8, !tbaa !5
  %18 = load double, double* %sq, align 8, !tbaa !5
  %div = fdiv double 1.000000e+00, %18
  %19 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom24 = sext i32 %19 to i64
  %arrayidx25 = getelementptr inbounds [8 x double], [8 x double]* @aa_cs, i32 0, i64 %idxprom24
  store double %div, double* %arrayidx25, align 8, !tbaa !5
  %20 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom26 = sext i32 %20 to i64
  %arrayidx27 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i32 0, i64 %idxprom26
  %21 = load double, double* %arrayidx27, align 8, !tbaa !5
  %22 = load double, double* %sq, align 8, !tbaa !5
  %div28 = fdiv double %21, %22
  %23 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [8 x double], [8 x double]* @aa_ca, i32 0, i64 %idxprom29
  store double %div28, double* %arrayidx30, align 8, !tbaa !5
  %24 = bitcast double* %sq to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  br label %for.inc.31

for.inc.31:                                       ; preds = %for.body.16
  %25 = load i32, i32* %i, align 4, !tbaa !1
  %inc32 = add nsw i32 %25, 1
  store i32 %inc32, i32* %i, align 4, !tbaa !1
  br label %for.cond.13

for.end.33:                                       ; preds = %for.cond.13
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.34

for.cond.34:                                      ; preds = %for.inc.78, %for.end.33
  %26 = load i32, i32* %i, align 4, !tbaa !1
  %cmp35 = icmp slt i32 %26, 18
  br i1 %cmp35, label %for.body.37, label %for.end.80

for.body.37:                                      ; preds = %for.cond.34
  %27 = load i32, i32* %i, align 4, !tbaa !1
  %add38 = add nsw i32 %27, 0
  %mul39 = mul nsw i32 2, %add38
  %add40 = add nsw i32 %mul39, 1
  %conv41 = sitofp i32 %add40 to double
  %mul42 = fmul double 0x3FA657184AE74487, %conv41
  %call43 = call double @sin(double %mul42) #1
  %mul44 = fmul double 5.000000e-01, %call43
  %28 = load i32, i32* %i, align 4, !tbaa !1
  %add45 = add nsw i32 %28, 0
  %mul46 = mul nsw i32 2, %add45
  %add47 = add nsw i32 %mul46, 19
  %conv48 = sitofp i32 %add47 to double
  %mul49 = fmul double 0x400921FB54442D18, %conv48
  %div50 = fdiv double %mul49, 7.200000e+01
  %call51 = call double @cos(double %div50) #1
  %div52 = fdiv double %mul44, %call51
  %29 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom53 = sext i32 %29 to i64
  %arrayidx54 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 1), i32 0, i64 %idxprom53
  store double %div52, double* %arrayidx54, align 8, !tbaa !5
  %30 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom55 = sext i32 %30 to i64
  %arrayidx56 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 0), i32 0, i64 %idxprom55
  store double %div52, double* %arrayidx56, align 8, !tbaa !5
  %31 = load i32, i32* %i, align 4, !tbaa !1
  %add57 = add nsw i32 %31, 18
  %mul58 = mul nsw i32 2, %add57
  %add59 = add nsw i32 %mul58, 1
  %conv60 = sitofp i32 %add59 to double
  %mul61 = fmul double 0x3FA657184AE74487, %conv60
  %call62 = call double @sin(double %mul61) #1
  %mul63 = fmul double 5.000000e-01, %call62
  %32 = load i32, i32* %i, align 4, !tbaa !1
  %add64 = add nsw i32 %32, 18
  %mul65 = mul nsw i32 2, %add64
  %add66 = add nsw i32 %mul65, 19
  %conv67 = sitofp i32 %add66 to double
  %mul68 = fmul double 0x400921FB54442D18, %conv67
  %div69 = fdiv double %mul68, 7.200000e+01
  %call70 = call double @cos(double %div69) #1
  %div71 = fdiv double %mul63, %call70
  %33 = load i32, i32* %i, align 4, !tbaa !1
  %add72 = add nsw i32 %33, 18
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 3), i32 0, i64 %idxprom73
  store double %div71, double* %arrayidx74, align 8, !tbaa !5
  %34 = load i32, i32* %i, align 4, !tbaa !1
  %add75 = add nsw i32 %34, 18
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 0), i32 0, i64 %idxprom76
  store double %div71, double* %arrayidx77, align 8, !tbaa !5
  br label %for.inc.78

for.inc.78:                                       ; preds = %for.body.37
  %35 = load i32, i32* %i, align 4, !tbaa !1
  %inc79 = add nsw i32 %35, 1
  store i32 %inc79, i32* %i, align 4, !tbaa !1
  br label %for.cond.34

for.end.80:                                       ; preds = %for.cond.34
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.81

for.cond.81:                                      ; preds = %for.inc.146, %for.end.80
  %36 = load i32, i32* %i, align 4, !tbaa !1
  %cmp82 = icmp slt i32 %36, 6
  br i1 %cmp82, label %for.body.84, label %for.end.148

for.body.84:                                      ; preds = %for.cond.81
  %37 = load i32, i32* %i, align 4, !tbaa !1
  %add85 = add nsw i32 %37, 18
  %mul86 = mul nsw i32 2, %add85
  %add87 = add nsw i32 %mul86, 19
  %conv88 = sitofp i32 %add87 to double
  %mul89 = fmul double 0x400921FB54442D18, %conv88
  %div90 = fdiv double %mul89, 7.200000e+01
  %call91 = call double @cos(double %div90) #1
  %div92 = fdiv double 5.000000e-01, %call91
  %38 = load i32, i32* %i, align 4, !tbaa !1
  %add93 = add nsw i32 %38, 18
  %idxprom94 = sext i32 %add93 to i64
  %arrayidx95 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 1), i32 0, i64 %idxprom94
  store double %div92, double* %arrayidx95, align 8, !tbaa !5
  %39 = load i32, i32* %i, align 4, !tbaa !1
  %add96 = add nsw i32 %39, 12
  %mul97 = mul nsw i32 2, %add96
  %add98 = add nsw i32 %mul97, 19
  %conv99 = sitofp i32 %add98 to double
  %mul100 = fmul double 0x400921FB54442D18, %conv99
  %div101 = fdiv double %mul100, 7.200000e+01
  %call102 = call double @cos(double %div101) #1
  %div103 = fdiv double 5.000000e-01, %call102
  %40 = load i32, i32* %i, align 4, !tbaa !1
  %add104 = add nsw i32 %40, 12
  %idxprom105 = sext i32 %add104 to i64
  %arrayidx106 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 3), i32 0, i64 %idxprom105
  store double %div103, double* %arrayidx106, align 8, !tbaa !5
  %41 = load i32, i32* %i, align 4, !tbaa !1
  %mul107 = mul nsw i32 2, %41
  %add108 = add nsw i32 %mul107, 13
  %conv109 = sitofp i32 %add108 to double
  %mul110 = fmul double 0x3FC0C152382D7365, %conv109
  %call111 = call double @sin(double %mul110) #1
  %mul112 = fmul double 5.000000e-01, %call111
  %42 = load i32, i32* %i, align 4, !tbaa !1
  %add113 = add nsw i32 %42, 24
  %mul114 = mul nsw i32 2, %add113
  %add115 = add nsw i32 %mul114, 19
  %conv116 = sitofp i32 %add115 to double
  %mul117 = fmul double 0x400921FB54442D18, %conv116
  %div118 = fdiv double %mul117, 7.200000e+01
  %call119 = call double @cos(double %div118) #1
  %div120 = fdiv double %mul112, %call119
  %43 = load i32, i32* %i, align 4, !tbaa !1
  %add121 = add nsw i32 %43, 24
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 1), i32 0, i64 %idxprom122
  store double %div120, double* %arrayidx123, align 8, !tbaa !5
  %44 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom124 = sext i32 %44 to i64
  %arrayidx125 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 3), i32 0, i64 %idxprom124
  store double 0.000000e+00, double* %arrayidx125, align 8, !tbaa !5
  %45 = load i32, i32* %i, align 4, !tbaa !1
  %add126 = add nsw i32 %45, 30
  %idxprom127 = sext i32 %add126 to i64
  %arrayidx128 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 1), i32 0, i64 %idxprom127
  store double 0.000000e+00, double* %arrayidx128, align 8, !tbaa !5
  %46 = load i32, i32* %i, align 4, !tbaa !1
  %mul129 = mul nsw i32 2, %46
  %add130 = add nsw i32 %mul129, 1
  %conv131 = sitofp i32 %add130 to double
  %mul132 = fmul double 0x3FC0C152382D7365, %conv131
  %call133 = call double @sin(double %mul132) #1
  %mul134 = fmul double 5.000000e-01, %call133
  %47 = load i32, i32* %i, align 4, !tbaa !1
  %add135 = add nsw i32 %47, 6
  %mul136 = mul nsw i32 2, %add135
  %add137 = add nsw i32 %mul136, 19
  %conv138 = sitofp i32 %add137 to double
  %mul139 = fmul double 0x400921FB54442D18, %conv138
  %div140 = fdiv double %mul139, 7.200000e+01
  %call141 = call double @cos(double %div140) #1
  %div142 = fdiv double %mul134, %call141
  %48 = load i32, i32* %i, align 4, !tbaa !1
  %add143 = add nsw i32 %48, 6
  %idxprom144 = sext i32 %add143 to i64
  %arrayidx145 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 3), i32 0, i64 %idxprom144
  store double %div142, double* %arrayidx145, align 8, !tbaa !5
  br label %for.inc.146

for.inc.146:                                      ; preds = %for.body.84
  %49 = load i32, i32* %i, align 4, !tbaa !1
  %inc147 = add nsw i32 %49, 1
  store i32 %inc147, i32* %i, align 4, !tbaa !1
  br label %for.cond.81

for.end.148:                                      ; preds = %for.cond.81
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.149

for.cond.149:                                     ; preds = %for.inc.158, %for.end.148
  %50 = load i32, i32* %i, align 4, !tbaa !1
  %cmp150 = icmp slt i32 %50, 9
  br i1 %cmp150, label %for.body.152, label %for.end.160

for.body.152:                                     ; preds = %for.cond.149
  %51 = load i32, i32* %i, align 4, !tbaa !1
  %conv153 = sitofp i32 %51 to double
  %mul154 = fmul double 0x3FC657184AE74487, %conv153
  %call155 = call double @cos(double %mul154) #1
  %52 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom156 = sext i32 %52 to i64
  %arrayidx157 = getelementptr inbounds [9 x double], [9 x double]* @COS9, i32 0, i64 %idxprom156
  store double %call155, double* %arrayidx157, align 8, !tbaa !5
  br label %for.inc.158

for.inc.158:                                      ; preds = %for.body.152
  %53 = load i32, i32* %i, align 4, !tbaa !1
  %inc159 = add nsw i32 %53, 1
  store i32 %inc159, i32* %i, align 4, !tbaa !1
  br label %for.cond.149

for.end.160:                                      ; preds = %for.cond.149
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.161

for.cond.161:                                     ; preds = %for.inc.174, %for.end.160
  %54 = load i32, i32* %i, align 4, !tbaa !1
  %cmp162 = icmp slt i32 %54, 9
  br i1 %cmp162, label %for.body.164, label %for.end.176

for.body.164:                                     ; preds = %for.cond.161
  %55 = load i32, i32* %i, align 4, !tbaa !1
  %mul165 = mul nsw i32 %55, 2
  %add166 = add nsw i32 %mul165, 1
  %conv167 = sitofp i32 %add166 to double
  %mul168 = fmul double 0x400921FB54442D18, %conv167
  %div169 = fdiv double %mul168, 3.600000e+01
  %call170 = call double @cos(double %div169) #1
  %div171 = fdiv double 5.000000e-01, %call170
  %56 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom172 = sext i32 %56 to i64
  %arrayidx173 = getelementptr inbounds [9 x double], [9 x double]* @tfcos36, i32 0, i64 %idxprom172
  store double %div171, double* %arrayidx173, align 8, !tbaa !5
  br label %for.inc.174

for.inc.174:                                      ; preds = %for.body.164
  %57 = load i32, i32* %i, align 4, !tbaa !1
  %inc175 = add nsw i32 %57, 1
  store i32 %inc175, i32* %i, align 4, !tbaa !1
  br label %for.cond.161

for.end.176:                                      ; preds = %for.cond.161
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.177

for.cond.177:                                     ; preds = %for.inc.190, %for.end.176
  %58 = load i32, i32* %i, align 4, !tbaa !1
  %cmp178 = icmp slt i32 %58, 3
  br i1 %cmp178, label %for.body.180, label %for.end.192

for.body.180:                                     ; preds = %for.cond.177
  %59 = load i32, i32* %i, align 4, !tbaa !1
  %mul181 = mul nsw i32 %59, 2
  %add182 = add nsw i32 %mul181, 1
  %conv183 = sitofp i32 %add182 to double
  %mul184 = fmul double 0x400921FB54442D18, %conv183
  %div185 = fdiv double %mul184, 1.200000e+01
  %call186 = call double @cos(double %div185) #1
  %div187 = fdiv double 5.000000e-01, %call186
  %60 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom188 = sext i32 %60 to i64
  %arrayidx189 = getelementptr inbounds [3 x double], [3 x double]* @tfcos12, i32 0, i64 %idxprom188
  store double %div187, double* %arrayidx189, align 8, !tbaa !5
  br label %for.inc.190

for.inc.190:                                      ; preds = %for.body.180
  %61 = load i32, i32* %i, align 4, !tbaa !1
  %inc191 = add nsw i32 %61, 1
  store i32 %inc191, i32* %i, align 4, !tbaa !1
  br label %for.cond.177

for.end.192:                                      ; preds = %for.cond.177
  %call193 = call double @cos(double 0x3FE0C152382D7365) #1
  store double %call193, double* @COS6_1, align 8, !tbaa !5
  %call194 = call double @cos(double 0x3FF0C152382D7365) #1
  store double %call194, double* @COS6_2, align 8, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.233, %for.end.192
  %62 = load i32, i32* %i, align 4, !tbaa !1
  %cmp196 = icmp slt i32 %62, 12
  br i1 %cmp196, label %for.body.198, label %for.end.235

for.body.198:                                     ; preds = %for.cond.195
  %63 = load i32, i32* %i, align 4, !tbaa !1
  %mul199 = mul nsw i32 2, %63
  %add200 = add nsw i32 %mul199, 1
  %conv201 = sitofp i32 %add200 to double
  %mul202 = fmul double 0x3FC0C152382D7365, %conv201
  %call203 = call double @sin(double %mul202) #1
  %mul204 = fmul double 5.000000e-01, %call203
  %64 = load i32, i32* %i, align 4, !tbaa !1
  %mul205 = mul nsw i32 2, %64
  %add206 = add nsw i32 %mul205, 7
  %conv207 = sitofp i32 %add206 to double
  %mul208 = fmul double 0x400921FB54442D18, %conv207
  %div209 = fdiv double %mul208, 2.400000e+01
  %call210 = call double @cos(double %div209) #1
  %div211 = fdiv double %mul204, %call210
  %65 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom212 = sext i32 %65 to i64
  %arrayidx213 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 2), i32 0, i64 %idxprom212
  store double %div211, double* %arrayidx213, align 8, !tbaa !5
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.214

for.cond.214:                                     ; preds = %for.inc.230, %for.body.198
  %66 = load i32, i32* %j, align 4, !tbaa !1
  %cmp215 = icmp slt i32 %66, 6
  br i1 %cmp215, label %for.body.217, label %for.end.232

for.body.217:                                     ; preds = %for.cond.214
  %67 = load i32, i32* %i, align 4, !tbaa !1
  %mul218 = mul nsw i32 2, %67
  %add219 = add nsw i32 %mul218, 7
  %68 = load i32, i32* %j, align 4, !tbaa !1
  %mul220 = mul nsw i32 2, %68
  %add221 = add nsw i32 %mul220, 1
  %mul222 = mul nsw i32 %add219, %add221
  %conv223 = sitofp i32 %mul222 to double
  %mul224 = fmul double 0x3FC0C152382D7365, %conv223
  %call225 = call double @cos(double %mul224) #1
  %69 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom226 = sext i32 %69 to i64
  %70 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom227 = sext i32 %70 to i64
  %arrayidx228 = getelementptr inbounds [12 x [6 x double]], [12 x [6 x double]]* @COS1, i32 0, i64 %idxprom227
  %arrayidx229 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx228, i32 0, i64 %idxprom226
  store double %call225, double* %arrayidx229, align 8, !tbaa !5
  br label %for.inc.230

for.inc.230:                                      ; preds = %for.body.217
  %71 = load i32, i32* %j, align 4, !tbaa !1
  %inc231 = add nsw i32 %71, 1
  store i32 %inc231, i32* %j, align 4, !tbaa !1
  br label %for.cond.214

for.end.232:                                      ; preds = %for.cond.214
  br label %for.inc.233

for.inc.233:                                      ; preds = %for.end.232
  %72 = load i32, i32* %i, align 4, !tbaa !1
  %inc234 = add nsw i32 %72, 1
  store i32 %inc234, i32* %i, align 4, !tbaa !1
  br label %for.cond.195

for.end.235:                                      ; preds = %for.cond.195
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.236

for.cond.236:                                     ; preds = %for.inc.274, %for.end.235
  %73 = load i32, i32* %j, align 4, !tbaa !1
  %cmp237 = icmp slt i32 %73, 4
  br i1 %cmp237, label %for.body.239, label %for.end.276

for.body.239:                                     ; preds = %for.cond.236
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.240

for.cond.240:                                     ; preds = %for.inc.254, %for.body.239
  %74 = load i32, i32* %i, align 4, !tbaa !1
  %75 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom241 = sext i32 %75 to i64
  %arrayidx242 = getelementptr inbounds [4 x i32], [4 x i32]* @init_layer3.len, i32 0, i64 %idxprom241
  %76 = load i32, i32* %arrayidx242, align 4, !tbaa !1
  %cmp243 = icmp slt i32 %74, %76
  br i1 %cmp243, label %for.body.245, label %for.end.256

for.body.245:                                     ; preds = %for.cond.240
  %77 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom246 = sext i32 %77 to i64
  %78 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom247 = sext i32 %78 to i64
  %arrayidx248 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx248, i32 0, i64 %idxprom246
  %79 = load double, double* %arrayidx249, align 8, !tbaa !5
  %80 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom250 = sext i32 %80 to i64
  %81 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom251 = sext i32 %81 to i64
  %arrayidx252 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i32 0, i64 %idxprom251
  %arrayidx253 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx252, i32 0, i64 %idxprom250
  store double %79, double* %arrayidx253, align 8, !tbaa !5
  br label %for.inc.254

for.inc.254:                                      ; preds = %for.body.245
  %82 = load i32, i32* %i, align 4, !tbaa !1
  %add255 = add nsw i32 %82, 2
  store i32 %add255, i32* %i, align 4, !tbaa !1
  br label %for.cond.240

for.end.256:                                      ; preds = %for.cond.240
  store i32 1, i32* %i, align 4, !tbaa !1
  br label %for.cond.257

for.cond.257:                                     ; preds = %for.inc.271, %for.end.256
  %83 = load i32, i32* %i, align 4, !tbaa !1
  %84 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom258 = sext i32 %84 to i64
  %arrayidx259 = getelementptr inbounds [4 x i32], [4 x i32]* @init_layer3.len, i32 0, i64 %idxprom258
  %85 = load i32, i32* %arrayidx259, align 4, !tbaa !1
  %cmp260 = icmp slt i32 %83, %85
  br i1 %cmp260, label %for.body.262, label %for.end.273

for.body.262:                                     ; preds = %for.cond.257
  %86 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom263 = sext i32 %86 to i64
  %87 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom264 = sext i32 %87 to i64
  %arrayidx265 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 %idxprom264
  %arrayidx266 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx265, i32 0, i64 %idxprom263
  %88 = load double, double* %arrayidx266, align 8, !tbaa !5
  %sub = fsub double -0.000000e+00, %88
  %89 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom267 = sext i32 %89 to i64
  %90 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom268 = sext i32 %90 to i64
  %arrayidx269 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i32 0, i64 %idxprom268
  %arrayidx270 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx269, i32 0, i64 %idxprom267
  store double %sub, double* %arrayidx270, align 8, !tbaa !5
  br label %for.inc.271

for.inc.271:                                      ; preds = %for.body.262
  %91 = load i32, i32* %i, align 4, !tbaa !1
  %add272 = add nsw i32 %91, 2
  store i32 %add272, i32* %i, align 4, !tbaa !1
  br label %for.cond.257

for.end.273:                                      ; preds = %for.cond.257
  br label %for.inc.274

for.inc.274:                                      ; preds = %for.end.273
  %92 = load i32, i32* %j, align 4, !tbaa !1
  %inc275 = add nsw i32 %92, 1
  store i32 %inc275, i32* %j, align 4, !tbaa !1
  br label %for.cond.236

for.end.276:                                      ; preds = %for.cond.236
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.342, %for.end.276
  %93 = load i32, i32* %i, align 4, !tbaa !1
  %cmp278 = icmp slt i32 %93, 16
  br i1 %cmp278, label %for.body.280, label %for.end.344

for.body.280:                                     ; preds = %for.cond.277
  %94 = bitcast double* %t to i8*
  call void @llvm.lifetime.start(i64 8, i8* %94) #1
  %95 = load i32, i32* %i, align 4, !tbaa !1
  %conv281 = sitofp i32 %95 to double
  %mul282 = fmul double %conv281, 0x400921FB54442D18
  %div283 = fdiv double %mul282, 1.200000e+01
  %call284 = call double @tan(double %div283) #1
  store double %call284, double* %t, align 8, !tbaa !5
  %96 = load double, double* %t, align 8, !tbaa !5
  %97 = load double, double* %t, align 8, !tbaa !5
  %add285 = fadd double 1.000000e+00, %97
  %div286 = fdiv double %96, %add285
  %98 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom287 = sext i32 %98 to i64
  %arrayidx288 = getelementptr inbounds [16 x double], [16 x double]* @tan1_1, i32 0, i64 %idxprom287
  store double %div286, double* %arrayidx288, align 8, !tbaa !5
  %99 = load double, double* %t, align 8, !tbaa !5
  %add289 = fadd double 1.000000e+00, %99
  %div290 = fdiv double 1.000000e+00, %add289
  %100 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom291 = sext i32 %100 to i64
  %arrayidx292 = getelementptr inbounds [16 x double], [16 x double]* @tan2_1, i32 0, i64 %idxprom291
  store double %div290, double* %arrayidx292, align 8, !tbaa !5
  %101 = load double, double* %t, align 8, !tbaa !5
  %mul293 = fmul double 0x3FF6A09E667F3BCD, %101
  %102 = load double, double* %t, align 8, !tbaa !5
  %add294 = fadd double 1.000000e+00, %102
  %div295 = fdiv double %mul293, %add294
  %103 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom296 = sext i32 %103 to i64
  %arrayidx297 = getelementptr inbounds [16 x double], [16 x double]* @tan1_2, i32 0, i64 %idxprom296
  store double %div295, double* %arrayidx297, align 8, !tbaa !5
  %104 = load double, double* %t, align 8, !tbaa !5
  %add298 = fadd double 1.000000e+00, %104
  %div299 = fdiv double 0x3FF6A09E667F3BCD, %add298
  %105 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom300 = sext i32 %105 to i64
  %arrayidx301 = getelementptr inbounds [16 x double], [16 x double]* @tan2_2, i32 0, i64 %idxprom300
  store double %div299, double* %arrayidx301, align 8, !tbaa !5
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.302

for.cond.302:                                     ; preds = %for.inc.339, %for.body.280
  %106 = load i32, i32* %j, align 4, !tbaa !1
  %cmp303 = icmp slt i32 %106, 2
  br i1 %cmp303, label %for.body.305, label %for.end.341

for.body.305:                                     ; preds = %for.cond.302
  %107 = bitcast double* %base to i8*
  call void @llvm.lifetime.start(i64 8, i8* %107) #1
  %108 = load i32, i32* %j, align 4, !tbaa !1
  %conv306 = sitofp i32 %108 to double
  %add307 = fadd double %conv306, 1.000000e+00
  %mul308 = fmul double -2.500000e-01, %add307
  %call309 = call double @pow(double 2.000000e+00, double %mul308) #1
  store double %call309, double* %base, align 8, !tbaa !5
  %109 = bitcast double* %p1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %109) #1
  store double 1.000000e+00, double* %p1, align 8, !tbaa !5
  %110 = bitcast double* %p2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %110) #1
  store double 1.000000e+00, double* %p2, align 8, !tbaa !5
  %111 = load i32, i32* %i, align 4, !tbaa !1
  %cmp310 = icmp sgt i32 %111, 0
  br i1 %cmp310, label %if.then, label %if.end.320

if.then:                                          ; preds = %for.body.305
  %112 = load i32, i32* %i, align 4, !tbaa !1
  %and = and i32 %112, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.312, label %if.else

if.then.312:                                      ; preds = %if.then
  %113 = load double, double* %base, align 8, !tbaa !5
  %114 = load i32, i32* %i, align 4, !tbaa !1
  %conv313 = sitofp i32 %114 to double
  %add314 = fadd double %conv313, 1.000000e+00
  %mul315 = fmul double %add314, 5.000000e-01
  %call316 = call double @pow(double %113, double %mul315) #1
  store double %call316, double* %p1, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %if.then
  %115 = load double, double* %base, align 8, !tbaa !5
  %116 = load i32, i32* %i, align 4, !tbaa !1
  %conv317 = sitofp i32 %116 to double
  %mul318 = fmul double %conv317, 5.000000e-01
  %call319 = call double @pow(double %115, double %mul318) #1
  store double %call319, double* %p2, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.312
  br label %if.end.320

if.end.320:                                       ; preds = %if.end, %for.body.305
  %117 = load double, double* %p1, align 8, !tbaa !5
  %118 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom321 = sext i32 %118 to i64
  %119 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom322 = sext i32 %119 to i64
  %arrayidx323 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_1, i32 0, i64 %idxprom322
  %arrayidx324 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx323, i32 0, i64 %idxprom321
  store double %117, double* %arrayidx324, align 8, !tbaa !5
  %120 = load double, double* %p2, align 8, !tbaa !5
  %121 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom325 = sext i32 %121 to i64
  %122 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom326 = sext i32 %122 to i64
  %arrayidx327 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_1, i32 0, i64 %idxprom326
  %arrayidx328 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx327, i32 0, i64 %idxprom325
  store double %120, double* %arrayidx328, align 8, !tbaa !5
  %123 = load double, double* %p1, align 8, !tbaa !5
  %mul329 = fmul double 0x3FF6A09E667F3BCD, %123
  %124 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom330 = sext i32 %124 to i64
  %125 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom331 = sext i32 %125 to i64
  %arrayidx332 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_2, i32 0, i64 %idxprom331
  %arrayidx333 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx332, i32 0, i64 %idxprom330
  store double %mul329, double* %arrayidx333, align 8, !tbaa !5
  %126 = load double, double* %p2, align 8, !tbaa !5
  %mul334 = fmul double 0x3FF6A09E667F3BCD, %126
  %127 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom335 = sext i32 %127 to i64
  %128 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom336 = sext i32 %128 to i64
  %arrayidx337 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_2, i32 0, i64 %idxprom336
  %arrayidx338 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx337, i32 0, i64 %idxprom335
  store double %mul334, double* %arrayidx338, align 8, !tbaa !5
  %129 = bitcast double* %p2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  %130 = bitcast double* %p1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %130) #1
  %131 = bitcast double* %base to i8*
  call void @llvm.lifetime.end(i64 8, i8* %131) #1
  br label %for.inc.339

for.inc.339:                                      ; preds = %if.end.320
  %132 = load i32, i32* %j, align 4, !tbaa !1
  %inc340 = add nsw i32 %132, 1
  store i32 %inc340, i32* %j, align 4, !tbaa !1
  br label %for.cond.302

for.end.341:                                      ; preds = %for.cond.302
  %133 = bitcast double* %t to i8*
  call void @llvm.lifetime.end(i64 8, i8* %133) #1
  br label %for.inc.342

for.inc.342:                                      ; preds = %for.end.341
  %134 = load i32, i32* %i, align 4, !tbaa !1
  %inc343 = add nsw i32 %134, 1
  store i32 %inc343, i32* %i, align 4, !tbaa !1
  br label %for.cond.277

for.end.344:                                      ; preds = %for.cond.277
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.345

for.cond.345:                                     ; preds = %for.inc.460, %for.end.344
  %135 = load i32, i32* %j, align 4, !tbaa !1
  %cmp346 = icmp slt i32 %135, 9
  br i1 %cmp346, label %for.body.348, label %for.end.462

for.body.348:                                     ; preds = %for.cond.345
  %136 = bitcast %struct.bandInfoStruct** %bi to i8*
  call void @llvm.lifetime.start(i64 8, i8* %136) #1
  %137 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom349 = sext i32 %137 to i64
  %arrayidx350 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %idxprom349
  store %struct.bandInfoStruct* %arrayidx350, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %138 = bitcast i32** %mp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %138) #1
  %139 = bitcast i32* %cb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %139) #1
  %140 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %140) #1
  %141 = bitcast i16** %bdf to i8*
  call void @llvm.lifetime.start(i64 8, i8* %141) #1
  %142 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom351 = sext i32 %142 to i64
  %arrayidx352 = getelementptr inbounds [9 x [152 x i32]], [9 x [152 x i32]]* @mapbuf0, i32 0, i64 %idxprom351
  %arraydecay = getelementptr inbounds [152 x i32], [152 x i32]* %arrayidx352, i32 0, i32 0
  %143 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom353 = sext i32 %143 to i64
  %arrayidx354 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom353
  %arrayidx355 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx354, i32 0, i64 0
  store i32* %arraydecay, i32** %arrayidx355, align 8, !tbaa !7
  store i32* %arraydecay, i32** %mp, align 8, !tbaa !7
  %144 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longDiff = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %144, i32 0, i32 1
  %arraydecay356 = getelementptr inbounds [22 x i16], [22 x i16]* %longDiff, i32 0, i32 0
  store i16* %arraydecay356, i16** %bdf, align 8, !tbaa !7
  store i32 0, i32* %i, align 4, !tbaa !1
  store i32 0, i32* %cb, align 4, !tbaa !1
  br label %for.cond.357

for.cond.357:                                     ; preds = %for.inc.365, %for.body.348
  %145 = load i32, i32* %cb, align 4, !tbaa !1
  %cmp358 = icmp slt i32 %145, 8
  br i1 %cmp358, label %for.body.360, label %for.end.370

for.body.360:                                     ; preds = %for.cond.357
  %146 = load i16*, i16** %bdf, align 8, !tbaa !7
  %147 = load i16, i16* %146, align 2, !tbaa !9
  %conv361 = sext i16 %147 to i32
  %shr = ashr i32 %conv361, 1
  %148 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds i32, i32* %148, i32 1
  store i32* %incdec.ptr, i32** %mp, align 8, !tbaa !7
  store i32 %shr, i32* %148, align 4, !tbaa !1
  %149 = load i32, i32* %i, align 4, !tbaa !1
  %150 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr362 = getelementptr inbounds i32, i32* %150, i32 1
  store i32* %incdec.ptr362, i32** %mp, align 8, !tbaa !7
  store i32 %149, i32* %150, align 4, !tbaa !1
  %151 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr363 = getelementptr inbounds i32, i32* %151, i32 1
  store i32* %incdec.ptr363, i32** %mp, align 8, !tbaa !7
  store i32 3, i32* %151, align 4, !tbaa !1
  %152 = load i32, i32* %cb, align 4, !tbaa !1
  %153 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr364 = getelementptr inbounds i32, i32* %153, i32 1
  store i32* %incdec.ptr364, i32** %mp, align 8, !tbaa !7
  store i32 %152, i32* %153, align 4, !tbaa !1
  br label %for.inc.365

for.inc.365:                                      ; preds = %for.body.360
  %154 = load i32, i32* %cb, align 4, !tbaa !1
  %inc366 = add nsw i32 %154, 1
  store i32 %inc366, i32* %cb, align 4, !tbaa !1
  %155 = load i16*, i16** %bdf, align 8, !tbaa !7
  %incdec.ptr367 = getelementptr inbounds i16, i16* %155, i32 1
  store i16* %incdec.ptr367, i16** %bdf, align 8, !tbaa !7
  %156 = load i16, i16* %155, align 2, !tbaa !9
  %conv368 = sext i16 %156 to i32
  %157 = load i32, i32* %i, align 4, !tbaa !1
  %add369 = add nsw i32 %157, %conv368
  store i32 %add369, i32* %i, align 4, !tbaa !1
  br label %for.cond.357

for.end.370:                                      ; preds = %for.cond.357
  %158 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortDiff = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %158, i32 0, i32 3
  %arraydecay371 = getelementptr inbounds [13 x i16], [13 x i16]* %shortDiff, i32 0, i32 0
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay371, i64 3
  store i16* %add.ptr, i16** %bdf, align 8, !tbaa !7
  store i32 3, i32* %cb, align 4, !tbaa !1
  br label %for.cond.372

for.cond.372:                                     ; preds = %for.inc.394, %for.end.370
  %159 = load i32, i32* %cb, align 4, !tbaa !1
  %cmp373 = icmp slt i32 %159, 13
  br i1 %cmp373, label %for.body.375, label %for.end.396

for.body.375:                                     ; preds = %for.cond.372
  %160 = bitcast i32* %l376 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %160) #1
  %161 = load i16*, i16** %bdf, align 8, !tbaa !7
  %incdec.ptr377 = getelementptr inbounds i16, i16* %161, i32 1
  store i16* %incdec.ptr377, i16** %bdf, align 8, !tbaa !7
  %162 = load i16, i16* %161, align 2, !tbaa !9
  %conv378 = sext i16 %162 to i32
  %shr379 = ashr i32 %conv378, 1
  store i32 %shr379, i32* %l376, align 4, !tbaa !1
  store i32 0, i32* %lwin, align 4, !tbaa !1
  br label %for.cond.380

for.cond.380:                                     ; preds = %for.inc.389, %for.body.375
  %163 = load i32, i32* %lwin, align 4, !tbaa !1
  %cmp381 = icmp slt i32 %163, 3
  br i1 %cmp381, label %for.body.383, label %for.end.391

for.body.383:                                     ; preds = %for.cond.380
  %164 = load i32, i32* %l376, align 4, !tbaa !1
  %165 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr384 = getelementptr inbounds i32, i32* %165, i32 1
  store i32* %incdec.ptr384, i32** %mp, align 8, !tbaa !7
  store i32 %164, i32* %165, align 4, !tbaa !1
  %166 = load i32, i32* %i, align 4, !tbaa !1
  %167 = load i32, i32* %lwin, align 4, !tbaa !1
  %add385 = add nsw i32 %166, %167
  %168 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr386 = getelementptr inbounds i32, i32* %168, i32 1
  store i32* %incdec.ptr386, i32** %mp, align 8, !tbaa !7
  store i32 %add385, i32* %168, align 4, !tbaa !1
  %169 = load i32, i32* %lwin, align 4, !tbaa !1
  %170 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr387 = getelementptr inbounds i32, i32* %170, i32 1
  store i32* %incdec.ptr387, i32** %mp, align 8, !tbaa !7
  store i32 %169, i32* %170, align 4, !tbaa !1
  %171 = load i32, i32* %cb, align 4, !tbaa !1
  %172 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr388 = getelementptr inbounds i32, i32* %172, i32 1
  store i32* %incdec.ptr388, i32** %mp, align 8, !tbaa !7
  store i32 %171, i32* %172, align 4, !tbaa !1
  br label %for.inc.389

for.inc.389:                                      ; preds = %for.body.383
  %173 = load i32, i32* %lwin, align 4, !tbaa !1
  %inc390 = add nsw i32 %173, 1
  store i32 %inc390, i32* %lwin, align 4, !tbaa !1
  br label %for.cond.380

for.end.391:                                      ; preds = %for.cond.380
  %174 = load i32, i32* %l376, align 4, !tbaa !1
  %mul392 = mul nsw i32 6, %174
  %175 = load i32, i32* %i, align 4, !tbaa !1
  %add393 = add nsw i32 %175, %mul392
  store i32 %add393, i32* %i, align 4, !tbaa !1
  %176 = bitcast i32* %l376 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %176) #1
  br label %for.inc.394

for.inc.394:                                      ; preds = %for.end.391
  %177 = load i32, i32* %cb, align 4, !tbaa !1
  %inc395 = add nsw i32 %177, 1
  store i32 %inc395, i32* %cb, align 4, !tbaa !1
  br label %for.cond.372

for.end.396:                                      ; preds = %for.cond.372
  %178 = load i32*, i32** %mp, align 8, !tbaa !7
  %179 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom397 = sext i32 %179 to i64
  %arrayidx398 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i32 0, i64 %idxprom397
  %arrayidx399 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx398, i32 0, i64 0
  store i32* %178, i32** %arrayidx399, align 8, !tbaa !7
  %180 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom400 = sext i32 %180 to i64
  %arrayidx401 = getelementptr inbounds [9 x [156 x i32]], [9 x [156 x i32]]* @mapbuf1, i32 0, i64 %idxprom400
  %arraydecay402 = getelementptr inbounds [156 x i32], [156 x i32]* %arrayidx401, i32 0, i32 0
  %181 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom403 = sext i32 %181 to i64
  %arrayidx404 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom403
  %arrayidx405 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx404, i32 0, i64 1
  store i32* %arraydecay402, i32** %arrayidx405, align 8, !tbaa !7
  store i32* %arraydecay402, i32** %mp, align 8, !tbaa !7
  %182 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortDiff406 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %182, i32 0, i32 3
  %arraydecay407 = getelementptr inbounds [13 x i16], [13 x i16]* %shortDiff406, i32 0, i32 0
  %add.ptr408 = getelementptr inbounds i16, i16* %arraydecay407, i64 0
  store i16* %add.ptr408, i16** %bdf, align 8, !tbaa !7
  store i32 0, i32* %i, align 4, !tbaa !1
  store i32 0, i32* %cb, align 4, !tbaa !1
  br label %for.cond.409

for.cond.409:                                     ; preds = %for.inc.431, %for.end.396
  %183 = load i32, i32* %cb, align 4, !tbaa !1
  %cmp410 = icmp slt i32 %183, 13
  br i1 %cmp410, label %for.body.412, label %for.end.433

for.body.412:                                     ; preds = %for.cond.409
  %184 = bitcast i32* %l413 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184) #1
  %185 = load i16*, i16** %bdf, align 8, !tbaa !7
  %incdec.ptr414 = getelementptr inbounds i16, i16* %185, i32 1
  store i16* %incdec.ptr414, i16** %bdf, align 8, !tbaa !7
  %186 = load i16, i16* %185, align 2, !tbaa !9
  %conv415 = sext i16 %186 to i32
  %shr416 = ashr i32 %conv415, 1
  store i32 %shr416, i32* %l413, align 4, !tbaa !1
  store i32 0, i32* %lwin, align 4, !tbaa !1
  br label %for.cond.417

for.cond.417:                                     ; preds = %for.inc.426, %for.body.412
  %187 = load i32, i32* %lwin, align 4, !tbaa !1
  %cmp418 = icmp slt i32 %187, 3
  br i1 %cmp418, label %for.body.420, label %for.end.428

for.body.420:                                     ; preds = %for.cond.417
  %188 = load i32, i32* %l413, align 4, !tbaa !1
  %189 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr421 = getelementptr inbounds i32, i32* %189, i32 1
  store i32* %incdec.ptr421, i32** %mp, align 8, !tbaa !7
  store i32 %188, i32* %189, align 4, !tbaa !1
  %190 = load i32, i32* %i, align 4, !tbaa !1
  %191 = load i32, i32* %lwin, align 4, !tbaa !1
  %add422 = add nsw i32 %190, %191
  %192 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr423 = getelementptr inbounds i32, i32* %192, i32 1
  store i32* %incdec.ptr423, i32** %mp, align 8, !tbaa !7
  store i32 %add422, i32* %192, align 4, !tbaa !1
  %193 = load i32, i32* %lwin, align 4, !tbaa !1
  %194 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr424 = getelementptr inbounds i32, i32* %194, i32 1
  store i32* %incdec.ptr424, i32** %mp, align 8, !tbaa !7
  store i32 %193, i32* %194, align 4, !tbaa !1
  %195 = load i32, i32* %cb, align 4, !tbaa !1
  %196 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr425 = getelementptr inbounds i32, i32* %196, i32 1
  store i32* %incdec.ptr425, i32** %mp, align 8, !tbaa !7
  store i32 %195, i32* %196, align 4, !tbaa !1
  br label %for.inc.426

for.inc.426:                                      ; preds = %for.body.420
  %197 = load i32, i32* %lwin, align 4, !tbaa !1
  %inc427 = add nsw i32 %197, 1
  store i32 %inc427, i32* %lwin, align 4, !tbaa !1
  br label %for.cond.417

for.end.428:                                      ; preds = %for.cond.417
  %198 = load i32, i32* %l413, align 4, !tbaa !1
  %mul429 = mul nsw i32 6, %198
  %199 = load i32, i32* %i, align 4, !tbaa !1
  %add430 = add nsw i32 %199, %mul429
  store i32 %add430, i32* %i, align 4, !tbaa !1
  %200 = bitcast i32* %l413 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %200) #1
  br label %for.inc.431

for.inc.431:                                      ; preds = %for.end.428
  %201 = load i32, i32* %cb, align 4, !tbaa !1
  %inc432 = add nsw i32 %201, 1
  store i32 %inc432, i32* %cb, align 4, !tbaa !1
  br label %for.cond.409

for.end.433:                                      ; preds = %for.cond.409
  %202 = load i32*, i32** %mp, align 8, !tbaa !7
  %203 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom434 = sext i32 %203 to i64
  %arrayidx435 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i32 0, i64 %idxprom434
  %arrayidx436 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx435, i32 0, i64 1
  store i32* %202, i32** %arrayidx436, align 8, !tbaa !7
  %204 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom437 = sext i32 %204 to i64
  %arrayidx438 = getelementptr inbounds [9 x [44 x i32]], [9 x [44 x i32]]* @mapbuf2, i32 0, i64 %idxprom437
  %arraydecay439 = getelementptr inbounds [44 x i32], [44 x i32]* %arrayidx438, i32 0, i32 0
  %205 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom440 = sext i32 %205 to i64
  %arrayidx441 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom440
  %arrayidx442 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx441, i32 0, i64 2
  store i32* %arraydecay439, i32** %arrayidx442, align 8, !tbaa !7
  store i32* %arraydecay439, i32** %mp, align 8, !tbaa !7
  %206 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longDiff443 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %206, i32 0, i32 1
  %arraydecay444 = getelementptr inbounds [22 x i16], [22 x i16]* %longDiff443, i32 0, i32 0
  store i16* %arraydecay444, i16** %bdf, align 8, !tbaa !7
  store i32 0, i32* %cb, align 4, !tbaa !1
  br label %for.cond.445

for.cond.445:                                     ; preds = %for.inc.454, %for.end.433
  %207 = load i32, i32* %cb, align 4, !tbaa !1
  %cmp446 = icmp slt i32 %207, 22
  br i1 %cmp446, label %for.body.448, label %for.end.456

for.body.448:                                     ; preds = %for.cond.445
  %208 = load i16*, i16** %bdf, align 8, !tbaa !7
  %incdec.ptr449 = getelementptr inbounds i16, i16* %208, i32 1
  store i16* %incdec.ptr449, i16** %bdf, align 8, !tbaa !7
  %209 = load i16, i16* %208, align 2, !tbaa !9
  %conv450 = sext i16 %209 to i32
  %shr451 = ashr i32 %conv450, 1
  %210 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr452 = getelementptr inbounds i32, i32* %210, i32 1
  store i32* %incdec.ptr452, i32** %mp, align 8, !tbaa !7
  store i32 %shr451, i32* %210, align 4, !tbaa !1
  %211 = load i32, i32* %cb, align 4, !tbaa !1
  %212 = load i32*, i32** %mp, align 8, !tbaa !7
  %incdec.ptr453 = getelementptr inbounds i32, i32* %212, i32 1
  store i32* %incdec.ptr453, i32** %mp, align 8, !tbaa !7
  store i32 %211, i32* %212, align 4, !tbaa !1
  br label %for.inc.454

for.inc.454:                                      ; preds = %for.body.448
  %213 = load i32, i32* %cb, align 4, !tbaa !1
  %inc455 = add nsw i32 %213, 1
  store i32 %inc455, i32* %cb, align 4, !tbaa !1
  br label %for.cond.445

for.end.456:                                      ; preds = %for.cond.445
  %214 = load i32*, i32** %mp, align 8, !tbaa !7
  %215 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom457 = sext i32 %215 to i64
  %arrayidx458 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i32 0, i64 %idxprom457
  %arrayidx459 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx458, i32 0, i64 2
  store i32* %214, i32** %arrayidx459, align 8, !tbaa !7
  %216 = bitcast i16** %bdf to i8*
  call void @llvm.lifetime.end(i64 8, i8* %216) #1
  %217 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217) #1
  %218 = bitcast i32* %cb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %218) #1
  %219 = bitcast i32** %mp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  %220 = bitcast %struct.bandInfoStruct** %bi to i8*
  call void @llvm.lifetime.end(i64 8, i8* %220) #1
  br label %for.inc.460

for.inc.460:                                      ; preds = %for.end.456
  %221 = load i32, i32* %j, align 4, !tbaa !1
  %inc461 = add nsw i32 %221, 1
  store i32 %inc461, i32* %j, align 4, !tbaa !1
  br label %for.cond.345

for.end.462:                                      ; preds = %for.cond.345
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.463

for.cond.463:                                     ; preds = %for.inc.530, %for.end.462
  %222 = load i32, i32* %j, align 4, !tbaa !1
  %cmp464 = icmp slt i32 %222, 9
  br i1 %cmp464, label %for.body.466, label %for.end.532

for.body.466:                                     ; preds = %for.cond.463
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.467

for.cond.467:                                     ; preds = %for.inc.496, %for.body.466
  %223 = load i32, i32* %i, align 4, !tbaa !1
  %cmp468 = icmp slt i32 %223, 23
  br i1 %cmp468, label %for.body.470, label %for.end.498

for.body.470:                                     ; preds = %for.cond.467
  %224 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom471 = sext i32 %224 to i64
  %225 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom472 = sext i32 %225 to i64
  %arrayidx473 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %idxprom472
  %longIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx473, i32 0, i32 0
  %arrayidx474 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx, i32 0, i64 %idxprom471
  %226 = load i16, i16* %arrayidx474, align 2, !tbaa !9
  %conv475 = sext i16 %226 to i32
  %sub476 = sub nsw i32 %conv475, 1
  %add477 = add nsw i32 %sub476, 8
  %div478 = sdiv i32 %add477, 18
  %add479 = add nsw i32 %div478, 1
  %227 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom480 = sext i32 %227 to i64
  %228 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom481 = sext i32 %228 to i64
  %arrayidx482 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i32 0, i64 %idxprom481
  %arrayidx483 = getelementptr inbounds [23 x i32], [23 x i32]* %arrayidx482, i32 0, i64 %idxprom480
  store i32 %add479, i32* %arrayidx483, align 4, !tbaa !1
  %229 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom484 = sext i32 %229 to i64
  %230 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom485 = sext i32 %230 to i64
  %arrayidx486 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i32 0, i64 %idxprom485
  %arrayidx487 = getelementptr inbounds [23 x i32], [23 x i32]* %arrayidx486, i32 0, i64 %idxprom484
  %231 = load i32, i32* %arrayidx487, align 4, !tbaa !1
  %232 = load i32, i32* %down_sample_sblimit.addr, align 4, !tbaa !1
  %cmp488 = icmp sgt i32 %231, %232
  br i1 %cmp488, label %if.then.490, label %if.end.495

if.then.490:                                      ; preds = %for.body.470
  %233 = load i32, i32* %down_sample_sblimit.addr, align 4, !tbaa !1
  %234 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom491 = sext i32 %234 to i64
  %235 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom492 = sext i32 %235 to i64
  %arrayidx493 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i32 0, i64 %idxprom492
  %arrayidx494 = getelementptr inbounds [23 x i32], [23 x i32]* %arrayidx493, i32 0, i64 %idxprom491
  store i32 %233, i32* %arrayidx494, align 4, !tbaa !1
  br label %if.end.495

if.end.495:                                       ; preds = %if.then.490, %for.body.470
  br label %for.inc.496

for.inc.496:                                      ; preds = %if.end.495
  %236 = load i32, i32* %i, align 4, !tbaa !1
  %inc497 = add nsw i32 %236, 1
  store i32 %inc497, i32* %i, align 4, !tbaa !1
  br label %for.cond.467

for.end.498:                                      ; preds = %for.cond.467
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.499

for.cond.499:                                     ; preds = %for.inc.527, %for.end.498
  %237 = load i32, i32* %i, align 4, !tbaa !1
  %cmp500 = icmp slt i32 %237, 14
  br i1 %cmp500, label %for.body.502, label %for.end.529

for.body.502:                                     ; preds = %for.cond.499
  %238 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom503 = sext i32 %238 to i64
  %239 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom504 = sext i32 %239 to i64
  %arrayidx505 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %idxprom504
  %shortIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx505, i32 0, i32 2
  %arrayidx506 = getelementptr inbounds [14 x i16], [14 x i16]* %shortIdx, i32 0, i64 %idxprom503
  %240 = load i16, i16* %arrayidx506, align 2, !tbaa !9
  %conv507 = sext i16 %240 to i32
  %sub508 = sub nsw i32 %conv507, 1
  %div509 = sdiv i32 %sub508, 18
  %add510 = add nsw i32 %div509, 1
  %241 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom511 = sext i32 %241 to i64
  %242 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom512 = sext i32 %242 to i64
  %arrayidx513 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i32 0, i64 %idxprom512
  %arrayidx514 = getelementptr inbounds [14 x i32], [14 x i32]* %arrayidx513, i32 0, i64 %idxprom511
  store i32 %add510, i32* %arrayidx514, align 4, !tbaa !1
  %243 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom515 = sext i32 %243 to i64
  %244 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom516 = sext i32 %244 to i64
  %arrayidx517 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i32 0, i64 %idxprom516
  %arrayidx518 = getelementptr inbounds [14 x i32], [14 x i32]* %arrayidx517, i32 0, i64 %idxprom515
  %245 = load i32, i32* %arrayidx518, align 4, !tbaa !1
  %246 = load i32, i32* %down_sample_sblimit.addr, align 4, !tbaa !1
  %cmp519 = icmp sgt i32 %245, %246
  br i1 %cmp519, label %if.then.521, label %if.end.526

if.then.521:                                      ; preds = %for.body.502
  %247 = load i32, i32* %down_sample_sblimit.addr, align 4, !tbaa !1
  %248 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom522 = sext i32 %248 to i64
  %249 = load i32, i32* %j, align 4, !tbaa !1
  %idxprom523 = sext i32 %249 to i64
  %arrayidx524 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i32 0, i64 %idxprom523
  %arrayidx525 = getelementptr inbounds [14 x i32], [14 x i32]* %arrayidx524, i32 0, i64 %idxprom522
  store i32 %247, i32* %arrayidx525, align 4, !tbaa !1
  br label %if.end.526

if.end.526:                                       ; preds = %if.then.521, %for.body.502
  br label %for.inc.527

for.inc.527:                                      ; preds = %if.end.526
  %250 = load i32, i32* %i, align 4, !tbaa !1
  %inc528 = add nsw i32 %250, 1
  store i32 %inc528, i32* %i, align 4, !tbaa !1
  br label %for.cond.499

for.end.529:                                      ; preds = %for.cond.499
  br label %for.inc.530

for.inc.530:                                      ; preds = %for.end.529
  %251 = load i32, i32* %j, align 4, !tbaa !1
  %inc531 = add nsw i32 %251, 1
  store i32 %inc531, i32* %j, align 4, !tbaa !1
  br label %for.cond.463

for.end.532:                                      ; preds = %for.cond.463
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.533

for.cond.533:                                     ; preds = %for.inc.560, %for.end.532
  %252 = load i32, i32* %i, align 4, !tbaa !1
  %cmp534 = icmp slt i32 %252, 5
  br i1 %cmp534, label %for.body.536, label %for.end.562

for.body.536:                                     ; preds = %for.cond.533
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.537

for.cond.537:                                     ; preds = %for.inc.557, %for.body.536
  %253 = load i32, i32* %j, align 4, !tbaa !1
  %cmp538 = icmp slt i32 %253, 6
  br i1 %cmp538, label %for.body.540, label %for.end.559

for.body.540:                                     ; preds = %for.cond.537
  store i32 0, i32* %k, align 4, !tbaa !1
  br label %for.cond.541

for.cond.541:                                     ; preds = %for.inc.554, %for.body.540
  %254 = load i32, i32* %k, align 4, !tbaa !1
  %cmp542 = icmp slt i32 %254, 6
  br i1 %cmp542, label %for.body.544, label %for.end.556

for.body.544:                                     ; preds = %for.cond.541
  %255 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %255) #1
  %256 = load i32, i32* %k, align 4, !tbaa !1
  %257 = load i32, i32* %j, align 4, !tbaa !1
  %mul545 = mul nsw i32 %257, 6
  %add546 = add nsw i32 %256, %mul545
  %258 = load i32, i32* %i, align 4, !tbaa !1
  %mul547 = mul nsw i32 %258, 36
  %add548 = add nsw i32 %add546, %mul547
  store i32 %add548, i32* %n, align 4, !tbaa !1
  %259 = load i32, i32* %i, align 4, !tbaa !1
  %260 = load i32, i32* %j, align 4, !tbaa !1
  %shl = shl i32 %260, 3
  %or = or i32 %259, %shl
  %261 = load i32, i32* %k, align 4, !tbaa !1
  %shl549 = shl i32 %261, 6
  %or550 = or i32 %or, %shl549
  %or551 = or i32 %or550, 12288
  %262 = load i32, i32* %n, align 4, !tbaa !1
  %idxprom552 = sext i32 %262 to i64
  %arrayidx553 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i32 0, i64 %idxprom552
  store i32 %or551, i32* %arrayidx553, align 4, !tbaa !1
  %263 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %263) #1
  br label %for.inc.554

for.inc.554:                                      ; preds = %for.body.544
  %264 = load i32, i32* %k, align 4, !tbaa !1
  %inc555 = add nsw i32 %264, 1
  store i32 %inc555, i32* %k, align 4, !tbaa !1
  br label %for.cond.541

for.end.556:                                      ; preds = %for.cond.541
  br label %for.inc.557

for.inc.557:                                      ; preds = %for.end.556
  %265 = load i32, i32* %j, align 4, !tbaa !1
  %inc558 = add nsw i32 %265, 1
  store i32 %inc558, i32* %j, align 4, !tbaa !1
  br label %for.cond.537

for.end.559:                                      ; preds = %for.cond.537
  br label %for.inc.560

for.inc.560:                                      ; preds = %for.end.559
  %266 = load i32, i32* %i, align 4, !tbaa !1
  %inc561 = add nsw i32 %266, 1
  store i32 %inc561, i32* %i, align 4, !tbaa !1
  br label %for.cond.533

for.end.562:                                      ; preds = %for.cond.533
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.563

for.cond.563:                                     ; preds = %for.inc.594, %for.end.562
  %267 = load i32, i32* %i, align 4, !tbaa !1
  %cmp564 = icmp slt i32 %267, 4
  br i1 %cmp564, label %for.body.566, label %for.end.596

for.body.566:                                     ; preds = %for.cond.563
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.567

for.cond.567:                                     ; preds = %for.inc.591, %for.body.566
  %268 = load i32, i32* %j, align 4, !tbaa !1
  %cmp568 = icmp slt i32 %268, 4
  br i1 %cmp568, label %for.body.570, label %for.end.593

for.body.570:                                     ; preds = %for.cond.567
  store i32 0, i32* %k, align 4, !tbaa !1
  br label %for.cond.571

for.cond.571:                                     ; preds = %for.inc.588, %for.body.570
  %269 = load i32, i32* %k, align 4, !tbaa !1
  %cmp572 = icmp slt i32 %269, 4
  br i1 %cmp572, label %for.body.574, label %for.end.590

for.body.574:                                     ; preds = %for.cond.571
  %270 = bitcast i32* %n575 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %270) #1
  %271 = load i32, i32* %k, align 4, !tbaa !1
  %272 = load i32, i32* %j, align 4, !tbaa !1
  %mul576 = mul nsw i32 %272, 4
  %add577 = add nsw i32 %271, %mul576
  %273 = load i32, i32* %i, align 4, !tbaa !1
  %mul578 = mul nsw i32 %273, 16
  %add579 = add nsw i32 %add577, %mul578
  store i32 %add579, i32* %n575, align 4, !tbaa !1
  %274 = load i32, i32* %i, align 4, !tbaa !1
  %275 = load i32, i32* %j, align 4, !tbaa !1
  %shl580 = shl i32 %275, 3
  %or581 = or i32 %274, %shl580
  %276 = load i32, i32* %k, align 4, !tbaa !1
  %shl582 = shl i32 %276, 6
  %or583 = or i32 %or581, %shl582
  %or584 = or i32 %or583, 16384
  %277 = load i32, i32* %n575, align 4, !tbaa !1
  %add585 = add nsw i32 %277, 180
  %idxprom586 = sext i32 %add585 to i64
  %arrayidx587 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i32 0, i64 %idxprom586
  store i32 %or584, i32* %arrayidx587, align 4, !tbaa !1
  %278 = bitcast i32* %n575 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %278) #1
  br label %for.inc.588

for.inc.588:                                      ; preds = %for.body.574
  %279 = load i32, i32* %k, align 4, !tbaa !1
  %inc589 = add nsw i32 %279, 1
  store i32 %inc589, i32* %k, align 4, !tbaa !1
  br label %for.cond.571

for.end.590:                                      ; preds = %for.cond.571
  br label %for.inc.591

for.inc.591:                                      ; preds = %for.end.590
  %280 = load i32, i32* %j, align 4, !tbaa !1
  %inc592 = add nsw i32 %280, 1
  store i32 %inc592, i32* %j, align 4, !tbaa !1
  br label %for.cond.567

for.end.593:                                      ; preds = %for.cond.567
  br label %for.inc.594

for.inc.594:                                      ; preds = %for.end.593
  %281 = load i32, i32* %i, align 4, !tbaa !1
  %inc595 = add nsw i32 %281, 1
  store i32 %inc595, i32* %i, align 4, !tbaa !1
  br label %for.cond.563

for.end.596:                                      ; preds = %for.cond.563
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.597

for.cond.597:                                     ; preds = %for.inc.624, %for.end.596
  %282 = load i32, i32* %i, align 4, !tbaa !1
  %cmp598 = icmp slt i32 %282, 4
  br i1 %cmp598, label %for.body.600, label %for.end.626

for.body.600:                                     ; preds = %for.cond.597
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.601

for.cond.601:                                     ; preds = %for.inc.621, %for.body.600
  %283 = load i32, i32* %j, align 4, !tbaa !1
  %cmp602 = icmp slt i32 %283, 3
  br i1 %cmp602, label %for.body.604, label %for.end.623

for.body.604:                                     ; preds = %for.cond.601
  %284 = bitcast i32* %n605 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %284) #1
  %285 = load i32, i32* %j, align 4, !tbaa !1
  %286 = load i32, i32* %i, align 4, !tbaa !1
  %mul606 = mul nsw i32 %286, 3
  %add607 = add nsw i32 %285, %mul606
  store i32 %add607, i32* %n605, align 4, !tbaa !1
  %287 = load i32, i32* %i, align 4, !tbaa !1
  %288 = load i32, i32* %j, align 4, !tbaa !1
  %shl608 = shl i32 %288, 3
  %or609 = or i32 %287, %shl608
  %or610 = or i32 %or609, 20480
  %289 = load i32, i32* %n605, align 4, !tbaa !1
  %add611 = add nsw i32 %289, 244
  %idxprom612 = sext i32 %add611 to i64
  %arrayidx613 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i32 0, i64 %idxprom612
  store i32 %or610, i32* %arrayidx613, align 4, !tbaa !1
  %290 = load i32, i32* %i, align 4, !tbaa !1
  %291 = load i32, i32* %j, align 4, !tbaa !1
  %shl614 = shl i32 %291, 3
  %or615 = or i32 %290, %shl614
  %or616 = or i32 %or615, 8192
  %or617 = or i32 %or616, 32768
  %292 = load i32, i32* %n605, align 4, !tbaa !1
  %add618 = add nsw i32 %292, 500
  %idxprom619 = sext i32 %add618 to i64
  %arrayidx620 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i32 0, i64 %idxprom619
  store i32 %or617, i32* %arrayidx620, align 4, !tbaa !1
  %293 = bitcast i32* %n605 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %293) #1
  br label %for.inc.621

for.inc.621:                                      ; preds = %for.body.604
  %294 = load i32, i32* %j, align 4, !tbaa !1
  %inc622 = add nsw i32 %294, 1
  store i32 %inc622, i32* %j, align 4, !tbaa !1
  br label %for.cond.601

for.end.623:                                      ; preds = %for.cond.601
  br label %for.inc.624

for.inc.624:                                      ; preds = %for.end.623
  %295 = load i32, i32* %i, align 4, !tbaa !1
  %inc625 = add nsw i32 %295, 1
  store i32 %inc625, i32* %i, align 4, !tbaa !1
  br label %for.cond.597

for.end.626:                                      ; preds = %for.cond.597
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.627

for.cond.627:                                     ; preds = %for.inc.667, %for.end.626
  %296 = load i32, i32* %i, align 4, !tbaa !1
  %cmp628 = icmp slt i32 %296, 5
  br i1 %cmp628, label %for.body.630, label %for.end.669

for.body.630:                                     ; preds = %for.cond.627
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.631

for.cond.631:                                     ; preds = %for.inc.664, %for.body.630
  %297 = load i32, i32* %j, align 4, !tbaa !1
  %cmp632 = icmp slt i32 %297, 5
  br i1 %cmp632, label %for.body.634, label %for.end.666

for.body.634:                                     ; preds = %for.cond.631
  store i32 0, i32* %k, align 4, !tbaa !1
  br label %for.cond.635

for.cond.635:                                     ; preds = %for.inc.661, %for.body.634
  %298 = load i32, i32* %k, align 4, !tbaa !1
  %cmp636 = icmp slt i32 %298, 4
  br i1 %cmp636, label %for.body.638, label %for.end.663

for.body.638:                                     ; preds = %for.cond.635
  store i32 0, i32* %l, align 4, !tbaa !1
  br label %for.cond.639

for.cond.639:                                     ; preds = %for.inc.658, %for.body.638
  %299 = load i32, i32* %l, align 4, !tbaa !1
  %cmp640 = icmp slt i32 %299, 4
  br i1 %cmp640, label %for.body.642, label %for.end.660

for.body.642:                                     ; preds = %for.cond.639
  %300 = bitcast i32* %n643 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %300) #1
  %301 = load i32, i32* %l, align 4, !tbaa !1
  %302 = load i32, i32* %k, align 4, !tbaa !1
  %mul644 = mul nsw i32 %302, 4
  %add645 = add nsw i32 %301, %mul644
  %303 = load i32, i32* %j, align 4, !tbaa !1
  %mul646 = mul nsw i32 %303, 16
  %add647 = add nsw i32 %add645, %mul646
  %304 = load i32, i32* %i, align 4, !tbaa !1
  %mul648 = mul nsw i32 %304, 80
  %add649 = add nsw i32 %add647, %mul648
  store i32 %add649, i32* %n643, align 4, !tbaa !1
  %305 = load i32, i32* %i, align 4, !tbaa !1
  %306 = load i32, i32* %j, align 4, !tbaa !1
  %shl650 = shl i32 %306, 3
  %or651 = or i32 %305, %shl650
  %307 = load i32, i32* %k, align 4, !tbaa !1
  %shl652 = shl i32 %307, 6
  %or653 = or i32 %or651, %shl652
  %308 = load i32, i32* %l, align 4, !tbaa !1
  %shl654 = shl i32 %308, 9
  %or655 = or i32 %or653, %shl654
  %309 = load i32, i32* %n643, align 4, !tbaa !1
  %idxprom656 = sext i32 %309 to i64
  %arrayidx657 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i32 0, i64 %idxprom656
  store i32 %or655, i32* %arrayidx657, align 4, !tbaa !1
  %310 = bitcast i32* %n643 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %310) #1
  br label %for.inc.658

for.inc.658:                                      ; preds = %for.body.642
  %311 = load i32, i32* %l, align 4, !tbaa !1
  %inc659 = add nsw i32 %311, 1
  store i32 %inc659, i32* %l, align 4, !tbaa !1
  br label %for.cond.639

for.end.660:                                      ; preds = %for.cond.639
  br label %for.inc.661

for.inc.661:                                      ; preds = %for.end.660
  %312 = load i32, i32* %k, align 4, !tbaa !1
  %inc662 = add nsw i32 %312, 1
  store i32 %inc662, i32* %k, align 4, !tbaa !1
  br label %for.cond.635

for.end.663:                                      ; preds = %for.cond.635
  br label %for.inc.664

for.inc.664:                                      ; preds = %for.end.663
  %313 = load i32, i32* %j, align 4, !tbaa !1
  %inc665 = add nsw i32 %313, 1
  store i32 %inc665, i32* %j, align 4, !tbaa !1
  br label %for.cond.631

for.end.666:                                      ; preds = %for.cond.631
  br label %for.inc.667

for.inc.667:                                      ; preds = %for.end.666
  %314 = load i32, i32* %i, align 4, !tbaa !1
  %inc668 = add nsw i32 %314, 1
  store i32 %inc668, i32* %i, align 4, !tbaa !1
  br label %for.cond.627

for.end.669:                                      ; preds = %for.cond.627
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.670

for.cond.670:                                     ; preds = %for.inc.701, %for.end.669
  %315 = load i32, i32* %i, align 4, !tbaa !1
  %cmp671 = icmp slt i32 %315, 5
  br i1 %cmp671, label %for.body.673, label %for.end.703

for.body.673:                                     ; preds = %for.cond.670
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.674

for.cond.674:                                     ; preds = %for.inc.698, %for.body.673
  %316 = load i32, i32* %j, align 4, !tbaa !1
  %cmp675 = icmp slt i32 %316, 5
  br i1 %cmp675, label %for.body.677, label %for.end.700

for.body.677:                                     ; preds = %for.cond.674
  store i32 0, i32* %k, align 4, !tbaa !1
  br label %for.cond.678

for.cond.678:                                     ; preds = %for.inc.695, %for.body.677
  %317 = load i32, i32* %k, align 4, !tbaa !1
  %cmp679 = icmp slt i32 %317, 4
  br i1 %cmp679, label %for.body.681, label %for.end.697

for.body.681:                                     ; preds = %for.cond.678
  %318 = bitcast i32* %n682 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %318) #1
  %319 = load i32, i32* %k, align 4, !tbaa !1
  %320 = load i32, i32* %j, align 4, !tbaa !1
  %mul683 = mul nsw i32 %320, 4
  %add684 = add nsw i32 %319, %mul683
  %321 = load i32, i32* %i, align 4, !tbaa !1
  %mul685 = mul nsw i32 %321, 20
  %add686 = add nsw i32 %add684, %mul685
  store i32 %add686, i32* %n682, align 4, !tbaa !1
  %322 = load i32, i32* %i, align 4, !tbaa !1
  %323 = load i32, i32* %j, align 4, !tbaa !1
  %shl687 = shl i32 %323, 3
  %or688 = or i32 %322, %shl687
  %324 = load i32, i32* %k, align 4, !tbaa !1
  %shl689 = shl i32 %324, 6
  %or690 = or i32 %or688, %shl689
  %or691 = or i32 %or690, 4096
  %325 = load i32, i32* %n682, align 4, !tbaa !1
  %add692 = add nsw i32 %325, 400
  %idxprom693 = sext i32 %add692 to i64
  %arrayidx694 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i32 0, i64 %idxprom693
  store i32 %or691, i32* %arrayidx694, align 4, !tbaa !1
  %326 = bitcast i32* %n682 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %326) #1
  br label %for.inc.695

for.inc.695:                                      ; preds = %for.body.681
  %327 = load i32, i32* %k, align 4, !tbaa !1
  %inc696 = add nsw i32 %327, 1
  store i32 %inc696, i32* %k, align 4, !tbaa !1
  br label %for.cond.678

for.end.697:                                      ; preds = %for.cond.678
  br label %for.inc.698

for.inc.698:                                      ; preds = %for.end.697
  %328 = load i32, i32* %j, align 4, !tbaa !1
  %inc699 = add nsw i32 %328, 1
  store i32 %inc699, i32* %j, align 4, !tbaa !1
  br label %for.cond.674

for.end.700:                                      ; preds = %for.cond.674
  br label %for.inc.701

for.inc.701:                                      ; preds = %for.end.700
  %329 = load i32, i32* %i, align 4, !tbaa !1
  %inc702 = add nsw i32 %329, 1
  store i32 %inc702, i32* %i, align 4, !tbaa !1
  br label %for.cond.670

for.end.703:                                      ; preds = %for.cond.670
  %330 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %330) #1
  %331 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %331) #1
  %332 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %332) #1
  %333 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %333) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare double @pow(double, double) #2

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare double @sin(double) #2

; Function Attrs: nounwind
declare double @cos(double) #2

; Function Attrs: nounwind
declare double @tan(double) #2

; Function Attrs: nounwind uwtable
define i32 @do_layer3(%struct.frame* %fr, i8* %pcm_sample, i32* %pcm_point) #0 {
entry:
  %retval = alloca i32, align 4
  %fr.addr = alloca %struct.frame*, align 8
  %pcm_sample.addr = alloca i8*, align 8
  %pcm_point.addr = alloca i32*, align 8
  %gr = alloca i32, align 4
  %ch = alloca i32, align 4
  %ss = alloca i32, align 4
  %clip = alloca i32, align 4
  %scalefacs = alloca [2 x [39 x i32]], align 16
  %sideinfo = alloca %struct.III_sideinfo, align 8
  %stereo = alloca i32, align 4
  %single = alloca i32, align 4
  %ms_stereo = alloca i32, align 4
  %i_stereo = alloca i32, align 4
  %sfreq = alloca i32, align 4
  %stereo13 = alloca i32, align 4
  %granules = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %gr_info = alloca %struct.gr_info_s*, align 8
  %part2bits = alloca i64, align 8
  %gr_info51 = alloca %struct.gr_info_s*, align 8
  %part2bits57 = alloca i64, align 8
  %i = alloca i32, align 4
  %tmp0 = alloca double, align 8
  %tmp1 = alloca double, align 8
  %i131 = alloca i32, align 4
  %in0 = alloca double*, align 8
  %in1 = alloca double*, align 8
  %i143 = alloca i32, align 4
  %in0144 = alloca double*, align 8
  %in1145 = alloca double*, align 8
  %gr_info166 = alloca %struct.gr_info_s*, align 8
  %p1 = alloca i32, align 4
  store %struct.frame* %fr, %struct.frame** %fr.addr, align 8, !tbaa !7
  store i8* %pcm_sample, i8** %pcm_sample.addr, align 8, !tbaa !7
  store i32* %pcm_point, i32** %pcm_point.addr, align 8, !tbaa !7
  %0 = bitcast i32* %gr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %ss to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %clip to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %clip, align 4, !tbaa !1
  %4 = bitcast [2 x [39 x i32]]* %scalefacs to i8*
  call void @llvm.lifetime.start(i64 312, i8* %4) #1
  %5 = bitcast %struct.III_sideinfo* %sideinfo to i8*
  call void @llvm.lifetime.start(i64 488, i8* %5) #1
  %6 = bitcast i32* %stereo to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %stereo1 = getelementptr inbounds %struct.frame, %struct.frame* %7, i32 0, i32 0
  %8 = load i32, i32* %stereo1, align 4, !tbaa !11
  store i32 %8, i32* %stereo, align 4, !tbaa !1
  %9 = bitcast i32* %single to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %single2 = getelementptr inbounds %struct.frame, %struct.frame* %10, i32 0, i32 2
  %11 = load i32, i32* %single2, align 4, !tbaa !13
  store i32 %11, i32* %single, align 4, !tbaa !1
  %12 = bitcast i32* %ms_stereo to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %i_stereo to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %sfreq to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %sampling_frequency = getelementptr inbounds %struct.frame, %struct.frame* %15, i32 0, i32 9
  %16 = load i32, i32* %sampling_frequency, align 4, !tbaa !14
  store i32 %16, i32* %sfreq, align 4, !tbaa !1
  %17 = bitcast i32* %stereo13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = bitcast i32* %granules to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  %19 = load i32, i32* %stereo, align 4, !tbaa !1
  %cmp = icmp eq i32 %19, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %stereo13, align 4, !tbaa !1
  store i32 0, i32* %single, align 4, !tbaa !1
  br label %if.end.7

if.else:                                          ; preds = %entry
  %20 = load i32, i32* %single, align 4, !tbaa !1
  %cmp4 = icmp sge i32 %20, 0
  br i1 %cmp4, label %if.then.5, label %if.else.6

if.then.5:                                        ; preds = %if.else
  store i32 1, i32* %stereo13, align 4, !tbaa !1
  br label %if.end

if.else.6:                                        ; preds = %if.else
  store i32 2, i32* %stereo13, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else.6, %if.then.5
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %if.then
  %21 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %mode = getelementptr inbounds %struct.frame, %struct.frame* %21, i32 0, i32 12
  %22 = load i32, i32* %mode, align 4, !tbaa !15
  %cmp8 = icmp eq i32 %22, 1
  br i1 %cmp8, label %if.then.9, label %if.else.12

if.then.9:                                        ; preds = %if.end.7
  %23 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %mode_ext = getelementptr inbounds %struct.frame, %struct.frame* %23, i32 0, i32 13
  %24 = load i32, i32* %mode_ext, align 4, !tbaa !16
  %and = and i32 %24, 2
  store i32 %and, i32* %ms_stereo, align 4, !tbaa !1
  %25 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %mode_ext10 = getelementptr inbounds %struct.frame, %struct.frame* %25, i32 0, i32 13
  %26 = load i32, i32* %mode_ext10, align 4, !tbaa !16
  %and11 = and i32 %26, 1
  store i32 %and11, i32* %i_stereo, align 4, !tbaa !1
  br label %if.end.13

if.else.12:                                       ; preds = %if.end.7
  store i32 0, i32* %i_stereo, align 4, !tbaa !1
  store i32 0, i32* %ms_stereo, align 4, !tbaa !1
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.12, %if.then.9
  %27 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %lsf = getelementptr inbounds %struct.frame, %struct.frame* %27, i32 0, i32 3
  %28 = load i32, i32* %lsf, align 4, !tbaa !17
  %tobool = icmp ne i32 %28, 0
  br i1 %tobool, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %if.end.13
  store i32 1, i32* %granules, align 4, !tbaa !1
  %29 = load i32, i32* %stereo, align 4, !tbaa !1
  %30 = load i32, i32* %ms_stereo, align 4, !tbaa !1
  %31 = load i32, i32* %sfreq, align 4, !tbaa !1
  %conv = sext i32 %31 to i64
  %32 = load i32, i32* %single, align 4, !tbaa !1
  call void @III_get_side_info_2(%struct.III_sideinfo* %sideinfo, i32 %29, i32 %30, i64 %conv, i32 %32)
  br label %if.end.17

if.else.15:                                       ; preds = %if.end.13
  store i32 2, i32* %granules, align 4, !tbaa !1
  %33 = load i32, i32* %stereo, align 4, !tbaa !1
  %34 = load i32, i32* %ms_stereo, align 4, !tbaa !1
  %35 = load i32, i32* %sfreq, align 4, !tbaa !1
  %conv16 = sext i32 %35 to i64
  %36 = load i32, i32* %single, align 4, !tbaa !1
  call void @III_get_side_info_1(%struct.III_sideinfo* %sideinfo, i32 %33, i32 %34, i64 %conv16, i32 %36)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.15, %if.then.14
  %main_data_begin = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 0
  %37 = load i32, i32* %main_data_begin, align 4, !tbaa !18
  %conv18 = zext i32 %37 to i64
  %call = call i32 @set_pointer(i64 %conv18)
  %cmp19 = icmp eq i32 %call, -1
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.215

if.end.22:                                        ; preds = %if.end.17
  store i32 0, i32* %gr, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.212, %if.end.22
  %38 = load i32, i32* %gr, align 4, !tbaa !1
  %39 = load i32, i32* %granules, align 4, !tbaa !1
  %cmp23 = icmp slt i32 %38, %39
  br i1 %cmp23, label %for.body, label %for.end.214

for.body:                                         ; preds = %for.cond
  %40 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %40) #1
  %41 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom = sext i32 %41 to i64
  %ch25 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch25, i32 0, i64 0
  %gr26 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr26, i32 0, i64 %idxprom
  store %struct.gr_info_s* %arrayidx27, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %42 = bitcast i64* %part2bits to i8*
  call void @llvm.lifetime.start(i64 8, i8* %42) #1
  %43 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %lsf28 = getelementptr inbounds %struct.frame, %struct.frame* %43, i32 0, i32 3
  %44 = load i32, i32* %lsf28, align 4, !tbaa !17
  %tobool29 = icmp ne i32 %44, 0
  br i1 %tobool29, label %if.then.30, label %if.else.34

if.then.30:                                       ; preds = %for.body
  %arrayidx31 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 0
  %arraydecay = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx31, i32 0, i32 0
  %45 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %call32 = call i32 @III_get_scale_factors_2(i32* %arraydecay, %struct.gr_info_s* %45, i32 0)
  %conv33 = sext i32 %call32 to i64
  store i64 %conv33, i64* %part2bits, align 8, !tbaa !20
  br label %if.end.39

if.else.34:                                       ; preds = %for.body
  %arrayidx35 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 0
  %arraydecay36 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx35, i32 0, i32 0
  %46 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %call37 = call i32 @III_get_scale_factors_1(i32* %arraydecay36, %struct.gr_info_s* %46)
  %conv38 = sext i32 %call37 to i64
  store i64 %conv38, i64* %part2bits, align 8, !tbaa !20
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.34, %if.then.30
  %arrayidx40 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 0
  %arraydecay41 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx40, i32 0, i32 0
  %47 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %48 = load i32, i32* %sfreq, align 4, !tbaa !1
  %49 = load i64, i64* %part2bits, align 8, !tbaa !20
  %conv42 = trunc i64 %49 to i32
  %call43 = call i32 @III_dequantize_sample([18 x double]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 0, i32 0), i32* %arraydecay41, %struct.gr_info_s* %47, i32 %48, i32 %conv42)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.39
  %50 = load i32, i32* %clip, align 4, !tbaa !1
  store i32 %50, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.39
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.46, %if.then.45
  %51 = bitcast i64* %part2bits to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.215 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %53 = load i32, i32* %stereo, align 4, !tbaa !1
  %cmp48 = icmp eq i32 %53, 2
  br i1 %cmp48, label %if.then.50, label %if.end.161

if.then.50:                                       ; preds = %cleanup.cont
  %54 = bitcast %struct.gr_info_s** %gr_info51 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %54) #1
  %55 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom52 = sext i32 %55 to i64
  %ch53 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx54 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch53, i32 0, i64 1
  %gr55 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx54, i32 0, i32 0
  %arrayidx56 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr55, i32 0, i64 %idxprom52
  store %struct.gr_info_s* %arrayidx56, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %56 = bitcast i64* %part2bits57 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %56) #1
  %57 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %lsf58 = getelementptr inbounds %struct.frame, %struct.frame* %57, i32 0, i32 3
  %58 = load i32, i32* %lsf58, align 4, !tbaa !17
  %tobool59 = icmp ne i32 %58, 0
  br i1 %tobool59, label %if.then.60, label %if.else.65

if.then.60:                                       ; preds = %if.then.50
  %arrayidx61 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 1
  %arraydecay62 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx61, i32 0, i32 0
  %59 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %60 = load i32, i32* %i_stereo, align 4, !tbaa !1
  %call63 = call i32 @III_get_scale_factors_2(i32* %arraydecay62, %struct.gr_info_s* %59, i32 %60)
  %conv64 = sext i32 %call63 to i64
  store i64 %conv64, i64* %part2bits57, align 8, !tbaa !20
  br label %if.end.70

if.else.65:                                       ; preds = %if.then.50
  %arrayidx66 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 1
  %arraydecay67 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx66, i32 0, i32 0
  %61 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %call68 = call i32 @III_get_scale_factors_1(i32* %arraydecay67, %struct.gr_info_s* %61)
  %conv69 = sext i32 %call68 to i64
  store i64 %conv69, i64* %part2bits57, align 8, !tbaa !20
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.65, %if.then.60
  %arrayidx71 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 1
  %arraydecay72 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx71, i32 0, i32 0
  %62 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %63 = load i32, i32* %sfreq, align 4, !tbaa !1
  %64 = load i64, i64* %part2bits57, align 8, !tbaa !20
  %conv73 = trunc i64 %64 to i32
  %call74 = call i32 @III_dequantize_sample([18 x double]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 1, i32 0), i32* %arraydecay72, %struct.gr_info_s* %62, i32 %63, i32 %conv73)
  %tobool75 = icmp ne i32 %call74, 0
  br i1 %tobool75, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.end.70
  %65 = load i32, i32* %clip, align 4, !tbaa !1
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end.77:                                        ; preds = %if.end.70
  %66 = load i32, i32* %ms_stereo, align 4, !tbaa !1
  %tobool78 = icmp ne i32 %66, 0
  br i1 %tobool78, label %if.then.79, label %if.end.92

if.then.79:                                       ; preds = %if.end.77
  %67 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67) #1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc, %if.then.79
  %68 = load i32, i32* %i, align 4, !tbaa !1
  %cmp81 = icmp slt i32 %68, 576
  br i1 %cmp81, label %for.body.83, label %for.end

for.body.83:                                      ; preds = %for.cond.80
  %69 = bitcast double* %tmp0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %69) #1
  %70 = bitcast double* %tmp1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %70) #1
  %71 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom84 = sext i32 %71 to i64
  %arrayidx85 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), i64 %idxprom84
  %72 = load double, double* %arrayidx85, align 8, !tbaa !5
  store double %72, double* %tmp0, align 8, !tbaa !5
  %73 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom86 = sext i32 %73 to i64
  %arrayidx87 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 1, i32 0, i32 0), i64 %idxprom86
  %74 = load double, double* %arrayidx87, align 8, !tbaa !5
  store double %74, double* %tmp1, align 8, !tbaa !5
  %75 = load double, double* %tmp0, align 8, !tbaa !5
  %76 = load double, double* %tmp1, align 8, !tbaa !5
  %sub = fsub double %75, %76
  %77 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom88 = sext i32 %77 to i64
  %arrayidx89 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 1, i32 0, i32 0), i64 %idxprom88
  store double %sub, double* %arrayidx89, align 8, !tbaa !5
  %78 = load double, double* %tmp0, align 8, !tbaa !5
  %79 = load double, double* %tmp1, align 8, !tbaa !5
  %add = fadd double %78, %79
  %80 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom90 = sext i32 %80 to i64
  %arrayidx91 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), i64 %idxprom90
  store double %add, double* %arrayidx91, align 8, !tbaa !5
  %81 = bitcast double* %tmp1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = bitcast double* %tmp0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body.83
  %83 = load i32, i32* %i, align 4, !tbaa !1
  %inc = add nsw i32 %83, 1
  store i32 %inc, i32* %i, align 4, !tbaa !1
  br label %for.cond.80

for.end:                                          ; preds = %for.cond.80
  %84 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  br label %if.end.92

if.end.92:                                        ; preds = %for.end, %if.end.77
  %85 = load i32, i32* %i_stereo, align 4, !tbaa !1
  %tobool93 = icmp ne i32 %85, 0
  br i1 %tobool93, label %if.then.94, label %if.end.98

if.then.94:                                       ; preds = %if.end.92
  %arrayidx95 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %scalefacs, i32 0, i64 1
  %arraydecay96 = getelementptr inbounds [39 x i32], [39 x i32]* %arrayidx95, i32 0, i32 0
  %86 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %87 = load i32, i32* %sfreq, align 4, !tbaa !1
  %88 = load i32, i32* %ms_stereo, align 4, !tbaa !1
  %89 = load %struct.frame*, %struct.frame** %fr.addr, align 8, !tbaa !7
  %lsf97 = getelementptr inbounds %struct.frame, %struct.frame* %89, i32 0, i32 3
  %90 = load i32, i32* %lsf97, align 4, !tbaa !17
  call void @III_i_stereo([32 x [18 x double]]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0), i32* %arraydecay96, %struct.gr_info_s* %86, i32 %87, i32 %88, i32 %90)
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.94, %if.end.92
  %91 = load i32, i32* %ms_stereo, align 4, !tbaa !1
  %tobool99 = icmp ne i32 %91, 0
  br i1 %tobool99, label %if.then.104, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.98
  %92 = load i32, i32* %i_stereo, align 4, !tbaa !1
  %tobool100 = icmp ne i32 %92, 0
  br i1 %tobool100, label %if.then.104, label %lor.lhs.false.101

lor.lhs.false.101:                                ; preds = %lor.lhs.false
  %93 = load i32, i32* %single, align 4, !tbaa !1
  %cmp102 = icmp eq i32 %93, 3
  br i1 %cmp102, label %if.then.104, label %if.end.130

if.then.104:                                      ; preds = %lor.lhs.false.101, %lor.lhs.false, %if.end.98
  %94 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %maxb = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %94, i32 0, i32 10
  %95 = load i32, i32* %maxb, align 4, !tbaa !22
  %96 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom105 = sext i32 %96 to i64
  %ch106 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx107 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch106, i32 0, i64 0
  %gr108 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx107, i32 0, i32 0
  %arrayidx109 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr108, i32 0, i64 %idxprom105
  %maxb110 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %arrayidx109, i32 0, i32 10
  %97 = load i32, i32* %maxb110, align 4, !tbaa !22
  %cmp111 = icmp ugt i32 %95, %97
  br i1 %cmp111, label %if.then.113, label %if.else.121

if.then.113:                                      ; preds = %if.then.104
  %98 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %maxb114 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %98, i32 0, i32 10
  %99 = load i32, i32* %maxb114, align 4, !tbaa !22
  %100 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom115 = sext i32 %100 to i64
  %ch116 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx117 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch116, i32 0, i64 0
  %gr118 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx117, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr118, i32 0, i64 %idxprom115
  %maxb120 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %arrayidx119, i32 0, i32 10
  store i32 %99, i32* %maxb120, align 4, !tbaa !22
  br label %if.end.129

if.else.121:                                      ; preds = %if.then.104
  %101 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom122 = sext i32 %101 to i64
  %ch123 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx124 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch123, i32 0, i64 0
  %gr125 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx124, i32 0, i32 0
  %arrayidx126 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr125, i32 0, i64 %idxprom122
  %maxb127 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %arrayidx126, i32 0, i32 10
  %102 = load i32, i32* %maxb127, align 4, !tbaa !22
  %103 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %maxb128 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %103, i32 0, i32 10
  store i32 %102, i32* %maxb128, align 4, !tbaa !22
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.121, %if.then.113
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %lor.lhs.false.101
  %104 = load i32, i32* %single, align 4, !tbaa !1
  switch i32 %104, label %sw.epilog [
    i32 3, label %sw.bb
    i32 1, label %sw.bb.142
  ]

sw.bb:                                            ; preds = %if.end.130
  %105 = bitcast i32* %i131 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %105) #1
  %106 = bitcast double** %in0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %106) #1
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), double** %in0, align 8, !tbaa !7
  %107 = bitcast double** %in1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %107) #1
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 1, i32 0, i32 0), double** %in1, align 8, !tbaa !7
  store i32 0, i32* %i131, align 4, !tbaa !1
  br label %for.cond.132

for.cond.132:                                     ; preds = %for.inc.138, %sw.bb
  %108 = load i32, i32* %i131, align 4, !tbaa !1
  %109 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %maxb133 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %109, i32 0, i32 10
  %110 = load i32, i32* %maxb133, align 4, !tbaa !22
  %mul = mul i32 18, %110
  %cmp134 = icmp ult i32 %108, %mul
  br i1 %cmp134, label %for.body.136, label %for.end.141

for.body.136:                                     ; preds = %for.cond.132
  %111 = load double*, double** %in0, align 8, !tbaa !7
  %112 = load double, double* %111, align 8, !tbaa !5
  %113 = load double*, double** %in1, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds double, double* %113, i32 1
  store double* %incdec.ptr, double** %in1, align 8, !tbaa !7
  %114 = load double, double* %113, align 8, !tbaa !5
  %add137 = fadd double %112, %114
  %115 = load double*, double** %in0, align 8, !tbaa !7
  store double %add137, double* %115, align 8, !tbaa !5
  br label %for.inc.138

for.inc.138:                                      ; preds = %for.body.136
  %116 = load i32, i32* %i131, align 4, !tbaa !1
  %inc139 = add nsw i32 %116, 1
  store i32 %inc139, i32* %i131, align 4, !tbaa !1
  %117 = load double*, double** %in0, align 8, !tbaa !7
  %incdec.ptr140 = getelementptr inbounds double, double* %117, i32 1
  store double* %incdec.ptr140, double** %in0, align 8, !tbaa !7
  br label %for.cond.132

for.end.141:                                      ; preds = %for.cond.132
  %118 = bitcast double** %in1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %118) #1
  %119 = bitcast double** %in0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %119) #1
  %120 = bitcast i32* %i131 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #1
  br label %sw.epilog

sw.bb.142:                                        ; preds = %if.end.130
  %121 = bitcast i32* %i143 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121) #1
  %122 = bitcast double** %in0144 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %122) #1
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), double** %in0144, align 8, !tbaa !7
  %123 = bitcast double** %in1145 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %123) #1
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 1, i32 0, i32 0), double** %in1145, align 8, !tbaa !7
  store i32 0, i32* %i143, align 4, !tbaa !1
  br label %for.cond.146

for.cond.146:                                     ; preds = %for.inc.154, %sw.bb.142
  %124 = load i32, i32* %i143, align 4, !tbaa !1
  %125 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info51, align 8, !tbaa !7
  %maxb147 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %125, i32 0, i32 10
  %126 = load i32, i32* %maxb147, align 4, !tbaa !22
  %mul148 = mul i32 18, %126
  %cmp149 = icmp ult i32 %124, %mul148
  br i1 %cmp149, label %for.body.151, label %for.end.156

for.body.151:                                     ; preds = %for.cond.146
  %127 = load double*, double** %in1145, align 8, !tbaa !7
  %incdec.ptr152 = getelementptr inbounds double, double* %127, i32 1
  store double* %incdec.ptr152, double** %in1145, align 8, !tbaa !7
  %128 = load double, double* %127, align 8, !tbaa !5
  %129 = load double*, double** %in0144, align 8, !tbaa !7
  %incdec.ptr153 = getelementptr inbounds double, double* %129, i32 1
  store double* %incdec.ptr153, double** %in0144, align 8, !tbaa !7
  store double %128, double* %129, align 8, !tbaa !5
  br label %for.inc.154

for.inc.154:                                      ; preds = %for.body.151
  %130 = load i32, i32* %i143, align 4, !tbaa !1
  %inc155 = add nsw i32 %130, 1
  store i32 %inc155, i32* %i143, align 4, !tbaa !1
  br label %for.cond.146

for.end.156:                                      ; preds = %for.cond.146
  %131 = bitcast double** %in1145 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %131) #1
  %132 = bitcast double** %in0144 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %132) #1
  %133 = bitcast i32* %i143 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %133) #1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.130, %for.end.156, %for.end.141
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.157

cleanup.157:                                      ; preds = %sw.epilog, %if.then.76
  %134 = bitcast i64* %part2bits57 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %134) #1
  %135 = bitcast %struct.gr_info_s** %gr_info51 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %135) #1
  %cleanup.dest.159 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.159, label %cleanup.215 [
    i32 0, label %cleanup.cont.160
  ]

cleanup.cont.160:                                 ; preds = %cleanup.157
  br label %if.end.161

if.end.161:                                       ; preds = %cleanup.cont.160, %cleanup.cont
  store i32 0, i32* %ch, align 4, !tbaa !1
  br label %for.cond.162

for.cond.162:                                     ; preds = %for.inc.182, %if.end.161
  %136 = load i32, i32* %ch, align 4, !tbaa !1
  %137 = load i32, i32* %stereo13, align 4, !tbaa !1
  %cmp163 = icmp slt i32 %136, %137
  br i1 %cmp163, label %for.body.165, label %for.end.184

for.body.165:                                     ; preds = %for.cond.162
  %138 = bitcast %struct.gr_info_s** %gr_info166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %138) #1
  %139 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom167 = sext i32 %139 to i64
  %140 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom168 = sext i32 %140 to i64
  %ch169 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %sideinfo, i32 0, i32 2
  %arrayidx170 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch169, i32 0, i64 %idxprom168
  %gr171 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx170, i32 0, i32 0
  %arrayidx172 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr171, i32 0, i64 %idxprom167
  store %struct.gr_info_s* %arrayidx172, %struct.gr_info_s** %gr_info166, align 8, !tbaa !7
  %141 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom173 = sext i32 %141 to i64
  %arrayidx174 = getelementptr inbounds [2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 %idxprom173
  %arraydecay175 = getelementptr inbounds [32 x [18 x double]], [32 x [18 x double]]* %arrayidx174, i32 0, i32 0
  %142 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info166, align 8, !tbaa !7
  call void @III_antialias([18 x double]* %arraydecay175, %struct.gr_info_s* %142)
  %143 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom176 = sext i32 %143 to i64
  %arrayidx177 = getelementptr inbounds [2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i64 %idxprom176
  %arraydecay178 = getelementptr inbounds [32 x [18 x double]], [32 x [18 x double]]* %arrayidx177, i32 0, i32 0
  %144 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom179 = sext i32 %144 to i64
  %arrayidx180 = getelementptr inbounds [2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i32 0, i64 %idxprom179
  %arraydecay181 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* %arrayidx180, i32 0, i32 0
  %145 = load i32, i32* %ch, align 4, !tbaa !1
  %146 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info166, align 8, !tbaa !7
  call void @III_hybrid([18 x double]* %arraydecay178, [32 x double]* %arraydecay181, i32 %145, %struct.gr_info_s* %146)
  %147 = bitcast %struct.gr_info_s** %gr_info166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %147) #1
  br label %for.inc.182

for.inc.182:                                      ; preds = %for.body.165
  %148 = load i32, i32* %ch, align 4, !tbaa !1
  %inc183 = add nsw i32 %148, 1
  store i32 %inc183, i32* %ch, align 4, !tbaa !1
  br label %for.cond.162

for.end.184:                                      ; preds = %for.cond.162
  store i32 0, i32* %ss, align 4, !tbaa !1
  br label %for.cond.185

for.cond.185:                                     ; preds = %for.inc.209, %for.end.184
  %149 = load i32, i32* %ss, align 4, !tbaa !1
  %cmp186 = icmp slt i32 %149, 18
  br i1 %cmp186, label %for.body.188, label %for.end.211

for.body.188:                                     ; preds = %for.cond.185
  %150 = load i32, i32* %single, align 4, !tbaa !1
  %cmp189 = icmp sge i32 %150, 0
  br i1 %cmp189, label %if.then.191, label %if.else.197

if.then.191:                                      ; preds = %for.body.188
  %151 = load i32, i32* %ss, align 4, !tbaa !1
  %idxprom192 = sext i32 %151 to i64
  %arrayidx193 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i32 0, i64 0), i32 0, i64 %idxprom192
  %arraydecay194 = getelementptr inbounds [32 x double], [32 x double]* %arrayidx193, i32 0, i32 0
  %152 = load i8*, i8** %pcm_sample.addr, align 8, !tbaa !7
  %153 = load i32*, i32** %pcm_point.addr, align 8, !tbaa !7
  %call195 = call i32 @synth_1to1_mono(double* %arraydecay194, i8* %152, i32* %153)
  %154 = load i32, i32* %clip, align 4, !tbaa !1
  %add196 = add nsw i32 %154, %call195
  store i32 %add196, i32* %clip, align 4, !tbaa !1
  br label %if.end.208

if.else.197:                                      ; preds = %for.body.188
  %155 = bitcast i32* %p1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %155) #1
  %156 = load i32*, i32** %pcm_point.addr, align 8, !tbaa !7
  %157 = load i32, i32* %156, align 4, !tbaa !1
  store i32 %157, i32* %p1, align 4, !tbaa !1
  %158 = load i32, i32* %ss, align 4, !tbaa !1
  %idxprom198 = sext i32 %158 to i64
  %arrayidx199 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i32 0, i64 0), i32 0, i64 %idxprom198
  %arraydecay200 = getelementptr inbounds [32 x double], [32 x double]* %arrayidx199, i32 0, i32 0
  %159 = load i8*, i8** %pcm_sample.addr, align 8, !tbaa !7
  %call201 = call i32 @synth_1to1(double* %arraydecay200, i32 0, i8* %159, i32* %p1)
  %160 = load i32, i32* %clip, align 4, !tbaa !1
  %add202 = add nsw i32 %160, %call201
  store i32 %add202, i32* %clip, align 4, !tbaa !1
  %161 = load i32, i32* %ss, align 4, !tbaa !1
  %idxprom203 = sext i32 %161 to i64
  %arrayidx204 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i32 0, i64 1), i32 0, i64 %idxprom203
  %arraydecay205 = getelementptr inbounds [32 x double], [32 x double]* %arrayidx204, i32 0, i32 0
  %162 = load i8*, i8** %pcm_sample.addr, align 8, !tbaa !7
  %163 = load i32*, i32** %pcm_point.addr, align 8, !tbaa !7
  %call206 = call i32 @synth_1to1(double* %arraydecay205, i32 1, i8* %162, i32* %163)
  %164 = load i32, i32* %clip, align 4, !tbaa !1
  %add207 = add nsw i32 %164, %call206
  store i32 %add207, i32* %clip, align 4, !tbaa !1
  %165 = bitcast i32* %p1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %165) #1
  br label %if.end.208

if.end.208:                                       ; preds = %if.else.197, %if.then.191
  br label %for.inc.209

for.inc.209:                                      ; preds = %if.end.208
  %166 = load i32, i32* %ss, align 4, !tbaa !1
  %inc210 = add nsw i32 %166, 1
  store i32 %inc210, i32* %ss, align 4, !tbaa !1
  br label %for.cond.185

for.end.211:                                      ; preds = %for.cond.185
  br label %for.inc.212

for.inc.212:                                      ; preds = %for.end.211
  %167 = load i32, i32* %gr, align 4, !tbaa !1
  %inc213 = add nsw i32 %167, 1
  store i32 %inc213, i32* %gr, align 4, !tbaa !1
  br label %for.cond

for.end.214:                                      ; preds = %for.cond
  %168 = load i32, i32* %clip, align 4, !tbaa !1
  store i32 %168, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.215

cleanup.215:                                      ; preds = %for.end.214, %cleanup.157, %cleanup, %if.then.21
  %169 = bitcast i32* %granules to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  %170 = bitcast i32* %stereo13 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #1
  %171 = bitcast i32* %sfreq to i8*
  call void @llvm.lifetime.end(i64 4, i8* %171) #1
  %172 = bitcast i32* %i_stereo to i8*
  call void @llvm.lifetime.end(i64 4, i8* %172) #1
  %173 = bitcast i32* %ms_stereo to i8*
  call void @llvm.lifetime.end(i64 4, i8* %173) #1
  %174 = bitcast i32* %single to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #1
  %175 = bitcast i32* %stereo to i8*
  call void @llvm.lifetime.end(i64 4, i8* %175) #1
  %176 = bitcast %struct.III_sideinfo* %sideinfo to i8*
  call void @llvm.lifetime.end(i64 488, i8* %176) #1
  %177 = bitcast [2 x [39 x i32]]* %scalefacs to i8*
  call void @llvm.lifetime.end(i64 312, i8* %177) #1
  %178 = bitcast i32* %clip to i8*
  call void @llvm.lifetime.end(i64 4, i8* %178) #1
  %179 = bitcast i32* %ss to i8*
  call void @llvm.lifetime.end(i64 4, i8* %179) #1
  %180 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.end(i64 4, i8* %180) #1
  %181 = bitcast i32* %gr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181) #1
  %182 = load i32, i32* %retval
  ret i32 %182
}

; Function Attrs: nounwind uwtable
define internal void @III_get_side_info_2(%struct.III_sideinfo* %si, i32 %stereo, i32 %ms_stereo, i64 %sfreq, i32 %single) #0 {
entry:
  %si.addr = alloca %struct.III_sideinfo*, align 8
  %stereo.addr = alloca i32, align 4
  %ms_stereo.addr = alloca i32, align 4
  %sfreq.addr = alloca i64, align 8
  %single.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %powdiff = alloca i32, align 4
  %gr_info = alloca %struct.gr_info_s*, align 8
  %qss = alloca i32, align 4
  %i = alloca i32, align 4
  %sbg = alloca i32, align 4
  %i62 = alloca i32, align 4
  %r0c = alloca i32, align 4
  %r1c = alloca i32, align 4
  store %struct.III_sideinfo* %si, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  store i32 %stereo, i32* %stereo.addr, align 4, !tbaa !1
  store i32 %ms_stereo, i32* %ms_stereo.addr, align 4, !tbaa !1
  store i64 %sfreq, i64* %sfreq.addr, align 8, !tbaa !20
  store i32 %single, i32* %single.addr, align 4, !tbaa !1
  %0 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %powdiff to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load i32, i32* %single.addr, align 4, !tbaa !1
  %cmp = icmp eq i32 %2, 3
  %cond = select i1 %cmp, i32 4, i32 0
  store i32 %cond, i32* %powdiff, align 4, !tbaa !1
  %call = call i32 @getbits(i32 8)
  %3 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %main_data_begin = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %3, i32 0, i32 0
  store i32 %call, i32* %main_data_begin, align 4, !tbaa !18
  %4 = load i32, i32* %stereo.addr, align 4, !tbaa !1
  %cmp1 = icmp eq i32 %4, 1
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call2 = call i32 @get1bit()
  %5 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %private_bits = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %5, i32 0, i32 1
  store i32 %call2, i32* %private_bits, align 4, !tbaa !24
  br label %if.end

if.else:                                          ; preds = %entry
  %call3 = call i32 @getbits_fast(i32 2)
  %6 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %private_bits4 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %6, i32 0, i32 1
  store i32 %call3, i32* %private_bits4, align 4, !tbaa !24
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %ch, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.94, %if.end
  %7 = load i32, i32* %ch, align 4, !tbaa !1
  %8 = load i32, i32* %stereo.addr, align 4, !tbaa !1
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body, label %for.end.96

for.body:                                         ; preds = %for.cond
  %9 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %ch6 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %11, i32 0, i32 2
  %arrayidx = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch6, i32 0, i64 %idxprom
  %gr = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr, i32 0, i64 0
  store %struct.gr_info_s* %arrayidx7, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %12 = bitcast i32* %qss to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %call8 = call i32 @getbits(i32 12)
  %13 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %part2_3_length = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %13, i32 0, i32 1
  store i32 %call8, i32* %part2_3_length, align 4, !tbaa !25
  %call9 = call i32 @getbits_fast(i32 9)
  %14 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %14, i32 0, i32 2
  store i32 %call9, i32* %big_values, align 4, !tbaa !26
  %15 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values10 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %15, i32 0, i32 2
  %16 = load i32, i32* %big_values10, align 4, !tbaa !26
  %cmp11 = icmp ugt i32 %16, 288
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %for.body
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %18 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values14 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %18, i32 0, i32 2
  store i32 288, i32* %big_values14, align 4, !tbaa !26
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %for.body
  %call16 = call i32 @getbits_fast(i32 8)
  store i32 %call16, i32* %qss, align 4, !tbaa !1
  %19 = load i32, i32* %qss, align 4, !tbaa !1
  %idx.ext = zext i32 %19 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds double, double* getelementptr inbounds ([378 x double], [378 x double]* @gainpow2, i32 0, i64 256), i64 %idx.neg
  %20 = load i32, i32* %powdiff, align 4, !tbaa !1
  %idx.ext17 = sext i32 %20 to i64
  %add.ptr18 = getelementptr inbounds double, double* %add.ptr, i64 %idx.ext17
  %21 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %21, i32 0, i32 17
  store double* %add.ptr18, double** %pow2gain, align 8, !tbaa !27
  %22 = load i32, i32* %ms_stereo.addr, align 4, !tbaa !1
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then.19, label %if.end.22

if.then.19:                                       ; preds = %if.end.15
  %23 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain20 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %23, i32 0, i32 17
  %24 = load double*, double** %pow2gain20, align 8, !tbaa !27
  %add.ptr21 = getelementptr inbounds double, double* %24, i64 2
  store double* %add.ptr21, double** %pow2gain20, align 8, !tbaa !27
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.19, %if.end.15
  %call23 = call i32 @getbits(i32 9)
  %25 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %scalefac_compress = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %25, i32 0, i32 3
  store i32 %call23, i32* %scalefac_compress, align 4, !tbaa !28
  %call24 = call i32 @get1bit()
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then.26, label %if.else.61

if.then.26:                                       ; preds = %if.end.22
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %call27 = call i32 @getbits_fast(i32 2)
  %27 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %27, i32 0, i32 4
  store i32 %call27, i32* %block_type, align 4, !tbaa !29
  %call28 = call i32 @get1bit()
  %28 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %28, i32 0, i32 5
  store i32 %call28, i32* %mixed_block_flag, align 4, !tbaa !30
  %call29 = call i32 @getbits_fast(i32 5)
  %29 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %29, i32 0, i32 6
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i32 0, i64 0
  store i32 %call29, i32* %arrayidx30, align 4, !tbaa !1
  %call31 = call i32 @getbits_fast(i32 5)
  %30 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select32 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %30, i32 0, i32 6
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select32, i32 0, i64 1
  store i32 %call31, i32* %arrayidx33, align 4, !tbaa !1
  %31 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select34 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %31, i32 0, i32 6
  %arrayidx35 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select34, i32 0, i64 2
  store i32 0, i32* %arrayidx35, align 4, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.36

for.cond.36:                                      ; preds = %for.inc, %if.then.26
  %32 = load i32, i32* %i, align 4, !tbaa !1
  %cmp37 = icmp slt i32 %32, 3
  br i1 %cmp37, label %for.body.38, label %for.end

for.body.38:                                      ; preds = %for.cond.36
  %33 = bitcast i32* %sbg to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #1
  %call39 = call i32 @getbits_fast(i32 3)
  %shl = shl i32 %call39, 3
  store i32 %shl, i32* %sbg, align 4, !tbaa !1
  %34 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain40 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %34, i32 0, i32 17
  %35 = load double*, double** %pow2gain40, align 8, !tbaa !27
  %36 = load i32, i32* %sbg, align 4, !tbaa !1
  %idx.ext41 = zext i32 %36 to i64
  %add.ptr42 = getelementptr inbounds double, double* %35, i64 %idx.ext41
  %37 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom43 = sext i32 %37 to i64
  %38 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %full_gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %38, i32 0, i32 16
  %arrayidx44 = getelementptr inbounds [3 x double*], [3 x double*]* %full_gain, i32 0, i64 %idxprom43
  store double* %add.ptr42, double** %arrayidx44, align 8, !tbaa !7
  %39 = bitcast i32* %sbg to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body.38
  %40 = load i32, i32* %i, align 4, !tbaa !1
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %i, align 4, !tbaa !1
  br label %for.cond.36

for.end:                                          ; preds = %for.cond.36
  %41 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type45 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %41, i32 0, i32 4
  %42 = load i32, i32* %block_type45, align 4, !tbaa !29
  %cmp46 = icmp eq i32 %42, 0
  br i1 %cmp46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %for.end
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

if.end.49:                                        ; preds = %for.end
  %44 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type50 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %44, i32 0, i32 4
  %45 = load i32, i32* %block_type50, align 4, !tbaa !29
  %cmp51 = icmp eq i32 %45, 2
  br i1 %cmp51, label %if.then.52, label %if.else.53

if.then.52:                                       ; preds = %if.end.49
  %46 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %46, i32 0, i32 11
  store i32 18, i32* %region1start, align 4, !tbaa !31
  br label %if.end.60

if.else.53:                                       ; preds = %if.end.49
  %47 = load i64, i64* %sfreq.addr, align 8, !tbaa !20
  %cmp54 = icmp eq i64 %47, 8
  br i1 %cmp54, label %if.then.55, label %if.else.57

if.then.55:                                       ; preds = %if.else.53
  %48 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start56 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %48, i32 0, i32 11
  store i32 54, i32* %region1start56, align 4, !tbaa !31
  br label %if.end.59

if.else.57:                                       ; preds = %if.else.53
  %49 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start58 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %49, i32 0, i32 11
  store i32 27, i32* %region1start58, align 4, !tbaa !31
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.57, %if.then.55
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.52
  %50 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region2start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %50, i32 0, i32 12
  store i32 288, i32* %region2start, align 4, !tbaa !32
  %51 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  br label %if.end.91

if.else.61:                                       ; preds = %if.end.22
  %52 = bitcast i32* %i62 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #1
  %53 = bitcast i32* %r0c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %53) #1
  %54 = bitcast i32* %r1c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %54) #1
  store i32 0, i32* %i62, align 4, !tbaa !1
  br label %for.cond.63

for.cond.63:                                      ; preds = %for.inc.70, %if.else.61
  %55 = load i32, i32* %i62, align 4, !tbaa !1
  %cmp64 = icmp slt i32 %55, 3
  br i1 %cmp64, label %for.body.65, label %for.end.72

for.body.65:                                      ; preds = %for.cond.63
  %call66 = call i32 @getbits_fast(i32 5)
  %56 = load i32, i32* %i62, align 4, !tbaa !1
  %idxprom67 = sext i32 %56 to i64
  %57 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select68 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %57, i32 0, i32 6
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select68, i32 0, i64 %idxprom67
  store i32 %call66, i32* %arrayidx69, align 4, !tbaa !1
  br label %for.inc.70

for.inc.70:                                       ; preds = %for.body.65
  %58 = load i32, i32* %i62, align 4, !tbaa !1
  %inc71 = add nsw i32 %58, 1
  store i32 %inc71, i32* %i62, align 4, !tbaa !1
  br label %for.cond.63

for.end.72:                                       ; preds = %for.cond.63
  %call73 = call i32 @getbits_fast(i32 4)
  store i32 %call73, i32* %r0c, align 4, !tbaa !1
  %call74 = call i32 @getbits_fast(i32 3)
  store i32 %call74, i32* %r1c, align 4, !tbaa !1
  %59 = load i32, i32* %r0c, align 4, !tbaa !1
  %add = add nsw i32 %59, 1
  %idxprom75 = sext i32 %add to i64
  %60 = load i64, i64* %sfreq.addr, align 8, !tbaa !20
  %arrayidx76 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %60
  %longIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx76, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx, i32 0, i64 %idxprom75
  %61 = load i16, i16* %arrayidx77, align 2, !tbaa !9
  %conv = sext i16 %61 to i32
  %shr = ashr i32 %conv, 1
  %62 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start78 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %62, i32 0, i32 11
  store i32 %shr, i32* %region1start78, align 4, !tbaa !31
  %63 = load i32, i32* %r0c, align 4, !tbaa !1
  %add79 = add nsw i32 %63, 1
  %64 = load i32, i32* %r1c, align 4, !tbaa !1
  %add80 = add nsw i32 %add79, %64
  %add81 = add nsw i32 %add80, 1
  %idxprom82 = sext i32 %add81 to i64
  %65 = load i64, i64* %sfreq.addr, align 8, !tbaa !20
  %arrayidx83 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %65
  %longIdx84 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx83, i32 0, i32 0
  %arrayidx85 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx84, i32 0, i64 %idxprom82
  %66 = load i16, i16* %arrayidx85, align 2, !tbaa !9
  %conv86 = sext i16 %66 to i32
  %shr87 = ashr i32 %conv86, 1
  %67 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region2start88 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %67, i32 0, i32 12
  store i32 %shr87, i32* %region2start88, align 4, !tbaa !32
  %68 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type89 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %68, i32 0, i32 4
  store i32 0, i32* %block_type89, align 4, !tbaa !29
  %69 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %mixed_block_flag90 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %69, i32 0, i32 5
  store i32 0, i32* %mixed_block_flag90, align 4, !tbaa !30
  %70 = bitcast i32* %r1c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %71 = bitcast i32* %r0c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #1
  %72 = bitcast i32* %i62 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #1
  br label %if.end.91

if.end.91:                                        ; preds = %for.end.72, %if.end.60
  %call92 = call i32 @get1bit()
  %73 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %scalefac_scale = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %73, i32 0, i32 14
  store i32 %call92, i32* %scalefac_scale, align 4, !tbaa !33
  %call93 = call i32 @get1bit()
  %74 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %count1table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %74, i32 0, i32 15
  store i32 %call93, i32* %count1table_select, align 4, !tbaa !34
  %75 = bitcast i32* %qss to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #1
  br label %for.inc.94

for.inc.94:                                       ; preds = %if.end.91
  %77 = load i32, i32* %ch, align 4, !tbaa !1
  %inc95 = add nsw i32 %77, 1
  store i32 %inc95, i32* %ch, align 4, !tbaa !1
  br label %for.cond

for.end.96:                                       ; preds = %for.cond
  %78 = bitcast i32* %powdiff to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  %79 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @III_get_side_info_1(%struct.III_sideinfo* %si, i32 %stereo, i32 %ms_stereo, i64 %sfreq, i32 %single) #0 {
entry:
  %si.addr = alloca %struct.III_sideinfo*, align 8
  %stereo.addr = alloca i32, align 4
  %ms_stereo.addr = alloca i32, align 4
  %sfreq.addr = alloca i64, align 8
  %single.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %gr = alloca i32, align 4
  %powdiff = alloca i32, align 4
  %gr_info = alloca %struct.gr_info_s*, align 8
  %qss = alloca i32, align 4
  %i = alloca i32, align 4
  %sbg = alloca i32, align 4
  %i74 = alloca i32, align 4
  %r0c = alloca i32, align 4
  %r1c = alloca i32, align 4
  store %struct.III_sideinfo* %si, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  store i32 %stereo, i32* %stereo.addr, align 4, !tbaa !1
  store i32 %ms_stereo, i32* %ms_stereo.addr, align 4, !tbaa !1
  store i64 %sfreq, i64* %sfreq.addr, align 8, !tbaa !20
  store i32 %single, i32* %single.addr, align 4, !tbaa !1
  %0 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %gr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %powdiff to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load i32, i32* %single.addr, align 4, !tbaa !1
  %cmp = icmp eq i32 %3, 3
  %cond = select i1 %cmp, i32 4, i32 0
  store i32 %cond, i32* %powdiff, align 4, !tbaa !1
  %call = call i32 @getbits(i32 9)
  %4 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %main_data_begin = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %4, i32 0, i32 0
  store i32 %call, i32* %main_data_begin, align 4, !tbaa !18
  %5 = load i32, i32* %stereo.addr, align 4, !tbaa !1
  %cmp1 = icmp eq i32 %5, 1
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call2 = call i32 @getbits_fast(i32 5)
  %6 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %private_bits = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %6, i32 0, i32 1
  store i32 %call2, i32* %private_bits, align 4, !tbaa !24
  br label %if.end

if.else:                                          ; preds = %entry
  %call3 = call i32 @getbits_fast(i32 3)
  %7 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %private_bits4 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %7, i32 0, i32 1
  store i32 %call3, i32* %private_bits4, align 4, !tbaa !24
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %ch, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %ch, align 4, !tbaa !1
  %9 = load i32, i32* %stereo.addr, align 4, !tbaa !1
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %ch6 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %11, i32 0, i32 2
  %arrayidx = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch6, i32 0, i64 %idxprom
  %gr7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr7, i32 0, i64 0
  %scfsi = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %arrayidx8, i32 0, i32 0
  store i32 -1, i32* %scfsi, align 4, !tbaa !35
  %call9 = call i32 @getbits_fast(i32 4)
  %12 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom10 = sext i32 %12 to i64
  %13 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %ch11 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch11, i32 0, i64 %idxprom10
  %gr13 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr13, i32 0, i64 1
  %scfsi15 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %arrayidx14, i32 0, i32 0
  store i32 %call9, i32* %scfsi15, align 4, !tbaa !35
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %ch, align 4, !tbaa !1
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %ch, align 4, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %gr, align 4, !tbaa !1
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.110, %for.end
  %15 = load i32, i32* %gr, align 4, !tbaa !1
  %cmp17 = icmp slt i32 %15, 2
  br i1 %cmp17, label %for.body.18, label %for.end.112

for.body.18:                                      ; preds = %for.cond.16
  store i32 0, i32* %ch, align 4, !tbaa !1
  br label %for.cond.19

for.cond.19:                                      ; preds = %for.inc.107, %for.body.18
  %16 = load i32, i32* %ch, align 4, !tbaa !1
  %17 = load i32, i32* %stereo.addr, align 4, !tbaa !1
  %cmp20 = icmp slt i32 %16, %17
  br i1 %cmp20, label %for.body.21, label %for.end.109

for.body.21:                                      ; preds = %for.cond.19
  %18 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = load i32, i32* %gr, align 4, !tbaa !1
  %idxprom22 = sext i32 %19 to i64
  %20 = load i32, i32* %ch, align 4, !tbaa !1
  %idxprom23 = sext i32 %20 to i64
  %21 = load %struct.III_sideinfo*, %struct.III_sideinfo** %si.addr, align 8, !tbaa !7
  %ch24 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %21, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %ch24, i32 0, i64 %idxprom23
  %gr26 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx25, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %gr26, i32 0, i64 %idxprom22
  store %struct.gr_info_s* %arrayidx27, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %call28 = call i32 @getbits(i32 12)
  %22 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %part2_3_length = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %22, i32 0, i32 1
  store i32 %call28, i32* %part2_3_length, align 4, !tbaa !25
  %call29 = call i32 @getbits_fast(i32 9)
  %23 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %23, i32 0, i32 2
  store i32 %call29, i32* %big_values, align 4, !tbaa !26
  %24 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values30 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %24, i32 0, i32 2
  %25 = load i32, i32* %big_values30, align 4, !tbaa !26
  %cmp31 = icmp ugt i32 %25, 288
  br i1 %cmp31, label %if.then.32, label %if.end.35

if.then.32:                                       ; preds = %for.body.21
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %27 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %big_values34 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %27, i32 0, i32 2
  store i32 288, i32* %big_values34, align 4, !tbaa !26
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.32, %for.body.21
  %28 = bitcast i32* %qss to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %call36 = call i32 @getbits_fast(i32 8)
  store i32 %call36, i32* %qss, align 4, !tbaa !1
  %29 = load i32, i32* %qss, align 4, !tbaa !1
  %idx.ext = zext i32 %29 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds double, double* getelementptr inbounds ([378 x double], [378 x double]* @gainpow2, i32 0, i64 256), i64 %idx.neg
  %30 = load i32, i32* %powdiff, align 4, !tbaa !1
  %idx.ext37 = sext i32 %30 to i64
  %add.ptr38 = getelementptr inbounds double, double* %add.ptr, i64 %idx.ext37
  %31 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %31, i32 0, i32 17
  store double* %add.ptr38, double** %pow2gain, align 8, !tbaa !27
  %32 = bitcast i32* %qss to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  %33 = load i32, i32* %ms_stereo.addr, align 4, !tbaa !1
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %if.then.39, label %if.end.42

if.then.39:                                       ; preds = %if.end.35
  %34 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain40 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %34, i32 0, i32 17
  %35 = load double*, double** %pow2gain40, align 8, !tbaa !27
  %add.ptr41 = getelementptr inbounds double, double* %35, i64 2
  store double* %add.ptr41, double** %pow2gain40, align 8, !tbaa !27
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.39, %if.end.35
  %call43 = call i32 @getbits_fast(i32 4)
  %36 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %scalefac_compress = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %36, i32 0, i32 3
  store i32 %call43, i32* %scalefac_compress, align 4, !tbaa !28
  %call44 = call i32 @get1bit()
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.then.46, label %if.else.73

if.then.46:                                       ; preds = %if.end.42
  %37 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %37) #1
  %call47 = call i32 @getbits_fast(i32 2)
  %38 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %38, i32 0, i32 4
  store i32 %call47, i32* %block_type, align 4, !tbaa !29
  %call48 = call i32 @get1bit()
  %39 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %39, i32 0, i32 5
  store i32 %call48, i32* %mixed_block_flag, align 4, !tbaa !30
  %call49 = call i32 @getbits_fast(i32 5)
  %40 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %40, i32 0, i32 6
  %arrayidx50 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i32 0, i64 0
  store i32 %call49, i32* %arrayidx50, align 4, !tbaa !1
  %call51 = call i32 @getbits_fast(i32 5)
  %41 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select52 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %41, i32 0, i32 6
  %arrayidx53 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select52, i32 0, i64 1
  store i32 %call51, i32* %arrayidx53, align 4, !tbaa !1
  %42 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select54 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %42, i32 0, i32 6
  %arrayidx55 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select54, i32 0, i64 2
  store i32 0, i32* %arrayidx55, align 4, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.56

for.cond.56:                                      ; preds = %for.inc.65, %if.then.46
  %43 = load i32, i32* %i, align 4, !tbaa !1
  %cmp57 = icmp slt i32 %43, 3
  br i1 %cmp57, label %for.body.58, label %for.end.67

for.body.58:                                      ; preds = %for.cond.56
  %44 = bitcast i32* %sbg to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #1
  %call59 = call i32 @getbits_fast(i32 3)
  %shl = shl i32 %call59, 3
  store i32 %shl, i32* %sbg, align 4, !tbaa !1
  %45 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %pow2gain60 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %45, i32 0, i32 17
  %46 = load double*, double** %pow2gain60, align 8, !tbaa !27
  %47 = load i32, i32* %sbg, align 4, !tbaa !1
  %idx.ext61 = zext i32 %47 to i64
  %add.ptr62 = getelementptr inbounds double, double* %46, i64 %idx.ext61
  %48 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom63 = sext i32 %48 to i64
  %49 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %full_gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %49, i32 0, i32 16
  %arrayidx64 = getelementptr inbounds [3 x double*], [3 x double*]* %full_gain, i32 0, i64 %idxprom63
  store double* %add.ptr62, double** %arrayidx64, align 8, !tbaa !7
  %50 = bitcast i32* %sbg to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  br label %for.inc.65

for.inc.65:                                       ; preds = %for.body.58
  %51 = load i32, i32* %i, align 4, !tbaa !1
  %inc66 = add nsw i32 %51, 1
  store i32 %inc66, i32* %i, align 4, !tbaa !1
  br label %for.cond.56

for.end.67:                                       ; preds = %for.cond.56
  %52 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type68 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %52, i32 0, i32 4
  %53 = load i32, i32* %block_type68, align 4, !tbaa !29
  %cmp69 = icmp eq i32 %53, 0
  br i1 %cmp69, label %if.then.70, label %if.end.72

if.then.70:                                       ; preds = %for.end.67
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

if.end.72:                                        ; preds = %for.end.67
  %55 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %55, i32 0, i32 11
  store i32 18, i32* %region1start, align 4, !tbaa !31
  %56 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region2start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %56, i32 0, i32 12
  store i32 288, i32* %region2start, align 4, !tbaa !32
  %57 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  br label %if.end.103

if.else.73:                                       ; preds = %if.end.42
  %58 = bitcast i32* %i74 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %58) #1
  %59 = bitcast i32* %r0c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #1
  %60 = bitcast i32* %r1c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60) #1
  store i32 0, i32* %i74, align 4, !tbaa !1
  br label %for.cond.75

for.cond.75:                                      ; preds = %for.inc.82, %if.else.73
  %61 = load i32, i32* %i74, align 4, !tbaa !1
  %cmp76 = icmp slt i32 %61, 3
  br i1 %cmp76, label %for.body.77, label %for.end.84

for.body.77:                                      ; preds = %for.cond.75
  %call78 = call i32 @getbits_fast(i32 5)
  %62 = load i32, i32* %i74, align 4, !tbaa !1
  %idxprom79 = sext i32 %62 to i64
  %63 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %table_select80 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %63, i32 0, i32 6
  %arrayidx81 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select80, i32 0, i64 %idxprom79
  store i32 %call78, i32* %arrayidx81, align 4, !tbaa !1
  br label %for.inc.82

for.inc.82:                                       ; preds = %for.body.77
  %64 = load i32, i32* %i74, align 4, !tbaa !1
  %inc83 = add nsw i32 %64, 1
  store i32 %inc83, i32* %i74, align 4, !tbaa !1
  br label %for.cond.75

for.end.84:                                       ; preds = %for.cond.75
  %call85 = call i32 @getbits_fast(i32 4)
  store i32 %call85, i32* %r0c, align 4, !tbaa !1
  %call86 = call i32 @getbits_fast(i32 3)
  store i32 %call86, i32* %r1c, align 4, !tbaa !1
  %65 = load i32, i32* %r0c, align 4, !tbaa !1
  %add = add nsw i32 %65, 1
  %idxprom87 = sext i32 %add to i64
  %66 = load i64, i64* %sfreq.addr, align 8, !tbaa !20
  %arrayidx88 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %66
  %longIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx88, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx, i32 0, i64 %idxprom87
  %67 = load i16, i16* %arrayidx89, align 2, !tbaa !9
  %conv = sext i16 %67 to i32
  %shr = ashr i32 %conv, 1
  %68 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region1start90 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %68, i32 0, i32 11
  store i32 %shr, i32* %region1start90, align 4, !tbaa !31
  %69 = load i32, i32* %r0c, align 4, !tbaa !1
  %add91 = add nsw i32 %69, 1
  %70 = load i32, i32* %r1c, align 4, !tbaa !1
  %add92 = add nsw i32 %add91, %70
  %add93 = add nsw i32 %add92, 1
  %idxprom94 = sext i32 %add93 to i64
  %71 = load i64, i64* %sfreq.addr, align 8, !tbaa !20
  %arrayidx95 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %71
  %longIdx96 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %arrayidx95, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx96, i32 0, i64 %idxprom94
  %72 = load i16, i16* %arrayidx97, align 2, !tbaa !9
  %conv98 = sext i16 %72 to i32
  %shr99 = ashr i32 %conv98, 1
  %73 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %region2start100 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %73, i32 0, i32 12
  store i32 %shr99, i32* %region2start100, align 4, !tbaa !32
  %74 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %block_type101 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %74, i32 0, i32 4
  store i32 0, i32* %block_type101, align 4, !tbaa !29
  %75 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %mixed_block_flag102 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %75, i32 0, i32 5
  store i32 0, i32* %mixed_block_flag102, align 4, !tbaa !30
  %76 = bitcast i32* %r1c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #1
  %77 = bitcast i32* %r0c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %78 = bitcast i32* %i74 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  br label %if.end.103

if.end.103:                                       ; preds = %for.end.84, %if.end.72
  %call104 = call i32 @get1bit()
  %79 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %preflag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %79, i32 0, i32 13
  store i32 %call104, i32* %preflag, align 4, !tbaa !36
  %call105 = call i32 @get1bit()
  %80 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %scalefac_scale = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %80, i32 0, i32 14
  store i32 %call105, i32* %scalefac_scale, align 4, !tbaa !33
  %call106 = call i32 @get1bit()
  %81 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info, align 8, !tbaa !7
  %count1table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %81, i32 0, i32 15
  store i32 %call106, i32* %count1table_select, align 4, !tbaa !34
  %82 = bitcast %struct.gr_info_s** %gr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  br label %for.inc.107

for.inc.107:                                      ; preds = %if.end.103
  %83 = load i32, i32* %ch, align 4, !tbaa !1
  %inc108 = add nsw i32 %83, 1
  store i32 %inc108, i32* %ch, align 4, !tbaa !1
  br label %for.cond.19

for.end.109:                                      ; preds = %for.cond.19
  br label %for.inc.110

for.inc.110:                                      ; preds = %for.end.109
  %84 = load i32, i32* %gr, align 4, !tbaa !1
  %inc111 = add nsw i32 %84, 1
  store i32 %inc111, i32* %gr, align 4, !tbaa !1
  br label %for.cond.16

for.end.112:                                      ; preds = %for.cond.16
  %85 = bitcast i32* %powdiff to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #1
  %86 = bitcast i32* %gr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #1
  %87 = bitcast i32* %ch to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  ret void
}

declare i32 @set_pointer(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @III_get_scale_factors_2(i32* %scf, %struct.gr_info_s* %gr_info, i32 %i_stereo) #0 {
entry:
  %scf.addr = alloca i32*, align 8
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %i_stereo.addr = alloca i32, align 4
  %pnt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %slen = alloca i32, align 4
  %n = alloca i32, align 4
  %numbits = alloca i32, align 4
  %num = alloca i32, align 4
  store i32* %scf, i32** %scf.addr, align 8, !tbaa !7
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  store i32 %i_stereo, i32* %i_stereo.addr, align 4, !tbaa !1
  %0 = bitcast i8** %pnt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %slen to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %n, align 4, !tbaa !1
  %5 = bitcast i32* %numbits to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %numbits, align 4, !tbaa !1
  %6 = load i32, i32* %i_stereo.addr, align 4, !tbaa !1
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_compress = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %7, i32 0, i32 3
  %8 = load i32, i32* %scalefac_compress, align 4, !tbaa !28
  %shr = lshr i32 %8, 1
  %idxprom = zext i32 %shr to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4, !tbaa !1
  store i32 %9, i32* %slen, align 4, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %10 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_compress1 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %10, i32 0, i32 3
  %11 = load i32, i32* %scalefac_compress1, align 4, !tbaa !28
  %idxprom2 = zext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i32 0, i64 %idxprom2
  %12 = load i32, i32* %arrayidx3, align 4, !tbaa !1
  store i32 %12, i32* %slen, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %slen, align 4, !tbaa !1
  %shr4 = lshr i32 %13, 15
  %and = and i32 %shr4, 1
  %14 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %preflag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %14, i32 0, i32 13
  store i32 %and, i32* %preflag, align 4, !tbaa !36
  store i32 0, i32* %n, align 4, !tbaa !1
  %15 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %15, i32 0, i32 4
  %16 = load i32, i32* %block_type, align 4, !tbaa !29
  %cmp = icmp eq i32 %16, 2
  br i1 %cmp, label %if.then.5, label %if.end.10

if.then.5:                                        ; preds = %if.end
  %17 = load i32, i32* %n, align 4, !tbaa !1
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %n, align 4, !tbaa !1
  %18 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %18, i32 0, i32 5
  %19 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool6 = icmp ne i32 %19, 0
  br i1 %tobool6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.then.5
  %20 = load i32, i32* %n, align 4, !tbaa !1
  %inc8 = add nsw i32 %20, 1
  store i32 %inc8, i32* %n, align 4, !tbaa !1
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %if.then.5
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %21 = load i32, i32* %slen, align 4, !tbaa !1
  %shr11 = lshr i32 %21, 12
  %and12 = and i32 %shr11, 7
  %idxprom13 = zext i32 %and12 to i64
  %22 = load i32, i32* %n, align 4, !tbaa !1
  %idxprom14 = sext i32 %22 to i64
  %arrayidx15 = getelementptr inbounds [3 x [6 x [4 x i8]]], [3 x [6 x [4 x i8]]]* @III_get_scale_factors_2.stab, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [6 x [4 x i8]], [6 x [4 x i8]]* %arrayidx15, i32 0, i64 %idxprom13
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx16, i32 0, i32 0
  store i8* %arraydecay, i8** %pnt, align 8, !tbaa !7
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.45, %if.end.10
  %23 = load i32, i32* %i, align 4, !tbaa !1
  %cmp17 = icmp slt i32 %23, 4
  br i1 %cmp17, label %for.body, label %for.end.47

for.body:                                         ; preds = %for.cond
  %24 = bitcast i32* %num to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #1
  %25 = load i32, i32* %slen, align 4, !tbaa !1
  %and18 = and i32 %25, 7
  store i32 %and18, i32* %num, align 4, !tbaa !1
  %26 = load i32, i32* %slen, align 4, !tbaa !1
  %shr19 = lshr i32 %26, 3
  store i32 %shr19, i32* %slen, align 4, !tbaa !1
  %27 = load i32, i32* %num, align 4, !tbaa !1
  %tobool20 = icmp ne i32 %27, 0
  br i1 %tobool20, label %if.then.21, label %if.else.32

if.then.21:                                       ; preds = %for.body
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc, %if.then.21
  %28 = load i32, i32* %j, align 4, !tbaa !1
  %29 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom23 = sext i32 %29 to i64
  %30 = load i8*, i8** %pnt, align 8, !tbaa !7
  %arrayidx24 = getelementptr inbounds i8, i8* %30, i64 %idxprom23
  %31 = load i8, i8* %arrayidx24, align 1, !tbaa !37
  %conv = zext i8 %31 to i32
  %cmp25 = icmp slt i32 %28, %conv
  br i1 %cmp25, label %for.body.27, label %for.end

for.body.27:                                      ; preds = %for.cond.22
  %32 = load i32, i32* %num, align 4, !tbaa !1
  %call = call i32 @getbits_fast(i32 %32)
  %33 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds i32, i32* %33, i32 1
  store i32* %incdec.ptr, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call, i32* %33, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body.27
  %34 = load i32, i32* %j, align 4, !tbaa !1
  %inc28 = add nsw i32 %34, 1
  store i32 %inc28, i32* %j, align 4, !tbaa !1
  br label %for.cond.22

for.end:                                          ; preds = %for.cond.22
  %35 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom29 = sext i32 %35 to i64
  %36 = load i8*, i8** %pnt, align 8, !tbaa !7
  %arrayidx30 = getelementptr inbounds i8, i8* %36, i64 %idxprom29
  %37 = load i8, i8* %arrayidx30, align 1, !tbaa !37
  %conv31 = zext i8 %37 to i32
  %38 = load i32, i32* %num, align 4, !tbaa !1
  %mul = mul nsw i32 %conv31, %38
  %39 = load i32, i32* %numbits, align 4, !tbaa !1
  %add = add nsw i32 %39, %mul
  store i32 %add, i32* %numbits, align 4, !tbaa !1
  br label %if.end.44

if.else.32:                                       ; preds = %for.body
  store i32 0, i32* %j, align 4, !tbaa !1
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc.41, %if.else.32
  %40 = load i32, i32* %j, align 4, !tbaa !1
  %41 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom34 = sext i32 %41 to i64
  %42 = load i8*, i8** %pnt, align 8, !tbaa !7
  %arrayidx35 = getelementptr inbounds i8, i8* %42, i64 %idxprom34
  %43 = load i8, i8* %arrayidx35, align 1, !tbaa !37
  %conv36 = zext i8 %43 to i32
  %cmp37 = icmp slt i32 %40, %conv36
  br i1 %cmp37, label %for.body.39, label %for.end.43

for.body.39:                                      ; preds = %for.cond.33
  %44 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr40 = getelementptr inbounds i32, i32* %44, i32 1
  store i32* %incdec.ptr40, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %44, align 4, !tbaa !1
  br label %for.inc.41

for.inc.41:                                       ; preds = %for.body.39
  %45 = load i32, i32* %j, align 4, !tbaa !1
  %inc42 = add nsw i32 %45, 1
  store i32 %inc42, i32* %j, align 4, !tbaa !1
  br label %for.cond.33

for.end.43:                                       ; preds = %for.cond.33
  br label %if.end.44

if.end.44:                                        ; preds = %for.end.43, %for.end
  %46 = bitcast i32* %num to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  br label %for.inc.45

for.inc.45:                                       ; preds = %if.end.44
  %47 = load i32, i32* %i, align 4, !tbaa !1
  %inc46 = add nsw i32 %47, 1
  store i32 %inc46, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.end.47:                                       ; preds = %for.cond
  %48 = load i32, i32* %n, align 4, !tbaa !1
  %shl = shl i32 %48, 1
  %add48 = add nsw i32 %shl, 1
  store i32 %add48, i32* %n, align 4, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.49

for.cond.49:                                      ; preds = %for.inc.54, %for.end.47
  %49 = load i32, i32* %i, align 4, !tbaa !1
  %50 = load i32, i32* %n, align 4, !tbaa !1
  %cmp50 = icmp slt i32 %49, %50
  br i1 %cmp50, label %for.body.52, label %for.end.56

for.body.52:                                      ; preds = %for.cond.49
  %51 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr53 = getelementptr inbounds i32, i32* %51, i32 1
  store i32* %incdec.ptr53, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %51, align 4, !tbaa !1
  br label %for.inc.54

for.inc.54:                                       ; preds = %for.body.52
  %52 = load i32, i32* %i, align 4, !tbaa !1
  %inc55 = add nsw i32 %52, 1
  store i32 %inc55, i32* %i, align 4, !tbaa !1
  br label %for.cond.49

for.end.56:                                       ; preds = %for.cond.49
  %53 = load i32, i32* %numbits, align 4, !tbaa !1
  %54 = bitcast i32* %numbits to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54) #1
  %55 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #1
  %56 = bitcast i32* %slen to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #1
  %59 = bitcast i8** %pnt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %59) #1
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @III_get_scale_factors_1(i32* %scf, %struct.gr_info_s* %gr_info) #0 {
entry:
  %scf.addr = alloca i32*, align 8
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %numbits = alloca i32, align 4
  %num0 = alloca i32, align 4
  %num1 = alloca i32, align 4
  %i = alloca i32, align 4
  %i27 = alloca i32, align 4
  %scfsi = alloca i32, align 4
  store i32* %scf, i32** %scf.addr, align 8, !tbaa !7
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %0 = bitcast i32* %numbits to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %num0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_compress = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %2, i32 0, i32 3
  %3 = load i32, i32* %scalefac_compress, align 4, !tbaa !28
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @III_get_scale_factors_1.slen, i32 0, i64 0), i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !37
  %conv = zext i8 %4 to i32
  store i32 %conv, i32* %num0, align 4, !tbaa !1
  %5 = bitcast i32* %num1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_compress1 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %6, i32 0, i32 3
  %7 = load i32, i32* %scalefac_compress1, align 4, !tbaa !28
  %idxprom2 = zext i32 %7 to i64
  %arrayidx3 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @III_get_scale_factors_1.slen, i32 0, i64 1), i32 0, i64 %idxprom2
  %8 = load i8, i8* %arrayidx3, align 1, !tbaa !37
  %conv4 = zext i8 %8 to i32
  store i32 %conv4, i32* %num1, align 4, !tbaa !1
  %9 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %9, i32 0, i32 4
  %10 = load i32, i32* %block_type, align 4, !tbaa !29
  %cmp = icmp eq i32 %10, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %11 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  store i32 18, i32* %i, align 4, !tbaa !1
  %12 = load i32, i32* %num0, align 4, !tbaa !1
  %13 = load i32, i32* %num1, align 4, !tbaa !1
  %add = add nsw i32 %12, %13
  %mul = mul nsw i32 %add, 18
  store i32 %mul, i32* %numbits, align 4, !tbaa !1
  %14 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %14, i32 0, i32 5
  %15 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool = icmp ne i32 %15, 0
  br i1 %tobool, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %if.then
  store i32 8, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.6
  %16 = load i32, i32* %i, align 4, !tbaa !1
  %tobool7 = icmp ne i32 %16, 0
  br i1 %tobool7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %num0, align 4, !tbaa !1
  %call = call i32 @getbits_fast(i32 %17)
  %18 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds i32, i32* %18, i32 1
  store i32* %incdec.ptr, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call, i32* %18, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !tbaa !1
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 9, i32* %i, align 4, !tbaa !1
  %20 = load i32, i32* %num0, align 4, !tbaa !1
  %21 = load i32, i32* %numbits, align 4, !tbaa !1
  %sub = sub nsw i32 %21, %20
  store i32 %sub, i32* %numbits, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc.13, %if.end
  %22 = load i32, i32* %i, align 4, !tbaa !1
  %tobool9 = icmp ne i32 %22, 0
  br i1 %tobool9, label %for.body.10, label %for.end.15

for.body.10:                                      ; preds = %for.cond.8
  %23 = load i32, i32* %num0, align 4, !tbaa !1
  %call11 = call i32 @getbits_fast(i32 %23)
  %24 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr12 = getelementptr inbounds i32, i32* %24, i32 1
  store i32* %incdec.ptr12, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call11, i32* %24, align 4, !tbaa !1
  br label %for.inc.13

for.inc.13:                                       ; preds = %for.body.10
  %25 = load i32, i32* %i, align 4, !tbaa !1
  %dec14 = add nsw i32 %25, -1
  store i32 %dec14, i32* %i, align 4, !tbaa !1
  br label %for.cond.8

for.end.15:                                       ; preds = %for.cond.8
  store i32 18, i32* %i, align 4, !tbaa !1
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.21, %for.end.15
  %26 = load i32, i32* %i, align 4, !tbaa !1
  %tobool17 = icmp ne i32 %26, 0
  br i1 %tobool17, label %for.body.18, label %for.end.23

for.body.18:                                      ; preds = %for.cond.16
  %27 = load i32, i32* %num1, align 4, !tbaa !1
  %call19 = call i32 @getbits_fast(i32 %27)
  %28 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr20 = getelementptr inbounds i32, i32* %28, i32 1
  store i32* %incdec.ptr20, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call19, i32* %28, align 4, !tbaa !1
  br label %for.inc.21

for.inc.21:                                       ; preds = %for.body.18
  %29 = load i32, i32* %i, align 4, !tbaa !1
  %dec22 = add nsw i32 %29, -1
  store i32 %dec22, i32* %i, align 4, !tbaa !1
  br label %for.cond.16

for.end.23:                                       ; preds = %for.cond.16
  %30 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr24 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %incdec.ptr24, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %30, align 4, !tbaa !1
  %31 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr25 = getelementptr inbounds i32, i32* %31, i32 1
  store i32* %incdec.ptr25, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %31, align 4, !tbaa !1
  %32 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr26 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %incdec.ptr26, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %32, align 4, !tbaa !1
  %33 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #1
  br label %if.end.116

if.else:                                          ; preds = %entry
  %34 = bitcast i32* %i27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %34) #1
  %35 = bitcast i32* %scfsi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #1
  %36 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scfsi28 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %36, i32 0, i32 0
  %37 = load i32, i32* %scfsi28, align 4, !tbaa !35
  store i32 %37, i32* %scfsi, align 4, !tbaa !1
  %38 = load i32, i32* %scfsi, align 4, !tbaa !1
  %cmp29 = icmp slt i32 %38, 0
  br i1 %cmp29, label %if.then.31, label %if.else.51

if.then.31:                                       ; preds = %if.else
  store i32 11, i32* %i27, align 4, !tbaa !1
  br label %for.cond.32

for.cond.32:                                      ; preds = %for.inc.37, %if.then.31
  %39 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool33 = icmp ne i32 %39, 0
  br i1 %tobool33, label %for.body.34, label %for.end.39

for.body.34:                                      ; preds = %for.cond.32
  %40 = load i32, i32* %num0, align 4, !tbaa !1
  %call35 = call i32 @getbits_fast(i32 %40)
  %41 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr36 = getelementptr inbounds i32, i32* %41, i32 1
  store i32* %incdec.ptr36, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call35, i32* %41, align 4, !tbaa !1
  br label %for.inc.37

for.inc.37:                                       ; preds = %for.body.34
  %42 = load i32, i32* %i27, align 4, !tbaa !1
  %dec38 = add nsw i32 %42, -1
  store i32 %dec38, i32* %i27, align 4, !tbaa !1
  br label %for.cond.32

for.end.39:                                       ; preds = %for.cond.32
  store i32 10, i32* %i27, align 4, !tbaa !1
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.45, %for.end.39
  %43 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool41 = icmp ne i32 %43, 0
  br i1 %tobool41, label %for.body.42, label %for.end.47

for.body.42:                                      ; preds = %for.cond.40
  %44 = load i32, i32* %num1, align 4, !tbaa !1
  %call43 = call i32 @getbits_fast(i32 %44)
  %45 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr44 = getelementptr inbounds i32, i32* %45, i32 1
  store i32* %incdec.ptr44, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call43, i32* %45, align 4, !tbaa !1
  br label %for.inc.45

for.inc.45:                                       ; preds = %for.body.42
  %46 = load i32, i32* %i27, align 4, !tbaa !1
  %dec46 = add nsw i32 %46, -1
  store i32 %dec46, i32* %i27, align 4, !tbaa !1
  br label %for.cond.40

for.end.47:                                       ; preds = %for.cond.40
  %47 = load i32, i32* %num0, align 4, !tbaa !1
  %48 = load i32, i32* %num1, align 4, !tbaa !1
  %add48 = add nsw i32 %47, %48
  %mul49 = mul nsw i32 %add48, 10
  %49 = load i32, i32* %num0, align 4, !tbaa !1
  %add50 = add nsw i32 %mul49, %49
  store i32 %add50, i32* %numbits, align 4, !tbaa !1
  br label %if.end.114

if.else.51:                                       ; preds = %if.else
  store i32 0, i32* %numbits, align 4, !tbaa !1
  %50 = load i32, i32* %scfsi, align 4, !tbaa !1
  %and = and i32 %50, 8
  %tobool52 = icmp ne i32 %and, 0
  br i1 %tobool52, label %if.else.64, label %if.then.53

if.then.53:                                       ; preds = %if.else.51
  store i32 6, i32* %i27, align 4, !tbaa !1
  br label %for.cond.54

for.cond.54:                                      ; preds = %for.inc.59, %if.then.53
  %51 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool55 = icmp ne i32 %51, 0
  br i1 %tobool55, label %for.body.56, label %for.end.61

for.body.56:                                      ; preds = %for.cond.54
  %52 = load i32, i32* %num0, align 4, !tbaa !1
  %call57 = call i32 @getbits_fast(i32 %52)
  %53 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr58 = getelementptr inbounds i32, i32* %53, i32 1
  store i32* %incdec.ptr58, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call57, i32* %53, align 4, !tbaa !1
  br label %for.inc.59

for.inc.59:                                       ; preds = %for.body.56
  %54 = load i32, i32* %i27, align 4, !tbaa !1
  %dec60 = add nsw i32 %54, -1
  store i32 %dec60, i32* %i27, align 4, !tbaa !1
  br label %for.cond.54

for.end.61:                                       ; preds = %for.cond.54
  %55 = load i32, i32* %num0, align 4, !tbaa !1
  %mul62 = mul nsw i32 %55, 6
  %56 = load i32, i32* %numbits, align 4, !tbaa !1
  %add63 = add nsw i32 %56, %mul62
  store i32 %add63, i32* %numbits, align 4, !tbaa !1
  br label %if.end.65

if.else.64:                                       ; preds = %if.else.51
  %57 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %add.ptr = getelementptr inbounds i32, i32* %57, i64 6
  store i32* %add.ptr, i32** %scf.addr, align 8, !tbaa !7
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.64, %for.end.61
  %58 = load i32, i32* %scfsi, align 4, !tbaa !1
  %and66 = and i32 %58, 4
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.else.79, label %if.then.68

if.then.68:                                       ; preds = %if.end.65
  store i32 5, i32* %i27, align 4, !tbaa !1
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.74, %if.then.68
  %59 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool70 = icmp ne i32 %59, 0
  br i1 %tobool70, label %for.body.71, label %for.end.76

for.body.71:                                      ; preds = %for.cond.69
  %60 = load i32, i32* %num0, align 4, !tbaa !1
  %call72 = call i32 @getbits_fast(i32 %60)
  %61 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr73 = getelementptr inbounds i32, i32* %61, i32 1
  store i32* %incdec.ptr73, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call72, i32* %61, align 4, !tbaa !1
  br label %for.inc.74

for.inc.74:                                       ; preds = %for.body.71
  %62 = load i32, i32* %i27, align 4, !tbaa !1
  %dec75 = add nsw i32 %62, -1
  store i32 %dec75, i32* %i27, align 4, !tbaa !1
  br label %for.cond.69

for.end.76:                                       ; preds = %for.cond.69
  %63 = load i32, i32* %num0, align 4, !tbaa !1
  %mul77 = mul nsw i32 %63, 5
  %64 = load i32, i32* %numbits, align 4, !tbaa !1
  %add78 = add nsw i32 %64, %mul77
  store i32 %add78, i32* %numbits, align 4, !tbaa !1
  br label %if.end.81

if.else.79:                                       ; preds = %if.end.65
  %65 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %add.ptr80 = getelementptr inbounds i32, i32* %65, i64 5
  store i32* %add.ptr80, i32** %scf.addr, align 8, !tbaa !7
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.79, %for.end.76
  %66 = load i32, i32* %scfsi, align 4, !tbaa !1
  %and82 = and i32 %66, 2
  %tobool83 = icmp ne i32 %and82, 0
  br i1 %tobool83, label %if.else.95, label %if.then.84

if.then.84:                                       ; preds = %if.end.81
  store i32 5, i32* %i27, align 4, !tbaa !1
  br label %for.cond.85

for.cond.85:                                      ; preds = %for.inc.90, %if.then.84
  %67 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool86 = icmp ne i32 %67, 0
  br i1 %tobool86, label %for.body.87, label %for.end.92

for.body.87:                                      ; preds = %for.cond.85
  %68 = load i32, i32* %num1, align 4, !tbaa !1
  %call88 = call i32 @getbits_fast(i32 %68)
  %69 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr89 = getelementptr inbounds i32, i32* %69, i32 1
  store i32* %incdec.ptr89, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call88, i32* %69, align 4, !tbaa !1
  br label %for.inc.90

for.inc.90:                                       ; preds = %for.body.87
  %70 = load i32, i32* %i27, align 4, !tbaa !1
  %dec91 = add nsw i32 %70, -1
  store i32 %dec91, i32* %i27, align 4, !tbaa !1
  br label %for.cond.85

for.end.92:                                       ; preds = %for.cond.85
  %71 = load i32, i32* %num1, align 4, !tbaa !1
  %mul93 = mul nsw i32 %71, 5
  %72 = load i32, i32* %numbits, align 4, !tbaa !1
  %add94 = add nsw i32 %72, %mul93
  store i32 %add94, i32* %numbits, align 4, !tbaa !1
  br label %if.end.97

if.else.95:                                       ; preds = %if.end.81
  %73 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %add.ptr96 = getelementptr inbounds i32, i32* %73, i64 5
  store i32* %add.ptr96, i32** %scf.addr, align 8, !tbaa !7
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.95, %for.end.92
  %74 = load i32, i32* %scfsi, align 4, !tbaa !1
  %and98 = and i32 %74, 1
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.else.111, label %if.then.100

if.then.100:                                      ; preds = %if.end.97
  store i32 5, i32* %i27, align 4, !tbaa !1
  br label %for.cond.101

for.cond.101:                                     ; preds = %for.inc.106, %if.then.100
  %75 = load i32, i32* %i27, align 4, !tbaa !1
  %tobool102 = icmp ne i32 %75, 0
  br i1 %tobool102, label %for.body.103, label %for.end.108

for.body.103:                                     ; preds = %for.cond.101
  %76 = load i32, i32* %num1, align 4, !tbaa !1
  %call104 = call i32 @getbits_fast(i32 %76)
  %77 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr105 = getelementptr inbounds i32, i32* %77, i32 1
  store i32* %incdec.ptr105, i32** %scf.addr, align 8, !tbaa !7
  store i32 %call104, i32* %77, align 4, !tbaa !1
  br label %for.inc.106

for.inc.106:                                      ; preds = %for.body.103
  %78 = load i32, i32* %i27, align 4, !tbaa !1
  %dec107 = add nsw i32 %78, -1
  store i32 %dec107, i32* %i27, align 4, !tbaa !1
  br label %for.cond.101

for.end.108:                                      ; preds = %for.cond.101
  %79 = load i32, i32* %num1, align 4, !tbaa !1
  %mul109 = mul nsw i32 %79, 5
  %80 = load i32, i32* %numbits, align 4, !tbaa !1
  %add110 = add nsw i32 %80, %mul109
  store i32 %add110, i32* %numbits, align 4, !tbaa !1
  br label %if.end.113

if.else.111:                                      ; preds = %if.end.97
  %81 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %add.ptr112 = getelementptr inbounds i32, i32* %81, i64 5
  store i32* %add.ptr112, i32** %scf.addr, align 8, !tbaa !7
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.111, %for.end.108
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.113, %for.end.47
  %82 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr115 = getelementptr inbounds i32, i32* %82, i32 1
  store i32* %incdec.ptr115, i32** %scf.addr, align 8, !tbaa !7
  store i32 0, i32* %82, align 4, !tbaa !1
  %83 = bitcast i32* %scfsi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = bitcast i32* %i27 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  br label %if.end.116

if.end.116:                                       ; preds = %if.end.114, %for.end.23
  %85 = load i32, i32* %numbits, align 4, !tbaa !1
  %86 = bitcast i32* %num1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #1
  %87 = bitcast i32* %num0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %88 = bitcast i32* %numbits to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  ret i32 %85
}

; Function Attrs: nounwind uwtable
define internal i32 @III_dequantize_sample([18 x double]* %xr, i32* %scf, %struct.gr_info_s* %gr_info, i32 %sfreq, i32 %part2bits) #0 {
entry:
  %retval = alloca i32, align 4
  %xr.addr = alloca [18 x double]*, align 8
  %scf.addr = alloca i32*, align 8
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %sfreq.addr = alloca i32, align 4
  %part2bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %xrpnt = alloca double*, align 8
  %l = alloca [3 x i32], align 4
  %l3 = alloca i32, align 4
  %part2remain = alloca i32, align 4
  %me = alloca i32*, align 8
  %bv = alloca i32, align 4
  %region1 = alloca i32, align 4
  %region2 = alloca i32, align 4
  %i = alloca i32, align 4
  %max = alloca [4 x i32], align 16
  %step = alloca i32, align 4
  %lwin = alloca i32, align 4
  %cb = alloca i32, align 4
  %v = alloca double, align 8
  %m = alloca i32*, align 8
  %mc = alloca i32, align 4
  %lp = alloca i32, align 4
  %h = alloca %struct.newhuff*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %val = alloca i16*, align 8
  %h179 = alloca %struct.newhuff*, align 8
  %val182 = alloca i16*, align 8
  %a = alloca i16, align 2
  %rmax = alloca i32, align 4
  %pretab = alloca i32*, align 8
  %i339 = alloca i32, align 4
  %max340 = alloca i32, align 4
  %cb341 = alloca i32, align 4
  %m342 = alloca i32*, align 8
  %v346 = alloca double, align 8
  %mc347 = alloca i32, align 4
  %lp352 = alloca i32, align 4
  %h355 = alloca %struct.newhuff*, align 8
  %x364 = alloca i32, align 4
  %y365 = alloca i32, align 4
  %val378 = alloca i16*, align 8
  %h501 = alloca %struct.newhuff*, align 8
  %val505 = alloca i16*, align 8
  %a507 = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store [18 x double]* %xr, [18 x double]** %xr.addr, align 8, !tbaa !7
  store i32* %scf, i32** %scf.addr, align 8, !tbaa !7
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  store i32 %sfreq, i32* %sfreq.addr, align 4, !tbaa !1
  store i32 %part2bits, i32* %part2bits.addr, align 4, !tbaa !1
  %0 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_scale = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1, i32 0, i32 14
  %2 = load i32, i32* %scalefac_scale, align 4, !tbaa !33
  %add = add i32 1, %2
  store i32 %add, i32* %shift, align 4, !tbaa !1
  %3 = bitcast double** %xrpnt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %5 = bitcast [18 x double]* %4 to double*
  store double* %5, double** %xrpnt, align 8, !tbaa !7
  %6 = bitcast [3 x i32]* %l to i8*
  call void @llvm.lifetime.start(i64 12, i8* %6) #1
  %7 = bitcast i32* %l3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %part2remain to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %part2_3_length = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %9, i32 0, i32 1
  %10 = load i32, i32* %part2_3_length, align 4, !tbaa !25
  %11 = load i32, i32* %part2bits.addr, align 4, !tbaa !1
  %sub = sub i32 %10, %11
  store i32 %sub, i32* %part2remain, align 4, !tbaa !1
  %12 = bitcast i32** %me to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = bitcast i32* %bv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %big_values = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %14, i32 0, i32 2
  %15 = load i32, i32* %big_values, align 4, !tbaa !26
  store i32 %15, i32* %bv, align 4, !tbaa !1
  %16 = bitcast i32* %region1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %region1start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %17, i32 0, i32 11
  %18 = load i32, i32* %region1start, align 4, !tbaa !31
  store i32 %18, i32* %region1, align 4, !tbaa !1
  %19 = bitcast i32* %region2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #1
  %20 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %region2start = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %20, i32 0, i32 12
  %21 = load i32, i32* %region2start, align 4, !tbaa !32
  store i32 %21, i32* %region2, align 4, !tbaa !1
  %22 = load i32, i32* %bv, align 4, !tbaa !1
  %sub1 = sub nsw i32 288, %22
  %shr = ashr i32 %sub1, 1
  store i32 %shr, i32* %l3, align 4, !tbaa !1
  %23 = load i32, i32* %bv, align 4, !tbaa !1
  %24 = load i32, i32* %region1, align 4, !tbaa !1
  %cmp = icmp sle i32 %23, %24
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %25 = load i32, i32* %bv, align 4, !tbaa !1
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 0
  store i32 %25, i32* %arrayidx, align 4, !tbaa !1
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 1
  store i32 0, i32* %arrayidx2, align 4, !tbaa !1
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 2
  store i32 0, i32* %arrayidx3, align 4, !tbaa !1
  br label %if.end.17

if.else:                                          ; preds = %entry
  %26 = load i32, i32* %region1, align 4, !tbaa !1
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 0
  store i32 %26, i32* %arrayidx4, align 4, !tbaa !1
  %27 = load i32, i32* %bv, align 4, !tbaa !1
  %28 = load i32, i32* %region2, align 4, !tbaa !1
  %cmp5 = icmp sle i32 %27, %28
  br i1 %cmp5, label %if.then.6, label %if.else.11

if.then.6:                                        ; preds = %if.else
  %29 = load i32, i32* %bv, align 4, !tbaa !1
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 0
  %30 = load i32, i32* %arrayidx7, align 4, !tbaa !1
  %sub8 = sub nsw i32 %29, %30
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 1
  store i32 %sub8, i32* %arrayidx9, align 4, !tbaa !1
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 2
  store i32 0, i32* %arrayidx10, align 4, !tbaa !1
  br label %if.end

if.else.11:                                       ; preds = %if.else
  %31 = load i32, i32* %region2, align 4, !tbaa !1
  %arrayidx12 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 0
  %32 = load i32, i32* %arrayidx12, align 4, !tbaa !1
  %sub13 = sub nsw i32 %31, %32
  %arrayidx14 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 1
  store i32 %sub13, i32* %arrayidx14, align 4, !tbaa !1
  %33 = load i32, i32* %bv, align 4, !tbaa !1
  %34 = load i32, i32* %region2, align 4, !tbaa !1
  %sub15 = sub nsw i32 %33, %34
  %arrayidx16 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 2
  store i32 %sub15, i32* %arrayidx16, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else.11, %if.then.6
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %if.then
  %35 = bitcast i32* %region2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast i32* %region1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #1
  %37 = bitcast i32* %bv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #1
  %38 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %38, i32 0, i32 4
  %39 = load i32, i32* %block_type, align 4, !tbaa !29
  %cmp18 = icmp eq i32 %39, 2
  br i1 %cmp18, label %if.then.19, label %if.else.336

if.then.19:                                       ; preds = %if.end.17
  %40 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %40) #1
  %41 = bitcast [4 x i32]* %max to i8*
  call void @llvm.lifetime.start(i64 16, i8* %41) #1
  %42 = bitcast i32* %step to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42) #1
  store i32 0, i32* %step, align 4, !tbaa !1
  %43 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #1
  store i32 0, i32* %lwin, align 4, !tbaa !1
  %44 = bitcast i32* %cb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #1
  store i32 0, i32* %cb, align 4, !tbaa !1
  %45 = bitcast double* %v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %45) #1
  store double 0.000000e+00, double* %v, align 8, !tbaa !5
  %46 = bitcast i32** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %46) #1
  %47 = bitcast i32* %mc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #1
  %48 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %48, i32 0, i32 5
  %49 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool = icmp ne i32 %49, 0
  br i1 %tobool, label %if.then.20, label %if.else.30

if.then.20:                                       ; preds = %if.then.19
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 3
  store i32 -1, i32* %arrayidx21, align 4, !tbaa !1
  %arrayidx22 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 2
  store i32 2, i32* %arrayidx22, align 4, !tbaa !1
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 1
  store i32 2, i32* %arrayidx23, align 4, !tbaa !1
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 0
  store i32 2, i32* %arrayidx24, align 4, !tbaa !1
  %50 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom = sext i32 %50 to i64
  %arrayidx25 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom
  %arrayidx26 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx25, i32 0, i64 0
  %51 = load i32*, i32** %arrayidx26, align 8, !tbaa !7
  store i32* %51, i32** %m, align 8, !tbaa !7
  %52 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom27 = sext i32 %52 to i64
  %arrayidx28 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i32 0, i64 %idxprom27
  %arrayidx29 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx28, i32 0, i64 0
  %53 = load i32*, i32** %arrayidx29, align 8, !tbaa !7
  store i32* %53, i32** %me, align 8, !tbaa !7
  br label %if.end.41

if.else.30:                                       ; preds = %if.then.19
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 3
  store i32 -1, i32* %arrayidx31, align 4, !tbaa !1
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 2
  store i32 -1, i32* %arrayidx32, align 4, !tbaa !1
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 1
  store i32 -1, i32* %arrayidx33, align 4, !tbaa !1
  %arrayidx34 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 0
  store i32 -1, i32* %arrayidx34, align 4, !tbaa !1
  %54 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom35 = sext i32 %54 to i64
  %arrayidx36 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom35
  %arrayidx37 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx36, i32 0, i64 1
  %55 = load i32*, i32** %arrayidx37, align 8, !tbaa !7
  store i32* %55, i32** %m, align 8, !tbaa !7
  %56 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom38 = sext i32 %56 to i64
  %arrayidx39 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i32 0, i64 %idxprom38
  %arrayidx40 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx39, i32 0, i64 1
  %57 = load i32*, i32** %arrayidx40, align 8, !tbaa !7
  store i32* %57, i32** %me, align 8, !tbaa !7
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.30, %if.then.20
  store i32 0, i32* %mc, align 4, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.172, %if.end.41
  %58 = load i32, i32* %i, align 4, !tbaa !1
  %cmp42 = icmp slt i32 %58, 2
  br i1 %cmp42, label %for.body, label %for.end.173

for.body:                                         ; preds = %for.cond
  %59 = bitcast i32* %lp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #1
  %60 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom43 = sext i32 %60 to i64
  %arrayidx44 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 %idxprom43
  %61 = load i32, i32* %arrayidx44, align 4, !tbaa !1
  store i32 %61, i32* %lp, align 4, !tbaa !1
  %62 = bitcast %struct.newhuff** %h to i8*
  call void @llvm.lifetime.start(i64 8, i8* %62) #1
  %63 = load i32, i32* %i, align 4, !tbaa !1
  %idxprom45 = sext i32 %63 to i64
  %64 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %64, i32 0, i32 6
  %arrayidx46 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i32 0, i64 %idxprom45
  %65 = load i32, i32* %arrayidx46, align 4, !tbaa !1
  %idx.ext = zext i32 %65 to i64
  %add.ptr = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([32 x %struct.newhuff], [32 x %struct.newhuff]* @ht, i32 0, i32 0), i64 %idx.ext
  store %struct.newhuff* %add.ptr, %struct.newhuff** %h, align 8, !tbaa !7
  br label %for.cond.47

for.cond.47:                                      ; preds = %for.inc, %for.body
  %66 = load i32, i32* %lp, align 4, !tbaa !1
  %tobool48 = icmp ne i32 %66, 0
  br i1 %tobool48, label %for.body.49, label %for.end

for.body.49:                                      ; preds = %for.cond.47
  %67 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67) #1
  %68 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i32, i32* %mc, align 4, !tbaa !1
  %tobool50 = icmp ne i32 %69, 0
  br i1 %tobool50, label %if.end.70, label %if.then.51

if.then.51:                                       ; preds = %for.body.49
  %70 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds i32, i32* %70, i32 1
  store i32* %incdec.ptr, i32** %m, align 8, !tbaa !7
  %71 = load i32, i32* %70, align 4, !tbaa !1
  store i32 %71, i32* %mc, align 4, !tbaa !1
  %72 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %73 = bitcast [18 x double]* %72 to double*
  %74 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr52 = getelementptr inbounds i32, i32* %74, i32 1
  store i32* %incdec.ptr52, i32** %m, align 8, !tbaa !7
  %75 = load i32, i32* %74, align 4, !tbaa !1
  %idx.ext53 = sext i32 %75 to i64
  %add.ptr54 = getelementptr inbounds double, double* %73, i64 %idx.ext53
  store double* %add.ptr54, double** %xrpnt, align 8, !tbaa !7
  %76 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr55 = getelementptr inbounds i32, i32* %76, i32 1
  store i32* %incdec.ptr55, i32** %m, align 8, !tbaa !7
  %77 = load i32, i32* %76, align 4, !tbaa !1
  store i32 %77, i32* %lwin, align 4, !tbaa !1
  %78 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr56 = getelementptr inbounds i32, i32* %78, i32 1
  store i32* %incdec.ptr56, i32** %m, align 8, !tbaa !7
  %79 = load i32, i32* %78, align 4, !tbaa !1
  store i32 %79, i32* %cb, align 4, !tbaa !1
  %80 = load i32, i32* %lwin, align 4, !tbaa !1
  %cmp57 = icmp eq i32 %80, 3
  br i1 %cmp57, label %if.then.58, label %if.else.62

if.then.58:                                       ; preds = %if.then.51
  %81 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr59 = getelementptr inbounds i32, i32* %81, i32 1
  store i32* %incdec.ptr59, i32** %scf.addr, align 8, !tbaa !7
  %82 = load i32, i32* %81, align 4, !tbaa !1
  %83 = load i32, i32* %shift, align 4, !tbaa !1
  %shl = shl i32 %82, %83
  %idxprom60 = sext i32 %shl to i64
  %84 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %pow2gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %84, i32 0, i32 17
  %85 = load double*, double** %pow2gain, align 8, !tbaa !27
  %arrayidx61 = getelementptr inbounds double, double* %85, i64 %idxprom60
  %86 = load double, double* %arrayidx61, align 8, !tbaa !5
  store double %86, double* %v, align 8, !tbaa !5
  store i32 1, i32* %step, align 4, !tbaa !1
  br label %if.end.69

if.else.62:                                       ; preds = %if.then.51
  %87 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr63 = getelementptr inbounds i32, i32* %87, i32 1
  store i32* %incdec.ptr63, i32** %scf.addr, align 8, !tbaa !7
  %88 = load i32, i32* %87, align 4, !tbaa !1
  %89 = load i32, i32* %shift, align 4, !tbaa !1
  %shl64 = shl i32 %88, %89
  %idxprom65 = sext i32 %shl64 to i64
  %90 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom66 = sext i32 %90 to i64
  %91 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %full_gain = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %91, i32 0, i32 16
  %arrayidx67 = getelementptr inbounds [3 x double*], [3 x double*]* %full_gain, i32 0, i64 %idxprom66
  %92 = load double*, double** %arrayidx67, align 8, !tbaa !7
  %arrayidx68 = getelementptr inbounds double, double* %92, i64 %idxprom65
  %93 = load double, double* %arrayidx68, align 8, !tbaa !5
  store double %93, double* %v, align 8, !tbaa !5
  store i32 3, i32* %step, align 4, !tbaa !1
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.62, %if.then.58
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %for.body.49
  %94 = bitcast i16** %val to i8*
  call void @llvm.lifetime.start(i64 8, i8* %94) #1
  %95 = load %struct.newhuff*, %struct.newhuff** %h, align 8, !tbaa !7
  %table = getelementptr inbounds %struct.newhuff, %struct.newhuff* %95, i32 0, i32 1
  %96 = load i16*, i16** %table, align 8, !tbaa !38
  store i16* %96, i16** %val, align 8, !tbaa !7
  br label %while.cond

while.cond:                                       ; preds = %if.end.78, %if.end.70
  %97 = load i16*, i16** %val, align 8, !tbaa !7
  %incdec.ptr71 = getelementptr inbounds i16, i16* %97, i32 1
  store i16* %incdec.ptr71, i16** %val, align 8, !tbaa !7
  %98 = load i16, i16* %97, align 2, !tbaa !9
  %conv = sext i16 %98 to i32
  store i32 %conv, i32* %y, align 4, !tbaa !1
  %cmp72 = icmp slt i32 %conv, 0
  br i1 %cmp72, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call i32 @get1bit()
  %tobool74 = icmp ne i32 %call, 0
  br i1 %tobool74, label %if.then.75, label %if.end.78

if.then.75:                                       ; preds = %while.body
  %99 = load i32, i32* %y, align 4, !tbaa !1
  %100 = load i16*, i16** %val, align 8, !tbaa !7
  %idx.ext76 = sext i32 %99 to i64
  %idx.neg = sub i64 0, %idx.ext76
  %add.ptr77 = getelementptr inbounds i16, i16* %100, i64 %idx.neg
  store i16* %add.ptr77, i16** %val, align 8, !tbaa !7
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.75, %while.body
  %101 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec = add nsw i32 %101, -1
  store i32 %dec, i32* %part2remain, align 4, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %102 = load i32, i32* %y, align 4, !tbaa !1
  %shr79 = ashr i32 %102, 4
  store i32 %shr79, i32* %x, align 4, !tbaa !1
  %103 = load i32, i32* %y, align 4, !tbaa !1
  %and = and i32 %103, 15
  store i32 %and, i32* %y, align 4, !tbaa !1
  %104 = bitcast i16** %val to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #1
  %105 = load i32, i32* %x, align 4, !tbaa !1
  %cmp80 = icmp eq i32 %105, 15
  br i1 %cmp80, label %if.then.82, label %if.else.101

if.then.82:                                       ; preds = %while.end
  %106 = load i32, i32* %cb, align 4, !tbaa !1
  %107 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom83 = sext i32 %107 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 %idxprom83
  store i32 %106, i32* %arrayidx84, align 4, !tbaa !1
  %108 = load %struct.newhuff*, %struct.newhuff** %h, align 8, !tbaa !7
  %linbits = getelementptr inbounds %struct.newhuff, %struct.newhuff* %108, i32 0, i32 0
  %109 = load i32, i32* %linbits, align 4, !tbaa !40
  %add85 = add i32 %109, 1
  %110 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub86 = sub i32 %110, %add85
  store i32 %sub86, i32* %part2remain, align 4, !tbaa !1
  %111 = load %struct.newhuff*, %struct.newhuff** %h, align 8, !tbaa !7
  %linbits87 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %111, i32 0, i32 0
  %112 = load i32, i32* %linbits87, align 4, !tbaa !40
  %call88 = call i32 @getbits(i32 %112)
  %113 = load i32, i32* %x, align 4, !tbaa !1
  %add89 = add i32 %113, %call88
  store i32 %add89, i32* %x, align 4, !tbaa !1
  %call90 = call i32 @get1bit()
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.then.92, label %if.else.96

if.then.92:                                       ; preds = %if.then.82
  %114 = load i32, i32* %x, align 4, !tbaa !1
  %idxprom93 = sext i32 %114 to i64
  %arrayidx94 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom93
  %115 = load double, double* %arrayidx94, align 8, !tbaa !5
  %sub95 = fsub double -0.000000e+00, %115
  %116 = load double, double* %v, align 8, !tbaa !5
  %mul = fmul double %sub95, %116
  %117 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul, double* %117, align 8, !tbaa !5
  br label %if.end.100

if.else.96:                                       ; preds = %if.then.82
  %118 = load i32, i32* %x, align 4, !tbaa !1
  %idxprom97 = sext i32 %118 to i64
  %arrayidx98 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom97
  %119 = load double, double* %arrayidx98, align 8, !tbaa !5
  %120 = load double, double* %v, align 8, !tbaa !5
  %mul99 = fmul double %119, %120
  %121 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul99, double* %121, align 8, !tbaa !5
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.96, %if.then.92
  br label %if.end.121

if.else.101:                                      ; preds = %while.end
  %122 = load i32, i32* %x, align 4, !tbaa !1
  %tobool102 = icmp ne i32 %122, 0
  br i1 %tobool102, label %if.then.103, label %if.else.119

if.then.103:                                      ; preds = %if.else.101
  %123 = load i32, i32* %cb, align 4, !tbaa !1
  %124 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom104 = sext i32 %124 to i64
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 %idxprom104
  store i32 %123, i32* %arrayidx105, align 4, !tbaa !1
  %call106 = call i32 @get1bit()
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %if.then.108, label %if.else.113

if.then.108:                                      ; preds = %if.then.103
  %125 = load i32, i32* %x, align 4, !tbaa !1
  %idxprom109 = sext i32 %125 to i64
  %arrayidx110 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom109
  %126 = load double, double* %arrayidx110, align 8, !tbaa !5
  %sub111 = fsub double -0.000000e+00, %126
  %127 = load double, double* %v, align 8, !tbaa !5
  %mul112 = fmul double %sub111, %127
  %128 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul112, double* %128, align 8, !tbaa !5
  br label %if.end.117

if.else.113:                                      ; preds = %if.then.103
  %129 = load i32, i32* %x, align 4, !tbaa !1
  %idxprom114 = sext i32 %129 to i64
  %arrayidx115 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom114
  %130 = load double, double* %arrayidx115, align 8, !tbaa !5
  %131 = load double, double* %v, align 8, !tbaa !5
  %mul116 = fmul double %130, %131
  %132 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul116, double* %132, align 8, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.113, %if.then.108
  %133 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec118 = add nsw i32 %133, -1
  store i32 %dec118, i32* %part2remain, align 4, !tbaa !1
  br label %if.end.120

if.else.119:                                      ; preds = %if.else.101
  %134 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %134, align 8, !tbaa !5
  br label %if.end.120

if.end.120:                                       ; preds = %if.else.119, %if.end.117
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %if.end.100
  %135 = load i32, i32* %step, align 4, !tbaa !1
  %136 = load double*, double** %xrpnt, align 8, !tbaa !7
  %idx.ext122 = sext i32 %135 to i64
  %add.ptr123 = getelementptr inbounds double, double* %136, i64 %idx.ext122
  store double* %add.ptr123, double** %xrpnt, align 8, !tbaa !7
  %137 = load i32, i32* %y, align 4, !tbaa !1
  %cmp124 = icmp eq i32 %137, 15
  br i1 %cmp124, label %if.then.126, label %if.else.147

if.then.126:                                      ; preds = %if.end.121
  %138 = load i32, i32* %cb, align 4, !tbaa !1
  %139 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom127 = sext i32 %139 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 %idxprom127
  store i32 %138, i32* %arrayidx128, align 4, !tbaa !1
  %140 = load %struct.newhuff*, %struct.newhuff** %h, align 8, !tbaa !7
  %linbits129 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %140, i32 0, i32 0
  %141 = load i32, i32* %linbits129, align 4, !tbaa !40
  %add130 = add i32 %141, 1
  %142 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub131 = sub i32 %142, %add130
  store i32 %sub131, i32* %part2remain, align 4, !tbaa !1
  %143 = load %struct.newhuff*, %struct.newhuff** %h, align 8, !tbaa !7
  %linbits132 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %143, i32 0, i32 0
  %144 = load i32, i32* %linbits132, align 4, !tbaa !40
  %call133 = call i32 @getbits(i32 %144)
  %145 = load i32, i32* %y, align 4, !tbaa !1
  %add134 = add i32 %145, %call133
  store i32 %add134, i32* %y, align 4, !tbaa !1
  %call135 = call i32 @get1bit()
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.then.137, label %if.else.142

if.then.137:                                      ; preds = %if.then.126
  %146 = load i32, i32* %y, align 4, !tbaa !1
  %idxprom138 = sext i32 %146 to i64
  %arrayidx139 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom138
  %147 = load double, double* %arrayidx139, align 8, !tbaa !5
  %sub140 = fsub double -0.000000e+00, %147
  %148 = load double, double* %v, align 8, !tbaa !5
  %mul141 = fmul double %sub140, %148
  %149 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul141, double* %149, align 8, !tbaa !5
  br label %if.end.146

if.else.142:                                      ; preds = %if.then.126
  %150 = load i32, i32* %y, align 4, !tbaa !1
  %idxprom143 = sext i32 %150 to i64
  %arrayidx144 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom143
  %151 = load double, double* %arrayidx144, align 8, !tbaa !5
  %152 = load double, double* %v, align 8, !tbaa !5
  %mul145 = fmul double %151, %152
  %153 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul145, double* %153, align 8, !tbaa !5
  br label %if.end.146

if.end.146:                                       ; preds = %if.else.142, %if.then.137
  br label %if.end.167

if.else.147:                                      ; preds = %if.end.121
  %154 = load i32, i32* %y, align 4, !tbaa !1
  %tobool148 = icmp ne i32 %154, 0
  br i1 %tobool148, label %if.then.149, label %if.else.165

if.then.149:                                      ; preds = %if.else.147
  %155 = load i32, i32* %cb, align 4, !tbaa !1
  %156 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom150 = sext i32 %156 to i64
  %arrayidx151 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 %idxprom150
  store i32 %155, i32* %arrayidx151, align 4, !tbaa !1
  %call152 = call i32 @get1bit()
  %tobool153 = icmp ne i32 %call152, 0
  br i1 %tobool153, label %if.then.154, label %if.else.159

if.then.154:                                      ; preds = %if.then.149
  %157 = load i32, i32* %y, align 4, !tbaa !1
  %idxprom155 = sext i32 %157 to i64
  %arrayidx156 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom155
  %158 = load double, double* %arrayidx156, align 8, !tbaa !5
  %sub157 = fsub double -0.000000e+00, %158
  %159 = load double, double* %v, align 8, !tbaa !5
  %mul158 = fmul double %sub157, %159
  %160 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul158, double* %160, align 8, !tbaa !5
  br label %if.end.163

if.else.159:                                      ; preds = %if.then.149
  %161 = load i32, i32* %y, align 4, !tbaa !1
  %idxprom160 = sext i32 %161 to i64
  %arrayidx161 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom160
  %162 = load double, double* %arrayidx161, align 8, !tbaa !5
  %163 = load double, double* %v, align 8, !tbaa !5
  %mul162 = fmul double %162, %163
  %164 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %mul162, double* %164, align 8, !tbaa !5
  br label %if.end.163

if.end.163:                                       ; preds = %if.else.159, %if.then.154
  %165 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec164 = add nsw i32 %165, -1
  store i32 %dec164, i32* %part2remain, align 4, !tbaa !1
  br label %if.end.166

if.else.165:                                      ; preds = %if.else.147
  %166 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %166, align 8, !tbaa !5
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.165, %if.end.163
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.end.146
  %167 = load i32, i32* %step, align 4, !tbaa !1
  %168 = load double*, double** %xrpnt, align 8, !tbaa !7
  %idx.ext168 = sext i32 %167 to i64
  %add.ptr169 = getelementptr inbounds double, double* %168, i64 %idx.ext168
  store double* %add.ptr169, double** %xrpnt, align 8, !tbaa !7
  %169 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  %170 = bitcast i32* %x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #1
  br label %for.inc

for.inc:                                          ; preds = %if.end.167
  %171 = load i32, i32* %lp, align 4, !tbaa !1
  %dec170 = add nsw i32 %171, -1
  store i32 %dec170, i32* %lp, align 4, !tbaa !1
  %172 = load i32, i32* %mc, align 4, !tbaa !1
  %dec171 = add nsw i32 %172, -1
  store i32 %dec171, i32* %mc, align 4, !tbaa !1
  br label %for.cond.47

for.end:                                          ; preds = %for.cond.47
  %173 = bitcast %struct.newhuff** %h to i8*
  call void @llvm.lifetime.end(i64 8, i8* %173) #1
  %174 = bitcast i32* %lp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #1
  br label %for.inc.172

for.inc.172:                                      ; preds = %for.end
  %175 = load i32, i32* %i, align 4, !tbaa !1
  %inc = add nsw i32 %175, 1
  store i32 %inc, i32* %i, align 4, !tbaa !1
  br label %for.cond

for.end.173:                                      ; preds = %for.cond
  br label %for.cond.174

for.cond.174:                                     ; preds = %for.inc.266, %for.end.173
  %176 = load i32, i32* %l3, align 4, !tbaa !1
  %tobool175 = icmp ne i32 %176, 0
  br i1 %tobool175, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.174
  %177 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp176 = icmp sgt i32 %177, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.174
  %178 = phi i1 [ false, %for.cond.174 ], [ %cmp176, %land.rhs ]
  br i1 %178, label %for.body.178, label %for.end.268

for.body.178:                                     ; preds = %land.end
  %179 = bitcast %struct.newhuff** %h179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %179) #1
  %180 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %count1table_select = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %180, i32 0, i32 15
  %181 = load i32, i32* %count1table_select, align 4, !tbaa !34
  %idx.ext180 = zext i32 %181 to i64
  %add.ptr181 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([2 x %struct.newhuff], [2 x %struct.newhuff]* @htc, i32 0, i32 0), i64 %idx.ext180
  store %struct.newhuff* %add.ptr181, %struct.newhuff** %h179, align 8, !tbaa !7
  %182 = bitcast i16** %val182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %182) #1
  %183 = load %struct.newhuff*, %struct.newhuff** %h179, align 8, !tbaa !7
  %table183 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %183, i32 0, i32 1
  %184 = load i16*, i16** %table183, align 8, !tbaa !38
  store i16* %184, i16** %val182, align 8, !tbaa !7
  %185 = bitcast i16* %a to i8*
  call void @llvm.lifetime.start(i64 2, i8* %185) #1
  br label %while.cond.184

while.cond.184:                                   ; preds = %if.end.203, %for.body.178
  %186 = load i16*, i16** %val182, align 8, !tbaa !7
  %incdec.ptr185 = getelementptr inbounds i16, i16* %186, i32 1
  store i16* %incdec.ptr185, i16** %val182, align 8, !tbaa !7
  %187 = load i16, i16* %186, align 2, !tbaa !9
  store i16 %187, i16* %a, align 2, !tbaa !9
  %conv186 = sext i16 %187 to i32
  %cmp187 = icmp slt i32 %conv186, 0
  br i1 %cmp187, label %while.body.189, label %while.end.204

while.body.189:                                   ; preds = %while.cond.184
  %188 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec190 = add nsw i32 %188, -1
  store i32 %dec190, i32* %part2remain, align 4, !tbaa !1
  %189 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp191 = icmp slt i32 %189, 0
  br i1 %cmp191, label %if.then.193, label %if.end.195

if.then.193:                                      ; preds = %while.body.189
  %190 = load i32, i32* %part2remain, align 4, !tbaa !1
  %inc194 = add nsw i32 %190, 1
  store i32 %inc194, i32* %part2remain, align 4, !tbaa !1
  store i16 0, i16* %a, align 2, !tbaa !9
  br label %while.end.204

if.end.195:                                       ; preds = %while.body.189
  %call196 = call i32 @get1bit()
  %tobool197 = icmp ne i32 %call196, 0
  br i1 %tobool197, label %if.then.198, label %if.end.203

if.then.198:                                      ; preds = %if.end.195
  %191 = load i16, i16* %a, align 2, !tbaa !9
  %conv199 = sext i16 %191 to i32
  %192 = load i16*, i16** %val182, align 8, !tbaa !7
  %idx.ext200 = sext i32 %conv199 to i64
  %idx.neg201 = sub i64 0, %idx.ext200
  %add.ptr202 = getelementptr inbounds i16, i16* %192, i64 %idx.neg201
  store i16* %add.ptr202, i16** %val182, align 8, !tbaa !7
  br label %if.end.203

if.end.203:                                       ; preds = %if.then.198, %if.end.195
  br label %while.cond.184

while.end.204:                                    ; preds = %if.then.193, %while.cond.184
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.205

for.cond.205:                                     ; preds = %for.inc.263, %while.end.204
  %193 = load i32, i32* %i, align 4, !tbaa !1
  %cmp206 = icmp slt i32 %193, 4
  br i1 %cmp206, label %for.body.208, label %for.end.265

for.body.208:                                     ; preds = %for.cond.205
  %194 = load i32, i32* %i, align 4, !tbaa !1
  %and209 = and i32 %194, 1
  %tobool210 = icmp ne i32 %and209, 0
  br i1 %tobool210, label %if.end.239, label %if.then.211

if.then.211:                                      ; preds = %for.body.208
  %195 = load i32, i32* %mc, align 4, !tbaa !1
  %tobool212 = icmp ne i32 %195, 0
  br i1 %tobool212, label %if.end.237, label %if.then.213

if.then.213:                                      ; preds = %if.then.211
  %196 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr214 = getelementptr inbounds i32, i32* %196, i32 1
  store i32* %incdec.ptr214, i32** %m, align 8, !tbaa !7
  %197 = load i32, i32* %196, align 4, !tbaa !1
  store i32 %197, i32* %mc, align 4, !tbaa !1
  %198 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %199 = bitcast [18 x double]* %198 to double*
  %200 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr215 = getelementptr inbounds i32, i32* %200, i32 1
  store i32* %incdec.ptr215, i32** %m, align 8, !tbaa !7
  %201 = load i32, i32* %200, align 4, !tbaa !1
  %idx.ext216 = sext i32 %201 to i64
  %add.ptr217 = getelementptr inbounds double, double* %199, i64 %idx.ext216
  store double* %add.ptr217, double** %xrpnt, align 8, !tbaa !7
  %202 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr218 = getelementptr inbounds i32, i32* %202, i32 1
  store i32* %incdec.ptr218, i32** %m, align 8, !tbaa !7
  %203 = load i32, i32* %202, align 4, !tbaa !1
  store i32 %203, i32* %lwin, align 4, !tbaa !1
  %204 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr219 = getelementptr inbounds i32, i32* %204, i32 1
  store i32* %incdec.ptr219, i32** %m, align 8, !tbaa !7
  %205 = load i32, i32* %204, align 4, !tbaa !1
  store i32 %205, i32* %cb, align 4, !tbaa !1
  %206 = load i32, i32* %lwin, align 4, !tbaa !1
  %cmp220 = icmp eq i32 %206, 3
  br i1 %cmp220, label %if.then.222, label %if.else.228

if.then.222:                                      ; preds = %if.then.213
  %207 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr223 = getelementptr inbounds i32, i32* %207, i32 1
  store i32* %incdec.ptr223, i32** %scf.addr, align 8, !tbaa !7
  %208 = load i32, i32* %207, align 4, !tbaa !1
  %209 = load i32, i32* %shift, align 4, !tbaa !1
  %shl224 = shl i32 %208, %209
  %idxprom225 = sext i32 %shl224 to i64
  %210 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %pow2gain226 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %210, i32 0, i32 17
  %211 = load double*, double** %pow2gain226, align 8, !tbaa !27
  %arrayidx227 = getelementptr inbounds double, double* %211, i64 %idxprom225
  %212 = load double, double* %arrayidx227, align 8, !tbaa !5
  store double %212, double* %v, align 8, !tbaa !5
  store i32 1, i32* %step, align 4, !tbaa !1
  br label %if.end.236

if.else.228:                                      ; preds = %if.then.213
  %213 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr229 = getelementptr inbounds i32, i32* %213, i32 1
  store i32* %incdec.ptr229, i32** %scf.addr, align 8, !tbaa !7
  %214 = load i32, i32* %213, align 4, !tbaa !1
  %215 = load i32, i32* %shift, align 4, !tbaa !1
  %shl230 = shl i32 %214, %215
  %idxprom231 = sext i32 %shl230 to i64
  %216 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom232 = sext i32 %216 to i64
  %217 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %full_gain233 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %217, i32 0, i32 16
  %arrayidx234 = getelementptr inbounds [3 x double*], [3 x double*]* %full_gain233, i32 0, i64 %idxprom232
  %218 = load double*, double** %arrayidx234, align 8, !tbaa !7
  %arrayidx235 = getelementptr inbounds double, double* %218, i64 %idxprom231
  %219 = load double, double* %arrayidx235, align 8, !tbaa !5
  store double %219, double* %v, align 8, !tbaa !5
  store i32 3, i32* %step, align 4, !tbaa !1
  br label %if.end.236

if.end.236:                                       ; preds = %if.else.228, %if.then.222
  br label %if.end.237

if.end.237:                                       ; preds = %if.end.236, %if.then.211
  %220 = load i32, i32* %mc, align 4, !tbaa !1
  %dec238 = add nsw i32 %220, -1
  store i32 %dec238, i32* %mc, align 4, !tbaa !1
  br label %if.end.239

if.end.239:                                       ; preds = %if.end.237, %for.body.208
  %221 = load i16, i16* %a, align 2, !tbaa !9
  %conv240 = sext i16 %221 to i32
  %222 = load i32, i32* %i, align 4, !tbaa !1
  %shr241 = ashr i32 8, %222
  %and242 = and i32 %conv240, %shr241
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %if.then.244, label %if.else.259

if.then.244:                                      ; preds = %if.end.239
  %223 = load i32, i32* %cb, align 4, !tbaa !1
  %224 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom245 = sext i32 %224 to i64
  %arrayidx246 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 %idxprom245
  store i32 %223, i32* %arrayidx246, align 4, !tbaa !1
  %225 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec247 = add nsw i32 %225, -1
  store i32 %dec247, i32* %part2remain, align 4, !tbaa !1
  %226 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp248 = icmp slt i32 %226, 0
  br i1 %cmp248, label %if.then.250, label %if.end.252

if.then.250:                                      ; preds = %if.then.244
  %227 = load i32, i32* %part2remain, align 4, !tbaa !1
  %inc251 = add nsw i32 %227, 1
  store i32 %inc251, i32* %part2remain, align 4, !tbaa !1
  br label %for.end.265

if.end.252:                                       ; preds = %if.then.244
  %call253 = call i32 @get1bit()
  %tobool254 = icmp ne i32 %call253, 0
  br i1 %tobool254, label %if.then.255, label %if.else.257

if.then.255:                                      ; preds = %if.end.252
  %228 = load double, double* %v, align 8, !tbaa !5
  %sub256 = fsub double -0.000000e+00, %228
  %229 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %sub256, double* %229, align 8, !tbaa !5
  br label %if.end.258

if.else.257:                                      ; preds = %if.end.252
  %230 = load double, double* %v, align 8, !tbaa !5
  %231 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double %230, double* %231, align 8, !tbaa !5
  br label %if.end.258

if.end.258:                                       ; preds = %if.else.257, %if.then.255
  br label %if.end.260

if.else.259:                                      ; preds = %if.end.239
  %232 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %232, align 8, !tbaa !5
  br label %if.end.260

if.end.260:                                       ; preds = %if.else.259, %if.end.258
  %233 = load i32, i32* %step, align 4, !tbaa !1
  %234 = load double*, double** %xrpnt, align 8, !tbaa !7
  %idx.ext261 = sext i32 %233 to i64
  %add.ptr262 = getelementptr inbounds double, double* %234, i64 %idx.ext261
  store double* %add.ptr262, double** %xrpnt, align 8, !tbaa !7
  br label %for.inc.263

for.inc.263:                                      ; preds = %if.end.260
  %235 = load i32, i32* %i, align 4, !tbaa !1
  %inc264 = add nsw i32 %235, 1
  store i32 %inc264, i32* %i, align 4, !tbaa !1
  br label %for.cond.205

for.end.265:                                      ; preds = %if.then.250, %for.cond.205
  %236 = bitcast i16* %a to i8*
  call void @llvm.lifetime.end(i64 2, i8* %236) #1
  %237 = bitcast i16** %val182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %237) #1
  %238 = bitcast %struct.newhuff** %h179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %238) #1
  br label %for.inc.266

for.inc.266:                                      ; preds = %for.end.265
  %239 = load i32, i32* %l3, align 4, !tbaa !1
  %dec267 = add nsw i32 %239, -1
  store i32 %dec267, i32* %l3, align 4, !tbaa !1
  br label %for.cond.174

for.end.268:                                      ; preds = %land.end
  br label %while.cond.269

while.cond.269:                                   ; preds = %if.end.286, %for.end.268
  %240 = load i32*, i32** %m, align 8, !tbaa !7
  %241 = load i32*, i32** %me, align 8, !tbaa !7
  %cmp270 = icmp ult i32* %240, %241
  br i1 %cmp270, label %while.body.272, label %while.end.292

while.body.272:                                   ; preds = %while.cond.269
  %242 = load i32, i32* %mc, align 4, !tbaa !1
  %tobool273 = icmp ne i32 %242, 0
  br i1 %tobool273, label %if.end.286, label %if.then.274

if.then.274:                                      ; preds = %while.body.272
  %243 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr275 = getelementptr inbounds i32, i32* %243, i32 1
  store i32* %incdec.ptr275, i32** %m, align 8, !tbaa !7
  %244 = load i32, i32* %243, align 4, !tbaa !1
  store i32 %244, i32* %mc, align 4, !tbaa !1
  %245 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %246 = bitcast [18 x double]* %245 to double*
  %247 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr276 = getelementptr inbounds i32, i32* %247, i32 1
  store i32* %incdec.ptr276, i32** %m, align 8, !tbaa !7
  %248 = load i32, i32* %247, align 4, !tbaa !1
  %idx.ext277 = sext i32 %248 to i64
  %add.ptr278 = getelementptr inbounds double, double* %246, i64 %idx.ext277
  store double* %add.ptr278, double** %xrpnt, align 8, !tbaa !7
  %249 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr279 = getelementptr inbounds i32, i32* %249, i32 1
  store i32* %incdec.ptr279, i32** %m, align 8, !tbaa !7
  %250 = load i32, i32* %249, align 4, !tbaa !1
  %cmp280 = icmp eq i32 %250, 3
  br i1 %cmp280, label %if.then.282, label %if.else.283

if.then.282:                                      ; preds = %if.then.274
  store i32 1, i32* %step, align 4, !tbaa !1
  br label %if.end.284

if.else.283:                                      ; preds = %if.then.274
  store i32 3, i32* %step, align 4, !tbaa !1
  br label %if.end.284

if.end.284:                                       ; preds = %if.else.283, %if.then.282
  %251 = load i32*, i32** %m, align 8, !tbaa !7
  %incdec.ptr285 = getelementptr inbounds i32, i32* %251, i32 1
  store i32* %incdec.ptr285, i32** %m, align 8, !tbaa !7
  br label %if.end.286

if.end.286:                                       ; preds = %if.end.284, %while.body.272
  %252 = load i32, i32* %mc, align 4, !tbaa !1
  %dec287 = add nsw i32 %252, -1
  store i32 %dec287, i32* %mc, align 4, !tbaa !1
  %253 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %253, align 8, !tbaa !5
  %254 = load i32, i32* %step, align 4, !tbaa !1
  %255 = load double*, double** %xrpnt, align 8, !tbaa !7
  %idx.ext288 = sext i32 %254 to i64
  %add.ptr289 = getelementptr inbounds double, double* %255, i64 %idx.ext288
  store double* %add.ptr289, double** %xrpnt, align 8, !tbaa !7
  %256 = load double*, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %256, align 8, !tbaa !5
  %257 = load i32, i32* %step, align 4, !tbaa !1
  %258 = load double*, double** %xrpnt, align 8, !tbaa !7
  %idx.ext290 = sext i32 %257 to i64
  %add.ptr291 = getelementptr inbounds double, double* %258, i64 %idx.ext290
  store double* %add.ptr291, double** %xrpnt, align 8, !tbaa !7
  br label %while.cond.269

while.end.292:                                    ; preds = %while.cond.269
  %arrayidx293 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 0
  %259 = load i32, i32* %arrayidx293, align 4, !tbaa !1
  %add294 = add nsw i32 %259, 1
  %260 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxband = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %260, i32 0, i32 8
  %arrayidx295 = getelementptr inbounds [3 x i32], [3 x i32]* %maxband, i32 0, i64 0
  store i32 %add294, i32* %arrayidx295, align 4, !tbaa !1
  %arrayidx296 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 1
  %261 = load i32, i32* %arrayidx296, align 4, !tbaa !1
  %add297 = add nsw i32 %261, 1
  %262 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxband298 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %262, i32 0, i32 8
  %arrayidx299 = getelementptr inbounds [3 x i32], [3 x i32]* %maxband298, i32 0, i64 1
  store i32 %add297, i32* %arrayidx299, align 4, !tbaa !1
  %arrayidx300 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 2
  %263 = load i32, i32* %arrayidx300, align 4, !tbaa !1
  %add301 = add nsw i32 %263, 1
  %264 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxband302 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %264, i32 0, i32 8
  %arrayidx303 = getelementptr inbounds [3 x i32], [3 x i32]* %maxband302, i32 0, i64 2
  store i32 %add301, i32* %arrayidx303, align 4, !tbaa !1
  %arrayidx304 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 3
  %265 = load i32, i32* %arrayidx304, align 4, !tbaa !1
  %add305 = add nsw i32 %265, 1
  %266 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxbandl = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %266, i32 0, i32 9
  store i32 %add305, i32* %maxbandl, align 4, !tbaa !41
  %267 = bitcast i32* %rmax to i8*
  call void @llvm.lifetime.start(i64 4, i8* %267) #1
  %arrayidx306 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 0
  %268 = load i32, i32* %arrayidx306, align 4, !tbaa !1
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 1
  %269 = load i32, i32* %arrayidx307, align 4, !tbaa !1
  %cmp308 = icmp sgt i32 %268, %269
  br i1 %cmp308, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end.292
  %arrayidx310 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 0
  %270 = load i32, i32* %arrayidx310, align 4, !tbaa !1
  br label %cond.end

cond.false:                                       ; preds = %while.end.292
  %arrayidx311 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 1
  %271 = load i32, i32* %arrayidx311, align 4, !tbaa !1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %270, %cond.true ], [ %271, %cond.false ]
  store i32 %cond, i32* %rmax, align 4, !tbaa !1
  %272 = load i32, i32* %rmax, align 4, !tbaa !1
  %arrayidx312 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 2
  %273 = load i32, i32* %arrayidx312, align 4, !tbaa !1
  %cmp313 = icmp sgt i32 %272, %273
  br i1 %cmp313, label %cond.true.315, label %cond.false.316

cond.true.315:                                    ; preds = %cond.end
  %274 = load i32, i32* %rmax, align 4, !tbaa !1
  br label %cond.end.318

cond.false.316:                                   ; preds = %cond.end
  %arrayidx317 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 2
  %275 = load i32, i32* %arrayidx317, align 4, !tbaa !1
  br label %cond.end.318

cond.end.318:                                     ; preds = %cond.false.316, %cond.true.315
  %cond319 = phi i32 [ %274, %cond.true.315 ], [ %275, %cond.false.316 ]
  %add320 = add nsw i32 %cond319, 1
  store i32 %add320, i32* %rmax, align 4, !tbaa !1
  %276 = load i32, i32* %rmax, align 4, !tbaa !1
  %tobool321 = icmp ne i32 %276, 0
  br i1 %tobool321, label %cond.true.322, label %cond.false.327

cond.true.322:                                    ; preds = %cond.end.318
  %277 = load i32, i32* %rmax, align 4, !tbaa !1
  %idxprom323 = sext i32 %277 to i64
  %278 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom324 = sext i32 %278 to i64
  %arrayidx325 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i32 0, i64 %idxprom324
  %arrayidx326 = getelementptr inbounds [14 x i32], [14 x i32]* %arrayidx325, i32 0, i64 %idxprom323
  %279 = load i32, i32* %arrayidx326, align 4, !tbaa !1
  br label %cond.end.334

cond.false.327:                                   ; preds = %cond.end.318
  %arrayidx328 = getelementptr inbounds [4 x i32], [4 x i32]* %max, i32 0, i64 3
  %280 = load i32, i32* %arrayidx328, align 4, !tbaa !1
  %add329 = add nsw i32 %280, 1
  %idxprom330 = sext i32 %add329 to i64
  %281 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom331 = sext i32 %281 to i64
  %arrayidx332 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i32 0, i64 %idxprom331
  %arrayidx333 = getelementptr inbounds [23 x i32], [23 x i32]* %arrayidx332, i32 0, i64 %idxprom330
  %282 = load i32, i32* %arrayidx333, align 4, !tbaa !1
  br label %cond.end.334

cond.end.334:                                     ; preds = %cond.false.327, %cond.true.322
  %cond335 = phi i32 [ %279, %cond.true.322 ], [ %282, %cond.false.327 ]
  %283 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxb = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %283, i32 0, i32 10
  store i32 %cond335, i32* %maxb, align 4, !tbaa !22
  %284 = bitcast i32* %rmax to i8*
  call void @llvm.lifetime.end(i64 4, i8* %284) #1
  %285 = bitcast i32* %mc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %285) #1
  %286 = bitcast i32** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %286) #1
  %287 = bitcast double* %v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %287) #1
  %288 = bitcast i32* %cb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %288) #1
  %289 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %289) #1
  %290 = bitcast i32* %step to i8*
  call void @llvm.lifetime.end(i64 4, i8* %290) #1
  %291 = bitcast [4 x i32]* %max to i8*
  call void @llvm.lifetime.end(i64 16, i8* %291) #1
  %292 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %292) #1
  br label %if.end.598

if.else.336:                                      ; preds = %if.end.17
  %293 = bitcast i32** %pretab to i8*
  call void @llvm.lifetime.start(i64 8, i8* %293) #1
  %294 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %preflag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %294, i32 0, i32 13
  %295 = load i32, i32* %preflag, align 4, !tbaa !36
  %tobool337 = icmp ne i32 %295, 0
  %cond338 = select i1 %tobool337, i32* getelementptr inbounds ([22 x i32], [22 x i32]* @pretab1, i32 0, i32 0), i32* getelementptr inbounds ([22 x i32], [22 x i32]* @pretab2, i32 0, i32 0)
  store i32* %cond338, i32** %pretab, align 8, !tbaa !7
  %296 = bitcast i32* %i339 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %296) #1
  %297 = bitcast i32* %max340 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %297) #1
  store i32 -1, i32* %max340, align 4, !tbaa !1
  %298 = bitcast i32* %cb341 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %298) #1
  store i32 0, i32* %cb341, align 4, !tbaa !1
  %299 = bitcast i32** %m342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %299) #1
  %300 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom343 = sext i32 %300 to i64
  %arrayidx344 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i32 0, i64 %idxprom343
  %arrayidx345 = getelementptr inbounds [3 x i32*], [3 x i32*]* %arrayidx344, i32 0, i64 2
  %301 = load i32*, i32** %arrayidx345, align 8, !tbaa !7
  store i32* %301, i32** %m342, align 8, !tbaa !7
  %302 = bitcast double* %v346 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %302) #1
  store double 0.000000e+00, double* %v346, align 8, !tbaa !5
  %303 = bitcast i32* %mc347 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %303) #1
  store i32 0, i32* %mc347, align 4, !tbaa !1
  store i32 0, i32* %i339, align 4, !tbaa !1
  br label %for.cond.348

for.cond.348:                                     ; preds = %for.inc.491, %if.else.336
  %304 = load i32, i32* %i339, align 4, !tbaa !1
  %cmp349 = icmp slt i32 %304, 3
  br i1 %cmp349, label %for.body.351, label %for.end.493

for.body.351:                                     ; preds = %for.cond.348
  %305 = bitcast i32* %lp352 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %305) #1
  %306 = load i32, i32* %i339, align 4, !tbaa !1
  %idxprom353 = sext i32 %306 to i64
  %arrayidx354 = getelementptr inbounds [3 x i32], [3 x i32]* %l, i32 0, i64 %idxprom353
  %307 = load i32, i32* %arrayidx354, align 4, !tbaa !1
  store i32 %307, i32* %lp352, align 4, !tbaa !1
  %308 = bitcast %struct.newhuff** %h355 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %308) #1
  %309 = load i32, i32* %i339, align 4, !tbaa !1
  %idxprom356 = sext i32 %309 to i64
  %310 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %table_select357 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %310, i32 0, i32 6
  %arrayidx358 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select357, i32 0, i64 %idxprom356
  %311 = load i32, i32* %arrayidx358, align 4, !tbaa !1
  %idx.ext359 = zext i32 %311 to i64
  %add.ptr360 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([32 x %struct.newhuff], [32 x %struct.newhuff]* @ht, i32 0, i32 0), i64 %idx.ext359
  store %struct.newhuff* %add.ptr360, %struct.newhuff** %h355, align 8, !tbaa !7
  br label %for.cond.361

for.cond.361:                                     ; preds = %for.inc.487, %for.body.351
  %312 = load i32, i32* %lp352, align 4, !tbaa !1
  %tobool362 = icmp ne i32 %312, 0
  br i1 %tobool362, label %for.body.363, label %for.end.490

for.body.363:                                     ; preds = %for.cond.361
  %313 = bitcast i32* %x364 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %313) #1
  %314 = bitcast i32* %y365 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %314) #1
  %315 = load i32, i32* %mc347, align 4, !tbaa !1
  %tobool366 = icmp ne i32 %315, 0
  br i1 %tobool366, label %if.end.377, label %if.then.367

if.then.367:                                      ; preds = %for.body.363
  %316 = load i32*, i32** %m342, align 8, !tbaa !7
  %incdec.ptr368 = getelementptr inbounds i32, i32* %316, i32 1
  store i32* %incdec.ptr368, i32** %m342, align 8, !tbaa !7
  %317 = load i32, i32* %316, align 4, !tbaa !1
  store i32 %317, i32* %mc347, align 4, !tbaa !1
  %318 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr369 = getelementptr inbounds i32, i32* %318, i32 1
  store i32* %incdec.ptr369, i32** %scf.addr, align 8, !tbaa !7
  %319 = load i32, i32* %318, align 4, !tbaa !1
  %320 = load i32*, i32** %pretab, align 8, !tbaa !7
  %incdec.ptr370 = getelementptr inbounds i32, i32* %320, i32 1
  store i32* %incdec.ptr370, i32** %pretab, align 8, !tbaa !7
  %321 = load i32, i32* %320, align 4, !tbaa !1
  %add371 = add nsw i32 %319, %321
  %322 = load i32, i32* %shift, align 4, !tbaa !1
  %shl372 = shl i32 %add371, %322
  %idxprom373 = sext i32 %shl372 to i64
  %323 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %pow2gain374 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %323, i32 0, i32 17
  %324 = load double*, double** %pow2gain374, align 8, !tbaa !27
  %arrayidx375 = getelementptr inbounds double, double* %324, i64 %idxprom373
  %325 = load double, double* %arrayidx375, align 8, !tbaa !5
  store double %325, double* %v346, align 8, !tbaa !5
  %326 = load i32*, i32** %m342, align 8, !tbaa !7
  %incdec.ptr376 = getelementptr inbounds i32, i32* %326, i32 1
  store i32* %incdec.ptr376, i32** %m342, align 8, !tbaa !7
  %327 = load i32, i32* %326, align 4, !tbaa !1
  store i32 %327, i32* %cb341, align 4, !tbaa !1
  br label %if.end.377

if.end.377:                                       ; preds = %if.then.367, %for.body.363
  %328 = bitcast i16** %val378 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %328) #1
  %329 = load %struct.newhuff*, %struct.newhuff** %h355, align 8, !tbaa !7
  %table379 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %329, i32 0, i32 1
  %330 = load i16*, i16** %table379, align 8, !tbaa !38
  store i16* %330, i16** %val378, align 8, !tbaa !7
  br label %while.cond.380

while.cond.380:                                   ; preds = %if.end.392, %if.end.377
  %331 = load i16*, i16** %val378, align 8, !tbaa !7
  %incdec.ptr381 = getelementptr inbounds i16, i16* %331, i32 1
  store i16* %incdec.ptr381, i16** %val378, align 8, !tbaa !7
  %332 = load i16, i16* %331, align 2, !tbaa !9
  %conv382 = sext i16 %332 to i32
  store i32 %conv382, i32* %y365, align 4, !tbaa !1
  %cmp383 = icmp slt i32 %conv382, 0
  br i1 %cmp383, label %while.body.385, label %while.end.394

while.body.385:                                   ; preds = %while.cond.380
  %call386 = call i32 @get1bit()
  %tobool387 = icmp ne i32 %call386, 0
  br i1 %tobool387, label %if.then.388, label %if.end.392

if.then.388:                                      ; preds = %while.body.385
  %333 = load i32, i32* %y365, align 4, !tbaa !1
  %334 = load i16*, i16** %val378, align 8, !tbaa !7
  %idx.ext389 = sext i32 %333 to i64
  %idx.neg390 = sub i64 0, %idx.ext389
  %add.ptr391 = getelementptr inbounds i16, i16* %334, i64 %idx.neg390
  store i16* %add.ptr391, i16** %val378, align 8, !tbaa !7
  br label %if.end.392

if.end.392:                                       ; preds = %if.then.388, %while.body.385
  %335 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec393 = add nsw i32 %335, -1
  store i32 %dec393, i32* %part2remain, align 4, !tbaa !1
  br label %while.cond.380

while.end.394:                                    ; preds = %while.cond.380
  %336 = load i32, i32* %y365, align 4, !tbaa !1
  %shr395 = ashr i32 %336, 4
  store i32 %shr395, i32* %x364, align 4, !tbaa !1
  %337 = load i32, i32* %y365, align 4, !tbaa !1
  %and396 = and i32 %337, 15
  store i32 %and396, i32* %y365, align 4, !tbaa !1
  %338 = bitcast i16** %val378 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %338) #1
  %339 = load i32, i32* %x364, align 4, !tbaa !1
  %cmp397 = icmp eq i32 %339, 15
  br i1 %cmp397, label %if.then.399, label %if.else.420

if.then.399:                                      ; preds = %while.end.394
  %340 = load i32, i32* %cb341, align 4, !tbaa !1
  store i32 %340, i32* %max340, align 4, !tbaa !1
  %341 = load %struct.newhuff*, %struct.newhuff** %h355, align 8, !tbaa !7
  %linbits400 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %341, i32 0, i32 0
  %342 = load i32, i32* %linbits400, align 4, !tbaa !40
  %add401 = add i32 %342, 1
  %343 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub402 = sub i32 %343, %add401
  store i32 %sub402, i32* %part2remain, align 4, !tbaa !1
  %344 = load %struct.newhuff*, %struct.newhuff** %h355, align 8, !tbaa !7
  %linbits403 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %344, i32 0, i32 0
  %345 = load i32, i32* %linbits403, align 4, !tbaa !40
  %call404 = call i32 @getbits(i32 %345)
  %346 = load i32, i32* %x364, align 4, !tbaa !1
  %add405 = add i32 %346, %call404
  store i32 %add405, i32* %x364, align 4, !tbaa !1
  %call406 = call i32 @get1bit()
  %tobool407 = icmp ne i32 %call406, 0
  br i1 %tobool407, label %if.then.408, label %if.else.414

if.then.408:                                      ; preds = %if.then.399
  %347 = load i32, i32* %x364, align 4, !tbaa !1
  %idxprom409 = sext i32 %347 to i64
  %arrayidx410 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom409
  %348 = load double, double* %arrayidx410, align 8, !tbaa !5
  %sub411 = fsub double -0.000000e+00, %348
  %349 = load double, double* %v346, align 8, !tbaa !5
  %mul412 = fmul double %sub411, %349
  %350 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr413 = getelementptr inbounds double, double* %350, i32 1
  store double* %incdec.ptr413, double** %xrpnt, align 8, !tbaa !7
  store double %mul412, double* %350, align 8, !tbaa !5
  br label %if.end.419

if.else.414:                                      ; preds = %if.then.399
  %351 = load i32, i32* %x364, align 4, !tbaa !1
  %idxprom415 = sext i32 %351 to i64
  %arrayidx416 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom415
  %352 = load double, double* %arrayidx416, align 8, !tbaa !5
  %353 = load double, double* %v346, align 8, !tbaa !5
  %mul417 = fmul double %352, %353
  %354 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr418 = getelementptr inbounds double, double* %354, i32 1
  store double* %incdec.ptr418, double** %xrpnt, align 8, !tbaa !7
  store double %mul417, double* %354, align 8, !tbaa !5
  br label %if.end.419

if.end.419:                                       ; preds = %if.else.414, %if.then.408
  br label %if.end.441

if.else.420:                                      ; preds = %while.end.394
  %355 = load i32, i32* %x364, align 4, !tbaa !1
  %tobool421 = icmp ne i32 %355, 0
  br i1 %tobool421, label %if.then.422, label %if.else.438

if.then.422:                                      ; preds = %if.else.420
  %356 = load i32, i32* %cb341, align 4, !tbaa !1
  store i32 %356, i32* %max340, align 4, !tbaa !1
  %call423 = call i32 @get1bit()
  %tobool424 = icmp ne i32 %call423, 0
  br i1 %tobool424, label %if.then.425, label %if.else.431

if.then.425:                                      ; preds = %if.then.422
  %357 = load i32, i32* %x364, align 4, !tbaa !1
  %idxprom426 = sext i32 %357 to i64
  %arrayidx427 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom426
  %358 = load double, double* %arrayidx427, align 8, !tbaa !5
  %sub428 = fsub double -0.000000e+00, %358
  %359 = load double, double* %v346, align 8, !tbaa !5
  %mul429 = fmul double %sub428, %359
  %360 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr430 = getelementptr inbounds double, double* %360, i32 1
  store double* %incdec.ptr430, double** %xrpnt, align 8, !tbaa !7
  store double %mul429, double* %360, align 8, !tbaa !5
  br label %if.end.436

if.else.431:                                      ; preds = %if.then.422
  %361 = load i32, i32* %x364, align 4, !tbaa !1
  %idxprom432 = sext i32 %361 to i64
  %arrayidx433 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom432
  %362 = load double, double* %arrayidx433, align 8, !tbaa !5
  %363 = load double, double* %v346, align 8, !tbaa !5
  %mul434 = fmul double %362, %363
  %364 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr435 = getelementptr inbounds double, double* %364, i32 1
  store double* %incdec.ptr435, double** %xrpnt, align 8, !tbaa !7
  store double %mul434, double* %364, align 8, !tbaa !5
  br label %if.end.436

if.end.436:                                       ; preds = %if.else.431, %if.then.425
  %365 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec437 = add nsw i32 %365, -1
  store i32 %dec437, i32* %part2remain, align 4, !tbaa !1
  br label %if.end.440

if.else.438:                                      ; preds = %if.else.420
  %366 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr439 = getelementptr inbounds double, double* %366, i32 1
  store double* %incdec.ptr439, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %366, align 8, !tbaa !5
  br label %if.end.440

if.end.440:                                       ; preds = %if.else.438, %if.end.436
  br label %if.end.441

if.end.441:                                       ; preds = %if.end.440, %if.end.419
  %367 = load i32, i32* %y365, align 4, !tbaa !1
  %cmp442 = icmp eq i32 %367, 15
  br i1 %cmp442, label %if.then.444, label %if.else.465

if.then.444:                                      ; preds = %if.end.441
  %368 = load i32, i32* %cb341, align 4, !tbaa !1
  store i32 %368, i32* %max340, align 4, !tbaa !1
  %369 = load %struct.newhuff*, %struct.newhuff** %h355, align 8, !tbaa !7
  %linbits445 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %369, i32 0, i32 0
  %370 = load i32, i32* %linbits445, align 4, !tbaa !40
  %add446 = add i32 %370, 1
  %371 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub447 = sub i32 %371, %add446
  store i32 %sub447, i32* %part2remain, align 4, !tbaa !1
  %372 = load %struct.newhuff*, %struct.newhuff** %h355, align 8, !tbaa !7
  %linbits448 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %372, i32 0, i32 0
  %373 = load i32, i32* %linbits448, align 4, !tbaa !40
  %call449 = call i32 @getbits(i32 %373)
  %374 = load i32, i32* %y365, align 4, !tbaa !1
  %add450 = add i32 %374, %call449
  store i32 %add450, i32* %y365, align 4, !tbaa !1
  %call451 = call i32 @get1bit()
  %tobool452 = icmp ne i32 %call451, 0
  br i1 %tobool452, label %if.then.453, label %if.else.459

if.then.453:                                      ; preds = %if.then.444
  %375 = load i32, i32* %y365, align 4, !tbaa !1
  %idxprom454 = sext i32 %375 to i64
  %arrayidx455 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom454
  %376 = load double, double* %arrayidx455, align 8, !tbaa !5
  %sub456 = fsub double -0.000000e+00, %376
  %377 = load double, double* %v346, align 8, !tbaa !5
  %mul457 = fmul double %sub456, %377
  %378 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr458 = getelementptr inbounds double, double* %378, i32 1
  store double* %incdec.ptr458, double** %xrpnt, align 8, !tbaa !7
  store double %mul457, double* %378, align 8, !tbaa !5
  br label %if.end.464

if.else.459:                                      ; preds = %if.then.444
  %379 = load i32, i32* %y365, align 4, !tbaa !1
  %idxprom460 = sext i32 %379 to i64
  %arrayidx461 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom460
  %380 = load double, double* %arrayidx461, align 8, !tbaa !5
  %381 = load double, double* %v346, align 8, !tbaa !5
  %mul462 = fmul double %380, %381
  %382 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr463 = getelementptr inbounds double, double* %382, i32 1
  store double* %incdec.ptr463, double** %xrpnt, align 8, !tbaa !7
  store double %mul462, double* %382, align 8, !tbaa !5
  br label %if.end.464

if.end.464:                                       ; preds = %if.else.459, %if.then.453
  br label %if.end.486

if.else.465:                                      ; preds = %if.end.441
  %383 = load i32, i32* %y365, align 4, !tbaa !1
  %tobool466 = icmp ne i32 %383, 0
  br i1 %tobool466, label %if.then.467, label %if.else.483

if.then.467:                                      ; preds = %if.else.465
  %384 = load i32, i32* %cb341, align 4, !tbaa !1
  store i32 %384, i32* %max340, align 4, !tbaa !1
  %call468 = call i32 @get1bit()
  %tobool469 = icmp ne i32 %call468, 0
  br i1 %tobool469, label %if.then.470, label %if.else.476

if.then.470:                                      ; preds = %if.then.467
  %385 = load i32, i32* %y365, align 4, !tbaa !1
  %idxprom471 = sext i32 %385 to i64
  %arrayidx472 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom471
  %386 = load double, double* %arrayidx472, align 8, !tbaa !5
  %sub473 = fsub double -0.000000e+00, %386
  %387 = load double, double* %v346, align 8, !tbaa !5
  %mul474 = fmul double %sub473, %387
  %388 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr475 = getelementptr inbounds double, double* %388, i32 1
  store double* %incdec.ptr475, double** %xrpnt, align 8, !tbaa !7
  store double %mul474, double* %388, align 8, !tbaa !5
  br label %if.end.481

if.else.476:                                      ; preds = %if.then.467
  %389 = load i32, i32* %y365, align 4, !tbaa !1
  %idxprom477 = sext i32 %389 to i64
  %arrayidx478 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i32 0, i64 %idxprom477
  %390 = load double, double* %arrayidx478, align 8, !tbaa !5
  %391 = load double, double* %v346, align 8, !tbaa !5
  %mul479 = fmul double %390, %391
  %392 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr480 = getelementptr inbounds double, double* %392, i32 1
  store double* %incdec.ptr480, double** %xrpnt, align 8, !tbaa !7
  store double %mul479, double* %392, align 8, !tbaa !5
  br label %if.end.481

if.end.481:                                       ; preds = %if.else.476, %if.then.470
  %393 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec482 = add nsw i32 %393, -1
  store i32 %dec482, i32* %part2remain, align 4, !tbaa !1
  br label %if.end.485

if.else.483:                                      ; preds = %if.else.465
  %394 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr484 = getelementptr inbounds double, double* %394, i32 1
  store double* %incdec.ptr484, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %394, align 8, !tbaa !5
  br label %if.end.485

if.end.485:                                       ; preds = %if.else.483, %if.end.481
  br label %if.end.486

if.end.486:                                       ; preds = %if.end.485, %if.end.464
  %395 = bitcast i32* %y365 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %395) #1
  %396 = bitcast i32* %x364 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %396) #1
  br label %for.inc.487

for.inc.487:                                      ; preds = %if.end.486
  %397 = load i32, i32* %lp352, align 4, !tbaa !1
  %dec488 = add nsw i32 %397, -1
  store i32 %dec488, i32* %lp352, align 4, !tbaa !1
  %398 = load i32, i32* %mc347, align 4, !tbaa !1
  %dec489 = add nsw i32 %398, -1
  store i32 %dec489, i32* %mc347, align 4, !tbaa !1
  br label %for.cond.361

for.end.490:                                      ; preds = %for.cond.361
  %399 = bitcast %struct.newhuff** %h355 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %399) #1
  %400 = bitcast i32* %lp352 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %400) #1
  br label %for.inc.491

for.inc.491:                                      ; preds = %for.end.490
  %401 = load i32, i32* %i339, align 4, !tbaa !1
  %inc492 = add nsw i32 %401, 1
  store i32 %inc492, i32* %i339, align 4, !tbaa !1
  br label %for.cond.348

for.end.493:                                      ; preds = %for.cond.348
  br label %for.cond.494

for.cond.494:                                     ; preds = %for.inc.575, %for.end.493
  %402 = load i32, i32* %l3, align 4, !tbaa !1
  %tobool495 = icmp ne i32 %402, 0
  br i1 %tobool495, label %land.rhs.496, label %land.end.499

land.rhs.496:                                     ; preds = %for.cond.494
  %403 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp497 = icmp sgt i32 %403, 0
  br label %land.end.499

land.end.499:                                     ; preds = %land.rhs.496, %for.cond.494
  %404 = phi i1 [ false, %for.cond.494 ], [ %cmp497, %land.rhs.496 ]
  br i1 %404, label %for.body.500, label %for.end.577

for.body.500:                                     ; preds = %land.end.499
  %405 = bitcast %struct.newhuff** %h501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %405) #1
  %406 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %count1table_select502 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %406, i32 0, i32 15
  %407 = load i32, i32* %count1table_select502, align 4, !tbaa !34
  %idx.ext503 = zext i32 %407 to i64
  %add.ptr504 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([2 x %struct.newhuff], [2 x %struct.newhuff]* @htc, i32 0, i32 0), i64 %idx.ext503
  store %struct.newhuff* %add.ptr504, %struct.newhuff** %h501, align 8, !tbaa !7
  %408 = bitcast i16** %val505 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %408) #1
  %409 = load %struct.newhuff*, %struct.newhuff** %h501, align 8, !tbaa !7
  %table506 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %409, i32 0, i32 1
  %410 = load i16*, i16** %table506, align 8, !tbaa !38
  store i16* %410, i16** %val505, align 8, !tbaa !7
  %411 = bitcast i16* %a507 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %411) #1
  br label %while.cond.508

while.cond.508:                                   ; preds = %if.end.527, %for.body.500
  %412 = load i16*, i16** %val505, align 8, !tbaa !7
  %incdec.ptr509 = getelementptr inbounds i16, i16* %412, i32 1
  store i16* %incdec.ptr509, i16** %val505, align 8, !tbaa !7
  %413 = load i16, i16* %412, align 2, !tbaa !9
  store i16 %413, i16* %a507, align 2, !tbaa !9
  %conv510 = sext i16 %413 to i32
  %cmp511 = icmp slt i32 %conv510, 0
  br i1 %cmp511, label %while.body.513, label %while.end.528

while.body.513:                                   ; preds = %while.cond.508
  %414 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec514 = add nsw i32 %414, -1
  store i32 %dec514, i32* %part2remain, align 4, !tbaa !1
  %415 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp515 = icmp slt i32 %415, 0
  br i1 %cmp515, label %if.then.517, label %if.end.519

if.then.517:                                      ; preds = %while.body.513
  %416 = load i32, i32* %part2remain, align 4, !tbaa !1
  %inc518 = add nsw i32 %416, 1
  store i32 %inc518, i32* %part2remain, align 4, !tbaa !1
  store i16 0, i16* %a507, align 2, !tbaa !9
  br label %while.end.528

if.end.519:                                       ; preds = %while.body.513
  %call520 = call i32 @get1bit()
  %tobool521 = icmp ne i32 %call520, 0
  br i1 %tobool521, label %if.then.522, label %if.end.527

if.then.522:                                      ; preds = %if.end.519
  %417 = load i16, i16* %a507, align 2, !tbaa !9
  %conv523 = sext i16 %417 to i32
  %418 = load i16*, i16** %val505, align 8, !tbaa !7
  %idx.ext524 = sext i32 %conv523 to i64
  %idx.neg525 = sub i64 0, %idx.ext524
  %add.ptr526 = getelementptr inbounds i16, i16* %418, i64 %idx.neg525
  store i16* %add.ptr526, i16** %val505, align 8, !tbaa !7
  br label %if.end.527

if.end.527:                                       ; preds = %if.then.522, %if.end.519
  br label %while.cond.508

while.end.528:                                    ; preds = %if.then.517, %while.cond.508
  store i32 0, i32* %i339, align 4, !tbaa !1
  br label %for.cond.529

for.cond.529:                                     ; preds = %for.inc.572, %while.end.528
  %419 = load i32, i32* %i339, align 4, !tbaa !1
  %cmp530 = icmp slt i32 %419, 4
  br i1 %cmp530, label %for.body.532, label %for.end.574

for.body.532:                                     ; preds = %for.cond.529
  %420 = load i32, i32* %i339, align 4, !tbaa !1
  %and533 = and i32 %420, 1
  %tobool534 = icmp ne i32 %and533, 0
  br i1 %tobool534, label %if.end.549, label %if.then.535

if.then.535:                                      ; preds = %for.body.532
  %421 = load i32, i32* %mc347, align 4, !tbaa !1
  %tobool536 = icmp ne i32 %421, 0
  br i1 %tobool536, label %if.end.547, label %if.then.537

if.then.537:                                      ; preds = %if.then.535
  %422 = load i32*, i32** %m342, align 8, !tbaa !7
  %incdec.ptr538 = getelementptr inbounds i32, i32* %422, i32 1
  store i32* %incdec.ptr538, i32** %m342, align 8, !tbaa !7
  %423 = load i32, i32* %422, align 4, !tbaa !1
  store i32 %423, i32* %mc347, align 4, !tbaa !1
  %424 = load i32*, i32** %m342, align 8, !tbaa !7
  %incdec.ptr539 = getelementptr inbounds i32, i32* %424, i32 1
  store i32* %incdec.ptr539, i32** %m342, align 8, !tbaa !7
  %425 = load i32, i32* %424, align 4, !tbaa !1
  store i32 %425, i32* %cb341, align 4, !tbaa !1
  %426 = load i32*, i32** %scf.addr, align 8, !tbaa !7
  %incdec.ptr540 = getelementptr inbounds i32, i32* %426, i32 1
  store i32* %incdec.ptr540, i32** %scf.addr, align 8, !tbaa !7
  %427 = load i32, i32* %426, align 4, !tbaa !1
  %428 = load i32*, i32** %pretab, align 8, !tbaa !7
  %incdec.ptr541 = getelementptr inbounds i32, i32* %428, i32 1
  store i32* %incdec.ptr541, i32** %pretab, align 8, !tbaa !7
  %429 = load i32, i32* %428, align 4, !tbaa !1
  %add542 = add nsw i32 %427, %429
  %430 = load i32, i32* %shift, align 4, !tbaa !1
  %shl543 = shl i32 %add542, %430
  %idxprom544 = sext i32 %shl543 to i64
  %431 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %pow2gain545 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %431, i32 0, i32 17
  %432 = load double*, double** %pow2gain545, align 8, !tbaa !27
  %arrayidx546 = getelementptr inbounds double, double* %432, i64 %idxprom544
  %433 = load double, double* %arrayidx546, align 8, !tbaa !5
  store double %433, double* %v346, align 8, !tbaa !5
  br label %if.end.547

if.end.547:                                       ; preds = %if.then.537, %if.then.535
  %434 = load i32, i32* %mc347, align 4, !tbaa !1
  %dec548 = add nsw i32 %434, -1
  store i32 %dec548, i32* %mc347, align 4, !tbaa !1
  br label %if.end.549

if.end.549:                                       ; preds = %if.end.547, %for.body.532
  %435 = load i16, i16* %a507, align 2, !tbaa !9
  %conv550 = sext i16 %435 to i32
  %436 = load i32, i32* %i339, align 4, !tbaa !1
  %shr551 = ashr i32 8, %436
  %and552 = and i32 %conv550, %shr551
  %tobool553 = icmp ne i32 %and552, 0
  br i1 %tobool553, label %if.then.554, label %if.else.569

if.then.554:                                      ; preds = %if.end.549
  %437 = load i32, i32* %cb341, align 4, !tbaa !1
  store i32 %437, i32* %max340, align 4, !tbaa !1
  %438 = load i32, i32* %part2remain, align 4, !tbaa !1
  %dec555 = add nsw i32 %438, -1
  store i32 %dec555, i32* %part2remain, align 4, !tbaa !1
  %439 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp556 = icmp slt i32 %439, 0
  br i1 %cmp556, label %if.then.558, label %if.end.560

if.then.558:                                      ; preds = %if.then.554
  %440 = load i32, i32* %part2remain, align 4, !tbaa !1
  %inc559 = add nsw i32 %440, 1
  store i32 %inc559, i32* %part2remain, align 4, !tbaa !1
  br label %for.end.574

if.end.560:                                       ; preds = %if.then.554
  %call561 = call i32 @get1bit()
  %tobool562 = icmp ne i32 %call561, 0
  br i1 %tobool562, label %if.then.563, label %if.else.566

if.then.563:                                      ; preds = %if.end.560
  %441 = load double, double* %v346, align 8, !tbaa !5
  %sub564 = fsub double -0.000000e+00, %441
  %442 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr565 = getelementptr inbounds double, double* %442, i32 1
  store double* %incdec.ptr565, double** %xrpnt, align 8, !tbaa !7
  store double %sub564, double* %442, align 8, !tbaa !5
  br label %if.end.568

if.else.566:                                      ; preds = %if.end.560
  %443 = load double, double* %v346, align 8, !tbaa !5
  %444 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr567 = getelementptr inbounds double, double* %444, i32 1
  store double* %incdec.ptr567, double** %xrpnt, align 8, !tbaa !7
  store double %443, double* %444, align 8, !tbaa !5
  br label %if.end.568

if.end.568:                                       ; preds = %if.else.566, %if.then.563
  br label %if.end.571

if.else.569:                                      ; preds = %if.end.549
  %445 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr570 = getelementptr inbounds double, double* %445, i32 1
  store double* %incdec.ptr570, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %445, align 8, !tbaa !5
  br label %if.end.571

if.end.571:                                       ; preds = %if.else.569, %if.end.568
  br label %for.inc.572

for.inc.572:                                      ; preds = %if.end.571
  %446 = load i32, i32* %i339, align 4, !tbaa !1
  %inc573 = add nsw i32 %446, 1
  store i32 %inc573, i32* %i339, align 4, !tbaa !1
  br label %for.cond.529

for.end.574:                                      ; preds = %if.then.558, %for.cond.529
  %447 = bitcast i16* %a507 to i8*
  call void @llvm.lifetime.end(i64 2, i8* %447) #1
  %448 = bitcast i16** %val505 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %448) #1
  %449 = bitcast %struct.newhuff** %h501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %449) #1
  br label %for.inc.575

for.inc.575:                                      ; preds = %for.end.574
  %450 = load i32, i32* %l3, align 4, !tbaa !1
  %dec576 = add nsw i32 %450, -1
  store i32 %dec576, i32* %l3, align 4, !tbaa !1
  br label %for.cond.494

for.end.577:                                      ; preds = %land.end.499
  %451 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %arrayidx578 = getelementptr inbounds [18 x double], [18 x double]* %451, i64 32
  %arrayidx579 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx578, i32 0, i64 0
  %452 = load double*, double** %xrpnt, align 8, !tbaa !7
  %sub.ptr.lhs.cast = ptrtoint double* %arrayidx579 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %452 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %shr580 = ashr i64 %sub.ptr.div, 1
  %conv581 = trunc i64 %shr580 to i32
  store i32 %conv581, i32* %i339, align 4, !tbaa !1
  br label %for.cond.582

for.cond.582:                                     ; preds = %for.inc.587, %for.end.577
  %453 = load i32, i32* %i339, align 4, !tbaa !1
  %tobool583 = icmp ne i32 %453, 0
  br i1 %tobool583, label %for.body.584, label %for.end.589

for.body.584:                                     ; preds = %for.cond.582
  %454 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr585 = getelementptr inbounds double, double* %454, i32 1
  store double* %incdec.ptr585, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %454, align 8, !tbaa !5
  %455 = load double*, double** %xrpnt, align 8, !tbaa !7
  %incdec.ptr586 = getelementptr inbounds double, double* %455, i32 1
  store double* %incdec.ptr586, double** %xrpnt, align 8, !tbaa !7
  store double 0.000000e+00, double* %455, align 8, !tbaa !5
  br label %for.inc.587

for.inc.587:                                      ; preds = %for.body.584
  %456 = load i32, i32* %i339, align 4, !tbaa !1
  %dec588 = add nsw i32 %456, -1
  store i32 %dec588, i32* %i339, align 4, !tbaa !1
  br label %for.cond.582

for.end.589:                                      ; preds = %for.cond.582
  %457 = load i32, i32* %max340, align 4, !tbaa !1
  %add590 = add nsw i32 %457, 1
  %458 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxbandl591 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %458, i32 0, i32 9
  store i32 %add590, i32* %maxbandl591, align 4, !tbaa !41
  %459 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxbandl592 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %459, i32 0, i32 9
  %460 = load i32, i32* %maxbandl592, align 4, !tbaa !41
  %idxprom593 = zext i32 %460 to i64
  %461 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom594 = sext i32 %461 to i64
  %arrayidx595 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i32 0, i64 %idxprom594
  %arrayidx596 = getelementptr inbounds [23 x i32], [23 x i32]* %arrayidx595, i32 0, i64 %idxprom593
  %462 = load i32, i32* %arrayidx596, align 4, !tbaa !1
  %463 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxb597 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %463, i32 0, i32 10
  store i32 %462, i32* %maxb597, align 4, !tbaa !22
  %464 = bitcast i32* %mc347 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %464) #1
  %465 = bitcast double* %v346 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %465) #1
  %466 = bitcast i32** %m342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %466) #1
  %467 = bitcast i32* %cb341 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %467) #1
  %468 = bitcast i32* %max340 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %468) #1
  %469 = bitcast i32* %i339 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %469) #1
  %470 = bitcast i32** %pretab to i8*
  call void @llvm.lifetime.end(i64 8, i8* %470) #1
  br label %if.end.598

if.end.598:                                       ; preds = %for.end.589, %cond.end.334
  br label %while.cond.599

while.cond.599:                                   ; preds = %while.body.602, %if.end.598
  %471 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp600 = icmp sgt i32 %471, 16
  br i1 %cmp600, label %while.body.602, label %while.end.605

while.body.602:                                   ; preds = %while.cond.599
  %call603 = call i32 @getbits(i32 16)
  %472 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub604 = sub nsw i32 %472, 16
  store i32 %sub604, i32* %part2remain, align 4, !tbaa !1
  br label %while.cond.599

while.end.605:                                    ; preds = %while.cond.599
  %473 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp606 = icmp sgt i32 %473, 0
  br i1 %cmp606, label %if.then.608, label %if.else.610

if.then.608:                                      ; preds = %while.end.605
  %474 = load i32, i32* %part2remain, align 4, !tbaa !1
  %call609 = call i32 @getbits(i32 %474)
  br label %if.end.617

if.else.610:                                      ; preds = %while.end.605
  %475 = load i32, i32* %part2remain, align 4, !tbaa !1
  %cmp611 = icmp slt i32 %475, 0
  br i1 %cmp611, label %if.then.613, label %if.end.616

if.then.613:                                      ; preds = %if.else.610
  %476 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %477 = load i32, i32* %part2remain, align 4, !tbaa !1
  %sub614 = sub nsw i32 0, %477
  %call615 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %476, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i32 0, i32 0), i32 %sub614)
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.616:                                       ; preds = %if.else.610
  br label %if.end.617

if.end.617:                                       ; preds = %if.end.616, %if.then.608
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.617, %if.then.613
  %478 = bitcast i32** %me to i8*
  call void @llvm.lifetime.end(i64 8, i8* %478) #1
  %479 = bitcast i32* %part2remain to i8*
  call void @llvm.lifetime.end(i64 4, i8* %479) #1
  %480 = bitcast i32* %l3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %480) #1
  %481 = bitcast [3 x i32]* %l to i8*
  call void @llvm.lifetime.end(i64 12, i8* %481) #1
  %482 = bitcast double** %xrpnt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %482) #1
  %483 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %483) #1
  %484 = load i32, i32* %retval
  ret i32 %484
}

; Function Attrs: nounwind uwtable
define internal void @III_i_stereo([32 x [18 x double]]* %xr_buf, i32* %scalefac, %struct.gr_info_s* %gr_info, i32 %sfreq, i32 %ms_stereo, i32 %lsf) #0 {
entry:
  %xr_buf.addr = alloca [32 x [18 x double]]*, align 8
  %scalefac.addr = alloca i32*, align 8
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %sfreq.addr = alloca i32, align 4
  %ms_stereo.addr = alloca i32, align 4
  %lsf.addr = alloca i32, align 4
  %xr = alloca [576 x double]*, align 8
  %bi = alloca %struct.bandInfoStruct*, align 8
  %tab1 = alloca double*, align 8
  %tab2 = alloca double*, align 8
  %p = alloca i32, align 4
  %lwin = alloca i32, align 4
  %do_l = alloca i32, align 4
  %is_p = alloca i32, align 4
  %sb = alloca i32, align 4
  %idx = alloca i32, align 4
  %sfb = alloca i32, align 4
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %v = alloca double, align 8
  %t182 = alloca double, align 8
  %t283 = alloca double, align 8
  %v92 = alloca double, align 8
  %sfb114 = alloca i32, align 4
  %idx115 = alloca i32, align 4
  %sb123 = alloca i32, align 4
  %is_p127 = alloca i32, align 4
  %t1133 = alloca double, align 8
  %t2134 = alloca double, align 8
  %v143 = alloca double, align 8
  %sfb167 = alloca i32, align 4
  %is_p169 = alloca i32, align 4
  %idx170 = alloca i32, align 4
  %sb179 = alloca i32, align 4
  %t1189 = alloca double, align 8
  %t2190 = alloca double, align 8
  %v199 = alloca double, align 8
  %sb225 = alloca i32, align 4
  %t1226 = alloca double, align 8
  %t2229 = alloca double, align 8
  %v239 = alloca double, align 8
  store [32 x [18 x double]]* %xr_buf, [32 x [18 x double]]** %xr_buf.addr, align 8, !tbaa !7
  store i32* %scalefac, i32** %scalefac.addr, align 8, !tbaa !7
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  store i32 %sfreq, i32* %sfreq.addr, align 4, !tbaa !1
  store i32 %ms_stereo, i32* %ms_stereo.addr, align 4, !tbaa !1
  store i32 %lsf, i32* %lsf.addr, align 4, !tbaa !1
  %0 = bitcast [576 x double]** %xr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load [32 x [18 x double]]*, [32 x [18 x double]]** %xr_buf.addr, align 8, !tbaa !7
  %2 = bitcast [32 x [18 x double]]* %1 to [576 x double]*
  store [576 x double]* %2, [576 x double]** %xr, align 8, !tbaa !7
  %3 = bitcast %struct.bandInfoStruct** %bi to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load i32, i32* %sfreq.addr, align 4, !tbaa !1
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i32 0, i64 %idxprom
  store %struct.bandInfoStruct* %arrayidx, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %5 = bitcast double** %tab1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast double** %tab2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load i32, i32* %lsf.addr, align 4, !tbaa !1
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.else.14

if.then:                                          ; preds = %entry
  %8 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %scalefac_compress = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %9, i32 0, i32 3
  %10 = load i32, i32* %scalefac_compress, align 4, !tbaa !28
  %and = and i32 %10, 1
  store i32 %and, i32* %p, align 4, !tbaa !1
  %11 = load i32, i32* %ms_stereo.addr, align 4, !tbaa !1
  %tobool1 = icmp ne i32 %11, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %12 = load i32, i32* %p, align 4, !tbaa !1
  %idxprom3 = sext i32 %12 to i64
  %arrayidx4 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_2, i32 0, i64 %idxprom3
  %arraydecay = getelementptr inbounds [16 x double], [16 x double]* %arrayidx4, i32 0, i32 0
  store double* %arraydecay, double** %tab1, align 8, !tbaa !7
  %13 = load i32, i32* %p, align 4, !tbaa !1
  %idxprom5 = sext i32 %13 to i64
  %arrayidx6 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_2, i32 0, i64 %idxprom5
  %arraydecay7 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx6, i32 0, i32 0
  store double* %arraydecay7, double** %tab2, align 8, !tbaa !7
  br label %if.end

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %p, align 4, !tbaa !1
  %idxprom8 = sext i32 %14 to i64
  %arrayidx9 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_1, i32 0, i64 %idxprom8
  %arraydecay10 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx9, i32 0, i32 0
  store double* %arraydecay10, double** %tab1, align 8, !tbaa !7
  %15 = load i32, i32* %p, align 4, !tbaa !1
  %idxprom11 = sext i32 %15 to i64
  %arrayidx12 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_1, i32 0, i64 %idxprom11
  %arraydecay13 = getelementptr inbounds [16 x double], [16 x double]* %arrayidx12, i32 0, i32 0
  store double* %arraydecay13, double** %tab2, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %16 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #1
  br label %if.end.19

if.else.14:                                       ; preds = %entry
  %17 = load i32, i32* %ms_stereo.addr, align 4, !tbaa !1
  %tobool15 = icmp ne i32 %17, 0
  br i1 %tobool15, label %if.then.16, label %if.else.17

if.then.16:                                       ; preds = %if.else.14
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan1_2, i32 0, i32 0), double** %tab1, align 8, !tbaa !7
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan2_2, i32 0, i32 0), double** %tab2, align 8, !tbaa !7
  br label %if.end.18

if.else.17:                                       ; preds = %if.else.14
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan1_1, i32 0, i32 0), double** %tab1, align 8, !tbaa !7
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan2_1, i32 0, i32 0), double** %tab2, align 8, !tbaa !7
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.17, %if.then.16
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.end
  %18 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %18, i32 0, i32 4
  %19 = load i32, i32* %block_type, align 4, !tbaa !29
  %cmp = icmp eq i32 %19, 2
  br i1 %cmp, label %if.then.20, label %if.else.166

if.then.20:                                       ; preds = %if.end.19
  %20 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  %21 = bitcast i32* %do_l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  store i32 0, i32* %do_l, align 4, !tbaa !1
  %22 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %22, i32 0, i32 5
  %23 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool21 = icmp ne i32 %23, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.20
  store i32 1, i32* %do_l, align 4, !tbaa !1
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %if.then.20
  store i32 0, i32* %lwin, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.109, %if.end.23
  %24 = load i32, i32* %lwin, align 4, !tbaa !1
  %cmp24 = icmp slt i32 %24, 3
  br i1 %cmp24, label %for.body, label %for.end.111

for.body:                                         ; preds = %for.cond
  %25 = bitcast i32* %is_p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = bitcast i32* %idx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %28 = bitcast i32* %sfb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %29 = load i32, i32* %lwin, align 4, !tbaa !1
  %idxprom25 = sext i32 %29 to i64
  %30 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxband = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %30, i32 0, i32 8
  %arrayidx26 = getelementptr inbounds [3 x i32], [3 x i32]* %maxband, i32 0, i64 %idxprom25
  %31 = load i32, i32* %arrayidx26, align 4, !tbaa !1
  store i32 %31, i32* %sfb, align 4, !tbaa !1
  %32 = load i32, i32* %sfb, align 4, !tbaa !1
  %cmp27 = icmp sgt i32 %32, 3
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %for.body
  store i32 0, i32* %do_l, align 4, !tbaa !1
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %for.body
  br label %for.cond.30

for.cond.30:                                      ; preds = %for.inc.65, %if.end.29
  %33 = load i32, i32* %sfb, align 4, !tbaa !1
  %cmp31 = icmp slt i32 %33, 12
  br i1 %cmp31, label %for.body.32, label %for.end.66

for.body.32:                                      ; preds = %for.cond.30
  %34 = load i32, i32* %sfb, align 4, !tbaa !1
  %mul = mul nsw i32 %34, 3
  %35 = load i32, i32* %lwin, align 4, !tbaa !1
  %add = add nsw i32 %mul, %35
  %36 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag33 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %36, i32 0, i32 5
  %37 = load i32, i32* %mixed_block_flag33, align 4, !tbaa !30
  %sub = sub i32 %add, %37
  %idxprom34 = zext i32 %sub to i64
  %38 = load i32*, i32** %scalefac.addr, align 8, !tbaa !7
  %arrayidx35 = getelementptr inbounds i32, i32* %38, i64 %idxprom34
  %39 = load i32, i32* %arrayidx35, align 4, !tbaa !1
  store i32 %39, i32* %is_p, align 4, !tbaa !1
  %40 = load i32, i32* %is_p, align 4, !tbaa !1
  %cmp36 = icmp ne i32 %40, 7
  br i1 %cmp36, label %if.then.37, label %if.end.64

if.then.37:                                       ; preds = %for.body.32
  %41 = bitcast double* %t1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %41) #1
  %42 = bitcast double* %t2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %42) #1
  %43 = load i32, i32* %sfb, align 4, !tbaa !1
  %idxprom38 = sext i32 %43 to i64
  %44 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortDiff = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %44, i32 0, i32 3
  %arrayidx39 = getelementptr inbounds [13 x i16], [13 x i16]* %shortDiff, i32 0, i64 %idxprom38
  %45 = load i16, i16* %arrayidx39, align 2, !tbaa !9
  %conv = sext i16 %45 to i32
  store i32 %conv, i32* %sb, align 4, !tbaa !1
  %46 = load i32, i32* %sfb, align 4, !tbaa !1
  %idxprom40 = sext i32 %46 to i64
  %47 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %47, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [14 x i16], [14 x i16]* %shortIdx, i32 0, i64 %idxprom40
  %48 = load i16, i16* %arrayidx41, align 2, !tbaa !9
  %conv42 = sext i16 %48 to i32
  %49 = load i32, i32* %lwin, align 4, !tbaa !1
  %add43 = add nsw i32 %conv42, %49
  store i32 %add43, i32* %idx, align 4, !tbaa !1
  %50 = load i32, i32* %is_p, align 4, !tbaa !1
  %idxprom44 = sext i32 %50 to i64
  %51 = load double*, double** %tab1, align 8, !tbaa !7
  %arrayidx45 = getelementptr inbounds double, double* %51, i64 %idxprom44
  %52 = load double, double* %arrayidx45, align 8, !tbaa !5
  store double %52, double* %t1, align 8, !tbaa !5
  %53 = load i32, i32* %is_p, align 4, !tbaa !1
  %idxprom46 = sext i32 %53 to i64
  %54 = load double*, double** %tab2, align 8, !tbaa !7
  %arrayidx47 = getelementptr inbounds double, double* %54, i64 %idxprom46
  %55 = load double, double* %arrayidx47, align 8, !tbaa !5
  store double %55, double* %t2, align 8, !tbaa !5
  br label %for.cond.48

for.cond.48:                                      ; preds = %for.inc, %if.then.37
  %56 = load i32, i32* %sb, align 4, !tbaa !1
  %cmp49 = icmp sgt i32 %56, 0
  br i1 %cmp49, label %for.body.51, label %for.end

for.body.51:                                      ; preds = %for.cond.48
  %57 = bitcast double* %v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %57) #1
  %58 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom52 = sext i32 %58 to i64
  %59 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx53 = getelementptr inbounds [576 x double], [576 x double]* %59, i64 0
  %arrayidx54 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx53, i32 0, i64 %idxprom52
  %60 = load double, double* %arrayidx54, align 8, !tbaa !5
  store double %60, double* %v, align 8, !tbaa !5
  %61 = load double, double* %v, align 8, !tbaa !5
  %62 = load double, double* %t1, align 8, !tbaa !5
  %mul55 = fmul double %61, %62
  %63 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom56 = sext i32 %63 to i64
  %64 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx57 = getelementptr inbounds [576 x double], [576 x double]* %64, i64 0
  %arrayidx58 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx57, i32 0, i64 %idxprom56
  store double %mul55, double* %arrayidx58, align 8, !tbaa !5
  %65 = load double, double* %v, align 8, !tbaa !5
  %66 = load double, double* %t2, align 8, !tbaa !5
  %mul59 = fmul double %65, %66
  %67 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom60 = sext i32 %67 to i64
  %68 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx61 = getelementptr inbounds [576 x double], [576 x double]* %68, i64 1
  %arrayidx62 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx61, i32 0, i64 %idxprom60
  store double %mul59, double* %arrayidx62, align 8, !tbaa !5
  %69 = bitcast double* %v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %69) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body.51
  %70 = load i32, i32* %sb, align 4, !tbaa !1
  %dec = add nsw i32 %70, -1
  store i32 %dec, i32* %sb, align 4, !tbaa !1
  %71 = load i32, i32* %idx, align 4, !tbaa !1
  %add63 = add nsw i32 %71, 3
  store i32 %add63, i32* %idx, align 4, !tbaa !1
  br label %for.cond.48

for.end:                                          ; preds = %for.cond.48
  %72 = bitcast double* %t2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #1
  %73 = bitcast double* %t1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #1
  br label %if.end.64

if.end.64:                                        ; preds = %for.end, %for.body.32
  br label %for.inc.65

for.inc.65:                                       ; preds = %if.end.64
  %74 = load i32, i32* %sfb, align 4, !tbaa !1
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %sfb, align 4, !tbaa !1
  br label %for.cond.30

for.end.66:                                       ; preds = %for.cond.30
  %75 = load i32, i32* %lwin, align 4, !tbaa !1
  %add67 = add nsw i32 33, %75
  %76 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag68 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %76, i32 0, i32 5
  %77 = load i32, i32* %mixed_block_flag68, align 4, !tbaa !30
  %sub69 = sub i32 %add67, %77
  %idxprom70 = zext i32 %sub69 to i64
  %78 = load i32*, i32** %scalefac.addr, align 8, !tbaa !7
  %arrayidx71 = getelementptr inbounds i32, i32* %78, i64 %idxprom70
  %79 = load i32, i32* %arrayidx71, align 4, !tbaa !1
  store i32 %79, i32* %is_p, align 4, !tbaa !1
  %80 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortDiff72 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %80, i32 0, i32 3
  %arrayidx73 = getelementptr inbounds [13 x i16], [13 x i16]* %shortDiff72, i32 0, i64 12
  %81 = load i16, i16* %arrayidx73, align 2, !tbaa !9
  %conv74 = sext i16 %81 to i32
  store i32 %conv74, i32* %sb, align 4, !tbaa !1
  %82 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %shortIdx75 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %82, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [14 x i16], [14 x i16]* %shortIdx75, i32 0, i64 12
  %83 = load i16, i16* %arrayidx76, align 2, !tbaa !9
  %conv77 = sext i16 %83 to i32
  %84 = load i32, i32* %lwin, align 4, !tbaa !1
  %add78 = add nsw i32 %conv77, %84
  store i32 %add78, i32* %idx, align 4, !tbaa !1
  %85 = load i32, i32* %is_p, align 4, !tbaa !1
  %cmp79 = icmp ne i32 %85, 7
  br i1 %cmp79, label %if.then.81, label %if.end.108

if.then.81:                                       ; preds = %for.end.66
  %86 = bitcast double* %t182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %86) #1
  %87 = bitcast double* %t283 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %87) #1
  %88 = load i32, i32* %is_p, align 4, !tbaa !1
  %idxprom84 = sext i32 %88 to i64
  %89 = load double*, double** %tab1, align 8, !tbaa !7
  %arrayidx85 = getelementptr inbounds double, double* %89, i64 %idxprom84
  %90 = load double, double* %arrayidx85, align 8, !tbaa !5
  store double %90, double* %t182, align 8, !tbaa !5
  %91 = load i32, i32* %is_p, align 4, !tbaa !1
  %idxprom86 = sext i32 %91 to i64
  %92 = load double*, double** %tab2, align 8, !tbaa !7
  %arrayidx87 = getelementptr inbounds double, double* %92, i64 %idxprom86
  %93 = load double, double* %arrayidx87, align 8, !tbaa !5
  store double %93, double* %t283, align 8, !tbaa !5
  br label %for.cond.88

for.cond.88:                                      ; preds = %for.inc.104, %if.then.81
  %94 = load i32, i32* %sb, align 4, !tbaa !1
  %cmp89 = icmp sgt i32 %94, 0
  br i1 %cmp89, label %for.body.91, label %for.end.107

for.body.91:                                      ; preds = %for.cond.88
  %95 = bitcast double* %v92 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %95) #1
  %96 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom93 = sext i32 %96 to i64
  %97 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx94 = getelementptr inbounds [576 x double], [576 x double]* %97, i64 0
  %arrayidx95 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx94, i32 0, i64 %idxprom93
  %98 = load double, double* %arrayidx95, align 8, !tbaa !5
  store double %98, double* %v92, align 8, !tbaa !5
  %99 = load double, double* %v92, align 8, !tbaa !5
  %100 = load double, double* %t182, align 8, !tbaa !5
  %mul96 = fmul double %99, %100
  %101 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom97 = sext i32 %101 to i64
  %102 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx98 = getelementptr inbounds [576 x double], [576 x double]* %102, i64 0
  %arrayidx99 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx98, i32 0, i64 %idxprom97
  store double %mul96, double* %arrayidx99, align 8, !tbaa !5
  %103 = load double, double* %v92, align 8, !tbaa !5
  %104 = load double, double* %t283, align 8, !tbaa !5
  %mul100 = fmul double %103, %104
  %105 = load i32, i32* %idx, align 4, !tbaa !1
  %idxprom101 = sext i32 %105 to i64
  %106 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx102 = getelementptr inbounds [576 x double], [576 x double]* %106, i64 1
  %arrayidx103 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx102, i32 0, i64 %idxprom101
  store double %mul100, double* %arrayidx103, align 8, !tbaa !5
  %107 = bitcast double* %v92 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  br label %for.inc.104

for.inc.104:                                      ; preds = %for.body.91
  %108 = load i32, i32* %sb, align 4, !tbaa !1
  %dec105 = add nsw i32 %108, -1
  store i32 %dec105, i32* %sb, align 4, !tbaa !1
  %109 = load i32, i32* %idx, align 4, !tbaa !1
  %add106 = add nsw i32 %109, 3
  store i32 %add106, i32* %idx, align 4, !tbaa !1
  br label %for.cond.88

for.end.107:                                      ; preds = %for.cond.88
  %110 = bitcast double* %t283 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #1
  %111 = bitcast double* %t182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %111) #1
  br label %if.end.108

if.end.108:                                       ; preds = %for.end.107, %for.end.66
  %112 = bitcast i32* %sfb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #1
  %113 = bitcast i32* %idx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #1
  %114 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #1
  %115 = bitcast i32* %is_p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #1
  br label %for.inc.109

for.inc.109:                                      ; preds = %if.end.108
  %116 = load i32, i32* %lwin, align 4, !tbaa !1
  %inc110 = add nsw i32 %116, 1
  store i32 %inc110, i32* %lwin, align 4, !tbaa !1
  br label %for.cond

for.end.111:                                      ; preds = %for.cond
  %117 = load i32, i32* %do_l, align 4, !tbaa !1
  %tobool112 = icmp ne i32 %117, 0
  br i1 %tobool112, label %if.then.113, label %if.end.165

if.then.113:                                      ; preds = %for.end.111
  %118 = bitcast i32* %sfb114 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %118) #1
  %119 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxbandl = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %119, i32 0, i32 9
  %120 = load i32, i32* %maxbandl, align 4, !tbaa !41
  store i32 %120, i32* %sfb114, align 4, !tbaa !1
  %121 = bitcast i32* %idx115 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121) #1
  %122 = load i32, i32* %sfb114, align 4, !tbaa !1
  %idxprom116 = sext i32 %122 to i64
  %123 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longIdx = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %123, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx, i32 0, i64 %idxprom116
  %124 = load i16, i16* %arrayidx117, align 2, !tbaa !9
  %conv118 = sext i16 %124 to i32
  store i32 %conv118, i32* %idx115, align 4, !tbaa !1
  br label %for.cond.119

for.cond.119:                                     ; preds = %for.inc.162, %if.then.113
  %125 = load i32, i32* %sfb114, align 4, !tbaa !1
  %cmp120 = icmp slt i32 %125, 8
  br i1 %cmp120, label %for.body.122, label %for.end.164

for.body.122:                                     ; preds = %for.cond.119
  %126 = bitcast i32* %sb123 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %126) #1
  %127 = load i32, i32* %sfb114, align 4, !tbaa !1
  %idxprom124 = sext i32 %127 to i64
  %128 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longDiff = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %128, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [22 x i16], [22 x i16]* %longDiff, i32 0, i64 %idxprom124
  %129 = load i16, i16* %arrayidx125, align 2, !tbaa !9
  %conv126 = sext i16 %129 to i32
  store i32 %conv126, i32* %sb123, align 4, !tbaa !1
  %130 = bitcast i32* %is_p127 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %130) #1
  %131 = load i32, i32* %sfb114, align 4, !tbaa !1
  %idxprom128 = sext i32 %131 to i64
  %132 = load i32*, i32** %scalefac.addr, align 8, !tbaa !7
  %arrayidx129 = getelementptr inbounds i32, i32* %132, i64 %idxprom128
  %133 = load i32, i32* %arrayidx129, align 4, !tbaa !1
  store i32 %133, i32* %is_p127, align 4, !tbaa !1
  %134 = load i32, i32* %is_p127, align 4, !tbaa !1
  %cmp130 = icmp ne i32 %134, 7
  br i1 %cmp130, label %if.then.132, label %if.else.159

if.then.132:                                      ; preds = %for.body.122
  %135 = bitcast double* %t1133 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %135) #1
  %136 = bitcast double* %t2134 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %136) #1
  %137 = load i32, i32* %is_p127, align 4, !tbaa !1
  %idxprom135 = sext i32 %137 to i64
  %138 = load double*, double** %tab1, align 8, !tbaa !7
  %arrayidx136 = getelementptr inbounds double, double* %138, i64 %idxprom135
  %139 = load double, double* %arrayidx136, align 8, !tbaa !5
  store double %139, double* %t1133, align 8, !tbaa !5
  %140 = load i32, i32* %is_p127, align 4, !tbaa !1
  %idxprom137 = sext i32 %140 to i64
  %141 = load double*, double** %tab2, align 8, !tbaa !7
  %arrayidx138 = getelementptr inbounds double, double* %141, i64 %idxprom137
  %142 = load double, double* %arrayidx138, align 8, !tbaa !5
  store double %142, double* %t2134, align 8, !tbaa !5
  br label %for.cond.139

for.cond.139:                                     ; preds = %for.inc.155, %if.then.132
  %143 = load i32, i32* %sb123, align 4, !tbaa !1
  %cmp140 = icmp sgt i32 %143, 0
  br i1 %cmp140, label %for.body.142, label %for.end.158

for.body.142:                                     ; preds = %for.cond.139
  %144 = bitcast double* %v143 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %144) #1
  %145 = load i32, i32* %idx115, align 4, !tbaa !1
  %idxprom144 = sext i32 %145 to i64
  %146 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx145 = getelementptr inbounds [576 x double], [576 x double]* %146, i64 0
  %arrayidx146 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx145, i32 0, i64 %idxprom144
  %147 = load double, double* %arrayidx146, align 8, !tbaa !5
  store double %147, double* %v143, align 8, !tbaa !5
  %148 = load double, double* %v143, align 8, !tbaa !5
  %149 = load double, double* %t1133, align 8, !tbaa !5
  %mul147 = fmul double %148, %149
  %150 = load i32, i32* %idx115, align 4, !tbaa !1
  %idxprom148 = sext i32 %150 to i64
  %151 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx149 = getelementptr inbounds [576 x double], [576 x double]* %151, i64 0
  %arrayidx150 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx149, i32 0, i64 %idxprom148
  store double %mul147, double* %arrayidx150, align 8, !tbaa !5
  %152 = load double, double* %v143, align 8, !tbaa !5
  %153 = load double, double* %t2134, align 8, !tbaa !5
  %mul151 = fmul double %152, %153
  %154 = load i32, i32* %idx115, align 4, !tbaa !1
  %idxprom152 = sext i32 %154 to i64
  %155 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx153 = getelementptr inbounds [576 x double], [576 x double]* %155, i64 1
  %arrayidx154 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx153, i32 0, i64 %idxprom152
  store double %mul151, double* %arrayidx154, align 8, !tbaa !5
  %156 = bitcast double* %v143 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %156) #1
  br label %for.inc.155

for.inc.155:                                      ; preds = %for.body.142
  %157 = load i32, i32* %sb123, align 4, !tbaa !1
  %dec156 = add nsw i32 %157, -1
  store i32 %dec156, i32* %sb123, align 4, !tbaa !1
  %158 = load i32, i32* %idx115, align 4, !tbaa !1
  %inc157 = add nsw i32 %158, 1
  store i32 %inc157, i32* %idx115, align 4, !tbaa !1
  br label %for.cond.139

for.end.158:                                      ; preds = %for.cond.139
  %159 = bitcast double* %t2134 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %159) #1
  %160 = bitcast double* %t1133 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %160) #1
  br label %if.end.161

if.else.159:                                      ; preds = %for.body.122
  %161 = load i32, i32* %sb123, align 4, !tbaa !1
  %162 = load i32, i32* %idx115, align 4, !tbaa !1
  %add160 = add nsw i32 %162, %161
  store i32 %add160, i32* %idx115, align 4, !tbaa !1
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.159, %for.end.158
  %163 = bitcast i32* %is_p127 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #1
  %164 = bitcast i32* %sb123 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #1
  br label %for.inc.162

for.inc.162:                                      ; preds = %if.end.161
  %165 = load i32, i32* %sfb114, align 4, !tbaa !1
  %inc163 = add nsw i32 %165, 1
  store i32 %inc163, i32* %sfb114, align 4, !tbaa !1
  br label %for.cond.119

for.end.164:                                      ; preds = %for.cond.119
  %166 = bitcast i32* %idx115 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %166) #1
  %167 = bitcast i32* %sfb114 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %167) #1
  br label %if.end.165

if.end.165:                                       ; preds = %for.end.164, %for.end.111
  %168 = bitcast i32* %do_l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %168) #1
  %169 = bitcast i32* %lwin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  br label %if.end.256

if.else.166:                                      ; preds = %if.end.19
  %170 = bitcast i32* %sfb167 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %170) #1
  %171 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxbandl168 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %171, i32 0, i32 9
  %172 = load i32, i32* %maxbandl168, align 4, !tbaa !41
  store i32 %172, i32* %sfb167, align 4, !tbaa !1
  %173 = bitcast i32* %is_p169 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %173) #1
  %174 = bitcast i32* %idx170 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %174) #1
  %175 = load i32, i32* %sfb167, align 4, !tbaa !1
  %idxprom171 = sext i32 %175 to i64
  %176 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longIdx172 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %176, i32 0, i32 0
  %arrayidx173 = getelementptr inbounds [23 x i16], [23 x i16]* %longIdx172, i32 0, i64 %idxprom171
  %177 = load i16, i16* %arrayidx173, align 2, !tbaa !9
  %conv174 = sext i16 %177 to i32
  store i32 %conv174, i32* %idx170, align 4, !tbaa !1
  br label %for.cond.175

for.cond.175:                                     ; preds = %for.inc.218, %if.else.166
  %178 = load i32, i32* %sfb167, align 4, !tbaa !1
  %cmp176 = icmp slt i32 %178, 21
  br i1 %cmp176, label %for.body.178, label %for.end.220

for.body.178:                                     ; preds = %for.cond.175
  %179 = bitcast i32* %sb179 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %179) #1
  %180 = load i32, i32* %sfb167, align 4, !tbaa !1
  %idxprom180 = sext i32 %180 to i64
  %181 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longDiff181 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %181, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [22 x i16], [22 x i16]* %longDiff181, i32 0, i64 %idxprom180
  %182 = load i16, i16* %arrayidx182, align 2, !tbaa !9
  %conv183 = sext i16 %182 to i32
  store i32 %conv183, i32* %sb179, align 4, !tbaa !1
  %183 = load i32, i32* %sfb167, align 4, !tbaa !1
  %idxprom184 = sext i32 %183 to i64
  %184 = load i32*, i32** %scalefac.addr, align 8, !tbaa !7
  %arrayidx185 = getelementptr inbounds i32, i32* %184, i64 %idxprom184
  %185 = load i32, i32* %arrayidx185, align 4, !tbaa !1
  store i32 %185, i32* %is_p169, align 4, !tbaa !1
  %186 = load i32, i32* %is_p169, align 4, !tbaa !1
  %cmp186 = icmp ne i32 %186, 7
  br i1 %cmp186, label %if.then.188, label %if.else.215

if.then.188:                                      ; preds = %for.body.178
  %187 = bitcast double* %t1189 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %187) #1
  %188 = bitcast double* %t2190 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %188) #1
  %189 = load i32, i32* %is_p169, align 4, !tbaa !1
  %idxprom191 = sext i32 %189 to i64
  %190 = load double*, double** %tab1, align 8, !tbaa !7
  %arrayidx192 = getelementptr inbounds double, double* %190, i64 %idxprom191
  %191 = load double, double* %arrayidx192, align 8, !tbaa !5
  store double %191, double* %t1189, align 8, !tbaa !5
  %192 = load i32, i32* %is_p169, align 4, !tbaa !1
  %idxprom193 = sext i32 %192 to i64
  %193 = load double*, double** %tab2, align 8, !tbaa !7
  %arrayidx194 = getelementptr inbounds double, double* %193, i64 %idxprom193
  %194 = load double, double* %arrayidx194, align 8, !tbaa !5
  store double %194, double* %t2190, align 8, !tbaa !5
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.211, %if.then.188
  %195 = load i32, i32* %sb179, align 4, !tbaa !1
  %cmp196 = icmp sgt i32 %195, 0
  br i1 %cmp196, label %for.body.198, label %for.end.214

for.body.198:                                     ; preds = %for.cond.195
  %196 = bitcast double* %v199 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %196) #1
  %197 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom200 = sext i32 %197 to i64
  %198 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx201 = getelementptr inbounds [576 x double], [576 x double]* %198, i64 0
  %arrayidx202 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx201, i32 0, i64 %idxprom200
  %199 = load double, double* %arrayidx202, align 8, !tbaa !5
  store double %199, double* %v199, align 8, !tbaa !5
  %200 = load double, double* %v199, align 8, !tbaa !5
  %201 = load double, double* %t1189, align 8, !tbaa !5
  %mul203 = fmul double %200, %201
  %202 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom204 = sext i32 %202 to i64
  %203 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx205 = getelementptr inbounds [576 x double], [576 x double]* %203, i64 0
  %arrayidx206 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx205, i32 0, i64 %idxprom204
  store double %mul203, double* %arrayidx206, align 8, !tbaa !5
  %204 = load double, double* %v199, align 8, !tbaa !5
  %205 = load double, double* %t2190, align 8, !tbaa !5
  %mul207 = fmul double %204, %205
  %206 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom208 = sext i32 %206 to i64
  %207 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx209 = getelementptr inbounds [576 x double], [576 x double]* %207, i64 1
  %arrayidx210 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx209, i32 0, i64 %idxprom208
  store double %mul207, double* %arrayidx210, align 8, !tbaa !5
  %208 = bitcast double* %v199 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %208) #1
  br label %for.inc.211

for.inc.211:                                      ; preds = %for.body.198
  %209 = load i32, i32* %sb179, align 4, !tbaa !1
  %dec212 = add nsw i32 %209, -1
  store i32 %dec212, i32* %sb179, align 4, !tbaa !1
  %210 = load i32, i32* %idx170, align 4, !tbaa !1
  %inc213 = add nsw i32 %210, 1
  store i32 %inc213, i32* %idx170, align 4, !tbaa !1
  br label %for.cond.195

for.end.214:                                      ; preds = %for.cond.195
  %211 = bitcast double* %t2190 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %211) #1
  %212 = bitcast double* %t1189 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %212) #1
  br label %if.end.217

if.else.215:                                      ; preds = %for.body.178
  %213 = load i32, i32* %sb179, align 4, !tbaa !1
  %214 = load i32, i32* %idx170, align 4, !tbaa !1
  %add216 = add nsw i32 %214, %213
  store i32 %add216, i32* %idx170, align 4, !tbaa !1
  br label %if.end.217

if.end.217:                                       ; preds = %if.else.215, %for.end.214
  %215 = bitcast i32* %sb179 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %215) #1
  br label %for.inc.218

for.inc.218:                                      ; preds = %if.end.217
  %216 = load i32, i32* %sfb167, align 4, !tbaa !1
  %inc219 = add nsw i32 %216, 1
  store i32 %inc219, i32* %sfb167, align 4, !tbaa !1
  br label %for.cond.175

for.end.220:                                      ; preds = %for.cond.175
  %217 = load i32*, i32** %scalefac.addr, align 8, !tbaa !7
  %arrayidx221 = getelementptr inbounds i32, i32* %217, i64 20
  %218 = load i32, i32* %arrayidx221, align 4, !tbaa !1
  store i32 %218, i32* %is_p169, align 4, !tbaa !1
  %219 = load i32, i32* %is_p169, align 4, !tbaa !1
  %cmp222 = icmp ne i32 %219, 7
  br i1 %cmp222, label %if.then.224, label %if.end.255

if.then.224:                                      ; preds = %for.end.220
  %220 = bitcast i32* %sb225 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %220) #1
  %221 = bitcast double* %t1226 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %221) #1
  %222 = load i32, i32* %is_p169, align 4, !tbaa !1
  %idxprom227 = sext i32 %222 to i64
  %223 = load double*, double** %tab1, align 8, !tbaa !7
  %arrayidx228 = getelementptr inbounds double, double* %223, i64 %idxprom227
  %224 = load double, double* %arrayidx228, align 8, !tbaa !5
  store double %224, double* %t1226, align 8, !tbaa !5
  %225 = bitcast double* %t2229 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %225) #1
  %226 = load i32, i32* %is_p169, align 4, !tbaa !1
  %idxprom230 = sext i32 %226 to i64
  %227 = load double*, double** %tab2, align 8, !tbaa !7
  %arrayidx231 = getelementptr inbounds double, double* %227, i64 %idxprom230
  %228 = load double, double* %arrayidx231, align 8, !tbaa !5
  store double %228, double* %t2229, align 8, !tbaa !5
  %229 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %bi, align 8, !tbaa !7
  %longDiff232 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %229, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [22 x i16], [22 x i16]* %longDiff232, i32 0, i64 21
  %230 = load i16, i16* %arrayidx233, align 2, !tbaa !9
  %conv234 = sext i16 %230 to i32
  store i32 %conv234, i32* %sb225, align 4, !tbaa !1
  br label %for.cond.235

for.cond.235:                                     ; preds = %for.inc.251, %if.then.224
  %231 = load i32, i32* %sb225, align 4, !tbaa !1
  %cmp236 = icmp sgt i32 %231, 0
  br i1 %cmp236, label %for.body.238, label %for.end.254

for.body.238:                                     ; preds = %for.cond.235
  %232 = bitcast double* %v239 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %232) #1
  %233 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom240 = sext i32 %233 to i64
  %234 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx241 = getelementptr inbounds [576 x double], [576 x double]* %234, i64 0
  %arrayidx242 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx241, i32 0, i64 %idxprom240
  %235 = load double, double* %arrayidx242, align 8, !tbaa !5
  store double %235, double* %v239, align 8, !tbaa !5
  %236 = load double, double* %v239, align 8, !tbaa !5
  %237 = load double, double* %t1226, align 8, !tbaa !5
  %mul243 = fmul double %236, %237
  %238 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom244 = sext i32 %238 to i64
  %239 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx245 = getelementptr inbounds [576 x double], [576 x double]* %239, i64 0
  %arrayidx246 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx245, i32 0, i64 %idxprom244
  store double %mul243, double* %arrayidx246, align 8, !tbaa !5
  %240 = load double, double* %v239, align 8, !tbaa !5
  %241 = load double, double* %t2229, align 8, !tbaa !5
  %mul247 = fmul double %240, %241
  %242 = load i32, i32* %idx170, align 4, !tbaa !1
  %idxprom248 = sext i32 %242 to i64
  %243 = load [576 x double]*, [576 x double]** %xr, align 8, !tbaa !7
  %arrayidx249 = getelementptr inbounds [576 x double], [576 x double]* %243, i64 1
  %arrayidx250 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx249, i32 0, i64 %idxprom248
  store double %mul247, double* %arrayidx250, align 8, !tbaa !5
  %244 = bitcast double* %v239 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %244) #1
  br label %for.inc.251

for.inc.251:                                      ; preds = %for.body.238
  %245 = load i32, i32* %sb225, align 4, !tbaa !1
  %dec252 = add nsw i32 %245, -1
  store i32 %dec252, i32* %sb225, align 4, !tbaa !1
  %246 = load i32, i32* %idx170, align 4, !tbaa !1
  %inc253 = add nsw i32 %246, 1
  store i32 %inc253, i32* %idx170, align 4, !tbaa !1
  br label %for.cond.235

for.end.254:                                      ; preds = %for.cond.235
  %247 = bitcast double* %t2229 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %247) #1
  %248 = bitcast double* %t1226 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %248) #1
  %249 = bitcast i32* %sb225 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %249) #1
  br label %if.end.255

if.end.255:                                       ; preds = %for.end.254, %for.end.220
  %250 = bitcast i32* %idx170 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %251 = bitcast i32* %is_p169 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %251) #1
  %252 = bitcast i32* %sfb167 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %252) #1
  br label %if.end.256

if.end.256:                                       ; preds = %if.end.255, %if.end.165
  %253 = bitcast double** %tab2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %253) #1
  %254 = bitcast double** %tab1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %254) #1
  %255 = bitcast %struct.bandInfoStruct** %bi to i8*
  call void @llvm.lifetime.end(i64 8, i8* %255) #1
  %256 = bitcast [576 x double]** %xr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %256) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @III_antialias([18 x double]* %xr, %struct.gr_info_s* %gr_info) #0 {
entry:
  %xr.addr = alloca [18 x double]*, align 8
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %sblim = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %sb = alloca i32, align 4
  %xr1 = alloca double*, align 8
  %ss = alloca i32, align 4
  %cs = alloca double*, align 8
  %ca = alloca double*, align 8
  %xr2 = alloca double*, align 8
  %bu = alloca double, align 8
  %bd = alloca double, align 8
  store [18 x double]* %xr, [18 x double]** %xr.addr, align 8, !tbaa !7
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %0 = bitcast i32* %sblim to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1, i32 0, i32 4
  %2 = load i32, i32* %block_type, align 4, !tbaa !29
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %3, i32 0, i32 5
  %4 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 1, i32* %sblim, align 4, !tbaa !1
  br label %if.end.2

if.else:                                          ; preds = %entry
  %5 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxb = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %5, i32 0, i32 10
  %6 = load i32, i32* %maxb, align 4, !tbaa !22
  %sub = sub i32 %6, 1
  store i32 %sub, i32* %sblim, align 4, !tbaa !1
  br label %if.end.2

if.end.2:                                         ; preds = %if.else, %if.end
  %7 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast double** %xr1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load [18 x double]*, [18 x double]** %xr.addr, align 8, !tbaa !7
  %arrayidx = getelementptr inbounds [18 x double], [18 x double]* %9, i64 1
  %arraydecay = getelementptr inbounds [18 x double], [18 x double]* %arrayidx, i32 0, i32 0
  store double* %arraydecay, double** %xr1, align 8, !tbaa !7
  %10 = load i32, i32* %sblim, align 4, !tbaa !1
  store i32 %10, i32* %sb, align 4, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.14, %if.end.2
  %11 = load i32, i32* %sb, align 4, !tbaa !1
  %tobool3 = icmp ne i32 %11, 0
  br i1 %tobool3, label %for.body, label %for.end.16

for.body:                                         ; preds = %for.cond
  %12 = bitcast i32* %ss to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast double** %cs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  store double* getelementptr inbounds ([8 x double], [8 x double]* @aa_cs, i32 0, i32 0), double** %cs, align 8, !tbaa !7
  %14 = bitcast double** %ca to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  store double* getelementptr inbounds ([8 x double], [8 x double]* @aa_ca, i32 0, i32 0), double** %ca, align 8, !tbaa !7
  %15 = bitcast double** %xr2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = load double*, double** %xr1, align 8, !tbaa !7
  store double* %16, double** %xr2, align 8, !tbaa !7
  store i32 7, i32* %ss, align 4, !tbaa !1
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc, %for.body
  %17 = load i32, i32* %ss, align 4, !tbaa !1
  %cmp5 = icmp sge i32 %17, 0
  br i1 %cmp5, label %for.body.6, label %for.end

for.body.6:                                       ; preds = %for.cond.4
  %18 = bitcast double* %bu to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = load double*, double** %xr2, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds double, double* %19, i32 -1
  store double* %incdec.ptr, double** %xr2, align 8, !tbaa !7
  %20 = load double, double* %incdec.ptr, align 8, !tbaa !5
  store double %20, double* %bu, align 8, !tbaa !5
  %21 = bitcast double* %bd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  %22 = load double*, double** %xr1, align 8, !tbaa !7
  %23 = load double, double* %22, align 8, !tbaa !5
  store double %23, double* %bd, align 8, !tbaa !5
  %24 = load double, double* %bu, align 8, !tbaa !5
  %25 = load double*, double** %cs, align 8, !tbaa !7
  %26 = load double, double* %25, align 8, !tbaa !5
  %mul = fmul double %24, %26
  %27 = load double, double* %bd, align 8, !tbaa !5
  %28 = load double*, double** %ca, align 8, !tbaa !7
  %29 = load double, double* %28, align 8, !tbaa !5
  %mul7 = fmul double %27, %29
  %sub8 = fsub double %mul, %mul7
  %30 = load double*, double** %xr2, align 8, !tbaa !7
  store double %sub8, double* %30, align 8, !tbaa !5
  %31 = load double, double* %bd, align 8, !tbaa !5
  %32 = load double*, double** %cs, align 8, !tbaa !7
  %incdec.ptr9 = getelementptr inbounds double, double* %32, i32 1
  store double* %incdec.ptr9, double** %cs, align 8, !tbaa !7
  %33 = load double, double* %32, align 8, !tbaa !5
  %mul10 = fmul double %31, %33
  %34 = load double, double* %bu, align 8, !tbaa !5
  %35 = load double*, double** %ca, align 8, !tbaa !7
  %incdec.ptr11 = getelementptr inbounds double, double* %35, i32 1
  store double* %incdec.ptr11, double** %ca, align 8, !tbaa !7
  %36 = load double, double* %35, align 8, !tbaa !5
  %mul12 = fmul double %34, %36
  %add = fadd double %mul10, %mul12
  %37 = load double*, double** %xr1, align 8, !tbaa !7
  %incdec.ptr13 = getelementptr inbounds double, double* %37, i32 1
  store double* %incdec.ptr13, double** %xr1, align 8, !tbaa !7
  store double %add, double* %37, align 8, !tbaa !5
  %38 = bitcast double* %bd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #1
  %39 = bitcast double* %bu to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body.6
  %40 = load i32, i32* %ss, align 4, !tbaa !1
  %dec = add nsw i32 %40, -1
  store i32 %dec, i32* %ss, align 4, !tbaa !1
  br label %for.cond.4

for.end:                                          ; preds = %for.cond.4
  %41 = bitcast double** %xr2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast double** %ca to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %43 = bitcast double** %cs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #1
  %44 = bitcast i32* %ss to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  br label %for.inc.14

for.inc.14:                                       ; preds = %for.end
  %45 = load i32, i32* %sb, align 4, !tbaa !1
  %dec15 = add nsw i32 %45, -1
  store i32 %dec15, i32* %sb, align 4, !tbaa !1
  %46 = load double*, double** %xr1, align 8, !tbaa !7
  %add.ptr = getelementptr inbounds double, double* %46, i64 10
  store double* %add.ptr, double** %xr1, align 8, !tbaa !7
  br label %for.cond

for.end.16:                                       ; preds = %for.cond
  %47 = bitcast double** %xr1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.16, %if.then.1
  %49 = bitcast i32* %sblim to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @III_hybrid([18 x double]* %fsIn, [32 x double]* %tsOut, i32 %ch, %struct.gr_info_s* %gr_info) #0 {
entry:
  %fsIn.addr = alloca [18 x double]*, align 8
  %tsOut.addr = alloca [32 x double]*, align 8
  %ch.addr = alloca i32, align 4
  %gr_info.addr = alloca %struct.gr_info_s*, align 8
  %tspnt = alloca double*, align 8
  %block = alloca [2 x [576 x double]]*, align 8
  %blc = alloca i32*, align 8
  %rawout1 = alloca double*, align 8
  %rawout2 = alloca double*, align 8
  %bt = alloca i32, align 4
  %sb = alloca i32, align 4
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  store [18 x double]* %fsIn, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  store [32 x double]* %tsOut, [32 x double]** %tsOut.addr, align 8, !tbaa !7
  store i32 %ch, i32* %ch.addr, align 4, !tbaa !1
  store %struct.gr_info_s* %gr_info, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %0 = bitcast double** %tspnt to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load [32 x double]*, [32 x double]** %tsOut.addr, align 8, !tbaa !7
  %2 = bitcast [32 x double]* %1 to double*
  store double* %2, double** %tspnt, align 8, !tbaa !7
  %3 = bitcast [2 x [576 x double]]** %block to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.mpstr*, %struct.mpstr** @gmp, align 8, !tbaa !7
  %hybrid_block = getelementptr inbounds %struct.mpstr, %struct.mpstr* %4, i32 0, i32 7
  %arraydecay = getelementptr inbounds [2 x [2 x [576 x double]]], [2 x [2 x [576 x double]]]* %hybrid_block, i32 0, i32 0
  store [2 x [576 x double]]* %arraydecay, [2 x [576 x double]]** %block, align 8, !tbaa !7
  %5 = bitcast i32** %blc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.mpstr*, %struct.mpstr** @gmp, align 8, !tbaa !7
  %hybrid_blc = getelementptr inbounds %struct.mpstr, %struct.mpstr* %6, i32 0, i32 8
  %arraydecay1 = getelementptr inbounds [2 x i32], [2 x i32]* %hybrid_blc, i32 0, i32 0
  store i32* %arraydecay1, i32** %blc, align 8, !tbaa !7
  %7 = bitcast double** %rawout1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast double** %rawout2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i32* %bt to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  store i32 0, i32* %sb, align 4, !tbaa !1
  %11 = bitcast i32* %b to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = load i32, i32* %ch.addr, align 4, !tbaa !1
  %idxprom = sext i32 %12 to i64
  %13 = load i32*, i32** %blc, align 8, !tbaa !7
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom
  %14 = load i32, i32* %arrayidx, align 4, !tbaa !1
  store i32 %14, i32* %b, align 4, !tbaa !1
  %15 = load i32, i32* %ch.addr, align 4, !tbaa !1
  %idxprom2 = sext i32 %15 to i64
  %16 = load i32, i32* %b, align 4, !tbaa !1
  %idxprom3 = sext i32 %16 to i64
  %17 = load [2 x [576 x double]]*, [2 x [576 x double]]** %block, align 8, !tbaa !7
  %arrayidx4 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %17, i64 %idxprom3
  %arrayidx5 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %arrayidx4, i32 0, i64 %idxprom2
  %arraydecay6 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx5, i32 0, i32 0
  store double* %arraydecay6, double** %rawout1, align 8, !tbaa !7
  %18 = load i32, i32* %b, align 4, !tbaa !1
  %sub = sub nsw i32 0, %18
  %add = add nsw i32 %sub, 1
  store i32 %add, i32* %b, align 4, !tbaa !1
  %19 = load i32, i32* %ch.addr, align 4, !tbaa !1
  %idxprom7 = sext i32 %19 to i64
  %20 = load i32, i32* %b, align 4, !tbaa !1
  %idxprom8 = sext i32 %20 to i64
  %21 = load [2 x [576 x double]]*, [2 x [576 x double]]** %block, align 8, !tbaa !7
  %arrayidx9 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %21, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %arrayidx9, i32 0, i64 %idxprom7
  %arraydecay11 = getelementptr inbounds [576 x double], [576 x double]* %arrayidx10, i32 0, i32 0
  store double* %arraydecay11, double** %rawout2, align 8, !tbaa !7
  %22 = load i32, i32* %b, align 4, !tbaa !1
  %23 = load i32, i32* %ch.addr, align 4, !tbaa !1
  %idxprom12 = sext i32 %23 to i64
  %24 = load i32*, i32** %blc, align 8, !tbaa !7
  %arrayidx13 = getelementptr inbounds i32, i32* %24, i64 %idxprom12
  store i32 %22, i32* %arrayidx13, align 4, !tbaa !1
  %25 = bitcast i32* %b to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %mixed_block_flag = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %26, i32 0, i32 5
  %27 = load i32, i32* %mixed_block_flag, align 4, !tbaa !30
  %tobool = icmp ne i32 %27, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 2, i32* %sb, align 4, !tbaa !1
  %28 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx14 = getelementptr inbounds [18 x double], [18 x double]* %28, i64 0
  %arraydecay15 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx14, i32 0, i32 0
  %29 = load double*, double** %rawout1, align 8, !tbaa !7
  %30 = load double*, double** %rawout2, align 8, !tbaa !7
  %31 = load double*, double** %tspnt, align 8, !tbaa !7
  call void @dct36(double* %arraydecay15, double* %29, double* %30, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 0, i32 0), double* %31)
  %32 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx16 = getelementptr inbounds [18 x double], [18 x double]* %32, i64 1
  %arraydecay17 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx16, i32 0, i32 0
  %33 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr = getelementptr inbounds double, double* %33, i64 18
  %34 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr18 = getelementptr inbounds double, double* %34, i64 18
  %35 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr19 = getelementptr inbounds double, double* %35, i64 1
  call void @dct36(double* %arraydecay17, double* %add.ptr, double* %add.ptr18, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win1, i32 0, i64 0, i32 0), double* %add.ptr19)
  %36 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr20 = getelementptr inbounds double, double* %36, i64 36
  store double* %add.ptr20, double** %rawout1, align 8, !tbaa !7
  %37 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr21 = getelementptr inbounds double, double* %37, i64 36
  store double* %add.ptr21, double** %rawout2, align 8, !tbaa !7
  %38 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr22 = getelementptr inbounds double, double* %38, i64 2
  store double* %add.ptr22, double** %tspnt, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %39 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %block_type = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %39, i32 0, i32 4
  %40 = load i32, i32* %block_type, align 4, !tbaa !29
  store i32 %40, i32* %bt, align 4, !tbaa !1
  %41 = load i32, i32* %bt, align 4, !tbaa !1
  %cmp = icmp eq i32 %41, 2
  br i1 %cmp, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.23
  %42 = load i32, i32* %sb, align 4, !tbaa !1
  %43 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxb = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %43, i32 0, i32 10
  %44 = load i32, i32* %maxb, align 4, !tbaa !22
  %cmp24 = icmp ult i32 %42, %44
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %45 = load i32, i32* %sb, align 4, !tbaa !1
  %idxprom25 = sext i32 %45 to i64
  %46 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx26 = getelementptr inbounds [18 x double], [18 x double]* %46, i64 %idxprom25
  %arraydecay27 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx26, i32 0, i32 0
  %47 = load double*, double** %rawout1, align 8, !tbaa !7
  %48 = load double*, double** %rawout2, align 8, !tbaa !7
  %49 = load double*, double** %tspnt, align 8, !tbaa !7
  call void @dct12(double* %arraydecay27, double* %47, double* %48, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 2, i32 0), double* %49)
  %50 = load i32, i32* %sb, align 4, !tbaa !1
  %add28 = add nsw i32 %50, 1
  %idxprom29 = sext i32 %add28 to i64
  %51 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx30 = getelementptr inbounds [18 x double], [18 x double]* %51, i64 %idxprom29
  %arraydecay31 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx30, i32 0, i32 0
  %52 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr32 = getelementptr inbounds double, double* %52, i64 18
  %53 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr33 = getelementptr inbounds double, double* %53, i64 18
  %54 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr34 = getelementptr inbounds double, double* %54, i64 1
  call void @dct12(double* %arraydecay31, double* %add.ptr32, double* %add.ptr33, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win1, i32 0, i64 2, i32 0), double* %add.ptr34)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %55 = load i32, i32* %sb, align 4, !tbaa !1
  %add35 = add nsw i32 %55, 2
  store i32 %add35, i32* %sb, align 4, !tbaa !1
  %56 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr36 = getelementptr inbounds double, double* %56, i64 2
  store double* %add.ptr36, double** %tspnt, align 8, !tbaa !7
  %57 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr37 = getelementptr inbounds double, double* %57, i64 36
  store double* %add.ptr37, double** %rawout1, align 8, !tbaa !7
  %58 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr38 = getelementptr inbounds double, double* %58, i64 36
  store double* %add.ptr38, double** %rawout2, align 8, !tbaa !7
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.65

if.else:                                          ; preds = %if.end
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.59, %if.else
  %59 = load i32, i32* %sb, align 4, !tbaa !1
  %60 = load %struct.gr_info_s*, %struct.gr_info_s** %gr_info.addr, align 8, !tbaa !7
  %maxb40 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %60, i32 0, i32 10
  %61 = load i32, i32* %maxb40, align 4, !tbaa !22
  %cmp41 = icmp ult i32 %59, %61
  br i1 %cmp41, label %for.body.42, label %for.end.64

for.body.42:                                      ; preds = %for.cond.39
  %62 = load i32, i32* %sb, align 4, !tbaa !1
  %idxprom43 = sext i32 %62 to i64
  %63 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx44 = getelementptr inbounds [18 x double], [18 x double]* %63, i64 %idxprom43
  %arraydecay45 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx44, i32 0, i32 0
  %64 = load double*, double** %rawout1, align 8, !tbaa !7
  %65 = load double*, double** %rawout2, align 8, !tbaa !7
  %66 = load i32, i32* %bt, align 4, !tbaa !1
  %idxprom46 = sext i32 %66 to i64
  %arrayidx47 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i32 0, i64 %idxprom46
  %arraydecay48 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx47, i32 0, i32 0
  %67 = load double*, double** %tspnt, align 8, !tbaa !7
  call void @dct36(double* %arraydecay45, double* %64, double* %65, double* %arraydecay48, double* %67)
  %68 = load i32, i32* %sb, align 4, !tbaa !1
  %add49 = add nsw i32 %68, 1
  %idxprom50 = sext i32 %add49 to i64
  %69 = load [18 x double]*, [18 x double]** %fsIn.addr, align 8, !tbaa !7
  %arrayidx51 = getelementptr inbounds [18 x double], [18 x double]* %69, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [18 x double], [18 x double]* %arrayidx51, i32 0, i32 0
  %70 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr53 = getelementptr inbounds double, double* %70, i64 18
  %71 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr54 = getelementptr inbounds double, double* %71, i64 18
  %72 = load i32, i32* %bt, align 4, !tbaa !1
  %idxprom55 = sext i32 %72 to i64
  %arrayidx56 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i32 0, i64 %idxprom55
  %arraydecay57 = getelementptr inbounds [36 x double], [36 x double]* %arrayidx56, i32 0, i32 0
  %73 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr58 = getelementptr inbounds double, double* %73, i64 1
  call void @dct36(double* %arraydecay52, double* %add.ptr53, double* %add.ptr54, double* %arraydecay57, double* %add.ptr58)
  br label %for.inc.59

for.inc.59:                                       ; preds = %for.body.42
  %74 = load i32, i32* %sb, align 4, !tbaa !1
  %add60 = add nsw i32 %74, 2
  store i32 %add60, i32* %sb, align 4, !tbaa !1
  %75 = load double*, double** %tspnt, align 8, !tbaa !7
  %add.ptr61 = getelementptr inbounds double, double* %75, i64 2
  store double* %add.ptr61, double** %tspnt, align 8, !tbaa !7
  %76 = load double*, double** %rawout1, align 8, !tbaa !7
  %add.ptr62 = getelementptr inbounds double, double* %76, i64 36
  store double* %add.ptr62, double** %rawout1, align 8, !tbaa !7
  %77 = load double*, double** %rawout2, align 8, !tbaa !7
  %add.ptr63 = getelementptr inbounds double, double* %77, i64 36
  store double* %add.ptr63, double** %rawout2, align 8, !tbaa !7
  br label %for.cond.39

for.end.64:                                       ; preds = %for.cond.39
  br label %if.end.65

if.end.65:                                        ; preds = %for.end.64, %for.end
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.77, %if.end.65
  %78 = load i32, i32* %sb, align 4, !tbaa !1
  %cmp67 = icmp slt i32 %78, 32
  br i1 %cmp67, label %for.body.68, label %for.end.80

for.body.68:                                      ; preds = %for.cond.66
  %79 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %79) #1
  store i32 0, i32* %i, align 4, !tbaa !1
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.75, %for.body.68
  %80 = load i32, i32* %i, align 4, !tbaa !1
  %cmp70 = icmp slt i32 %80, 18
  br i1 %cmp70, label %for.body.71, label %for.end.76

for.body.71:                                      ; preds = %for.cond.69
  %81 = load double*, double** %rawout1, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds double, double* %81, i32 1
  store double* %incdec.ptr, double** %rawout1, align 8, !tbaa !7
  %82 = load double, double* %81, align 8, !tbaa !5
  %83 = load i32, i32* %i, align 4, !tbaa !1
  %mul = mul nsw i32 %83, 32
  %idxprom72 = sext i32 %mul to i64
  %84 = load double*, double** %tspnt, align 8, !tbaa !7
  %arrayidx73 = getelementptr inbounds double, double* %84, i64 %idxprom72
  store double %82, double* %arrayidx73, align 8, !tbaa !5
  %85 = load double*, double** %rawout2, align 8, !tbaa !7
  %incdec.ptr74 = getelementptr inbounds double, double* %85, i32 1
  store double* %incdec.ptr74, double** %rawout2, align 8, !tbaa !7
  store double 0.000000e+00, double* %85, align 8, !tbaa !5
  br label %for.inc.75

for.inc.75:                                       ; preds = %for.body.71
  %86 = load i32, i32* %i, align 4, !tbaa !1
  %inc = add nsw i32 %86, 1
  store i32 %inc, i32* %i, align 4, !tbaa !1
  br label %for.cond.69

for.end.76:                                       ; preds = %for.cond.69
  %87 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  br label %for.inc.77

for.inc.77:                                       ; preds = %for.end.76
  %88 = load i32, i32* %sb, align 4, !tbaa !1
  %inc78 = add nsw i32 %88, 1
  store i32 %inc78, i32* %sb, align 4, !tbaa !1
  %89 = load double*, double** %tspnt, align 8, !tbaa !7
  %incdec.ptr79 = getelementptr inbounds double, double* %89, i32 1
  store double* %incdec.ptr79, double** %tspnt, align 8, !tbaa !7
  br label %for.cond.66

for.end.80:                                       ; preds = %for.cond.66
  %90 = bitcast i32* %sb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast i32* %bt to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #1
  %92 = bitcast double** %rawout2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast double** %rawout1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #1
  %94 = bitcast i32** %blc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94) #1
  %95 = bitcast [2 x [576 x double]]** %block to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95) #1
  %96 = bitcast double** %tspnt to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #1
  ret void
}

declare i32 @synth_1to1_mono(double*, i8*, i32*) #3

declare i32 @synth_1to1(double*, i32, i8*, i32*) #3

declare i32 @getbits(i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @get1bit() #0 {
entry:
  %rval = alloca i8, align 1
  call void @llvm.lifetime.start(i64 1, i8* %rval) #1
  %0 = load i8*, i8** @wordpointer, align 8, !tbaa !7
  %1 = load i8, i8* %0, align 1, !tbaa !37
  %conv = zext i8 %1 to i32
  %2 = load i32, i32* @bitindex, align 4, !tbaa !1
  %shl = shl i32 %conv, %2
  %conv1 = trunc i32 %shl to i8
  store i8 %conv1, i8* %rval, align 1, !tbaa !37
  %3 = load i32, i32* @bitindex, align 4, !tbaa !1
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @bitindex, align 4, !tbaa !1
  %4 = load i32, i32* @bitindex, align 4, !tbaa !1
  %shr = ashr i32 %4, 3
  %5 = load i8*, i8** @wordpointer, align 8, !tbaa !7
  %idx.ext = sext i32 %shr to i64
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext
  store i8* %add.ptr, i8** @wordpointer, align 8, !tbaa !7
  %6 = load i32, i32* @bitindex, align 4, !tbaa !1
  %and = and i32 %6, 7
  store i32 %and, i32* @bitindex, align 4, !tbaa !1
  %7 = load i8, i8* %rval, align 1, !tbaa !37
  %conv2 = zext i8 %7 to i32
  %shr3 = ashr i32 %conv2, 7
  call void @llvm.lifetime.end(i64 1, i8* %rval) #1
  ret i32 %shr3
}

declare i32 @getbits_fast(i32) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind uwtable
define internal void @dct36(double* %inbuf, double* %o1, double* %o2, double* %wintab, double* %tsbuf) #0 {
entry:
  %inbuf.addr = alloca double*, align 8
  %o1.addr = alloca double*, align 8
  %o2.addr = alloca double*, align 8
  %wintab.addr = alloca double*, align 8
  %tsbuf.addr = alloca double*, align 8
  %in = alloca double*, align 8
  %c = alloca double*, align 8
  %out2 = alloca double*, align 8
  %w = alloca double*, align 8
  %out1 = alloca double*, align 8
  %ts = alloca double*, align 8
  %ta33 = alloca double, align 8
  %ta66 = alloca double, align 8
  %tb33 = alloca double, align 8
  %tb66 = alloca double, align 8
  %tmp1a = alloca double, align 8
  %tmp2a = alloca double, align 8
  %tmp1b = alloca double, align 8
  %tmp2b = alloca double, align 8
  %sum0 = alloca double, align 8
  %sum1 = alloca double, align 8
  %tmp = alloca double, align 8
  %sum0158 = alloca double, align 8
  %sum1160 = alloca double, align 8
  %tmp165 = alloca double, align 8
  %tmp1a185 = alloca double, align 8
  %tmp2a187 = alloca double, align 8
  %tmp1b189 = alloca double, align 8
  %tmp2b191 = alloca double, align 8
  %sum0229 = alloca double, align 8
  %sum1231 = alloca double, align 8
  %tmp236 = alloca double, align 8
  %sum0256 = alloca double, align 8
  %sum1258 = alloca double, align 8
  %tmp263 = alloca double, align 8
  %tmp1a283 = alloca double, align 8
  %tmp2a285 = alloca double, align 8
  %tmp1b287 = alloca double, align 8
  %tmp2b289 = alloca double, align 8
  %sum0343 = alloca double, align 8
  %sum1345 = alloca double, align 8
  %tmp350 = alloca double, align 8
  %sum0370 = alloca double, align 8
  %sum1372 = alloca double, align 8
  %tmp377 = alloca double, align 8
  %tmp1a397 = alloca double, align 8
  %tmp2a399 = alloca double, align 8
  %tmp1b401 = alloca double, align 8
  %tmp2b403 = alloca double, align 8
  %sum0457 = alloca double, align 8
  %sum1459 = alloca double, align 8
  %tmp464 = alloca double, align 8
  %sum0484 = alloca double, align 8
  %sum1486 = alloca double, align 8
  %tmp491 = alloca double, align 8
  %sum0511 = alloca double, align 8
  %sum1513 = alloca double, align 8
  %tmp534 = alloca double, align 8
  store double* %inbuf, double** %inbuf.addr, align 8, !tbaa !7
  store double* %o1, double** %o1.addr, align 8, !tbaa !7
  store double* %o2, double** %o2.addr, align 8, !tbaa !7
  store double* %wintab, double** %wintab.addr, align 8, !tbaa !7
  store double* %tsbuf, double** %tsbuf.addr, align 8, !tbaa !7
  %0 = bitcast double** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load double*, double** %inbuf.addr, align 8, !tbaa !7
  store double* %1, double** %in, align 8, !tbaa !7
  %2 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx = getelementptr inbounds double, double* %2, i64 16
  %3 = load double, double* %arrayidx, align 8, !tbaa !5
  %4 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx1 = getelementptr inbounds double, double* %4, i64 17
  %5 = load double, double* %arrayidx1, align 8, !tbaa !5
  %add = fadd double %5, %3
  store double %add, double* %arrayidx1, align 8, !tbaa !5
  %6 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 15
  %7 = load double, double* %arrayidx2, align 8, !tbaa !5
  %8 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx3 = getelementptr inbounds double, double* %8, i64 16
  %9 = load double, double* %arrayidx3, align 8, !tbaa !5
  %add4 = fadd double %9, %7
  store double %add4, double* %arrayidx3, align 8, !tbaa !5
  %10 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx5 = getelementptr inbounds double, double* %10, i64 14
  %11 = load double, double* %arrayidx5, align 8, !tbaa !5
  %12 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx6 = getelementptr inbounds double, double* %12, i64 15
  %13 = load double, double* %arrayidx6, align 8, !tbaa !5
  %add7 = fadd double %13, %11
  store double %add7, double* %arrayidx6, align 8, !tbaa !5
  %14 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx8 = getelementptr inbounds double, double* %14, i64 13
  %15 = load double, double* %arrayidx8, align 8, !tbaa !5
  %16 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx9 = getelementptr inbounds double, double* %16, i64 14
  %17 = load double, double* %arrayidx9, align 8, !tbaa !5
  %add10 = fadd double %17, %15
  store double %add10, double* %arrayidx9, align 8, !tbaa !5
  %18 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx11 = getelementptr inbounds double, double* %18, i64 12
  %19 = load double, double* %arrayidx11, align 8, !tbaa !5
  %20 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx12 = getelementptr inbounds double, double* %20, i64 13
  %21 = load double, double* %arrayidx12, align 8, !tbaa !5
  %add13 = fadd double %21, %19
  store double %add13, double* %arrayidx12, align 8, !tbaa !5
  %22 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx14 = getelementptr inbounds double, double* %22, i64 11
  %23 = load double, double* %arrayidx14, align 8, !tbaa !5
  %24 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx15 = getelementptr inbounds double, double* %24, i64 12
  %25 = load double, double* %arrayidx15, align 8, !tbaa !5
  %add16 = fadd double %25, %23
  store double %add16, double* %arrayidx15, align 8, !tbaa !5
  %26 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx17 = getelementptr inbounds double, double* %26, i64 10
  %27 = load double, double* %arrayidx17, align 8, !tbaa !5
  %28 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx18 = getelementptr inbounds double, double* %28, i64 11
  %29 = load double, double* %arrayidx18, align 8, !tbaa !5
  %add19 = fadd double %29, %27
  store double %add19, double* %arrayidx18, align 8, !tbaa !5
  %30 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx20 = getelementptr inbounds double, double* %30, i64 9
  %31 = load double, double* %arrayidx20, align 8, !tbaa !5
  %32 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx21 = getelementptr inbounds double, double* %32, i64 10
  %33 = load double, double* %arrayidx21, align 8, !tbaa !5
  %add22 = fadd double %33, %31
  store double %add22, double* %arrayidx21, align 8, !tbaa !5
  %34 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx23 = getelementptr inbounds double, double* %34, i64 8
  %35 = load double, double* %arrayidx23, align 8, !tbaa !5
  %36 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx24 = getelementptr inbounds double, double* %36, i64 9
  %37 = load double, double* %arrayidx24, align 8, !tbaa !5
  %add25 = fadd double %37, %35
  store double %add25, double* %arrayidx24, align 8, !tbaa !5
  %38 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx26 = getelementptr inbounds double, double* %38, i64 7
  %39 = load double, double* %arrayidx26, align 8, !tbaa !5
  %40 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx27 = getelementptr inbounds double, double* %40, i64 8
  %41 = load double, double* %arrayidx27, align 8, !tbaa !5
  %add28 = fadd double %41, %39
  store double %add28, double* %arrayidx27, align 8, !tbaa !5
  %42 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx29 = getelementptr inbounds double, double* %42, i64 6
  %43 = load double, double* %arrayidx29, align 8, !tbaa !5
  %44 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx30 = getelementptr inbounds double, double* %44, i64 7
  %45 = load double, double* %arrayidx30, align 8, !tbaa !5
  %add31 = fadd double %45, %43
  store double %add31, double* %arrayidx30, align 8, !tbaa !5
  %46 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx32 = getelementptr inbounds double, double* %46, i64 5
  %47 = load double, double* %arrayidx32, align 8, !tbaa !5
  %48 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx33 = getelementptr inbounds double, double* %48, i64 6
  %49 = load double, double* %arrayidx33, align 8, !tbaa !5
  %add34 = fadd double %49, %47
  store double %add34, double* %arrayidx33, align 8, !tbaa !5
  %50 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx35 = getelementptr inbounds double, double* %50, i64 4
  %51 = load double, double* %arrayidx35, align 8, !tbaa !5
  %52 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx36 = getelementptr inbounds double, double* %52, i64 5
  %53 = load double, double* %arrayidx36, align 8, !tbaa !5
  %add37 = fadd double %53, %51
  store double %add37, double* %arrayidx36, align 8, !tbaa !5
  %54 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx38 = getelementptr inbounds double, double* %54, i64 3
  %55 = load double, double* %arrayidx38, align 8, !tbaa !5
  %56 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx39 = getelementptr inbounds double, double* %56, i64 4
  %57 = load double, double* %arrayidx39, align 8, !tbaa !5
  %add40 = fadd double %57, %55
  store double %add40, double* %arrayidx39, align 8, !tbaa !5
  %58 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx41 = getelementptr inbounds double, double* %58, i64 2
  %59 = load double, double* %arrayidx41, align 8, !tbaa !5
  %60 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx42 = getelementptr inbounds double, double* %60, i64 3
  %61 = load double, double* %arrayidx42, align 8, !tbaa !5
  %add43 = fadd double %61, %59
  store double %add43, double* %arrayidx42, align 8, !tbaa !5
  %62 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx44 = getelementptr inbounds double, double* %62, i64 1
  %63 = load double, double* %arrayidx44, align 8, !tbaa !5
  %64 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx45 = getelementptr inbounds double, double* %64, i64 2
  %65 = load double, double* %arrayidx45, align 8, !tbaa !5
  %add46 = fadd double %65, %63
  store double %add46, double* %arrayidx45, align 8, !tbaa !5
  %66 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx47 = getelementptr inbounds double, double* %66, i64 0
  %67 = load double, double* %arrayidx47, align 8, !tbaa !5
  %68 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx48 = getelementptr inbounds double, double* %68, i64 1
  %69 = load double, double* %arrayidx48, align 8, !tbaa !5
  %add49 = fadd double %69, %67
  store double %add49, double* %arrayidx48, align 8, !tbaa !5
  %70 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx50 = getelementptr inbounds double, double* %70, i64 15
  %71 = load double, double* %arrayidx50, align 8, !tbaa !5
  %72 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx51 = getelementptr inbounds double, double* %72, i64 17
  %73 = load double, double* %arrayidx51, align 8, !tbaa !5
  %add52 = fadd double %73, %71
  store double %add52, double* %arrayidx51, align 8, !tbaa !5
  %74 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx53 = getelementptr inbounds double, double* %74, i64 13
  %75 = load double, double* %arrayidx53, align 8, !tbaa !5
  %76 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx54 = getelementptr inbounds double, double* %76, i64 15
  %77 = load double, double* %arrayidx54, align 8, !tbaa !5
  %add55 = fadd double %77, %75
  store double %add55, double* %arrayidx54, align 8, !tbaa !5
  %78 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx56 = getelementptr inbounds double, double* %78, i64 11
  %79 = load double, double* %arrayidx56, align 8, !tbaa !5
  %80 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx57 = getelementptr inbounds double, double* %80, i64 13
  %81 = load double, double* %arrayidx57, align 8, !tbaa !5
  %add58 = fadd double %81, %79
  store double %add58, double* %arrayidx57, align 8, !tbaa !5
  %82 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx59 = getelementptr inbounds double, double* %82, i64 9
  %83 = load double, double* %arrayidx59, align 8, !tbaa !5
  %84 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx60 = getelementptr inbounds double, double* %84, i64 11
  %85 = load double, double* %arrayidx60, align 8, !tbaa !5
  %add61 = fadd double %85, %83
  store double %add61, double* %arrayidx60, align 8, !tbaa !5
  %86 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx62 = getelementptr inbounds double, double* %86, i64 7
  %87 = load double, double* %arrayidx62, align 8, !tbaa !5
  %88 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx63 = getelementptr inbounds double, double* %88, i64 9
  %89 = load double, double* %arrayidx63, align 8, !tbaa !5
  %add64 = fadd double %89, %87
  store double %add64, double* %arrayidx63, align 8, !tbaa !5
  %90 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx65 = getelementptr inbounds double, double* %90, i64 5
  %91 = load double, double* %arrayidx65, align 8, !tbaa !5
  %92 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx66 = getelementptr inbounds double, double* %92, i64 7
  %93 = load double, double* %arrayidx66, align 8, !tbaa !5
  %add67 = fadd double %93, %91
  store double %add67, double* %arrayidx66, align 8, !tbaa !5
  %94 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx68 = getelementptr inbounds double, double* %94, i64 3
  %95 = load double, double* %arrayidx68, align 8, !tbaa !5
  %96 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx69 = getelementptr inbounds double, double* %96, i64 5
  %97 = load double, double* %arrayidx69, align 8, !tbaa !5
  %add70 = fadd double %97, %95
  store double %add70, double* %arrayidx69, align 8, !tbaa !5
  %98 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx71 = getelementptr inbounds double, double* %98, i64 1
  %99 = load double, double* %arrayidx71, align 8, !tbaa !5
  %100 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx72 = getelementptr inbounds double, double* %100, i64 3
  %101 = load double, double* %arrayidx72, align 8, !tbaa !5
  %add73 = fadd double %101, %99
  store double %add73, double* %arrayidx72, align 8, !tbaa !5
  %102 = bitcast double** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %102) #1
  store double* getelementptr inbounds ([9 x double], [9 x double]* @COS9, i32 0, i32 0), double** %c, align 8, !tbaa !7
  %103 = bitcast double** %out2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %103) #1
  %104 = load double*, double** %o2.addr, align 8, !tbaa !7
  store double* %104, double** %out2, align 8, !tbaa !7
  %105 = bitcast double** %w to i8*
  call void @llvm.lifetime.start(i64 8, i8* %105) #1
  %106 = load double*, double** %wintab.addr, align 8, !tbaa !7
  store double* %106, double** %w, align 8, !tbaa !7
  %107 = bitcast double** %out1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %107) #1
  %108 = load double*, double** %o1.addr, align 8, !tbaa !7
  store double* %108, double** %out1, align 8, !tbaa !7
  %109 = bitcast double** %ts to i8*
  call void @llvm.lifetime.start(i64 8, i8* %109) #1
  %110 = load double*, double** %tsbuf.addr, align 8, !tbaa !7
  store double* %110, double** %ts, align 8, !tbaa !7
  %111 = bitcast double* %ta33 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %111) #1
  %112 = bitcast double* %ta66 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %112) #1
  %113 = bitcast double* %tb33 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %113) #1
  %114 = bitcast double* %tb66 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %114) #1
  %115 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx74 = getelementptr inbounds double, double* %115, i64 6
  %116 = load double, double* %arrayidx74, align 8, !tbaa !5
  %117 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx75 = getelementptr inbounds double, double* %117, i64 3
  %118 = load double, double* %arrayidx75, align 8, !tbaa !5
  %mul = fmul double %116, %118
  store double %mul, double* %ta33, align 8, !tbaa !5
  %119 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx76 = getelementptr inbounds double, double* %119, i64 12
  %120 = load double, double* %arrayidx76, align 8, !tbaa !5
  %121 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx77 = getelementptr inbounds double, double* %121, i64 6
  %122 = load double, double* %arrayidx77, align 8, !tbaa !5
  %mul78 = fmul double %120, %122
  store double %mul78, double* %ta66, align 8, !tbaa !5
  %123 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx79 = getelementptr inbounds double, double* %123, i64 7
  %124 = load double, double* %arrayidx79, align 8, !tbaa !5
  %125 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx80 = getelementptr inbounds double, double* %125, i64 3
  %126 = load double, double* %arrayidx80, align 8, !tbaa !5
  %mul81 = fmul double %124, %126
  store double %mul81, double* %tb33, align 8, !tbaa !5
  %127 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx82 = getelementptr inbounds double, double* %127, i64 13
  %128 = load double, double* %arrayidx82, align 8, !tbaa !5
  %129 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx83 = getelementptr inbounds double, double* %129, i64 6
  %130 = load double, double* %arrayidx83, align 8, !tbaa !5
  %mul84 = fmul double %128, %130
  store double %mul84, double* %tb66, align 8, !tbaa !5
  %131 = bitcast double* %tmp1a to i8*
  call void @llvm.lifetime.start(i64 8, i8* %131) #1
  %132 = bitcast double* %tmp2a to i8*
  call void @llvm.lifetime.start(i64 8, i8* %132) #1
  %133 = bitcast double* %tmp1b to i8*
  call void @llvm.lifetime.start(i64 8, i8* %133) #1
  %134 = bitcast double* %tmp2b to i8*
  call void @llvm.lifetime.start(i64 8, i8* %134) #1
  %135 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx85 = getelementptr inbounds double, double* %135, i64 2
  %136 = load double, double* %arrayidx85, align 8, !tbaa !5
  %137 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx86 = getelementptr inbounds double, double* %137, i64 1
  %138 = load double, double* %arrayidx86, align 8, !tbaa !5
  %mul87 = fmul double %136, %138
  %139 = load double, double* %ta33, align 8, !tbaa !5
  %add88 = fadd double %mul87, %139
  %140 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx89 = getelementptr inbounds double, double* %140, i64 10
  %141 = load double, double* %arrayidx89, align 8, !tbaa !5
  %142 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx90 = getelementptr inbounds double, double* %142, i64 5
  %143 = load double, double* %arrayidx90, align 8, !tbaa !5
  %mul91 = fmul double %141, %143
  %add92 = fadd double %add88, %mul91
  %144 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx93 = getelementptr inbounds double, double* %144, i64 14
  %145 = load double, double* %arrayidx93, align 8, !tbaa !5
  %146 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx94 = getelementptr inbounds double, double* %146, i64 7
  %147 = load double, double* %arrayidx94, align 8, !tbaa !5
  %mul95 = fmul double %145, %147
  %add96 = fadd double %add92, %mul95
  store double %add96, double* %tmp1a, align 8, !tbaa !5
  %148 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx97 = getelementptr inbounds double, double* %148, i64 3
  %149 = load double, double* %arrayidx97, align 8, !tbaa !5
  %150 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx98 = getelementptr inbounds double, double* %150, i64 1
  %151 = load double, double* %arrayidx98, align 8, !tbaa !5
  %mul99 = fmul double %149, %151
  %152 = load double, double* %tb33, align 8, !tbaa !5
  %add100 = fadd double %mul99, %152
  %153 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx101 = getelementptr inbounds double, double* %153, i64 11
  %154 = load double, double* %arrayidx101, align 8, !tbaa !5
  %155 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx102 = getelementptr inbounds double, double* %155, i64 5
  %156 = load double, double* %arrayidx102, align 8, !tbaa !5
  %mul103 = fmul double %154, %156
  %add104 = fadd double %add100, %mul103
  %157 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx105 = getelementptr inbounds double, double* %157, i64 15
  %158 = load double, double* %arrayidx105, align 8, !tbaa !5
  %159 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx106 = getelementptr inbounds double, double* %159, i64 7
  %160 = load double, double* %arrayidx106, align 8, !tbaa !5
  %mul107 = fmul double %158, %160
  %add108 = fadd double %add104, %mul107
  store double %add108, double* %tmp1b, align 8, !tbaa !5
  %161 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx109 = getelementptr inbounds double, double* %161, i64 0
  %162 = load double, double* %arrayidx109, align 8, !tbaa !5
  %163 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx110 = getelementptr inbounds double, double* %163, i64 4
  %164 = load double, double* %arrayidx110, align 8, !tbaa !5
  %165 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx111 = getelementptr inbounds double, double* %165, i64 2
  %166 = load double, double* %arrayidx111, align 8, !tbaa !5
  %mul112 = fmul double %164, %166
  %add113 = fadd double %162, %mul112
  %167 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx114 = getelementptr inbounds double, double* %167, i64 8
  %168 = load double, double* %arrayidx114, align 8, !tbaa !5
  %169 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx115 = getelementptr inbounds double, double* %169, i64 4
  %170 = load double, double* %arrayidx115, align 8, !tbaa !5
  %mul116 = fmul double %168, %170
  %add117 = fadd double %add113, %mul116
  %171 = load double, double* %ta66, align 8, !tbaa !5
  %add118 = fadd double %add117, %171
  %172 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx119 = getelementptr inbounds double, double* %172, i64 16
  %173 = load double, double* %arrayidx119, align 8, !tbaa !5
  %174 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx120 = getelementptr inbounds double, double* %174, i64 8
  %175 = load double, double* %arrayidx120, align 8, !tbaa !5
  %mul121 = fmul double %173, %175
  %add122 = fadd double %add118, %mul121
  store double %add122, double* %tmp2a, align 8, !tbaa !5
  %176 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx123 = getelementptr inbounds double, double* %176, i64 1
  %177 = load double, double* %arrayidx123, align 8, !tbaa !5
  %178 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx124 = getelementptr inbounds double, double* %178, i64 5
  %179 = load double, double* %arrayidx124, align 8, !tbaa !5
  %180 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx125 = getelementptr inbounds double, double* %180, i64 2
  %181 = load double, double* %arrayidx125, align 8, !tbaa !5
  %mul126 = fmul double %179, %181
  %add127 = fadd double %177, %mul126
  %182 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx128 = getelementptr inbounds double, double* %182, i64 9
  %183 = load double, double* %arrayidx128, align 8, !tbaa !5
  %184 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx129 = getelementptr inbounds double, double* %184, i64 4
  %185 = load double, double* %arrayidx129, align 8, !tbaa !5
  %mul130 = fmul double %183, %185
  %add131 = fadd double %add127, %mul130
  %186 = load double, double* %tb66, align 8, !tbaa !5
  %add132 = fadd double %add131, %186
  %187 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx133 = getelementptr inbounds double, double* %187, i64 17
  %188 = load double, double* %arrayidx133, align 8, !tbaa !5
  %189 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx134 = getelementptr inbounds double, double* %189, i64 8
  %190 = load double, double* %arrayidx134, align 8, !tbaa !5
  %mul135 = fmul double %188, %190
  %add136 = fadd double %add132, %mul135
  store double %add136, double* %tmp2b, align 8, !tbaa !5
  %191 = bitcast double* %sum0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %191) #1
  %192 = bitcast double* %sum1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %192) #1
  %193 = load double, double* %tmp1a, align 8, !tbaa !5
  %194 = load double, double* %tmp2a, align 8, !tbaa !5
  %add137 = fadd double %193, %194
  store double %add137, double* %sum0, align 8, !tbaa !5
  %195 = load double, double* %tmp1b, align 8, !tbaa !5
  %196 = load double, double* %tmp2b, align 8, !tbaa !5
  %add138 = fadd double %195, %196
  %197 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 0), align 8, !tbaa !5
  %mul139 = fmul double %add138, %197
  store double %mul139, double* %sum1, align 8, !tbaa !5
  %198 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %198) #1
  %199 = load double, double* %sum0, align 8, !tbaa !5
  %200 = load double, double* %sum1, align 8, !tbaa !5
  %add140 = fadd double %199, %200
  store double %add140, double* %tmp, align 8, !tbaa !5
  %201 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx141 = getelementptr inbounds double, double* %201, i64 27
  %202 = load double, double* %arrayidx141, align 8, !tbaa !5
  %mul142 = fmul double %add140, %202
  %203 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx143 = getelementptr inbounds double, double* %203, i64 9
  store double %mul142, double* %arrayidx143, align 8, !tbaa !5
  %204 = load double, double* %tmp, align 8, !tbaa !5
  %205 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx144 = getelementptr inbounds double, double* %205, i64 26
  %206 = load double, double* %arrayidx144, align 8, !tbaa !5
  %mul145 = fmul double %204, %206
  %207 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx146 = getelementptr inbounds double, double* %207, i64 8
  store double %mul145, double* %arrayidx146, align 8, !tbaa !5
  %208 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %208) #1
  %209 = load double, double* %sum1, align 8, !tbaa !5
  %210 = load double, double* %sum0, align 8, !tbaa !5
  %sub = fsub double %210, %209
  store double %sub, double* %sum0, align 8, !tbaa !5
  %211 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx147 = getelementptr inbounds double, double* %211, i64 8
  %212 = load double, double* %arrayidx147, align 8, !tbaa !5
  %213 = load double, double* %sum0, align 8, !tbaa !5
  %214 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx148 = getelementptr inbounds double, double* %214, i64 8
  %215 = load double, double* %arrayidx148, align 8, !tbaa !5
  %mul149 = fmul double %213, %215
  %add150 = fadd double %212, %mul149
  %216 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx151 = getelementptr inbounds double, double* %216, i64 256
  store double %add150, double* %arrayidx151, align 8, !tbaa !5
  %217 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx152 = getelementptr inbounds double, double* %217, i64 9
  %218 = load double, double* %arrayidx152, align 8, !tbaa !5
  %219 = load double, double* %sum0, align 8, !tbaa !5
  %220 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx153 = getelementptr inbounds double, double* %220, i64 9
  %221 = load double, double* %arrayidx153, align 8, !tbaa !5
  %mul154 = fmul double %219, %221
  %add155 = fadd double %218, %mul154
  %222 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx156 = getelementptr inbounds double, double* %222, i64 288
  store double %add155, double* %arrayidx156, align 8, !tbaa !5
  %223 = bitcast double* %sum1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %223) #1
  %224 = bitcast double* %sum0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %224) #1
  %225 = bitcast double* %sum0158 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %225) #1
  %226 = bitcast double* %sum1160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %226) #1
  %227 = load double, double* %tmp2a, align 8, !tbaa !5
  %228 = load double, double* %tmp1a, align 8, !tbaa !5
  %sub161 = fsub double %227, %228
  store double %sub161, double* %sum0158, align 8, !tbaa !5
  %229 = load double, double* %tmp2b, align 8, !tbaa !5
  %230 = load double, double* %tmp1b, align 8, !tbaa !5
  %sub162 = fsub double %229, %230
  %231 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 8), align 8, !tbaa !5
  %mul163 = fmul double %sub162, %231
  store double %mul163, double* %sum1160, align 8, !tbaa !5
  %232 = bitcast double* %tmp165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %232) #1
  %233 = load double, double* %sum0158, align 8, !tbaa !5
  %234 = load double, double* %sum1160, align 8, !tbaa !5
  %add166 = fadd double %233, %234
  store double %add166, double* %tmp165, align 8, !tbaa !5
  %235 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx167 = getelementptr inbounds double, double* %235, i64 35
  %236 = load double, double* %arrayidx167, align 8, !tbaa !5
  %mul168 = fmul double %add166, %236
  %237 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx169 = getelementptr inbounds double, double* %237, i64 17
  store double %mul168, double* %arrayidx169, align 8, !tbaa !5
  %238 = load double, double* %tmp165, align 8, !tbaa !5
  %239 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx170 = getelementptr inbounds double, double* %239, i64 18
  %240 = load double, double* %arrayidx170, align 8, !tbaa !5
  %mul171 = fmul double %238, %240
  %241 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx172 = getelementptr inbounds double, double* %241, i64 0
  store double %mul171, double* %arrayidx172, align 8, !tbaa !5
  %242 = bitcast double* %tmp165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %242) #1
  %243 = load double, double* %sum1160, align 8, !tbaa !5
  %244 = load double, double* %sum0158, align 8, !tbaa !5
  %sub173 = fsub double %244, %243
  store double %sub173, double* %sum0158, align 8, !tbaa !5
  %245 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx174 = getelementptr inbounds double, double* %245, i64 0
  %246 = load double, double* %arrayidx174, align 8, !tbaa !5
  %247 = load double, double* %sum0158, align 8, !tbaa !5
  %248 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx175 = getelementptr inbounds double, double* %248, i64 0
  %249 = load double, double* %arrayidx175, align 8, !tbaa !5
  %mul176 = fmul double %247, %249
  %add177 = fadd double %246, %mul176
  %250 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx178 = getelementptr inbounds double, double* %250, i64 0
  store double %add177, double* %arrayidx178, align 8, !tbaa !5
  %251 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx179 = getelementptr inbounds double, double* %251, i64 17
  %252 = load double, double* %arrayidx179, align 8, !tbaa !5
  %253 = load double, double* %sum0158, align 8, !tbaa !5
  %254 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx180 = getelementptr inbounds double, double* %254, i64 17
  %255 = load double, double* %arrayidx180, align 8, !tbaa !5
  %mul181 = fmul double %253, %255
  %add182 = fadd double %252, %mul181
  %256 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx183 = getelementptr inbounds double, double* %256, i64 544
  store double %add182, double* %arrayidx183, align 8, !tbaa !5
  %257 = bitcast double* %sum1160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %257) #1
  %258 = bitcast double* %sum0158 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %258) #1
  %259 = bitcast double* %tmp2b to i8*
  call void @llvm.lifetime.end(i64 8, i8* %259) #1
  %260 = bitcast double* %tmp1b to i8*
  call void @llvm.lifetime.end(i64 8, i8* %260) #1
  %261 = bitcast double* %tmp2a to i8*
  call void @llvm.lifetime.end(i64 8, i8* %261) #1
  %262 = bitcast double* %tmp1a to i8*
  call void @llvm.lifetime.end(i64 8, i8* %262) #1
  %263 = bitcast double* %tmp1a185 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %263) #1
  %264 = bitcast double* %tmp2a187 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %264) #1
  %265 = bitcast double* %tmp1b189 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %265) #1
  %266 = bitcast double* %tmp2b191 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %266) #1
  %267 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx192 = getelementptr inbounds double, double* %267, i64 2
  %268 = load double, double* %arrayidx192, align 8, !tbaa !5
  %269 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx193 = getelementptr inbounds double, double* %269, i64 10
  %270 = load double, double* %arrayidx193, align 8, !tbaa !5
  %sub194 = fsub double %268, %270
  %271 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx195 = getelementptr inbounds double, double* %271, i64 14
  %272 = load double, double* %arrayidx195, align 8, !tbaa !5
  %sub196 = fsub double %sub194, %272
  %273 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx197 = getelementptr inbounds double, double* %273, i64 3
  %274 = load double, double* %arrayidx197, align 8, !tbaa !5
  %mul198 = fmul double %sub196, %274
  store double %mul198, double* %tmp1a185, align 8, !tbaa !5
  %275 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx199 = getelementptr inbounds double, double* %275, i64 3
  %276 = load double, double* %arrayidx199, align 8, !tbaa !5
  %277 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx200 = getelementptr inbounds double, double* %277, i64 11
  %278 = load double, double* %arrayidx200, align 8, !tbaa !5
  %sub201 = fsub double %276, %278
  %279 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx202 = getelementptr inbounds double, double* %279, i64 15
  %280 = load double, double* %arrayidx202, align 8, !tbaa !5
  %sub203 = fsub double %sub201, %280
  %281 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx204 = getelementptr inbounds double, double* %281, i64 3
  %282 = load double, double* %arrayidx204, align 8, !tbaa !5
  %mul205 = fmul double %sub203, %282
  store double %mul205, double* %tmp1b189, align 8, !tbaa !5
  %283 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx206 = getelementptr inbounds double, double* %283, i64 4
  %284 = load double, double* %arrayidx206, align 8, !tbaa !5
  %285 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx207 = getelementptr inbounds double, double* %285, i64 8
  %286 = load double, double* %arrayidx207, align 8, !tbaa !5
  %sub208 = fsub double %284, %286
  %287 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx209 = getelementptr inbounds double, double* %287, i64 16
  %288 = load double, double* %arrayidx209, align 8, !tbaa !5
  %sub210 = fsub double %sub208, %288
  %289 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx211 = getelementptr inbounds double, double* %289, i64 6
  %290 = load double, double* %arrayidx211, align 8, !tbaa !5
  %mul212 = fmul double %sub210, %290
  %291 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx213 = getelementptr inbounds double, double* %291, i64 12
  %292 = load double, double* %arrayidx213, align 8, !tbaa !5
  %sub214 = fsub double %mul212, %292
  %293 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx215 = getelementptr inbounds double, double* %293, i64 0
  %294 = load double, double* %arrayidx215, align 8, !tbaa !5
  %add216 = fadd double %sub214, %294
  store double %add216, double* %tmp2a187, align 8, !tbaa !5
  %295 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx217 = getelementptr inbounds double, double* %295, i64 5
  %296 = load double, double* %arrayidx217, align 8, !tbaa !5
  %297 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx218 = getelementptr inbounds double, double* %297, i64 9
  %298 = load double, double* %arrayidx218, align 8, !tbaa !5
  %sub219 = fsub double %296, %298
  %299 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx220 = getelementptr inbounds double, double* %299, i64 17
  %300 = load double, double* %arrayidx220, align 8, !tbaa !5
  %sub221 = fsub double %sub219, %300
  %301 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx222 = getelementptr inbounds double, double* %301, i64 6
  %302 = load double, double* %arrayidx222, align 8, !tbaa !5
  %mul223 = fmul double %sub221, %302
  %303 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx224 = getelementptr inbounds double, double* %303, i64 13
  %304 = load double, double* %arrayidx224, align 8, !tbaa !5
  %sub225 = fsub double %mul223, %304
  %305 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx226 = getelementptr inbounds double, double* %305, i64 1
  %306 = load double, double* %arrayidx226, align 8, !tbaa !5
  %add227 = fadd double %sub225, %306
  store double %add227, double* %tmp2b191, align 8, !tbaa !5
  %307 = bitcast double* %sum0229 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %307) #1
  %308 = bitcast double* %sum1231 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %308) #1
  %309 = load double, double* %tmp1a185, align 8, !tbaa !5
  %310 = load double, double* %tmp2a187, align 8, !tbaa !5
  %add232 = fadd double %309, %310
  store double %add232, double* %sum0229, align 8, !tbaa !5
  %311 = load double, double* %tmp1b189, align 8, !tbaa !5
  %312 = load double, double* %tmp2b191, align 8, !tbaa !5
  %add233 = fadd double %311, %312
  %313 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 1), align 8, !tbaa !5
  %mul234 = fmul double %add233, %313
  store double %mul234, double* %sum1231, align 8, !tbaa !5
  %314 = bitcast double* %tmp236 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %314) #1
  %315 = load double, double* %sum0229, align 8, !tbaa !5
  %316 = load double, double* %sum1231, align 8, !tbaa !5
  %add237 = fadd double %315, %316
  store double %add237, double* %tmp236, align 8, !tbaa !5
  %317 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx238 = getelementptr inbounds double, double* %317, i64 28
  %318 = load double, double* %arrayidx238, align 8, !tbaa !5
  %mul239 = fmul double %add237, %318
  %319 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx240 = getelementptr inbounds double, double* %319, i64 10
  store double %mul239, double* %arrayidx240, align 8, !tbaa !5
  %320 = load double, double* %tmp236, align 8, !tbaa !5
  %321 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx241 = getelementptr inbounds double, double* %321, i64 25
  %322 = load double, double* %arrayidx241, align 8, !tbaa !5
  %mul242 = fmul double %320, %322
  %323 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx243 = getelementptr inbounds double, double* %323, i64 7
  store double %mul242, double* %arrayidx243, align 8, !tbaa !5
  %324 = bitcast double* %tmp236 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %324) #1
  %325 = load double, double* %sum1231, align 8, !tbaa !5
  %326 = load double, double* %sum0229, align 8, !tbaa !5
  %sub244 = fsub double %326, %325
  store double %sub244, double* %sum0229, align 8, !tbaa !5
  %327 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx245 = getelementptr inbounds double, double* %327, i64 7
  %328 = load double, double* %arrayidx245, align 8, !tbaa !5
  %329 = load double, double* %sum0229, align 8, !tbaa !5
  %330 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx246 = getelementptr inbounds double, double* %330, i64 7
  %331 = load double, double* %arrayidx246, align 8, !tbaa !5
  %mul247 = fmul double %329, %331
  %add248 = fadd double %328, %mul247
  %332 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx249 = getelementptr inbounds double, double* %332, i64 224
  store double %add248, double* %arrayidx249, align 8, !tbaa !5
  %333 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx250 = getelementptr inbounds double, double* %333, i64 10
  %334 = load double, double* %arrayidx250, align 8, !tbaa !5
  %335 = load double, double* %sum0229, align 8, !tbaa !5
  %336 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx251 = getelementptr inbounds double, double* %336, i64 10
  %337 = load double, double* %arrayidx251, align 8, !tbaa !5
  %mul252 = fmul double %335, %337
  %add253 = fadd double %334, %mul252
  %338 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx254 = getelementptr inbounds double, double* %338, i64 320
  store double %add253, double* %arrayidx254, align 8, !tbaa !5
  %339 = bitcast double* %sum1231 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %339) #1
  %340 = bitcast double* %sum0229 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %340) #1
  %341 = bitcast double* %sum0256 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %341) #1
  %342 = bitcast double* %sum1258 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %342) #1
  %343 = load double, double* %tmp2a187, align 8, !tbaa !5
  %344 = load double, double* %tmp1a185, align 8, !tbaa !5
  %sub259 = fsub double %343, %344
  store double %sub259, double* %sum0256, align 8, !tbaa !5
  %345 = load double, double* %tmp2b191, align 8, !tbaa !5
  %346 = load double, double* %tmp1b189, align 8, !tbaa !5
  %sub260 = fsub double %345, %346
  %347 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 7), align 8, !tbaa !5
  %mul261 = fmul double %sub260, %347
  store double %mul261, double* %sum1258, align 8, !tbaa !5
  %348 = bitcast double* %tmp263 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %348) #1
  %349 = load double, double* %sum0256, align 8, !tbaa !5
  %350 = load double, double* %sum1258, align 8, !tbaa !5
  %add264 = fadd double %349, %350
  store double %add264, double* %tmp263, align 8, !tbaa !5
  %351 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx265 = getelementptr inbounds double, double* %351, i64 34
  %352 = load double, double* %arrayidx265, align 8, !tbaa !5
  %mul266 = fmul double %add264, %352
  %353 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx267 = getelementptr inbounds double, double* %353, i64 16
  store double %mul266, double* %arrayidx267, align 8, !tbaa !5
  %354 = load double, double* %tmp263, align 8, !tbaa !5
  %355 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx268 = getelementptr inbounds double, double* %355, i64 19
  %356 = load double, double* %arrayidx268, align 8, !tbaa !5
  %mul269 = fmul double %354, %356
  %357 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx270 = getelementptr inbounds double, double* %357, i64 1
  store double %mul269, double* %arrayidx270, align 8, !tbaa !5
  %358 = bitcast double* %tmp263 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %358) #1
  %359 = load double, double* %sum1258, align 8, !tbaa !5
  %360 = load double, double* %sum0256, align 8, !tbaa !5
  %sub271 = fsub double %360, %359
  store double %sub271, double* %sum0256, align 8, !tbaa !5
  %361 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx272 = getelementptr inbounds double, double* %361, i64 1
  %362 = load double, double* %arrayidx272, align 8, !tbaa !5
  %363 = load double, double* %sum0256, align 8, !tbaa !5
  %364 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx273 = getelementptr inbounds double, double* %364, i64 1
  %365 = load double, double* %arrayidx273, align 8, !tbaa !5
  %mul274 = fmul double %363, %365
  %add275 = fadd double %362, %mul274
  %366 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx276 = getelementptr inbounds double, double* %366, i64 32
  store double %add275, double* %arrayidx276, align 8, !tbaa !5
  %367 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx277 = getelementptr inbounds double, double* %367, i64 16
  %368 = load double, double* %arrayidx277, align 8, !tbaa !5
  %369 = load double, double* %sum0256, align 8, !tbaa !5
  %370 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx278 = getelementptr inbounds double, double* %370, i64 16
  %371 = load double, double* %arrayidx278, align 8, !tbaa !5
  %mul279 = fmul double %369, %371
  %add280 = fadd double %368, %mul279
  %372 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx281 = getelementptr inbounds double, double* %372, i64 512
  store double %add280, double* %arrayidx281, align 8, !tbaa !5
  %373 = bitcast double* %sum1258 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %373) #1
  %374 = bitcast double* %sum0256 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %374) #1
  %375 = bitcast double* %tmp2b191 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %375) #1
  %376 = bitcast double* %tmp1b189 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %376) #1
  %377 = bitcast double* %tmp2a187 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %377) #1
  %378 = bitcast double* %tmp1a185 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %378) #1
  %379 = bitcast double* %tmp1a283 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %379) #1
  %380 = bitcast double* %tmp2a285 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %380) #1
  %381 = bitcast double* %tmp1b287 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %381) #1
  %382 = bitcast double* %tmp2b289 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %382) #1
  %383 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx290 = getelementptr inbounds double, double* %383, i64 2
  %384 = load double, double* %arrayidx290, align 8, !tbaa !5
  %385 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx291 = getelementptr inbounds double, double* %385, i64 5
  %386 = load double, double* %arrayidx291, align 8, !tbaa !5
  %mul292 = fmul double %384, %386
  %387 = load double, double* %ta33, align 8, !tbaa !5
  %sub293 = fsub double %mul292, %387
  %388 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx294 = getelementptr inbounds double, double* %388, i64 10
  %389 = load double, double* %arrayidx294, align 8, !tbaa !5
  %390 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx295 = getelementptr inbounds double, double* %390, i64 7
  %391 = load double, double* %arrayidx295, align 8, !tbaa !5
  %mul296 = fmul double %389, %391
  %sub297 = fsub double %sub293, %mul296
  %392 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx298 = getelementptr inbounds double, double* %392, i64 14
  %393 = load double, double* %arrayidx298, align 8, !tbaa !5
  %394 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx299 = getelementptr inbounds double, double* %394, i64 1
  %395 = load double, double* %arrayidx299, align 8, !tbaa !5
  %mul300 = fmul double %393, %395
  %add301 = fadd double %sub297, %mul300
  store double %add301, double* %tmp1a283, align 8, !tbaa !5
  %396 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx302 = getelementptr inbounds double, double* %396, i64 3
  %397 = load double, double* %arrayidx302, align 8, !tbaa !5
  %398 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx303 = getelementptr inbounds double, double* %398, i64 5
  %399 = load double, double* %arrayidx303, align 8, !tbaa !5
  %mul304 = fmul double %397, %399
  %400 = load double, double* %tb33, align 8, !tbaa !5
  %sub305 = fsub double %mul304, %400
  %401 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx306 = getelementptr inbounds double, double* %401, i64 11
  %402 = load double, double* %arrayidx306, align 8, !tbaa !5
  %403 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx307 = getelementptr inbounds double, double* %403, i64 7
  %404 = load double, double* %arrayidx307, align 8, !tbaa !5
  %mul308 = fmul double %402, %404
  %sub309 = fsub double %sub305, %mul308
  %405 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx310 = getelementptr inbounds double, double* %405, i64 15
  %406 = load double, double* %arrayidx310, align 8, !tbaa !5
  %407 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx311 = getelementptr inbounds double, double* %407, i64 1
  %408 = load double, double* %arrayidx311, align 8, !tbaa !5
  %mul312 = fmul double %406, %408
  %add313 = fadd double %sub309, %mul312
  store double %add313, double* %tmp1b287, align 8, !tbaa !5
  %409 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx314 = getelementptr inbounds double, double* %409, i64 0
  %410 = load double, double* %arrayidx314, align 8, !tbaa !5
  %411 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx315 = getelementptr inbounds double, double* %411, i64 4
  %412 = load double, double* %arrayidx315, align 8, !tbaa !5
  %413 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx316 = getelementptr inbounds double, double* %413, i64 8
  %414 = load double, double* %arrayidx316, align 8, !tbaa !5
  %mul317 = fmul double %412, %414
  %sub318 = fsub double %410, %mul317
  %415 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx319 = getelementptr inbounds double, double* %415, i64 8
  %416 = load double, double* %arrayidx319, align 8, !tbaa !5
  %417 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx320 = getelementptr inbounds double, double* %417, i64 2
  %418 = load double, double* %arrayidx320, align 8, !tbaa !5
  %mul321 = fmul double %416, %418
  %sub322 = fsub double %sub318, %mul321
  %419 = load double, double* %ta66, align 8, !tbaa !5
  %add323 = fadd double %sub322, %419
  %420 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx324 = getelementptr inbounds double, double* %420, i64 16
  %421 = load double, double* %arrayidx324, align 8, !tbaa !5
  %422 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx325 = getelementptr inbounds double, double* %422, i64 4
  %423 = load double, double* %arrayidx325, align 8, !tbaa !5
  %mul326 = fmul double %421, %423
  %add327 = fadd double %add323, %mul326
  store double %add327, double* %tmp2a285, align 8, !tbaa !5
  %424 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx328 = getelementptr inbounds double, double* %424, i64 1
  %425 = load double, double* %arrayidx328, align 8, !tbaa !5
  %426 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx329 = getelementptr inbounds double, double* %426, i64 5
  %427 = load double, double* %arrayidx329, align 8, !tbaa !5
  %428 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx330 = getelementptr inbounds double, double* %428, i64 8
  %429 = load double, double* %arrayidx330, align 8, !tbaa !5
  %mul331 = fmul double %427, %429
  %sub332 = fsub double %425, %mul331
  %430 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx333 = getelementptr inbounds double, double* %430, i64 9
  %431 = load double, double* %arrayidx333, align 8, !tbaa !5
  %432 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx334 = getelementptr inbounds double, double* %432, i64 2
  %433 = load double, double* %arrayidx334, align 8, !tbaa !5
  %mul335 = fmul double %431, %433
  %sub336 = fsub double %sub332, %mul335
  %434 = load double, double* %tb66, align 8, !tbaa !5
  %add337 = fadd double %sub336, %434
  %435 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx338 = getelementptr inbounds double, double* %435, i64 17
  %436 = load double, double* %arrayidx338, align 8, !tbaa !5
  %437 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx339 = getelementptr inbounds double, double* %437, i64 4
  %438 = load double, double* %arrayidx339, align 8, !tbaa !5
  %mul340 = fmul double %436, %438
  %add341 = fadd double %add337, %mul340
  store double %add341, double* %tmp2b289, align 8, !tbaa !5
  %439 = bitcast double* %sum0343 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %439) #1
  %440 = bitcast double* %sum1345 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %440) #1
  %441 = load double, double* %tmp1a283, align 8, !tbaa !5
  %442 = load double, double* %tmp2a285, align 8, !tbaa !5
  %add346 = fadd double %441, %442
  store double %add346, double* %sum0343, align 8, !tbaa !5
  %443 = load double, double* %tmp1b287, align 8, !tbaa !5
  %444 = load double, double* %tmp2b289, align 8, !tbaa !5
  %add347 = fadd double %443, %444
  %445 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 2), align 8, !tbaa !5
  %mul348 = fmul double %add347, %445
  store double %mul348, double* %sum1345, align 8, !tbaa !5
  %446 = bitcast double* %tmp350 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %446) #1
  %447 = load double, double* %sum0343, align 8, !tbaa !5
  %448 = load double, double* %sum1345, align 8, !tbaa !5
  %add351 = fadd double %447, %448
  store double %add351, double* %tmp350, align 8, !tbaa !5
  %449 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx352 = getelementptr inbounds double, double* %449, i64 29
  %450 = load double, double* %arrayidx352, align 8, !tbaa !5
  %mul353 = fmul double %add351, %450
  %451 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx354 = getelementptr inbounds double, double* %451, i64 11
  store double %mul353, double* %arrayidx354, align 8, !tbaa !5
  %452 = load double, double* %tmp350, align 8, !tbaa !5
  %453 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx355 = getelementptr inbounds double, double* %453, i64 24
  %454 = load double, double* %arrayidx355, align 8, !tbaa !5
  %mul356 = fmul double %452, %454
  %455 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx357 = getelementptr inbounds double, double* %455, i64 6
  store double %mul356, double* %arrayidx357, align 8, !tbaa !5
  %456 = bitcast double* %tmp350 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %456) #1
  %457 = load double, double* %sum1345, align 8, !tbaa !5
  %458 = load double, double* %sum0343, align 8, !tbaa !5
  %sub358 = fsub double %458, %457
  store double %sub358, double* %sum0343, align 8, !tbaa !5
  %459 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx359 = getelementptr inbounds double, double* %459, i64 6
  %460 = load double, double* %arrayidx359, align 8, !tbaa !5
  %461 = load double, double* %sum0343, align 8, !tbaa !5
  %462 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx360 = getelementptr inbounds double, double* %462, i64 6
  %463 = load double, double* %arrayidx360, align 8, !tbaa !5
  %mul361 = fmul double %461, %463
  %add362 = fadd double %460, %mul361
  %464 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx363 = getelementptr inbounds double, double* %464, i64 192
  store double %add362, double* %arrayidx363, align 8, !tbaa !5
  %465 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx364 = getelementptr inbounds double, double* %465, i64 11
  %466 = load double, double* %arrayidx364, align 8, !tbaa !5
  %467 = load double, double* %sum0343, align 8, !tbaa !5
  %468 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx365 = getelementptr inbounds double, double* %468, i64 11
  %469 = load double, double* %arrayidx365, align 8, !tbaa !5
  %mul366 = fmul double %467, %469
  %add367 = fadd double %466, %mul366
  %470 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx368 = getelementptr inbounds double, double* %470, i64 352
  store double %add367, double* %arrayidx368, align 8, !tbaa !5
  %471 = bitcast double* %sum1345 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %471) #1
  %472 = bitcast double* %sum0343 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %472) #1
  %473 = bitcast double* %sum0370 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %473) #1
  %474 = bitcast double* %sum1372 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %474) #1
  %475 = load double, double* %tmp2a285, align 8, !tbaa !5
  %476 = load double, double* %tmp1a283, align 8, !tbaa !5
  %sub373 = fsub double %475, %476
  store double %sub373, double* %sum0370, align 8, !tbaa !5
  %477 = load double, double* %tmp2b289, align 8, !tbaa !5
  %478 = load double, double* %tmp1b287, align 8, !tbaa !5
  %sub374 = fsub double %477, %478
  %479 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 6), align 8, !tbaa !5
  %mul375 = fmul double %sub374, %479
  store double %mul375, double* %sum1372, align 8, !tbaa !5
  %480 = bitcast double* %tmp377 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %480) #1
  %481 = load double, double* %sum0370, align 8, !tbaa !5
  %482 = load double, double* %sum1372, align 8, !tbaa !5
  %add378 = fadd double %481, %482
  store double %add378, double* %tmp377, align 8, !tbaa !5
  %483 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx379 = getelementptr inbounds double, double* %483, i64 33
  %484 = load double, double* %arrayidx379, align 8, !tbaa !5
  %mul380 = fmul double %add378, %484
  %485 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx381 = getelementptr inbounds double, double* %485, i64 15
  store double %mul380, double* %arrayidx381, align 8, !tbaa !5
  %486 = load double, double* %tmp377, align 8, !tbaa !5
  %487 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx382 = getelementptr inbounds double, double* %487, i64 20
  %488 = load double, double* %arrayidx382, align 8, !tbaa !5
  %mul383 = fmul double %486, %488
  %489 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx384 = getelementptr inbounds double, double* %489, i64 2
  store double %mul383, double* %arrayidx384, align 8, !tbaa !5
  %490 = bitcast double* %tmp377 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %490) #1
  %491 = load double, double* %sum1372, align 8, !tbaa !5
  %492 = load double, double* %sum0370, align 8, !tbaa !5
  %sub385 = fsub double %492, %491
  store double %sub385, double* %sum0370, align 8, !tbaa !5
  %493 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx386 = getelementptr inbounds double, double* %493, i64 2
  %494 = load double, double* %arrayidx386, align 8, !tbaa !5
  %495 = load double, double* %sum0370, align 8, !tbaa !5
  %496 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx387 = getelementptr inbounds double, double* %496, i64 2
  %497 = load double, double* %arrayidx387, align 8, !tbaa !5
  %mul388 = fmul double %495, %497
  %add389 = fadd double %494, %mul388
  %498 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx390 = getelementptr inbounds double, double* %498, i64 64
  store double %add389, double* %arrayidx390, align 8, !tbaa !5
  %499 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx391 = getelementptr inbounds double, double* %499, i64 15
  %500 = load double, double* %arrayidx391, align 8, !tbaa !5
  %501 = load double, double* %sum0370, align 8, !tbaa !5
  %502 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx392 = getelementptr inbounds double, double* %502, i64 15
  %503 = load double, double* %arrayidx392, align 8, !tbaa !5
  %mul393 = fmul double %501, %503
  %add394 = fadd double %500, %mul393
  %504 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx395 = getelementptr inbounds double, double* %504, i64 480
  store double %add394, double* %arrayidx395, align 8, !tbaa !5
  %505 = bitcast double* %sum1372 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %505) #1
  %506 = bitcast double* %sum0370 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %506) #1
  %507 = bitcast double* %tmp2b289 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %507) #1
  %508 = bitcast double* %tmp1b287 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %508) #1
  %509 = bitcast double* %tmp2a285 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %509) #1
  %510 = bitcast double* %tmp1a283 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %510) #1
  %511 = bitcast double* %tmp1a397 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %511) #1
  %512 = bitcast double* %tmp2a399 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %512) #1
  %513 = bitcast double* %tmp1b401 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %513) #1
  %514 = bitcast double* %tmp2b403 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %514) #1
  %515 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx404 = getelementptr inbounds double, double* %515, i64 2
  %516 = load double, double* %arrayidx404, align 8, !tbaa !5
  %517 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx405 = getelementptr inbounds double, double* %517, i64 7
  %518 = load double, double* %arrayidx405, align 8, !tbaa !5
  %mul406 = fmul double %516, %518
  %519 = load double, double* %ta33, align 8, !tbaa !5
  %sub407 = fsub double %mul406, %519
  %520 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx408 = getelementptr inbounds double, double* %520, i64 10
  %521 = load double, double* %arrayidx408, align 8, !tbaa !5
  %522 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx409 = getelementptr inbounds double, double* %522, i64 1
  %523 = load double, double* %arrayidx409, align 8, !tbaa !5
  %mul410 = fmul double %521, %523
  %add411 = fadd double %sub407, %mul410
  %524 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx412 = getelementptr inbounds double, double* %524, i64 14
  %525 = load double, double* %arrayidx412, align 8, !tbaa !5
  %526 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx413 = getelementptr inbounds double, double* %526, i64 5
  %527 = load double, double* %arrayidx413, align 8, !tbaa !5
  %mul414 = fmul double %525, %527
  %sub415 = fsub double %add411, %mul414
  store double %sub415, double* %tmp1a397, align 8, !tbaa !5
  %528 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx416 = getelementptr inbounds double, double* %528, i64 3
  %529 = load double, double* %arrayidx416, align 8, !tbaa !5
  %530 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx417 = getelementptr inbounds double, double* %530, i64 7
  %531 = load double, double* %arrayidx417, align 8, !tbaa !5
  %mul418 = fmul double %529, %531
  %532 = load double, double* %tb33, align 8, !tbaa !5
  %sub419 = fsub double %mul418, %532
  %533 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx420 = getelementptr inbounds double, double* %533, i64 11
  %534 = load double, double* %arrayidx420, align 8, !tbaa !5
  %535 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx421 = getelementptr inbounds double, double* %535, i64 1
  %536 = load double, double* %arrayidx421, align 8, !tbaa !5
  %mul422 = fmul double %534, %536
  %add423 = fadd double %sub419, %mul422
  %537 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx424 = getelementptr inbounds double, double* %537, i64 15
  %538 = load double, double* %arrayidx424, align 8, !tbaa !5
  %539 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx425 = getelementptr inbounds double, double* %539, i64 5
  %540 = load double, double* %arrayidx425, align 8, !tbaa !5
  %mul426 = fmul double %538, %540
  %sub427 = fsub double %add423, %mul426
  store double %sub427, double* %tmp1b401, align 8, !tbaa !5
  %541 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx428 = getelementptr inbounds double, double* %541, i64 0
  %542 = load double, double* %arrayidx428, align 8, !tbaa !5
  %543 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx429 = getelementptr inbounds double, double* %543, i64 4
  %544 = load double, double* %arrayidx429, align 8, !tbaa !5
  %545 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx430 = getelementptr inbounds double, double* %545, i64 4
  %546 = load double, double* %arrayidx430, align 8, !tbaa !5
  %mul431 = fmul double %544, %546
  %sub432 = fsub double %542, %mul431
  %547 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx433 = getelementptr inbounds double, double* %547, i64 8
  %548 = load double, double* %arrayidx433, align 8, !tbaa !5
  %549 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx434 = getelementptr inbounds double, double* %549, i64 8
  %550 = load double, double* %arrayidx434, align 8, !tbaa !5
  %mul435 = fmul double %548, %550
  %add436 = fadd double %sub432, %mul435
  %551 = load double, double* %ta66, align 8, !tbaa !5
  %add437 = fadd double %add436, %551
  %552 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx438 = getelementptr inbounds double, double* %552, i64 16
  %553 = load double, double* %arrayidx438, align 8, !tbaa !5
  %554 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx439 = getelementptr inbounds double, double* %554, i64 2
  %555 = load double, double* %arrayidx439, align 8, !tbaa !5
  %mul440 = fmul double %553, %555
  %sub441 = fsub double %add437, %mul440
  store double %sub441, double* %tmp2a399, align 8, !tbaa !5
  %556 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx442 = getelementptr inbounds double, double* %556, i64 1
  %557 = load double, double* %arrayidx442, align 8, !tbaa !5
  %558 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx443 = getelementptr inbounds double, double* %558, i64 5
  %559 = load double, double* %arrayidx443, align 8, !tbaa !5
  %560 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx444 = getelementptr inbounds double, double* %560, i64 4
  %561 = load double, double* %arrayidx444, align 8, !tbaa !5
  %mul445 = fmul double %559, %561
  %sub446 = fsub double %557, %mul445
  %562 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx447 = getelementptr inbounds double, double* %562, i64 9
  %563 = load double, double* %arrayidx447, align 8, !tbaa !5
  %564 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx448 = getelementptr inbounds double, double* %564, i64 8
  %565 = load double, double* %arrayidx448, align 8, !tbaa !5
  %mul449 = fmul double %563, %565
  %add450 = fadd double %sub446, %mul449
  %566 = load double, double* %tb66, align 8, !tbaa !5
  %add451 = fadd double %add450, %566
  %567 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx452 = getelementptr inbounds double, double* %567, i64 17
  %568 = load double, double* %arrayidx452, align 8, !tbaa !5
  %569 = load double*, double** %c, align 8, !tbaa !7
  %arrayidx453 = getelementptr inbounds double, double* %569, i64 2
  %570 = load double, double* %arrayidx453, align 8, !tbaa !5
  %mul454 = fmul double %568, %570
  %sub455 = fsub double %add451, %mul454
  store double %sub455, double* %tmp2b403, align 8, !tbaa !5
  %571 = bitcast double* %sum0457 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %571) #1
  %572 = bitcast double* %sum1459 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %572) #1
  %573 = load double, double* %tmp1a397, align 8, !tbaa !5
  %574 = load double, double* %tmp2a399, align 8, !tbaa !5
  %add460 = fadd double %573, %574
  store double %add460, double* %sum0457, align 8, !tbaa !5
  %575 = load double, double* %tmp1b401, align 8, !tbaa !5
  %576 = load double, double* %tmp2b403, align 8, !tbaa !5
  %add461 = fadd double %575, %576
  %577 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 3), align 8, !tbaa !5
  %mul462 = fmul double %add461, %577
  store double %mul462, double* %sum1459, align 8, !tbaa !5
  %578 = bitcast double* %tmp464 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %578) #1
  %579 = load double, double* %sum0457, align 8, !tbaa !5
  %580 = load double, double* %sum1459, align 8, !tbaa !5
  %add465 = fadd double %579, %580
  store double %add465, double* %tmp464, align 8, !tbaa !5
  %581 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx466 = getelementptr inbounds double, double* %581, i64 30
  %582 = load double, double* %arrayidx466, align 8, !tbaa !5
  %mul467 = fmul double %add465, %582
  %583 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx468 = getelementptr inbounds double, double* %583, i64 12
  store double %mul467, double* %arrayidx468, align 8, !tbaa !5
  %584 = load double, double* %tmp464, align 8, !tbaa !5
  %585 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx469 = getelementptr inbounds double, double* %585, i64 23
  %586 = load double, double* %arrayidx469, align 8, !tbaa !5
  %mul470 = fmul double %584, %586
  %587 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx471 = getelementptr inbounds double, double* %587, i64 5
  store double %mul470, double* %arrayidx471, align 8, !tbaa !5
  %588 = bitcast double* %tmp464 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %588) #1
  %589 = load double, double* %sum1459, align 8, !tbaa !5
  %590 = load double, double* %sum0457, align 8, !tbaa !5
  %sub472 = fsub double %590, %589
  store double %sub472, double* %sum0457, align 8, !tbaa !5
  %591 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx473 = getelementptr inbounds double, double* %591, i64 5
  %592 = load double, double* %arrayidx473, align 8, !tbaa !5
  %593 = load double, double* %sum0457, align 8, !tbaa !5
  %594 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx474 = getelementptr inbounds double, double* %594, i64 5
  %595 = load double, double* %arrayidx474, align 8, !tbaa !5
  %mul475 = fmul double %593, %595
  %add476 = fadd double %592, %mul475
  %596 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx477 = getelementptr inbounds double, double* %596, i64 160
  store double %add476, double* %arrayidx477, align 8, !tbaa !5
  %597 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx478 = getelementptr inbounds double, double* %597, i64 12
  %598 = load double, double* %arrayidx478, align 8, !tbaa !5
  %599 = load double, double* %sum0457, align 8, !tbaa !5
  %600 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx479 = getelementptr inbounds double, double* %600, i64 12
  %601 = load double, double* %arrayidx479, align 8, !tbaa !5
  %mul480 = fmul double %599, %601
  %add481 = fadd double %598, %mul480
  %602 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx482 = getelementptr inbounds double, double* %602, i64 384
  store double %add481, double* %arrayidx482, align 8, !tbaa !5
  %603 = bitcast double* %sum1459 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %603) #1
  %604 = bitcast double* %sum0457 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %604) #1
  %605 = bitcast double* %sum0484 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %605) #1
  %606 = bitcast double* %sum1486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %606) #1
  %607 = load double, double* %tmp2a399, align 8, !tbaa !5
  %608 = load double, double* %tmp1a397, align 8, !tbaa !5
  %sub487 = fsub double %607, %608
  store double %sub487, double* %sum0484, align 8, !tbaa !5
  %609 = load double, double* %tmp2b403, align 8, !tbaa !5
  %610 = load double, double* %tmp1b401, align 8, !tbaa !5
  %sub488 = fsub double %609, %610
  %611 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 5), align 8, !tbaa !5
  %mul489 = fmul double %sub488, %611
  store double %mul489, double* %sum1486, align 8, !tbaa !5
  %612 = bitcast double* %tmp491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %612) #1
  %613 = load double, double* %sum0484, align 8, !tbaa !5
  %614 = load double, double* %sum1486, align 8, !tbaa !5
  %add492 = fadd double %613, %614
  store double %add492, double* %tmp491, align 8, !tbaa !5
  %615 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx493 = getelementptr inbounds double, double* %615, i64 32
  %616 = load double, double* %arrayidx493, align 8, !tbaa !5
  %mul494 = fmul double %add492, %616
  %617 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx495 = getelementptr inbounds double, double* %617, i64 14
  store double %mul494, double* %arrayidx495, align 8, !tbaa !5
  %618 = load double, double* %tmp491, align 8, !tbaa !5
  %619 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx496 = getelementptr inbounds double, double* %619, i64 21
  %620 = load double, double* %arrayidx496, align 8, !tbaa !5
  %mul497 = fmul double %618, %620
  %621 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx498 = getelementptr inbounds double, double* %621, i64 3
  store double %mul497, double* %arrayidx498, align 8, !tbaa !5
  %622 = bitcast double* %tmp491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %622) #1
  %623 = load double, double* %sum1486, align 8, !tbaa !5
  %624 = load double, double* %sum0484, align 8, !tbaa !5
  %sub499 = fsub double %624, %623
  store double %sub499, double* %sum0484, align 8, !tbaa !5
  %625 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx500 = getelementptr inbounds double, double* %625, i64 3
  %626 = load double, double* %arrayidx500, align 8, !tbaa !5
  %627 = load double, double* %sum0484, align 8, !tbaa !5
  %628 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx501 = getelementptr inbounds double, double* %628, i64 3
  %629 = load double, double* %arrayidx501, align 8, !tbaa !5
  %mul502 = fmul double %627, %629
  %add503 = fadd double %626, %mul502
  %630 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx504 = getelementptr inbounds double, double* %630, i64 96
  store double %add503, double* %arrayidx504, align 8, !tbaa !5
  %631 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx505 = getelementptr inbounds double, double* %631, i64 14
  %632 = load double, double* %arrayidx505, align 8, !tbaa !5
  %633 = load double, double* %sum0484, align 8, !tbaa !5
  %634 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx506 = getelementptr inbounds double, double* %634, i64 14
  %635 = load double, double* %arrayidx506, align 8, !tbaa !5
  %mul507 = fmul double %633, %635
  %add508 = fadd double %632, %mul507
  %636 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx509 = getelementptr inbounds double, double* %636, i64 448
  store double %add508, double* %arrayidx509, align 8, !tbaa !5
  %637 = bitcast double* %sum1486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %637) #1
  %638 = bitcast double* %sum0484 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %638) #1
  %639 = bitcast double* %tmp2b403 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %639) #1
  %640 = bitcast double* %tmp1b401 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %640) #1
  %641 = bitcast double* %tmp2a399 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %641) #1
  %642 = bitcast double* %tmp1a397 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %642) #1
  %643 = bitcast double* %sum0511 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %643) #1
  %644 = bitcast double* %sum1513 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %644) #1
  %645 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx514 = getelementptr inbounds double, double* %645, i64 0
  %646 = load double, double* %arrayidx514, align 8, !tbaa !5
  %647 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx515 = getelementptr inbounds double, double* %647, i64 4
  %648 = load double, double* %arrayidx515, align 8, !tbaa !5
  %sub516 = fsub double %646, %648
  %649 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx517 = getelementptr inbounds double, double* %649, i64 8
  %650 = load double, double* %arrayidx517, align 8, !tbaa !5
  %add518 = fadd double %sub516, %650
  %651 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx519 = getelementptr inbounds double, double* %651, i64 12
  %652 = load double, double* %arrayidx519, align 8, !tbaa !5
  %sub520 = fsub double %add518, %652
  %653 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx521 = getelementptr inbounds double, double* %653, i64 16
  %654 = load double, double* %arrayidx521, align 8, !tbaa !5
  %add522 = fadd double %sub520, %654
  store double %add522, double* %sum0511, align 8, !tbaa !5
  %655 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx523 = getelementptr inbounds double, double* %655, i64 1
  %656 = load double, double* %arrayidx523, align 8, !tbaa !5
  %657 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx524 = getelementptr inbounds double, double* %657, i64 5
  %658 = load double, double* %arrayidx524, align 8, !tbaa !5
  %sub525 = fsub double %656, %658
  %659 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx526 = getelementptr inbounds double, double* %659, i64 9
  %660 = load double, double* %arrayidx526, align 8, !tbaa !5
  %add527 = fadd double %sub525, %660
  %661 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx528 = getelementptr inbounds double, double* %661, i64 13
  %662 = load double, double* %arrayidx528, align 8, !tbaa !5
  %sub529 = fsub double %add527, %662
  %663 = load double*, double** %in, align 8, !tbaa !7
  %arrayidx530 = getelementptr inbounds double, double* %663, i64 17
  %664 = load double, double* %arrayidx530, align 8, !tbaa !5
  %add531 = fadd double %sub529, %664
  %665 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i32 0, i64 4), align 8, !tbaa !5
  %mul532 = fmul double %add531, %665
  store double %mul532, double* %sum1513, align 8, !tbaa !5
  %666 = bitcast double* %tmp534 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %666) #1
  %667 = load double, double* %sum0511, align 8, !tbaa !5
  %668 = load double, double* %sum1513, align 8, !tbaa !5
  %add535 = fadd double %667, %668
  store double %add535, double* %tmp534, align 8, !tbaa !5
  %669 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx536 = getelementptr inbounds double, double* %669, i64 31
  %670 = load double, double* %arrayidx536, align 8, !tbaa !5
  %mul537 = fmul double %add535, %670
  %671 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx538 = getelementptr inbounds double, double* %671, i64 13
  store double %mul537, double* %arrayidx538, align 8, !tbaa !5
  %672 = load double, double* %tmp534, align 8, !tbaa !5
  %673 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx539 = getelementptr inbounds double, double* %673, i64 22
  %674 = load double, double* %arrayidx539, align 8, !tbaa !5
  %mul540 = fmul double %672, %674
  %675 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx541 = getelementptr inbounds double, double* %675, i64 4
  store double %mul540, double* %arrayidx541, align 8, !tbaa !5
  %676 = bitcast double* %tmp534 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %676) #1
  %677 = load double, double* %sum1513, align 8, !tbaa !5
  %678 = load double, double* %sum0511, align 8, !tbaa !5
  %sub542 = fsub double %678, %677
  store double %sub542, double* %sum0511, align 8, !tbaa !5
  %679 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx543 = getelementptr inbounds double, double* %679, i64 4
  %680 = load double, double* %arrayidx543, align 8, !tbaa !5
  %681 = load double, double* %sum0511, align 8, !tbaa !5
  %682 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx544 = getelementptr inbounds double, double* %682, i64 4
  %683 = load double, double* %arrayidx544, align 8, !tbaa !5
  %mul545 = fmul double %681, %683
  %add546 = fadd double %680, %mul545
  %684 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx547 = getelementptr inbounds double, double* %684, i64 128
  store double %add546, double* %arrayidx547, align 8, !tbaa !5
  %685 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx548 = getelementptr inbounds double, double* %685, i64 13
  %686 = load double, double* %arrayidx548, align 8, !tbaa !5
  %687 = load double, double* %sum0511, align 8, !tbaa !5
  %688 = load double*, double** %w, align 8, !tbaa !7
  %arrayidx549 = getelementptr inbounds double, double* %688, i64 13
  %689 = load double, double* %arrayidx549, align 8, !tbaa !5
  %mul550 = fmul double %687, %689
  %add551 = fadd double %686, %mul550
  %690 = load double*, double** %ts, align 8, !tbaa !7
  %arrayidx552 = getelementptr inbounds double, double* %690, i64 416
  store double %add551, double* %arrayidx552, align 8, !tbaa !5
  %691 = bitcast double* %sum1513 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %691) #1
  %692 = bitcast double* %sum0511 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %692) #1
  %693 = bitcast double* %tb66 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %693) #1
  %694 = bitcast double* %tb33 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %694) #1
  %695 = bitcast double* %ta66 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %695) #1
  %696 = bitcast double* %ta33 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %696) #1
  %697 = bitcast double** %ts to i8*
  call void @llvm.lifetime.end(i64 8, i8* %697) #1
  %698 = bitcast double** %out1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %698) #1
  %699 = bitcast double** %w to i8*
  call void @llvm.lifetime.end(i64 8, i8* %699) #1
  %700 = bitcast double** %out2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %700) #1
  %701 = bitcast double** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %701) #1
  %702 = bitcast double** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %702) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dct12(double* %in, double* %rawout1, double* %rawout2, double* %wi, double* %ts) #0 {
entry:
  %in.addr = alloca double*, align 8
  %rawout1.addr = alloca double*, align 8
  %rawout2.addr = alloca double*, align 8
  %wi.addr = alloca double*, align 8
  %ts.addr = alloca double*, align 8
  %in0 = alloca double, align 8
  %in1 = alloca double, align 8
  %in2 = alloca double, align 8
  %in3 = alloca double, align 8
  %in4 = alloca double, align 8
  %in5 = alloca double, align 8
  %out1 = alloca double*, align 8
  %tmp0 = alloca double, align 8
  %tmp1 = alloca double, align 8
  %tmp2 = alloca double, align 8
  %in0103 = alloca double, align 8
  %in1104 = alloca double, align 8
  %in2105 = alloca double, align 8
  %in3106 = alloca double, align 8
  %in4107 = alloca double, align 8
  %in5108 = alloca double, align 8
  %out2 = alloca double*, align 8
  %tmp0124 = alloca double, align 8
  %tmp1125 = alloca double, align 8
  %tmp2127 = alloca double, align 8
  %in0189 = alloca double, align 8
  %in1190 = alloca double, align 8
  %in2191 = alloca double, align 8
  %in3192 = alloca double, align 8
  %in4193 = alloca double, align 8
  %in5194 = alloca double, align 8
  %out2195 = alloca double*, align 8
  %tmp0217 = alloca double, align 8
  %tmp1218 = alloca double, align 8
  %tmp2220 = alloca double, align 8
  store double* %in, double** %in.addr, align 8, !tbaa !7
  store double* %rawout1, double** %rawout1.addr, align 8, !tbaa !7
  store double* %rawout2, double** %rawout2.addr, align 8, !tbaa !7
  store double* %wi, double** %wi.addr, align 8, !tbaa !7
  store double* %ts, double** %ts.addr, align 8, !tbaa !7
  %0 = bitcast double* %in0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast double* %in1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast double* %in2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast double* %in3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast double* %in4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast double* %in5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast double** %out1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load double*, double** %rawout1.addr, align 8, !tbaa !7
  store double* %7, double** %out1, align 8, !tbaa !7
  %8 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx = getelementptr inbounds double, double* %8, i64 0
  %9 = load double, double* %arrayidx, align 8, !tbaa !5
  %10 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx1 = getelementptr inbounds double, double* %10, i64 0
  store double %9, double* %arrayidx1, align 8, !tbaa !5
  %11 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx2 = getelementptr inbounds double, double* %11, i64 1
  %12 = load double, double* %arrayidx2, align 8, !tbaa !5
  %13 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx3 = getelementptr inbounds double, double* %13, i64 32
  store double %12, double* %arrayidx3, align 8, !tbaa !5
  %14 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx4 = getelementptr inbounds double, double* %14, i64 2
  %15 = load double, double* %arrayidx4, align 8, !tbaa !5
  %16 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx5 = getelementptr inbounds double, double* %16, i64 64
  store double %15, double* %arrayidx5, align 8, !tbaa !5
  %17 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx6 = getelementptr inbounds double, double* %17, i64 3
  %18 = load double, double* %arrayidx6, align 8, !tbaa !5
  %19 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx7 = getelementptr inbounds double, double* %19, i64 96
  store double %18, double* %arrayidx7, align 8, !tbaa !5
  %20 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx8 = getelementptr inbounds double, double* %20, i64 4
  %21 = load double, double* %arrayidx8, align 8, !tbaa !5
  %22 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx9 = getelementptr inbounds double, double* %22, i64 128
  store double %21, double* %arrayidx9, align 8, !tbaa !5
  %23 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx10 = getelementptr inbounds double, double* %23, i64 5
  %24 = load double, double* %arrayidx10, align 8, !tbaa !5
  %25 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx11 = getelementptr inbounds double, double* %25, i64 160
  store double %24, double* %arrayidx11, align 8, !tbaa !5
  %26 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx12 = getelementptr inbounds double, double* %26, i64 15
  %27 = load double, double* %arrayidx12, align 8, !tbaa !5
  store double %27, double* %in5, align 8, !tbaa !5
  %28 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx13 = getelementptr inbounds double, double* %28, i64 12
  %29 = load double, double* %arrayidx13, align 8, !tbaa !5
  store double %29, double* %in4, align 8, !tbaa !5
  %30 = load double, double* %in5, align 8, !tbaa !5
  %add = fadd double %30, %29
  store double %add, double* %in5, align 8, !tbaa !5
  %31 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx14 = getelementptr inbounds double, double* %31, i64 9
  %32 = load double, double* %arrayidx14, align 8, !tbaa !5
  store double %32, double* %in3, align 8, !tbaa !5
  %33 = load double, double* %in4, align 8, !tbaa !5
  %add15 = fadd double %33, %32
  store double %add15, double* %in4, align 8, !tbaa !5
  %34 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx16 = getelementptr inbounds double, double* %34, i64 6
  %35 = load double, double* %arrayidx16, align 8, !tbaa !5
  store double %35, double* %in2, align 8, !tbaa !5
  %36 = load double, double* %in3, align 8, !tbaa !5
  %add17 = fadd double %36, %35
  store double %add17, double* %in3, align 8, !tbaa !5
  %37 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx18 = getelementptr inbounds double, double* %37, i64 3
  %38 = load double, double* %arrayidx18, align 8, !tbaa !5
  store double %38, double* %in1, align 8, !tbaa !5
  %39 = load double, double* %in2, align 8, !tbaa !5
  %add19 = fadd double %39, %38
  store double %add19, double* %in2, align 8, !tbaa !5
  %40 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx20 = getelementptr inbounds double, double* %40, i64 0
  %41 = load double, double* %arrayidx20, align 8, !tbaa !5
  store double %41, double* %in0, align 8, !tbaa !5
  %42 = load double, double* %in1, align 8, !tbaa !5
  %add21 = fadd double %42, %41
  store double %add21, double* %in1, align 8, !tbaa !5
  %43 = load double, double* %in3, align 8, !tbaa !5
  %44 = load double, double* %in5, align 8, !tbaa !5
  %add22 = fadd double %44, %43
  store double %add22, double* %in5, align 8, !tbaa !5
  %45 = load double, double* %in1, align 8, !tbaa !5
  %46 = load double, double* %in3, align 8, !tbaa !5
  %add23 = fadd double %46, %45
  store double %add23, double* %in3, align 8, !tbaa !5
  %47 = load double, double* @COS6_1, align 8, !tbaa !5
  %48 = load double, double* %in2, align 8, !tbaa !5
  %mul = fmul double %48, %47
  store double %mul, double* %in2, align 8, !tbaa !5
  %49 = load double, double* @COS6_1, align 8, !tbaa !5
  %50 = load double, double* %in3, align 8, !tbaa !5
  %mul24 = fmul double %50, %49
  store double %mul24, double* %in3, align 8, !tbaa !5
  %51 = bitcast double* %tmp0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %51) #1
  %52 = bitcast double* %tmp1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %52) #1
  %53 = load double, double* %in0, align 8, !tbaa !5
  %54 = load double, double* %in4, align 8, !tbaa !5
  %sub = fsub double %53, %54
  store double %sub, double* %tmp1, align 8, !tbaa !5
  %55 = bitcast double* %tmp2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #1
  %56 = load double, double* %in1, align 8, !tbaa !5
  %57 = load double, double* %in5, align 8, !tbaa !5
  %sub25 = fsub double %56, %57
  %58 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 1), align 8, !tbaa !5
  %mul26 = fmul double %sub25, %58
  store double %mul26, double* %tmp2, align 8, !tbaa !5
  %59 = load double, double* %tmp1, align 8, !tbaa !5
  %60 = load double, double* %tmp2, align 8, !tbaa !5
  %add27 = fadd double %59, %60
  store double %add27, double* %tmp0, align 8, !tbaa !5
  %61 = load double, double* %tmp2, align 8, !tbaa !5
  %62 = load double, double* %tmp1, align 8, !tbaa !5
  %sub28 = fsub double %62, %61
  store double %sub28, double* %tmp1, align 8, !tbaa !5
  %63 = bitcast double* %tmp2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #1
  %64 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx29 = getelementptr inbounds double, double* %64, i64 16
  %65 = load double, double* %arrayidx29, align 8, !tbaa !5
  %66 = load double, double* %tmp0, align 8, !tbaa !5
  %67 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx30 = getelementptr inbounds double, double* %67, i64 10
  %68 = load double, double* %arrayidx30, align 8, !tbaa !5
  %mul31 = fmul double %66, %68
  %add32 = fadd double %65, %mul31
  %69 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx33 = getelementptr inbounds double, double* %69, i64 512
  store double %add32, double* %arrayidx33, align 8, !tbaa !5
  %70 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx34 = getelementptr inbounds double, double* %70, i64 13
  %71 = load double, double* %arrayidx34, align 8, !tbaa !5
  %72 = load double, double* %tmp0, align 8, !tbaa !5
  %73 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx35 = getelementptr inbounds double, double* %73, i64 7
  %74 = load double, double* %arrayidx35, align 8, !tbaa !5
  %mul36 = fmul double %72, %74
  %add37 = fadd double %71, %mul36
  %75 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx38 = getelementptr inbounds double, double* %75, i64 416
  store double %add37, double* %arrayidx38, align 8, !tbaa !5
  %76 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx39 = getelementptr inbounds double, double* %76, i64 7
  %77 = load double, double* %arrayidx39, align 8, !tbaa !5
  %78 = load double, double* %tmp1, align 8, !tbaa !5
  %79 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx40 = getelementptr inbounds double, double* %79, i64 1
  %80 = load double, double* %arrayidx40, align 8, !tbaa !5
  %mul41 = fmul double %78, %80
  %add42 = fadd double %77, %mul41
  %81 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx43 = getelementptr inbounds double, double* %81, i64 224
  store double %add42, double* %arrayidx43, align 8, !tbaa !5
  %82 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx44 = getelementptr inbounds double, double* %82, i64 10
  %83 = load double, double* %arrayidx44, align 8, !tbaa !5
  %84 = load double, double* %tmp1, align 8, !tbaa !5
  %85 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx45 = getelementptr inbounds double, double* %85, i64 4
  %86 = load double, double* %arrayidx45, align 8, !tbaa !5
  %mul46 = fmul double %84, %86
  %add47 = fadd double %83, %mul46
  %87 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx48 = getelementptr inbounds double, double* %87, i64 320
  store double %add47, double* %arrayidx48, align 8, !tbaa !5
  %88 = bitcast double* %tmp1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = bitcast double* %tmp0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = load double, double* %in4, align 8, !tbaa !5
  %91 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul49 = fmul double %90, %91
  %92 = load double, double* %in0, align 8, !tbaa !5
  %add50 = fadd double %92, %mul49
  store double %add50, double* %in0, align 8, !tbaa !5
  %93 = load double, double* %in0, align 8, !tbaa !5
  %94 = load double, double* %in2, align 8, !tbaa !5
  %add51 = fadd double %93, %94
  store double %add51, double* %in4, align 8, !tbaa !5
  %95 = load double, double* %in2, align 8, !tbaa !5
  %96 = load double, double* %in0, align 8, !tbaa !5
  %sub52 = fsub double %96, %95
  store double %sub52, double* %in0, align 8, !tbaa !5
  %97 = load double, double* %in5, align 8, !tbaa !5
  %98 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul53 = fmul double %97, %98
  %99 = load double, double* %in1, align 8, !tbaa !5
  %add54 = fadd double %99, %mul53
  store double %add54, double* %in1, align 8, !tbaa !5
  %100 = load double, double* %in1, align 8, !tbaa !5
  %101 = load double, double* %in3, align 8, !tbaa !5
  %add55 = fadd double %100, %101
  %102 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 0), align 8, !tbaa !5
  %mul56 = fmul double %add55, %102
  store double %mul56, double* %in5, align 8, !tbaa !5
  %103 = load double, double* %in1, align 8, !tbaa !5
  %104 = load double, double* %in3, align 8, !tbaa !5
  %sub57 = fsub double %103, %104
  %105 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 2), align 8, !tbaa !5
  %mul58 = fmul double %sub57, %105
  store double %mul58, double* %in1, align 8, !tbaa !5
  %106 = load double, double* %in4, align 8, !tbaa !5
  %107 = load double, double* %in5, align 8, !tbaa !5
  %add59 = fadd double %106, %107
  store double %add59, double* %in3, align 8, !tbaa !5
  %108 = load double, double* %in5, align 8, !tbaa !5
  %109 = load double, double* %in4, align 8, !tbaa !5
  %sub60 = fsub double %109, %108
  store double %sub60, double* %in4, align 8, !tbaa !5
  %110 = load double, double* %in0, align 8, !tbaa !5
  %111 = load double, double* %in1, align 8, !tbaa !5
  %add61 = fadd double %110, %111
  store double %add61, double* %in2, align 8, !tbaa !5
  %112 = load double, double* %in1, align 8, !tbaa !5
  %113 = load double, double* %in0, align 8, !tbaa !5
  %sub62 = fsub double %113, %112
  store double %sub62, double* %in0, align 8, !tbaa !5
  %114 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx63 = getelementptr inbounds double, double* %114, i64 17
  %115 = load double, double* %arrayidx63, align 8, !tbaa !5
  %116 = load double, double* %in2, align 8, !tbaa !5
  %117 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx64 = getelementptr inbounds double, double* %117, i64 11
  %118 = load double, double* %arrayidx64, align 8, !tbaa !5
  %mul65 = fmul double %116, %118
  %add66 = fadd double %115, %mul65
  %119 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx67 = getelementptr inbounds double, double* %119, i64 544
  store double %add66, double* %arrayidx67, align 8, !tbaa !5
  %120 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx68 = getelementptr inbounds double, double* %120, i64 12
  %121 = load double, double* %arrayidx68, align 8, !tbaa !5
  %122 = load double, double* %in2, align 8, !tbaa !5
  %123 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx69 = getelementptr inbounds double, double* %123, i64 6
  %124 = load double, double* %arrayidx69, align 8, !tbaa !5
  %mul70 = fmul double %122, %124
  %add71 = fadd double %121, %mul70
  %125 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx72 = getelementptr inbounds double, double* %125, i64 384
  store double %add71, double* %arrayidx72, align 8, !tbaa !5
  %126 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx73 = getelementptr inbounds double, double* %126, i64 14
  %127 = load double, double* %arrayidx73, align 8, !tbaa !5
  %128 = load double, double* %in3, align 8, !tbaa !5
  %129 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx74 = getelementptr inbounds double, double* %129, i64 8
  %130 = load double, double* %arrayidx74, align 8, !tbaa !5
  %mul75 = fmul double %128, %130
  %add76 = fadd double %127, %mul75
  %131 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx77 = getelementptr inbounds double, double* %131, i64 448
  store double %add76, double* %arrayidx77, align 8, !tbaa !5
  %132 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx78 = getelementptr inbounds double, double* %132, i64 15
  %133 = load double, double* %arrayidx78, align 8, !tbaa !5
  %134 = load double, double* %in3, align 8, !tbaa !5
  %135 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx79 = getelementptr inbounds double, double* %135, i64 9
  %136 = load double, double* %arrayidx79, align 8, !tbaa !5
  %mul80 = fmul double %134, %136
  %add81 = fadd double %133, %mul80
  %137 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx82 = getelementptr inbounds double, double* %137, i64 480
  store double %add81, double* %arrayidx82, align 8, !tbaa !5
  %138 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx83 = getelementptr inbounds double, double* %138, i64 6
  %139 = load double, double* %arrayidx83, align 8, !tbaa !5
  %140 = load double, double* %in0, align 8, !tbaa !5
  %141 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx84 = getelementptr inbounds double, double* %141, i64 0
  %142 = load double, double* %arrayidx84, align 8, !tbaa !5
  %mul85 = fmul double %140, %142
  %add86 = fadd double %139, %mul85
  %143 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx87 = getelementptr inbounds double, double* %143, i64 192
  store double %add86, double* %arrayidx87, align 8, !tbaa !5
  %144 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx88 = getelementptr inbounds double, double* %144, i64 11
  %145 = load double, double* %arrayidx88, align 8, !tbaa !5
  %146 = load double, double* %in0, align 8, !tbaa !5
  %147 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx89 = getelementptr inbounds double, double* %147, i64 5
  %148 = load double, double* %arrayidx89, align 8, !tbaa !5
  %mul90 = fmul double %146, %148
  %add91 = fadd double %145, %mul90
  %149 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx92 = getelementptr inbounds double, double* %149, i64 352
  store double %add91, double* %arrayidx92, align 8, !tbaa !5
  %150 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx93 = getelementptr inbounds double, double* %150, i64 8
  %151 = load double, double* %arrayidx93, align 8, !tbaa !5
  %152 = load double, double* %in4, align 8, !tbaa !5
  %153 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx94 = getelementptr inbounds double, double* %153, i64 2
  %154 = load double, double* %arrayidx94, align 8, !tbaa !5
  %mul95 = fmul double %152, %154
  %add96 = fadd double %151, %mul95
  %155 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx97 = getelementptr inbounds double, double* %155, i64 256
  store double %add96, double* %arrayidx97, align 8, !tbaa !5
  %156 = load double*, double** %out1, align 8, !tbaa !7
  %arrayidx98 = getelementptr inbounds double, double* %156, i64 9
  %157 = load double, double* %arrayidx98, align 8, !tbaa !5
  %158 = load double, double* %in4, align 8, !tbaa !5
  %159 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx99 = getelementptr inbounds double, double* %159, i64 3
  %160 = load double, double* %arrayidx99, align 8, !tbaa !5
  %mul100 = fmul double %158, %160
  %add101 = fadd double %157, %mul100
  %161 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx102 = getelementptr inbounds double, double* %161, i64 288
  store double %add101, double* %arrayidx102, align 8, !tbaa !5
  %162 = bitcast double** %out1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %162) #1
  %163 = bitcast double* %in5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %163) #1
  %164 = bitcast double* %in4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %164) #1
  %165 = bitcast double* %in3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %165) #1
  %166 = bitcast double* %in2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166) #1
  %167 = bitcast double* %in1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %167) #1
  %168 = bitcast double* %in0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %168) #1
  %169 = load double*, double** %in.addr, align 8, !tbaa !7
  %incdec.ptr = getelementptr inbounds double, double* %169, i32 1
  store double* %incdec.ptr, double** %in.addr, align 8, !tbaa !7
  %170 = bitcast double* %in0103 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %170) #1
  %171 = bitcast double* %in1104 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %171) #1
  %172 = bitcast double* %in2105 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %172) #1
  %173 = bitcast double* %in3106 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %173) #1
  %174 = bitcast double* %in4107 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %174) #1
  %175 = bitcast double* %in5108 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %175) #1
  %176 = bitcast double** %out2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %176) #1
  %177 = load double*, double** %rawout2.addr, align 8, !tbaa !7
  store double* %177, double** %out2, align 8, !tbaa !7
  %178 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx109 = getelementptr inbounds double, double* %178, i64 15
  %179 = load double, double* %arrayidx109, align 8, !tbaa !5
  store double %179, double* %in5108, align 8, !tbaa !5
  %180 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx110 = getelementptr inbounds double, double* %180, i64 12
  %181 = load double, double* %arrayidx110, align 8, !tbaa !5
  store double %181, double* %in4107, align 8, !tbaa !5
  %182 = load double, double* %in5108, align 8, !tbaa !5
  %add111 = fadd double %182, %181
  store double %add111, double* %in5108, align 8, !tbaa !5
  %183 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx112 = getelementptr inbounds double, double* %183, i64 9
  %184 = load double, double* %arrayidx112, align 8, !tbaa !5
  store double %184, double* %in3106, align 8, !tbaa !5
  %185 = load double, double* %in4107, align 8, !tbaa !5
  %add113 = fadd double %185, %184
  store double %add113, double* %in4107, align 8, !tbaa !5
  %186 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx114 = getelementptr inbounds double, double* %186, i64 6
  %187 = load double, double* %arrayidx114, align 8, !tbaa !5
  store double %187, double* %in2105, align 8, !tbaa !5
  %188 = load double, double* %in3106, align 8, !tbaa !5
  %add115 = fadd double %188, %187
  store double %add115, double* %in3106, align 8, !tbaa !5
  %189 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx116 = getelementptr inbounds double, double* %189, i64 3
  %190 = load double, double* %arrayidx116, align 8, !tbaa !5
  store double %190, double* %in1104, align 8, !tbaa !5
  %191 = load double, double* %in2105, align 8, !tbaa !5
  %add117 = fadd double %191, %190
  store double %add117, double* %in2105, align 8, !tbaa !5
  %192 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx118 = getelementptr inbounds double, double* %192, i64 0
  %193 = load double, double* %arrayidx118, align 8, !tbaa !5
  store double %193, double* %in0103, align 8, !tbaa !5
  %194 = load double, double* %in1104, align 8, !tbaa !5
  %add119 = fadd double %194, %193
  store double %add119, double* %in1104, align 8, !tbaa !5
  %195 = load double, double* %in3106, align 8, !tbaa !5
  %196 = load double, double* %in5108, align 8, !tbaa !5
  %add120 = fadd double %196, %195
  store double %add120, double* %in5108, align 8, !tbaa !5
  %197 = load double, double* %in1104, align 8, !tbaa !5
  %198 = load double, double* %in3106, align 8, !tbaa !5
  %add121 = fadd double %198, %197
  store double %add121, double* %in3106, align 8, !tbaa !5
  %199 = load double, double* @COS6_1, align 8, !tbaa !5
  %200 = load double, double* %in2105, align 8, !tbaa !5
  %mul122 = fmul double %200, %199
  store double %mul122, double* %in2105, align 8, !tbaa !5
  %201 = load double, double* @COS6_1, align 8, !tbaa !5
  %202 = load double, double* %in3106, align 8, !tbaa !5
  %mul123 = fmul double %202, %201
  store double %mul123, double* %in3106, align 8, !tbaa !5
  %203 = bitcast double* %tmp0124 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %203) #1
  %204 = bitcast double* %tmp1125 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %204) #1
  %205 = load double, double* %in0103, align 8, !tbaa !5
  %206 = load double, double* %in4107, align 8, !tbaa !5
  %sub126 = fsub double %205, %206
  store double %sub126, double* %tmp1125, align 8, !tbaa !5
  %207 = bitcast double* %tmp2127 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %207) #1
  %208 = load double, double* %in1104, align 8, !tbaa !5
  %209 = load double, double* %in5108, align 8, !tbaa !5
  %sub128 = fsub double %208, %209
  %210 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 1), align 8, !tbaa !5
  %mul129 = fmul double %sub128, %210
  store double %mul129, double* %tmp2127, align 8, !tbaa !5
  %211 = load double, double* %tmp1125, align 8, !tbaa !5
  %212 = load double, double* %tmp2127, align 8, !tbaa !5
  %add130 = fadd double %211, %212
  store double %add130, double* %tmp0124, align 8, !tbaa !5
  %213 = load double, double* %tmp2127, align 8, !tbaa !5
  %214 = load double, double* %tmp1125, align 8, !tbaa !5
  %sub131 = fsub double %214, %213
  store double %sub131, double* %tmp1125, align 8, !tbaa !5
  %215 = bitcast double* %tmp2127 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %215) #1
  %216 = load double, double* %tmp0124, align 8, !tbaa !5
  %217 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx132 = getelementptr inbounds double, double* %217, i64 10
  %218 = load double, double* %arrayidx132, align 8, !tbaa !5
  %mul133 = fmul double %216, %218
  %219 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx134 = getelementptr inbounds double, double* %219, i64 4
  store double %mul133, double* %arrayidx134, align 8, !tbaa !5
  %220 = load double, double* %tmp0124, align 8, !tbaa !5
  %221 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx135 = getelementptr inbounds double, double* %221, i64 7
  %222 = load double, double* %arrayidx135, align 8, !tbaa !5
  %mul136 = fmul double %220, %222
  %223 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx137 = getelementptr inbounds double, double* %223, i64 1
  store double %mul136, double* %arrayidx137, align 8, !tbaa !5
  %224 = load double, double* %tmp1125, align 8, !tbaa !5
  %225 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx138 = getelementptr inbounds double, double* %225, i64 1
  %226 = load double, double* %arrayidx138, align 8, !tbaa !5
  %mul139 = fmul double %224, %226
  %227 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx140 = getelementptr inbounds double, double* %227, i64 416
  %228 = load double, double* %arrayidx140, align 8, !tbaa !5
  %add141 = fadd double %228, %mul139
  store double %add141, double* %arrayidx140, align 8, !tbaa !5
  %229 = load double, double* %tmp1125, align 8, !tbaa !5
  %230 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx142 = getelementptr inbounds double, double* %230, i64 4
  %231 = load double, double* %arrayidx142, align 8, !tbaa !5
  %mul143 = fmul double %229, %231
  %232 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx144 = getelementptr inbounds double, double* %232, i64 512
  %233 = load double, double* %arrayidx144, align 8, !tbaa !5
  %add145 = fadd double %233, %mul143
  store double %add145, double* %arrayidx144, align 8, !tbaa !5
  %234 = bitcast double* %tmp1125 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %234) #1
  %235 = bitcast double* %tmp0124 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %235) #1
  %236 = load double, double* %in4107, align 8, !tbaa !5
  %237 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul146 = fmul double %236, %237
  %238 = load double, double* %in0103, align 8, !tbaa !5
  %add147 = fadd double %238, %mul146
  store double %add147, double* %in0103, align 8, !tbaa !5
  %239 = load double, double* %in0103, align 8, !tbaa !5
  %240 = load double, double* %in2105, align 8, !tbaa !5
  %add148 = fadd double %239, %240
  store double %add148, double* %in4107, align 8, !tbaa !5
  %241 = load double, double* %in2105, align 8, !tbaa !5
  %242 = load double, double* %in0103, align 8, !tbaa !5
  %sub149 = fsub double %242, %241
  store double %sub149, double* %in0103, align 8, !tbaa !5
  %243 = load double, double* %in5108, align 8, !tbaa !5
  %244 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul150 = fmul double %243, %244
  %245 = load double, double* %in1104, align 8, !tbaa !5
  %add151 = fadd double %245, %mul150
  store double %add151, double* %in1104, align 8, !tbaa !5
  %246 = load double, double* %in1104, align 8, !tbaa !5
  %247 = load double, double* %in3106, align 8, !tbaa !5
  %add152 = fadd double %246, %247
  %248 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 0), align 8, !tbaa !5
  %mul153 = fmul double %add152, %248
  store double %mul153, double* %in5108, align 8, !tbaa !5
  %249 = load double, double* %in1104, align 8, !tbaa !5
  %250 = load double, double* %in3106, align 8, !tbaa !5
  %sub154 = fsub double %249, %250
  %251 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 2), align 8, !tbaa !5
  %mul155 = fmul double %sub154, %251
  store double %mul155, double* %in1104, align 8, !tbaa !5
  %252 = load double, double* %in4107, align 8, !tbaa !5
  %253 = load double, double* %in5108, align 8, !tbaa !5
  %add156 = fadd double %252, %253
  store double %add156, double* %in3106, align 8, !tbaa !5
  %254 = load double, double* %in5108, align 8, !tbaa !5
  %255 = load double, double* %in4107, align 8, !tbaa !5
  %sub157 = fsub double %255, %254
  store double %sub157, double* %in4107, align 8, !tbaa !5
  %256 = load double, double* %in0103, align 8, !tbaa !5
  %257 = load double, double* %in1104, align 8, !tbaa !5
  %add158 = fadd double %256, %257
  store double %add158, double* %in2105, align 8, !tbaa !5
  %258 = load double, double* %in1104, align 8, !tbaa !5
  %259 = load double, double* %in0103, align 8, !tbaa !5
  %sub159 = fsub double %259, %258
  store double %sub159, double* %in0103, align 8, !tbaa !5
  %260 = load double, double* %in2105, align 8, !tbaa !5
  %261 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx160 = getelementptr inbounds double, double* %261, i64 11
  %262 = load double, double* %arrayidx160, align 8, !tbaa !5
  %mul161 = fmul double %260, %262
  %263 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx162 = getelementptr inbounds double, double* %263, i64 5
  store double %mul161, double* %arrayidx162, align 8, !tbaa !5
  %264 = load double, double* %in2105, align 8, !tbaa !5
  %265 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx163 = getelementptr inbounds double, double* %265, i64 6
  %266 = load double, double* %arrayidx163, align 8, !tbaa !5
  %mul164 = fmul double %264, %266
  %267 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx165 = getelementptr inbounds double, double* %267, i64 0
  store double %mul164, double* %arrayidx165, align 8, !tbaa !5
  %268 = load double, double* %in3106, align 8, !tbaa !5
  %269 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx166 = getelementptr inbounds double, double* %269, i64 8
  %270 = load double, double* %arrayidx166, align 8, !tbaa !5
  %mul167 = fmul double %268, %270
  %271 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx168 = getelementptr inbounds double, double* %271, i64 2
  store double %mul167, double* %arrayidx168, align 8, !tbaa !5
  %272 = load double, double* %in3106, align 8, !tbaa !5
  %273 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx169 = getelementptr inbounds double, double* %273, i64 9
  %274 = load double, double* %arrayidx169, align 8, !tbaa !5
  %mul170 = fmul double %272, %274
  %275 = load double*, double** %out2, align 8, !tbaa !7
  %arrayidx171 = getelementptr inbounds double, double* %275, i64 3
  store double %mul170, double* %arrayidx171, align 8, !tbaa !5
  %276 = load double, double* %in0103, align 8, !tbaa !5
  %277 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx172 = getelementptr inbounds double, double* %277, i64 0
  %278 = load double, double* %arrayidx172, align 8, !tbaa !5
  %mul173 = fmul double %276, %278
  %279 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx174 = getelementptr inbounds double, double* %279, i64 384
  %280 = load double, double* %arrayidx174, align 8, !tbaa !5
  %add175 = fadd double %280, %mul173
  store double %add175, double* %arrayidx174, align 8, !tbaa !5
  %281 = load double, double* %in0103, align 8, !tbaa !5
  %282 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx176 = getelementptr inbounds double, double* %282, i64 5
  %283 = load double, double* %arrayidx176, align 8, !tbaa !5
  %mul177 = fmul double %281, %283
  %284 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx178 = getelementptr inbounds double, double* %284, i64 544
  %285 = load double, double* %arrayidx178, align 8, !tbaa !5
  %add179 = fadd double %285, %mul177
  store double %add179, double* %arrayidx178, align 8, !tbaa !5
  %286 = load double, double* %in4107, align 8, !tbaa !5
  %287 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx180 = getelementptr inbounds double, double* %287, i64 2
  %288 = load double, double* %arrayidx180, align 8, !tbaa !5
  %mul181 = fmul double %286, %288
  %289 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx182 = getelementptr inbounds double, double* %289, i64 448
  %290 = load double, double* %arrayidx182, align 8, !tbaa !5
  %add183 = fadd double %290, %mul181
  store double %add183, double* %arrayidx182, align 8, !tbaa !5
  %291 = load double, double* %in4107, align 8, !tbaa !5
  %292 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx184 = getelementptr inbounds double, double* %292, i64 3
  %293 = load double, double* %arrayidx184, align 8, !tbaa !5
  %mul185 = fmul double %291, %293
  %294 = load double*, double** %ts.addr, align 8, !tbaa !7
  %arrayidx186 = getelementptr inbounds double, double* %294, i64 480
  %295 = load double, double* %arrayidx186, align 8, !tbaa !5
  %add187 = fadd double %295, %mul185
  store double %add187, double* %arrayidx186, align 8, !tbaa !5
  %296 = bitcast double** %out2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %296) #1
  %297 = bitcast double* %in5108 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %297) #1
  %298 = bitcast double* %in4107 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %298) #1
  %299 = bitcast double* %in3106 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %299) #1
  %300 = bitcast double* %in2105 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %300) #1
  %301 = bitcast double* %in1104 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %301) #1
  %302 = bitcast double* %in0103 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %302) #1
  %303 = load double*, double** %in.addr, align 8, !tbaa !7
  %incdec.ptr188 = getelementptr inbounds double, double* %303, i32 1
  store double* %incdec.ptr188, double** %in.addr, align 8, !tbaa !7
  %304 = bitcast double* %in0189 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %304) #1
  %305 = bitcast double* %in1190 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %305) #1
  %306 = bitcast double* %in2191 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %306) #1
  %307 = bitcast double* %in3192 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %307) #1
  %308 = bitcast double* %in4193 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %308) #1
  %309 = bitcast double* %in5194 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %309) #1
  %310 = bitcast double** %out2195 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %310) #1
  %311 = load double*, double** %rawout2.addr, align 8, !tbaa !7
  store double* %311, double** %out2195, align 8, !tbaa !7
  %312 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx196 = getelementptr inbounds double, double* %312, i64 17
  store double 0.000000e+00, double* %arrayidx196, align 8, !tbaa !5
  %313 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx197 = getelementptr inbounds double, double* %313, i64 16
  store double 0.000000e+00, double* %arrayidx197, align 8, !tbaa !5
  %314 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx198 = getelementptr inbounds double, double* %314, i64 15
  store double 0.000000e+00, double* %arrayidx198, align 8, !tbaa !5
  %315 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx199 = getelementptr inbounds double, double* %315, i64 14
  store double 0.000000e+00, double* %arrayidx199, align 8, !tbaa !5
  %316 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx200 = getelementptr inbounds double, double* %316, i64 13
  store double 0.000000e+00, double* %arrayidx200, align 8, !tbaa !5
  %317 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx201 = getelementptr inbounds double, double* %317, i64 12
  store double 0.000000e+00, double* %arrayidx201, align 8, !tbaa !5
  %318 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx202 = getelementptr inbounds double, double* %318, i64 15
  %319 = load double, double* %arrayidx202, align 8, !tbaa !5
  store double %319, double* %in5194, align 8, !tbaa !5
  %320 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx203 = getelementptr inbounds double, double* %320, i64 12
  %321 = load double, double* %arrayidx203, align 8, !tbaa !5
  store double %321, double* %in4193, align 8, !tbaa !5
  %322 = load double, double* %in5194, align 8, !tbaa !5
  %add204 = fadd double %322, %321
  store double %add204, double* %in5194, align 8, !tbaa !5
  %323 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx205 = getelementptr inbounds double, double* %323, i64 9
  %324 = load double, double* %arrayidx205, align 8, !tbaa !5
  store double %324, double* %in3192, align 8, !tbaa !5
  %325 = load double, double* %in4193, align 8, !tbaa !5
  %add206 = fadd double %325, %324
  store double %add206, double* %in4193, align 8, !tbaa !5
  %326 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx207 = getelementptr inbounds double, double* %326, i64 6
  %327 = load double, double* %arrayidx207, align 8, !tbaa !5
  store double %327, double* %in2191, align 8, !tbaa !5
  %328 = load double, double* %in3192, align 8, !tbaa !5
  %add208 = fadd double %328, %327
  store double %add208, double* %in3192, align 8, !tbaa !5
  %329 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx209 = getelementptr inbounds double, double* %329, i64 3
  %330 = load double, double* %arrayidx209, align 8, !tbaa !5
  store double %330, double* %in1190, align 8, !tbaa !5
  %331 = load double, double* %in2191, align 8, !tbaa !5
  %add210 = fadd double %331, %330
  store double %add210, double* %in2191, align 8, !tbaa !5
  %332 = load double*, double** %in.addr, align 8, !tbaa !7
  %arrayidx211 = getelementptr inbounds double, double* %332, i64 0
  %333 = load double, double* %arrayidx211, align 8, !tbaa !5
  store double %333, double* %in0189, align 8, !tbaa !5
  %334 = load double, double* %in1190, align 8, !tbaa !5
  %add212 = fadd double %334, %333
  store double %add212, double* %in1190, align 8, !tbaa !5
  %335 = load double, double* %in3192, align 8, !tbaa !5
  %336 = load double, double* %in5194, align 8, !tbaa !5
  %add213 = fadd double %336, %335
  store double %add213, double* %in5194, align 8, !tbaa !5
  %337 = load double, double* %in1190, align 8, !tbaa !5
  %338 = load double, double* %in3192, align 8, !tbaa !5
  %add214 = fadd double %338, %337
  store double %add214, double* %in3192, align 8, !tbaa !5
  %339 = load double, double* @COS6_1, align 8, !tbaa !5
  %340 = load double, double* %in2191, align 8, !tbaa !5
  %mul215 = fmul double %340, %339
  store double %mul215, double* %in2191, align 8, !tbaa !5
  %341 = load double, double* @COS6_1, align 8, !tbaa !5
  %342 = load double, double* %in3192, align 8, !tbaa !5
  %mul216 = fmul double %342, %341
  store double %mul216, double* %in3192, align 8, !tbaa !5
  %343 = bitcast double* %tmp0217 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %343) #1
  %344 = bitcast double* %tmp1218 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %344) #1
  %345 = load double, double* %in0189, align 8, !tbaa !5
  %346 = load double, double* %in4193, align 8, !tbaa !5
  %sub219 = fsub double %345, %346
  store double %sub219, double* %tmp1218, align 8, !tbaa !5
  %347 = bitcast double* %tmp2220 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %347) #1
  %348 = load double, double* %in1190, align 8, !tbaa !5
  %349 = load double, double* %in5194, align 8, !tbaa !5
  %sub221 = fsub double %348, %349
  %350 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 1), align 8, !tbaa !5
  %mul222 = fmul double %sub221, %350
  store double %mul222, double* %tmp2220, align 8, !tbaa !5
  %351 = load double, double* %tmp1218, align 8, !tbaa !5
  %352 = load double, double* %tmp2220, align 8, !tbaa !5
  %add223 = fadd double %351, %352
  store double %add223, double* %tmp0217, align 8, !tbaa !5
  %353 = load double, double* %tmp2220, align 8, !tbaa !5
  %354 = load double, double* %tmp1218, align 8, !tbaa !5
  %sub224 = fsub double %354, %353
  store double %sub224, double* %tmp1218, align 8, !tbaa !5
  %355 = bitcast double* %tmp2220 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %355) #1
  %356 = load double, double* %tmp0217, align 8, !tbaa !5
  %357 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx225 = getelementptr inbounds double, double* %357, i64 10
  %358 = load double, double* %arrayidx225, align 8, !tbaa !5
  %mul226 = fmul double %356, %358
  %359 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx227 = getelementptr inbounds double, double* %359, i64 10
  store double %mul226, double* %arrayidx227, align 8, !tbaa !5
  %360 = load double, double* %tmp0217, align 8, !tbaa !5
  %361 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx228 = getelementptr inbounds double, double* %361, i64 7
  %362 = load double, double* %arrayidx228, align 8, !tbaa !5
  %mul229 = fmul double %360, %362
  %363 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx230 = getelementptr inbounds double, double* %363, i64 7
  store double %mul229, double* %arrayidx230, align 8, !tbaa !5
  %364 = load double, double* %tmp1218, align 8, !tbaa !5
  %365 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx231 = getelementptr inbounds double, double* %365, i64 1
  %366 = load double, double* %arrayidx231, align 8, !tbaa !5
  %mul232 = fmul double %364, %366
  %367 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx233 = getelementptr inbounds double, double* %367, i64 1
  %368 = load double, double* %arrayidx233, align 8, !tbaa !5
  %add234 = fadd double %368, %mul232
  store double %add234, double* %arrayidx233, align 8, !tbaa !5
  %369 = load double, double* %tmp1218, align 8, !tbaa !5
  %370 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx235 = getelementptr inbounds double, double* %370, i64 4
  %371 = load double, double* %arrayidx235, align 8, !tbaa !5
  %mul236 = fmul double %369, %371
  %372 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx237 = getelementptr inbounds double, double* %372, i64 4
  %373 = load double, double* %arrayidx237, align 8, !tbaa !5
  %add238 = fadd double %373, %mul236
  store double %add238, double* %arrayidx237, align 8, !tbaa !5
  %374 = bitcast double* %tmp1218 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %374) #1
  %375 = bitcast double* %tmp0217 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %375) #1
  %376 = load double, double* %in4193, align 8, !tbaa !5
  %377 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul239 = fmul double %376, %377
  %378 = load double, double* %in0189, align 8, !tbaa !5
  %add240 = fadd double %378, %mul239
  store double %add240, double* %in0189, align 8, !tbaa !5
  %379 = load double, double* %in0189, align 8, !tbaa !5
  %380 = load double, double* %in2191, align 8, !tbaa !5
  %add241 = fadd double %379, %380
  store double %add241, double* %in4193, align 8, !tbaa !5
  %381 = load double, double* %in2191, align 8, !tbaa !5
  %382 = load double, double* %in0189, align 8, !tbaa !5
  %sub242 = fsub double %382, %381
  store double %sub242, double* %in0189, align 8, !tbaa !5
  %383 = load double, double* %in5194, align 8, !tbaa !5
  %384 = load double, double* @COS6_2, align 8, !tbaa !5
  %mul243 = fmul double %383, %384
  %385 = load double, double* %in1190, align 8, !tbaa !5
  %add244 = fadd double %385, %mul243
  store double %add244, double* %in1190, align 8, !tbaa !5
  %386 = load double, double* %in1190, align 8, !tbaa !5
  %387 = load double, double* %in3192, align 8, !tbaa !5
  %add245 = fadd double %386, %387
  %388 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 0), align 8, !tbaa !5
  %mul246 = fmul double %add245, %388
  store double %mul246, double* %in5194, align 8, !tbaa !5
  %389 = load double, double* %in1190, align 8, !tbaa !5
  %390 = load double, double* %in3192, align 8, !tbaa !5
  %sub247 = fsub double %389, %390
  %391 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i32 0, i64 2), align 8, !tbaa !5
  %mul248 = fmul double %sub247, %391
  store double %mul248, double* %in1190, align 8, !tbaa !5
  %392 = load double, double* %in4193, align 8, !tbaa !5
  %393 = load double, double* %in5194, align 8, !tbaa !5
  %add249 = fadd double %392, %393
  store double %add249, double* %in3192, align 8, !tbaa !5
  %394 = load double, double* %in5194, align 8, !tbaa !5
  %395 = load double, double* %in4193, align 8, !tbaa !5
  %sub250 = fsub double %395, %394
  store double %sub250, double* %in4193, align 8, !tbaa !5
  %396 = load double, double* %in0189, align 8, !tbaa !5
  %397 = load double, double* %in1190, align 8, !tbaa !5
  %add251 = fadd double %396, %397
  store double %add251, double* %in2191, align 8, !tbaa !5
  %398 = load double, double* %in1190, align 8, !tbaa !5
  %399 = load double, double* %in0189, align 8, !tbaa !5
  %sub252 = fsub double %399, %398
  store double %sub252, double* %in0189, align 8, !tbaa !5
  %400 = load double, double* %in2191, align 8, !tbaa !5
  %401 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx253 = getelementptr inbounds double, double* %401, i64 11
  %402 = load double, double* %arrayidx253, align 8, !tbaa !5
  %mul254 = fmul double %400, %402
  %403 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx255 = getelementptr inbounds double, double* %403, i64 11
  store double %mul254, double* %arrayidx255, align 8, !tbaa !5
  %404 = load double, double* %in2191, align 8, !tbaa !5
  %405 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx256 = getelementptr inbounds double, double* %405, i64 6
  %406 = load double, double* %arrayidx256, align 8, !tbaa !5
  %mul257 = fmul double %404, %406
  %407 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx258 = getelementptr inbounds double, double* %407, i64 6
  store double %mul257, double* %arrayidx258, align 8, !tbaa !5
  %408 = load double, double* %in3192, align 8, !tbaa !5
  %409 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx259 = getelementptr inbounds double, double* %409, i64 8
  %410 = load double, double* %arrayidx259, align 8, !tbaa !5
  %mul260 = fmul double %408, %410
  %411 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx261 = getelementptr inbounds double, double* %411, i64 8
  store double %mul260, double* %arrayidx261, align 8, !tbaa !5
  %412 = load double, double* %in3192, align 8, !tbaa !5
  %413 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx262 = getelementptr inbounds double, double* %413, i64 9
  %414 = load double, double* %arrayidx262, align 8, !tbaa !5
  %mul263 = fmul double %412, %414
  %415 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx264 = getelementptr inbounds double, double* %415, i64 9
  store double %mul263, double* %arrayidx264, align 8, !tbaa !5
  %416 = load double, double* %in0189, align 8, !tbaa !5
  %417 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx265 = getelementptr inbounds double, double* %417, i64 0
  %418 = load double, double* %arrayidx265, align 8, !tbaa !5
  %mul266 = fmul double %416, %418
  %419 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx267 = getelementptr inbounds double, double* %419, i64 0
  %420 = load double, double* %arrayidx267, align 8, !tbaa !5
  %add268 = fadd double %420, %mul266
  store double %add268, double* %arrayidx267, align 8, !tbaa !5
  %421 = load double, double* %in0189, align 8, !tbaa !5
  %422 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx269 = getelementptr inbounds double, double* %422, i64 5
  %423 = load double, double* %arrayidx269, align 8, !tbaa !5
  %mul270 = fmul double %421, %423
  %424 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx271 = getelementptr inbounds double, double* %424, i64 5
  %425 = load double, double* %arrayidx271, align 8, !tbaa !5
  %add272 = fadd double %425, %mul270
  store double %add272, double* %arrayidx271, align 8, !tbaa !5
  %426 = load double, double* %in4193, align 8, !tbaa !5
  %427 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx273 = getelementptr inbounds double, double* %427, i64 2
  %428 = load double, double* %arrayidx273, align 8, !tbaa !5
  %mul274 = fmul double %426, %428
  %429 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx275 = getelementptr inbounds double, double* %429, i64 2
  %430 = load double, double* %arrayidx275, align 8, !tbaa !5
  %add276 = fadd double %430, %mul274
  store double %add276, double* %arrayidx275, align 8, !tbaa !5
  %431 = load double, double* %in4193, align 8, !tbaa !5
  %432 = load double*, double** %wi.addr, align 8, !tbaa !7
  %arrayidx277 = getelementptr inbounds double, double* %432, i64 3
  %433 = load double, double* %arrayidx277, align 8, !tbaa !5
  %mul278 = fmul double %431, %433
  %434 = load double*, double** %out2195, align 8, !tbaa !7
  %arrayidx279 = getelementptr inbounds double, double* %434, i64 3
  %435 = load double, double* %arrayidx279, align 8, !tbaa !5
  %add280 = fadd double %435, %mul278
  store double %add280, double* %arrayidx279, align 8, !tbaa !5
  %436 = bitcast double** %out2195 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %436) #1
  %437 = bitcast double* %in5194 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %437) #1
  %438 = bitcast double* %in4193 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %438) #1
  %439 = bitcast double* %in3192 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %439) #1
  %440 = bitcast double* %in2191 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %440) #1
  %441 = bitcast double* %in1190 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %441) #1
  %442 = bitcast double* %in0189 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %442) #1
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"double", !3, i64 0}
!7 = !{!8, !8, i64 0}
!8 = !{!"any pointer", !3, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"short", !3, i64 0}
!11 = !{!12, !2, i64 0}
!12 = !{!"frame", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !2, i64 16, !2, i64 20, !2, i64 24, !2, i64 28, !2, i64 32, !2, i64 36, !2, i64 40, !2, i64 44, !2, i64 48, !2, i64 52, !2, i64 56, !2, i64 60, !2, i64 64, !2, i64 68}
!13 = !{!12, !2, i64 8}
!14 = !{!12, !2, i64 36}
!15 = !{!12, !2, i64 48}
!16 = !{!12, !2, i64 52}
!17 = !{!12, !2, i64 12}
!18 = !{!19, !2, i64 0}
!19 = !{!"III_sideinfo", !2, i64 0, !2, i64 4, !3, i64 8}
!20 = !{!21, !21, i64 0}
!21 = !{!"long", !3, i64 0}
!22 = !{!23, !2, i64 64}
!23 = !{!"gr_info_s", !2, i64 0, !2, i64 4, !2, i64 8, !2, i64 12, !2, i64 16, !2, i64 20, !3, i64 24, !3, i64 36, !3, i64 48, !2, i64 60, !2, i64 64, !2, i64 68, !2, i64 72, !2, i64 76, !2, i64 80, !2, i64 84, !3, i64 88, !8, i64 112}
!24 = !{!19, !2, i64 4}
!25 = !{!23, !2, i64 4}
!26 = !{!23, !2, i64 8}
!27 = !{!23, !8, i64 112}
!28 = !{!23, !2, i64 12}
!29 = !{!23, !2, i64 16}
!30 = !{!23, !2, i64 20}
!31 = !{!23, !2, i64 68}
!32 = !{!23, !2, i64 72}
!33 = !{!23, !2, i64 80}
!34 = !{!23, !2, i64 84}
!35 = !{!23, !2, i64 0}
!36 = !{!23, !2, i64 76}
!37 = !{!3, !3, i64 0}
!38 = !{!39, !8, i64 8}
!39 = !{!"newhuff", !2, i64 0, !8, i64 8}
!40 = !{!39, !2, i64 0}
!41 = !{!23, !2, i64 60}
