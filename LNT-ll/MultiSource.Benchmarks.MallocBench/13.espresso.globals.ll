; ModuleID = './MultiSource.Benchmarks.MallocBench/13.espresso.globals.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pla_types_struct = type { i8*, i32 }
%struct.cube_struct = type { i32, i32, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32**, i32**, i32*, i32*, i32, i32, i32*, i32, i32 }
%struct.cdata_struct = type { i32*, i32*, i32*, i32*, i32, i32, i32 }

@.str = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"-fd\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"-fr\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"-dr\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"-fdr\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"-fc\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"-rc\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"-dc\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"-fdc\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"-frc\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"-drc\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"-fdrc\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"-pleasure\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"-eqn\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"-eqntott\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"-kiss\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"-cons\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"-scons\00", align 1
@pla_types = global [21 x %struct.pla_types_struct] [%struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 1 }, %struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 4 }, %struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 2 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i32 3 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i32 5 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i32 6 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 7 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 257 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i32 260 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 258 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 259 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 261 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 262 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i32 263 }, %struct.pla_types_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i32 8 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i32 16 }, %struct.pla_types_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i32 16 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i32 128 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i32 256 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i32 512 }, %struct.pla_types_struct zeroinitializer], align 16
@bit_count = global [256 x i32] [i32 0, i32 1, i32 1, i32 2, i32 1, i32 2, i32 2, i32 3, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 5, i32 6, i32 6, i32 7, i32 6, i32 7, i32 7, i32 8], align 16
@debug = common global i32 0, align 4
@verbose_debug = common global i32 0, align 4
@total_name = common global [16 x i8*] zeroinitializer, align 16
@total_time = common global [16 x i64] zeroinitializer, align 16
@total_calls = common global [16 x i32] zeroinitializer, align 16
@echo_comments = common global i32 0, align 4
@echo_unknown_commands = common global i32 0, align 4
@force_irredundant = common global i32 0, align 4
@skip_make_sparse = common global i32 0, align 4
@kiss = common global i32 0, align 4
@pos = common global i32 0, align 4
@print_solution = common global i32 0, align 4
@recompute_onset = common global i32 0, align 4
@remove_essential = common global i32 0, align 4
@single_expand = common global i32 0, align 4
@summary = common global i32 0, align 4
@trace = common global i32 0, align 4
@unwrap_onset = common global i32 0, align 4
@use_random_order = common global i32 0, align 4
@use_super_gasp = common global i32 0, align 4
@filename = common global i8* null, align 8
@cube = common global %struct.cube_struct zeroinitializer, align 8
@temp_cube_save = common global %struct.cube_struct zeroinitializer, align 8
@cdata = common global %struct.cdata_struct zeroinitializer, align 8
@temp_cdata_save = common global %struct.cdata_struct zeroinitializer, align 8

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
