; ModuleID = './MultiSource.Applications.JM/53.lencod.block.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16****, i16****, i16*****, i16***, i8*, i8***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i8**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, i32***, i32***, i32****, i32****, %struct.Picture*, %struct.Slice*, %struct.macroblock*, i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [32 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double**, double***, i32***, double**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [2 x i32], i32, i32, i16, i32, i32, i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, %struct.EncodingEnvironment }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32 }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.macroblock = type { i32, i32, i32, [2 x i32], i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i8], [16 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], [4 x [4 x i32]], i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, [500 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, [5 x double], i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [6 x double], [256 x i8], i32, i32, i32, i32, [2 x [5 x i32]], [2 x [5 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.StatParameters = type { i32, i32, float, float, i64, i64, i32, i32, i32, [5 x [2 x i32]], [5 x [15 x i32]], [5 x [15 x i32]], [4 x i32], i32, i32*, i32*, i64, i64, i64, float, float, float, [5 x [15 x i64]], [5 x [15 x i64]], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], i32, i32, i32*, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i16]], [16 x [16 x i16]], [16 x [16 x i16]], i32****, i32***, i32, i16, [4 x i32], [4 x i32], i8**, [16 x i8], [16 x i8], i32, i64, i32, i16******, i16******, [2 x [4 x [4 x i8]]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)* }

@SNGL_SCAN = constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\03\03"], align 16
@FIELD_SCAN = constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03", [2 x i8] c"\02\00", [2 x i8] c"\02\01", [2 x i8] c"\02\02", [2 x i8] c"\02\03", [2 x i8] c"\03\00", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\03\03"], align 16
@COEFF_COST = constant [2 x [16 x i8]] [[16 x i8] c"\03\02\02\01\01\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09"], align 16
@COEFF_BIT_COST = constant [3 x [16 x [16 x i8]]] [[16 x [16 x i8]] [[16 x i8] c"\03\05\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D", [16 x i8] c"\05\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D", [16 x i8] c"\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D\0F", [16 x i8] c"\07\09\09\0B\0B\0B\0B\0D\0D\0D\0D\0D\0D\0D\0D\0F", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D", [16 x i8] c"\07\07\09\09\09\09\0B\0B\0B\0B\0B\0B\0B\0B\0D\0D"], [16 x [16 x i8]] [[16 x i8] c"\03\05\07\07\07\09\09\09\09\0B\0B\0D\0D\0D\0D\0F", [16 x i8] c"\05\09\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F", [16 x i8] c"\07\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\09\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] c"\0B\0B\0D\0D\0D\0D\0F\0F\0F\0F\0F\0F\0F\0F\11\11", [16 x i8] zeroinitializer, [16 x i8] zeroinitializer], [16 x [16 x i8]] [[16 x i8] c"\03\07\09\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11", [16 x i8] c"\05\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11", [16 x i8] c"\05\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\07\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\09\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13", [16 x i8] c"\0B\0D\0D\0F\0F\0F\0F\11\11\11\11\11\11\11\11\13"]], align 16
@SCAN_YUV422 = constant [8 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03"], align 16
@hor_offset = constant [4 x [4 x [4 x i8]]] [[4 x [4 x i8]] zeroinitializer, [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@ver_offset = constant [4 x [4 x [4 x i8]]] [[4 x [4 x i8]] zeroinitializer, [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@quant_coef = constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243], [4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243]], [4 x [4 x i32]] [[4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660], [4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660]], [4 x [4 x i32]] [[4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194], [4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194]], [4 x [4 x i32]] [[4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647], [4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647]], [4 x [4 x i32]] [[4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355], [4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355]], [4 x [4 x i32]] [[4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893], [4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893]]], align 16
@dequant_coef = constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16]], [4 x [4 x i32]] [[4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18]], [4 x [4 x i32]] [[4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20]], [4 x [4 x i32]] [[4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23]], [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], [4 x [4 x i32]] [[4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29]]], align 16
@QP_SCALE_CR = constant [52 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1D\1E\1F  !\22\22##$$%%%&&&''''", align 16
@enc_picture = external global %struct.storable_picture*, align 8
@img = external global %struct.ImageParameters*, align 8
@getNeighbour = common global void (i32, i32, i32, i32, %struct.pix_pos*)* null, align 8
@input = external global %struct.InputParameters*, align 8
@dct_luma_16x16.M1 = internal global [16 x [16 x i32]] zeroinitializer, align 16
@dct_luma_16x16.M4 = internal global [4 x [4 x i32]] zeroinitializer, align 16
@dct_luma_16x16.M5 = internal global [4 x i32] zeroinitializer, align 16
@dct_luma_16x16.M6 = internal global [4 x i32] zeroinitializer, align 16
@dct_luma_16x16.M0 = internal global [4 x [4 x [4 x [4 x i32]]]] zeroinitializer, align 16
@qp_per_matrix = external global i32*, align 8
@qp_rem_matrix = external global i32*, align 8
@LevelScale4x4Luma = external global i32****, align 8
@InvLevelScale4x4Luma = external global i32****, align 8
@LevelOffset4x4Luma = external global i32****, align 8
@imgY_org = common global i16** null, align 8
@AdaptRndWeight = external global i32, align 4
@lrec = common global i32** null, align 8
@dct_luma.m4 = internal global [4 x [4 x i32]] zeroinitializer, align 16
@dct_luma.m5 = internal global [4 x i32] zeroinitializer, align 16
@dct_luma.m6 = internal global [4 x i32] zeroinitializer, align 16
@dct_chroma.m1 = internal global [4 x i32] zeroinitializer, align 16
@dct_chroma.m5 = internal global [4 x i32] zeroinitializer, align 16
@dct_chroma.m6 = internal global [4 x i32] zeroinitializer, align 16
@dct_chroma.cbpblk_pattern = internal constant [4 x i64] [i64 0, i64 983040, i64 16711680, i64 4294901760], align 16
@dct_chroma.m3 = internal global [4 x [4 x i32]] zeroinitializer, align 16
@dct_chroma.m4 = internal global [4 x [4 x i32]] zeroinitializer, align 16
@LevelScale4x4Chroma = external global i32*****, align 8
@LevelOffset4x4Chroma = external global i32*****, align 8
@InvLevelScale4x4Chroma = external global i32*****, align 8
@cbp_blk_chroma = internal global [8 x [4 x i8]] [[4 x i8] c"\10\11\12\13", [4 x i8] c"\14\15\16\17", [4 x i8] c"\18\19\1A\1B", [4 x i8] c"\1C\1D\1E\1F", [4 x i8] c" !\22#", [4 x i8] c"$%&'", [4 x i8] c"()*+", [4 x i8] c",-./"], align 16
@AdaptRndCrWeight = external global i32, align 4
@A = internal constant [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], align 16
@si_frame_indicator = common global i32 0, align 4
@sp2_frame_indicator = common global i32 0, align 4
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@lrec_uv = common global i32*** null, align 8
@stats = external global %struct.StatParameters*, align 8
@mb_adaptive = common global i32 0, align 4
@color_formats = common global i32 0, align 4
@top_pic = common global %struct.Picture* null, align 8
@bottom_pic = common global %struct.Picture* null, align 8
@frame_pic = common global %struct.Picture* null, align 8
@frame_pic_1 = common global %struct.Picture* null, align 8
@frame_pic_2 = common global %struct.Picture* null, align 8
@frame_pic_3 = common global %struct.Picture* null, align 8
@frame_pic_si = common global %struct.Picture* null, align 8
@Bit_Buffer = common global i64* null, align 8
@imgUV_org = common global i16*** null, align 8
@imgY_sub_tmp = common global i32** null, align 8
@PicPos = common global i32** null, align 8
@log2_max_frame_num_minus4 = common global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common global i32 0, align 4
@me_tot_time = common global i64 0, align 8
@me_time = common global i64 0, align 8
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@dsr_new_search_range = common global i32 0, align 4
@MBPairIsField = common global i32 0, align 4
@wp_weight = common global i32*** null, align 8
@wp_offset = common global i32*** null, align 8
@wbp_weight = common global i32**** null, align 8
@luma_log_weight_denom = common global i32 0, align 4
@chroma_log_weight_denom = common global i32 0, align 4
@wp_luma_round = common global i32 0, align 4
@wp_chroma_round = common global i32 0, align 4
@imgY_org_top = common global i16** null, align 8
@imgY_org_bot = common global i16** null, align 8
@imgUV_org_top = common global i16*** null, align 8
@imgUV_org_bot = common global i16*** null, align 8
@imgY_org_frm = common global i16** null, align 8
@imgUV_org_frm = common global i16*** null, align 8
@imgY_com = common global i16** null, align 8
@imgUV_com = common global i16*** null, align 8
@direct_ref_idx = common global i8*** null, align 8
@direct_pdir = common global i8** null, align 8
@pixel_map = common global i8** null, align 8
@refresh_map = common global i8** null, align 8
@intras = common global i32 0, align 4
@frame_ctr = common global [5 x i32] zeroinitializer, align 16
@frame_no = common global i32 0, align 4
@nextP_tr_fld = common global i32 0, align 4
@nextP_tr_frm = common global i32 0, align 4
@tot_time = common global i64 0, align 8
@errortext = common global [300 x i8] zeroinitializer, align 16
@b8_ipredmode8x8 = common global [4 x [4 x i8]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common global [16 x i8] zeroinitializer, align 16
@gop_structure = common global %struct.GOP_DATA* null, align 8
@rdopt = common global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common global %struct._IO_FILE* null, align 8
@p_log = common global %struct._IO_FILE* null, align 8
@p_trace = common global %struct._IO_FILE* null, align 8
@p_in = common global i32 0, align 4
@p_dec = common global i32 0, align 4
@mb16x16_cost_frame = common global double* null, align 8
@Bytes_After_Header = common global i32 0, align 4
@encode_one_macroblock = common global void ()* null, align 8
@number_sp2_frames = common global i32 0, align 4
@giRDOpt_B8OnlyFlag = common global i32 0, align 4
@imgY_tmp = common global i16** null, align 8
@imgUV_tmp = common global [2 x i16**] zeroinitializer, align 16
@frameNuminGOP = common global i32 0, align 4
@redundant_coding = common global i32 0, align 4
@key_frame = common global i32 0, align 4
@redundant_ref_idx = common global i32 0, align 4
@img_pad_size_uv_x = common global i32 0, align 4
@img_pad_size_uv_y = common global i32 0, align 4
@chroma_mask_mv_y = common global i8 0, align 1
@chroma_mask_mv_x = common global i8 0, align 1
@chroma_shift_y = common global i32 0, align 4
@chroma_shift_x = common global i32 0, align 4
@shift_cr_x = common global i32 0, align 4
@shift_cr_y = common global i32 0, align 4
@img_padded_size_x = common global i32 0, align 4
@img_cr_padded_size_x = common global i32 0, align 4
@start_me_refinement_hp = common global i32 0, align 4
@start_me_refinement_qp = common global i32 0, align 4
@get_mb_block_pos = common global void (i32, i32*, i32*)* null, align 8

; Function Attrs: nounwind uwtable
define void @intrapred_luma(i32 %img_x, i32 %img_y, i32* %left_available, i32* %up_available, i32* %all_available) #0 {
entry:
  %img_x.addr = alloca i32, align 4
  %img_y.addr = alloca i32, align 4
  %left_available.addr = alloca i32*, align 8
  %up_available.addr = alloca i32*, align 8
  %all_available.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s0 = alloca i32, align 4
  %PredPel = alloca [13 x i16], align 16
  %imgY = alloca i16**, align 8
  %imgYpel = alloca i16*, align 8
  %cur_pred = alloca [16 x i16]*, align 8
  %ioff = alloca i32, align 4
  %joff = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %pix_a = alloca [4 x %struct.pix_pos], align 16
  %pix_b = alloca %struct.pix_pos, align 4
  %pix_c = alloca %struct.pix_pos, align 4
  %pix_d = alloca %struct.pix_pos, align 4
  %block_available_up = alloca i32, align 4
  %block_available_left = alloca i32, align 4
  %block_available_up_left = alloca i32, align 4
  %block_available_up_right = alloca i32, align 4
  store i32 %img_x, i32* %img_x.addr, align 4
  store i32 %img_y, i32* %img_y.addr, align 4
  store i32* %left_available, i32** %left_available.addr, align 8
  store i32* %up_available, i32** %up_available.addr, align 8
  store i32* %all_available, i32** %all_available.addr, align 8
  %0 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY1 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %0, i32 0, i32 29
  %1 = load i16**, i16*** %imgY1, align 8
  store i16** %1, i16*** %imgY, align 8
  %2 = load i32, i32* %img_x.addr, align 4
  %and = and i32 %2, 15
  store i32 %and, i32* %ioff, align 4
  %3 = load i32, i32* %img_y.addr, align 4
  %and2 = and i32 %3, 15
  store i32 %and2, i32* %joff, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  store i32 %5, i32* %mb_nr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %6, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %8 = load i32, i32* %mb_nr, align 4
  %9 = load i32, i32* %ioff, align 4
  %sub = sub nsw i32 %9, 1
  %10 = load i32, i32* %joff, align 4
  %11 = load i32, i32* %i, align 4
  %add = add nsw i32 %10, %11
  %12 = load i32, i32* %i, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 %idxprom
  call void %7(i32 %8, i32 %sub, i32 %add, i32 0, %struct.pix_pos* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %15 = load i32, i32* %mb_nr, align 4
  %16 = load i32, i32* %ioff, align 4
  %17 = load i32, i32* %joff, align 4
  %sub3 = sub nsw i32 %17, 1
  call void %14(i32 %15, i32 %16, i32 %sub3, i32 0, %struct.pix_pos* %pix_b)
  %18 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %19 = load i32, i32* %mb_nr, align 4
  %20 = load i32, i32* %ioff, align 4
  %add4 = add nsw i32 %20, 4
  %21 = load i32, i32* %joff, align 4
  %sub5 = sub nsw i32 %21, 1
  call void %18(i32 %19, i32 %add4, i32 %sub5, i32 0, %struct.pix_pos* %pix_c)
  %22 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %23 = load i32, i32* %mb_nr, align 4
  %24 = load i32, i32* %ioff, align 4
  %sub6 = sub nsw i32 %24, 1
  %25 = load i32, i32* %joff, align 4
  %sub7 = sub nsw i32 %25, 1
  call void %22(i32 %23, i32 %sub6, i32 %sub7, i32 0, %struct.pix_pos* %pix_d)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 0
  %26 = load i32, i32* %available, align 4
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %land.rhs, label %land.end.12

land.rhs:                                         ; preds = %for.end
  %27 = load i32, i32* %ioff, align 4
  %cmp8 = icmp eq i32 %27, 4
  br i1 %cmp8, label %land.rhs.9, label %land.end

land.rhs.9:                                       ; preds = %land.rhs
  %28 = load i32, i32* %joff, align 4
  %cmp10 = icmp eq i32 %28, 4
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.9
  %29 = load i32, i32* %joff, align 4
  %cmp11 = icmp eq i32 %29, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs.9
  %30 = phi i1 [ true, %land.rhs.9 ], [ %cmp11, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.rhs
  %31 = phi i1 [ false, %land.rhs ], [ %30, %lor.end ]
  %lnot = xor i1 %31, true
  br label %land.end.12

land.end.12:                                      ; preds = %land.end, %for.end
  %32 = phi i1 [ false, %for.end ], [ %lnot, %land.end ]
  %land.ext = zext i1 %32 to i32
  %available13 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 0
  store i32 %land.ext, i32* %available13, align 4
  %33 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %33, i32 0, i32 23
  %34 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool14 = icmp ne i32 %34, 0
  br i1 %tobool14, label %if.then, label %if.else

if.then:                                          ; preds = %land.end.12
  store i32 0, i32* %i, align 4
  store i32 1, i32* %block_available_left, align 4
  br label %for.cond.15

for.cond.15:                                      ; preds = %for.inc.27, %if.then
  %35 = load i32, i32* %i, align 4
  %cmp16 = icmp slt i32 %35, 4
  br i1 %cmp16, label %for.body.17, label %for.end.29

for.body.17:                                      ; preds = %for.cond.15
  %36 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %36 to i64
  %arrayidx19 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 %idxprom18
  %available20 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx19, i32 0, i32 0
  %37 = load i32, i32* %available20, align 4
  %tobool21 = icmp ne i32 %37, 0
  br i1 %tobool21, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.17
  %38 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %38 to i64
  %arrayidx23 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 %idxprom22
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx23, i32 0, i32 1
  %39 = load i32, i32* %mb_addr, align 4
  %idxprom24 = sext i32 %39 to i64
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 63
  %41 = load i32*, i32** %intra_block, align 8
  %arrayidx25 = getelementptr inbounds i32, i32* %41, i64 %idxprom24
  %42 = load i32, i32* %arrayidx25, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body.17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %42, %cond.true ], [ 0, %cond.false ]
  %43 = load i32, i32* %block_available_left, align 4
  %and26 = and i32 %43, %cond
  store i32 %and26, i32* %block_available_left, align 4
  br label %for.inc.27

for.inc.27:                                       ; preds = %cond.end
  %44 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %44, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond.15

for.end.29:                                       ; preds = %for.cond.15
  %available30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_b, i32 0, i32 0
  %45 = load i32, i32* %available30, align 4
  %tobool31 = icmp ne i32 %45, 0
  br i1 %tobool31, label %cond.true.32, label %cond.false.37

cond.true.32:                                     ; preds = %for.end.29
  %mb_addr33 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_b, i32 0, i32 1
  %46 = load i32, i32* %mb_addr33, align 4
  %idxprom34 = sext i32 %46 to i64
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block35 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 63
  %48 = load i32*, i32** %intra_block35, align 8
  %arrayidx36 = getelementptr inbounds i32, i32* %48, i64 %idxprom34
  %49 = load i32, i32* %arrayidx36, align 4
  br label %cond.end.38

cond.false.37:                                    ; preds = %for.end.29
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.false.37, %cond.true.32
  %cond39 = phi i32 [ %49, %cond.true.32 ], [ 0, %cond.false.37 ]
  store i32 %cond39, i32* %block_available_up, align 4
  %available40 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 0
  %50 = load i32, i32* %available40, align 4
  %tobool41 = icmp ne i32 %50, 0
  br i1 %tobool41, label %cond.true.42, label %cond.false.47

cond.true.42:                                     ; preds = %cond.end.38
  %mb_addr43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 1
  %51 = load i32, i32* %mb_addr43, align 4
  %idxprom44 = sext i32 %51 to i64
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 63
  %53 = load i32*, i32** %intra_block45, align 8
  %arrayidx46 = getelementptr inbounds i32, i32* %53, i64 %idxprom44
  %54 = load i32, i32* %arrayidx46, align 4
  br label %cond.end.48

cond.false.47:                                    ; preds = %cond.end.38
  br label %cond.end.48

cond.end.48:                                      ; preds = %cond.false.47, %cond.true.42
  %cond49 = phi i32 [ %54, %cond.true.42 ], [ 0, %cond.false.47 ]
  store i32 %cond49, i32* %block_available_up_right, align 4
  %available50 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_d, i32 0, i32 0
  %55 = load i32, i32* %available50, align 4
  %tobool51 = icmp ne i32 %55, 0
  br i1 %tobool51, label %cond.true.52, label %cond.false.57

cond.true.52:                                     ; preds = %cond.end.48
  %mb_addr53 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_d, i32 0, i32 1
  %56 = load i32, i32* %mb_addr53, align 4
  %idxprom54 = sext i32 %56 to i64
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block55 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 63
  %58 = load i32*, i32** %intra_block55, align 8
  %arrayidx56 = getelementptr inbounds i32, i32* %58, i64 %idxprom54
  %59 = load i32, i32* %arrayidx56, align 4
  br label %cond.end.58

cond.false.57:                                    ; preds = %cond.end.48
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.57, %cond.true.52
  %cond59 = phi i32 [ %59, %cond.true.52 ], [ 0, %cond.false.57 ]
  store i32 %cond59, i32* %block_available_up_left, align 4
  br label %if.end

if.else:                                          ; preds = %land.end.12
  %arrayidx60 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 0
  %available61 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx60, i32 0, i32 0
  %60 = load i32, i32* %available61, align 4
  store i32 %60, i32* %block_available_left, align 4
  %available62 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_b, i32 0, i32 0
  %61 = load i32, i32* %available62, align 4
  store i32 %61, i32* %block_available_up, align 4
  %available63 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 0
  %62 = load i32, i32* %available63, align 4
  store i32 %62, i32* %block_available_up_right, align 4
  %available64 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_d, i32 0, i32 0
  %63 = load i32, i32* %available64, align 4
  store i32 %63, i32* %block_available_up_left, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end.58
  %64 = load i32, i32* %block_available_left, align 4
  %65 = load i32*, i32** %left_available.addr, align 8
  store i32 %64, i32* %65, align 4
  %66 = load i32, i32* %block_available_up, align 4
  %67 = load i32*, i32** %up_available.addr, align 8
  store i32 %66, i32* %67, align 4
  %68 = load i32, i32* %block_available_up, align 4
  %tobool65 = icmp ne i32 %68, 0
  br i1 %tobool65, label %land.lhs.true, label %land.end.69

land.lhs.true:                                    ; preds = %if.end
  %69 = load i32, i32* %block_available_left, align 4
  %tobool66 = icmp ne i32 %69, 0
  br i1 %tobool66, label %land.rhs.67, label %land.end.69

land.rhs.67:                                      ; preds = %land.lhs.true
  %70 = load i32, i32* %block_available_up_left, align 4
  %tobool68 = icmp ne i32 %70, 0
  br label %land.end.69

land.end.69:                                      ; preds = %land.rhs.67, %land.lhs.true, %if.end
  %71 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %tobool68, %land.rhs.67 ]
  %land.ext70 = zext i1 %71 to i32
  %72 = load i32*, i32** %all_available.addr, align 8
  store i32 %land.ext70, i32* %72, align 4
  %73 = load i32, i32* %img_x.addr, align 4
  %and71 = and i32 %73, 15
  store i32 %and71, i32* %i, align 4
  %74 = load i32, i32* %img_y.addr, align 4
  %and72 = and i32 %74, 15
  store i32 %and72, i32* %j, align 4
  %75 = load i32, i32* %block_available_up, align 4
  %tobool73 = icmp ne i32 %75, 0
  br i1 %tobool73, label %if.then.74, label %if.else.85

if.then.74:                                       ; preds = %land.end.69
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_b, i32 0, i32 4
  %76 = load i32, i32* %pos_x, align 4
  %idxprom75 = sext i32 %76 to i64
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_b, i32 0, i32 5
  %77 = load i32, i32* %pos_y, align 4
  %idxprom76 = sext i32 %77 to i64
  %78 = load i16**, i16*** %imgY, align 8
  %arrayidx77 = getelementptr inbounds i16*, i16** %78, i64 %idxprom76
  %79 = load i16*, i16** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i16, i16* %79, i64 %idxprom75
  store i16* %arrayidx78, i16** %imgYpel, align 8
  %80 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %80, i32 1
  store i16* %incdec.ptr, i16** %imgYpel, align 8
  %81 = load i16, i16* %80, align 2
  %arrayidx79 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  store i16 %81, i16* %arrayidx79, align 2
  %82 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr80 = getelementptr inbounds i16, i16* %82, i32 1
  store i16* %incdec.ptr80, i16** %imgYpel, align 8
  %83 = load i16, i16* %82, align 2
  %arrayidx81 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  store i16 %83, i16* %arrayidx81, align 2
  %84 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr82 = getelementptr inbounds i16, i16* %84, i32 1
  store i16* %incdec.ptr82, i16** %imgYpel, align 8
  %85 = load i16, i16* %84, align 2
  %arrayidx83 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  store i16 %85, i16* %arrayidx83, align 2
  %86 = load i16*, i16** %imgYpel, align 8
  %87 = load i16, i16* %86, align 2
  %arrayidx84 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  store i16 %87, i16* %arrayidx84, align 2
  br label %if.end.90

if.else.85:                                       ; preds = %land.end.69
  %88 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value_luma = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %88, i32 0, i32 154
  %89 = load i32, i32* %dc_pred_value_luma, align 4
  %conv = trunc i32 %89 to i16
  %arrayidx86 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  store i16 %conv, i16* %arrayidx86, align 2
  %arrayidx87 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  store i16 %conv, i16* %arrayidx87, align 2
  %arrayidx88 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  store i16 %conv, i16* %arrayidx88, align 2
  %arrayidx89 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  store i16 %conv, i16* %arrayidx89, align 2
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.85, %if.then.74
  %90 = load i32, i32* %block_available_up_right, align 4
  %tobool91 = icmp ne i32 %90, 0
  br i1 %tobool91, label %if.then.92, label %if.else.106

if.then.92:                                       ; preds = %if.end.90
  %pos_x93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 4
  %91 = load i32, i32* %pos_x93, align 4
  %idxprom94 = sext i32 %91 to i64
  %pos_y95 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_c, i32 0, i32 5
  %92 = load i32, i32* %pos_y95, align 4
  %idxprom96 = sext i32 %92 to i64
  %93 = load i16**, i16*** %imgY, align 8
  %arrayidx97 = getelementptr inbounds i16*, i16** %93, i64 %idxprom96
  %94 = load i16*, i16** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i16, i16* %94, i64 %idxprom94
  store i16* %arrayidx98, i16** %imgYpel, align 8
  %95 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr99 = getelementptr inbounds i16, i16* %95, i32 1
  store i16* %incdec.ptr99, i16** %imgYpel, align 8
  %96 = load i16, i16* %95, align 2
  %arrayidx100 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  store i16 %96, i16* %arrayidx100, align 2
  %97 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr101 = getelementptr inbounds i16, i16* %97, i32 1
  store i16* %incdec.ptr101, i16** %imgYpel, align 8
  %98 = load i16, i16* %97, align 2
  %arrayidx102 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  store i16 %98, i16* %arrayidx102, align 2
  %99 = load i16*, i16** %imgYpel, align 8
  %incdec.ptr103 = getelementptr inbounds i16, i16* %99, i32 1
  store i16* %incdec.ptr103, i16** %imgYpel, align 8
  %100 = load i16, i16* %99, align 2
  %arrayidx104 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  store i16 %100, i16* %arrayidx104, align 2
  %101 = load i16*, i16** %imgYpel, align 8
  %102 = load i16, i16* %101, align 2
  %arrayidx105 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 8
  store i16 %102, i16* %arrayidx105, align 2
  br label %if.end.112

if.else.106:                                      ; preds = %if.end.90
  %arrayidx107 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %103 = load i16, i16* %arrayidx107, align 2
  %arrayidx108 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 8
  store i16 %103, i16* %arrayidx108, align 2
  %arrayidx109 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  store i16 %103, i16* %arrayidx109, align 2
  %arrayidx110 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  store i16 %103, i16* %arrayidx110, align 2
  %arrayidx111 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  store i16 %103, i16* %arrayidx111, align 2
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.106, %if.then.92
  %104 = load i32, i32* %block_available_left, align 4
  %tobool113 = icmp ne i32 %104, 0
  br i1 %tobool113, label %if.then.114, label %if.else.151

if.then.114:                                      ; preds = %if.end.112
  %arrayidx115 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 0
  %pos_x116 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx115, i32 0, i32 4
  %105 = load i32, i32* %pos_x116, align 4
  %idxprom117 = sext i32 %105 to i64
  %arrayidx118 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 0
  %pos_y119 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx118, i32 0, i32 5
  %106 = load i32, i32* %pos_y119, align 4
  %idxprom120 = sext i32 %106 to i64
  %107 = load i16**, i16*** %imgY, align 8
  %arrayidx121 = getelementptr inbounds i16*, i16** %107, i64 %idxprom120
  %108 = load i16*, i16** %arrayidx121, align 8
  %arrayidx122 = getelementptr inbounds i16, i16* %108, i64 %idxprom117
  %109 = load i16, i16* %arrayidx122, align 2
  %arrayidx123 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  store i16 %109, i16* %arrayidx123, align 2
  %arrayidx124 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 1
  %pos_x125 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx124, i32 0, i32 4
  %110 = load i32, i32* %pos_x125, align 4
  %idxprom126 = sext i32 %110 to i64
  %arrayidx127 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 1
  %pos_y128 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx127, i32 0, i32 5
  %111 = load i32, i32* %pos_y128, align 4
  %idxprom129 = sext i32 %111 to i64
  %112 = load i16**, i16*** %imgY, align 8
  %arrayidx130 = getelementptr inbounds i16*, i16** %112, i64 %idxprom129
  %113 = load i16*, i16** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i16, i16* %113, i64 %idxprom126
  %114 = load i16, i16* %arrayidx131, align 2
  %arrayidx132 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  store i16 %114, i16* %arrayidx132, align 2
  %arrayidx133 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 2
  %pos_x134 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx133, i32 0, i32 4
  %115 = load i32, i32* %pos_x134, align 4
  %idxprom135 = sext i32 %115 to i64
  %arrayidx136 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 2
  %pos_y137 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx136, i32 0, i32 5
  %116 = load i32, i32* %pos_y137, align 4
  %idxprom138 = sext i32 %116 to i64
  %117 = load i16**, i16*** %imgY, align 8
  %arrayidx139 = getelementptr inbounds i16*, i16** %117, i64 %idxprom138
  %118 = load i16*, i16** %arrayidx139, align 8
  %arrayidx140 = getelementptr inbounds i16, i16* %118, i64 %idxprom135
  %119 = load i16, i16* %arrayidx140, align 2
  %arrayidx141 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  store i16 %119, i16* %arrayidx141, align 2
  %arrayidx142 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 3
  %pos_x143 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx142, i32 0, i32 4
  %120 = load i32, i32* %pos_x143, align 4
  %idxprom144 = sext i32 %120 to i64
  %arrayidx145 = getelementptr inbounds [4 x %struct.pix_pos], [4 x %struct.pix_pos]* %pix_a, i32 0, i64 3
  %pos_y146 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx145, i32 0, i32 5
  %121 = load i32, i32* %pos_y146, align 4
  %idxprom147 = sext i32 %121 to i64
  %122 = load i16**, i16*** %imgY, align 8
  %arrayidx148 = getelementptr inbounds i16*, i16** %122, i64 %idxprom147
  %123 = load i16*, i16** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i16, i16* %123, i64 %idxprom144
  %124 = load i16, i16* %arrayidx149, align 2
  %arrayidx150 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  store i16 %124, i16* %arrayidx150, align 2
  br label %if.end.158

if.else.151:                                      ; preds = %if.end.112
  %125 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value_luma152 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %125, i32 0, i32 154
  %126 = load i32, i32* %dc_pred_value_luma152, align 4
  %conv153 = trunc i32 %126 to i16
  %arrayidx154 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  store i16 %conv153, i16* %arrayidx154, align 2
  %arrayidx155 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  store i16 %conv153, i16* %arrayidx155, align 2
  %arrayidx156 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  store i16 %conv153, i16* %arrayidx156, align 2
  %arrayidx157 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  store i16 %conv153, i16* %arrayidx157, align 2
  br label %if.end.158

if.end.158:                                       ; preds = %if.else.151, %if.then.114
  %127 = load i32, i32* %block_available_up_left, align 4
  %tobool159 = icmp ne i32 %127, 0
  br i1 %tobool159, label %if.then.160, label %if.else.168

if.then.160:                                      ; preds = %if.end.158
  %pos_x161 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_d, i32 0, i32 4
  %128 = load i32, i32* %pos_x161, align 4
  %idxprom162 = sext i32 %128 to i64
  %pos_y163 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix_d, i32 0, i32 5
  %129 = load i32, i32* %pos_y163, align 4
  %idxprom164 = sext i32 %129 to i64
  %130 = load i16**, i16*** %imgY, align 8
  %arrayidx165 = getelementptr inbounds i16*, i16** %130, i64 %idxprom164
  %131 = load i16*, i16** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds i16, i16* %131, i64 %idxprom162
  %132 = load i16, i16* %arrayidx166, align 2
  %arrayidx167 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  store i16 %132, i16* %arrayidx167, align 2
  br label %if.end.172

if.else.168:                                      ; preds = %if.end.158
  %133 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value_luma169 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %133, i32 0, i32 154
  %134 = load i32, i32* %dc_pred_value_luma169, align 4
  %conv170 = trunc i32 %134 to i16
  %arrayidx171 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  store i16 %conv170, i16* %arrayidx171, align 2
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.168, %if.then.160
  store i32 0, i32* %i, align 4
  br label %for.cond.173

for.cond.173:                                     ; preds = %for.inc.181, %if.end.172
  %135 = load i32, i32* %i, align 4
  %cmp174 = icmp slt i32 %135, 9
  br i1 %cmp174, label %for.body.176, label %for.end.183

for.body.176:                                     ; preds = %for.cond.173
  %136 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %136 to i64
  %137 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %137, i32 0, i32 47
  %arrayidx178 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr, i32 0, i64 %idxprom177
  %arrayidx179 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx178, i32 0, i64 0
  %arrayidx180 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx179, i32 0, i64 0
  store i16 -1, i16* %arrayidx180, align 2
  br label %for.inc.181

for.inc.181:                                      ; preds = %for.body.176
  %138 = load i32, i32* %i, align 4
  %inc182 = add nsw i32 %138, 1
  store i32 %inc182, i32* %i, align 4
  br label %for.cond.173

for.end.183:                                      ; preds = %for.cond.173
  store i32 0, i32* %s0, align 4
  %139 = load i32, i32* %block_available_up, align 4
  %tobool184 = icmp ne i32 %139, 0
  br i1 %tobool184, label %land.lhs.true.185, label %if.else.212

land.lhs.true.185:                                ; preds = %for.end.183
  %140 = load i32, i32* %block_available_left, align 4
  %tobool186 = icmp ne i32 %140, 0
  br i1 %tobool186, label %if.then.187, label %if.else.212

if.then.187:                                      ; preds = %land.lhs.true.185
  %arrayidx188 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %141 = load i16, i16* %arrayidx188, align 2
  %conv189 = zext i16 %141 to i32
  %arrayidx190 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %142 = load i16, i16* %arrayidx190, align 2
  %conv191 = zext i16 %142 to i32
  %add192 = add nsw i32 %conv189, %conv191
  %arrayidx193 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %143 = load i16, i16* %arrayidx193, align 2
  %conv194 = zext i16 %143 to i32
  %add195 = add nsw i32 %add192, %conv194
  %arrayidx196 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %144 = load i16, i16* %arrayidx196, align 2
  %conv197 = zext i16 %144 to i32
  %add198 = add nsw i32 %add195, %conv197
  %arrayidx199 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %145 = load i16, i16* %arrayidx199, align 2
  %conv200 = zext i16 %145 to i32
  %add201 = add nsw i32 %add198, %conv200
  %arrayidx202 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %146 = load i16, i16* %arrayidx202, align 2
  %conv203 = zext i16 %146 to i32
  %add204 = add nsw i32 %add201, %conv203
  %arrayidx205 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %147 = load i16, i16* %arrayidx205, align 2
  %conv206 = zext i16 %147 to i32
  %add207 = add nsw i32 %add204, %conv206
  %arrayidx208 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %148 = load i16, i16* %arrayidx208, align 2
  %conv209 = zext i16 %148 to i32
  %add210 = add nsw i32 %add207, %conv209
  %add211 = add nsw i32 %add210, 4
  %shr = ashr i32 %add211, 3
  store i32 %shr, i32* %s0, align 4
  br label %if.end.252

if.else.212:                                      ; preds = %land.lhs.true.185, %for.end.183
  %149 = load i32, i32* %block_available_up, align 4
  %tobool213 = icmp ne i32 %149, 0
  br i1 %tobool213, label %if.else.230, label %land.lhs.true.214

land.lhs.true.214:                                ; preds = %if.else.212
  %150 = load i32, i32* %block_available_left, align 4
  %tobool215 = icmp ne i32 %150, 0
  br i1 %tobool215, label %if.then.216, label %if.else.230

if.then.216:                                      ; preds = %land.lhs.true.214
  %arrayidx217 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %151 = load i16, i16* %arrayidx217, align 2
  %conv218 = zext i16 %151 to i32
  %arrayidx219 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %152 = load i16, i16* %arrayidx219, align 2
  %conv220 = zext i16 %152 to i32
  %add221 = add nsw i32 %conv218, %conv220
  %arrayidx222 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %153 = load i16, i16* %arrayidx222, align 2
  %conv223 = zext i16 %153 to i32
  %add224 = add nsw i32 %add221, %conv223
  %arrayidx225 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %154 = load i16, i16* %arrayidx225, align 2
  %conv226 = zext i16 %154 to i32
  %add227 = add nsw i32 %add224, %conv226
  %add228 = add nsw i32 %add227, 2
  %shr229 = ashr i32 %add228, 2
  store i32 %shr229, i32* %s0, align 4
  br label %if.end.251

if.else.230:                                      ; preds = %land.lhs.true.214, %if.else.212
  %155 = load i32, i32* %block_available_up, align 4
  %tobool231 = icmp ne i32 %155, 0
  br i1 %tobool231, label %land.lhs.true.232, label %if.else.248

land.lhs.true.232:                                ; preds = %if.else.230
  %156 = load i32, i32* %block_available_left, align 4
  %tobool233 = icmp ne i32 %156, 0
  br i1 %tobool233, label %if.else.248, label %if.then.234

if.then.234:                                      ; preds = %land.lhs.true.232
  %arrayidx235 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %157 = load i16, i16* %arrayidx235, align 2
  %conv236 = zext i16 %157 to i32
  %arrayidx237 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %158 = load i16, i16* %arrayidx237, align 2
  %conv238 = zext i16 %158 to i32
  %add239 = add nsw i32 %conv236, %conv238
  %arrayidx240 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %159 = load i16, i16* %arrayidx240, align 2
  %conv241 = zext i16 %159 to i32
  %add242 = add nsw i32 %add239, %conv241
  %arrayidx243 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %160 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %160 to i32
  %add245 = add nsw i32 %add242, %conv244
  %add246 = add nsw i32 %add245, 2
  %shr247 = ashr i32 %add246, 2
  store i32 %shr247, i32* %s0, align 4
  br label %if.end.250

if.else.248:                                      ; preds = %land.lhs.true.232, %if.else.230
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value_luma249 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 154
  %162 = load i32, i32* %dc_pred_value_luma249, align 4
  store i32 %162, i32* %s0, align 4
  br label %if.end.250

if.end.250:                                       ; preds = %if.else.248, %if.then.234
  br label %if.end.251

if.end.251:                                       ; preds = %if.end.250, %if.then.216
  br label %if.end.252

if.end.252:                                       ; preds = %if.end.251, %if.then.187
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr253 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 47
  %arrayidx254 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr253, i32 0, i64 2
  %arraydecay = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx254, i32 0, i32 0
  store [16 x i16]* %arraydecay, [16 x i16]** %cur_pred, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.255

for.cond.255:                                     ; preds = %for.inc.271, %if.end.252
  %164 = load i32, i32* %j, align 4
  %cmp256 = icmp slt i32 %164, 4
  br i1 %cmp256, label %for.body.258, label %for.end.273

for.body.258:                                     ; preds = %for.cond.255
  store i32 0, i32* %i, align 4
  br label %for.cond.259

for.cond.259:                                     ; preds = %for.inc.268, %for.body.258
  %165 = load i32, i32* %i, align 4
  %cmp260 = icmp slt i32 %165, 4
  br i1 %cmp260, label %for.body.262, label %for.end.270

for.body.262:                                     ; preds = %for.cond.259
  %166 = load i32, i32* %s0, align 4
  %conv263 = trunc i32 %166 to i16
  %167 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %167 to i64
  %168 = load i32, i32* %j, align 4
  %idxprom265 = sext i32 %168 to i64
  %169 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx266 = getelementptr inbounds [16 x i16], [16 x i16]* %169, i64 %idxprom265
  %arrayidx267 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx266, i32 0, i64 %idxprom264
  store i16 %conv263, i16* %arrayidx267, align 2
  br label %for.inc.268

for.inc.268:                                      ; preds = %for.body.262
  %170 = load i32, i32* %i, align 4
  %inc269 = add nsw i32 %170, 1
  store i32 %inc269, i32* %i, align 4
  br label %for.cond.259

for.end.270:                                      ; preds = %for.cond.259
  br label %for.inc.271

for.inc.271:                                      ; preds = %for.end.270
  %171 = load i32, i32* %j, align 4
  %inc272 = add nsw i32 %171, 1
  store i32 %inc272, i32* %j, align 4
  br label %for.cond.255

for.end.273:                                      ; preds = %for.cond.255
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr274 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 47
  %arrayidx275 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr274, i32 0, i64 0
  %arraydecay276 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx275, i32 0, i32 0
  store [16 x i16]* %arraydecay276, [16 x i16]** %cur_pred, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.296, %for.end.273
  %173 = load i32, i32* %i, align 4
  %cmp278 = icmp slt i32 %173, 4
  br i1 %cmp278, label %for.body.280, label %for.end.298

for.body.280:                                     ; preds = %for.cond.277
  %174 = load i32, i32* %i, align 4
  %idxprom281 = sext i32 %174 to i64
  %arrayidx282 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %arrayidx283 = getelementptr inbounds i16, i16* %arrayidx282, i64 %idxprom281
  %175 = load i16, i16* %arrayidx283, align 2
  %176 = load i32, i32* %i, align 4
  %idxprom284 = sext i32 %176 to i64
  %177 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx285 = getelementptr inbounds [16 x i16], [16 x i16]* %177, i64 3
  %arrayidx286 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx285, i32 0, i64 %idxprom284
  store i16 %175, i16* %arrayidx286, align 2
  %178 = load i32, i32* %i, align 4
  %idxprom287 = sext i32 %178 to i64
  %179 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx288 = getelementptr inbounds [16 x i16], [16 x i16]* %179, i64 2
  %arrayidx289 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx288, i32 0, i64 %idxprom287
  store i16 %175, i16* %arrayidx289, align 2
  %180 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %180 to i64
  %181 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx291 = getelementptr inbounds [16 x i16], [16 x i16]* %181, i64 1
  %arrayidx292 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx291, i32 0, i64 %idxprom290
  store i16 %175, i16* %arrayidx292, align 2
  %182 = load i32, i32* %i, align 4
  %idxprom293 = sext i32 %182 to i64
  %183 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx294 = getelementptr inbounds [16 x i16], [16 x i16]* %183, i64 0
  %arrayidx295 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx294, i32 0, i64 %idxprom293
  store i16 %175, i16* %arrayidx295, align 2
  br label %for.inc.296

for.inc.296:                                      ; preds = %for.body.280
  %184 = load i32, i32* %i, align 4
  %inc297 = add nsw i32 %184, 1
  store i32 %inc297, i32* %i, align 4
  br label %for.cond.277

for.end.298:                                      ; preds = %for.cond.277
  %185 = load i32, i32* %block_available_up, align 4
  %tobool299 = icmp ne i32 %185, 0
  br i1 %tobool299, label %if.end.303, label %if.then.300

if.then.300:                                      ; preds = %for.end.298
  %186 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx301 = getelementptr inbounds [16 x i16], [16 x i16]* %186, i64 0
  %arrayidx302 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx301, i32 0, i64 0
  store i16 -1, i16* %arrayidx302, align 2
  br label %if.end.303

if.end.303:                                       ; preds = %if.then.300, %for.end.298
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr304 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 47
  %arrayidx305 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr304, i32 0, i64 1
  %arraydecay306 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx305, i32 0, i32 0
  store [16 x i16]* %arraydecay306, [16 x i16]** %cur_pred, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.307

for.cond.307:                                     ; preds = %for.inc.326, %if.end.303
  %188 = load i32, i32* %i, align 4
  %cmp308 = icmp slt i32 %188, 4
  br i1 %cmp308, label %for.body.310, label %for.end.328

for.body.310:                                     ; preds = %for.cond.307
  %189 = load i32, i32* %i, align 4
  %idxprom311 = sext i32 %189 to i64
  %arrayidx312 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %arrayidx313 = getelementptr inbounds i16, i16* %arrayidx312, i64 %idxprom311
  %190 = load i16, i16* %arrayidx313, align 2
  %191 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %191 to i64
  %192 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx315 = getelementptr inbounds [16 x i16], [16 x i16]* %192, i64 %idxprom314
  %arrayidx316 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx315, i32 0, i64 3
  store i16 %190, i16* %arrayidx316, align 2
  %193 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %193 to i64
  %194 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx318 = getelementptr inbounds [16 x i16], [16 x i16]* %194, i64 %idxprom317
  %arrayidx319 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx318, i32 0, i64 2
  store i16 %190, i16* %arrayidx319, align 2
  %195 = load i32, i32* %i, align 4
  %idxprom320 = sext i32 %195 to i64
  %196 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* %196, i64 %idxprom320
  %arrayidx322 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx321, i32 0, i64 1
  store i16 %190, i16* %arrayidx322, align 2
  %197 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %197 to i64
  %198 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* %198, i64 %idxprom323
  %arrayidx325 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx324, i32 0, i64 0
  store i16 %190, i16* %arrayidx325, align 2
  br label %for.inc.326

for.inc.326:                                      ; preds = %for.body.310
  %199 = load i32, i32* %i, align 4
  %inc327 = add nsw i32 %199, 1
  store i32 %inc327, i32* %i, align 4
  br label %for.cond.307

for.end.328:                                      ; preds = %for.cond.307
  %200 = load i32, i32* %block_available_left, align 4
  %tobool329 = icmp ne i32 %200, 0
  br i1 %tobool329, label %if.end.333, label %if.then.330

if.then.330:                                      ; preds = %for.end.328
  %201 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx331 = getelementptr inbounds [16 x i16], [16 x i16]* %201, i64 0
  %arrayidx332 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx331, i32 0, i64 0
  store i16 -1, i16* %arrayidx332, align 2
  br label %if.end.333

if.end.333:                                       ; preds = %if.then.330, %for.end.328
  %202 = load i32, i32* %block_available_up, align 4
  %tobool334 = icmp ne i32 %202, 0
  br i1 %tobool334, label %if.then.335, label %if.end.586

if.then.335:                                      ; preds = %if.end.333
  %203 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr336 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %203, i32 0, i32 47
  %arrayidx337 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr336, i32 0, i64 3
  %arraydecay338 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx337, i32 0, i32 0
  store [16 x i16]* %arraydecay338, [16 x i16]** %cur_pred, align 8
  %arrayidx339 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %204 = load i16, i16* %arrayidx339, align 2
  %conv340 = zext i16 %204 to i32
  %arrayidx341 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %205 = load i16, i16* %arrayidx341, align 2
  %conv342 = zext i16 %205 to i32
  %add343 = add nsw i32 %conv340, %conv342
  %arrayidx344 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %206 = load i16, i16* %arrayidx344, align 2
  %conv345 = zext i16 %206 to i32
  %mul = mul nsw i32 2, %conv345
  %add346 = add nsw i32 %add343, %mul
  %add347 = add nsw i32 %add346, 2
  %shr348 = ashr i32 %add347, 2
  %conv349 = trunc i32 %shr348 to i16
  %207 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx350 = getelementptr inbounds [16 x i16], [16 x i16]* %207, i64 0
  %arrayidx351 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx350, i32 0, i64 0
  store i16 %conv349, i16* %arrayidx351, align 2
  %arrayidx352 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %208 = load i16, i16* %arrayidx352, align 2
  %conv353 = zext i16 %208 to i32
  %arrayidx354 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %209 = load i16, i16* %arrayidx354, align 2
  %conv355 = zext i16 %209 to i32
  %add356 = add nsw i32 %conv353, %conv355
  %arrayidx357 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %210 = load i16, i16* %arrayidx357, align 2
  %conv358 = zext i16 %210 to i32
  %mul359 = mul nsw i32 2, %conv358
  %add360 = add nsw i32 %add356, %mul359
  %add361 = add nsw i32 %add360, 2
  %shr362 = ashr i32 %add361, 2
  %conv363 = trunc i32 %shr362 to i16
  %211 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx364 = getelementptr inbounds [16 x i16], [16 x i16]* %211, i64 1
  %arrayidx365 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx364, i32 0, i64 0
  store i16 %conv363, i16* %arrayidx365, align 2
  %212 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx366 = getelementptr inbounds [16 x i16], [16 x i16]* %212, i64 0
  %arrayidx367 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx366, i32 0, i64 1
  store i16 %conv363, i16* %arrayidx367, align 2
  %arrayidx368 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %213 = load i16, i16* %arrayidx368, align 2
  %conv369 = zext i16 %213 to i32
  %arrayidx370 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %214 = load i16, i16* %arrayidx370, align 2
  %conv371 = zext i16 %214 to i32
  %add372 = add nsw i32 %conv369, %conv371
  %arrayidx373 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %215 = load i16, i16* %arrayidx373, align 2
  %conv374 = zext i16 %215 to i32
  %mul375 = mul nsw i32 2, %conv374
  %add376 = add nsw i32 %add372, %mul375
  %add377 = add nsw i32 %add376, 2
  %shr378 = ashr i32 %add377, 2
  %conv379 = trunc i32 %shr378 to i16
  %216 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx380 = getelementptr inbounds [16 x i16], [16 x i16]* %216, i64 2
  %arrayidx381 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx380, i32 0, i64 0
  store i16 %conv379, i16* %arrayidx381, align 2
  %217 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx382 = getelementptr inbounds [16 x i16], [16 x i16]* %217, i64 1
  %arrayidx383 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx382, i32 0, i64 1
  store i16 %conv379, i16* %arrayidx383, align 2
  %218 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx384 = getelementptr inbounds [16 x i16], [16 x i16]* %218, i64 0
  %arrayidx385 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx384, i32 0, i64 2
  store i16 %conv379, i16* %arrayidx385, align 2
  %arrayidx386 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %219 = load i16, i16* %arrayidx386, align 2
  %conv387 = zext i16 %219 to i32
  %arrayidx388 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %220 = load i16, i16* %arrayidx388, align 2
  %conv389 = zext i16 %220 to i32
  %add390 = add nsw i32 %conv387, %conv389
  %arrayidx391 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %221 = load i16, i16* %arrayidx391, align 2
  %conv392 = zext i16 %221 to i32
  %mul393 = mul nsw i32 2, %conv392
  %add394 = add nsw i32 %add390, %mul393
  %add395 = add nsw i32 %add394, 2
  %shr396 = ashr i32 %add395, 2
  %conv397 = trunc i32 %shr396 to i16
  %222 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* %222, i64 3
  %arrayidx399 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx398, i32 0, i64 0
  store i16 %conv397, i16* %arrayidx399, align 2
  %223 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx400 = getelementptr inbounds [16 x i16], [16 x i16]* %223, i64 2
  %arrayidx401 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx400, i32 0, i64 1
  store i16 %conv397, i16* %arrayidx401, align 2
  %224 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* %224, i64 1
  %arrayidx403 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx402, i32 0, i64 2
  store i16 %conv397, i16* %arrayidx403, align 2
  %225 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx404 = getelementptr inbounds [16 x i16], [16 x i16]* %225, i64 0
  %arrayidx405 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx404, i32 0, i64 3
  store i16 %conv397, i16* %arrayidx405, align 2
  %arrayidx406 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %226 = load i16, i16* %arrayidx406, align 2
  %conv407 = zext i16 %226 to i32
  %arrayidx408 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  %227 = load i16, i16* %arrayidx408, align 2
  %conv409 = zext i16 %227 to i32
  %add410 = add nsw i32 %conv407, %conv409
  %arrayidx411 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %228 = load i16, i16* %arrayidx411, align 2
  %conv412 = zext i16 %228 to i32
  %mul413 = mul nsw i32 2, %conv412
  %add414 = add nsw i32 %add410, %mul413
  %add415 = add nsw i32 %add414, 2
  %shr416 = ashr i32 %add415, 2
  %conv417 = trunc i32 %shr416 to i16
  %229 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx418 = getelementptr inbounds [16 x i16], [16 x i16]* %229, i64 3
  %arrayidx419 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx418, i32 0, i64 1
  store i16 %conv417, i16* %arrayidx419, align 2
  %230 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx420 = getelementptr inbounds [16 x i16], [16 x i16]* %230, i64 2
  %arrayidx421 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx420, i32 0, i64 2
  store i16 %conv417, i16* %arrayidx421, align 2
  %231 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx422 = getelementptr inbounds [16 x i16], [16 x i16]* %231, i64 1
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx422, i32 0, i64 3
  store i16 %conv417, i16* %arrayidx423, align 2
  %arrayidx424 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %232 = load i16, i16* %arrayidx424, align 2
  %conv425 = zext i16 %232 to i32
  %arrayidx426 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 8
  %233 = load i16, i16* %arrayidx426, align 2
  %conv427 = zext i16 %233 to i32
  %add428 = add nsw i32 %conv425, %conv427
  %arrayidx429 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  %234 = load i16, i16* %arrayidx429, align 2
  %conv430 = zext i16 %234 to i32
  %mul431 = mul nsw i32 2, %conv430
  %add432 = add nsw i32 %add428, %mul431
  %add433 = add nsw i32 %add432, 2
  %shr434 = ashr i32 %add433, 2
  %conv435 = trunc i32 %shr434 to i16
  %235 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx436 = getelementptr inbounds [16 x i16], [16 x i16]* %235, i64 3
  %arrayidx437 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx436, i32 0, i64 2
  store i16 %conv435, i16* %arrayidx437, align 2
  %236 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx438 = getelementptr inbounds [16 x i16], [16 x i16]* %236, i64 2
  %arrayidx439 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx438, i32 0, i64 3
  store i16 %conv435, i16* %arrayidx439, align 2
  %arrayidx440 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  %237 = load i16, i16* %arrayidx440, align 2
  %conv441 = zext i16 %237 to i32
  %arrayidx442 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 8
  %238 = load i16, i16* %arrayidx442, align 2
  %conv443 = zext i16 %238 to i32
  %mul444 = mul nsw i32 3, %conv443
  %add445 = add nsw i32 %conv441, %mul444
  %add446 = add nsw i32 %add445, 2
  %shr447 = ashr i32 %add446, 2
  %conv448 = trunc i32 %shr447 to i16
  %239 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx449 = getelementptr inbounds [16 x i16], [16 x i16]* %239, i64 3
  %arrayidx450 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx449, i32 0, i64 3
  store i16 %conv448, i16* %arrayidx450, align 2
  %240 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr451 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %240, i32 0, i32 47
  %arrayidx452 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr451, i32 0, i64 7
  %arraydecay453 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx452, i32 0, i32 0
  store [16 x i16]* %arraydecay453, [16 x i16]** %cur_pred, align 8
  %arrayidx454 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %241 = load i16, i16* %arrayidx454, align 2
  %conv455 = zext i16 %241 to i32
  %arrayidx456 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %242 = load i16, i16* %arrayidx456, align 2
  %conv457 = zext i16 %242 to i32
  %add458 = add nsw i32 %conv455, %conv457
  %add459 = add nsw i32 %add458, 1
  %shr460 = ashr i32 %add459, 1
  %conv461 = trunc i32 %shr460 to i16
  %243 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx462 = getelementptr inbounds [16 x i16], [16 x i16]* %243, i64 0
  %arrayidx463 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx462, i32 0, i64 0
  store i16 %conv461, i16* %arrayidx463, align 2
  %arrayidx464 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %244 = load i16, i16* %arrayidx464, align 2
  %conv465 = zext i16 %244 to i32
  %arrayidx466 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %245 = load i16, i16* %arrayidx466, align 2
  %conv467 = zext i16 %245 to i32
  %add468 = add nsw i32 %conv465, %conv467
  %add469 = add nsw i32 %add468, 1
  %shr470 = ashr i32 %add469, 1
  %conv471 = trunc i32 %shr470 to i16
  %246 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx472 = getelementptr inbounds [16 x i16], [16 x i16]* %246, i64 2
  %arrayidx473 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx472, i32 0, i64 0
  store i16 %conv471, i16* %arrayidx473, align 2
  %247 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx474 = getelementptr inbounds [16 x i16], [16 x i16]* %247, i64 0
  %arrayidx475 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx474, i32 0, i64 1
  store i16 %conv471, i16* %arrayidx475, align 2
  %arrayidx476 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %248 = load i16, i16* %arrayidx476, align 2
  %conv477 = zext i16 %248 to i32
  %arrayidx478 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %249 = load i16, i16* %arrayidx478, align 2
  %conv479 = zext i16 %249 to i32
  %add480 = add nsw i32 %conv477, %conv479
  %add481 = add nsw i32 %add480, 1
  %shr482 = ashr i32 %add481, 1
  %conv483 = trunc i32 %shr482 to i16
  %250 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx484 = getelementptr inbounds [16 x i16], [16 x i16]* %250, i64 2
  %arrayidx485 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx484, i32 0, i64 1
  store i16 %conv483, i16* %arrayidx485, align 2
  %251 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx486 = getelementptr inbounds [16 x i16], [16 x i16]* %251, i64 0
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx486, i32 0, i64 2
  store i16 %conv483, i16* %arrayidx487, align 2
  %arrayidx488 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %252 = load i16, i16* %arrayidx488, align 2
  %conv489 = zext i16 %252 to i32
  %arrayidx490 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %253 = load i16, i16* %arrayidx490, align 2
  %conv491 = zext i16 %253 to i32
  %add492 = add nsw i32 %conv489, %conv491
  %add493 = add nsw i32 %add492, 1
  %shr494 = ashr i32 %add493, 1
  %conv495 = trunc i32 %shr494 to i16
  %254 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx496 = getelementptr inbounds [16 x i16], [16 x i16]* %254, i64 2
  %arrayidx497 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx496, i32 0, i64 2
  store i16 %conv495, i16* %arrayidx497, align 2
  %255 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx498 = getelementptr inbounds [16 x i16], [16 x i16]* %255, i64 0
  %arrayidx499 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx498, i32 0, i64 3
  store i16 %conv495, i16* %arrayidx499, align 2
  %arrayidx500 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %256 = load i16, i16* %arrayidx500, align 2
  %conv501 = zext i16 %256 to i32
  %arrayidx502 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %257 = load i16, i16* %arrayidx502, align 2
  %conv503 = zext i16 %257 to i32
  %add504 = add nsw i32 %conv501, %conv503
  %add505 = add nsw i32 %add504, 1
  %shr506 = ashr i32 %add505, 1
  %conv507 = trunc i32 %shr506 to i16
  %258 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx508 = getelementptr inbounds [16 x i16], [16 x i16]* %258, i64 2
  %arrayidx509 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx508, i32 0, i64 3
  store i16 %conv507, i16* %arrayidx509, align 2
  %arrayidx510 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %259 = load i16, i16* %arrayidx510, align 2
  %conv511 = zext i16 %259 to i32
  %arrayidx512 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %260 = load i16, i16* %arrayidx512, align 2
  %conv513 = zext i16 %260 to i32
  %mul514 = mul nsw i32 2, %conv513
  %add515 = add nsw i32 %conv511, %mul514
  %arrayidx516 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %261 = load i16, i16* %arrayidx516, align 2
  %conv517 = zext i16 %261 to i32
  %add518 = add nsw i32 %add515, %conv517
  %add519 = add nsw i32 %add518, 2
  %shr520 = ashr i32 %add519, 2
  %conv521 = trunc i32 %shr520 to i16
  %262 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx522 = getelementptr inbounds [16 x i16], [16 x i16]* %262, i64 1
  %arrayidx523 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx522, i32 0, i64 0
  store i16 %conv521, i16* %arrayidx523, align 2
  %arrayidx524 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %263 = load i16, i16* %arrayidx524, align 2
  %conv525 = zext i16 %263 to i32
  %arrayidx526 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %264 = load i16, i16* %arrayidx526, align 2
  %conv527 = zext i16 %264 to i32
  %mul528 = mul nsw i32 2, %conv527
  %add529 = add nsw i32 %conv525, %mul528
  %arrayidx530 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %265 = load i16, i16* %arrayidx530, align 2
  %conv531 = zext i16 %265 to i32
  %add532 = add nsw i32 %add529, %conv531
  %add533 = add nsw i32 %add532, 2
  %shr534 = ashr i32 %add533, 2
  %conv535 = trunc i32 %shr534 to i16
  %266 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx536 = getelementptr inbounds [16 x i16], [16 x i16]* %266, i64 3
  %arrayidx537 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx536, i32 0, i64 0
  store i16 %conv535, i16* %arrayidx537, align 2
  %267 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx538 = getelementptr inbounds [16 x i16], [16 x i16]* %267, i64 1
  %arrayidx539 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx538, i32 0, i64 1
  store i16 %conv535, i16* %arrayidx539, align 2
  %arrayidx540 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %268 = load i16, i16* %arrayidx540, align 2
  %conv541 = zext i16 %268 to i32
  %arrayidx542 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %269 = load i16, i16* %arrayidx542, align 2
  %conv543 = zext i16 %269 to i32
  %mul544 = mul nsw i32 2, %conv543
  %add545 = add nsw i32 %conv541, %mul544
  %arrayidx546 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %270 = load i16, i16* %arrayidx546, align 2
  %conv547 = zext i16 %270 to i32
  %add548 = add nsw i32 %add545, %conv547
  %add549 = add nsw i32 %add548, 2
  %shr550 = ashr i32 %add549, 2
  %conv551 = trunc i32 %shr550 to i16
  %271 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* %271, i64 3
  %arrayidx553 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx552, i32 0, i64 1
  store i16 %conv551, i16* %arrayidx553, align 2
  %272 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx554 = getelementptr inbounds [16 x i16], [16 x i16]* %272, i64 1
  %arrayidx555 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx554, i32 0, i64 2
  store i16 %conv551, i16* %arrayidx555, align 2
  %arrayidx556 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %273 = load i16, i16* %arrayidx556, align 2
  %conv557 = zext i16 %273 to i32
  %arrayidx558 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %274 = load i16, i16* %arrayidx558, align 2
  %conv559 = zext i16 %274 to i32
  %mul560 = mul nsw i32 2, %conv559
  %add561 = add nsw i32 %conv557, %mul560
  %arrayidx562 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %275 = load i16, i16* %arrayidx562, align 2
  %conv563 = zext i16 %275 to i32
  %add564 = add nsw i32 %add561, %conv563
  %add565 = add nsw i32 %add564, 2
  %shr566 = ashr i32 %add565, 2
  %conv567 = trunc i32 %shr566 to i16
  %276 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx568 = getelementptr inbounds [16 x i16], [16 x i16]* %276, i64 3
  %arrayidx569 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx568, i32 0, i64 2
  store i16 %conv567, i16* %arrayidx569, align 2
  %277 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx570 = getelementptr inbounds [16 x i16], [16 x i16]* %277, i64 1
  %arrayidx571 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx570, i32 0, i64 3
  store i16 %conv567, i16* %arrayidx571, align 2
  %arrayidx572 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 5
  %278 = load i16, i16* %arrayidx572, align 2
  %conv573 = zext i16 %278 to i32
  %arrayidx574 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 6
  %279 = load i16, i16* %arrayidx574, align 2
  %conv575 = zext i16 %279 to i32
  %mul576 = mul nsw i32 2, %conv575
  %add577 = add nsw i32 %conv573, %mul576
  %arrayidx578 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 7
  %280 = load i16, i16* %arrayidx578, align 2
  %conv579 = zext i16 %280 to i32
  %add580 = add nsw i32 %add577, %conv579
  %add581 = add nsw i32 %add580, 2
  %shr582 = ashr i32 %add581, 2
  %conv583 = trunc i32 %shr582 to i16
  %281 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx584 = getelementptr inbounds [16 x i16], [16 x i16]* %281, i64 3
  %arrayidx585 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx584, i32 0, i64 3
  store i16 %conv583, i16* %arrayidx585, align 2
  br label %if.end.586

if.end.586:                                       ; preds = %if.then.335, %if.end.333
  %282 = load i32, i32* %block_available_left, align 4
  %tobool587 = icmp ne i32 %282, 0
  br i1 %tobool587, label %if.then.588, label %if.end.685

if.then.588:                                      ; preds = %if.end.586
  %283 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr589 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %283, i32 0, i32 47
  %arrayidx590 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr589, i32 0, i64 8
  %arraydecay591 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx590, i32 0, i32 0
  store [16 x i16]* %arraydecay591, [16 x i16]** %cur_pred, align 8
  %arrayidx592 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %284 = load i16, i16* %arrayidx592, align 2
  %conv593 = zext i16 %284 to i32
  %arrayidx594 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %285 = load i16, i16* %arrayidx594, align 2
  %conv595 = zext i16 %285 to i32
  %add596 = add nsw i32 %conv593, %conv595
  %add597 = add nsw i32 %add596, 1
  %shr598 = ashr i32 %add597, 1
  %conv599 = trunc i32 %shr598 to i16
  %286 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx600 = getelementptr inbounds [16 x i16], [16 x i16]* %286, i64 0
  %arrayidx601 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx600, i32 0, i64 0
  store i16 %conv599, i16* %arrayidx601, align 2
  %arrayidx602 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %287 = load i16, i16* %arrayidx602, align 2
  %conv603 = zext i16 %287 to i32
  %arrayidx604 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %288 = load i16, i16* %arrayidx604, align 2
  %conv605 = zext i16 %288 to i32
  %mul606 = mul nsw i32 2, %conv605
  %add607 = add nsw i32 %conv603, %mul606
  %arrayidx608 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %289 = load i16, i16* %arrayidx608, align 2
  %conv609 = zext i16 %289 to i32
  %add610 = add nsw i32 %add607, %conv609
  %add611 = add nsw i32 %add610, 2
  %shr612 = ashr i32 %add611, 2
  %conv613 = trunc i32 %shr612 to i16
  %290 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx614 = getelementptr inbounds [16 x i16], [16 x i16]* %290, i64 0
  %arrayidx615 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx614, i32 0, i64 1
  store i16 %conv613, i16* %arrayidx615, align 2
  %arrayidx616 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %291 = load i16, i16* %arrayidx616, align 2
  %conv617 = zext i16 %291 to i32
  %arrayidx618 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %292 = load i16, i16* %arrayidx618, align 2
  %conv619 = zext i16 %292 to i32
  %add620 = add nsw i32 %conv617, %conv619
  %add621 = add nsw i32 %add620, 1
  %shr622 = ashr i32 %add621, 1
  %conv623 = trunc i32 %shr622 to i16
  %293 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx624 = getelementptr inbounds [16 x i16], [16 x i16]* %293, i64 1
  %arrayidx625 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx624, i32 0, i64 0
  store i16 %conv623, i16* %arrayidx625, align 2
  %294 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx626 = getelementptr inbounds [16 x i16], [16 x i16]* %294, i64 0
  %arrayidx627 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx626, i32 0, i64 2
  store i16 %conv623, i16* %arrayidx627, align 2
  %arrayidx628 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %295 = load i16, i16* %arrayidx628, align 2
  %conv629 = zext i16 %295 to i32
  %arrayidx630 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %296 = load i16, i16* %arrayidx630, align 2
  %conv631 = zext i16 %296 to i32
  %mul632 = mul nsw i32 2, %conv631
  %add633 = add nsw i32 %conv629, %mul632
  %arrayidx634 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %297 = load i16, i16* %arrayidx634, align 2
  %conv635 = zext i16 %297 to i32
  %add636 = add nsw i32 %add633, %conv635
  %add637 = add nsw i32 %add636, 2
  %shr638 = ashr i32 %add637, 2
  %conv639 = trunc i32 %shr638 to i16
  %298 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx640 = getelementptr inbounds [16 x i16], [16 x i16]* %298, i64 1
  %arrayidx641 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx640, i32 0, i64 1
  store i16 %conv639, i16* %arrayidx641, align 2
  %299 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx642 = getelementptr inbounds [16 x i16], [16 x i16]* %299, i64 0
  %arrayidx643 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx642, i32 0, i64 3
  store i16 %conv639, i16* %arrayidx643, align 2
  %arrayidx644 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %300 = load i16, i16* %arrayidx644, align 2
  %conv645 = zext i16 %300 to i32
  %arrayidx646 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %301 = load i16, i16* %arrayidx646, align 2
  %conv647 = zext i16 %301 to i32
  %add648 = add nsw i32 %conv645, %conv647
  %add649 = add nsw i32 %add648, 1
  %shr650 = ashr i32 %add649, 1
  %conv651 = trunc i32 %shr650 to i16
  %302 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx652 = getelementptr inbounds [16 x i16], [16 x i16]* %302, i64 2
  %arrayidx653 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx652, i32 0, i64 0
  store i16 %conv651, i16* %arrayidx653, align 2
  %303 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx654 = getelementptr inbounds [16 x i16], [16 x i16]* %303, i64 1
  %arrayidx655 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx654, i32 0, i64 2
  store i16 %conv651, i16* %arrayidx655, align 2
  %arrayidx656 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %304 = load i16, i16* %arrayidx656, align 2
  %conv657 = zext i16 %304 to i32
  %arrayidx658 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %305 = load i16, i16* %arrayidx658, align 2
  %conv659 = zext i16 %305 to i32
  %mul660 = mul nsw i32 2, %conv659
  %add661 = add nsw i32 %conv657, %mul660
  %arrayidx662 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %306 = load i16, i16* %arrayidx662, align 2
  %conv663 = zext i16 %306 to i32
  %add664 = add nsw i32 %add661, %conv663
  %add665 = add nsw i32 %add664, 2
  %shr666 = ashr i32 %add665, 2
  %conv667 = trunc i32 %shr666 to i16
  %307 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx668 = getelementptr inbounds [16 x i16], [16 x i16]* %307, i64 2
  %arrayidx669 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx668, i32 0, i64 1
  store i16 %conv667, i16* %arrayidx669, align 2
  %308 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx670 = getelementptr inbounds [16 x i16], [16 x i16]* %308, i64 1
  %arrayidx671 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx670, i32 0, i64 3
  store i16 %conv667, i16* %arrayidx671, align 2
  %arrayidx672 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %309 = load i16, i16* %arrayidx672, align 2
  %310 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx673 = getelementptr inbounds [16 x i16], [16 x i16]* %310, i64 3
  %arrayidx674 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx673, i32 0, i64 3
  store i16 %309, i16* %arrayidx674, align 2
  %311 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx675 = getelementptr inbounds [16 x i16], [16 x i16]* %311, i64 3
  %arrayidx676 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx675, i32 0, i64 2
  store i16 %309, i16* %arrayidx676, align 2
  %312 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx677 = getelementptr inbounds [16 x i16], [16 x i16]* %312, i64 3
  %arrayidx678 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx677, i32 0, i64 1
  store i16 %309, i16* %arrayidx678, align 2
  %313 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx679 = getelementptr inbounds [16 x i16], [16 x i16]* %313, i64 2
  %arrayidx680 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx679, i32 0, i64 3
  store i16 %309, i16* %arrayidx680, align 2
  %314 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx681 = getelementptr inbounds [16 x i16], [16 x i16]* %314, i64 2
  %arrayidx682 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx681, i32 0, i64 2
  store i16 %309, i16* %arrayidx682, align 2
  %315 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx683 = getelementptr inbounds [16 x i16], [16 x i16]* %315, i64 3
  %arrayidx684 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx683, i32 0, i64 0
  store i16 %309, i16* %arrayidx684, align 2
  br label %if.end.685

if.end.685:                                       ; preds = %if.then.588, %if.end.586
  %316 = load i32, i32* %block_available_up, align 4
  %tobool686 = icmp ne i32 %316, 0
  br i1 %tobool686, label %land.lhs.true.687, label %if.end.1089

land.lhs.true.687:                                ; preds = %if.end.685
  %317 = load i32, i32* %block_available_left, align 4
  %tobool688 = icmp ne i32 %317, 0
  br i1 %tobool688, label %land.lhs.true.689, label %if.end.1089

land.lhs.true.689:                                ; preds = %land.lhs.true.687
  %318 = load i32, i32* %block_available_up_left, align 4
  %tobool690 = icmp ne i32 %318, 0
  br i1 %tobool690, label %if.then.691, label %if.end.1089

if.then.691:                                      ; preds = %land.lhs.true.689
  %319 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr692 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %319, i32 0, i32 47
  %arrayidx693 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr692, i32 0, i64 4
  %arraydecay694 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx693, i32 0, i32 0
  store [16 x i16]* %arraydecay694, [16 x i16]** %cur_pred, align 8
  %arrayidx695 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %320 = load i16, i16* %arrayidx695, align 2
  %conv696 = zext i16 %320 to i32
  %arrayidx697 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %321 = load i16, i16* %arrayidx697, align 2
  %conv698 = zext i16 %321 to i32
  %mul699 = mul nsw i32 2, %conv698
  %add700 = add nsw i32 %conv696, %mul699
  %arrayidx701 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %322 = load i16, i16* %arrayidx701, align 2
  %conv702 = zext i16 %322 to i32
  %add703 = add nsw i32 %add700, %conv702
  %add704 = add nsw i32 %add703, 2
  %shr705 = ashr i32 %add704, 2
  %conv706 = trunc i32 %shr705 to i16
  %323 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx707 = getelementptr inbounds [16 x i16], [16 x i16]* %323, i64 3
  %arrayidx708 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx707, i32 0, i64 0
  store i16 %conv706, i16* %arrayidx708, align 2
  %arrayidx709 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %324 = load i16, i16* %arrayidx709, align 2
  %conv710 = zext i16 %324 to i32
  %arrayidx711 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %325 = load i16, i16* %arrayidx711, align 2
  %conv712 = zext i16 %325 to i32
  %mul713 = mul nsw i32 2, %conv712
  %add714 = add nsw i32 %conv710, %mul713
  %arrayidx715 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %326 = load i16, i16* %arrayidx715, align 2
  %conv716 = zext i16 %326 to i32
  %add717 = add nsw i32 %add714, %conv716
  %add718 = add nsw i32 %add717, 2
  %shr719 = ashr i32 %add718, 2
  %conv720 = trunc i32 %shr719 to i16
  %327 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx721 = getelementptr inbounds [16 x i16], [16 x i16]* %327, i64 3
  %arrayidx722 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx721, i32 0, i64 1
  store i16 %conv720, i16* %arrayidx722, align 2
  %328 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx723 = getelementptr inbounds [16 x i16], [16 x i16]* %328, i64 2
  %arrayidx724 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx723, i32 0, i64 0
  store i16 %conv720, i16* %arrayidx724, align 2
  %arrayidx725 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %329 = load i16, i16* %arrayidx725, align 2
  %conv726 = zext i16 %329 to i32
  %arrayidx727 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %330 = load i16, i16* %arrayidx727, align 2
  %conv728 = zext i16 %330 to i32
  %mul729 = mul nsw i32 2, %conv728
  %add730 = add nsw i32 %conv726, %mul729
  %arrayidx731 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %331 = load i16, i16* %arrayidx731, align 2
  %conv732 = zext i16 %331 to i32
  %add733 = add nsw i32 %add730, %conv732
  %add734 = add nsw i32 %add733, 2
  %shr735 = ashr i32 %add734, 2
  %conv736 = trunc i32 %shr735 to i16
  %332 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx737 = getelementptr inbounds [16 x i16], [16 x i16]* %332, i64 3
  %arrayidx738 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx737, i32 0, i64 2
  store i16 %conv736, i16* %arrayidx738, align 2
  %333 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx739 = getelementptr inbounds [16 x i16], [16 x i16]* %333, i64 2
  %arrayidx740 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx739, i32 0, i64 1
  store i16 %conv736, i16* %arrayidx740, align 2
  %334 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx741 = getelementptr inbounds [16 x i16], [16 x i16]* %334, i64 1
  %arrayidx742 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx741, i32 0, i64 0
  store i16 %conv736, i16* %arrayidx742, align 2
  %arrayidx743 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %335 = load i16, i16* %arrayidx743, align 2
  %conv744 = zext i16 %335 to i32
  %arrayidx745 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %336 = load i16, i16* %arrayidx745, align 2
  %conv746 = zext i16 %336 to i32
  %mul747 = mul nsw i32 2, %conv746
  %add748 = add nsw i32 %conv744, %mul747
  %arrayidx749 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %337 = load i16, i16* %arrayidx749, align 2
  %conv750 = zext i16 %337 to i32
  %add751 = add nsw i32 %add748, %conv750
  %add752 = add nsw i32 %add751, 2
  %shr753 = ashr i32 %add752, 2
  %conv754 = trunc i32 %shr753 to i16
  %338 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx755 = getelementptr inbounds [16 x i16], [16 x i16]* %338, i64 3
  %arrayidx756 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx755, i32 0, i64 3
  store i16 %conv754, i16* %arrayidx756, align 2
  %339 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx757 = getelementptr inbounds [16 x i16], [16 x i16]* %339, i64 2
  %arrayidx758 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx757, i32 0, i64 2
  store i16 %conv754, i16* %arrayidx758, align 2
  %340 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx759 = getelementptr inbounds [16 x i16], [16 x i16]* %340, i64 1
  %arrayidx760 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx759, i32 0, i64 1
  store i16 %conv754, i16* %arrayidx760, align 2
  %341 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx761 = getelementptr inbounds [16 x i16], [16 x i16]* %341, i64 0
  %arrayidx762 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx761, i32 0, i64 0
  store i16 %conv754, i16* %arrayidx762, align 2
  %arrayidx763 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %342 = load i16, i16* %arrayidx763, align 2
  %conv764 = zext i16 %342 to i32
  %arrayidx765 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %343 = load i16, i16* %arrayidx765, align 2
  %conv766 = zext i16 %343 to i32
  %mul767 = mul nsw i32 2, %conv766
  %add768 = add nsw i32 %conv764, %mul767
  %arrayidx769 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %344 = load i16, i16* %arrayidx769, align 2
  %conv770 = zext i16 %344 to i32
  %add771 = add nsw i32 %add768, %conv770
  %add772 = add nsw i32 %add771, 2
  %shr773 = ashr i32 %add772, 2
  %conv774 = trunc i32 %shr773 to i16
  %345 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx775 = getelementptr inbounds [16 x i16], [16 x i16]* %345, i64 2
  %arrayidx776 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx775, i32 0, i64 3
  store i16 %conv774, i16* %arrayidx776, align 2
  %346 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx777 = getelementptr inbounds [16 x i16], [16 x i16]* %346, i64 1
  %arrayidx778 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx777, i32 0, i64 2
  store i16 %conv774, i16* %arrayidx778, align 2
  %347 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx779 = getelementptr inbounds [16 x i16], [16 x i16]* %347, i64 0
  %arrayidx780 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx779, i32 0, i64 1
  store i16 %conv774, i16* %arrayidx780, align 2
  %arrayidx781 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %348 = load i16, i16* %arrayidx781, align 2
  %conv782 = zext i16 %348 to i32
  %arrayidx783 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %349 = load i16, i16* %arrayidx783, align 2
  %conv784 = zext i16 %349 to i32
  %mul785 = mul nsw i32 2, %conv784
  %add786 = add nsw i32 %conv782, %mul785
  %arrayidx787 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %350 = load i16, i16* %arrayidx787, align 2
  %conv788 = zext i16 %350 to i32
  %add789 = add nsw i32 %add786, %conv788
  %add790 = add nsw i32 %add789, 2
  %shr791 = ashr i32 %add790, 2
  %conv792 = trunc i32 %shr791 to i16
  %351 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx793 = getelementptr inbounds [16 x i16], [16 x i16]* %351, i64 1
  %arrayidx794 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx793, i32 0, i64 3
  store i16 %conv792, i16* %arrayidx794, align 2
  %352 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx795 = getelementptr inbounds [16 x i16], [16 x i16]* %352, i64 0
  %arrayidx796 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx795, i32 0, i64 2
  store i16 %conv792, i16* %arrayidx796, align 2
  %arrayidx797 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %353 = load i16, i16* %arrayidx797, align 2
  %conv798 = zext i16 %353 to i32
  %arrayidx799 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %354 = load i16, i16* %arrayidx799, align 2
  %conv800 = zext i16 %354 to i32
  %mul801 = mul nsw i32 2, %conv800
  %add802 = add nsw i32 %conv798, %mul801
  %arrayidx803 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %355 = load i16, i16* %arrayidx803, align 2
  %conv804 = zext i16 %355 to i32
  %add805 = add nsw i32 %add802, %conv804
  %add806 = add nsw i32 %add805, 2
  %shr807 = ashr i32 %add806, 2
  %conv808 = trunc i32 %shr807 to i16
  %356 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx809 = getelementptr inbounds [16 x i16], [16 x i16]* %356, i64 0
  %arrayidx810 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx809, i32 0, i64 3
  store i16 %conv808, i16* %arrayidx810, align 2
  %357 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr811 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %357, i32 0, i32 47
  %arrayidx812 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr811, i32 0, i64 5
  %arraydecay813 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx812, i32 0, i32 0
  store [16 x i16]* %arraydecay813, [16 x i16]** %cur_pred, align 8
  %arrayidx814 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %358 = load i16, i16* %arrayidx814, align 2
  %conv815 = zext i16 %358 to i32
  %arrayidx816 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %359 = load i16, i16* %arrayidx816, align 2
  %conv817 = zext i16 %359 to i32
  %add818 = add nsw i32 %conv815, %conv817
  %add819 = add nsw i32 %add818, 1
  %shr820 = ashr i32 %add819, 1
  %conv821 = trunc i32 %shr820 to i16
  %360 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx822 = getelementptr inbounds [16 x i16], [16 x i16]* %360, i64 2
  %arrayidx823 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx822, i32 0, i64 1
  store i16 %conv821, i16* %arrayidx823, align 2
  %361 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx824 = getelementptr inbounds [16 x i16], [16 x i16]* %361, i64 0
  %arrayidx825 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx824, i32 0, i64 0
  store i16 %conv821, i16* %arrayidx825, align 2
  %arrayidx826 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %362 = load i16, i16* %arrayidx826, align 2
  %conv827 = zext i16 %362 to i32
  %arrayidx828 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %363 = load i16, i16* %arrayidx828, align 2
  %conv829 = zext i16 %363 to i32
  %add830 = add nsw i32 %conv827, %conv829
  %add831 = add nsw i32 %add830, 1
  %shr832 = ashr i32 %add831, 1
  %conv833 = trunc i32 %shr832 to i16
  %364 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx834 = getelementptr inbounds [16 x i16], [16 x i16]* %364, i64 2
  %arrayidx835 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx834, i32 0, i64 2
  store i16 %conv833, i16* %arrayidx835, align 2
  %365 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx836 = getelementptr inbounds [16 x i16], [16 x i16]* %365, i64 0
  %arrayidx837 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx836, i32 0, i64 1
  store i16 %conv833, i16* %arrayidx837, align 2
  %arrayidx838 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %366 = load i16, i16* %arrayidx838, align 2
  %conv839 = zext i16 %366 to i32
  %arrayidx840 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %367 = load i16, i16* %arrayidx840, align 2
  %conv841 = zext i16 %367 to i32
  %add842 = add nsw i32 %conv839, %conv841
  %add843 = add nsw i32 %add842, 1
  %shr844 = ashr i32 %add843, 1
  %conv845 = trunc i32 %shr844 to i16
  %368 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx846 = getelementptr inbounds [16 x i16], [16 x i16]* %368, i64 2
  %arrayidx847 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx846, i32 0, i64 3
  store i16 %conv845, i16* %arrayidx847, align 2
  %369 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx848 = getelementptr inbounds [16 x i16], [16 x i16]* %369, i64 0
  %arrayidx849 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx848, i32 0, i64 2
  store i16 %conv845, i16* %arrayidx849, align 2
  %arrayidx850 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %370 = load i16, i16* %arrayidx850, align 2
  %conv851 = zext i16 %370 to i32
  %arrayidx852 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %371 = load i16, i16* %arrayidx852, align 2
  %conv853 = zext i16 %371 to i32
  %add854 = add nsw i32 %conv851, %conv853
  %add855 = add nsw i32 %add854, 1
  %shr856 = ashr i32 %add855, 1
  %conv857 = trunc i32 %shr856 to i16
  %372 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx858 = getelementptr inbounds [16 x i16], [16 x i16]* %372, i64 0
  %arrayidx859 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx858, i32 0, i64 3
  store i16 %conv857, i16* %arrayidx859, align 2
  %arrayidx860 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %373 = load i16, i16* %arrayidx860, align 2
  %conv861 = zext i16 %373 to i32
  %arrayidx862 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %374 = load i16, i16* %arrayidx862, align 2
  %conv863 = zext i16 %374 to i32
  %mul864 = mul nsw i32 2, %conv863
  %add865 = add nsw i32 %conv861, %mul864
  %arrayidx866 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %375 = load i16, i16* %arrayidx866, align 2
  %conv867 = zext i16 %375 to i32
  %add868 = add nsw i32 %add865, %conv867
  %add869 = add nsw i32 %add868, 2
  %shr870 = ashr i32 %add869, 2
  %conv871 = trunc i32 %shr870 to i16
  %376 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx872 = getelementptr inbounds [16 x i16], [16 x i16]* %376, i64 3
  %arrayidx873 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx872, i32 0, i64 1
  store i16 %conv871, i16* %arrayidx873, align 2
  %377 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx874 = getelementptr inbounds [16 x i16], [16 x i16]* %377, i64 1
  %arrayidx875 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx874, i32 0, i64 0
  store i16 %conv871, i16* %arrayidx875, align 2
  %arrayidx876 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %378 = load i16, i16* %arrayidx876, align 2
  %conv877 = zext i16 %378 to i32
  %arrayidx878 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %379 = load i16, i16* %arrayidx878, align 2
  %conv879 = zext i16 %379 to i32
  %mul880 = mul nsw i32 2, %conv879
  %add881 = add nsw i32 %conv877, %mul880
  %arrayidx882 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %380 = load i16, i16* %arrayidx882, align 2
  %conv883 = zext i16 %380 to i32
  %add884 = add nsw i32 %add881, %conv883
  %add885 = add nsw i32 %add884, 2
  %shr886 = ashr i32 %add885, 2
  %conv887 = trunc i32 %shr886 to i16
  %381 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx888 = getelementptr inbounds [16 x i16], [16 x i16]* %381, i64 3
  %arrayidx889 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx888, i32 0, i64 2
  store i16 %conv887, i16* %arrayidx889, align 2
  %382 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx890 = getelementptr inbounds [16 x i16], [16 x i16]* %382, i64 1
  %arrayidx891 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx890, i32 0, i64 1
  store i16 %conv887, i16* %arrayidx891, align 2
  %arrayidx892 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %383 = load i16, i16* %arrayidx892, align 2
  %conv893 = zext i16 %383 to i32
  %arrayidx894 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %384 = load i16, i16* %arrayidx894, align 2
  %conv895 = zext i16 %384 to i32
  %mul896 = mul nsw i32 2, %conv895
  %add897 = add nsw i32 %conv893, %mul896
  %arrayidx898 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %385 = load i16, i16* %arrayidx898, align 2
  %conv899 = zext i16 %385 to i32
  %add900 = add nsw i32 %add897, %conv899
  %add901 = add nsw i32 %add900, 2
  %shr902 = ashr i32 %add901, 2
  %conv903 = trunc i32 %shr902 to i16
  %386 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx904 = getelementptr inbounds [16 x i16], [16 x i16]* %386, i64 3
  %arrayidx905 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx904, i32 0, i64 3
  store i16 %conv903, i16* %arrayidx905, align 2
  %387 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx906 = getelementptr inbounds [16 x i16], [16 x i16]* %387, i64 1
  %arrayidx907 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx906, i32 0, i64 2
  store i16 %conv903, i16* %arrayidx907, align 2
  %arrayidx908 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %388 = load i16, i16* %arrayidx908, align 2
  %conv909 = zext i16 %388 to i32
  %arrayidx910 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %389 = load i16, i16* %arrayidx910, align 2
  %conv911 = zext i16 %389 to i32
  %mul912 = mul nsw i32 2, %conv911
  %add913 = add nsw i32 %conv909, %mul912
  %arrayidx914 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 4
  %390 = load i16, i16* %arrayidx914, align 2
  %conv915 = zext i16 %390 to i32
  %add916 = add nsw i32 %add913, %conv915
  %add917 = add nsw i32 %add916, 2
  %shr918 = ashr i32 %add917, 2
  %conv919 = trunc i32 %shr918 to i16
  %391 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx920 = getelementptr inbounds [16 x i16], [16 x i16]* %391, i64 1
  %arrayidx921 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx920, i32 0, i64 3
  store i16 %conv919, i16* %arrayidx921, align 2
  %arrayidx922 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %392 = load i16, i16* %arrayidx922, align 2
  %conv923 = zext i16 %392 to i32
  %arrayidx924 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %393 = load i16, i16* %arrayidx924, align 2
  %conv925 = zext i16 %393 to i32
  %mul926 = mul nsw i32 2, %conv925
  %add927 = add nsw i32 %conv923, %mul926
  %arrayidx928 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %394 = load i16, i16* %arrayidx928, align 2
  %conv929 = zext i16 %394 to i32
  %add930 = add nsw i32 %add927, %conv929
  %add931 = add nsw i32 %add930, 2
  %shr932 = ashr i32 %add931, 2
  %conv933 = trunc i32 %shr932 to i16
  %395 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx934 = getelementptr inbounds [16 x i16], [16 x i16]* %395, i64 2
  %arrayidx935 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx934, i32 0, i64 0
  store i16 %conv933, i16* %arrayidx935, align 2
  %arrayidx936 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %396 = load i16, i16* %arrayidx936, align 2
  %conv937 = zext i16 %396 to i32
  %arrayidx938 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %397 = load i16, i16* %arrayidx938, align 2
  %conv939 = zext i16 %397 to i32
  %mul940 = mul nsw i32 2, %conv939
  %add941 = add nsw i32 %conv937, %mul940
  %arrayidx942 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %398 = load i16, i16* %arrayidx942, align 2
  %conv943 = zext i16 %398 to i32
  %add944 = add nsw i32 %add941, %conv943
  %add945 = add nsw i32 %add944, 2
  %shr946 = ashr i32 %add945, 2
  %conv947 = trunc i32 %shr946 to i16
  %399 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx948 = getelementptr inbounds [16 x i16], [16 x i16]* %399, i64 3
  %arrayidx949 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx948, i32 0, i64 0
  store i16 %conv947, i16* %arrayidx949, align 2
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr950 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 47
  %arrayidx951 = getelementptr inbounds [9 x [16 x [16 x i16]]], [9 x [16 x [16 x i16]]]* %mprr950, i32 0, i64 6
  %arraydecay952 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx951, i32 0, i32 0
  store [16 x i16]* %arraydecay952, [16 x i16]** %cur_pred, align 8
  %arrayidx953 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %401 = load i16, i16* %arrayidx953, align 2
  %conv954 = zext i16 %401 to i32
  %arrayidx955 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %402 = load i16, i16* %arrayidx955, align 2
  %conv956 = zext i16 %402 to i32
  %add957 = add nsw i32 %conv954, %conv956
  %add958 = add nsw i32 %add957, 1
  %shr959 = ashr i32 %add958, 1
  %conv960 = trunc i32 %shr959 to i16
  %403 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx961 = getelementptr inbounds [16 x i16], [16 x i16]* %403, i64 1
  %arrayidx962 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx961, i32 0, i64 2
  store i16 %conv960, i16* %arrayidx962, align 2
  %404 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx963 = getelementptr inbounds [16 x i16], [16 x i16]* %404, i64 0
  %arrayidx964 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx963, i32 0, i64 0
  store i16 %conv960, i16* %arrayidx964, align 2
  %arrayidx965 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %405 = load i16, i16* %arrayidx965, align 2
  %conv966 = zext i16 %405 to i32
  %arrayidx967 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %406 = load i16, i16* %arrayidx967, align 2
  %conv968 = zext i16 %406 to i32
  %mul969 = mul nsw i32 2, %conv968
  %add970 = add nsw i32 %conv966, %mul969
  %arrayidx971 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %407 = load i16, i16* %arrayidx971, align 2
  %conv972 = zext i16 %407 to i32
  %add973 = add nsw i32 %add970, %conv972
  %add974 = add nsw i32 %add973, 2
  %shr975 = ashr i32 %add974, 2
  %conv976 = trunc i32 %shr975 to i16
  %408 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx977 = getelementptr inbounds [16 x i16], [16 x i16]* %408, i64 1
  %arrayidx978 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx977, i32 0, i64 3
  store i16 %conv976, i16* %arrayidx978, align 2
  %409 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx979 = getelementptr inbounds [16 x i16], [16 x i16]* %409, i64 0
  %arrayidx980 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx979, i32 0, i64 1
  store i16 %conv976, i16* %arrayidx980, align 2
  %arrayidx981 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %410 = load i16, i16* %arrayidx981, align 2
  %conv982 = zext i16 %410 to i32
  %arrayidx983 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %411 = load i16, i16* %arrayidx983, align 2
  %conv984 = zext i16 %411 to i32
  %mul985 = mul nsw i32 2, %conv984
  %add986 = add nsw i32 %conv982, %mul985
  %arrayidx987 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %412 = load i16, i16* %arrayidx987, align 2
  %conv988 = zext i16 %412 to i32
  %add989 = add nsw i32 %add986, %conv988
  %add990 = add nsw i32 %add989, 2
  %shr991 = ashr i32 %add990, 2
  %conv992 = trunc i32 %shr991 to i16
  %413 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx993 = getelementptr inbounds [16 x i16], [16 x i16]* %413, i64 0
  %arrayidx994 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx993, i32 0, i64 2
  store i16 %conv992, i16* %arrayidx994, align 2
  %arrayidx995 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 1
  %414 = load i16, i16* %arrayidx995, align 2
  %conv996 = zext i16 %414 to i32
  %arrayidx997 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 2
  %415 = load i16, i16* %arrayidx997, align 2
  %conv998 = zext i16 %415 to i32
  %mul999 = mul nsw i32 2, %conv998
  %add1000 = add nsw i32 %conv996, %mul999
  %arrayidx1001 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 3
  %416 = load i16, i16* %arrayidx1001, align 2
  %conv1002 = zext i16 %416 to i32
  %add1003 = add nsw i32 %add1000, %conv1002
  %add1004 = add nsw i32 %add1003, 2
  %shr1005 = ashr i32 %add1004, 2
  %conv1006 = trunc i32 %shr1005 to i16
  %417 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1007 = getelementptr inbounds [16 x i16], [16 x i16]* %417, i64 0
  %arrayidx1008 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1007, i32 0, i64 3
  store i16 %conv1006, i16* %arrayidx1008, align 2
  %arrayidx1009 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %418 = load i16, i16* %arrayidx1009, align 2
  %conv1010 = zext i16 %418 to i32
  %arrayidx1011 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %419 = load i16, i16* %arrayidx1011, align 2
  %conv1012 = zext i16 %419 to i32
  %add1013 = add nsw i32 %conv1010, %conv1012
  %add1014 = add nsw i32 %add1013, 1
  %shr1015 = ashr i32 %add1014, 1
  %conv1016 = trunc i32 %shr1015 to i16
  %420 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1017 = getelementptr inbounds [16 x i16], [16 x i16]* %420, i64 2
  %arrayidx1018 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1017, i32 0, i64 2
  store i16 %conv1016, i16* %arrayidx1018, align 2
  %421 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1019 = getelementptr inbounds [16 x i16], [16 x i16]* %421, i64 1
  %arrayidx1020 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1019, i32 0, i64 0
  store i16 %conv1016, i16* %arrayidx1020, align 2
  %arrayidx1021 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 0
  %422 = load i16, i16* %arrayidx1021, align 2
  %conv1022 = zext i16 %422 to i32
  %arrayidx1023 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %423 = load i16, i16* %arrayidx1023, align 2
  %conv1024 = zext i16 %423 to i32
  %mul1025 = mul nsw i32 2, %conv1024
  %add1026 = add nsw i32 %conv1022, %mul1025
  %arrayidx1027 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %424 = load i16, i16* %arrayidx1027, align 2
  %conv1028 = zext i16 %424 to i32
  %add1029 = add nsw i32 %add1026, %conv1028
  %add1030 = add nsw i32 %add1029, 2
  %shr1031 = ashr i32 %add1030, 2
  %conv1032 = trunc i32 %shr1031 to i16
  %425 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1033 = getelementptr inbounds [16 x i16], [16 x i16]* %425, i64 2
  %arrayidx1034 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1033, i32 0, i64 3
  store i16 %conv1032, i16* %arrayidx1034, align 2
  %426 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1035 = getelementptr inbounds [16 x i16], [16 x i16]* %426, i64 1
  %arrayidx1036 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1035, i32 0, i64 1
  store i16 %conv1032, i16* %arrayidx1036, align 2
  %arrayidx1037 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %427 = load i16, i16* %arrayidx1037, align 2
  %conv1038 = zext i16 %427 to i32
  %arrayidx1039 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %428 = load i16, i16* %arrayidx1039, align 2
  %conv1040 = zext i16 %428 to i32
  %add1041 = add nsw i32 %conv1038, %conv1040
  %add1042 = add nsw i32 %add1041, 1
  %shr1043 = ashr i32 %add1042, 1
  %conv1044 = trunc i32 %shr1043 to i16
  %429 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1045 = getelementptr inbounds [16 x i16], [16 x i16]* %429, i64 3
  %arrayidx1046 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1045, i32 0, i64 2
  store i16 %conv1044, i16* %arrayidx1046, align 2
  %430 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1047 = getelementptr inbounds [16 x i16], [16 x i16]* %430, i64 2
  %arrayidx1048 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1047, i32 0, i64 0
  store i16 %conv1044, i16* %arrayidx1048, align 2
  %arrayidx1049 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 9
  %431 = load i16, i16* %arrayidx1049, align 2
  %conv1050 = zext i16 %431 to i32
  %arrayidx1051 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %432 = load i16, i16* %arrayidx1051, align 2
  %conv1052 = zext i16 %432 to i32
  %mul1053 = mul nsw i32 2, %conv1052
  %add1054 = add nsw i32 %conv1050, %mul1053
  %arrayidx1055 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %433 = load i16, i16* %arrayidx1055, align 2
  %conv1056 = zext i16 %433 to i32
  %add1057 = add nsw i32 %add1054, %conv1056
  %add1058 = add nsw i32 %add1057, 2
  %shr1059 = ashr i32 %add1058, 2
  %conv1060 = trunc i32 %shr1059 to i16
  %434 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1061 = getelementptr inbounds [16 x i16], [16 x i16]* %434, i64 3
  %arrayidx1062 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1061, i32 0, i64 3
  store i16 %conv1060, i16* %arrayidx1062, align 2
  %435 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1063 = getelementptr inbounds [16 x i16], [16 x i16]* %435, i64 2
  %arrayidx1064 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1063, i32 0, i64 1
  store i16 %conv1060, i16* %arrayidx1064, align 2
  %arrayidx1065 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %436 = load i16, i16* %arrayidx1065, align 2
  %conv1066 = zext i16 %436 to i32
  %arrayidx1067 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %437 = load i16, i16* %arrayidx1067, align 2
  %conv1068 = zext i16 %437 to i32
  %add1069 = add nsw i32 %conv1066, %conv1068
  %add1070 = add nsw i32 %add1069, 1
  %shr1071 = ashr i32 %add1070, 1
  %conv1072 = trunc i32 %shr1071 to i16
  %438 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1073 = getelementptr inbounds [16 x i16], [16 x i16]* %438, i64 3
  %arrayidx1074 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1073, i32 0, i64 0
  store i16 %conv1072, i16* %arrayidx1074, align 2
  %arrayidx1075 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 10
  %439 = load i16, i16* %arrayidx1075, align 2
  %conv1076 = zext i16 %439 to i32
  %arrayidx1077 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 11
  %440 = load i16, i16* %arrayidx1077, align 2
  %conv1078 = zext i16 %440 to i32
  %mul1079 = mul nsw i32 2, %conv1078
  %add1080 = add nsw i32 %conv1076, %mul1079
  %arrayidx1081 = getelementptr inbounds [13 x i16], [13 x i16]* %PredPel, i32 0, i64 12
  %441 = load i16, i16* %arrayidx1081, align 2
  %conv1082 = zext i16 %441 to i32
  %add1083 = add nsw i32 %add1080, %conv1082
  %add1084 = add nsw i32 %add1083, 2
  %shr1085 = ashr i32 %add1084, 2
  %conv1086 = trunc i32 %shr1085 to i16
  %442 = load [16 x i16]*, [16 x i16]** %cur_pred, align 8
  %arrayidx1087 = getelementptr inbounds [16 x i16], [16 x i16]* %442, i64 3
  %arrayidx1088 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1087, i32 0, i64 1
  store i16 %conv1086, i16* %arrayidx1088, align 2
  br label %if.end.1089

if.end.1089:                                      ; preds = %if.then.691, %land.lhs.true.689, %land.lhs.true.687, %if.end.685
  ret void
}

; Function Attrs: nounwind uwtable
define void @intrapred_luma_16x16() #0 {
entry:
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %s = alloca [2 x [16 x i16]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ih = alloca i32, align 4
  %iv = alloca i32, align 4
  %ib = alloca i32, align 4
  %ic = alloca i32, align 4
  %iaa = alloca i32, align 4
  %imgY_pred = alloca i16**, align 8
  %mb_nr = alloca i32, align 4
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %up_avail = alloca i32, align 4
  %left_avail = alloca i32, align 4
  %left_up_avail = alloca i32, align 4
  store i32 0, i32* %s0, align 4
  %0 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %0, i32 0, i32 29
  %1 = load i16**, i16*** %imgY, align 8
  store i16** %1, i16*** %imgY_pred, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  store i32 %3, i32* %mb_nr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %6 = load i32, i32* %mb_nr, align 4
  %7 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %7, 1
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom
  call void %5(i32 %6, i32 -1, i32 %sub, i32 0, %struct.pix_pos* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load void (i32, i32, i32, i32, %struct.pix_pos*)*, void (i32, i32, i32, i32, %struct.pix_pos*)** @getNeighbour, align 8
  %11 = load i32, i32* %mb_nr, align 4
  call void %10(i32 %11, i32 0, i32 -1, i32 0, %struct.pix_pos* %up)
  %12 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i32 0, i32 23
  %13 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.end
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %14 = load i32, i32* %available, align 4
  store i32 %14, i32* %up_avail, align 4
  %arrayidx1 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 1
  %available2 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx1, i32 0, i32 0
  %15 = load i32, i32* %available2, align 4
  store i32 %15, i32* %left_avail, align 4
  %arrayidx3 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available4 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx3, i32 0, i32 0
  %16 = load i32, i32* %available4, align 4
  store i32 %16, i32* %left_up_avail, align 4
  br label %if.end

if.else:                                          ; preds = %for.end
  %available5 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %17 = load i32, i32* %available5, align 4
  %tobool6 = icmp ne i32 %17, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 1
  %18 = load i32, i32* %mb_addr, align 4
  %idxprom7 = sext i32 %18 to i64
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 63
  %20 = load i32*, i32** %intra_block, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %20, i64 %idxprom7
  %21 = load i32, i32* %arrayidx8, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.else
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %up_avail, align 4
  store i32 1, i32* %i, align 4
  store i32 1, i32* %left_avail, align 4
  br label %for.cond.9

for.cond.9:                                       ; preds = %for.inc.26, %cond.end
  %22 = load i32, i32* %i, align 4
  %cmp10 = icmp slt i32 %22, 17
  br i1 %cmp10, label %for.body.11, label %for.end.28

for.body.11:                                      ; preds = %for.cond.9
  %23 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %23 to i64
  %arrayidx13 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom12
  %available14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx13, i32 0, i32 0
  %24 = load i32, i32* %available14, align 4
  %tobool15 = icmp ne i32 %24, 0
  br i1 %tobool15, label %cond.true.16, label %cond.false.23

cond.true.16:                                     ; preds = %for.body.11
  %25 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %25 to i64
  %arrayidx18 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom17
  %mb_addr19 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx18, i32 0, i32 1
  %26 = load i32, i32* %mb_addr19, align 4
  %idxprom20 = sext i32 %26 to i64
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block21 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 63
  %28 = load i32*, i32** %intra_block21, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom20
  %29 = load i32, i32* %arrayidx22, align 4
  br label %cond.end.24

cond.false.23:                                    ; preds = %for.body.11
  br label %cond.end.24

cond.end.24:                                      ; preds = %cond.false.23, %cond.true.16
  %cond25 = phi i32 [ %29, %cond.true.16 ], [ 0, %cond.false.23 ]
  %30 = load i32, i32* %left_avail, align 4
  %and = and i32 %30, %cond25
  store i32 %and, i32* %left_avail, align 4
  br label %for.inc.26

for.inc.26:                                       ; preds = %cond.end.24
  %31 = load i32, i32* %i, align 4
  %inc27 = add nsw i32 %31, 1
  store i32 %inc27, i32* %i, align 4
  br label %for.cond.9

for.end.28:                                       ; preds = %for.cond.9
  %arrayidx29 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx29, i32 0, i32 0
  %32 = load i32, i32* %available30, align 4
  %tobool31 = icmp ne i32 %32, 0
  br i1 %tobool31, label %cond.true.32, label %cond.false.38

cond.true.32:                                     ; preds = %for.end.28
  %arrayidx33 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %mb_addr34 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx33, i32 0, i32 1
  %33 = load i32, i32* %mb_addr34, align 4
  %idxprom35 = sext i32 %33 to i64
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 63
  %35 = load i32*, i32** %intra_block36, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 %idxprom35
  %36 = load i32, i32* %arrayidx37, align 4
  br label %cond.end.39

cond.false.38:                                    ; preds = %for.end.28
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.38, %cond.true.32
  %cond40 = phi i32 [ %36, %cond.true.32 ], [ 0, %cond.false.38 ]
  store i32 %cond40, i32* %left_up_avail, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.39, %if.then
  store i32 0, i32* %s2, align 4
  store i32 0, i32* %s1, align 4
  %37 = load i32, i32* %up_avail, align 4
  %tobool41 = icmp ne i32 %37, 0
  br i1 %tobool41, label %if.then.42, label %if.end.55

if.then.42:                                       ; preds = %if.end
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %38 = load i32, i32* %pos_x, align 4
  store i32 %38, i32* %i, align 4
  br label %for.cond.43

for.cond.43:                                      ; preds = %for.inc.52, %if.then.42
  %39 = load i32, i32* %i, align 4
  %pos_x44 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %40 = load i32, i32* %pos_x44, align 4
  %add = add nsw i32 %40, 16
  %cmp45 = icmp slt i32 %39, %add
  br i1 %cmp45, label %for.body.46, label %for.end.54

for.body.46:                                      ; preds = %for.cond.43
  %41 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %41 to i64
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %42 = load i32, i32* %pos_y, align 4
  %idxprom48 = sext i32 %42 to i64
  %43 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx49 = getelementptr inbounds i16*, i16** %43, i64 %idxprom48
  %44 = load i16*, i16** %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds i16, i16* %44, i64 %idxprom47
  %45 = load i16, i16* %arrayidx50, align 2
  %conv = zext i16 %45 to i32
  %46 = load i32, i32* %s1, align 4
  %add51 = add nsw i32 %46, %conv
  store i32 %add51, i32* %s1, align 4
  br label %for.inc.52

for.inc.52:                                       ; preds = %for.body.46
  %47 = load i32, i32* %i, align 4
  %inc53 = add nsw i32 %47, 1
  store i32 %inc53, i32* %i, align 4
  br label %for.cond.43

for.end.54:                                       ; preds = %for.cond.43
  br label %if.end.55

if.end.55:                                        ; preds = %for.end.54, %if.end
  %48 = load i32, i32* %left_avail, align 4
  %tobool56 = icmp ne i32 %48, 0
  br i1 %tobool56, label %if.then.57, label %if.end.77

if.then.57:                                       ; preds = %if.end.55
  store i32 1, i32* %i, align 4
  br label %for.cond.58

for.cond.58:                                      ; preds = %for.inc.74, %if.then.57
  %49 = load i32, i32* %i, align 4
  %cmp59 = icmp slt i32 %49, 17
  br i1 %cmp59, label %for.body.61, label %for.end.76

for.body.61:                                      ; preds = %for.cond.58
  %50 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %50 to i64
  %arrayidx63 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom62
  %pos_x64 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx63, i32 0, i32 4
  %51 = load i32, i32* %pos_x64, align 4
  %idxprom65 = sext i32 %51 to i64
  %52 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %52 to i64
  %arrayidx67 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom66
  %pos_y68 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx67, i32 0, i32 5
  %53 = load i32, i32* %pos_y68, align 4
  %idxprom69 = sext i32 %53 to i64
  %54 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx70 = getelementptr inbounds i16*, i16** %54, i64 %idxprom69
  %55 = load i16*, i16** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds i16, i16* %55, i64 %idxprom65
  %56 = load i16, i16* %arrayidx71, align 2
  %conv72 = zext i16 %56 to i32
  %57 = load i32, i32* %s2, align 4
  %add73 = add nsw i32 %57, %conv72
  store i32 %add73, i32* %s2, align 4
  br label %for.inc.74

for.inc.74:                                       ; preds = %for.body.61
  %58 = load i32, i32* %i, align 4
  %inc75 = add nsw i32 %58, 1
  store i32 %inc75, i32* %i, align 4
  br label %for.cond.58

for.end.76:                                       ; preds = %for.cond.58
  br label %if.end.77

if.end.77:                                        ; preds = %for.end.76, %if.end.55
  %59 = load i32, i32* %up_avail, align 4
  %tobool78 = icmp ne i32 %59, 0
  br i1 %tobool78, label %if.then.79, label %if.else.87

if.then.79:                                       ; preds = %if.end.77
  %60 = load i32, i32* %left_avail, align 4
  %tobool80 = icmp ne i32 %60, 0
  br i1 %tobool80, label %cond.true.81, label %cond.false.83

cond.true.81:                                     ; preds = %if.then.79
  %61 = load i32, i32* %s1, align 4
  %62 = load i32, i32* %s2, align 4
  %add82 = add nsw i32 %61, %62
  %call = call i32 @rshift_rnd_sf(i32 %add82, i32 5)
  br label %cond.end.85

cond.false.83:                                    ; preds = %if.then.79
  %63 = load i32, i32* %s1, align 4
  %call84 = call i32 @rshift_rnd_sf(i32 %63, i32 4)
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.83, %cond.true.81
  %cond86 = phi i32 [ %call, %cond.true.81 ], [ %call84, %cond.false.83 ]
  store i32 %cond86, i32* %s0, align 4
  br label %if.end.94

if.else.87:                                       ; preds = %if.end.77
  %64 = load i32, i32* %left_avail, align 4
  %tobool88 = icmp ne i32 %64, 0
  br i1 %tobool88, label %cond.true.89, label %cond.false.91

cond.true.89:                                     ; preds = %if.else.87
  %65 = load i32, i32* %s2, align 4
  %call90 = call i32 @rshift_rnd_sf(i32 %65, i32 4)
  br label %cond.end.92

cond.false.91:                                    ; preds = %if.else.87
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value_luma = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 154
  %67 = load i32, i32* %dc_pred_value_luma, align 4
  br label %cond.end.92

cond.end.92:                                      ; preds = %cond.false.91, %cond.true.89
  %cond93 = phi i32 [ %call90, %cond.true.89 ], [ %67, %cond.false.91 ]
  store i32 %cond93, i32* %s0, align 4
  br label %if.end.94

if.end.94:                                        ; preds = %cond.end.92, %cond.end.85
  %68 = load i32, i32* %up_avail, align 4
  %tobool95 = icmp ne i32 %68, 0
  br i1 %tobool95, label %if.then.96, label %if.end.104

if.then.96:                                       ; preds = %if.end.94
  %arrayidx97 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %s, i32 0, i64 0
  %69 = bitcast [16 x i16]* %arrayidx97 to i8*
  %pos_x98 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %70 = load i32, i32* %pos_x98, align 4
  %idxprom99 = sext i32 %70 to i64
  %pos_y100 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %71 = load i32, i32* %pos_y100, align 4
  %idxprom101 = sext i32 %71 to i64
  %72 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx102 = getelementptr inbounds i16*, i16** %72, i64 %idxprom101
  %73 = load i16*, i16** %arrayidx102, align 8
  %arrayidx103 = getelementptr inbounds i16, i16* %73, i64 %idxprom99
  %74 = bitcast i16* %arrayidx103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %74, i64 32, i32 2, i1 false)
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.96, %if.end.94
  %75 = load i32, i32* %left_avail, align 4
  %tobool105 = icmp ne i32 %75, 0
  br i1 %tobool105, label %if.then.106, label %if.end.128

if.then.106:                                      ; preds = %if.end.104
  store i32 1, i32* %i, align 4
  br label %for.cond.107

for.cond.107:                                     ; preds = %for.inc.125, %if.then.106
  %76 = load i32, i32* %i, align 4
  %cmp108 = icmp slt i32 %76, 17
  br i1 %cmp108, label %for.body.110, label %for.end.127

for.body.110:                                     ; preds = %for.cond.107
  %77 = load i32, i32* %i, align 4
  %idxprom111 = sext i32 %77 to i64
  %arrayidx112 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom111
  %pos_x113 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx112, i32 0, i32 4
  %78 = load i32, i32* %pos_x113, align 4
  %idxprom114 = sext i32 %78 to i64
  %79 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %79 to i64
  %arrayidx116 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom115
  %pos_y117 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx116, i32 0, i32 5
  %80 = load i32, i32* %pos_y117, align 4
  %idxprom118 = sext i32 %80 to i64
  %81 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx119 = getelementptr inbounds i16*, i16** %81, i64 %idxprom118
  %82 = load i16*, i16** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16, i16* %82, i64 %idxprom114
  %83 = load i16, i16* %arrayidx120, align 2
  %84 = load i32, i32* %i, align 4
  %sub121 = sub nsw i32 %84, 1
  %idxprom122 = sext i32 %sub121 to i64
  %arrayidx123 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %s, i32 0, i64 1
  %arrayidx124 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx123, i32 0, i64 %idxprom122
  store i16 %83, i16* %arrayidx124, align 2
  br label %for.inc.125

for.inc.125:                                      ; preds = %for.body.110
  %85 = load i32, i32* %i, align 4
  %inc126 = add nsw i32 %85, 1
  store i32 %inc126, i32* %i, align 4
  br label %for.cond.107

for.end.127:                                      ; preds = %for.cond.107
  br label %if.end.128

if.end.128:                                       ; preds = %for.end.127, %if.end.104
  store i32 0, i32* %j, align 4
  br label %for.cond.129

for.cond.129:                                     ; preds = %for.inc.160, %if.end.128
  %86 = load i32, i32* %j, align 4
  %cmp130 = icmp slt i32 %86, 16
  br i1 %cmp130, label %for.body.132, label %for.end.162

for.body.132:                                     ; preds = %for.cond.129
  %87 = load i32, i32* %j, align 4
  %idxprom133 = sext i32 %87 to i64
  %88 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %88, i32 0, i32 48
  %arrayidx134 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2, i32 0, i64 0
  %arrayidx135 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx134, i32 0, i64 %idxprom133
  %89 = bitcast [16 x i16]* %arrayidx135 to i8*
  %arrayidx136 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %s, i32 0, i64 0
  %90 = bitcast [16 x i16]* %arrayidx136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 32, i32 2, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond.137

for.cond.137:                                     ; preds = %for.inc.157, %for.body.132
  %91 = load i32, i32* %i, align 4
  %cmp138 = icmp slt i32 %91, 16
  br i1 %cmp138, label %for.body.140, label %for.end.159

for.body.140:                                     ; preds = %for.cond.137
  %92 = load i32, i32* %j, align 4
  %idxprom141 = sext i32 %92 to i64
  %arrayidx142 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %s, i32 0, i64 1
  %arrayidx143 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx142, i32 0, i64 %idxprom141
  %93 = load i16, i16* %arrayidx143, align 2
  %94 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %94 to i64
  %95 = load i32, i32* %j, align 4
  %idxprom145 = sext i32 %95 to i64
  %96 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2146 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %96, i32 0, i32 48
  %arrayidx147 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2146, i32 0, i64 1
  %arrayidx148 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx147, i32 0, i64 %idxprom145
  %arrayidx149 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx148, i32 0, i64 %idxprom144
  store i16 %93, i16* %arrayidx149, align 2
  %97 = load i32, i32* %s0, align 4
  %conv150 = trunc i32 %97 to i16
  %98 = load i32, i32* %i, align 4
  %idxprom151 = sext i32 %98 to i64
  %99 = load i32, i32* %j, align 4
  %idxprom152 = sext i32 %99 to i64
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2153 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 48
  %arrayidx154 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2153, i32 0, i64 2
  %arrayidx155 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx154, i32 0, i64 %idxprom152
  %arrayidx156 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx155, i32 0, i64 %idxprom151
  store i16 %conv150, i16* %arrayidx156, align 2
  br label %for.inc.157

for.inc.157:                                      ; preds = %for.body.140
  %101 = load i32, i32* %i, align 4
  %inc158 = add nsw i32 %101, 1
  store i32 %inc158, i32* %i, align 4
  br label %for.cond.137

for.end.159:                                      ; preds = %for.cond.137
  br label %for.inc.160

for.inc.160:                                      ; preds = %for.end.159
  %102 = load i32, i32* %j, align 4
  %inc161 = add nsw i32 %102, 1
  store i32 %inc161, i32* %j, align 4
  br label %for.cond.129

for.end.162:                                      ; preds = %for.cond.129
  %103 = load i32, i32* %up_avail, align 4
  %tobool163 = icmp ne i32 %103, 0
  br i1 %tobool163, label %lor.lhs.false, label %if.then.167

lor.lhs.false:                                    ; preds = %for.end.162
  %104 = load i32, i32* %left_avail, align 4
  %tobool164 = icmp ne i32 %104, 0
  br i1 %tobool164, label %lor.lhs.false.165, label %if.then.167

lor.lhs.false.165:                                ; preds = %lor.lhs.false
  %105 = load i32, i32* %left_up_avail, align 4
  %tobool166 = icmp ne i32 %105, 0
  br i1 %tobool166, label %if.end.168, label %if.then.167

if.then.167:                                      ; preds = %lor.lhs.false.165, %lor.lhs.false, %for.end.162
  br label %for.end.303

if.end.168:                                       ; preds = %lor.lhs.false.165
  store i32 0, i32* %ih, align 4
  store i32 0, i32* %iv, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond.169

for.cond.169:                                     ; preds = %for.inc.248, %if.end.168
  %106 = load i32, i32* %i, align 4
  %cmp170 = icmp slt i32 %106, 9
  br i1 %cmp170, label %for.body.172, label %for.end.250

for.body.172:                                     ; preds = %for.cond.169
  %107 = load i32, i32* %i, align 4
  %cmp173 = icmp slt i32 %107, 8
  br i1 %cmp173, label %if.then.175, label %if.else.196

if.then.175:                                      ; preds = %for.body.172
  %108 = load i32, i32* %i, align 4
  %pos_x176 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %109 = load i32, i32* %pos_x176, align 4
  %add177 = add nsw i32 %109, 7
  %110 = load i32, i32* %i, align 4
  %add178 = add nsw i32 %add177, %110
  %idxprom179 = sext i32 %add178 to i64
  %pos_y180 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %111 = load i32, i32* %pos_y180, align 4
  %idxprom181 = sext i32 %111 to i64
  %112 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx182 = getelementptr inbounds i16*, i16** %112, i64 %idxprom181
  %113 = load i16*, i16** %arrayidx182, align 8
  %arrayidx183 = getelementptr inbounds i16, i16* %113, i64 %idxprom179
  %114 = load i16, i16* %arrayidx183, align 2
  %conv184 = zext i16 %114 to i32
  %pos_x185 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %115 = load i32, i32* %pos_x185, align 4
  %add186 = add nsw i32 %115, 7
  %116 = load i32, i32* %i, align 4
  %sub187 = sub nsw i32 %add186, %116
  %idxprom188 = sext i32 %sub187 to i64
  %pos_y189 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %117 = load i32, i32* %pos_y189, align 4
  %idxprom190 = sext i32 %117 to i64
  %118 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx191 = getelementptr inbounds i16*, i16** %118, i64 %idxprom190
  %119 = load i16*, i16** %arrayidx191, align 8
  %arrayidx192 = getelementptr inbounds i16, i16* %119, i64 %idxprom188
  %120 = load i16, i16* %arrayidx192, align 2
  %conv193 = zext i16 %120 to i32
  %sub194 = sub nsw i32 %conv184, %conv193
  %mul = mul nsw i32 %108, %sub194
  %121 = load i32, i32* %ih, align 4
  %add195 = add nsw i32 %121, %mul
  store i32 %add195, i32* %ih, align 4
  br label %if.end.218

if.else.196:                                      ; preds = %for.body.172
  %122 = load i32, i32* %i, align 4
  %pos_x197 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %123 = load i32, i32* %pos_x197, align 4
  %add198 = add nsw i32 %123, 7
  %124 = load i32, i32* %i, align 4
  %add199 = add nsw i32 %add198, %124
  %idxprom200 = sext i32 %add199 to i64
  %pos_y201 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %125 = load i32, i32* %pos_y201, align 4
  %idxprom202 = sext i32 %125 to i64
  %126 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx203 = getelementptr inbounds i16*, i16** %126, i64 %idxprom202
  %127 = load i16*, i16** %arrayidx203, align 8
  %arrayidx204 = getelementptr inbounds i16, i16* %127, i64 %idxprom200
  %128 = load i16, i16* %arrayidx204, align 2
  %conv205 = zext i16 %128 to i32
  %arrayidx206 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_x207 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx206, i32 0, i32 4
  %129 = load i32, i32* %pos_x207, align 4
  %idxprom208 = sext i32 %129 to i64
  %arrayidx209 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_y210 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx209, i32 0, i32 5
  %130 = load i32, i32* %pos_y210, align 4
  %idxprom211 = sext i32 %130 to i64
  %131 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx212 = getelementptr inbounds i16*, i16** %131, i64 %idxprom211
  %132 = load i16*, i16** %arrayidx212, align 8
  %arrayidx213 = getelementptr inbounds i16, i16* %132, i64 %idxprom208
  %133 = load i16, i16* %arrayidx213, align 2
  %conv214 = zext i16 %133 to i32
  %sub215 = sub nsw i32 %conv205, %conv214
  %mul216 = mul nsw i32 %122, %sub215
  %134 = load i32, i32* %ih, align 4
  %add217 = add nsw i32 %134, %mul216
  store i32 %add217, i32* %ih, align 4
  br label %if.end.218

if.end.218:                                       ; preds = %if.else.196, %if.then.175
  %135 = load i32, i32* %i, align 4
  %136 = load i32, i32* %i, align 4
  %add219 = add nsw i32 8, %136
  %idxprom220 = sext i32 %add219 to i64
  %arrayidx221 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom220
  %pos_x222 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx221, i32 0, i32 4
  %137 = load i32, i32* %pos_x222, align 4
  %idxprom223 = sext i32 %137 to i64
  %138 = load i32, i32* %i, align 4
  %add224 = add nsw i32 8, %138
  %idxprom225 = sext i32 %add224 to i64
  %arrayidx226 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom225
  %pos_y227 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx226, i32 0, i32 5
  %139 = load i32, i32* %pos_y227, align 4
  %idxprom228 = sext i32 %139 to i64
  %140 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx229 = getelementptr inbounds i16*, i16** %140, i64 %idxprom228
  %141 = load i16*, i16** %arrayidx229, align 8
  %arrayidx230 = getelementptr inbounds i16, i16* %141, i64 %idxprom223
  %142 = load i16, i16* %arrayidx230, align 2
  %conv231 = zext i16 %142 to i32
  %143 = load i32, i32* %i, align 4
  %sub232 = sub nsw i32 8, %143
  %idxprom233 = sext i32 %sub232 to i64
  %arrayidx234 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom233
  %pos_x235 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx234, i32 0, i32 4
  %144 = load i32, i32* %pos_x235, align 4
  %idxprom236 = sext i32 %144 to i64
  %145 = load i32, i32* %i, align 4
  %sub237 = sub nsw i32 8, %145
  %idxprom238 = sext i32 %sub237 to i64
  %arrayidx239 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom238
  %pos_y240 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx239, i32 0, i32 5
  %146 = load i32, i32* %pos_y240, align 4
  %idxprom241 = sext i32 %146 to i64
  %147 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx242 = getelementptr inbounds i16*, i16** %147, i64 %idxprom241
  %148 = load i16*, i16** %arrayidx242, align 8
  %arrayidx243 = getelementptr inbounds i16, i16* %148, i64 %idxprom236
  %149 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %149 to i32
  %sub245 = sub nsw i32 %conv231, %conv244
  %mul246 = mul nsw i32 %135, %sub245
  %150 = load i32, i32* %iv, align 4
  %add247 = add nsw i32 %150, %mul246
  store i32 %add247, i32* %iv, align 4
  br label %for.inc.248

for.inc.248:                                      ; preds = %if.end.218
  %151 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %151, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond.169

for.end.250:                                      ; preds = %for.cond.169
  %152 = load i32, i32* %ih, align 4
  %mul251 = mul nsw i32 5, %152
  %add252 = add nsw i32 %mul251, 32
  %shr = ashr i32 %add252, 6
  store i32 %shr, i32* %ib, align 4
  %153 = load i32, i32* %iv, align 4
  %mul253 = mul nsw i32 5, %153
  %add254 = add nsw i32 %mul253, 32
  %shr255 = ashr i32 %add254, 6
  store i32 %shr255, i32* %ic, align 4
  %pos_x256 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %154 = load i32, i32* %pos_x256, align 4
  %add257 = add nsw i32 %154, 15
  %idxprom258 = sext i32 %add257 to i64
  %pos_y259 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %155 = load i32, i32* %pos_y259, align 4
  %idxprom260 = sext i32 %155 to i64
  %156 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx261 = getelementptr inbounds i16*, i16** %156, i64 %idxprom260
  %157 = load i16*, i16** %arrayidx261, align 8
  %arrayidx262 = getelementptr inbounds i16, i16* %157, i64 %idxprom258
  %158 = load i16, i16* %arrayidx262, align 2
  %conv263 = zext i16 %158 to i32
  %arrayidx264 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 16
  %pos_x265 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx264, i32 0, i32 4
  %159 = load i32, i32* %pos_x265, align 4
  %idxprom266 = sext i32 %159 to i64
  %arrayidx267 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 16
  %pos_y268 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx267, i32 0, i32 5
  %160 = load i32, i32* %pos_y268, align 4
  %idxprom269 = sext i32 %160 to i64
  %161 = load i16**, i16*** %imgY_pred, align 8
  %arrayidx270 = getelementptr inbounds i16*, i16** %161, i64 %idxprom269
  %162 = load i16*, i16** %arrayidx270, align 8
  %arrayidx271 = getelementptr inbounds i16, i16* %162, i64 %idxprom266
  %163 = load i16, i16* %arrayidx271, align 2
  %conv272 = zext i16 %163 to i32
  %add273 = add nsw i32 %conv263, %conv272
  %mul274 = mul nsw i32 16, %add273
  store i32 %mul274, i32* %iaa, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.275

for.cond.275:                                     ; preds = %for.inc.301, %for.end.250
  %164 = load i32, i32* %j, align 4
  %cmp276 = icmp slt i32 %164, 16
  br i1 %cmp276, label %for.body.278, label %for.end.303

for.body.278:                                     ; preds = %for.cond.275
  store i32 0, i32* %i, align 4
  br label %for.cond.279

for.cond.279:                                     ; preds = %for.inc.298, %for.body.278
  %165 = load i32, i32* %i, align 4
  %cmp280 = icmp slt i32 %165, 16
  br i1 %cmp280, label %for.body.282, label %for.end.300

for.body.282:                                     ; preds = %for.cond.279
  %166 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %166, i32 0, i32 156
  %167 = load i32, i32* %max_imgpel_value, align 4
  %168 = load i32, i32* %iaa, align 4
  %169 = load i32, i32* %i, align 4
  %sub283 = sub nsw i32 %169, 7
  %170 = load i32, i32* %ib, align 4
  %mul284 = mul nsw i32 %sub283, %170
  %add285 = add nsw i32 %168, %mul284
  %171 = load i32, i32* %j, align 4
  %sub286 = sub nsw i32 %171, 7
  %172 = load i32, i32* %ic, align 4
  %mul287 = mul nsw i32 %sub286, %172
  %add288 = add nsw i32 %add285, %mul287
  %call289 = call i32 @rshift_rnd_sf(i32 %add288, i32 5)
  %call290 = call i32 @iClip3(i32 0, i32 %167, i32 %call289)
  %conv291 = trunc i32 %call290 to i16
  %173 = load i32, i32* %i, align 4
  %idxprom292 = sext i32 %173 to i64
  %174 = load i32, i32* %j, align 4
  %idxprom293 = sext i32 %174 to i64
  %175 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2294 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %175, i32 0, i32 48
  %arrayidx295 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2294, i32 0, i64 3
  %arrayidx296 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx295, i32 0, i64 %idxprom293
  %arrayidx297 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx296, i32 0, i64 %idxprom292
  store i16 %conv291, i16* %arrayidx297, align 2
  br label %for.inc.298

for.inc.298:                                      ; preds = %for.body.282
  %176 = load i32, i32* %i, align 4
  %inc299 = add nsw i32 %176, 1
  store i32 %inc299, i32* %i, align 4
  br label %for.cond.279

for.end.300:                                      ; preds = %for.cond.279
  br label %for.inc.301

for.inc.301:                                      ; preds = %for.end.300
  %177 = load i32, i32* %j, align 4
  %inc302 = add nsw i32 %177, 1
  store i32 %inc302, i32* %j, align 4
  br label %for.cond.275

for.end.303:                                      ; preds = %if.then.167, %for.cond.275
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rshift_rnd_sf(i32 %x, i32 %a) #1 {
entry:
  %x.addr = alloca i32, align 4
  %a.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %a, i32* %a.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %1 = load i32, i32* %a.addr, align 4
  %sub = sub nsw i32 %1, 1
  %shl = shl i32 1, %sub
  %add = add nsw i32 %0, %shl
  %2 = load i32, i32* %a.addr, align 4
  %shr = ashr i32 %add, %2
  ret i32 %shr
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @iClip3(i32 %low, i32 %high, i32 %x) #1 {
entry:
  %low.addr = alloca i32, align 4
  %high.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %low, i32* %low.addr, align 4
  store i32 %high, i32* %high.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %1 = load i32, i32* %low.addr, align 4
  %call = call i32 @imax(i32 %0, i32 %1)
  store i32 %call, i32* %x.addr, align 4
  %2 = load i32, i32* %x.addr, align 4
  %3 = load i32, i32* %high.addr, align 4
  %call1 = call i32 @imin(i32 %2, i32 %3)
  store i32 %call1, i32* %x.addr, align 4
  %4 = load i32, i32* %x.addr, align 4
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma_16x16(i32 %new_intra_mode) #0 {
entry:
  %new_intra_mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %jdiv = alloca i32, align 4
  %jmod = alloca i32, align 4
  %run = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %coeff_ctr = alloca i32, align 4
  %level = alloca i32, align 4
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %ac_coef = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %levelscale = alloca i32**, align 8
  %leveloffset = alloca i32**, align 8
  %invlevelscale = alloca i32**, align 8
  %lossless_qpprime = alloca i32, align 4
  %pos_scan = alloca [2 x i8]*, align 8
  store i32 %new_intra_mode, i32* %new_intra_mode.addr, align 4
  store i32 0, i32* %ac_coef, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 61
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 54
  %5 = load i32***, i32**** %cofDC, align 8
  %arrayidx1 = getelementptr inbounds i32**, i32*** %5, i64 0
  %6 = load i32**, i32*** %arrayidx1, align 8
  %arrayidx2 = getelementptr inbounds i32*, i32** %6, i64 0
  %7 = load i32*, i32** %arrayidx2, align 8
  store i32* %7, i32** %DCLevel, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 54
  %9 = load i32***, i32**** %cofDC3, align 8
  %arrayidx4 = getelementptr inbounds i32**, i32*** %9, i64 0
  %10 = load i32**, i32*** %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds i32*, i32** %10, i64 1
  %11 = load i32*, i32** %arrayidx5, align 8
  store i32* %11, i32** %DCRun, align 8
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 2
  %13 = load i32, i32* %qp, align 4
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 144
  %15 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %add = add nsw i32 %13, %15
  %cmp = icmp eq i32 %add, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 161
  %17 = load i32, i32* %lossless_qpprime_flag, align 4
  %cmp6 = icmp eq i32 %17, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %18 = phi i1 [ false, %entry ], [ %cmp6, %land.rhs ]
  %land.ext = zext i1 %18 to i32
  store i32 %land.ext, i32* %lossless_qpprime, align 4
  %19 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %is_field_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %19, i32 0, i32 20
  %20 = load i32, i32* %is_field_mode, align 4
  %tobool = icmp ne i32 %20, 0
  %cond = select i1 %tobool, [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i32 0), [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i32 0)
  store [2 x i8]* %cond, [2 x i8]** %pos_scan, align 8
  %21 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %21, i32 0, i32 2
  %22 = load i32, i32* %qp7, align 4
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 144
  %24 = load i32, i32* %bitdepth_luma_qp_scale8, align 4
  %add9 = add nsw i32 %22, %24
  %sub = sub nsw i32 %add9, 0
  %idxprom10 = sext i32 %sub to i64
  %25 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i64 %idxprom10
  %26 = load i32, i32* %arrayidx11, align 4
  store i32 %26, i32* %qp_per, align 4
  %27 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 2
  %28 = load i32, i32* %qp12, align 4
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 144
  %30 = load i32, i32* %bitdepth_luma_qp_scale13, align 4
  %add14 = add nsw i32 %28, %30
  %sub15 = sub nsw i32 %add14, 0
  %idxprom16 = sext i32 %sub15 to i64
  %31 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx17 = getelementptr inbounds i32, i32* %31, i64 %idxprom16
  %32 = load i32, i32* %arrayidx17, align 4
  store i32 %32, i32* %qp_rem, align 4
  %33 = load i32, i32* %qp_per, align 4
  %add18 = add nsw i32 15, %33
  store i32 %add18, i32* %q_bits, align 4
  %34 = load i32, i32* %qp_rem, align 4
  %idxprom19 = sext i32 %34 to i64
  %35 = load i32****, i32***** @LevelScale4x4Luma, align 8
  %arrayidx20 = getelementptr inbounds i32***, i32**** %35, i64 1
  %36 = load i32***, i32**** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i32**, i32*** %36, i64 %idxprom19
  %37 = load i32**, i32*** %arrayidx21, align 8
  store i32** %37, i32*** %levelscale, align 8
  %38 = load i32, i32* %qp_rem, align 4
  %idxprom22 = sext i32 %38 to i64
  %39 = load i32****, i32***** @InvLevelScale4x4Luma, align 8
  %arrayidx23 = getelementptr inbounds i32***, i32**** %39, i64 1
  %40 = load i32***, i32**** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i32**, i32*** %40, i64 %idxprom22
  %41 = load i32**, i32*** %arrayidx24, align 8
  store i32** %41, i32*** %invlevelscale, align 8
  %42 = load i32, i32* %qp_per, align 4
  %idxprom25 = sext i32 %42 to i64
  %43 = load i32****, i32***** @LevelOffset4x4Luma, align 8
  %arrayidx26 = getelementptr inbounds i32***, i32**** %43, i64 1
  %44 = load i32***, i32**** %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds i32**, i32*** %44, i64 %idxprom25
  %45 = load i32**, i32*** %arrayidx27, align 8
  store i32** %45, i32*** %leveloffset, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.64, %land.end
  %46 = load i32, i32* %j, align 4
  %cmp28 = icmp slt i32 %46, 16
  br i1 %cmp28, label %for.body, label %for.end.66

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %j, align 4
  %shr = ashr i32 %47, 2
  store i32 %shr, i32* %jdiv, align 4
  %48 = load i32, i32* %j, align 4
  %and = and i32 %48, 3
  store i32 %and, i32* %jmod, align 4
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 44
  %50 = load i32, i32* %opix_y, align 4
  %51 = load i32, i32* %j, align 4
  %add29 = add nsw i32 %50, %51
  store i32 %add29, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.30

for.cond.30:                                      ; preds = %for.inc, %for.body
  %52 = load i32, i32* %i, align 4
  %cmp31 = icmp slt i32 %52, 16
  br i1 %cmp31, label %for.body.32, label %for.end

for.body.32:                                      ; preds = %for.cond.30
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 43
  %54 = load i32, i32* %opix_x, align 4
  %55 = load i32, i32* %i, align 4
  %add33 = add nsw i32 %54, %55
  %idxprom34 = sext i32 %add33 to i64
  %56 = load i32, i32* %jj, align 4
  %idxprom35 = sext i32 %56 to i64
  %57 = load i16**, i16*** @imgY_org, align 8
  %arrayidx36 = getelementptr inbounds i16*, i16** %57, i64 %idxprom35
  %58 = load i16*, i16** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i16, i16* %58, i64 %idxprom34
  %59 = load i16, i16* %arrayidx37, align 2
  %conv = zext i16 %59 to i32
  %60 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %60 to i64
  %61 = load i32, i32* %j, align 4
  %idxprom39 = sext i32 %61 to i64
  %62 = load i32, i32* %new_intra_mode.addr, align 4
  %idxprom40 = sext i32 %62 to i64
  %63 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %63, i32 0, i32 48
  %arrayidx41 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2, i32 0, i64 %idxprom40
  %arrayidx42 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx41, i32 0, i64 %idxprom39
  %arrayidx43 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx42, i32 0, i64 %idxprom38
  %64 = load i16, i16* %arrayidx43, align 2
  %conv44 = zext i16 %64 to i32
  %sub45 = sub nsw i32 %conv, %conv44
  %65 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %65 to i64
  %66 = load i32, i32* %j, align 4
  %idxprom47 = sext i32 %66 to i64
  %arrayidx48 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx48, i32 0, i64 %idxprom46
  store i32 %sub45, i32* %arrayidx49, align 4
  %67 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %67 to i64
  %68 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %68 to i64
  %arrayidx52 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx52, i32 0, i64 %idxprom50
  %69 = load i32, i32* %arrayidx53, align 4
  %70 = load i32, i32* %i, align 4
  %and54 = and i32 %70, 3
  %idxprom55 = sext i32 %and54 to i64
  %71 = load i32, i32* %jmod, align 4
  %idxprom56 = sext i32 %71 to i64
  %72 = load i32, i32* %i, align 4
  %shr57 = ashr i32 %72, 2
  %idxprom58 = sext i32 %shr57 to i64
  %73 = load i32, i32* %jdiv, align 4
  %idxprom59 = sext i32 %73 to i64
  %arrayidx60 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom59
  %arrayidx61 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx60, i32 0, i64 %idxprom58
  %arrayidx62 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx61, i32 0, i64 %idxprom56
  %arrayidx63 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx62, i32 0, i64 %idxprom55
  store i32 %69, i32* %arrayidx63, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.32
  %74 = load i32, i32* %i, align 4
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.30

for.end:                                          ; preds = %for.cond.30
  br label %for.inc.64

for.inc.64:                                       ; preds = %for.end
  %75 = load i32, i32* %j, align 4
  %inc65 = add nsw i32 %75, 1
  store i32 %inc65, i32* %j, align 4
  br label %for.cond

for.end.66:                                       ; preds = %for.cond
  %76 = load i32, i32* %lossless_qpprime, align 4
  %tobool67 = icmp ne i32 %76, 0
  br i1 %tobool67, label %if.else, label %if.then

if.then:                                          ; preds = %for.end.66
  store i32 0, i32* %jj, align 4
  br label %for.cond.68

for.cond.68:                                      ; preds = %for.inc.224, %if.then
  %77 = load i32, i32* %jj, align 4
  %cmp69 = icmp slt i32 %77, 4
  br i1 %cmp69, label %for.body.71, label %for.end.226

for.body.71:                                      ; preds = %for.cond.68
  store i32 0, i32* %ii, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %for.inc.221, %for.body.71
  %78 = load i32, i32* %ii, align 4
  %cmp73 = icmp slt i32 %78, 4
  br i1 %cmp73, label %for.body.75, label %for.end.223

for.body.75:                                      ; preds = %for.cond.72
  store i32 0, i32* %j, align 4
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.157, %for.body.75
  %79 = load i32, i32* %j, align 4
  %cmp77 = icmp slt i32 %79, 4
  br i1 %cmp77, label %for.body.79, label %for.end.159

for.body.79:                                      ; preds = %for.cond.76
  %80 = load i32, i32* %j, align 4
  %idxprom80 = sext i32 %80 to i64
  %81 = load i32, i32* %ii, align 4
  %idxprom81 = sext i32 %81 to i64
  %82 = load i32, i32* %jj, align 4
  %idxprom82 = sext i32 %82 to i64
  %arrayidx83 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx83, i32 0, i64 %idxprom81
  %arrayidx85 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx84, i32 0, i64 %idxprom80
  %arrayidx86 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx85, i32 0, i64 0
  %83 = load i32, i32* %arrayidx86, align 4
  %84 = load i32, i32* %j, align 4
  %idxprom87 = sext i32 %84 to i64
  %85 = load i32, i32* %ii, align 4
  %idxprom88 = sext i32 %85 to i64
  %86 = load i32, i32* %jj, align 4
  %idxprom89 = sext i32 %86 to i64
  %arrayidx90 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom89
  %arrayidx91 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx90, i32 0, i64 %idxprom88
  %arrayidx92 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx91, i32 0, i64 %idxprom87
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx92, i32 0, i64 3
  %87 = load i32, i32* %arrayidx93, align 4
  %add94 = add nsw i32 %83, %87
  store i32 %add94, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %88 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %88 to i64
  %89 = load i32, i32* %ii, align 4
  %idxprom96 = sext i32 %89 to i64
  %90 = load i32, i32* %jj, align 4
  %idxprom97 = sext i32 %90 to i64
  %arrayidx98 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx98, i32 0, i64 %idxprom96
  %arrayidx100 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i32 0, i64 %idxprom95
  %arrayidx101 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx100, i32 0, i64 1
  %91 = load i32, i32* %arrayidx101, align 4
  %92 = load i32, i32* %j, align 4
  %idxprom102 = sext i32 %92 to i64
  %93 = load i32, i32* %ii, align 4
  %idxprom103 = sext i32 %93 to i64
  %94 = load i32, i32* %jj, align 4
  %idxprom104 = sext i32 %94 to i64
  %arrayidx105 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom104
  %arrayidx106 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx105, i32 0, i64 %idxprom103
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx106, i32 0, i64 %idxprom102
  %arrayidx108 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i32 0, i64 2
  %95 = load i32, i32* %arrayidx108, align 4
  %add109 = add nsw i32 %91, %95
  store i32 %add109, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %96 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %96 to i64
  %97 = load i32, i32* %ii, align 4
  %idxprom111 = sext i32 %97 to i64
  %98 = load i32, i32* %jj, align 4
  %idxprom112 = sext i32 %98 to i64
  %arrayidx113 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom112
  %arrayidx114 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx113, i32 0, i64 %idxprom111
  %arrayidx115 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx114, i32 0, i64 %idxprom110
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx115, i32 0, i64 1
  %99 = load i32, i32* %arrayidx116, align 4
  %100 = load i32, i32* %j, align 4
  %idxprom117 = sext i32 %100 to i64
  %101 = load i32, i32* %ii, align 4
  %idxprom118 = sext i32 %101 to i64
  %102 = load i32, i32* %jj, align 4
  %idxprom119 = sext i32 %102 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom119
  %arrayidx121 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx120, i32 0, i64 %idxprom118
  %arrayidx122 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx121, i32 0, i64 %idxprom117
  %arrayidx123 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx122, i32 0, i64 2
  %103 = load i32, i32* %arrayidx123, align 4
  %sub124 = sub nsw i32 %99, %103
  store i32 %sub124, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %104 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %104 to i64
  %105 = load i32, i32* %ii, align 4
  %idxprom126 = sext i32 %105 to i64
  %106 = load i32, i32* %jj, align 4
  %idxprom127 = sext i32 %106 to i64
  %arrayidx128 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom127
  %arrayidx129 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx128, i32 0, i64 %idxprom126
  %arrayidx130 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx129, i32 0, i64 %idxprom125
  %arrayidx131 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx130, i32 0, i64 0
  %107 = load i32, i32* %arrayidx131, align 4
  %108 = load i32, i32* %j, align 4
  %idxprom132 = sext i32 %108 to i64
  %109 = load i32, i32* %ii, align 4
  %idxprom133 = sext i32 %109 to i64
  %110 = load i32, i32* %jj, align 4
  %idxprom134 = sext i32 %110 to i64
  %arrayidx135 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom134
  %arrayidx136 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx135, i32 0, i64 %idxprom133
  %arrayidx137 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx136, i32 0, i64 %idxprom132
  %arrayidx138 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx137, i32 0, i64 3
  %111 = load i32, i32* %arrayidx138, align 4
  %sub139 = sub nsw i32 %107, %111
  store i32 %sub139, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %112 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %113 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %add140 = add nsw i32 %112, %113
  %114 = load i32, i32* %j, align 4
  %idxprom141 = sext i32 %114 to i64
  %arrayidx142 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom141
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx142, i32 0, i64 0
  store i32 %add140, i32* %arrayidx143, align 4
  %115 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %116 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %sub144 = sub nsw i32 %115, %116
  %117 = load i32, i32* %j, align 4
  %idxprom145 = sext i32 %117 to i64
  %arrayidx146 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom145
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx146, i32 0, i64 2
  store i32 %sub144, i32* %arrayidx147, align 4
  %118 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %shl = shl i32 %118, 1
  %119 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %add148 = add nsw i32 %shl, %119
  %120 = load i32, i32* %j, align 4
  %idxprom149 = sext i32 %120 to i64
  %arrayidx150 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom149
  %arrayidx151 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx150, i32 0, i64 1
  store i32 %add148, i32* %arrayidx151, align 4
  %121 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %122 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %shl152 = shl i32 %122, 1
  %sub153 = sub nsw i32 %121, %shl152
  %123 = load i32, i32* %j, align 4
  %idxprom154 = sext i32 %123 to i64
  %arrayidx155 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom154
  %arrayidx156 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx155, i32 0, i64 3
  store i32 %sub153, i32* %arrayidx156, align 4
  br label %for.inc.157

for.inc.157:                                      ; preds = %for.body.79
  %124 = load i32, i32* %j, align 4
  %inc158 = add nsw i32 %124, 1
  store i32 %inc158, i32* %j, align 4
  br label %for.cond.76

for.end.159:                                      ; preds = %for.cond.76
  store i32 0, i32* %i, align 4
  br label %for.cond.160

for.cond.160:                                     ; preds = %for.inc.218, %for.end.159
  %125 = load i32, i32* %i, align 4
  %cmp161 = icmp slt i32 %125, 4
  br i1 %cmp161, label %for.body.163, label %for.end.220

for.body.163:                                     ; preds = %for.cond.160
  %126 = load i32, i32* %i, align 4
  %idxprom164 = sext i32 %126 to i64
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom164
  %127 = load i32, i32* %arrayidx165, align 4
  %128 = load i32, i32* %i, align 4
  %idxprom166 = sext i32 %128 to i64
  %arrayidx167 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom166
  %129 = load i32, i32* %arrayidx167, align 4
  %add168 = add nsw i32 %127, %129
  store i32 %add168, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom169
  %131 = load i32, i32* %arrayidx170, align 4
  %132 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %132 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom171
  %133 = load i32, i32* %arrayidx172, align 4
  %add173 = add nsw i32 %131, %133
  store i32 %add173, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %134 = load i32, i32* %i, align 4
  %idxprom174 = sext i32 %134 to i64
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom174
  %135 = load i32, i32* %arrayidx175, align 4
  %136 = load i32, i32* %i, align 4
  %idxprom176 = sext i32 %136 to i64
  %arrayidx177 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom176
  %137 = load i32, i32* %arrayidx177, align 4
  %sub178 = sub nsw i32 %135, %137
  store i32 %sub178, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %138 = load i32, i32* %i, align 4
  %idxprom179 = sext i32 %138 to i64
  %arrayidx180 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom179
  %139 = load i32, i32* %arrayidx180, align 4
  %140 = load i32, i32* %i, align 4
  %idxprom181 = sext i32 %140 to i64
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom181
  %141 = load i32, i32* %arrayidx182, align 4
  %sub183 = sub nsw i32 %139, %141
  store i32 %sub183, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %142 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %143 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %add184 = add nsw i32 %142, %143
  %144 = load i32, i32* %i, align 4
  %idxprom185 = sext i32 %144 to i64
  %145 = load i32, i32* %ii, align 4
  %idxprom186 = sext i32 %145 to i64
  %146 = load i32, i32* %jj, align 4
  %idxprom187 = sext i32 %146 to i64
  %arrayidx188 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx188, i32 0, i64 %idxprom186
  %arrayidx190 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx189, i32 0, i64 0
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx190, i32 0, i64 %idxprom185
  store i32 %add184, i32* %arrayidx191, align 4
  %147 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %148 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %sub192 = sub nsw i32 %147, %148
  %149 = load i32, i32* %i, align 4
  %idxprom193 = sext i32 %149 to i64
  %150 = load i32, i32* %ii, align 4
  %idxprom194 = sext i32 %150 to i64
  %151 = load i32, i32* %jj, align 4
  %idxprom195 = sext i32 %151 to i64
  %arrayidx196 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom195
  %arrayidx197 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx196, i32 0, i64 %idxprom194
  %arrayidx198 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx197, i32 0, i64 2
  %arrayidx199 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx198, i32 0, i64 %idxprom193
  store i32 %sub192, i32* %arrayidx199, align 4
  %152 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %shl200 = shl i32 %152, 1
  %153 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %add201 = add nsw i32 %shl200, %153
  %154 = load i32, i32* %i, align 4
  %idxprom202 = sext i32 %154 to i64
  %155 = load i32, i32* %ii, align 4
  %idxprom203 = sext i32 %155 to i64
  %156 = load i32, i32* %jj, align 4
  %idxprom204 = sext i32 %156 to i64
  %arrayidx205 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom204
  %arrayidx206 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx205, i32 0, i64 %idxprom203
  %arrayidx207 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx206, i32 0, i64 1
  %arrayidx208 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx207, i32 0, i64 %idxprom202
  store i32 %add201, i32* %arrayidx208, align 4
  %157 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %158 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %shl209 = shl i32 %158, 1
  %sub210 = sub nsw i32 %157, %shl209
  %159 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %159 to i64
  %160 = load i32, i32* %ii, align 4
  %idxprom212 = sext i32 %160 to i64
  %161 = load i32, i32* %jj, align 4
  %idxprom213 = sext i32 %161 to i64
  %arrayidx214 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom213
  %arrayidx215 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx214, i32 0, i64 %idxprom212
  %arrayidx216 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx215, i32 0, i64 3
  %arrayidx217 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx216, i32 0, i64 %idxprom211
  store i32 %sub210, i32* %arrayidx217, align 4
  br label %for.inc.218

for.inc.218:                                      ; preds = %for.body.163
  %162 = load i32, i32* %i, align 4
  %inc219 = add nsw i32 %162, 1
  store i32 %inc219, i32* %i, align 4
  br label %for.cond.160

for.end.220:                                      ; preds = %for.cond.160
  br label %for.inc.221

for.inc.221:                                      ; preds = %for.end.220
  %163 = load i32, i32* %ii, align 4
  %inc222 = add nsw i32 %163, 1
  store i32 %inc222, i32* %ii, align 4
  br label %for.cond.72

for.end.223:                                      ; preds = %for.cond.72
  br label %for.inc.224

for.inc.224:                                      ; preds = %for.end.223
  %164 = load i32, i32* %jj, align 4
  %inc225 = add nsw i32 %164, 1
  store i32 %inc225, i32* %jj, align 4
  br label %for.cond.68

for.end.226:                                      ; preds = %for.cond.68
  store i32 0, i32* %j, align 4
  br label %for.cond.227

for.cond.227:                                     ; preds = %for.inc.248, %for.end.226
  %165 = load i32, i32* %j, align 4
  %cmp228 = icmp slt i32 %165, 4
  br i1 %cmp228, label %for.body.230, label %for.end.250

for.body.230:                                     ; preds = %for.cond.227
  store i32 0, i32* %i, align 4
  br label %for.cond.231

for.cond.231:                                     ; preds = %for.inc.245, %for.body.230
  %166 = load i32, i32* %i, align 4
  %cmp232 = icmp slt i32 %166, 4
  br i1 %cmp232, label %for.body.234, label %for.end.247

for.body.234:                                     ; preds = %for.cond.231
  %167 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %167 to i64
  %168 = load i32, i32* %j, align 4
  %idxprom236 = sext i32 %168 to i64
  %arrayidx237 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom236
  %arrayidx238 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx237, i32 0, i64 %idxprom235
  %arrayidx239 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx238, i32 0, i64 0
  %arrayidx240 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx239, i32 0, i64 0
  %169 = load i32, i32* %arrayidx240, align 4
  %170 = load i32, i32* %i, align 4
  %idxprom241 = sext i32 %170 to i64
  %171 = load i32, i32* %j, align 4
  %idxprom242 = sext i32 %171 to i64
  %arrayidx243 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom242
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx243, i32 0, i64 %idxprom241
  store i32 %169, i32* %arrayidx244, align 4
  br label %for.inc.245

for.inc.245:                                      ; preds = %for.body.234
  %172 = load i32, i32* %i, align 4
  %inc246 = add nsw i32 %172, 1
  store i32 %inc246, i32* %i, align 4
  br label %for.cond.231

for.end.247:                                      ; preds = %for.cond.231
  br label %for.inc.248

for.inc.248:                                      ; preds = %for.end.247
  %173 = load i32, i32* %j, align 4
  %inc249 = add nsw i32 %173, 1
  store i32 %inc249, i32* %j, align 4
  br label %for.cond.227

for.end.250:                                      ; preds = %for.cond.227
  store i32 0, i32* %j, align 4
  br label %for.cond.251

for.cond.251:                                     ; preds = %for.inc.299, %for.end.250
  %174 = load i32, i32* %j, align 4
  %cmp252 = icmp slt i32 %174, 4
  br i1 %cmp252, label %for.body.254, label %for.end.301

for.body.254:                                     ; preds = %for.cond.251
  %175 = load i32, i32* %j, align 4
  %idxprom255 = sext i32 %175 to i64
  %arrayidx256 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom255
  %arrayidx257 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx256, i32 0, i64 0
  %176 = load i32, i32* %arrayidx257, align 4
  %177 = load i32, i32* %j, align 4
  %idxprom258 = sext i32 %177 to i64
  %arrayidx259 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom258
  %arrayidx260 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx259, i32 0, i64 3
  %178 = load i32, i32* %arrayidx260, align 4
  %add261 = add nsw i32 %176, %178
  store i32 %add261, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %179 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %179 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom262
  %arrayidx264 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i32 0, i64 1
  %180 = load i32, i32* %arrayidx264, align 4
  %181 = load i32, i32* %j, align 4
  %idxprom265 = sext i32 %181 to i64
  %arrayidx266 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom265
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx266, i32 0, i64 2
  %182 = load i32, i32* %arrayidx267, align 4
  %add268 = add nsw i32 %180, %182
  store i32 %add268, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %183 = load i32, i32* %j, align 4
  %idxprom269 = sext i32 %183 to i64
  %arrayidx270 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom269
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx270, i32 0, i64 1
  %184 = load i32, i32* %arrayidx271, align 4
  %185 = load i32, i32* %j, align 4
  %idxprom272 = sext i32 %185 to i64
  %arrayidx273 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom272
  %arrayidx274 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx273, i32 0, i64 2
  %186 = load i32, i32* %arrayidx274, align 4
  %sub275 = sub nsw i32 %184, %186
  store i32 %sub275, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %187 = load i32, i32* %j, align 4
  %idxprom276 = sext i32 %187 to i64
  %arrayidx277 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom276
  %arrayidx278 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx277, i32 0, i64 0
  %188 = load i32, i32* %arrayidx278, align 4
  %189 = load i32, i32* %j, align 4
  %idxprom279 = sext i32 %189 to i64
  %arrayidx280 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom279
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx280, i32 0, i64 3
  %190 = load i32, i32* %arrayidx281, align 4
  %sub282 = sub nsw i32 %188, %190
  store i32 %sub282, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %191 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %192 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %add283 = add nsw i32 %191, %192
  %193 = load i32, i32* %j, align 4
  %idxprom284 = sext i32 %193 to i64
  %arrayidx285 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom284
  %arrayidx286 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx285, i32 0, i64 0
  store i32 %add283, i32* %arrayidx286, align 4
  %194 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %195 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %sub287 = sub nsw i32 %194, %195
  %196 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %196 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom288
  %arrayidx290 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i32 0, i64 2
  store i32 %sub287, i32* %arrayidx290, align 4
  %197 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %198 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %add291 = add nsw i32 %197, %198
  %199 = load i32, i32* %j, align 4
  %idxprom292 = sext i32 %199 to i64
  %arrayidx293 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom292
  %arrayidx294 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx293, i32 0, i64 1
  store i32 %add291, i32* %arrayidx294, align 4
  %200 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %201 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %sub295 = sub nsw i32 %200, %201
  %202 = load i32, i32* %j, align 4
  %idxprom296 = sext i32 %202 to i64
  %arrayidx297 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom296
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx297, i32 0, i64 3
  store i32 %sub295, i32* %arrayidx298, align 4
  br label %for.inc.299

for.inc.299:                                      ; preds = %for.body.254
  %203 = load i32, i32* %j, align 4
  %inc300 = add nsw i32 %203, 1
  store i32 %inc300, i32* %j, align 4
  br label %for.cond.251

for.end.301:                                      ; preds = %for.cond.251
  store i32 0, i32* %i, align 4
  br label %for.cond.302

for.cond.302:                                     ; preds = %for.inc.342, %for.end.301
  %204 = load i32, i32* %i, align 4
  %cmp303 = icmp slt i32 %204, 4
  br i1 %cmp303, label %for.body.305, label %for.end.344

for.body.305:                                     ; preds = %for.cond.302
  %205 = load i32, i32* %i, align 4
  %idxprom306 = sext i32 %205 to i64
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom306
  %206 = load i32, i32* %arrayidx307, align 4
  %207 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %207 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom308
  %208 = load i32, i32* %arrayidx309, align 4
  %add310 = add nsw i32 %206, %208
  store i32 %add310, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %209 = load i32, i32* %i, align 4
  %idxprom311 = sext i32 %209 to i64
  %arrayidx312 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom311
  %210 = load i32, i32* %arrayidx312, align 4
  %211 = load i32, i32* %i, align 4
  %idxprom313 = sext i32 %211 to i64
  %arrayidx314 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom313
  %212 = load i32, i32* %arrayidx314, align 4
  %add315 = add nsw i32 %210, %212
  store i32 %add315, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %213 = load i32, i32* %i, align 4
  %idxprom316 = sext i32 %213 to i64
  %arrayidx317 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom316
  %214 = load i32, i32* %arrayidx317, align 4
  %215 = load i32, i32* %i, align 4
  %idxprom318 = sext i32 %215 to i64
  %arrayidx319 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom318
  %216 = load i32, i32* %arrayidx319, align 4
  %sub320 = sub nsw i32 %214, %216
  store i32 %sub320, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %217 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %217 to i64
  %arrayidx322 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom321
  %218 = load i32, i32* %arrayidx322, align 4
  %219 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %219 to i64
  %arrayidx324 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom323
  %220 = load i32, i32* %arrayidx324, align 4
  %sub325 = sub nsw i32 %218, %220
  store i32 %sub325, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %221 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %222 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %add326 = add nsw i32 %221, %222
  %shr327 = ashr i32 %add326, 1
  %223 = load i32, i32* %i, align 4
  %idxprom328 = sext i32 %223 to i64
  %arrayidx329 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom328
  store i32 %shr327, i32* %arrayidx329, align 4
  %224 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 0), align 4
  %225 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 1), align 4
  %sub330 = sub nsw i32 %224, %225
  %shr331 = ashr i32 %sub330, 1
  %226 = load i32, i32* %i, align 4
  %idxprom332 = sext i32 %226 to i64
  %arrayidx333 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom332
  store i32 %shr331, i32* %arrayidx333, align 4
  %227 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %228 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %add334 = add nsw i32 %227, %228
  %shr335 = ashr i32 %add334, 1
  %229 = load i32, i32* %i, align 4
  %idxprom336 = sext i32 %229 to i64
  %arrayidx337 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom336
  store i32 %shr335, i32* %arrayidx337, align 4
  %230 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 3), align 4
  %231 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M5, i32 0, i64 2), align 4
  %sub338 = sub nsw i32 %230, %231
  %shr339 = ashr i32 %sub338, 1
  %232 = load i32, i32* %i, align 4
  %idxprom340 = sext i32 %232 to i64
  %arrayidx341 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom340
  store i32 %shr339, i32* %arrayidx341, align 4
  br label %for.inc.342

for.inc.342:                                      ; preds = %for.body.305
  %233 = load i32, i32* %i, align 4
  %inc343 = add nsw i32 %233, 1
  store i32 %inc343, i32* %i, align 4
  br label %for.cond.302

for.end.344:                                      ; preds = %for.cond.302
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.345

for.cond.345:                                     ; preds = %for.inc.403, %for.end.344
  %234 = load i32, i32* %coeff_ctr, align 4
  %cmp346 = icmp slt i32 %234, 16
  br i1 %cmp346, label %for.body.348, label %for.end.405

for.body.348:                                     ; preds = %for.cond.345
  %235 = load i32, i32* %coeff_ctr, align 4
  %idxprom349 = sext i32 %235 to i64
  %236 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx350 = getelementptr inbounds [2 x i8], [2 x i8]* %236, i64 %idxprom349
  %arrayidx351 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx350, i32 0, i64 0
  %237 = load i8, i8* %arrayidx351, align 1
  %conv352 = zext i8 %237 to i32
  store i32 %conv352, i32* %i, align 4
  %238 = load i32, i32* %coeff_ctr, align 4
  %idxprom353 = sext i32 %238 to i64
  %239 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx354 = getelementptr inbounds [2 x i8], [2 x i8]* %239, i64 %idxprom353
  %arrayidx355 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx354, i32 0, i64 1
  %240 = load i8, i8* %arrayidx355, align 1
  %conv356 = zext i8 %240 to i32
  store i32 %conv356, i32* %j, align 4
  %241 = load i32, i32* %run, align 4
  %inc357 = add nsw i32 %241, 1
  store i32 %inc357, i32* %run, align 4
  %242 = load i32, i32* %i, align 4
  %idxprom358 = sext i32 %242 to i64
  %243 = load i32, i32* %j, align 4
  %idxprom359 = sext i32 %243 to i64
  %arrayidx360 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom359
  %arrayidx361 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx360, i32 0, i64 %idxprom358
  %244 = load i32, i32* %arrayidx361, align 4
  %call = call i32 @iabs(i32 %244)
  %245 = load i32**, i32*** %levelscale, align 8
  %arrayidx362 = getelementptr inbounds i32*, i32** %245, i64 0
  %246 = load i32*, i32** %arrayidx362, align 8
  %arrayidx363 = getelementptr inbounds i32, i32* %246, i64 0
  %247 = load i32, i32* %arrayidx363, align 4
  %mul = mul nsw i32 %call, %247
  %248 = load i32**, i32*** %leveloffset, align 8
  %arrayidx364 = getelementptr inbounds i32*, i32** %248, i64 0
  %249 = load i32*, i32** %arrayidx364, align 8
  %arrayidx365 = getelementptr inbounds i32, i32* %249, i64 0
  %250 = load i32, i32* %arrayidx365, align 4
  %shl366 = shl i32 %250, 1
  %add367 = add nsw i32 %mul, %shl366
  %251 = load i32, i32* %q_bits, align 4
  %add368 = add nsw i32 %251, 1
  %shr369 = ashr i32 %add367, %add368
  store i32 %shr369, i32* %level, align 4
  %252 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %252, i32 0, i32 74
  %253 = load i32, i32* %symbol_mode, align 4
  %cmp370 = icmp eq i32 %253, 0
  br i1 %cmp370, label %land.lhs.true, label %if.end.379

land.lhs.true:                                    ; preds = %for.body.348
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp372 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 9
  %255 = load i32, i32* %qp372, align 4
  %cmp373 = icmp slt i32 %255, 10
  br i1 %cmp373, label %if.then.375, label %if.end.379

if.then.375:                                      ; preds = %land.lhs.true
  %256 = load i32, i32* %level, align 4
  %cmp376 = icmp sgt i32 %256, 2063
  br i1 %cmp376, label %if.then.378, label %if.end

if.then.378:                                      ; preds = %if.then.375
  store i32 2063, i32* %level, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.378, %if.then.375
  br label %if.end.379

if.end.379:                                       ; preds = %if.end, %land.lhs.true, %for.body.348
  %257 = load i32, i32* %level, align 4
  %cmp380 = icmp ne i32 %257, 0
  br i1 %cmp380, label %if.then.382, label %if.end.393

if.then.382:                                      ; preds = %if.end.379
  %258 = load i32, i32* %level, align 4
  %259 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %259 to i64
  %260 = load i32, i32* %j, align 4
  %idxprom384 = sext i32 %260 to i64
  %arrayidx385 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom384
  %arrayidx386 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx385, i32 0, i64 %idxprom383
  %261 = load i32, i32* %arrayidx386, align 4
  %call387 = call i32 @isignab(i32 %258, i32 %261)
  %262 = load i32, i32* %scan_pos, align 4
  %idxprom388 = sext i32 %262 to i64
  %263 = load i32*, i32** %DCLevel, align 8
  %arrayidx389 = getelementptr inbounds i32, i32* %263, i64 %idxprom388
  store i32 %call387, i32* %arrayidx389, align 4
  %264 = load i32, i32* %run, align 4
  %265 = load i32, i32* %scan_pos, align 4
  %idxprom390 = sext i32 %265 to i64
  %266 = load i32*, i32** %DCRun, align 8
  %arrayidx391 = getelementptr inbounds i32, i32* %266, i64 %idxprom390
  store i32 %264, i32* %arrayidx391, align 4
  %267 = load i32, i32* %scan_pos, align 4
  %inc392 = add nsw i32 %267, 1
  store i32 %inc392, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.393

if.end.393:                                       ; preds = %if.then.382, %if.end.379
  %268 = load i32, i32* %level, align 4
  %269 = load i32, i32* %i, align 4
  %idxprom394 = sext i32 %269 to i64
  %270 = load i32, i32* %j, align 4
  %idxprom395 = sext i32 %270 to i64
  %arrayidx396 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom395
  %arrayidx397 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx396, i32 0, i64 %idxprom394
  %271 = load i32, i32* %arrayidx397, align 4
  %call398 = call i32 @isignab(i32 %268, i32 %271)
  %272 = load i32, i32* %i, align 4
  %idxprom399 = sext i32 %272 to i64
  %273 = load i32, i32* %j, align 4
  %idxprom400 = sext i32 %273 to i64
  %arrayidx401 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom400
  %arrayidx402 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx401, i32 0, i64 %idxprom399
  store i32 %call398, i32* %arrayidx402, align 4
  br label %for.inc.403

for.inc.403:                                      ; preds = %if.end.393
  %274 = load i32, i32* %coeff_ctr, align 4
  %inc404 = add nsw i32 %274, 1
  store i32 %inc404, i32* %coeff_ctr, align 4
  br label %for.cond.345

for.end.405:                                      ; preds = %for.cond.345
  %275 = load i32, i32* %scan_pos, align 4
  %idxprom406 = sext i32 %275 to i64
  %276 = load i32*, i32** %DCLevel, align 8
  %arrayidx407 = getelementptr inbounds i32, i32* %276, i64 %idxprom406
  store i32 0, i32* %arrayidx407, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.408

for.cond.408:                                     ; preds = %for.inc.456, %for.end.405
  %277 = load i32, i32* %j, align 4
  %cmp409 = icmp slt i32 %277, 4
  br i1 %cmp409, label %for.body.411, label %for.end.458

for.body.411:                                     ; preds = %for.cond.408
  %278 = load i32, i32* %j, align 4
  %idxprom412 = sext i32 %278 to i64
  %arrayidx413 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom412
  %arrayidx414 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx413, i32 0, i64 0
  %279 = load i32, i32* %arrayidx414, align 4
  %280 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %280 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom415
  %arrayidx417 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i32 0, i64 2
  %281 = load i32, i32* %arrayidx417, align 4
  %add418 = add nsw i32 %279, %281
  store i32 %add418, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %282 = load i32, i32* %j, align 4
  %idxprom419 = sext i32 %282 to i64
  %arrayidx420 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom419
  %arrayidx421 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx420, i32 0, i64 0
  %283 = load i32, i32* %arrayidx421, align 4
  %284 = load i32, i32* %j, align 4
  %idxprom422 = sext i32 %284 to i64
  %arrayidx423 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom422
  %arrayidx424 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx423, i32 0, i64 2
  %285 = load i32, i32* %arrayidx424, align 4
  %sub425 = sub nsw i32 %283, %285
  store i32 %sub425, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %286 = load i32, i32* %j, align 4
  %idxprom426 = sext i32 %286 to i64
  %arrayidx427 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom426
  %arrayidx428 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx427, i32 0, i64 1
  %287 = load i32, i32* %arrayidx428, align 4
  %288 = load i32, i32* %j, align 4
  %idxprom429 = sext i32 %288 to i64
  %arrayidx430 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom429
  %arrayidx431 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx430, i32 0, i64 3
  %289 = load i32, i32* %arrayidx431, align 4
  %sub432 = sub nsw i32 %287, %289
  store i32 %sub432, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %290 = load i32, i32* %j, align 4
  %idxprom433 = sext i32 %290 to i64
  %arrayidx434 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom433
  %arrayidx435 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx434, i32 0, i64 1
  %291 = load i32, i32* %arrayidx435, align 4
  %292 = load i32, i32* %j, align 4
  %idxprom436 = sext i32 %292 to i64
  %arrayidx437 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom436
  %arrayidx438 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx437, i32 0, i64 3
  %293 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %291, %293
  store i32 %add439, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %294 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %295 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %add440 = add nsw i32 %294, %295
  %296 = load i32, i32* %j, align 4
  %idxprom441 = sext i32 %296 to i64
  %arrayidx442 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom441
  %arrayidx443 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx442, i32 0, i64 0
  store i32 %add440, i32* %arrayidx443, align 4
  %297 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %298 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %add444 = add nsw i32 %297, %298
  %299 = load i32, i32* %j, align 4
  %idxprom445 = sext i32 %299 to i64
  %arrayidx446 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom445
  %arrayidx447 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx446, i32 0, i64 1
  store i32 %add444, i32* %arrayidx447, align 4
  %300 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %301 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %sub448 = sub nsw i32 %300, %301
  %302 = load i32, i32* %j, align 4
  %idxprom449 = sext i32 %302 to i64
  %arrayidx450 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom449
  %arrayidx451 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx450, i32 0, i64 2
  store i32 %sub448, i32* %arrayidx451, align 4
  %303 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %304 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %sub452 = sub nsw i32 %303, %304
  %305 = load i32, i32* %j, align 4
  %idxprom453 = sext i32 %305 to i64
  %arrayidx454 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom453
  %arrayidx455 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx454, i32 0, i64 3
  store i32 %sub452, i32* %arrayidx455, align 4
  br label %for.inc.456

for.inc.456:                                      ; preds = %for.body.411
  %306 = load i32, i32* %j, align 4
  %inc457 = add nsw i32 %306, 1
  store i32 %inc457, i32* %j, align 4
  br label %for.cond.408

for.end.458:                                      ; preds = %for.cond.408
  store i32 0, i32* %i, align 4
  br label %for.cond.459

for.cond.459:                                     ; preds = %for.inc.523, %for.end.458
  %307 = load i32, i32* %i, align 4
  %cmp460 = icmp slt i32 %307, 4
  br i1 %cmp460, label %for.body.462, label %for.end.525

for.body.462:                                     ; preds = %for.cond.459
  %308 = load i32, i32* %i, align 4
  %idxprom463 = sext i32 %308 to i64
  %arrayidx464 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom463
  %309 = load i32, i32* %arrayidx464, align 4
  %310 = load i32, i32* %i, align 4
  %idxprom465 = sext i32 %310 to i64
  %arrayidx466 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom465
  %311 = load i32, i32* %arrayidx466, align 4
  %add467 = add nsw i32 %309, %311
  store i32 %add467, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %312 = load i32, i32* %i, align 4
  %idxprom468 = sext i32 %312 to i64
  %arrayidx469 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom468
  %313 = load i32, i32* %arrayidx469, align 4
  %314 = load i32, i32* %i, align 4
  %idxprom470 = sext i32 %314 to i64
  %arrayidx471 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom470
  %315 = load i32, i32* %arrayidx471, align 4
  %sub472 = sub nsw i32 %313, %315
  store i32 %sub472, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %316 = load i32, i32* %i, align 4
  %idxprom473 = sext i32 %316 to i64
  %arrayidx474 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom473
  %317 = load i32, i32* %arrayidx474, align 4
  %318 = load i32, i32* %i, align 4
  %idxprom475 = sext i32 %318 to i64
  %arrayidx476 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom475
  %319 = load i32, i32* %arrayidx476, align 4
  %sub477 = sub nsw i32 %317, %319
  store i32 %sub477, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %320 = load i32, i32* %i, align 4
  %idxprom478 = sext i32 %320 to i64
  %arrayidx479 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom478
  %321 = load i32, i32* %arrayidx479, align 4
  %322 = load i32, i32* %i, align 4
  %idxprom480 = sext i32 %322 to i64
  %arrayidx481 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom480
  %323 = load i32, i32* %arrayidx481, align 4
  %add482 = add nsw i32 %321, %323
  store i32 %add482, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %324 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %325 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %add483 = add nsw i32 %324, %325
  %326 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx484 = getelementptr inbounds i32*, i32** %326, i64 0
  %327 = load i32*, i32** %arrayidx484, align 8
  %arrayidx485 = getelementptr inbounds i32, i32* %327, i64 0
  %328 = load i32, i32* %arrayidx485, align 4
  %mul486 = mul nsw i32 %add483, %328
  %329 = load i32, i32* %qp_per, align 4
  %shl487 = shl i32 %mul486, %329
  %call488 = call i32 @rshift_rnd_sf(i32 %shl487, i32 6)
  %330 = load i32, i32* %i, align 4
  %idxprom489 = sext i32 %330 to i64
  %arrayidx490 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* getelementptr inbounds ([4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 0), i32 0, i64 %idxprom489
  %arrayidx491 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx490, i32 0, i64 0
  %arrayidx492 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx491, i32 0, i64 0
  store i32 %call488, i32* %arrayidx492, align 4
  %331 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %332 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %add493 = add nsw i32 %331, %332
  %333 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx494 = getelementptr inbounds i32*, i32** %333, i64 0
  %334 = load i32*, i32** %arrayidx494, align 8
  %arrayidx495 = getelementptr inbounds i32, i32* %334, i64 0
  %335 = load i32, i32* %arrayidx495, align 4
  %mul496 = mul nsw i32 %add493, %335
  %336 = load i32, i32* %qp_per, align 4
  %shl497 = shl i32 %mul496, %336
  %call498 = call i32 @rshift_rnd_sf(i32 %shl497, i32 6)
  %337 = load i32, i32* %i, align 4
  %idxprom499 = sext i32 %337 to i64
  %arrayidx500 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* getelementptr inbounds ([4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 1), i32 0, i64 %idxprom499
  %arrayidx501 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx500, i32 0, i64 0
  %arrayidx502 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx501, i32 0, i64 0
  store i32 %call498, i32* %arrayidx502, align 4
  %338 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %339 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %sub503 = sub nsw i32 %338, %339
  %340 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx504 = getelementptr inbounds i32*, i32** %340, i64 0
  %341 = load i32*, i32** %arrayidx504, align 8
  %arrayidx505 = getelementptr inbounds i32, i32* %341, i64 0
  %342 = load i32, i32* %arrayidx505, align 4
  %mul506 = mul nsw i32 %sub503, %342
  %343 = load i32, i32* %qp_per, align 4
  %shl507 = shl i32 %mul506, %343
  %call508 = call i32 @rshift_rnd_sf(i32 %shl507, i32 6)
  %344 = load i32, i32* %i, align 4
  %idxprom509 = sext i32 %344 to i64
  %arrayidx510 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* getelementptr inbounds ([4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 2), i32 0, i64 %idxprom509
  %arrayidx511 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx510, i32 0, i64 0
  %arrayidx512 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx511, i32 0, i64 0
  store i32 %call508, i32* %arrayidx512, align 4
  %345 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %346 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %sub513 = sub nsw i32 %345, %346
  %347 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx514 = getelementptr inbounds i32*, i32** %347, i64 0
  %348 = load i32*, i32** %arrayidx514, align 8
  %arrayidx515 = getelementptr inbounds i32, i32* %348, i64 0
  %349 = load i32, i32* %arrayidx515, align 4
  %mul516 = mul nsw i32 %sub513, %349
  %350 = load i32, i32* %qp_per, align 4
  %shl517 = shl i32 %mul516, %350
  %call518 = call i32 @rshift_rnd_sf(i32 %shl517, i32 6)
  %351 = load i32, i32* %i, align 4
  %idxprom519 = sext i32 %351 to i64
  %arrayidx520 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* getelementptr inbounds ([4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 3), i32 0, i64 %idxprom519
  %arrayidx521 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx520, i32 0, i64 0
  %arrayidx522 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx521, i32 0, i64 0
  store i32 %call518, i32* %arrayidx522, align 4
  br label %for.inc.523

for.inc.523:                                      ; preds = %for.body.462
  %352 = load i32, i32* %i, align 4
  %inc524 = add nsw i32 %352, 1
  store i32 %inc524, i32* %i, align 4
  br label %for.cond.459

for.end.525:                                      ; preds = %for.cond.459
  br label %if.end.599

if.else:                                          ; preds = %for.end.66
  store i32 0, i32* %j, align 4
  br label %for.cond.526

for.cond.526:                                     ; preds = %for.inc.547, %if.else
  %353 = load i32, i32* %j, align 4
  %cmp527 = icmp slt i32 %353, 4
  br i1 %cmp527, label %for.body.529, label %for.end.549

for.body.529:                                     ; preds = %for.cond.526
  store i32 0, i32* %i, align 4
  br label %for.cond.530

for.cond.530:                                     ; preds = %for.inc.544, %for.body.529
  %354 = load i32, i32* %i, align 4
  %cmp531 = icmp slt i32 %354, 4
  br i1 %cmp531, label %for.body.533, label %for.end.546

for.body.533:                                     ; preds = %for.cond.530
  %355 = load i32, i32* %i, align 4
  %idxprom534 = sext i32 %355 to i64
  %356 = load i32, i32* %j, align 4
  %idxprom535 = sext i32 %356 to i64
  %arrayidx536 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom535
  %arrayidx537 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx536, i32 0, i64 %idxprom534
  %arrayidx538 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx537, i32 0, i64 0
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx538, i32 0, i64 0
  %357 = load i32, i32* %arrayidx539, align 4
  %358 = load i32, i32* %i, align 4
  %idxprom540 = sext i32 %358 to i64
  %359 = load i32, i32* %j, align 4
  %idxprom541 = sext i32 %359 to i64
  %arrayidx542 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom541
  %arrayidx543 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx542, i32 0, i64 %idxprom540
  store i32 %357, i32* %arrayidx543, align 4
  br label %for.inc.544

for.inc.544:                                      ; preds = %for.body.533
  %360 = load i32, i32* %i, align 4
  %inc545 = add nsw i32 %360, 1
  store i32 %inc545, i32* %i, align 4
  br label %for.cond.530

for.end.546:                                      ; preds = %for.cond.530
  br label %for.inc.547

for.inc.547:                                      ; preds = %for.end.546
  %361 = load i32, i32* %j, align 4
  %inc548 = add nsw i32 %361, 1
  store i32 %inc548, i32* %j, align 4
  br label %for.cond.526

for.end.549:                                      ; preds = %for.cond.526
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.550

for.cond.550:                                     ; preds = %for.inc.594, %for.end.549
  %362 = load i32, i32* %coeff_ctr, align 4
  %cmp551 = icmp slt i32 %362, 16
  br i1 %cmp551, label %for.body.553, label %for.end.596

for.body.553:                                     ; preds = %for.cond.550
  %363 = load i32, i32* %coeff_ctr, align 4
  %idxprom554 = sext i32 %363 to i64
  %364 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx555 = getelementptr inbounds [2 x i8], [2 x i8]* %364, i64 %idxprom554
  %arrayidx556 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx555, i32 0, i64 0
  %365 = load i8, i8* %arrayidx556, align 1
  %conv557 = zext i8 %365 to i32
  store i32 %conv557, i32* %i, align 4
  %366 = load i32, i32* %coeff_ctr, align 4
  %idxprom558 = sext i32 %366 to i64
  %367 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx559 = getelementptr inbounds [2 x i8], [2 x i8]* %367, i64 %idxprom558
  %arrayidx560 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx559, i32 0, i64 1
  %368 = load i8, i8* %arrayidx560, align 1
  %conv561 = zext i8 %368 to i32
  store i32 %conv561, i32* %j, align 4
  %369 = load i32, i32* %run, align 4
  %inc562 = add nsw i32 %369, 1
  store i32 %inc562, i32* %run, align 4
  %370 = load i32, i32* %i, align 4
  %idxprom563 = sext i32 %370 to i64
  %371 = load i32, i32* %j, align 4
  %idxprom564 = sext i32 %371 to i64
  %arrayidx565 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom564
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx565, i32 0, i64 %idxprom563
  %372 = load i32, i32* %arrayidx566, align 4
  %call567 = call i32 @iabs(i32 %372)
  store i32 %call567, i32* %level, align 4
  %373 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode568 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %373, i32 0, i32 74
  %374 = load i32, i32* %symbol_mode568, align 4
  %cmp569 = icmp eq i32 %374, 0
  br i1 %cmp569, label %land.lhs.true.571, label %if.end.579

land.lhs.true.571:                                ; preds = %for.body.553
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp572 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 9
  %376 = load i32, i32* %qp572, align 4
  %cmp573 = icmp slt i32 %376, 10
  br i1 %cmp573, label %land.lhs.true.575, label %if.end.579

land.lhs.true.575:                                ; preds = %land.lhs.true.571
  %377 = load i32, i32* %level, align 4
  %cmp576 = icmp sgt i32 %377, 2063
  br i1 %cmp576, label %if.then.578, label %if.end.579

if.then.578:                                      ; preds = %land.lhs.true.575
  store i32 2063, i32* %level, align 4
  br label %if.end.579

if.end.579:                                       ; preds = %if.then.578, %land.lhs.true.575, %land.lhs.true.571, %for.body.553
  %378 = load i32, i32* %level, align 4
  %cmp580 = icmp ne i32 %378, 0
  br i1 %cmp580, label %if.then.582, label %if.end.593

if.then.582:                                      ; preds = %if.end.579
  %379 = load i32, i32* %level, align 4
  %380 = load i32, i32* %i, align 4
  %idxprom583 = sext i32 %380 to i64
  %381 = load i32, i32* %j, align 4
  %idxprom584 = sext i32 %381 to i64
  %arrayidx585 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom584
  %arrayidx586 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx585, i32 0, i64 %idxprom583
  %382 = load i32, i32* %arrayidx586, align 4
  %call587 = call i32 @isignab(i32 %379, i32 %382)
  %383 = load i32, i32* %scan_pos, align 4
  %idxprom588 = sext i32 %383 to i64
  %384 = load i32*, i32** %DCLevel, align 8
  %arrayidx589 = getelementptr inbounds i32, i32* %384, i64 %idxprom588
  store i32 %call587, i32* %arrayidx589, align 4
  %385 = load i32, i32* %run, align 4
  %386 = load i32, i32* %scan_pos, align 4
  %idxprom590 = sext i32 %386 to i64
  %387 = load i32*, i32** %DCRun, align 8
  %arrayidx591 = getelementptr inbounds i32, i32* %387, i64 %idxprom590
  store i32 %385, i32* %arrayidx591, align 4
  %388 = load i32, i32* %scan_pos, align 4
  %inc592 = add nsw i32 %388, 1
  store i32 %inc592, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.593

if.end.593:                                       ; preds = %if.then.582, %if.end.579
  br label %for.inc.594

for.inc.594:                                      ; preds = %if.end.593
  %389 = load i32, i32* %coeff_ctr, align 4
  %inc595 = add nsw i32 %389, 1
  store i32 %inc595, i32* %coeff_ctr, align 4
  br label %for.cond.550

for.end.596:                                      ; preds = %for.cond.550
  %390 = load i32, i32* %scan_pos, align 4
  %idxprom597 = sext i32 %390 to i64
  %391 = load i32*, i32** %DCLevel, align 8
  %arrayidx598 = getelementptr inbounds i32, i32* %391, i64 %idxprom597
  store i32 0, i32* %arrayidx598, align 4
  br label %if.end.599

if.end.599:                                       ; preds = %for.end.596, %for.end.525
  store i32 0, i32* %jj, align 4
  br label %for.cond.600

for.cond.600:                                     ; preds = %for.inc.908, %if.end.599
  %392 = load i32, i32* %jj, align 4
  %cmp601 = icmp slt i32 %392, 4
  br i1 %cmp601, label %for.body.603, label %for.end.910

for.body.603:                                     ; preds = %for.cond.600
  store i32 0, i32* %ii, align 4
  br label %for.cond.604

for.cond.604:                                     ; preds = %for.inc.905, %for.body.603
  %393 = load i32, i32* %ii, align 4
  %cmp605 = icmp slt i32 %393, 4
  br i1 %cmp605, label %for.body.607, label %for.end.907

for.body.607:                                     ; preds = %for.cond.604
  store i32 0, i32* %j, align 4
  br label %for.cond.608

for.cond.608:                                     ; preds = %for.inc.620, %for.body.607
  %394 = load i32, i32* %j, align 4
  %cmp609 = icmp slt i32 %394, 4
  br i1 %cmp609, label %for.body.611, label %for.end.622

for.body.611:                                     ; preds = %for.cond.608
  %395 = load i32, i32* %j, align 4
  %idxprom612 = sext i32 %395 to i64
  %arrayidx613 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom612
  %396 = bitcast [4 x i32]* %arrayidx613 to i8*
  %397 = load i32, i32* %j, align 4
  %idxprom614 = sext i32 %397 to i64
  %398 = load i32, i32* %ii, align 4
  %idxprom615 = sext i32 %398 to i64
  %399 = load i32, i32* %jj, align 4
  %idxprom616 = sext i32 %399 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom616
  %arrayidx618 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx617, i32 0, i64 %idxprom615
  %arrayidx619 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx618, i32 0, i64 %idxprom614
  %400 = bitcast [4 x i32]* %arrayidx619 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %396, i8* %400, i64 16, i32 4, i1 false)
  br label %for.inc.620

for.inc.620:                                      ; preds = %for.body.611
  %401 = load i32, i32* %j, align 4
  %inc621 = add nsw i32 %401, 1
  store i32 %inc621, i32* %j, align 4
  br label %for.cond.608

for.end.622:                                      ; preds = %for.cond.608
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  %402 = load i32, i32* %jj, align 4
  %shr623 = ashr i32 %402, 1
  %mul624 = mul nsw i32 2, %shr623
  %403 = load i32, i32* %ii, align 4
  %shr625 = ashr i32 %403, 1
  %add626 = add nsw i32 %mul624, %shr625
  store i32 %add626, i32* %b8, align 4
  %404 = load i32, i32* %jj, align 4
  %and627 = and i32 %404, 1
  %mul628 = mul nsw i32 2, %and627
  %405 = load i32, i32* %ii, align 4
  %and629 = and i32 %405, 1
  %add630 = add nsw i32 %mul628, %and629
  store i32 %add630, i32* %b4, align 4
  %406 = load i32, i32* %b4, align 4
  %idxprom631 = sext i32 %406 to i64
  %407 = load i32, i32* %b8, align 4
  %idxprom632 = sext i32 %407 to i64
  %408 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %408, i32 0, i32 53
  %409 = load i32****, i32***** %cofAC, align 8
  %arrayidx633 = getelementptr inbounds i32***, i32**** %409, i64 %idxprom632
  %410 = load i32***, i32**** %arrayidx633, align 8
  %arrayidx634 = getelementptr inbounds i32**, i32*** %410, i64 %idxprom631
  %411 = load i32**, i32*** %arrayidx634, align 8
  %arrayidx635 = getelementptr inbounds i32*, i32** %411, i64 0
  %412 = load i32*, i32** %arrayidx635, align 8
  store i32* %412, i32** %ACLevel, align 8
  %413 = load i32, i32* %b4, align 4
  %idxprom636 = sext i32 %413 to i64
  %414 = load i32, i32* %b8, align 4
  %idxprom637 = sext i32 %414 to i64
  %415 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC638 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %415, i32 0, i32 53
  %416 = load i32****, i32***** %cofAC638, align 8
  %arrayidx639 = getelementptr inbounds i32***, i32**** %416, i64 %idxprom637
  %417 = load i32***, i32**** %arrayidx639, align 8
  %arrayidx640 = getelementptr inbounds i32**, i32*** %417, i64 %idxprom636
  %418 = load i32**, i32*** %arrayidx640, align 8
  %arrayidx641 = getelementptr inbounds i32*, i32** %418, i64 1
  %419 = load i32*, i32** %arrayidx641, align 8
  store i32* %419, i32** %ACRun, align 8
  %420 = load i32, i32* %lossless_qpprime, align 4
  %tobool642 = icmp ne i32 %420, 0
  br i1 %tobool642, label %if.else.852, label %if.then.643

if.then.643:                                      ; preds = %for.end.622
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.644

for.cond.644:                                     ; preds = %for.inc.733, %if.then.643
  %421 = load i32, i32* %coeff_ctr, align 4
  %cmp645 = icmp slt i32 %421, 16
  br i1 %cmp645, label %for.body.647, label %for.end.735

for.body.647:                                     ; preds = %for.cond.644
  %422 = load i32, i32* %coeff_ctr, align 4
  %idxprom648 = sext i32 %422 to i64
  %423 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx649 = getelementptr inbounds [2 x i8], [2 x i8]* %423, i64 %idxprom648
  %arrayidx650 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx649, i32 0, i64 0
  %424 = load i8, i8* %arrayidx650, align 1
  %conv651 = zext i8 %424 to i32
  store i32 %conv651, i32* %i, align 4
  %425 = load i32, i32* %coeff_ctr, align 4
  %idxprom652 = sext i32 %425 to i64
  %426 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx653 = getelementptr inbounds [2 x i8], [2 x i8]* %426, i64 %idxprom652
  %arrayidx654 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx653, i32 0, i64 1
  %427 = load i8, i8* %arrayidx654, align 1
  %conv655 = zext i8 %427 to i32
  store i32 %conv655, i32* %j, align 4
  %428 = load i32, i32* %run, align 4
  %inc656 = add nsw i32 %428, 1
  store i32 %inc656, i32* %run, align 4
  %429 = load i32, i32* %i, align 4
  %idxprom657 = sext i32 %429 to i64
  %430 = load i32, i32* %j, align 4
  %idxprom658 = sext i32 %430 to i64
  %arrayidx659 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom658
  %arrayidx660 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx659, i32 0, i64 %idxprom657
  %431 = load i32, i32* %arrayidx660, align 4
  %call661 = call i32 @iabs(i32 %431)
  %432 = load i32, i32* %i, align 4
  %idxprom662 = sext i32 %432 to i64
  %433 = load i32, i32* %j, align 4
  %idxprom663 = sext i32 %433 to i64
  %434 = load i32**, i32*** %levelscale, align 8
  %arrayidx664 = getelementptr inbounds i32*, i32** %434, i64 %idxprom663
  %435 = load i32*, i32** %arrayidx664, align 8
  %arrayidx665 = getelementptr inbounds i32, i32* %435, i64 %idxprom662
  %436 = load i32, i32* %arrayidx665, align 4
  %mul666 = mul nsw i32 %call661, %436
  %437 = load i32, i32* %i, align 4
  %idxprom667 = sext i32 %437 to i64
  %438 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %438 to i64
  %439 = load i32**, i32*** %leveloffset, align 8
  %arrayidx669 = getelementptr inbounds i32*, i32** %439, i64 %idxprom668
  %440 = load i32*, i32** %arrayidx669, align 8
  %arrayidx670 = getelementptr inbounds i32, i32* %440, i64 %idxprom667
  %441 = load i32, i32* %arrayidx670, align 4
  %add671 = add nsw i32 %mul666, %441
  %442 = load i32, i32* %q_bits, align 4
  %shr672 = ashr i32 %add671, %442
  store i32 %shr672, i32* %level, align 4
  %443 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %443, i32 0, i32 98
  %444 = load i32, i32* %AdaptiveRounding, align 4
  %tobool673 = icmp ne i32 %444, 0
  br i1 %tobool673, label %if.then.674, label %if.end.702

if.then.674:                                      ; preds = %for.body.647
  %445 = load i32, i32* %level, align 4
  %cmp675 = icmp eq i32 %445, 0
  br i1 %cmp675, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.674
  br label %cond.end

cond.false:                                       ; preds = %if.then.674
  %446 = load i32, i32* @AdaptRndWeight, align 4
  %447 = load i32, i32* %i, align 4
  %idxprom677 = sext i32 %447 to i64
  %448 = load i32, i32* %j, align 4
  %idxprom678 = sext i32 %448 to i64
  %arrayidx679 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom678
  %arrayidx680 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx679, i32 0, i64 %idxprom677
  %449 = load i32, i32* %arrayidx680, align 4
  %call681 = call i32 @iabs(i32 %449)
  %450 = load i32, i32* %i, align 4
  %idxprom682 = sext i32 %450 to i64
  %451 = load i32, i32* %j, align 4
  %idxprom683 = sext i32 %451 to i64
  %452 = load i32**, i32*** %levelscale, align 8
  %arrayidx684 = getelementptr inbounds i32*, i32** %452, i64 %idxprom683
  %453 = load i32*, i32** %arrayidx684, align 8
  %arrayidx685 = getelementptr inbounds i32, i32* %453, i64 %idxprom682
  %454 = load i32, i32* %arrayidx685, align 4
  %mul686 = mul nsw i32 %call681, %454
  %455 = load i32, i32* %level, align 4
  %456 = load i32, i32* %q_bits, align 4
  %shl687 = shl i32 %455, %456
  %sub688 = sub nsw i32 %mul686, %shl687
  %mul689 = mul nsw i32 %446, %sub688
  %457 = load i32, i32* %q_bits, align 4
  %add690 = add nsw i32 %457, 1
  %call691 = call i32 @rshift_rnd_sf(i32 %mul689, i32 %add690)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond692 = phi i32 [ 0, %cond.true ], [ %call691, %cond.false ]
  %458 = load i32, i32* %ii, align 4
  %mul693 = mul nsw i32 %458, 4
  %459 = load i32, i32* %i, align 4
  %add694 = add nsw i32 %mul693, %459
  %idxprom695 = sext i32 %add694 to i64
  %460 = load i32, i32* %jj, align 4
  %mul696 = mul nsw i32 %460, 4
  %461 = load i32, i32* %j, align 4
  %add697 = add nsw i32 %mul696, %461
  %idxprom698 = sext i32 %add697 to i64
  %462 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %462, i32 0, i32 55
  %463 = load i32***, i32**** %fadjust4x4, align 8
  %arrayidx699 = getelementptr inbounds i32**, i32*** %463, i64 2
  %464 = load i32**, i32*** %arrayidx699, align 8
  %arrayidx700 = getelementptr inbounds i32*, i32** %464, i64 %idxprom698
  %465 = load i32*, i32** %arrayidx700, align 8
  %arrayidx701 = getelementptr inbounds i32, i32* %465, i64 %idxprom695
  store i32 %cond692, i32* %arrayidx701, align 4
  br label %if.end.702

if.end.702:                                       ; preds = %cond.end, %for.body.647
  %466 = load i32, i32* %level, align 4
  %cmp703 = icmp ne i32 %466, 0
  br i1 %cmp703, label %if.then.705, label %if.end.716

if.then.705:                                      ; preds = %if.end.702
  store i32 15, i32* %ac_coef, align 4
  %467 = load i32, i32* %level, align 4
  %468 = load i32, i32* %i, align 4
  %idxprom706 = sext i32 %468 to i64
  %469 = load i32, i32* %j, align 4
  %idxprom707 = sext i32 %469 to i64
  %arrayidx708 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom707
  %arrayidx709 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx708, i32 0, i64 %idxprom706
  %470 = load i32, i32* %arrayidx709, align 4
  %call710 = call i32 @isignab(i32 %467, i32 %470)
  %471 = load i32, i32* %scan_pos, align 4
  %idxprom711 = sext i32 %471 to i64
  %472 = load i32*, i32** %ACLevel, align 8
  %arrayidx712 = getelementptr inbounds i32, i32* %472, i64 %idxprom711
  store i32 %call710, i32* %arrayidx712, align 4
  %473 = load i32, i32* %run, align 4
  %474 = load i32, i32* %scan_pos, align 4
  %idxprom713 = sext i32 %474 to i64
  %475 = load i32*, i32** %ACRun, align 8
  %arrayidx714 = getelementptr inbounds i32, i32* %475, i64 %idxprom713
  store i32 %473, i32* %arrayidx714, align 4
  %476 = load i32, i32* %scan_pos, align 4
  %inc715 = add nsw i32 %476, 1
  store i32 %inc715, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.716

if.end.716:                                       ; preds = %if.then.705, %if.end.702
  %477 = load i32, i32* %level, align 4
  %478 = load i32, i32* %i, align 4
  %idxprom717 = sext i32 %478 to i64
  %479 = load i32, i32* %j, align 4
  %idxprom718 = sext i32 %479 to i64
  %arrayidx719 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom718
  %arrayidx720 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx719, i32 0, i64 %idxprom717
  %480 = load i32, i32* %arrayidx720, align 4
  %call721 = call i32 @isignab(i32 %477, i32 %480)
  store i32 %call721, i32* %level, align 4
  %481 = load i32, i32* %level, align 4
  %482 = load i32, i32* %i, align 4
  %idxprom722 = sext i32 %482 to i64
  %483 = load i32, i32* %j, align 4
  %idxprom723 = sext i32 %483 to i64
  %484 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx724 = getelementptr inbounds i32*, i32** %484, i64 %idxprom723
  %485 = load i32*, i32** %arrayidx724, align 8
  %arrayidx725 = getelementptr inbounds i32, i32* %485, i64 %idxprom722
  %486 = load i32, i32* %arrayidx725, align 4
  %mul726 = mul nsw i32 %481, %486
  %487 = load i32, i32* %qp_per, align 4
  %shl727 = shl i32 %mul726, %487
  %call728 = call i32 @rshift_rnd_sf(i32 %shl727, i32 4)
  %488 = load i32, i32* %i, align 4
  %idxprom729 = sext i32 %488 to i64
  %489 = load i32, i32* %j, align 4
  %idxprom730 = sext i32 %489 to i64
  %arrayidx731 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom730
  %arrayidx732 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx731, i32 0, i64 %idxprom729
  store i32 %call728, i32* %arrayidx732, align 4
  br label %for.inc.733

for.inc.733:                                      ; preds = %if.end.716
  %490 = load i32, i32* %coeff_ctr, align 4
  %inc734 = add nsw i32 %490, 1
  store i32 %inc734, i32* %coeff_ctr, align 4
  br label %for.cond.644

for.end.735:                                      ; preds = %for.cond.644
  %491 = load i32, i32* %scan_pos, align 4
  %idxprom736 = sext i32 %491 to i64
  %492 = load i32*, i32** %ACLevel, align 8
  %arrayidx737 = getelementptr inbounds i32, i32* %492, i64 %idxprom736
  store i32 0, i32* %arrayidx737, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.738

for.cond.738:                                     ; preds = %for.inc.788, %for.end.735
  %493 = load i32, i32* %j, align 4
  %cmp739 = icmp slt i32 %493, 4
  br i1 %cmp739, label %for.body.741, label %for.end.790

for.body.741:                                     ; preds = %for.cond.738
  %494 = load i32, i32* %j, align 4
  %idxprom742 = sext i32 %494 to i64
  %arrayidx743 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom742
  %arrayidx744 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx743, i32 0, i64 0
  %495 = load i32, i32* %arrayidx744, align 4
  %496 = load i32, i32* %j, align 4
  %idxprom745 = sext i32 %496 to i64
  %arrayidx746 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom745
  %arrayidx747 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx746, i32 0, i64 2
  %497 = load i32, i32* %arrayidx747, align 4
  %add748 = add nsw i32 %495, %497
  store i32 %add748, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %498 = load i32, i32* %j, align 4
  %idxprom749 = sext i32 %498 to i64
  %arrayidx750 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom749
  %arrayidx751 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx750, i32 0, i64 0
  %499 = load i32, i32* %arrayidx751, align 4
  %500 = load i32, i32* %j, align 4
  %idxprom752 = sext i32 %500 to i64
  %arrayidx753 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom752
  %arrayidx754 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx753, i32 0, i64 2
  %501 = load i32, i32* %arrayidx754, align 4
  %sub755 = sub nsw i32 %499, %501
  store i32 %sub755, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %502 = load i32, i32* %j, align 4
  %idxprom756 = sext i32 %502 to i64
  %arrayidx757 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom756
  %arrayidx758 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx757, i32 0, i64 1
  %503 = load i32, i32* %arrayidx758, align 4
  %shr759 = ashr i32 %503, 1
  %504 = load i32, i32* %j, align 4
  %idxprom760 = sext i32 %504 to i64
  %arrayidx761 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom760
  %arrayidx762 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx761, i32 0, i64 3
  %505 = load i32, i32* %arrayidx762, align 4
  %sub763 = sub nsw i32 %shr759, %505
  store i32 %sub763, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %506 = load i32, i32* %j, align 4
  %idxprom764 = sext i32 %506 to i64
  %arrayidx765 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom764
  %arrayidx766 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx765, i32 0, i64 1
  %507 = load i32, i32* %arrayidx766, align 4
  %508 = load i32, i32* %j, align 4
  %idxprom767 = sext i32 %508 to i64
  %arrayidx768 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom767
  %arrayidx769 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx768, i32 0, i64 3
  %509 = load i32, i32* %arrayidx769, align 4
  %shr770 = ashr i32 %509, 1
  %add771 = add nsw i32 %507, %shr770
  store i32 %add771, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %510 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %511 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %add772 = add nsw i32 %510, %511
  %512 = load i32, i32* %j, align 4
  %idxprom773 = sext i32 %512 to i64
  %arrayidx774 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom773
  %arrayidx775 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx774, i32 0, i64 0
  store i32 %add772, i32* %arrayidx775, align 4
  %513 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %514 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %add776 = add nsw i32 %513, %514
  %515 = load i32, i32* %j, align 4
  %idxprom777 = sext i32 %515 to i64
  %arrayidx778 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom777
  %arrayidx779 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx778, i32 0, i64 1
  store i32 %add776, i32* %arrayidx779, align 4
  %516 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %517 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %sub780 = sub nsw i32 %516, %517
  %518 = load i32, i32* %j, align 4
  %idxprom781 = sext i32 %518 to i64
  %arrayidx782 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom781
  %arrayidx783 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx782, i32 0, i64 2
  store i32 %sub780, i32* %arrayidx783, align 4
  %519 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %520 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %sub784 = sub nsw i32 %519, %520
  %521 = load i32, i32* %j, align 4
  %idxprom785 = sext i32 %521 to i64
  %arrayidx786 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom785
  %arrayidx787 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx786, i32 0, i64 3
  store i32 %sub784, i32* %arrayidx787, align 4
  br label %for.inc.788

for.inc.788:                                      ; preds = %for.body.741
  %522 = load i32, i32* %j, align 4
  %inc789 = add nsw i32 %522, 1
  store i32 %inc789, i32* %j, align 4
  br label %for.cond.738

for.end.790:                                      ; preds = %for.cond.738
  store i32 0, i32* %i, align 4
  br label %for.cond.791

for.cond.791:                                     ; preds = %for.inc.849, %for.end.790
  %523 = load i32, i32* %i, align 4
  %cmp792 = icmp slt i32 %523, 4
  br i1 %cmp792, label %for.body.794, label %for.end.851

for.body.794:                                     ; preds = %for.cond.791
  %524 = load i32, i32* %i, align 4
  %idxprom795 = sext i32 %524 to i64
  %arrayidx796 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom795
  %525 = load i32, i32* %arrayidx796, align 4
  %526 = load i32, i32* %i, align 4
  %idxprom797 = sext i32 %526 to i64
  %arrayidx798 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom797
  %527 = load i32, i32* %arrayidx798, align 4
  %add799 = add nsw i32 %525, %527
  store i32 %add799, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %528 = load i32, i32* %i, align 4
  %idxprom800 = sext i32 %528 to i64
  %arrayidx801 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 0), i32 0, i64 %idxprom800
  %529 = load i32, i32* %arrayidx801, align 4
  %530 = load i32, i32* %i, align 4
  %idxprom802 = sext i32 %530 to i64
  %arrayidx803 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 2), i32 0, i64 %idxprom802
  %531 = load i32, i32* %arrayidx803, align 4
  %sub804 = sub nsw i32 %529, %531
  store i32 %sub804, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %532 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %532 to i64
  %arrayidx806 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom805
  %533 = load i32, i32* %arrayidx806, align 4
  %shr807 = ashr i32 %533, 1
  %534 = load i32, i32* %i, align 4
  %idxprom808 = sext i32 %534 to i64
  %arrayidx809 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom808
  %535 = load i32, i32* %arrayidx809, align 4
  %sub810 = sub nsw i32 %shr807, %535
  store i32 %sub810, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %536 = load i32, i32* %i, align 4
  %idxprom811 = sext i32 %536 to i64
  %arrayidx812 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 1), i32 0, i64 %idxprom811
  %537 = load i32, i32* %arrayidx812, align 4
  %538 = load i32, i32* %i, align 4
  %idxprom813 = sext i32 %538 to i64
  %arrayidx814 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 3), i32 0, i64 %idxprom813
  %539 = load i32, i32* %arrayidx814, align 4
  %shr815 = ashr i32 %539, 1
  %add816 = add nsw i32 %537, %shr815
  store i32 %add816, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %540 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %541 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %add817 = add nsw i32 %540, %541
  %542 = load i32, i32* %i, align 4
  %idxprom818 = sext i32 %542 to i64
  %543 = load i32, i32* %ii, align 4
  %idxprom819 = sext i32 %543 to i64
  %544 = load i32, i32* %jj, align 4
  %idxprom820 = sext i32 %544 to i64
  %arrayidx821 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom820
  %arrayidx822 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx821, i32 0, i64 %idxprom819
  %arrayidx823 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx822, i32 0, i64 0
  %arrayidx824 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx823, i32 0, i64 %idxprom818
  store i32 %add817, i32* %arrayidx824, align 4
  %545 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %546 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %add825 = add nsw i32 %545, %546
  %547 = load i32, i32* %i, align 4
  %idxprom826 = sext i32 %547 to i64
  %548 = load i32, i32* %ii, align 4
  %idxprom827 = sext i32 %548 to i64
  %549 = load i32, i32* %jj, align 4
  %idxprom828 = sext i32 %549 to i64
  %arrayidx829 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom828
  %arrayidx830 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx829, i32 0, i64 %idxprom827
  %arrayidx831 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx830, i32 0, i64 1
  %arrayidx832 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx831, i32 0, i64 %idxprom826
  store i32 %add825, i32* %arrayidx832, align 4
  %550 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 1), align 4
  %551 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 2), align 4
  %sub833 = sub nsw i32 %550, %551
  %552 = load i32, i32* %i, align 4
  %idxprom834 = sext i32 %552 to i64
  %553 = load i32, i32* %ii, align 4
  %idxprom835 = sext i32 %553 to i64
  %554 = load i32, i32* %jj, align 4
  %idxprom836 = sext i32 %554 to i64
  %arrayidx837 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom836
  %arrayidx838 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx837, i32 0, i64 %idxprom835
  %arrayidx839 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx838, i32 0, i64 2
  %arrayidx840 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx839, i32 0, i64 %idxprom834
  store i32 %sub833, i32* %arrayidx840, align 4
  %555 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 0), align 4
  %556 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma_16x16.M6, i32 0, i64 3), align 4
  %sub841 = sub nsw i32 %555, %556
  %557 = load i32, i32* %i, align 4
  %idxprom842 = sext i32 %557 to i64
  %558 = load i32, i32* %ii, align 4
  %idxprom843 = sext i32 %558 to i64
  %559 = load i32, i32* %jj, align 4
  %idxprom844 = sext i32 %559 to i64
  %arrayidx845 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom844
  %arrayidx846 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx845, i32 0, i64 %idxprom843
  %arrayidx847 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx846, i32 0, i64 3
  %arrayidx848 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx847, i32 0, i64 %idxprom842
  store i32 %sub841, i32* %arrayidx848, align 4
  br label %for.inc.849

for.inc.849:                                      ; preds = %for.body.794
  %560 = load i32, i32* %i, align 4
  %inc850 = add nsw i32 %560, 1
  store i32 %inc850, i32* %i, align 4
  br label %for.cond.791

for.end.851:                                      ; preds = %for.cond.791
  br label %if.end.904

if.else.852:                                      ; preds = %for.end.622
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.853

for.cond.853:                                     ; preds = %for.inc.899, %if.else.852
  %561 = load i32, i32* %coeff_ctr, align 4
  %cmp854 = icmp slt i32 %561, 16
  br i1 %cmp854, label %for.body.856, label %for.end.901

for.body.856:                                     ; preds = %for.cond.853
  %562 = load i32, i32* %coeff_ctr, align 4
  %idxprom857 = sext i32 %562 to i64
  %563 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx858 = getelementptr inbounds [2 x i8], [2 x i8]* %563, i64 %idxprom857
  %arrayidx859 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx858, i32 0, i64 0
  %564 = load i8, i8* %arrayidx859, align 1
  %conv860 = zext i8 %564 to i32
  store i32 %conv860, i32* %i, align 4
  %565 = load i32, i32* %coeff_ctr, align 4
  %idxprom861 = sext i32 %565 to i64
  %566 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx862 = getelementptr inbounds [2 x i8], [2 x i8]* %566, i64 %idxprom861
  %arrayidx863 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx862, i32 0, i64 1
  %567 = load i8, i8* %arrayidx863, align 1
  %conv864 = zext i8 %567 to i32
  store i32 %conv864, i32* %j, align 4
  %568 = load i32, i32* %run, align 4
  %inc865 = add nsw i32 %568, 1
  store i32 %inc865, i32* %run, align 4
  %569 = load i32, i32* %i, align 4
  %idxprom866 = sext i32 %569 to i64
  %570 = load i32, i32* %j, align 4
  %idxprom867 = sext i32 %570 to i64
  %arrayidx868 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom867
  %arrayidx869 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx868, i32 0, i64 %idxprom866
  %571 = load i32, i32* %arrayidx869, align 4
  %call870 = call i32 @iabs(i32 %571)
  store i32 %call870, i32* %level, align 4
  %572 = load i32, i32* %level, align 4
  %cmp871 = icmp ne i32 %572, 0
  br i1 %cmp871, label %if.then.873, label %if.end.884

if.then.873:                                      ; preds = %for.body.856
  store i32 15, i32* %ac_coef, align 4
  %573 = load i32, i32* %level, align 4
  %574 = load i32, i32* %i, align 4
  %idxprom874 = sext i32 %574 to i64
  %575 = load i32, i32* %j, align 4
  %idxprom875 = sext i32 %575 to i64
  %arrayidx876 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma_16x16.M4, i32 0, i64 %idxprom875
  %arrayidx877 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx876, i32 0, i64 %idxprom874
  %576 = load i32, i32* %arrayidx877, align 4
  %call878 = call i32 @isignab(i32 %573, i32 %576)
  %577 = load i32, i32* %scan_pos, align 4
  %idxprom879 = sext i32 %577 to i64
  %578 = load i32*, i32** %ACLevel, align 8
  %arrayidx880 = getelementptr inbounds i32, i32* %578, i64 %idxprom879
  store i32 %call878, i32* %arrayidx880, align 4
  %579 = load i32, i32* %run, align 4
  %580 = load i32, i32* %scan_pos, align 4
  %idxprom881 = sext i32 %580 to i64
  %581 = load i32*, i32** %ACRun, align 8
  %arrayidx882 = getelementptr inbounds i32, i32* %581, i64 %idxprom881
  store i32 %579, i32* %arrayidx882, align 4
  %582 = load i32, i32* %scan_pos, align 4
  %inc883 = add nsw i32 %582, 1
  store i32 %inc883, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.884

if.end.884:                                       ; preds = %if.then.873, %for.body.856
  %583 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding885 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %583, i32 0, i32 98
  %584 = load i32, i32* %AdaptiveRounding885, align 4
  %tobool886 = icmp ne i32 %584, 0
  br i1 %tobool886, label %if.then.887, label %if.end.898

if.then.887:                                      ; preds = %if.end.884
  %585 = load i32, i32* %ii, align 4
  %mul888 = mul nsw i32 %585, 4
  %586 = load i32, i32* %i, align 4
  %add889 = add nsw i32 %mul888, %586
  %idxprom890 = sext i32 %add889 to i64
  %587 = load i32, i32* %jj, align 4
  %mul891 = mul nsw i32 %587, 4
  %588 = load i32, i32* %j, align 4
  %add892 = add nsw i32 %mul891, %588
  %idxprom893 = sext i32 %add892 to i64
  %589 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4894 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %589, i32 0, i32 55
  %590 = load i32***, i32**** %fadjust4x4894, align 8
  %arrayidx895 = getelementptr inbounds i32**, i32*** %590, i64 2
  %591 = load i32**, i32*** %arrayidx895, align 8
  %arrayidx896 = getelementptr inbounds i32*, i32** %591, i64 %idxprom893
  %592 = load i32*, i32** %arrayidx896, align 8
  %arrayidx897 = getelementptr inbounds i32, i32* %592, i64 %idxprom890
  store i32 0, i32* %arrayidx897, align 4
  br label %if.end.898

if.end.898:                                       ; preds = %if.then.887, %if.end.884
  br label %for.inc.899

for.inc.899:                                      ; preds = %if.end.898
  %593 = load i32, i32* %coeff_ctr, align 4
  %inc900 = add nsw i32 %593, 1
  store i32 %inc900, i32* %coeff_ctr, align 4
  br label %for.cond.853

for.end.901:                                      ; preds = %for.cond.853
  %594 = load i32, i32* %scan_pos, align 4
  %idxprom902 = sext i32 %594 to i64
  %595 = load i32*, i32** %ACLevel, align 8
  %arrayidx903 = getelementptr inbounds i32, i32* %595, i64 %idxprom902
  store i32 0, i32* %arrayidx903, align 4
  br label %if.end.904

if.end.904:                                       ; preds = %for.end.901, %for.end.851
  br label %for.inc.905

for.inc.905:                                      ; preds = %if.end.904
  %596 = load i32, i32* %ii, align 4
  %inc906 = add nsw i32 %596, 1
  store i32 %inc906, i32* %ii, align 4
  br label %for.cond.604

for.end.907:                                      ; preds = %for.cond.604
  br label %for.inc.908

for.inc.908:                                      ; preds = %for.end.907
  %597 = load i32, i32* %jj, align 4
  %inc909 = add nsw i32 %597, 1
  store i32 %inc909, i32* %jj, align 4
  br label %for.cond.600

for.end.910:                                      ; preds = %for.cond.600
  store i32 0, i32* %jj, align 4
  br label %for.cond.911

for.cond.911:                                     ; preds = %for.inc.942, %for.end.910
  %598 = load i32, i32* %jj, align 4
  %cmp912 = icmp slt i32 %598, 4
  br i1 %cmp912, label %for.body.914, label %for.end.944

for.body.914:                                     ; preds = %for.cond.911
  store i32 0, i32* %ii, align 4
  br label %for.cond.915

for.cond.915:                                     ; preds = %for.inc.939, %for.body.914
  %599 = load i32, i32* %ii, align 4
  %cmp916 = icmp slt i32 %599, 4
  br i1 %cmp916, label %for.body.918, label %for.end.941

for.body.918:                                     ; preds = %for.cond.915
  store i32 0, i32* %j, align 4
  br label %for.cond.919

for.cond.919:                                     ; preds = %for.inc.936, %for.body.918
  %600 = load i32, i32* %j, align 4
  %cmp920 = icmp slt i32 %600, 4
  br i1 %cmp920, label %for.body.922, label %for.end.938

for.body.922:                                     ; preds = %for.cond.919
  %601 = load i32, i32* %ii, align 4
  %mul923 = mul nsw i32 %601, 4
  %idxprom924 = sext i32 %mul923 to i64
  %602 = load i32, i32* %jj, align 4
  %mul925 = mul nsw i32 %602, 4
  %603 = load i32, i32* %j, align 4
  %add926 = add nsw i32 %mul925, %603
  %idxprom927 = sext i32 %add926 to i64
  %arrayidx928 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom927
  %arrayidx929 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx928, i32 0, i64 %idxprom924
  %604 = bitcast i32* %arrayidx929 to i8*
  %605 = load i32, i32* %j, align 4
  %idxprom930 = sext i32 %605 to i64
  %606 = load i32, i32* %ii, align 4
  %idxprom931 = sext i32 %606 to i64
  %607 = load i32, i32* %jj, align 4
  %idxprom932 = sext i32 %607 to i64
  %arrayidx933 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* @dct_luma_16x16.M0, i32 0, i64 %idxprom932
  %arrayidx934 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx933, i32 0, i64 %idxprom931
  %arrayidx935 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx934, i32 0, i64 %idxprom930
  %608 = bitcast [4 x i32]* %arrayidx935 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %604, i8* %608, i64 16, i32 4, i1 false)
  br label %for.inc.936

for.inc.936:                                      ; preds = %for.body.922
  %609 = load i32, i32* %j, align 4
  %inc937 = add nsw i32 %609, 1
  store i32 %inc937, i32* %j, align 4
  br label %for.cond.919

for.end.938:                                      ; preds = %for.cond.919
  br label %for.inc.939

for.inc.939:                                      ; preds = %for.end.938
  %610 = load i32, i32* %ii, align 4
  %inc940 = add nsw i32 %610, 1
  store i32 %inc940, i32* %ii, align 4
  br label %for.cond.915

for.end.941:                                      ; preds = %for.cond.915
  br label %for.inc.942

for.inc.942:                                      ; preds = %for.end.941
  %611 = load i32, i32* %jj, align 4
  %inc943 = add nsw i32 %611, 1
  store i32 %inc943, i32* %jj, align 4
  br label %for.cond.911

for.end.944:                                      ; preds = %for.cond.911
  %612 = load i32, i32* %lossless_qpprime, align 4
  %tobool945 = icmp ne i32 %612, 0
  br i1 %tobool945, label %if.then.946, label %if.else.1029

if.then.946:                                      ; preds = %for.end.944
  %613 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %613, i32 0, i32 5
  %614 = load i32, i32* %type, align 4
  %cmp947 = icmp ne i32 %614, 3
  br i1 %cmp947, label %if.then.949, label %if.else.984

if.then.949:                                      ; preds = %if.then.946
  store i32 0, i32* %j, align 4
  br label %for.cond.950

for.cond.950:                                     ; preds = %for.inc.981, %if.then.949
  %615 = load i32, i32* %j, align 4
  %cmp951 = icmp slt i32 %615, 16
  br i1 %cmp951, label %for.body.953, label %for.end.983

for.body.953:                                     ; preds = %for.cond.950
  %616 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %616, i32 0, i32 40
  %617 = load i32, i32* %pix_y, align 4
  %618 = load i32, i32* %j, align 4
  %add954 = add nsw i32 %617, %618
  store i32 %add954, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.955

for.cond.955:                                     ; preds = %for.inc.978, %for.body.953
  %619 = load i32, i32* %i, align 4
  %cmp956 = icmp slt i32 %619, 16
  br i1 %cmp956, label %for.body.958, label %for.end.980

for.body.958:                                     ; preds = %for.cond.955
  %620 = load i32, i32* %i, align 4
  %idxprom959 = sext i32 %620 to i64
  %621 = load i32, i32* %j, align 4
  %idxprom960 = sext i32 %621 to i64
  %arrayidx961 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom960
  %arrayidx962 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx961, i32 0, i64 %idxprom959
  %622 = load i32, i32* %arrayidx962, align 4
  %623 = load i32, i32* %i, align 4
  %idxprom963 = sext i32 %623 to i64
  %624 = load i32, i32* %j, align 4
  %idxprom964 = sext i32 %624 to i64
  %625 = load i32, i32* %new_intra_mode.addr, align 4
  %idxprom965 = sext i32 %625 to i64
  %626 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2966 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %626, i32 0, i32 48
  %arrayidx967 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2966, i32 0, i64 %idxprom965
  %arrayidx968 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx967, i32 0, i64 %idxprom964
  %arrayidx969 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx968, i32 0, i64 %idxprom963
  %627 = load i16, i16* %arrayidx969, align 2
  %conv970 = zext i16 %627 to i32
  %add971 = add nsw i32 %622, %conv970
  %conv972 = trunc i32 %add971 to i16
  %628 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %628, i32 0, i32 39
  %629 = load i32, i32* %pix_x, align 4
  %630 = load i32, i32* %i, align 4
  %add973 = add nsw i32 %629, %630
  %idxprom974 = sext i32 %add973 to i64
  %631 = load i32, i32* %jj, align 4
  %idxprom975 = sext i32 %631 to i64
  %632 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %632, i32 0, i32 29
  %633 = load i16**, i16*** %imgY, align 8
  %arrayidx976 = getelementptr inbounds i16*, i16** %633, i64 %idxprom975
  %634 = load i16*, i16** %arrayidx976, align 8
  %arrayidx977 = getelementptr inbounds i16, i16* %634, i64 %idxprom974
  store i16 %conv972, i16* %arrayidx977, align 2
  br label %for.inc.978

for.inc.978:                                      ; preds = %for.body.958
  %635 = load i32, i32* %i, align 4
  %inc979 = add nsw i32 %635, 1
  store i32 %inc979, i32* %i, align 4
  br label %for.cond.955

for.end.980:                                      ; preds = %for.cond.955
  br label %for.inc.981

for.inc.981:                                      ; preds = %for.end.980
  %636 = load i32, i32* %j, align 4
  %inc982 = add nsw i32 %636, 1
  store i32 %inc982, i32* %j, align 4
  br label %for.cond.950

for.end.983:                                      ; preds = %for.cond.950
  br label %if.end.1028

if.else.984:                                      ; preds = %if.then.946
  store i32 0, i32* %j, align 4
  br label %for.cond.985

for.cond.985:                                     ; preds = %for.inc.1025, %if.else.984
  %637 = load i32, i32* %j, align 4
  %cmp986 = icmp slt i32 %637, 16
  br i1 %cmp986, label %for.body.988, label %for.end.1027

for.body.988:                                     ; preds = %for.cond.985
  %638 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y989 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %638, i32 0, i32 40
  %639 = load i32, i32* %pix_y989, align 4
  %640 = load i32, i32* %j, align 4
  %add990 = add nsw i32 %639, %640
  store i32 %add990, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.991

for.cond.991:                                     ; preds = %for.inc.1022, %for.body.988
  %641 = load i32, i32* %i, align 4
  %cmp992 = icmp slt i32 %641, 16
  br i1 %cmp992, label %for.body.994, label %for.end.1024

for.body.994:                                     ; preds = %for.cond.991
  %642 = load i32, i32* %i, align 4
  %idxprom995 = sext i32 %642 to i64
  %643 = load i32, i32* %j, align 4
  %idxprom996 = sext i32 %643 to i64
  %arrayidx997 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom996
  %arrayidx998 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx997, i32 0, i64 %idxprom995
  %644 = load i32, i32* %arrayidx998, align 4
  %645 = load i32, i32* %i, align 4
  %idxprom999 = sext i32 %645 to i64
  %646 = load i32, i32* %j, align 4
  %idxprom1000 = sext i32 %646 to i64
  %647 = load i32, i32* %new_intra_mode.addr, align 4
  %idxprom1001 = sext i32 %647 to i64
  %648 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_21002 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %648, i32 0, i32 48
  %arrayidx1003 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_21002, i32 0, i64 %idxprom1001
  %arrayidx1004 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx1003, i32 0, i64 %idxprom1000
  %arrayidx1005 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1004, i32 0, i64 %idxprom999
  %649 = load i16, i16* %arrayidx1005, align 2
  %conv1006 = zext i16 %649 to i32
  %add1007 = add nsw i32 %644, %conv1006
  %conv1008 = trunc i32 %add1007 to i16
  %650 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %650, i32 0, i32 39
  %651 = load i32, i32* %pix_x1009, align 4
  %652 = load i32, i32* %i, align 4
  %add1010 = add nsw i32 %651, %652
  %idxprom1011 = sext i32 %add1010 to i64
  %653 = load i32, i32* %jj, align 4
  %idxprom1012 = sext i32 %653 to i64
  %654 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY1013 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %654, i32 0, i32 29
  %655 = load i16**, i16*** %imgY1013, align 8
  %arrayidx1014 = getelementptr inbounds i16*, i16** %655, i64 %idxprom1012
  %656 = load i16*, i16** %arrayidx1014, align 8
  %arrayidx1015 = getelementptr inbounds i16, i16* %656, i64 %idxprom1011
  store i16 %conv1008, i16* %arrayidx1015, align 2
  %657 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1016 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %657, i32 0, i32 39
  %658 = load i32, i32* %pix_x1016, align 4
  %659 = load i32, i32* %i, align 4
  %add1017 = add nsw i32 %658, %659
  %idxprom1018 = sext i32 %add1017 to i64
  %660 = load i32, i32* %jj, align 4
  %idxprom1019 = sext i32 %660 to i64
  %661 = load i32**, i32*** @lrec, align 8
  %arrayidx1020 = getelementptr inbounds i32*, i32** %661, i64 %idxprom1019
  %662 = load i32*, i32** %arrayidx1020, align 8
  %arrayidx1021 = getelementptr inbounds i32, i32* %662, i64 %idxprom1018
  store i32 -16, i32* %arrayidx1021, align 4
  br label %for.inc.1022

for.inc.1022:                                     ; preds = %for.body.994
  %663 = load i32, i32* %i, align 4
  %inc1023 = add nsw i32 %663, 1
  store i32 %inc1023, i32* %i, align 4
  br label %for.cond.991

for.end.1024:                                     ; preds = %for.cond.991
  br label %for.inc.1025

for.inc.1025:                                     ; preds = %for.end.1024
  %664 = load i32, i32* %j, align 4
  %inc1026 = add nsw i32 %664, 1
  store i32 %inc1026, i32* %j, align 4
  br label %for.cond.985

for.end.1027:                                     ; preds = %for.cond.985
  br label %if.end.1028

if.end.1028:                                      ; preds = %for.end.1027, %for.end.983
  br label %if.end.1127

if.else.1029:                                     ; preds = %for.end.944
  %665 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1030 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %665, i32 0, i32 5
  %666 = load i32, i32* %type1030, align 4
  %cmp1031 = icmp ne i32 %666, 3
  br i1 %cmp1031, label %if.then.1033, label %if.else.1076

if.then.1033:                                     ; preds = %if.else.1029
  store i32 0, i32* %j, align 4
  br label %for.cond.1034

for.cond.1034:                                    ; preds = %for.inc.1073, %if.then.1033
  %667 = load i32, i32* %j, align 4
  %cmp1035 = icmp slt i32 %667, 16
  br i1 %cmp1035, label %for.body.1037, label %for.end.1075

for.body.1037:                                    ; preds = %for.cond.1034
  %668 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1038 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %668, i32 0, i32 40
  %669 = load i32, i32* %pix_y1038, align 4
  %670 = load i32, i32* %j, align 4
  %add1039 = add nsw i32 %669, %670
  store i32 %add1039, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1040

for.cond.1040:                                    ; preds = %for.inc.1070, %for.body.1037
  %671 = load i32, i32* %i, align 4
  %cmp1041 = icmp slt i32 %671, 16
  br i1 %cmp1041, label %for.body.1043, label %for.end.1072

for.body.1043:                                    ; preds = %for.cond.1040
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 156
  %673 = load i32, i32* %max_imgpel_value, align 4
  %674 = load i32, i32* %i, align 4
  %idxprom1044 = sext i32 %674 to i64
  %675 = load i32, i32* %j, align 4
  %idxprom1045 = sext i32 %675 to i64
  %arrayidx1046 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom1045
  %arrayidx1047 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1046, i32 0, i64 %idxprom1044
  %676 = load i32, i32* %arrayidx1047, align 4
  %conv1048 = sext i32 %676 to i64
  %677 = load i32, i32* %i, align 4
  %idxprom1049 = sext i32 %677 to i64
  %678 = load i32, i32* %j, align 4
  %idxprom1050 = sext i32 %678 to i64
  %679 = load i32, i32* %new_intra_mode.addr, align 4
  %idxprom1051 = sext i32 %679 to i64
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_21052 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 48
  %arrayidx1053 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_21052, i32 0, i64 %idxprom1051
  %arrayidx1054 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx1053, i32 0, i64 %idxprom1050
  %arrayidx1055 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1054, i32 0, i64 %idxprom1049
  %681 = load i16, i16* %arrayidx1055, align 2
  %conv1056 = zext i16 %681 to i64
  %shl1057 = shl i64 %conv1056, 6
  %add1058 = add nsw i64 %conv1048, %shl1057
  %conv1059 = trunc i64 %add1058 to i32
  %call1060 = call i32 @rshift_rnd_sf(i32 %conv1059, i32 6)
  %call1061 = call i32 @iClip1(i32 %673, i32 %call1060)
  %conv1062 = trunc i32 %call1061 to i16
  %682 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1063 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %682, i32 0, i32 39
  %683 = load i32, i32* %pix_x1063, align 4
  %684 = load i32, i32* %i, align 4
  %add1064 = add nsw i32 %683, %684
  %idxprom1065 = sext i32 %add1064 to i64
  %685 = load i32, i32* %jj, align 4
  %idxprom1066 = sext i32 %685 to i64
  %686 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY1067 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %686, i32 0, i32 29
  %687 = load i16**, i16*** %imgY1067, align 8
  %arrayidx1068 = getelementptr inbounds i16*, i16** %687, i64 %idxprom1066
  %688 = load i16*, i16** %arrayidx1068, align 8
  %arrayidx1069 = getelementptr inbounds i16, i16* %688, i64 %idxprom1065
  store i16 %conv1062, i16* %arrayidx1069, align 2
  br label %for.inc.1070

for.inc.1070:                                     ; preds = %for.body.1043
  %689 = load i32, i32* %i, align 4
  %inc1071 = add nsw i32 %689, 1
  store i32 %inc1071, i32* %i, align 4
  br label %for.cond.1040

for.end.1072:                                     ; preds = %for.cond.1040
  br label %for.inc.1073

for.inc.1073:                                     ; preds = %for.end.1072
  %690 = load i32, i32* %j, align 4
  %inc1074 = add nsw i32 %690, 1
  store i32 %inc1074, i32* %j, align 4
  br label %for.cond.1034

for.end.1075:                                     ; preds = %for.cond.1034
  br label %if.end.1126

if.else.1076:                                     ; preds = %if.else.1029
  store i32 0, i32* %j, align 4
  br label %for.cond.1077

for.cond.1077:                                    ; preds = %for.inc.1123, %if.else.1076
  %691 = load i32, i32* %j, align 4
  %cmp1078 = icmp slt i32 %691, 16
  br i1 %cmp1078, label %for.body.1080, label %for.end.1125

for.body.1080:                                    ; preds = %for.cond.1077
  %692 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1081 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %692, i32 0, i32 40
  %693 = load i32, i32* %pix_y1081, align 4
  %694 = load i32, i32* %j, align 4
  %add1082 = add nsw i32 %693, %694
  store i32 %add1082, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1083

for.cond.1083:                                    ; preds = %for.inc.1120, %for.body.1080
  %695 = load i32, i32* %i, align 4
  %cmp1084 = icmp slt i32 %695, 16
  br i1 %cmp1084, label %for.body.1086, label %for.end.1122

for.body.1086:                                    ; preds = %for.cond.1083
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1087 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 156
  %697 = load i32, i32* %max_imgpel_value1087, align 4
  %698 = load i32, i32* %i, align 4
  %idxprom1088 = sext i32 %698 to i64
  %699 = load i32, i32* %j, align 4
  %idxprom1089 = sext i32 %699 to i64
  %arrayidx1090 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @dct_luma_16x16.M1, i32 0, i64 %idxprom1089
  %arrayidx1091 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1090, i32 0, i64 %idxprom1088
  %700 = load i32, i32* %arrayidx1091, align 4
  %conv1092 = sext i32 %700 to i64
  %701 = load i32, i32* %i, align 4
  %idxprom1093 = sext i32 %701 to i64
  %702 = load i32, i32* %j, align 4
  %idxprom1094 = sext i32 %702 to i64
  %703 = load i32, i32* %new_intra_mode.addr, align 4
  %idxprom1095 = sext i32 %703 to i64
  %704 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_21096 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %704, i32 0, i32 48
  %arrayidx1097 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_21096, i32 0, i64 %idxprom1095
  %arrayidx1098 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx1097, i32 0, i64 %idxprom1094
  %arrayidx1099 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1098, i32 0, i64 %idxprom1093
  %705 = load i16, i16* %arrayidx1099, align 2
  %conv1100 = zext i16 %705 to i64
  %shl1101 = shl i64 %conv1100, 6
  %add1102 = add nsw i64 %conv1092, %shl1101
  %conv1103 = trunc i64 %add1102 to i32
  %call1104 = call i32 @rshift_rnd_sf(i32 %conv1103, i32 6)
  %call1105 = call i32 @iClip1(i32 %697, i32 %call1104)
  %conv1106 = trunc i32 %call1105 to i16
  %706 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1107 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %706, i32 0, i32 39
  %707 = load i32, i32* %pix_x1107, align 4
  %708 = load i32, i32* %i, align 4
  %add1108 = add nsw i32 %707, %708
  %idxprom1109 = sext i32 %add1108 to i64
  %709 = load i32, i32* %jj, align 4
  %idxprom1110 = sext i32 %709 to i64
  %710 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY1111 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %710, i32 0, i32 29
  %711 = load i16**, i16*** %imgY1111, align 8
  %arrayidx1112 = getelementptr inbounds i16*, i16** %711, i64 %idxprom1110
  %712 = load i16*, i16** %arrayidx1112, align 8
  %arrayidx1113 = getelementptr inbounds i16, i16* %712, i64 %idxprom1109
  store i16 %conv1106, i16* %arrayidx1113, align 2
  %713 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1114 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %713, i32 0, i32 39
  %714 = load i32, i32* %pix_x1114, align 4
  %715 = load i32, i32* %i, align 4
  %add1115 = add nsw i32 %714, %715
  %idxprom1116 = sext i32 %add1115 to i64
  %716 = load i32, i32* %jj, align 4
  %idxprom1117 = sext i32 %716 to i64
  %717 = load i32**, i32*** @lrec, align 8
  %arrayidx1118 = getelementptr inbounds i32*, i32** %717, i64 %idxprom1117
  %718 = load i32*, i32** %arrayidx1118, align 8
  %arrayidx1119 = getelementptr inbounds i32, i32* %718, i64 %idxprom1116
  store i32 -16, i32* %arrayidx1119, align 4
  br label %for.inc.1120

for.inc.1120:                                     ; preds = %for.body.1086
  %719 = load i32, i32* %i, align 4
  %inc1121 = add nsw i32 %719, 1
  store i32 %inc1121, i32* %i, align 4
  br label %for.cond.1083

for.end.1122:                                     ; preds = %for.cond.1083
  br label %for.inc.1123

for.inc.1123:                                     ; preds = %for.end.1122
  %720 = load i32, i32* %j, align 4
  %inc1124 = add nsw i32 %720, 1
  store i32 %inc1124, i32* %j, align 4
  br label %for.cond.1077

for.end.1125:                                     ; preds = %for.cond.1077
  br label %if.end.1126

if.end.1126:                                      ; preds = %for.end.1125, %for.end.1075
  br label %if.end.1127

if.end.1127:                                      ; preds = %if.end.1126, %if.end.1028
  %721 = load i32, i32* %ac_coef, align 4
  ret i32 %721
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @iabs(i32 %x) #1 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %x.addr, align 4
  %sub = sub nsw i32 0, %1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %x.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %2, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @isignab(i32 %a, i32 %b) #1 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %b.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4
  %call = call i32 @iabs(i32 %1)
  %sub = sub nsw i32 0, %call
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  %call1 = call i32 @iabs(i32 %2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %call1, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @iClip1(i32 %high, i32 %x) #1 {
entry:
  %high.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %high, i32* %high.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %call = call i32 @imax(i32 %0, i32 0)
  store i32 %call, i32* %x.addr, align 4
  %1 = load i32, i32* %x.addr, align 4
  %2 = load i32, i32* %high.addr, align 4
  %call1 = call i32 @imin(i32 %1, i32 %2)
  store i32 %call1, i32* %x.addr, align 4
  %3 = load i32, i32* %x.addr, align 4
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma(i32 %block_x, i32 %block_y, i32* %coeff_cost, i32 %intra) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %coeff_cost.addr = alloca i32*, align 8
  %intra.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ii = alloca i32, align 4
  %ilev = alloca i32, align 4
  %coeff_ctr = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %nonzero = alloca i32, align 4
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %pos_x = alloca i32, align 4
  %pos_y = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %pix_y = alloca i32, align 4
  %pix_x = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %lossless_qpprime = alloca i32, align 4
  %levelscale = alloca i32**, align 8
  %leveloffset = alloca i32**, align 8
  %invlevelscale = alloca i32**, align 8
  %pos_scan = alloca [2 x i8]*, align 8
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32* %coeff_cost, i32** %coeff_cost.addr, align 8
  store i32 %intra, i32* %intra.addr, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %nonzero, align 4
  %0 = load i32, i32* %block_x.addr, align 4
  %shr = ashr i32 %0, 2
  store i32 %shr, i32* %pos_x, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %shr1 = ashr i32 %1, 2
  store i32 %shr1, i32* %pos_y, align 4
  %2 = load i32, i32* %pos_y, align 4
  %shr2 = ashr i32 %2, 1
  %mul = mul nsw i32 2, %shr2
  %3 = load i32, i32* %pos_x, align 4
  %shr3 = ashr i32 %3, 1
  %add = add nsw i32 %mul, %shr3
  store i32 %add, i32* %b8, align 4
  %4 = load i32, i32* %pos_y, align 4
  %and = and i32 %4, 1
  %mul4 = mul nsw i32 2, %and
  %5 = load i32, i32* %pos_x, align 4
  %and5 = and i32 %5, 1
  %add6 = add nsw i32 %mul4, %and5
  store i32 %add6, i32* %b4, align 4
  %6 = load i32, i32* %b4, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load i32, i32* %b8, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 53
  %9 = load i32****, i32***** %cofAC, align 8
  %arrayidx = getelementptr inbounds i32***, i32**** %9, i64 %idxprom7
  %10 = load i32***, i32**** %arrayidx, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 %idxprom
  %11 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %11, i64 0
  %12 = load i32*, i32** %arrayidx9, align 8
  store i32* %12, i32** %ACLevel, align 8
  %13 = load i32, i32* %b4, align 4
  %idxprom10 = sext i32 %13 to i64
  %14 = load i32, i32* %b8, align 4
  %idxprom11 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 53
  %16 = load i32****, i32***** %cofAC12, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %16, i64 %idxprom11
  %17 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %17, i64 %idxprom10
  %18 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %18, i64 1
  %19 = load i32*, i32** %arrayidx15, align 8
  store i32* %19, i32** %ACRun, align 8
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 3
  %21 = load i32, i32* %current_mb_nr, align 4
  %idxprom16 = sext i32 %21 to i64
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 61
  %23 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %23, i64 %idxprom16
  store %struct.macroblock* %arrayidx17, %struct.macroblock** %currMB, align 8
  %24 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i32 0, i32 2
  %25 = load i32, i32* %qp, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 144
  %27 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %add18 = add nsw i32 %25, %27
  %cmp = icmp eq i32 %add18, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 161
  %29 = load i32, i32* %lossless_qpprime_flag, align 4
  %cmp19 = icmp eq i32 %29, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %30 = phi i1 [ false, %entry ], [ %cmp19, %land.rhs ]
  %land.ext = zext i1 %30 to i32
  store i32 %land.ext, i32* %lossless_qpprime, align 4
  %31 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %is_field_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %31, i32 0, i32 20
  %32 = load i32, i32* %is_field_mode, align 4
  %tobool = icmp ne i32 %32, 0
  %cond = select i1 %tobool, [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i32 0), [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i32 0)
  store [2 x i8]* %cond, [2 x i8]** %pos_scan, align 8
  %33 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %33, i32 0, i32 2
  %34 = load i32, i32* %qp20, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale21 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 144
  %36 = load i32, i32* %bitdepth_luma_qp_scale21, align 4
  %add22 = add nsw i32 %34, %36
  %sub = sub nsw i32 %add22, 0
  %idxprom23 = sext i32 %sub to i64
  %37 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx24 = getelementptr inbounds i32, i32* %37, i64 %idxprom23
  %38 = load i32, i32* %arrayidx24, align 4
  store i32 %38, i32* %qp_per, align 4
  %39 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %39, i32 0, i32 2
  %40 = load i32, i32* %qp25, align 4
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 144
  %42 = load i32, i32* %bitdepth_luma_qp_scale26, align 4
  %add27 = add nsw i32 %40, %42
  %sub28 = sub nsw i32 %add27, 0
  %idxprom29 = sext i32 %sub28 to i64
  %43 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx30 = getelementptr inbounds i32, i32* %43, i64 %idxprom29
  %44 = load i32, i32* %arrayidx30, align 4
  store i32 %44, i32* %qp_rem, align 4
  %45 = load i32, i32* %qp_per, align 4
  %add31 = add nsw i32 15, %45
  store i32 %add31, i32* %q_bits, align 4
  %46 = load i32, i32* %qp_rem, align 4
  %idxprom32 = sext i32 %46 to i64
  %47 = load i32, i32* %intra.addr, align 4
  %idxprom33 = sext i32 %47 to i64
  %48 = load i32****, i32***** @LevelScale4x4Luma, align 8
  %arrayidx34 = getelementptr inbounds i32***, i32**** %48, i64 %idxprom33
  %49 = load i32***, i32**** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i32**, i32*** %49, i64 %idxprom32
  %50 = load i32**, i32*** %arrayidx35, align 8
  store i32** %50, i32*** %levelscale, align 8
  %51 = load i32, i32* %qp_per, align 4
  %idxprom36 = sext i32 %51 to i64
  %52 = load i32, i32* %intra.addr, align 4
  %idxprom37 = sext i32 %52 to i64
  %53 = load i32****, i32***** @LevelOffset4x4Luma, align 8
  %arrayidx38 = getelementptr inbounds i32***, i32**** %53, i64 %idxprom37
  %54 = load i32***, i32**** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i32**, i32*** %54, i64 %idxprom36
  %55 = load i32**, i32*** %arrayidx39, align 8
  store i32** %55, i32*** %leveloffset, align 8
  %56 = load i32, i32* %qp_rem, align 4
  %idxprom40 = sext i32 %56 to i64
  %57 = load i32, i32* %intra.addr, align 4
  %idxprom41 = sext i32 %57 to i64
  %58 = load i32****, i32***** @InvLevelScale4x4Luma, align 8
  %arrayidx42 = getelementptr inbounds i32***, i32**** %58, i64 %idxprom41
  %59 = load i32***, i32**** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds i32**, i32*** %59, i64 %idxprom40
  %60 = load i32**, i32*** %arrayidx43, align 8
  store i32** %60, i32*** %invlevelscale, align 8
  %61 = load i32, i32* %lossless_qpprime, align 4
  %tobool44 = icmp ne i32 %61, 0
  br i1 %tobool44, label %if.else, label %if.then

if.then:                                          ; preds = %land.end
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %62 = load i32, i32* %j, align 4
  %cmp45 = icmp slt i32 %62, 4
  br i1 %cmp45, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %j, align 4
  %idxprom46 = sext i32 %63 to i64
  %64 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %64, i32 0, i32 52
  %arrayidx47 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom46
  %arrayidx48 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx47, i32 0, i64 0
  %65 = load i32, i32* %arrayidx48, align 4
  %66 = load i32, i32* %j, align 4
  %idxprom49 = sext i32 %66 to i64
  %67 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m750 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %67, i32 0, i32 52
  %arrayidx51 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m750, i32 0, i64 %idxprom49
  %arrayidx52 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx51, i32 0, i64 3
  %68 = load i32, i32* %arrayidx52, align 4
  %add53 = add nsw i32 %65, %68
  store i32 %add53, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %69 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %69 to i64
  %70 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m755 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i32 0, i32 52
  %arrayidx56 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m755, i32 0, i64 %idxprom54
  %arrayidx57 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx56, i32 0, i64 1
  %71 = load i32, i32* %arrayidx57, align 4
  %72 = load i32, i32* %j, align 4
  %idxprom58 = sext i32 %72 to i64
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 52
  %arrayidx60 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m759, i32 0, i64 %idxprom58
  %arrayidx61 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx60, i32 0, i64 2
  %74 = load i32, i32* %arrayidx61, align 4
  %add62 = add nsw i32 %71, %74
  store i32 %add62, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %75 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %75 to i64
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m764 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 52
  %arrayidx65 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m764, i32 0, i64 %idxprom63
  %arrayidx66 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx65, i32 0, i64 1
  %77 = load i32, i32* %arrayidx66, align 4
  %78 = load i32, i32* %j, align 4
  %idxprom67 = sext i32 %78 to i64
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m768 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 52
  %arrayidx69 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m768, i32 0, i64 %idxprom67
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx69, i32 0, i64 2
  %80 = load i32, i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %77, %80
  store i32 %sub71, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %81 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %81 to i64
  %82 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m773 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %82, i32 0, i32 52
  %arrayidx74 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m773, i32 0, i64 %idxprom72
  %arrayidx75 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx74, i32 0, i64 0
  %83 = load i32, i32* %arrayidx75, align 4
  %84 = load i32, i32* %j, align 4
  %idxprom76 = sext i32 %84 to i64
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m777 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 52
  %arrayidx78 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m777, i32 0, i64 %idxprom76
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx78, i32 0, i64 3
  %86 = load i32, i32* %arrayidx79, align 4
  %sub80 = sub nsw i32 %83, %86
  store i32 %sub80, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %87 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %88 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %add81 = add nsw i32 %87, %88
  %89 = load i32, i32* %j, align 4
  %idxprom82 = sext i32 %89 to i64
  %arrayidx83 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83, i32 0, i64 0
  store i32 %add81, i32* %arrayidx84, align 4
  %90 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %91 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %sub85 = sub nsw i32 %90, %91
  %92 = load i32, i32* %j, align 4
  %idxprom86 = sext i32 %92 to i64
  %arrayidx87 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom86
  %arrayidx88 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx87, i32 0, i64 2
  store i32 %sub85, i32* %arrayidx88, align 4
  %93 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %shl = shl i32 %93, 1
  %94 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %add89 = add nsw i32 %shl, %94
  %95 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %95 to i64
  %arrayidx91 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom90
  %arrayidx92 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx91, i32 0, i64 1
  store i32 %add89, i32* %arrayidx92, align 4
  %96 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %97 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %shl93 = shl i32 %97, 1
  %sub94 = sub nsw i32 %96, %shl93
  %98 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %98 to i64
  %arrayidx96 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom95
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx96, i32 0, i64 3
  store i32 %sub94, i32* %arrayidx97, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %99 = load i32, i32* %j, align 4
  %inc = add nsw i32 %99, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.98

for.cond.98:                                      ; preds = %for.inc.135, %for.end
  %100 = load i32, i32* %i, align 4
  %cmp99 = icmp slt i32 %100, 4
  br i1 %cmp99, label %for.body.100, label %for.end.137

for.body.100:                                     ; preds = %for.cond.98
  %101 = load i32, i32* %i, align 4
  %idxprom101 = sext i32 %101 to i64
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 0), i32 0, i64 %idxprom101
  %102 = load i32, i32* %arrayidx102, align 4
  %103 = load i32, i32* %i, align 4
  %idxprom103 = sext i32 %103 to i64
  %arrayidx104 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 3), i32 0, i64 %idxprom103
  %104 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %102, %104
  store i32 %add105, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %105 = load i32, i32* %i, align 4
  %idxprom106 = sext i32 %105 to i64
  %arrayidx107 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 1), i32 0, i64 %idxprom106
  %106 = load i32, i32* %arrayidx107, align 4
  %107 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %107 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 2), i32 0, i64 %idxprom108
  %108 = load i32, i32* %arrayidx109, align 4
  %add110 = add nsw i32 %106, %108
  store i32 %add110, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %109 = load i32, i32* %i, align 4
  %idxprom111 = sext i32 %109 to i64
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 1), i32 0, i64 %idxprom111
  %110 = load i32, i32* %arrayidx112, align 4
  %111 = load i32, i32* %i, align 4
  %idxprom113 = sext i32 %111 to i64
  %arrayidx114 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 2), i32 0, i64 %idxprom113
  %112 = load i32, i32* %arrayidx114, align 4
  %sub115 = sub nsw i32 %110, %112
  store i32 %sub115, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %113 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %113 to i64
  %arrayidx117 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 0), i32 0, i64 %idxprom116
  %114 = load i32, i32* %arrayidx117, align 4
  %115 = load i32, i32* %i, align 4
  %idxprom118 = sext i32 %115 to i64
  %arrayidx119 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 3), i32 0, i64 %idxprom118
  %116 = load i32, i32* %arrayidx119, align 4
  %sub120 = sub nsw i32 %114, %116
  store i32 %sub120, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %117 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %118 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %add121 = add nsw i32 %117, %118
  %119 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %119 to i64
  %arrayidx123 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 0), i32 0, i64 %idxprom122
  store i32 %add121, i32* %arrayidx123, align 4
  %120 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 0), align 4
  %121 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 1), align 4
  %sub124 = sub nsw i32 %120, %121
  %122 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %122 to i64
  %arrayidx126 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 2), i32 0, i64 %idxprom125
  store i32 %sub124, i32* %arrayidx126, align 4
  %123 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %shl127 = shl i32 %123, 1
  %124 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %add128 = add nsw i32 %shl127, %124
  %125 = load i32, i32* %i, align 4
  %idxprom129 = sext i32 %125 to i64
  %arrayidx130 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 1), i32 0, i64 %idxprom129
  store i32 %add128, i32* %arrayidx130, align 4
  %126 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 3), align 4
  %127 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m5, i32 0, i64 2), align 4
  %shl131 = shl i32 %127, 1
  %sub132 = sub nsw i32 %126, %shl131
  %128 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %128 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 3), i32 0, i64 %idxprom133
  store i32 %sub132, i32* %arrayidx134, align 4
  br label %for.inc.135

for.inc.135:                                      ; preds = %for.body.100
  %129 = load i32, i32* %i, align 4
  %inc136 = add nsw i32 %129, 1
  store i32 %inc136, i32* %i, align 4
  br label %for.cond.98

for.end.137:                                      ; preds = %for.cond.98
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.138

for.cond.138:                                     ; preds = %for.inc.234, %for.end.137
  %130 = load i32, i32* %coeff_ctr, align 4
  %cmp139 = icmp slt i32 %130, 16
  br i1 %cmp139, label %for.body.140, label %for.end.236

for.body.140:                                     ; preds = %for.cond.138
  %131 = load i32, i32* %coeff_ctr, align 4
  %idxprom141 = sext i32 %131 to i64
  %132 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx142 = getelementptr inbounds [2 x i8], [2 x i8]* %132, i64 %idxprom141
  %arrayidx143 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx142, i32 0, i64 0
  %133 = load i8, i8* %arrayidx143, align 1
  %conv = zext i8 %133 to i32
  store i32 %conv, i32* %i, align 4
  %134 = load i32, i32* %coeff_ctr, align 4
  %idxprom144 = sext i32 %134 to i64
  %135 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx145 = getelementptr inbounds [2 x i8], [2 x i8]* %135, i64 %idxprom144
  %arrayidx146 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx145, i32 0, i64 1
  %136 = load i8, i8* %arrayidx146, align 1
  %conv147 = zext i8 %136 to i32
  store i32 %conv147, i32* %j, align 4
  %137 = load i32, i32* %run, align 4
  %inc148 = add nsw i32 %137, 1
  store i32 %inc148, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %138 = load i32, i32* %i, align 4
  %idxprom149 = sext i32 %138 to i64
  %139 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %139 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom150
  %arrayidx152 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i32 0, i64 %idxprom149
  %140 = load i32, i32* %arrayidx152, align 4
  %call = call i32 @iabs(i32 %140)
  %141 = load i32, i32* %i, align 4
  %idxprom153 = sext i32 %141 to i64
  %142 = load i32, i32* %j, align 4
  %idxprom154 = sext i32 %142 to i64
  %143 = load i32**, i32*** %levelscale, align 8
  %arrayidx155 = getelementptr inbounds i32*, i32** %143, i64 %idxprom154
  %144 = load i32*, i32** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i32, i32* %144, i64 %idxprom153
  %145 = load i32, i32* %arrayidx156, align 4
  %mul157 = mul nsw i32 %call, %145
  %146 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %146 to i64
  %147 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %147 to i64
  %148 = load i32**, i32*** %leveloffset, align 8
  %arrayidx160 = getelementptr inbounds i32*, i32** %148, i64 %idxprom159
  %149 = load i32*, i32** %arrayidx160, align 8
  %arrayidx161 = getelementptr inbounds i32, i32* %149, i64 %idxprom158
  %150 = load i32, i32* %arrayidx161, align 4
  %add162 = add nsw i32 %mul157, %150
  %151 = load i32, i32* %q_bits, align 4
  %shr163 = ashr i32 %add162, %151
  store i32 %shr163, i32* %level, align 4
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 98
  %153 = load i32, i32* %AdaptiveRounding, align 4
  %tobool164 = icmp ne i32 %153, 0
  br i1 %tobool164, label %if.then.165, label %if.end

if.then.165:                                      ; preds = %for.body.140
  %154 = load i32, i32* %level, align 4
  %cmp166 = icmp eq i32 %154, 0
  br i1 %cmp166, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.165
  br label %cond.end

cond.false:                                       ; preds = %if.then.165
  %155 = load i32, i32* @AdaptRndWeight, align 4
  %156 = load i32, i32* %i, align 4
  %idxprom168 = sext i32 %156 to i64
  %157 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %157 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom169
  %arrayidx171 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i32 0, i64 %idxprom168
  %158 = load i32, i32* %arrayidx171, align 4
  %call172 = call i32 @iabs(i32 %158)
  %159 = load i32, i32* %i, align 4
  %idxprom173 = sext i32 %159 to i64
  %160 = load i32, i32* %j, align 4
  %idxprom174 = sext i32 %160 to i64
  %161 = load i32**, i32*** %levelscale, align 8
  %arrayidx175 = getelementptr inbounds i32*, i32** %161, i64 %idxprom174
  %162 = load i32*, i32** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i32, i32* %162, i64 %idxprom173
  %163 = load i32, i32* %arrayidx176, align 4
  %mul177 = mul nsw i32 %call172, %163
  %164 = load i32, i32* %level, align 4
  %165 = load i32, i32* %q_bits, align 4
  %shl178 = shl i32 %164, %165
  %sub179 = sub nsw i32 %mul177, %shl178
  %mul180 = mul nsw i32 %155, %sub179
  %166 = load i32, i32* %q_bits, align 4
  %add181 = add nsw i32 %166, 1
  %call182 = call i32 @rshift_rnd_sf(i32 %mul180, i32 %add181)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond183 = phi i32 [ 0, %cond.true ], [ %call182, %cond.false ]
  %167 = load i32, i32* %block_x.addr, align 4
  %168 = load i32, i32* %i, align 4
  %add184 = add nsw i32 %167, %168
  %idxprom185 = sext i32 %add184 to i64
  %169 = load i32, i32* %block_y.addr, align 4
  %170 = load i32, i32* %j, align 4
  %add186 = add nsw i32 %169, %170
  %idxprom187 = sext i32 %add186 to i64
  %171 = load i32, i32* %intra.addr, align 4
  %idxprom188 = sext i32 %171 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 55
  %173 = load i32***, i32**** %fadjust4x4, align 8
  %arrayidx189 = getelementptr inbounds i32**, i32*** %173, i64 %idxprom188
  %174 = load i32**, i32*** %arrayidx189, align 8
  %arrayidx190 = getelementptr inbounds i32*, i32** %174, i64 %idxprom187
  %175 = load i32*, i32** %arrayidx190, align 8
  %arrayidx191 = getelementptr inbounds i32, i32* %175, i64 %idxprom185
  store i32 %cond183, i32* %arrayidx191, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %for.body.140
  %176 = load i32, i32* %level, align 4
  %cmp192 = icmp ne i32 %176, 0
  br i1 %cmp192, label %if.then.194, label %if.end.229

if.then.194:                                      ; preds = %if.end
  store i32 1, i32* %nonzero, align 4
  %177 = load i32, i32* %level, align 4
  %cmp195 = icmp sgt i32 %177, 1
  br i1 %cmp195, label %cond.true.197, label %cond.false.198

cond.true.197:                                    ; preds = %if.then.194
  br label %cond.end.204

cond.false.198:                                   ; preds = %if.then.194
  %178 = load i32, i32* %run, align 4
  %idxprom199 = sext i32 %178 to i64
  %179 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %179, i32 0, i32 116
  %180 = load i32, i32* %disthres, align 4
  %idxprom200 = sext i32 %180 to i64
  %arrayidx201 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom200
  %arrayidx202 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx201, i32 0, i64 %idxprom199
  %181 = load i8, i8* %arrayidx202, align 1
  %conv203 = zext i8 %181 to i32
  br label %cond.end.204

cond.end.204:                                     ; preds = %cond.false.198, %cond.true.197
  %cond205 = phi i32 [ 999999, %cond.true.197 ], [ %conv203, %cond.false.198 ]
  %182 = load i32*, i32** %coeff_cost.addr, align 8
  %183 = load i32, i32* %182, align 4
  %add206 = add nsw i32 %183, %cond205
  store i32 %add206, i32* %182, align 4
  %184 = load i32, i32* %level, align 4
  %185 = load i32, i32* %i, align 4
  %idxprom207 = sext i32 %185 to i64
  %186 = load i32, i32* %j, align 4
  %idxprom208 = sext i32 %186 to i64
  %arrayidx209 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom208
  %arrayidx210 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx209, i32 0, i64 %idxprom207
  %187 = load i32, i32* %arrayidx210, align 4
  %call211 = call i32 @isignab(i32 %184, i32 %187)
  %188 = load i32, i32* %scan_pos, align 4
  %idxprom212 = sext i32 %188 to i64
  %189 = load i32*, i32** %ACLevel, align 8
  %arrayidx213 = getelementptr inbounds i32, i32* %189, i64 %idxprom212
  store i32 %call211, i32* %arrayidx213, align 4
  %190 = load i32, i32* %run, align 4
  %191 = load i32, i32* %scan_pos, align 4
  %idxprom214 = sext i32 %191 to i64
  %192 = load i32*, i32** %ACRun, align 8
  %arrayidx215 = getelementptr inbounds i32, i32* %192, i64 %idxprom214
  store i32 %190, i32* %arrayidx215, align 4
  %193 = load i32, i32* %scan_pos, align 4
  %inc216 = add nsw i32 %193, 1
  store i32 %inc216, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %194 = load i32, i32* %level, align 4
  %195 = load i32, i32* %i, align 4
  %idxprom217 = sext i32 %195 to i64
  %196 = load i32, i32* %j, align 4
  %idxprom218 = sext i32 %196 to i64
  %arrayidx219 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom218
  %arrayidx220 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx219, i32 0, i64 %idxprom217
  %197 = load i32, i32* %arrayidx220, align 4
  %call221 = call i32 @isignab(i32 %194, i32 %197)
  store i32 %call221, i32* %level, align 4
  %198 = load i32, i32* %level, align 4
  %199 = load i32, i32* %i, align 4
  %idxprom222 = sext i32 %199 to i64
  %200 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %200 to i64
  %201 = load i32**, i32*** %invlevelscale, align 8
  %arrayidx224 = getelementptr inbounds i32*, i32** %201, i64 %idxprom223
  %202 = load i32*, i32** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds i32, i32* %202, i64 %idxprom222
  %203 = load i32, i32* %arrayidx225, align 4
  %mul226 = mul nsw i32 %198, %203
  %204 = load i32, i32* %qp_per, align 4
  %shl227 = shl i32 %mul226, %204
  %call228 = call i32 @rshift_rnd_sf(i32 %shl227, i32 4)
  store i32 %call228, i32* %ilev, align 4
  br label %if.end.229

if.end.229:                                       ; preds = %cond.end.204, %if.end
  %205 = load i32, i32* %ilev, align 4
  %206 = load i32, i32* %i, align 4
  %idxprom230 = sext i32 %206 to i64
  %207 = load i32, i32* %j, align 4
  %idxprom231 = sext i32 %207 to i64
  %arrayidx232 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom231
  %arrayidx233 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx232, i32 0, i64 %idxprom230
  store i32 %205, i32* %arrayidx233, align 4
  br label %for.inc.234

for.inc.234:                                      ; preds = %if.end.229
  %208 = load i32, i32* %coeff_ctr, align 4
  %inc235 = add nsw i32 %208, 1
  store i32 %inc235, i32* %coeff_ctr, align 4
  br label %for.cond.138

for.end.236:                                      ; preds = %for.cond.138
  %209 = load i32, i32* %scan_pos, align 4
  %idxprom237 = sext i32 %209 to i64
  %210 = load i32*, i32** %ACLevel, align 8
  %arrayidx238 = getelementptr inbounds i32, i32* %210, i64 %idxprom237
  store i32 0, i32* %arrayidx238, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.239

for.cond.239:                                     ; preds = %for.inc.289, %for.end.236
  %211 = load i32, i32* %j, align 4
  %cmp240 = icmp slt i32 %211, 4
  br i1 %cmp240, label %for.body.242, label %for.end.291

for.body.242:                                     ; preds = %for.cond.239
  %212 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %212 to i64
  %arrayidx244 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom243
  %arrayidx245 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx244, i32 0, i64 0
  %213 = load i32, i32* %arrayidx245, align 4
  %214 = load i32, i32* %j, align 4
  %idxprom246 = sext i32 %214 to i64
  %arrayidx247 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom246
  %arrayidx248 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx247, i32 0, i64 2
  %215 = load i32, i32* %arrayidx248, align 4
  %add249 = add nsw i32 %213, %215
  store i32 %add249, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %216 = load i32, i32* %j, align 4
  %idxprom250 = sext i32 %216 to i64
  %arrayidx251 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom250
  %arrayidx252 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx251, i32 0, i64 0
  %217 = load i32, i32* %arrayidx252, align 4
  %218 = load i32, i32* %j, align 4
  %idxprom253 = sext i32 %218 to i64
  %arrayidx254 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom253
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx254, i32 0, i64 2
  %219 = load i32, i32* %arrayidx255, align 4
  %sub256 = sub nsw i32 %217, %219
  store i32 %sub256, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %220 = load i32, i32* %j, align 4
  %idxprom257 = sext i32 %220 to i64
  %arrayidx258 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom257
  %arrayidx259 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx258, i32 0, i64 1
  %221 = load i32, i32* %arrayidx259, align 4
  %shr260 = ashr i32 %221, 1
  %222 = load i32, i32* %j, align 4
  %idxprom261 = sext i32 %222 to i64
  %arrayidx262 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom261
  %arrayidx263 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx262, i32 0, i64 3
  %223 = load i32, i32* %arrayidx263, align 4
  %sub264 = sub nsw i32 %shr260, %223
  store i32 %sub264, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %224 = load i32, i32* %j, align 4
  %idxprom265 = sext i32 %224 to i64
  %arrayidx266 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom265
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx266, i32 0, i64 1
  %225 = load i32, i32* %arrayidx267, align 4
  %226 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %226 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom268
  %arrayidx270 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i32 0, i64 3
  %227 = load i32, i32* %arrayidx270, align 4
  %shr271 = ashr i32 %227, 1
  %add272 = add nsw i32 %225, %shr271
  store i32 %add272, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %228 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %229 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %add273 = add nsw i32 %228, %229
  %230 = load i32, i32* %j, align 4
  %idxprom274 = sext i32 %230 to i64
  %arrayidx275 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom274
  %arrayidx276 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx275, i32 0, i64 0
  store i32 %add273, i32* %arrayidx276, align 4
  %231 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %232 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %add277 = add nsw i32 %231, %232
  %233 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %233 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom278
  %arrayidx280 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i32 0, i64 1
  store i32 %add277, i32* %arrayidx280, align 4
  %234 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %235 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %sub281 = sub nsw i32 %234, %235
  %236 = load i32, i32* %j, align 4
  %idxprom282 = sext i32 %236 to i64
  %arrayidx283 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom282
  %arrayidx284 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx283, i32 0, i64 2
  store i32 %sub281, i32* %arrayidx284, align 4
  %237 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %238 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %sub285 = sub nsw i32 %237, %238
  %239 = load i32, i32* %j, align 4
  %idxprom286 = sext i32 %239 to i64
  %arrayidx287 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom286
  %arrayidx288 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx287, i32 0, i64 3
  store i32 %sub285, i32* %arrayidx288, align 4
  br label %for.inc.289

for.inc.289:                                      ; preds = %for.body.242
  %240 = load i32, i32* %j, align 4
  %inc290 = add nsw i32 %240, 1
  store i32 %inc290, i32* %j, align 4
  br label %for.cond.239

for.end.291:                                      ; preds = %for.cond.239
  store i32 0, i32* %i, align 4
  br label %for.cond.292

for.cond.292:                                     ; preds = %for.inc.392, %for.end.291
  %241 = load i32, i32* %i, align 4
  %cmp293 = icmp slt i32 %241, 4
  br i1 %cmp293, label %for.body.295, label %for.end.394

for.body.295:                                     ; preds = %for.cond.292
  %242 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %242 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 0), i32 0, i64 %idxprom296
  %243 = load i32, i32* %arrayidx297, align 4
  %244 = load i32, i32* %i, align 4
  %idxprom298 = sext i32 %244 to i64
  %arrayidx299 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 2), i32 0, i64 %idxprom298
  %245 = load i32, i32* %arrayidx299, align 4
  %add300 = add nsw i32 %243, %245
  store i32 %add300, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %246 = load i32, i32* %i, align 4
  %idxprom301 = sext i32 %246 to i64
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 0), i32 0, i64 %idxprom301
  %247 = load i32, i32* %arrayidx302, align 4
  %248 = load i32, i32* %i, align 4
  %idxprom303 = sext i32 %248 to i64
  %arrayidx304 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 2), i32 0, i64 %idxprom303
  %249 = load i32, i32* %arrayidx304, align 4
  %sub305 = sub nsw i32 %247, %249
  store i32 %sub305, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %250 = load i32, i32* %i, align 4
  %idxprom306 = sext i32 %250 to i64
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 1), i32 0, i64 %idxprom306
  %251 = load i32, i32* %arrayidx307, align 4
  %shr308 = ashr i32 %251, 1
  %252 = load i32, i32* %i, align 4
  %idxprom309 = sext i32 %252 to i64
  %arrayidx310 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 3), i32 0, i64 %idxprom309
  %253 = load i32, i32* %arrayidx310, align 4
  %sub311 = sub nsw i32 %shr308, %253
  store i32 %sub311, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %254 = load i32, i32* %i, align 4
  %idxprom312 = sext i32 %254 to i64
  %arrayidx313 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 1), i32 0, i64 %idxprom312
  %255 = load i32, i32* %arrayidx313, align 4
  %256 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %256 to i64
  %arrayidx315 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 3), i32 0, i64 %idxprom314
  %257 = load i32, i32* %arrayidx315, align 4
  %shr316 = ashr i32 %257, 1
  %add317 = add nsw i32 %255, %shr316
  store i32 %add317, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %258 = load i32, i32* %i, align 4
  %259 = load i32, i32* %block_x.addr, align 4
  %add318 = add nsw i32 %258, %259
  store i32 %add318, i32* %ii, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 156
  %261 = load i32, i32* %max_imgpel_value, align 4
  %262 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %263 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %add319 = add nsw i32 %262, %263
  %conv320 = sext i32 %add319 to i64
  %264 = load i32, i32* %ii, align 4
  %idxprom321 = sext i32 %264 to i64
  %265 = load i32, i32* %block_y.addr, align 4
  %idxprom322 = sext i32 %265 to i64
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 51
  %arrayidx323 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom322
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx323, i32 0, i64 %idxprom321
  %267 = load i16, i16* %arrayidx324, align 2
  %conv325 = zext i16 %267 to i64
  %shl326 = shl i64 %conv325, 6
  %add327 = add nsw i64 %conv320, %shl326
  %conv328 = trunc i64 %add327 to i32
  %call329 = call i32 @rshift_rnd_sf(i32 %conv328, i32 6)
  %call330 = call i32 @iClip1(i32 %261, i32 %call329)
  %268 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %268 to i64
  %269 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7332 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %269, i32 0, i32 52
  %arrayidx333 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7332, i32 0, i64 0
  %arrayidx334 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx333, i32 0, i64 %idxprom331
  store i32 %call330, i32* %arrayidx334, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value335 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 156
  %271 = load i32, i32* %max_imgpel_value335, align 4
  %272 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %273 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %add336 = add nsw i32 %272, %273
  %conv337 = sext i32 %add336 to i64
  %274 = load i32, i32* %ii, align 4
  %idxprom338 = sext i32 %274 to i64
  %275 = load i32, i32* %block_y.addr, align 4
  %add339 = add nsw i32 1, %275
  %idxprom340 = sext i32 %add339 to i64
  %276 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr341 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %276, i32 0, i32 51
  %arrayidx342 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr341, i32 0, i64 %idxprom340
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx342, i32 0, i64 %idxprom338
  %277 = load i16, i16* %arrayidx343, align 2
  %conv344 = zext i16 %277 to i64
  %shl345 = shl i64 %conv344, 6
  %add346 = add nsw i64 %conv337, %shl345
  %conv347 = trunc i64 %add346 to i32
  %call348 = call i32 @rshift_rnd_sf(i32 %conv347, i32 6)
  %call349 = call i32 @iClip1(i32 %271, i32 %call348)
  %278 = load i32, i32* %i, align 4
  %idxprom350 = sext i32 %278 to i64
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7351 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 52
  %arrayidx352 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7351, i32 0, i64 1
  %arrayidx353 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx352, i32 0, i64 %idxprom350
  store i32 %call349, i32* %arrayidx353, align 4
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 156
  %281 = load i32, i32* %max_imgpel_value354, align 4
  %282 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 1), align 4
  %283 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 2), align 4
  %sub355 = sub nsw i32 %282, %283
  %conv356 = sext i32 %sub355 to i64
  %284 = load i32, i32* %ii, align 4
  %idxprom357 = sext i32 %284 to i64
  %285 = load i32, i32* %block_y.addr, align 4
  %add358 = add nsw i32 2, %285
  %idxprom359 = sext i32 %add358 to i64
  %286 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr360 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %286, i32 0, i32 51
  %arrayidx361 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr360, i32 0, i64 %idxprom359
  %arrayidx362 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx361, i32 0, i64 %idxprom357
  %287 = load i16, i16* %arrayidx362, align 2
  %conv363 = zext i16 %287 to i64
  %shl364 = shl i64 %conv363, 6
  %add365 = add nsw i64 %conv356, %shl364
  %conv366 = trunc i64 %add365 to i32
  %call367 = call i32 @rshift_rnd_sf(i32 %conv366, i32 6)
  %call368 = call i32 @iClip1(i32 %281, i32 %call367)
  %288 = load i32, i32* %i, align 4
  %idxprom369 = sext i32 %288 to i64
  %289 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7370 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %289, i32 0, i32 52
  %arrayidx371 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7370, i32 0, i64 2
  %arrayidx372 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx371, i32 0, i64 %idxprom369
  store i32 %call368, i32* %arrayidx372, align 4
  %290 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value373 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %290, i32 0, i32 156
  %291 = load i32, i32* %max_imgpel_value373, align 4
  %292 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 0), align 4
  %293 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_luma.m6, i32 0, i64 3), align 4
  %sub374 = sub nsw i32 %292, %293
  %conv375 = sext i32 %sub374 to i64
  %294 = load i32, i32* %ii, align 4
  %idxprom376 = sext i32 %294 to i64
  %295 = load i32, i32* %block_y.addr, align 4
  %add377 = add nsw i32 3, %295
  %idxprom378 = sext i32 %add377 to i64
  %296 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %296, i32 0, i32 51
  %arrayidx380 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr379, i32 0, i64 %idxprom378
  %arrayidx381 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx380, i32 0, i64 %idxprom376
  %297 = load i16, i16* %arrayidx381, align 2
  %conv382 = zext i16 %297 to i64
  %shl383 = shl i64 %conv382, 6
  %add384 = add nsw i64 %conv375, %shl383
  %conv385 = trunc i64 %add384 to i32
  %call386 = call i32 @rshift_rnd_sf(i32 %conv385, i32 6)
  %call387 = call i32 @iClip1(i32 %291, i32 %call386)
  %298 = load i32, i32* %i, align 4
  %idxprom388 = sext i32 %298 to i64
  %299 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7389 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %299, i32 0, i32 52
  %arrayidx390 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7389, i32 0, i64 3
  %arrayidx391 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx390, i32 0, i64 %idxprom388
  store i32 %call387, i32* %arrayidx391, align 4
  br label %for.inc.392

for.inc.392:                                      ; preds = %for.body.295
  %300 = load i32, i32* %i, align 4
  %inc393 = add nsw i32 %300, 1
  store i32 %inc393, i32* %i, align 4
  br label %for.cond.292

for.end.394:                                      ; preds = %for.cond.292
  store i32 0, i32* %j, align 4
  br label %for.cond.395

for.cond.395:                                     ; preds = %for.inc.422, %for.end.394
  %301 = load i32, i32* %j, align 4
  %cmp396 = icmp slt i32 %301, 4
  br i1 %cmp396, label %for.body.398, label %for.end.424

for.body.398:                                     ; preds = %for.cond.395
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y399 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 40
  %303 = load i32, i32* %pix_y399, align 4
  %304 = load i32, i32* %block_y.addr, align 4
  %add400 = add nsw i32 %303, %304
  %305 = load i32, i32* %j, align 4
  %add401 = add nsw i32 %add400, %305
  store i32 %add401, i32* %pix_y, align 4
  %306 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x402 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %306, i32 0, i32 39
  %307 = load i32, i32* %pix_x402, align 4
  %308 = load i32, i32* %block_x.addr, align 4
  %add403 = add nsw i32 %307, %308
  store i32 %add403, i32* %pix_x, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.404

for.cond.404:                                     ; preds = %for.inc.419, %for.body.398
  %309 = load i32, i32* %i, align 4
  %cmp405 = icmp slt i32 %309, 4
  br i1 %cmp405, label %for.body.407, label %for.end.421

for.body.407:                                     ; preds = %for.cond.404
  %310 = load i32, i32* %i, align 4
  %idxprom408 = sext i32 %310 to i64
  %311 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %311 to i64
  %312 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %312, i32 0, i32 52
  %arrayidx411 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7410, i32 0, i64 %idxprom409
  %arrayidx412 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx411, i32 0, i64 %idxprom408
  %313 = load i32, i32* %arrayidx412, align 4
  %conv413 = trunc i32 %313 to i16
  %314 = load i32, i32* %pix_x, align 4
  %315 = load i32, i32* %i, align 4
  %add414 = add nsw i32 %314, %315
  %idxprom415 = sext i32 %add414 to i64
  %316 = load i32, i32* %pix_y, align 4
  %idxprom416 = sext i32 %316 to i64
  %317 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %317, i32 0, i32 29
  %318 = load i16**, i16*** %imgY, align 8
  %arrayidx417 = getelementptr inbounds i16*, i16** %318, i64 %idxprom416
  %319 = load i16*, i16** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds i16, i16* %319, i64 %idxprom415
  store i16 %conv413, i16* %arrayidx418, align 2
  br label %for.inc.419

for.inc.419:                                      ; preds = %for.body.407
  %320 = load i32, i32* %i, align 4
  %inc420 = add nsw i32 %320, 1
  store i32 %inc420, i32* %i, align 4
  br label %for.cond.404

for.end.421:                                      ; preds = %for.cond.404
  br label %for.inc.422

for.inc.422:                                      ; preds = %for.end.421
  %321 = load i32, i32* %j, align 4
  %inc423 = add nsw i32 %321, 1
  store i32 %inc423, i32* %j, align 4
  br label %for.cond.395

for.end.424:                                      ; preds = %for.cond.395
  br label %if.end.523

if.else:                                          ; preds = %land.end
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.425

for.cond.425:                                     ; preds = %for.inc.478, %if.else
  %322 = load i32, i32* %coeff_ctr, align 4
  %cmp426 = icmp slt i32 %322, 16
  br i1 %cmp426, label %for.body.428, label %for.end.480

for.body.428:                                     ; preds = %for.cond.425
  %323 = load i32, i32* %coeff_ctr, align 4
  %idxprom429 = sext i32 %323 to i64
  %324 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx430 = getelementptr inbounds [2 x i8], [2 x i8]* %324, i64 %idxprom429
  %arrayidx431 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx430, i32 0, i64 0
  %325 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %325 to i32
  store i32 %conv432, i32* %i, align 4
  %326 = load i32, i32* %coeff_ctr, align 4
  %idxprom433 = sext i32 %326 to i64
  %327 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx434 = getelementptr inbounds [2 x i8], [2 x i8]* %327, i64 %idxprom433
  %arrayidx435 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx434, i32 0, i64 1
  %328 = load i8, i8* %arrayidx435, align 1
  %conv436 = zext i8 %328 to i32
  store i32 %conv436, i32* %j, align 4
  %329 = load i32, i32* %run, align 4
  %inc437 = add nsw i32 %329, 1
  store i32 %inc437, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %330 = load i32, i32* %i, align 4
  %idxprom438 = sext i32 %330 to i64
  %331 = load i32, i32* %j, align 4
  %idxprom439 = sext i32 %331 to i64
  %332 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7440 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %332, i32 0, i32 52
  %arrayidx441 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7440, i32 0, i64 %idxprom439
  %arrayidx442 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx441, i32 0, i64 %idxprom438
  %333 = load i32, i32* %arrayidx442, align 4
  %call443 = call i32 @iabs(i32 %333)
  store i32 %call443, i32* %level, align 4
  %334 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding444 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %334, i32 0, i32 98
  %335 = load i32, i32* %AdaptiveRounding444, align 4
  %tobool445 = icmp ne i32 %335, 0
  br i1 %tobool445, label %if.then.446, label %if.end.456

if.then.446:                                      ; preds = %for.body.428
  %336 = load i32, i32* %block_x.addr, align 4
  %337 = load i32, i32* %i, align 4
  %add447 = add nsw i32 %336, %337
  %idxprom448 = sext i32 %add447 to i64
  %338 = load i32, i32* %block_y.addr, align 4
  %339 = load i32, i32* %j, align 4
  %add449 = add nsw i32 %338, %339
  %idxprom450 = sext i32 %add449 to i64
  %340 = load i32, i32* %intra.addr, align 4
  %idxprom451 = sext i32 %340 to i64
  %341 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4452 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %341, i32 0, i32 55
  %342 = load i32***, i32**** %fadjust4x4452, align 8
  %arrayidx453 = getelementptr inbounds i32**, i32*** %342, i64 %idxprom451
  %343 = load i32**, i32*** %arrayidx453, align 8
  %arrayidx454 = getelementptr inbounds i32*, i32** %343, i64 %idxprom450
  %344 = load i32*, i32** %arrayidx454, align 8
  %arrayidx455 = getelementptr inbounds i32, i32* %344, i64 %idxprom448
  store i32 0, i32* %arrayidx455, align 4
  br label %if.end.456

if.end.456:                                       ; preds = %if.then.446, %for.body.428
  %345 = load i32, i32* %level, align 4
  %cmp457 = icmp ne i32 %345, 0
  br i1 %cmp457, label %if.then.459, label %if.end.477

if.then.459:                                      ; preds = %if.end.456
  store i32 1, i32* %nonzero, align 4
  %346 = load i32*, i32** %coeff_cost.addr, align 8
  %347 = load i32, i32* %346, align 4
  %add460 = add nsw i32 %347, 999999
  store i32 %add460, i32* %346, align 4
  %348 = load i32, i32* %level, align 4
  %349 = load i32, i32* %i, align 4
  %idxprom461 = sext i32 %349 to i64
  %350 = load i32, i32* %j, align 4
  %idxprom462 = sext i32 %350 to i64
  %351 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7463 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %351, i32 0, i32 52
  %arrayidx464 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7463, i32 0, i64 %idxprom462
  %arrayidx465 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx464, i32 0, i64 %idxprom461
  %352 = load i32, i32* %arrayidx465, align 4
  %call466 = call i32 @isignab(i32 %348, i32 %352)
  %353 = load i32, i32* %scan_pos, align 4
  %idxprom467 = sext i32 %353 to i64
  %354 = load i32*, i32** %ACLevel, align 8
  %arrayidx468 = getelementptr inbounds i32, i32* %354, i64 %idxprom467
  store i32 %call466, i32* %arrayidx468, align 4
  %355 = load i32, i32* %run, align 4
  %356 = load i32, i32* %scan_pos, align 4
  %idxprom469 = sext i32 %356 to i64
  %357 = load i32*, i32** %ACRun, align 8
  %arrayidx470 = getelementptr inbounds i32, i32* %357, i64 %idxprom469
  store i32 %355, i32* %arrayidx470, align 4
  %358 = load i32, i32* %scan_pos, align 4
  %inc471 = add nsw i32 %358, 1
  store i32 %inc471, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %359 = load i32, i32* %level, align 4
  %360 = load i32, i32* %i, align 4
  %idxprom472 = sext i32 %360 to i64
  %361 = load i32, i32* %j, align 4
  %idxprom473 = sext i32 %361 to i64
  %arrayidx474 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_luma.m4, i32 0, i64 %idxprom473
  %arrayidx475 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx474, i32 0, i64 %idxprom472
  %362 = load i32, i32* %arrayidx475, align 4
  %call476 = call i32 @isignab(i32 %359, i32 %362)
  store i32 %call476, i32* %level, align 4
  %363 = load i32, i32* %level, align 4
  store i32 %363, i32* %ilev, align 4
  br label %if.end.477

if.end.477:                                       ; preds = %if.then.459, %if.end.456
  br label %for.inc.478

for.inc.478:                                      ; preds = %if.end.477
  %364 = load i32, i32* %coeff_ctr, align 4
  %inc479 = add nsw i32 %364, 1
  store i32 %inc479, i32* %coeff_ctr, align 4
  br label %for.cond.425

for.end.480:                                      ; preds = %for.cond.425
  %365 = load i32, i32* %scan_pos, align 4
  %idxprom481 = sext i32 %365 to i64
  %366 = load i32*, i32** %ACLevel, align 8
  %arrayidx482 = getelementptr inbounds i32, i32* %366, i64 %idxprom481
  store i32 0, i32* %arrayidx482, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.483

for.cond.483:                                     ; preds = %for.inc.520, %for.end.480
  %367 = load i32, i32* %j, align 4
  %cmp484 = icmp slt i32 %367, 4
  br i1 %cmp484, label %for.body.486, label %for.end.522

for.body.486:                                     ; preds = %for.cond.483
  %368 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y487 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %368, i32 0, i32 40
  %369 = load i32, i32* %pix_y487, align 4
  %370 = load i32, i32* %block_y.addr, align 4
  %add488 = add nsw i32 %369, %370
  %371 = load i32, i32* %j, align 4
  %add489 = add nsw i32 %add488, %371
  store i32 %add489, i32* %pix_y, align 4
  %372 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x490 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %372, i32 0, i32 39
  %373 = load i32, i32* %pix_x490, align 4
  %374 = load i32, i32* %block_x.addr, align 4
  %add491 = add nsw i32 %373, %374
  store i32 %add491, i32* %pix_x, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.492

for.cond.492:                                     ; preds = %for.inc.517, %for.body.486
  %375 = load i32, i32* %i, align 4
  %cmp493 = icmp slt i32 %375, 4
  br i1 %cmp493, label %for.body.495, label %for.end.519

for.body.495:                                     ; preds = %for.cond.492
  %376 = load i32, i32* %i, align 4
  %idxprom496 = sext i32 %376 to i64
  %377 = load i32, i32* %j, align 4
  %idxprom497 = sext i32 %377 to i64
  %378 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7498 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %378, i32 0, i32 52
  %arrayidx499 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7498, i32 0, i64 %idxprom497
  %arrayidx500 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx499, i32 0, i64 %idxprom496
  %379 = load i32, i32* %arrayidx500, align 4
  %380 = load i32, i32* %i, align 4
  %381 = load i32, i32* %block_x.addr, align 4
  %add501 = add nsw i32 %380, %381
  %idxprom502 = sext i32 %add501 to i64
  %382 = load i32, i32* %j, align 4
  %383 = load i32, i32* %block_y.addr, align 4
  %add503 = add nsw i32 %382, %383
  %idxprom504 = sext i32 %add503 to i64
  %384 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr505 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %384, i32 0, i32 51
  %arrayidx506 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr505, i32 0, i64 %idxprom504
  %arrayidx507 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx506, i32 0, i64 %idxprom502
  %385 = load i16, i16* %arrayidx507, align 2
  %conv508 = zext i16 %385 to i32
  %add509 = add nsw i32 %379, %conv508
  %conv510 = trunc i32 %add509 to i16
  %386 = load i32, i32* %pix_x, align 4
  %387 = load i32, i32* %i, align 4
  %add511 = add nsw i32 %386, %387
  %idxprom512 = sext i32 %add511 to i64
  %388 = load i32, i32* %pix_y, align 4
  %idxprom513 = sext i32 %388 to i64
  %389 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY514 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %389, i32 0, i32 29
  %390 = load i16**, i16*** %imgY514, align 8
  %arrayidx515 = getelementptr inbounds i16*, i16** %390, i64 %idxprom513
  %391 = load i16*, i16** %arrayidx515, align 8
  %arrayidx516 = getelementptr inbounds i16, i16* %391, i64 %idxprom512
  store i16 %conv510, i16* %arrayidx516, align 2
  br label %for.inc.517

for.inc.517:                                      ; preds = %for.body.495
  %392 = load i32, i32* %i, align 4
  %inc518 = add nsw i32 %392, 1
  store i32 %inc518, i32* %i, align 4
  br label %for.cond.492

for.end.519:                                      ; preds = %for.cond.492
  br label %for.inc.520

for.inc.520:                                      ; preds = %for.end.519
  %393 = load i32, i32* %j, align 4
  %inc521 = add nsw i32 %393, 1
  store i32 %inc521, i32* %j, align 4
  br label %for.cond.483

for.end.522:                                      ; preds = %for.cond.483
  br label %if.end.523

if.end.523:                                       ; preds = %for.end.522, %for.end.424
  %394 = load i32, i32* %nonzero, align 4
  ret i32 %394
}

; Function Attrs: nounwind uwtable
define i32 @dct_chroma(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %uv.addr = alloca i32, align 4
  %cr_cbp.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %ilev = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %coeff_ctr = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %coeff_cost = alloca i32, align 4
  %cr_cbp_tmp = alloca i32, align 4
  %DCcoded = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %b4 = alloca i32, align 4
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %intra = alloca i32, align 4
  %uv_scale = alloca i32, align 4
  %yuv = alloca i32, align 4
  %b8 = alloca i32, align 4
  %qp_per_dc = alloca i32, align 4
  %qp_rem_dc = alloca i32, align 4
  %q_bits_422 = alloca i32, align 4
  %levelscale = alloca i32***, align 8
  %leveloffset = alloca i32***, align 8
  %invlevelscale = alloca i32***, align 8
  %pix_c_x = alloca i16, align 2
  %pix_c_y = alloca i16, align 2
  %pos_scan = alloca [2 x i8]*, align 8
  %lossless_qpprime = alloca i32, align 4
  %uv_cbpblk = alloca i64, align 8
  %uv_cbpblk1518 = alloca i64, align 8
  store i32 %uv, i32* %uv.addr, align 4
  store i32 %cr_cbp, i32* %cr_cbp.addr, align 4
  store i32 0, i32* %DCcoded, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 61
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load i32, i32* %uv.addr, align 4
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 54
  %6 = load i32***, i32**** %cofDC, align 8
  %arrayidx2 = getelementptr inbounds i32**, i32*** %6, i64 %idxprom1
  %7 = load i32**, i32*** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32*, i32** %7, i64 0
  %8 = load i32*, i32** %arrayidx3, align 8
  store i32* %8, i32** %DCLevel, align 8
  %9 = load i32, i32* %uv.addr, align 4
  %add4 = add nsw i32 %9, 1
  %idxprom5 = sext i32 %add4 to i64
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC6 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 54
  %11 = load i32***, i32**** %cofDC6, align 8
  %arrayidx7 = getelementptr inbounds i32**, i32*** %11, i64 %idxprom5
  %12 = load i32**, i32*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32*, i32** %12, i64 1
  %13 = load i32*, i32** %arrayidx8, align 8
  store i32* %13, i32** %DCRun, align 8
  %14 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i32 0, i32 8
  %15 = load i32, i32* %mb_type, align 4
  %cmp = icmp eq i32 %15, 9
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %16 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %16, i32 0, i32 8
  %17 = load i32, i32* %mb_type9, align 4
  %cmp10 = icmp eq i32 %17, 10
  br i1 %cmp10, label %lor.end, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false
  %18 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i32 0, i32 8
  %19 = load i32, i32* %mb_type12, align 4
  %cmp13 = icmp eq i32 %19, 13
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.11
  %20 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %20, i32 0, i32 8
  %21 = load i32, i32* %mb_type14, align 4
  %cmp15 = icmp eq i32 %21, 14
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.11, %lor.lhs.false, %entry
  %22 = phi i1 [ true, %lor.lhs.false.11 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp15, %lor.rhs ]
  %lor.ext = zext i1 %22 to i32
  store i32 %lor.ext, i32* %intra, align 4
  %23 = load i32, i32* %uv.addr, align 4
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 158
  %25 = load i32, i32* %num_blk8x8_uv, align 4
  %shr = ashr i32 %25, 1
  %mul = mul nsw i32 %23, %shr
  store i32 %mul, i32* %uv_scale, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 160
  %27 = load i32, i32* %yuv_format, align 4
  store i32 %27, i32* %yuv, align 4
  store i32 0, i32* %qp_per_dc, align 4
  store i32 0, i32* %qp_rem_dc, align 4
  store i32 0, i32* %q_bits_422, align 4
  %28 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %is_field_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %28, i32 0, i32 20
  %29 = load i32, i32* %is_field_mode, align 4
  %tobool = icmp ne i32 %29, 0
  %cond = select i1 %tobool, [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i32 0), [2 x i8]* getelementptr inbounds ([16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i32 0)
  store [2 x i8]* %cond, [2 x i8]** %pos_scan, align 8
  %30 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i32 0, i32 2
  %31 = load i32, i32* %qp, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 144
  %33 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %add16 = add nsw i32 %31, %33
  %cmp17 = icmp eq i32 %add16, 0
  br i1 %cmp17, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.end
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 161
  %35 = load i32, i32* %lossless_qpprime_flag, align 4
  %cmp18 = icmp eq i32 %35, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %36 = phi i1 [ false, %lor.end ], [ %cmp18, %land.rhs ]
  %land.ext = zext i1 %36 to i32
  store i32 %land.ext, i32* %lossless_qpprime, align 4
  %37 = load i32, i32* %uv.addr, align 4
  %idxprom19 = sext i32 %37 to i64
  %38 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpc = getelementptr inbounds %struct.macroblock, %struct.macroblock* %38, i32 0, i32 3
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %qpc, i32 0, i64 %idxprom19
  %39 = load i32, i32* %arrayidx20, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 145
  %41 = load i32, i32* %bitdepth_chroma_qp_scale, align 4
  %add21 = add nsw i32 %39, %41
  %idxprom22 = sext i32 %add21 to i64
  %42 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %42, i64 %idxprom22
  %43 = load i32, i32* %arrayidx23, align 4
  store i32 %43, i32* %qp_per, align 4
  %44 = load i32, i32* %uv.addr, align 4
  %idxprom24 = sext i32 %44 to i64
  %45 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpc25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %45, i32 0, i32 3
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %qpc25, i32 0, i64 %idxprom24
  %46 = load i32, i32* %arrayidx26, align 4
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale27 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 145
  %48 = load i32, i32* %bitdepth_chroma_qp_scale27, align 4
  %add28 = add nsw i32 %46, %48
  %idxprom29 = sext i32 %add28 to i64
  %49 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx30 = getelementptr inbounds i32, i32* %49, i64 %idxprom29
  %50 = load i32, i32* %arrayidx30, align 4
  store i32 %50, i32* %qp_rem, align 4
  %51 = load i32, i32* %qp_per, align 4
  %add31 = add nsw i32 15, %51
  store i32 %add31, i32* %q_bits, align 4
  %52 = load i32, i32* %intra, align 4
  %idxprom32 = sext i32 %52 to i64
  %53 = load i32, i32* %uv.addr, align 4
  %idxprom33 = sext i32 %53 to i64
  %54 = load i32*****, i32****** @LevelScale4x4Chroma, align 8
  %arrayidx34 = getelementptr inbounds i32****, i32***** %54, i64 %idxprom33
  %55 = load i32****, i32***** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i32***, i32**** %55, i64 %idxprom32
  %56 = load i32***, i32**** %arrayidx35, align 8
  store i32*** %56, i32**** %levelscale, align 8
  %57 = load i32, i32* %intra, align 4
  %idxprom36 = sext i32 %57 to i64
  %58 = load i32, i32* %uv.addr, align 4
  %idxprom37 = sext i32 %58 to i64
  %59 = load i32*****, i32****** @LevelOffset4x4Chroma, align 8
  %arrayidx38 = getelementptr inbounds i32****, i32***** %59, i64 %idxprom37
  %60 = load i32****, i32***** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i32***, i32**** %60, i64 %idxprom36
  %61 = load i32***, i32**** %arrayidx39, align 8
  store i32*** %61, i32**** %leveloffset, align 8
  %62 = load i32, i32* %intra, align 4
  %idxprom40 = sext i32 %62 to i64
  %63 = load i32, i32* %uv.addr, align 4
  %idxprom41 = sext i32 %63 to i64
  %64 = load i32*****, i32****** @InvLevelScale4x4Chroma, align 8
  %arrayidx42 = getelementptr inbounds i32****, i32***** %64, i64 %idxprom41
  %65 = load i32****, i32***** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds i32***, i32**** %65, i64 %idxprom40
  %66 = load i32***, i32**** %arrayidx43, align 8
  store i32*** %66, i32**** %invlevelscale, align 8
  %67 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %67, i32 0, i32 160
  %68 = load i32, i32* %yuv_format44, align 4
  %cmp45 = icmp eq i32 %68, 2
  br i1 %cmp45, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %69 = load i32, i32* %uv.addr, align 4
  %idxprom46 = sext i32 %69 to i64
  %70 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpc47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %70, i32 0, i32 3
  %arrayidx48 = getelementptr inbounds [2 x i32], [2 x i32]* %qpc47, i32 0, i64 %idxprom46
  %71 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 %71, 3
  %72 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale50 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %72, i32 0, i32 145
  %73 = load i32, i32* %bitdepth_chroma_qp_scale50, align 4
  %add51 = add nsw i32 %add49, %73
  %idxprom52 = sext i32 %add51 to i64
  %74 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx53 = getelementptr inbounds i32, i32* %74, i64 %idxprom52
  %75 = load i32, i32* %arrayidx53, align 4
  store i32 %75, i32* %qp_per_dc, align 4
  %76 = load i32, i32* %uv.addr, align 4
  %idxprom54 = sext i32 %76 to i64
  %77 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpc55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %77, i32 0, i32 3
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %qpc55, i32 0, i64 %idxprom54
  %78 = load i32, i32* %arrayidx56, align 4
  %add57 = add nsw i32 %78, 3
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 145
  %80 = load i32, i32* %bitdepth_chroma_qp_scale58, align 4
  %add59 = add nsw i32 %add57, %80
  %idxprom60 = sext i32 %add59 to i64
  %81 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx61 = getelementptr inbounds i32, i32* %81, i64 %idxprom60
  %82 = load i32, i32* %arrayidx61, align 4
  store i32 %82, i32* %qp_rem_dc, align 4
  %83 = load i32, i32* %qp_per_dc, align 4
  %add62 = add nsw i32 15, %83
  store i32 %add62, i32* %q_bits_422, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %84 = load i32, i32* %lossless_qpprime, align 4
  %tobool63 = icmp ne i32 %84, 0
  br i1 %tobool63, label %if.end.241, label %if.then.64

if.then.64:                                       ; preds = %if.end
  store i32 0, i32* %n2, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.238, %if.then.64
  %85 = load i32, i32* %n2, align 4
  %86 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %86, i32 0, i32 163
  %87 = load i32, i32* %mb_cr_size_y, align 4
  %cmp65 = icmp slt i32 %85, %87
  br i1 %cmp65, label %for.body, label %for.end.240

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %n1, align 4
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.235, %for.body
  %88 = load i32, i32* %n1, align 4
  %89 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %89, i32 0, i32 162
  %90 = load i32, i32* %mb_cr_size_x, align 4
  %cmp67 = icmp slt i32 %88, %90
  br i1 %cmp67, label %for.body.68, label %for.end.237

for.body.68:                                      ; preds = %for.cond.66
  store i32 0, i32* %j, align 4
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc, %for.body.68
  %91 = load i32, i32* %j, align 4
  %cmp70 = icmp slt i32 %91, 4
  br i1 %cmp70, label %for.body.71, label %for.end

for.body.71:                                      ; preds = %for.cond.69
  %92 = load i32, i32* %n2, align 4
  %93 = load i32, i32* %j, align 4
  %add72 = add nsw i32 %92, %93
  store i32 %add72, i32* %mb_y, align 4
  %94 = load i32, i32* %n1, align 4
  %idxprom73 = sext i32 %94 to i64
  %95 = load i32, i32* %mb_y, align 4
  %idxprom74 = sext i32 %95 to i64
  %96 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %96, i32 0, i32 52
  %arrayidx75 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom74
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx75, i32 0, i64 %idxprom73
  %97 = load i32, i32* %arrayidx76, align 4
  %98 = load i32, i32* %n1, align 4
  %add77 = add nsw i32 %98, 3
  %idxprom78 = sext i32 %add77 to i64
  %99 = load i32, i32* %mb_y, align 4
  %idxprom79 = sext i32 %99 to i64
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m780 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 52
  %arrayidx81 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m780, i32 0, i64 %idxprom79
  %arrayidx82 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx81, i32 0, i64 %idxprom78
  %101 = load i32, i32* %arrayidx82, align 4
  %add83 = add nsw i32 %97, %101
  store i32 %add83, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %102 = load i32, i32* %n1, align 4
  %add84 = add nsw i32 %102, 1
  %idxprom85 = sext i32 %add84 to i64
  %103 = load i32, i32* %mb_y, align 4
  %idxprom86 = sext i32 %103 to i64
  %104 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m787 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %104, i32 0, i32 52
  %arrayidx88 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m787, i32 0, i64 %idxprom86
  %arrayidx89 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx88, i32 0, i64 %idxprom85
  %105 = load i32, i32* %arrayidx89, align 4
  %106 = load i32, i32* %n1, align 4
  %add90 = add nsw i32 %106, 2
  %idxprom91 = sext i32 %add90 to i64
  %107 = load i32, i32* %mb_y, align 4
  %idxprom92 = sext i32 %107 to i64
  %108 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m793 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %108, i32 0, i32 52
  %arrayidx94 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m793, i32 0, i64 %idxprom92
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx94, i32 0, i64 %idxprom91
  %109 = load i32, i32* %arrayidx95, align 4
  %add96 = add nsw i32 %105, %109
  store i32 %add96, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %110 = load i32, i32* %n1, align 4
  %add97 = add nsw i32 %110, 1
  %idxprom98 = sext i32 %add97 to i64
  %111 = load i32, i32* %mb_y, align 4
  %idxprom99 = sext i32 %111 to i64
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 52
  %arrayidx101 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7100, i32 0, i64 %idxprom99
  %arrayidx102 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx101, i32 0, i64 %idxprom98
  %113 = load i32, i32* %arrayidx102, align 4
  %114 = load i32, i32* %n1, align 4
  %add103 = add nsw i32 %114, 2
  %idxprom104 = sext i32 %add103 to i64
  %115 = load i32, i32* %mb_y, align 4
  %idxprom105 = sext i32 %115 to i64
  %116 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7106 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %116, i32 0, i32 52
  %arrayidx107 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7106, i32 0, i64 %idxprom105
  %arrayidx108 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx107, i32 0, i64 %idxprom104
  %117 = load i32, i32* %arrayidx108, align 4
  %sub = sub nsw i32 %113, %117
  store i32 %sub, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %118 = load i32, i32* %n1, align 4
  %idxprom109 = sext i32 %118 to i64
  %119 = load i32, i32* %mb_y, align 4
  %idxprom110 = sext i32 %119 to i64
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7111 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 52
  %arrayidx112 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7111, i32 0, i64 %idxprom110
  %arrayidx113 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx112, i32 0, i64 %idxprom109
  %121 = load i32, i32* %arrayidx113, align 4
  %122 = load i32, i32* %n1, align 4
  %add114 = add nsw i32 %122, 3
  %idxprom115 = sext i32 %add114 to i64
  %123 = load i32, i32* %mb_y, align 4
  %idxprom116 = sext i32 %123 to i64
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7117 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i32 0, i32 52
  %arrayidx118 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7117, i32 0, i64 %idxprom116
  %arrayidx119 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx118, i32 0, i64 %idxprom115
  %125 = load i32, i32* %arrayidx119, align 4
  %sub120 = sub nsw i32 %121, %125
  store i32 %sub120, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %126 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %127 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %add121 = add nsw i32 %126, %127
  %128 = load i32, i32* %n1, align 4
  %idxprom122 = sext i32 %128 to i64
  %129 = load i32, i32* %mb_y, align 4
  %idxprom123 = sext i32 %129 to i64
  %130 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %130, i32 0, i32 52
  %arrayidx125 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7124, i32 0, i64 %idxprom123
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx125, i32 0, i64 %idxprom122
  store i32 %add121, i32* %arrayidx126, align 4
  %131 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %132 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %sub127 = sub nsw i32 %131, %132
  %133 = load i32, i32* %n1, align 4
  %add128 = add nsw i32 %133, 2
  %idxprom129 = sext i32 %add128 to i64
  %134 = load i32, i32* %mb_y, align 4
  %idxprom130 = sext i32 %134 to i64
  %135 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7131 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %135, i32 0, i32 52
  %arrayidx132 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7131, i32 0, i64 %idxprom130
  %arrayidx133 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx132, i32 0, i64 %idxprom129
  store i32 %sub127, i32* %arrayidx133, align 4
  %136 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %shl = shl i32 %136, 1
  %137 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add134 = add nsw i32 %shl, %137
  %138 = load i32, i32* %n1, align 4
  %add135 = add nsw i32 %138, 1
  %idxprom136 = sext i32 %add135 to i64
  %139 = load i32, i32* %mb_y, align 4
  %idxprom137 = sext i32 %139 to i64
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7138 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 52
  %arrayidx139 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7138, i32 0, i64 %idxprom137
  %arrayidx140 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx139, i32 0, i64 %idxprom136
  store i32 %add134, i32* %arrayidx140, align 4
  %141 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %142 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %shl141 = shl i32 %142, 1
  %sub142 = sub nsw i32 %141, %shl141
  %143 = load i32, i32* %n1, align 4
  %add143 = add nsw i32 %143, 3
  %idxprom144 = sext i32 %add143 to i64
  %144 = load i32, i32* %mb_y, align 4
  %idxprom145 = sext i32 %144 to i64
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7146 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 52
  %arrayidx147 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7146, i32 0, i64 %idxprom145
  %arrayidx148 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx147, i32 0, i64 %idxprom144
  store i32 %sub142, i32* %arrayidx148, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.71
  %146 = load i32, i32* %j, align 4
  %inc = add nsw i32 %146, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.69

for.end:                                          ; preds = %for.cond.69
  store i32 0, i32* %i, align 4
  br label %for.cond.149

for.cond.149:                                     ; preds = %for.inc.232, %for.end
  %147 = load i32, i32* %i, align 4
  %cmp150 = icmp slt i32 %147, 4
  br i1 %cmp150, label %for.body.151, label %for.end.234

for.body.151:                                     ; preds = %for.cond.149
  %148 = load i32, i32* %n1, align 4
  %149 = load i32, i32* %i, align 4
  %add152 = add nsw i32 %148, %149
  store i32 %add152, i32* %j1, align 4
  %150 = load i32, i32* %j1, align 4
  %idxprom153 = sext i32 %150 to i64
  %151 = load i32, i32* %n2, align 4
  %idxprom154 = sext i32 %151 to i64
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7155 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 52
  %arrayidx156 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7155, i32 0, i64 %idxprom154
  %arrayidx157 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx156, i32 0, i64 %idxprom153
  %153 = load i32, i32* %arrayidx157, align 4
  %154 = load i32, i32* %j1, align 4
  %idxprom158 = sext i32 %154 to i64
  %155 = load i32, i32* %n2, align 4
  %add159 = add nsw i32 %155, 3
  %idxprom160 = sext i32 %add159 to i64
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7161 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 52
  %arrayidx162 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7161, i32 0, i64 %idxprom160
  %arrayidx163 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx162, i32 0, i64 %idxprom158
  %157 = load i32, i32* %arrayidx163, align 4
  %add164 = add nsw i32 %153, %157
  store i32 %add164, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %158 = load i32, i32* %j1, align 4
  %idxprom165 = sext i32 %158 to i64
  %159 = load i32, i32* %n2, align 4
  %add166 = add nsw i32 %159, 1
  %idxprom167 = sext i32 %add166 to i64
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7168 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 52
  %arrayidx169 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7168, i32 0, i64 %idxprom167
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx169, i32 0, i64 %idxprom165
  %161 = load i32, i32* %arrayidx170, align 4
  %162 = load i32, i32* %j1, align 4
  %idxprom171 = sext i32 %162 to i64
  %163 = load i32, i32* %n2, align 4
  %add172 = add nsw i32 %163, 2
  %idxprom173 = sext i32 %add172 to i64
  %164 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7174 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %164, i32 0, i32 52
  %arrayidx175 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7174, i32 0, i64 %idxprom173
  %arrayidx176 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx175, i32 0, i64 %idxprom171
  %165 = load i32, i32* %arrayidx176, align 4
  %add177 = add nsw i32 %161, %165
  store i32 %add177, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %166 = load i32, i32* %j1, align 4
  %idxprom178 = sext i32 %166 to i64
  %167 = load i32, i32* %n2, align 4
  %add179 = add nsw i32 %167, 1
  %idxprom180 = sext i32 %add179 to i64
  %168 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7181 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %168, i32 0, i32 52
  %arrayidx182 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7181, i32 0, i64 %idxprom180
  %arrayidx183 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx182, i32 0, i64 %idxprom178
  %169 = load i32, i32* %arrayidx183, align 4
  %170 = load i32, i32* %j1, align 4
  %idxprom184 = sext i32 %170 to i64
  %171 = load i32, i32* %n2, align 4
  %add185 = add nsw i32 %171, 2
  %idxprom186 = sext i32 %add185 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 52
  %arrayidx188 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7187, i32 0, i64 %idxprom186
  %arrayidx189 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx188, i32 0, i64 %idxprom184
  %173 = load i32, i32* %arrayidx189, align 4
  %sub190 = sub nsw i32 %169, %173
  store i32 %sub190, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %174 = load i32, i32* %j1, align 4
  %idxprom191 = sext i32 %174 to i64
  %175 = load i32, i32* %n2, align 4
  %idxprom192 = sext i32 %175 to i64
  %176 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %176, i32 0, i32 52
  %arrayidx194 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7193, i32 0, i64 %idxprom192
  %arrayidx195 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx194, i32 0, i64 %idxprom191
  %177 = load i32, i32* %arrayidx195, align 4
  %178 = load i32, i32* %j1, align 4
  %idxprom196 = sext i32 %178 to i64
  %179 = load i32, i32* %n2, align 4
  %add197 = add nsw i32 %179, 3
  %idxprom198 = sext i32 %add197 to i64
  %180 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7199 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %180, i32 0, i32 52
  %arrayidx200 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7199, i32 0, i64 %idxprom198
  %arrayidx201 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx200, i32 0, i64 %idxprom196
  %181 = load i32, i32* %arrayidx201, align 4
  %sub202 = sub nsw i32 %177, %181
  store i32 %sub202, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %182 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %183 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %add203 = add nsw i32 %182, %183
  %184 = load i32, i32* %j1, align 4
  %idxprom204 = sext i32 %184 to i64
  %185 = load i32, i32* %n2, align 4
  %idxprom205 = sext i32 %185 to i64
  %186 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7206 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %186, i32 0, i32 52
  %arrayidx207 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7206, i32 0, i64 %idxprom205
  %arrayidx208 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx207, i32 0, i64 %idxprom204
  store i32 %add203, i32* %arrayidx208, align 4
  %187 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %188 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %sub209 = sub nsw i32 %187, %188
  %189 = load i32, i32* %j1, align 4
  %idxprom210 = sext i32 %189 to i64
  %190 = load i32, i32* %n2, align 4
  %add211 = add nsw i32 %190, 2
  %idxprom212 = sext i32 %add211 to i64
  %191 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7213 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %191, i32 0, i32 52
  %arrayidx214 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7213, i32 0, i64 %idxprom212
  %arrayidx215 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx214, i32 0, i64 %idxprom210
  store i32 %sub209, i32* %arrayidx215, align 4
  %192 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %shl216 = shl i32 %192, 1
  %193 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add217 = add nsw i32 %shl216, %193
  %194 = load i32, i32* %j1, align 4
  %idxprom218 = sext i32 %194 to i64
  %195 = load i32, i32* %n2, align 4
  %add219 = add nsw i32 %195, 1
  %idxprom220 = sext i32 %add219 to i64
  %196 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7221 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %196, i32 0, i32 52
  %arrayidx222 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7221, i32 0, i64 %idxprom220
  %arrayidx223 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx222, i32 0, i64 %idxprom218
  store i32 %add217, i32* %arrayidx223, align 4
  %197 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %198 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %shl224 = shl i32 %198, 1
  %sub225 = sub nsw i32 %197, %shl224
  %199 = load i32, i32* %j1, align 4
  %idxprom226 = sext i32 %199 to i64
  %200 = load i32, i32* %n2, align 4
  %add227 = add nsw i32 %200, 3
  %idxprom228 = sext i32 %add227 to i64
  %201 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %201, i32 0, i32 52
  %arrayidx230 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7229, i32 0, i64 %idxprom228
  %arrayidx231 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx230, i32 0, i64 %idxprom226
  store i32 %sub225, i32* %arrayidx231, align 4
  br label %for.inc.232

for.inc.232:                                      ; preds = %for.body.151
  %202 = load i32, i32* %i, align 4
  %inc233 = add nsw i32 %202, 1
  store i32 %inc233, i32* %i, align 4
  br label %for.cond.149

for.end.234:                                      ; preds = %for.cond.149
  br label %for.inc.235

for.inc.235:                                      ; preds = %for.end.234
  %203 = load i32, i32* %n1, align 4
  %add236 = add nsw i32 %203, 4
  store i32 %add236, i32* %n1, align 4
  br label %for.cond.66

for.end.237:                                      ; preds = %for.cond.66
  br label %for.inc.238

for.inc.238:                                      ; preds = %for.end.237
  %204 = load i32, i32* %n2, align 4
  %add239 = add nsw i32 %204, 4
  store i32 %add239, i32* %n2, align 4
  br label %for.cond

for.end.240:                                      ; preds = %for.cond
  br label %if.end.241

if.end.241:                                       ; preds = %for.end.240, %if.end
  %205 = load i32, i32* %yuv, align 4
  %cmp242 = icmp eq i32 %205, 1
  br i1 %cmp242, label %if.then.243, label %if.else.469

if.then.243:                                      ; preds = %if.end.241
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  %206 = load i32, i32* %lossless_qpprime, align 4
  %tobool244 = icmp ne i32 %206, 0
  br i1 %tobool244, label %if.else, label %if.then.245

if.then.245:                                      ; preds = %if.then.243
  %207 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7246 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %207, i32 0, i32 52
  %arrayidx247 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7246, i32 0, i64 0
  %arrayidx248 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx247, i32 0, i64 0
  %208 = load i32, i32* %arrayidx248, align 4
  %209 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7249 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %209, i32 0, i32 52
  %arrayidx250 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7249, i32 0, i64 0
  %arrayidx251 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx250, i32 0, i64 4
  %210 = load i32, i32* %arrayidx251, align 4
  %add252 = add nsw i32 %208, %210
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7253 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 52
  %arrayidx254 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7253, i32 0, i64 4
  %arrayidx255 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx254, i32 0, i64 0
  %212 = load i32, i32* %arrayidx255, align 4
  %add256 = add nsw i32 %add252, %212
  %213 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7257 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %213, i32 0, i32 52
  %arrayidx258 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7257, i32 0, i64 4
  %arrayidx259 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx258, i32 0, i64 4
  %214 = load i32, i32* %arrayidx259, align 4
  %add260 = add nsw i32 %add256, %214
  store i32 %add260, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %215 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %215, i32 0, i32 52
  %arrayidx262 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7261, i32 0, i64 0
  %arrayidx263 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx262, i32 0, i64 0
  %216 = load i32, i32* %arrayidx263, align 4
  %217 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7264 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %217, i32 0, i32 52
  %arrayidx265 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7264, i32 0, i64 0
  %arrayidx266 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx265, i32 0, i64 4
  %218 = load i32, i32* %arrayidx266, align 4
  %sub267 = sub nsw i32 %216, %218
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7268 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 52
  %arrayidx269 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7268, i32 0, i64 4
  %arrayidx270 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx269, i32 0, i64 0
  %220 = load i32, i32* %arrayidx270, align 4
  %add271 = add nsw i32 %sub267, %220
  %221 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7272 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %221, i32 0, i32 52
  %arrayidx273 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7272, i32 0, i64 4
  %arrayidx274 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx273, i32 0, i64 4
  %222 = load i32, i32* %arrayidx274, align 4
  %sub275 = sub nsw i32 %add271, %222
  store i32 %sub275, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %223 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7276 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %223, i32 0, i32 52
  %arrayidx277 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7276, i32 0, i64 0
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx277, i32 0, i64 0
  %224 = load i32, i32* %arrayidx278, align 4
  %225 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7279 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %225, i32 0, i32 52
  %arrayidx280 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7279, i32 0, i64 0
  %arrayidx281 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx280, i32 0, i64 4
  %226 = load i32, i32* %arrayidx281, align 4
  %add282 = add nsw i32 %224, %226
  %227 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7283 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %227, i32 0, i32 52
  %arrayidx284 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7283, i32 0, i64 4
  %arrayidx285 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx284, i32 0, i64 0
  %228 = load i32, i32* %arrayidx285, align 4
  %sub286 = sub nsw i32 %add282, %228
  %229 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7287 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %229, i32 0, i32 52
  %arrayidx288 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7287, i32 0, i64 4
  %arrayidx289 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx288, i32 0, i64 4
  %230 = load i32, i32* %arrayidx289, align 4
  %sub290 = sub nsw i32 %sub286, %230
  store i32 %sub290, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 52
  %arrayidx292 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7291, i32 0, i64 0
  %arrayidx293 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx292, i32 0, i64 0
  %232 = load i32, i32* %arrayidx293, align 4
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7294 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 52
  %arrayidx295 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7294, i32 0, i64 0
  %arrayidx296 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx295, i32 0, i64 4
  %234 = load i32, i32* %arrayidx296, align 4
  %sub297 = sub nsw i32 %232, %234
  %235 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7298 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %235, i32 0, i32 52
  %arrayidx299 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7298, i32 0, i64 4
  %arrayidx300 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx299, i32 0, i64 0
  %236 = load i32, i32* %arrayidx300, align 4
  %sub301 = sub nsw i32 %sub297, %236
  %237 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7302 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %237, i32 0, i32 52
  %arrayidx303 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7302, i32 0, i64 4
  %arrayidx304 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx303, i32 0, i64 4
  %238 = load i32, i32* %arrayidx304, align 4
  %add305 = add nsw i32 %sub301, %238
  store i32 %add305, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.306

for.cond.306:                                     ; preds = %for.inc.352, %if.then.245
  %239 = load i32, i32* %coeff_ctr, align 4
  %cmp307 = icmp slt i32 %239, 4
  br i1 %cmp307, label %for.body.308, label %for.end.354

for.body.308:                                     ; preds = %for.cond.306
  %240 = load i32, i32* %run, align 4
  %inc309 = add nsw i32 %240, 1
  store i32 %inc309, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %241 = load i32, i32* %coeff_ctr, align 4
  %idxprom310 = sext i32 %241 to i64
  %arrayidx311 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom310
  %242 = load i32, i32* %arrayidx311, align 4
  %call = call i32 @iabs(i32 %242)
  %243 = load i32, i32* %qp_rem, align 4
  %idxprom312 = sext i32 %243 to i64
  %244 = load i32***, i32**** %levelscale, align 8
  %arrayidx313 = getelementptr inbounds i32**, i32*** %244, i64 %idxprom312
  %245 = load i32**, i32*** %arrayidx313, align 8
  %arrayidx314 = getelementptr inbounds i32*, i32** %245, i64 0
  %246 = load i32*, i32** %arrayidx314, align 8
  %arrayidx315 = getelementptr inbounds i32, i32* %246, i64 0
  %247 = load i32, i32* %arrayidx315, align 4
  %mul316 = mul nsw i32 %call, %247
  %248 = load i32, i32* %qp_per, align 4
  %idxprom317 = sext i32 %248 to i64
  %249 = load i32***, i32**** %leveloffset, align 8
  %arrayidx318 = getelementptr inbounds i32**, i32*** %249, i64 %idxprom317
  %250 = load i32**, i32*** %arrayidx318, align 8
  %arrayidx319 = getelementptr inbounds i32*, i32** %250, i64 0
  %251 = load i32*, i32** %arrayidx319, align 8
  %arrayidx320 = getelementptr inbounds i32, i32* %251, i64 0
  %252 = load i32, i32* %arrayidx320, align 4
  %shl321 = shl i32 %252, 1
  %add322 = add nsw i32 %mul316, %shl321
  %253 = load i32, i32* %q_bits, align 4
  %add323 = add nsw i32 %253, 1
  %shr324 = ashr i32 %add322, %add323
  store i32 %shr324, i32* %level, align 4
  %254 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %254, i32 0, i32 74
  %255 = load i32, i32* %symbol_mode, align 4
  %cmp325 = icmp eq i32 %255, 0
  br i1 %cmp325, label %land.lhs.true, label %if.end.332

land.lhs.true:                                    ; preds = %for.body.308
  %256 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp326 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %256, i32 0, i32 9
  %257 = load i32, i32* %qp326, align 4
  %cmp327 = icmp slt i32 %257, 4
  br i1 %cmp327, label %if.then.328, label %if.end.332

if.then.328:                                      ; preds = %land.lhs.true
  %258 = load i32, i32* %level, align 4
  %cmp329 = icmp sgt i32 %258, 2063
  br i1 %cmp329, label %if.then.330, label %if.end.331

if.then.330:                                      ; preds = %if.then.328
  store i32 2063, i32* %level, align 4
  br label %if.end.331

if.end.331:                                       ; preds = %if.then.330, %if.then.328
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331, %land.lhs.true, %for.body.308
  %259 = load i32, i32* %level, align 4
  %cmp333 = icmp ne i32 %259, 0
  br i1 %cmp333, label %if.then.334, label %if.end.349

if.then.334:                                      ; preds = %if.end.332
  %260 = load i32, i32* %uv.addr, align 4
  %shl335 = shl i32 %260, 2
  %shl336 = shl i32 983040, %shl335
  %conv = sext i32 %shl336 to i64
  %261 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, %struct.macroblock* %261, i32 0, i32 13
  %262 = load i64, i64* %cbp_blk, align 8
  %or = or i64 %262, %conv
  store i64 %or, i64* %cbp_blk, align 8
  %263 = load i32, i32* %cr_cbp.addr, align 4
  %call337 = call i32 @imax(i32 1, i32 %263)
  store i32 %call337, i32* %cr_cbp.addr, align 4
  store i32 1, i32* %DCcoded, align 4
  %264 = load i32, i32* %level, align 4
  %265 = load i32, i32* %coeff_ctr, align 4
  %idxprom338 = sext i32 %265 to i64
  %arrayidx339 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom338
  %266 = load i32, i32* %arrayidx339, align 4
  %call340 = call i32 @isignab(i32 %264, i32 %266)
  %267 = load i32, i32* %scan_pos, align 4
  %idxprom341 = sext i32 %267 to i64
  %268 = load i32*, i32** %DCLevel, align 8
  %arrayidx342 = getelementptr inbounds i32, i32* %268, i64 %idxprom341
  store i32 %call340, i32* %arrayidx342, align 4
  %269 = load i32, i32* %run, align 4
  %270 = load i32, i32* %scan_pos, align 4
  %idxprom343 = sext i32 %270 to i64
  %271 = load i32*, i32** %DCRun, align 8
  %arrayidx344 = getelementptr inbounds i32, i32* %271, i64 %idxprom343
  store i32 %269, i32* %arrayidx344, align 4
  %272 = load i32, i32* %scan_pos, align 4
  %inc345 = add nsw i32 %272, 1
  store i32 %inc345, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %273 = load i32, i32* %level, align 4
  %274 = load i32, i32* %coeff_ctr, align 4
  %idxprom346 = sext i32 %274 to i64
  %arrayidx347 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom346
  %275 = load i32, i32* %arrayidx347, align 4
  %call348 = call i32 @isignab(i32 %273, i32 %275)
  store i32 %call348, i32* %ilev, align 4
  br label %if.end.349

if.end.349:                                       ; preds = %if.then.334, %if.end.332
  %276 = load i32, i32* %ilev, align 4
  %277 = load i32, i32* %coeff_ctr, align 4
  %idxprom350 = sext i32 %277 to i64
  %arrayidx351 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom350
  store i32 %276, i32* %arrayidx351, align 4
  br label %for.inc.352

for.inc.352:                                      ; preds = %if.end.349
  %278 = load i32, i32* %coeff_ctr, align 4
  %inc353 = add nsw i32 %278, 1
  store i32 %inc353, i32* %coeff_ctr, align 4
  br label %for.cond.306

for.end.354:                                      ; preds = %for.cond.306
  %279 = load i32, i32* %scan_pos, align 4
  %idxprom355 = sext i32 %279 to i64
  %280 = load i32*, i32** %DCLevel, align 8
  %arrayidx356 = getelementptr inbounds i32, i32* %280, i64 %idxprom355
  store i32 0, i32* %arrayidx356, align 4
  %281 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %282 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %add357 = add nsw i32 %281, %282
  %283 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %add358 = add nsw i32 %add357, %283
  %284 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %add359 = add nsw i32 %add358, %284
  store i32 %add359, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %285 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %286 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %sub360 = sub nsw i32 %285, %286
  %287 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %add361 = add nsw i32 %sub360, %287
  %288 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %sub362 = sub nsw i32 %add361, %288
  store i32 %sub362, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %289 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %290 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %add363 = add nsw i32 %289, %290
  %291 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %sub364 = sub nsw i32 %add363, %291
  %292 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %sub365 = sub nsw i32 %sub364, %292
  store i32 %sub365, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %293 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %294 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %sub366 = sub nsw i32 %293, %294
  %295 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %sub367 = sub nsw i32 %sub366, %295
  %296 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %add368 = add nsw i32 %sub367, %296
  store i32 %add368, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %297 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %298 = load i32, i32* %qp_rem, align 4
  %idxprom369 = sext i32 %298 to i64
  %299 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx370 = getelementptr inbounds i32**, i32*** %299, i64 %idxprom369
  %300 = load i32**, i32*** %arrayidx370, align 8
  %arrayidx371 = getelementptr inbounds i32*, i32** %300, i64 0
  %301 = load i32*, i32** %arrayidx371, align 8
  %arrayidx372 = getelementptr inbounds i32, i32* %301, i64 0
  %302 = load i32, i32* %arrayidx372, align 4
  %mul373 = mul nsw i32 %297, %302
  %303 = load i32, i32* %qp_per, align 4
  %shl374 = shl i32 %mul373, %303
  %shr375 = ashr i32 %shl374, 5
  store i32 %shr375, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %304 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %305 = load i32, i32* %qp_rem, align 4
  %idxprom376 = sext i32 %305 to i64
  %306 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx377 = getelementptr inbounds i32**, i32*** %306, i64 %idxprom376
  %307 = load i32**, i32*** %arrayidx377, align 8
  %arrayidx378 = getelementptr inbounds i32*, i32** %307, i64 0
  %308 = load i32*, i32** %arrayidx378, align 8
  %arrayidx379 = getelementptr inbounds i32, i32* %308, i64 0
  %309 = load i32, i32* %arrayidx379, align 4
  %mul380 = mul nsw i32 %304, %309
  %310 = load i32, i32* %qp_per, align 4
  %shl381 = shl i32 %mul380, %310
  %shr382 = ashr i32 %shl381, 5
  store i32 %shr382, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %311 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %312 = load i32, i32* %qp_rem, align 4
  %idxprom383 = sext i32 %312 to i64
  %313 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx384 = getelementptr inbounds i32**, i32*** %313, i64 %idxprom383
  %314 = load i32**, i32*** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i32*, i32** %314, i64 0
  %315 = load i32*, i32** %arrayidx385, align 8
  %arrayidx386 = getelementptr inbounds i32, i32* %315, i64 0
  %316 = load i32, i32* %arrayidx386, align 4
  %mul387 = mul nsw i32 %311, %316
  %317 = load i32, i32* %qp_per, align 4
  %shl388 = shl i32 %mul387, %317
  %shr389 = ashr i32 %shl388, 5
  store i32 %shr389, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %318 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %319 = load i32, i32* %qp_rem, align 4
  %idxprom390 = sext i32 %319 to i64
  %320 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx391 = getelementptr inbounds i32**, i32*** %320, i64 %idxprom390
  %321 = load i32**, i32*** %arrayidx391, align 8
  %arrayidx392 = getelementptr inbounds i32*, i32** %321, i64 0
  %322 = load i32*, i32** %arrayidx392, align 8
  %arrayidx393 = getelementptr inbounds i32, i32* %322, i64 0
  %323 = load i32, i32* %arrayidx393, align 4
  %mul394 = mul nsw i32 %318, %323
  %324 = load i32, i32* %qp_per, align 4
  %shl395 = shl i32 %mul394, %324
  %shr396 = ashr i32 %shl395, 5
  store i32 %shr396, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %325 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %326 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %326, i32 0, i32 52
  %arrayidx398 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7397, i32 0, i64 0
  %arrayidx399 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx398, i32 0, i64 0
  store i32 %325, i32* %arrayidx399, align 4
  %327 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %328 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7400 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %328, i32 0, i32 52
  %arrayidx401 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7400, i32 0, i64 0
  %arrayidx402 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx401, i32 0, i64 4
  store i32 %327, i32* %arrayidx402, align 4
  %329 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %330 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7403 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %330, i32 0, i32 52
  %arrayidx404 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7403, i32 0, i64 4
  %arrayidx405 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx404, i32 0, i64 0
  store i32 %329, i32* %arrayidx405, align 4
  %331 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  %332 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %332, i32 0, i32 52
  %arrayidx407 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7406, i32 0, i64 4
  %arrayidx408 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx407, i32 0, i64 4
  store i32 %331, i32* %arrayidx408, align 4
  br label %if.end.468

if.else:                                          ; preds = %if.then.243
  %333 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7409 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %333, i32 0, i32 52
  %arrayidx410 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7409, i32 0, i64 0
  %arrayidx411 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx410, i32 0, i64 0
  %334 = load i32, i32* %arrayidx411, align 4
  store i32 %334, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 0), align 4
  %335 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7412 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %335, i32 0, i32 52
  %arrayidx413 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7412, i32 0, i64 0
  %arrayidx414 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx413, i32 0, i64 4
  %336 = load i32, i32* %arrayidx414, align 4
  store i32 %336, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 1), align 4
  %337 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %337, i32 0, i32 52
  %arrayidx416 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7415, i32 0, i64 4
  %arrayidx417 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx416, i32 0, i64 0
  %338 = load i32, i32* %arrayidx417, align 4
  store i32 %338, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 2), align 4
  %339 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7418 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %339, i32 0, i32 52
  %arrayidx419 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7418, i32 0, i64 4
  %arrayidx420 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx419, i32 0, i64 4
  %340 = load i32, i32* %arrayidx420, align 4
  store i32 %340, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 3), align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.421

for.cond.421:                                     ; preds = %for.inc.463, %if.else
  %341 = load i32, i32* %coeff_ctr, align 4
  %cmp422 = icmp slt i32 %341, 4
  br i1 %cmp422, label %for.body.424, label %for.end.465

for.body.424:                                     ; preds = %for.cond.421
  %342 = load i32, i32* %run, align 4
  %inc425 = add nsw i32 %342, 1
  store i32 %inc425, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %343 = load i32, i32* %coeff_ctr, align 4
  %idxprom426 = sext i32 %343 to i64
  %arrayidx427 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom426
  %344 = load i32, i32* %arrayidx427, align 4
  %call428 = call i32 @iabs(i32 %344)
  store i32 %call428, i32* %level, align 4
  %345 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode429 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %345, i32 0, i32 74
  %346 = load i32, i32* %symbol_mode429, align 4
  %cmp430 = icmp eq i32 %346, 0
  br i1 %cmp430, label %land.lhs.true.432, label %if.end.441

land.lhs.true.432:                                ; preds = %for.body.424
  %347 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp433 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %347, i32 0, i32 9
  %348 = load i32, i32* %qp433, align 4
  %cmp434 = icmp slt i32 %348, 4
  br i1 %cmp434, label %if.then.436, label %if.end.441

if.then.436:                                      ; preds = %land.lhs.true.432
  %349 = load i32, i32* %level, align 4
  %cmp437 = icmp sgt i32 %349, 2063
  br i1 %cmp437, label %if.then.439, label %if.end.440

if.then.439:                                      ; preds = %if.then.436
  store i32 2063, i32* %level, align 4
  br label %if.end.440

if.end.440:                                       ; preds = %if.then.439, %if.then.436
  br label %if.end.441

if.end.441:                                       ; preds = %if.end.440, %land.lhs.true.432, %for.body.424
  %350 = load i32, i32* %level, align 4
  %cmp442 = icmp ne i32 %350, 0
  br i1 %cmp442, label %if.then.444, label %if.end.462

if.then.444:                                      ; preds = %if.end.441
  %351 = load i32, i32* %uv.addr, align 4
  %shl445 = shl i32 %351, 2
  %shl446 = shl i32 983040, %shl445
  %conv447 = sext i32 %shl446 to i64
  %352 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk448 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %352, i32 0, i32 13
  %353 = load i64, i64* %cbp_blk448, align 8
  %or449 = or i64 %353, %conv447
  store i64 %or449, i64* %cbp_blk448, align 8
  %354 = load i32, i32* %cr_cbp.addr, align 4
  %call450 = call i32 @imax(i32 1, i32 %354)
  store i32 %call450, i32* %cr_cbp.addr, align 4
  store i32 1, i32* %DCcoded, align 4
  %355 = load i32, i32* %level, align 4
  %356 = load i32, i32* %coeff_ctr, align 4
  %idxprom451 = sext i32 %356 to i64
  %arrayidx452 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom451
  %357 = load i32, i32* %arrayidx452, align 4
  %call453 = call i32 @isignab(i32 %355, i32 %357)
  %358 = load i32, i32* %scan_pos, align 4
  %idxprom454 = sext i32 %358 to i64
  %359 = load i32*, i32** %DCLevel, align 8
  %arrayidx455 = getelementptr inbounds i32, i32* %359, i64 %idxprom454
  store i32 %call453, i32* %arrayidx455, align 4
  %360 = load i32, i32* %run, align 4
  %361 = load i32, i32* %scan_pos, align 4
  %idxprom456 = sext i32 %361 to i64
  %362 = load i32*, i32** %DCRun, align 8
  %arrayidx457 = getelementptr inbounds i32, i32* %362, i64 %idxprom456
  store i32 %360, i32* %arrayidx457, align 4
  %363 = load i32, i32* %scan_pos, align 4
  %inc458 = add nsw i32 %363, 1
  store i32 %inc458, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %364 = load i32, i32* %level, align 4
  %365 = load i32, i32* %coeff_ctr, align 4
  %idxprom459 = sext i32 %365 to i64
  %arrayidx460 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m1, i32 0, i64 %idxprom459
  %366 = load i32, i32* %arrayidx460, align 4
  %call461 = call i32 @isignab(i32 %364, i32 %366)
  store i32 %call461, i32* %ilev, align 4
  br label %if.end.462

if.end.462:                                       ; preds = %if.then.444, %if.end.441
  br label %for.inc.463

for.inc.463:                                      ; preds = %if.end.462
  %367 = load i32, i32* %coeff_ctr, align 4
  %inc464 = add nsw i32 %367, 1
  store i32 %inc464, i32* %coeff_ctr, align 4
  br label %for.cond.421

for.end.465:                                      ; preds = %for.cond.421
  %368 = load i32, i32* %scan_pos, align 4
  %idxprom466 = sext i32 %368 to i64
  %369 = load i32*, i32** %DCLevel, align 8
  %arrayidx467 = getelementptr inbounds i32, i32* %369, i64 %idxprom466
  store i32 0, i32* %arrayidx467, align 4
  br label %if.end.468

if.end.468:                                       ; preds = %for.end.465, %for.end.354
  br label %if.end.1256

if.else.469:                                      ; preds = %if.end.241
  %370 = load i32, i32* %yuv, align 4
  %cmp470 = icmp eq i32 %370, 2
  br i1 %cmp470, label %if.then.472, label %if.else.830

if.then.472:                                      ; preds = %if.else.469
  store i32 0, i32* %j, align 4
  br label %for.cond.473

for.cond.473:                                     ; preds = %for.inc.497, %if.then.472
  %371 = load i32, i32* %j, align 4
  %372 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y474 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %372, i32 0, i32 163
  %373 = load i32, i32* %mb_cr_size_y474, align 4
  %cmp475 = icmp slt i32 %371, %373
  br i1 %cmp475, label %for.body.477, label %for.end.499

for.body.477:                                     ; preds = %for.cond.473
  store i32 0, i32* %i, align 4
  br label %for.cond.478

for.cond.478:                                     ; preds = %for.inc.494, %for.body.477
  %374 = load i32, i32* %i, align 4
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x479 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 162
  %376 = load i32, i32* %mb_cr_size_x479, align 4
  %cmp480 = icmp slt i32 %374, %376
  br i1 %cmp480, label %for.body.482, label %for.end.496

for.body.482:                                     ; preds = %for.cond.478
  %377 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %377 to i64
  %378 = load i32, i32* %j, align 4
  %idxprom484 = sext i32 %378 to i64
  %379 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7485 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %379, i32 0, i32 52
  %arrayidx486 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7485, i32 0, i64 %idxprom484
  %arrayidx487 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx486, i32 0, i64 %idxprom483
  %380 = load i32, i32* %arrayidx487, align 4
  %381 = load i32, i32* %j, align 4
  %shr488 = ashr i32 %381, 2
  %idxprom489 = sext i32 %shr488 to i64
  %382 = load i32, i32* %i, align 4
  %shr490 = ashr i32 %382, 2
  %idxprom491 = sext i32 %shr490 to i64
  %arrayidx492 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 %idxprom491
  %arrayidx493 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx492, i32 0, i64 %idxprom489
  store i32 %380, i32* %arrayidx493, align 4
  br label %for.inc.494

for.inc.494:                                      ; preds = %for.body.482
  %383 = load i32, i32* %i, align 4
  %add495 = add nsw i32 %383, 4
  store i32 %add495, i32* %i, align 4
  br label %for.cond.478

for.end.496:                                      ; preds = %for.cond.478
  br label %for.inc.497

for.inc.497:                                      ; preds = %for.end.496
  %384 = load i32, i32* %j, align 4
  %add498 = add nsw i32 %384, 4
  store i32 %add498, i32* %j, align 4
  br label %for.cond.473

for.end.499:                                      ; preds = %for.cond.473
  %385 = load i32, i32* %lossless_qpprime, align 4
  %tobool500 = icmp ne i32 %385, 0
  br i1 %tobool500, label %if.end.561, label %if.then.501

if.then.501:                                      ; preds = %for.end.499
  %386 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 0), align 4
  %387 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 0), align 4
  %add502 = add nsw i32 %386, %387
  store i32 %add502, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 0), align 4
  %388 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 1), align 4
  %389 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 1), align 4
  %add503 = add nsw i32 %388, %389
  store i32 %add503, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 1), align 4
  %390 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 2), align 4
  %391 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 2), align 4
  %add504 = add nsw i32 %390, %391
  store i32 %add504, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 2), align 4
  %392 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 3), align 4
  %393 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 3), align 4
  %add505 = add nsw i32 %392, %393
  store i32 %add505, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 3), align 4
  %394 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 0), align 4
  %395 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 0), align 4
  %sub506 = sub nsw i32 %394, %395
  store i32 %sub506, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 0), align 4
  %396 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 1), align 4
  %397 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 1), align 4
  %sub507 = sub nsw i32 %396, %397
  store i32 %sub507, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 1), align 4
  %398 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 2), align 4
  %399 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 2), align 4
  %sub508 = sub nsw i32 %398, %399
  store i32 %sub508, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 2), align 4
  %400 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 3), align 4
  %401 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 3), align 4
  %sub509 = sub nsw i32 %400, %401
  store i32 %sub509, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 3), align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.510

for.cond.510:                                     ; preds = %for.inc.558, %if.then.501
  %402 = load i32, i32* %i, align 4
  %cmp511 = icmp slt i32 %402, 2
  br i1 %cmp511, label %for.body.513, label %for.end.560

for.body.513:                                     ; preds = %for.cond.510
  %403 = load i32, i32* %i, align 4
  %idxprom514 = sext i32 %403 to i64
  %arrayidx515 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom514
  %arrayidx516 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx515, i32 0, i64 0
  %404 = load i32, i32* %arrayidx516, align 4
  %405 = load i32, i32* %i, align 4
  %idxprom517 = sext i32 %405 to i64
  %arrayidx518 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom517
  %arrayidx519 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx518, i32 0, i64 3
  %406 = load i32, i32* %arrayidx519, align 4
  %add520 = add nsw i32 %404, %406
  store i32 %add520, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %407 = load i32, i32* %i, align 4
  %idxprom521 = sext i32 %407 to i64
  %arrayidx522 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom521
  %arrayidx523 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx522, i32 0, i64 1
  %408 = load i32, i32* %arrayidx523, align 4
  %409 = load i32, i32* %i, align 4
  %idxprom524 = sext i32 %409 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom524
  %arrayidx526 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i32 0, i64 2
  %410 = load i32, i32* %arrayidx526, align 4
  %add527 = add nsw i32 %408, %410
  store i32 %add527, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %411 = load i32, i32* %i, align 4
  %idxprom528 = sext i32 %411 to i64
  %arrayidx529 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom528
  %arrayidx530 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx529, i32 0, i64 1
  %412 = load i32, i32* %arrayidx530, align 4
  %413 = load i32, i32* %i, align 4
  %idxprom531 = sext i32 %413 to i64
  %arrayidx532 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom531
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx532, i32 0, i64 2
  %414 = load i32, i32* %arrayidx533, align 4
  %sub534 = sub nsw i32 %412, %414
  store i32 %sub534, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %415 = load i32, i32* %i, align 4
  %idxprom535 = sext i32 %415 to i64
  %arrayidx536 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom535
  %arrayidx537 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx536, i32 0, i64 0
  %416 = load i32, i32* %arrayidx537, align 4
  %417 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %417 to i64
  %arrayidx539 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom538
  %arrayidx540 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx539, i32 0, i64 3
  %418 = load i32, i32* %arrayidx540, align 4
  %sub541 = sub nsw i32 %416, %418
  store i32 %sub541, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %419 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %420 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %add542 = add nsw i32 %419, %420
  %421 = load i32, i32* %i, align 4
  %idxprom543 = sext i32 %421 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom543
  %arrayidx545 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i32 0, i64 0
  store i32 %add542, i32* %arrayidx545, align 4
  %422 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %423 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %sub546 = sub nsw i32 %422, %423
  %424 = load i32, i32* %i, align 4
  %idxprom547 = sext i32 %424 to i64
  %arrayidx548 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom547
  %arrayidx549 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx548, i32 0, i64 2
  store i32 %sub546, i32* %arrayidx549, align 4
  %425 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %426 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add550 = add nsw i32 %425, %426
  %427 = load i32, i32* %i, align 4
  %idxprom551 = sext i32 %427 to i64
  %arrayidx552 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom551
  %arrayidx553 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx552, i32 0, i64 1
  store i32 %add550, i32* %arrayidx553, align 4
  %428 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %429 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %sub554 = sub nsw i32 %428, %429
  %430 = load i32, i32* %i, align 4
  %idxprom555 = sext i32 %430 to i64
  %arrayidx556 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom555
  %arrayidx557 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx556, i32 0, i64 3
  store i32 %sub554, i32* %arrayidx557, align 4
  br label %for.inc.558

for.inc.558:                                      ; preds = %for.body.513
  %431 = load i32, i32* %i, align 4
  %inc559 = add nsw i32 %431, 1
  store i32 %inc559, i32* %i, align 4
  br label %for.cond.510

for.end.560:                                      ; preds = %for.cond.510
  br label %if.end.561

if.end.561:                                       ; preds = %for.end.560, %for.end.499
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.562

for.cond.562:                                     ; preds = %for.inc.642, %if.end.561
  %432 = load i32, i32* %coeff_ctr, align 4
  %cmp563 = icmp slt i32 %432, 8
  br i1 %cmp563, label %for.body.565, label %for.end.644

for.body.565:                                     ; preds = %for.cond.562
  %433 = load i32, i32* %coeff_ctr, align 4
  %idxprom566 = sext i32 %433 to i64
  %arrayidx567 = getelementptr inbounds [8 x [2 x i8]], [8 x [2 x i8]]* @SCAN_YUV422, i32 0, i64 %idxprom566
  %arrayidx568 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx567, i32 0, i64 0
  %434 = load i8, i8* %arrayidx568, align 1
  %conv569 = zext i8 %434 to i32
  store i32 %conv569, i32* %i, align 4
  %435 = load i32, i32* %coeff_ctr, align 4
  %idxprom570 = sext i32 %435 to i64
  %arrayidx571 = getelementptr inbounds [8 x [2 x i8]], [8 x [2 x i8]]* @SCAN_YUV422, i32 0, i64 %idxprom570
  %arrayidx572 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx571, i32 0, i64 1
  %436 = load i8, i8* %arrayidx572, align 1
  %conv573 = zext i8 %436 to i32
  store i32 %conv573, i32* %j, align 4
  %437 = load i32, i32* %run, align 4
  %inc574 = add nsw i32 %437, 1
  store i32 %inc574, i32* %run, align 4
  %438 = load i32, i32* %lossless_qpprime, align 4
  %tobool575 = icmp ne i32 %438, 0
  br i1 %tobool575, label %if.then.576, label %if.else.590

if.then.576:                                      ; preds = %for.body.565
  %439 = load i32, i32* %j, align 4
  %idxprom577 = sext i32 %439 to i64
  %440 = load i32, i32* %i, align 4
  %idxprom578 = sext i32 %440 to i64
  %arrayidx579 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 %idxprom578
  %arrayidx580 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx579, i32 0, i64 %idxprom577
  %441 = load i32, i32* %arrayidx580, align 4
  %call581 = call i32 @iabs(i32 %441)
  store i32 %call581, i32* %level, align 4
  %442 = load i32, i32* %j, align 4
  %idxprom582 = sext i32 %442 to i64
  %443 = load i32, i32* %i, align 4
  %idxprom583 = sext i32 %443 to i64
  %arrayidx584 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 %idxprom583
  %arrayidx585 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx584, i32 0, i64 %idxprom582
  %444 = load i32, i32* %arrayidx585, align 4
  %445 = load i32, i32* %j, align 4
  %idxprom586 = sext i32 %445 to i64
  %446 = load i32, i32* %i, align 4
  %idxprom587 = sext i32 %446 to i64
  %arrayidx588 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom587
  %arrayidx589 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx588, i32 0, i64 %idxprom586
  store i32 %444, i32* %arrayidx589, align 4
  br label %if.end.609

if.else.590:                                      ; preds = %for.body.565
  %447 = load i32, i32* %j, align 4
  %idxprom591 = sext i32 %447 to i64
  %448 = load i32, i32* %i, align 4
  %idxprom592 = sext i32 %448 to i64
  %arrayidx593 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom592
  %arrayidx594 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx593, i32 0, i64 %idxprom591
  %449 = load i32, i32* %arrayidx594, align 4
  %call595 = call i32 @iabs(i32 %449)
  %450 = load i32, i32* %qp_rem_dc, align 4
  %idxprom596 = sext i32 %450 to i64
  %451 = load i32***, i32**** %levelscale, align 8
  %arrayidx597 = getelementptr inbounds i32**, i32*** %451, i64 %idxprom596
  %452 = load i32**, i32*** %arrayidx597, align 8
  %arrayidx598 = getelementptr inbounds i32*, i32** %452, i64 0
  %453 = load i32*, i32** %arrayidx598, align 8
  %arrayidx599 = getelementptr inbounds i32, i32* %453, i64 0
  %454 = load i32, i32* %arrayidx599, align 4
  %mul600 = mul nsw i32 %call595, %454
  %455 = load i32, i32* %qp_per_dc, align 4
  %idxprom601 = sext i32 %455 to i64
  %456 = load i32***, i32**** %leveloffset, align 8
  %arrayidx602 = getelementptr inbounds i32**, i32*** %456, i64 %idxprom601
  %457 = load i32**, i32*** %arrayidx602, align 8
  %arrayidx603 = getelementptr inbounds i32*, i32** %457, i64 0
  %458 = load i32*, i32** %arrayidx603, align 8
  %arrayidx604 = getelementptr inbounds i32, i32* %458, i64 0
  %459 = load i32, i32* %arrayidx604, align 4
  %mul605 = mul nsw i32 %459, 2
  %add606 = add nsw i32 %mul600, %mul605
  %460 = load i32, i32* %q_bits_422, align 4
  %add607 = add nsw i32 %460, 1
  %shr608 = ashr i32 %add606, %add607
  store i32 %shr608, i32* %level, align 4
  br label %if.end.609

if.end.609:                                       ; preds = %if.else.590, %if.then.576
  %461 = load i32, i32* %level, align 4
  %cmp610 = icmp ne i32 %461, 0
  br i1 %cmp610, label %if.then.612, label %if.end.629

if.then.612:                                      ; preds = %if.end.609
  %462 = load i32, i32* %uv.addr, align 4
  %shl613 = shl i32 %462, 3
  %shl614 = shl i32 16711680, %shl613
  %conv615 = sext i32 %shl614 to i64
  %463 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk616 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %463, i32 0, i32 13
  %464 = load i64, i64* %cbp_blk616, align 8
  %or617 = or i64 %464, %conv615
  store i64 %or617, i64* %cbp_blk616, align 8
  %465 = load i32, i32* %cr_cbp.addr, align 4
  %call618 = call i32 @imax(i32 1, i32 %465)
  store i32 %call618, i32* %cr_cbp.addr, align 4
  store i32 1, i32* %DCcoded, align 4
  %466 = load i32, i32* %level, align 4
  %467 = load i32, i32* %j, align 4
  %idxprom619 = sext i32 %467 to i64
  %468 = load i32, i32* %i, align 4
  %idxprom620 = sext i32 %468 to i64
  %arrayidx621 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom620
  %arrayidx622 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx621, i32 0, i64 %idxprom619
  %469 = load i32, i32* %arrayidx622, align 4
  %call623 = call i32 @isignab(i32 %466, i32 %469)
  %470 = load i32, i32* %scan_pos, align 4
  %idxprom624 = sext i32 %470 to i64
  %471 = load i32*, i32** %DCLevel, align 8
  %arrayidx625 = getelementptr inbounds i32, i32* %471, i64 %idxprom624
  store i32 %call623, i32* %arrayidx625, align 4
  %472 = load i32, i32* %run, align 4
  %473 = load i32, i32* %scan_pos, align 4
  %idxprom626 = sext i32 %473 to i64
  %474 = load i32*, i32** %DCRun, align 8
  %arrayidx627 = getelementptr inbounds i32, i32* %474, i64 %idxprom626
  store i32 %472, i32* %arrayidx627, align 4
  %475 = load i32, i32* %scan_pos, align 4
  %inc628 = add nsw i32 %475, 1
  store i32 %inc628, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.629

if.end.629:                                       ; preds = %if.then.612, %if.end.609
  %476 = load i32, i32* %lossless_qpprime, align 4
  %tobool630 = icmp ne i32 %476, 0
  br i1 %tobool630, label %if.end.641, label %if.then.631

if.then.631:                                      ; preds = %if.end.629
  %477 = load i32, i32* %level, align 4
  %478 = load i32, i32* %j, align 4
  %idxprom632 = sext i32 %478 to i64
  %479 = load i32, i32* %i, align 4
  %idxprom633 = sext i32 %479 to i64
  %arrayidx634 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom633
  %arrayidx635 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx634, i32 0, i64 %idxprom632
  %480 = load i32, i32* %arrayidx635, align 4
  %call636 = call i32 @isignab(i32 %477, i32 %480)
  %481 = load i32, i32* %j, align 4
  %idxprom637 = sext i32 %481 to i64
  %482 = load i32, i32* %i, align 4
  %idxprom638 = sext i32 %482 to i64
  %arrayidx639 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 %idxprom638
  %arrayidx640 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx639, i32 0, i64 %idxprom637
  store i32 %call636, i32* %arrayidx640, align 4
  br label %if.end.641

if.end.641:                                       ; preds = %if.then.631, %if.end.629
  br label %for.inc.642

for.inc.642:                                      ; preds = %if.end.641
  %483 = load i32, i32* %coeff_ctr, align 4
  %inc643 = add nsw i32 %483, 1
  store i32 %inc643, i32* %coeff_ctr, align 4
  br label %for.cond.562

for.end.644:                                      ; preds = %for.cond.562
  %484 = load i32, i32* %scan_pos, align 4
  %idxprom645 = sext i32 %484 to i64
  %485 = load i32*, i32** %DCLevel, align 8
  %arrayidx646 = getelementptr inbounds i32, i32* %485, i64 %idxprom645
  store i32 0, i32* %arrayidx646, align 4
  %486 = load i32, i32* %lossless_qpprime, align 4
  %tobool647 = icmp ne i32 %486, 0
  br i1 %tobool647, label %if.end.829, label %if.then.648

if.then.648:                                      ; preds = %for.end.644
  %487 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 0), align 4
  %488 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 0), align 4
  %add649 = add nsw i32 %487, %488
  store i32 %add649, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 0), align 4
  %489 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 1), align 4
  %490 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 1), align 4
  %add650 = add nsw i32 %489, %490
  store i32 %add650, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 1), align 4
  %491 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 2), align 4
  %492 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 2), align 4
  %add651 = add nsw i32 %491, %492
  store i32 %add651, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 2), align 4
  %493 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 3), align 4
  %494 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 3), align 4
  %add652 = add nsw i32 %493, %494
  store i32 %add652, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0, i64 3), align 4
  %495 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 0), align 4
  %496 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 0), align 4
  %sub653 = sub nsw i32 %495, %496
  store i32 %sub653, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 0), align 4
  %497 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 1), align 4
  %498 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 1), align 4
  %sub654 = sub nsw i32 %497, %498
  store i32 %sub654, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 1), align 4
  %499 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 2), align 4
  %500 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 2), align 4
  %sub655 = sub nsw i32 %499, %500
  store i32 %sub655, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 2), align 4
  %501 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 0, i64 3), align 4
  %502 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m3, i32 0, i64 1, i64 3), align 4
  %sub656 = sub nsw i32 %501, %502
  store i32 %sub656, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1, i64 3), align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.657

for.cond.657:                                     ; preds = %for.inc.826, %if.then.648
  %503 = load i32, i32* %i, align 4
  %cmp658 = icmp slt i32 %503, 2
  br i1 %cmp658, label %for.body.660, label %for.end.828

for.body.660:                                     ; preds = %for.cond.657
  %504 = load i32, i32* %i, align 4
  %idxprom661 = sext i32 %504 to i64
  %arrayidx662 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom661
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx662, i32 0, i64 0
  %505 = load i32, i32* %arrayidx663, align 4
  %506 = load i32, i32* %i, align 4
  %idxprom664 = sext i32 %506 to i64
  %arrayidx665 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom664
  %arrayidx666 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx665, i32 0, i64 2
  %507 = load i32, i32* %arrayidx666, align 4
  %add667 = add nsw i32 %505, %507
  store i32 %add667, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %508 = load i32, i32* %i, align 4
  %idxprom668 = sext i32 %508 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom668
  %arrayidx670 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i32 0, i64 0
  %509 = load i32, i32* %arrayidx670, align 4
  %510 = load i32, i32* %i, align 4
  %idxprom671 = sext i32 %510 to i64
  %arrayidx672 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom671
  %arrayidx673 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx672, i32 0, i64 2
  %511 = load i32, i32* %arrayidx673, align 4
  %sub674 = sub nsw i32 %509, %511
  store i32 %sub674, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %512 = load i32, i32* %i, align 4
  %idxprom675 = sext i32 %512 to i64
  %arrayidx676 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom675
  %arrayidx677 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx676, i32 0, i64 1
  %513 = load i32, i32* %arrayidx677, align 4
  %514 = load i32, i32* %i, align 4
  %idxprom678 = sext i32 %514 to i64
  %arrayidx679 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom678
  %arrayidx680 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx679, i32 0, i64 3
  %515 = load i32, i32* %arrayidx680, align 4
  %sub681 = sub nsw i32 %513, %515
  store i32 %sub681, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %516 = load i32, i32* %i, align 4
  %idxprom682 = sext i32 %516 to i64
  %arrayidx683 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom682
  %arrayidx684 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx683, i32 0, i64 1
  %517 = load i32, i32* %arrayidx684, align 4
  %518 = load i32, i32* %i, align 4
  %idxprom685 = sext i32 %518 to i64
  %arrayidx686 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom685
  %arrayidx687 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx686, i32 0, i64 3
  %519 = load i32, i32* %arrayidx687, align 4
  %add688 = add nsw i32 %517, %519
  store i32 %add688, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %520 = load i32, i32* %qp_per_dc, align 4
  %cmp689 = icmp slt i32 %520, 4
  br i1 %cmp689, label %if.then.691, label %if.else.764

if.then.691:                                      ; preds = %for.body.660
  %521 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %522 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add692 = add nsw i32 %521, %522
  %523 = load i32, i32* %qp_rem_dc, align 4
  %idxprom693 = sext i32 %523 to i64
  %524 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx694 = getelementptr inbounds i32**, i32*** %524, i64 %idxprom693
  %525 = load i32**, i32*** %arrayidx694, align 8
  %arrayidx695 = getelementptr inbounds i32*, i32** %525, i64 0
  %526 = load i32*, i32** %arrayidx695, align 8
  %arrayidx696 = getelementptr inbounds i32, i32* %526, i64 0
  %527 = load i32, i32* %arrayidx696, align 4
  %mul697 = mul nsw i32 %add692, %527
  %528 = load i32, i32* %qp_per_dc, align 4
  %sub698 = sub nsw i32 3, %528
  %shl699 = shl i32 1, %sub698
  %add700 = add nsw i32 %mul697, %shl699
  %529 = load i32, i32* %qp_per_dc, align 4
  %sub701 = sub nsw i32 4, %529
  %shr702 = ashr i32 %add700, %sub701
  %add703 = add nsw i32 %shr702, 2
  %shr704 = ashr i32 %add703, 2
  %530 = load i32, i32* %i, align 4
  %mul705 = mul nsw i32 %530, 4
  %idxprom706 = sext i32 %mul705 to i64
  %531 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7707 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %531, i32 0, i32 52
  %arrayidx708 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7707, i32 0, i64 0
  %arrayidx709 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx708, i32 0, i64 %idxprom706
  store i32 %shr704, i32* %arrayidx709, align 4
  %532 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %533 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add710 = add nsw i32 %532, %533
  %534 = load i32, i32* %qp_rem_dc, align 4
  %idxprom711 = sext i32 %534 to i64
  %535 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx712 = getelementptr inbounds i32**, i32*** %535, i64 %idxprom711
  %536 = load i32**, i32*** %arrayidx712, align 8
  %arrayidx713 = getelementptr inbounds i32*, i32** %536, i64 0
  %537 = load i32*, i32** %arrayidx713, align 8
  %arrayidx714 = getelementptr inbounds i32, i32* %537, i64 0
  %538 = load i32, i32* %arrayidx714, align 4
  %mul715 = mul nsw i32 %add710, %538
  %539 = load i32, i32* %qp_per_dc, align 4
  %sub716 = sub nsw i32 3, %539
  %shl717 = shl i32 1, %sub716
  %add718 = add nsw i32 %mul715, %shl717
  %540 = load i32, i32* %qp_per_dc, align 4
  %sub719 = sub nsw i32 4, %540
  %shr720 = ashr i32 %add718, %sub719
  %add721 = add nsw i32 %shr720, 2
  %shr722 = ashr i32 %add721, 2
  %541 = load i32, i32* %i, align 4
  %mul723 = mul nsw i32 %541, 4
  %idxprom724 = sext i32 %mul723 to i64
  %542 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7725 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %542, i32 0, i32 52
  %arrayidx726 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7725, i32 0, i64 4
  %arrayidx727 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx726, i32 0, i64 %idxprom724
  store i32 %shr722, i32* %arrayidx727, align 4
  %543 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %544 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub728 = sub nsw i32 %543, %544
  %545 = load i32, i32* %qp_rem_dc, align 4
  %idxprom729 = sext i32 %545 to i64
  %546 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx730 = getelementptr inbounds i32**, i32*** %546, i64 %idxprom729
  %547 = load i32**, i32*** %arrayidx730, align 8
  %arrayidx731 = getelementptr inbounds i32*, i32** %547, i64 0
  %548 = load i32*, i32** %arrayidx731, align 8
  %arrayidx732 = getelementptr inbounds i32, i32* %548, i64 0
  %549 = load i32, i32* %arrayidx732, align 4
  %mul733 = mul nsw i32 %sub728, %549
  %550 = load i32, i32* %qp_per_dc, align 4
  %sub734 = sub nsw i32 3, %550
  %shl735 = shl i32 1, %sub734
  %add736 = add nsw i32 %mul733, %shl735
  %551 = load i32, i32* %qp_per_dc, align 4
  %sub737 = sub nsw i32 4, %551
  %shr738 = ashr i32 %add736, %sub737
  %add739 = add nsw i32 %shr738, 2
  %shr740 = ashr i32 %add739, 2
  %552 = load i32, i32* %i, align 4
  %mul741 = mul nsw i32 %552, 4
  %idxprom742 = sext i32 %mul741 to i64
  %553 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %553, i32 0, i32 52
  %arrayidx744 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7743, i32 0, i64 8
  %arrayidx745 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx744, i32 0, i64 %idxprom742
  store i32 %shr740, i32* %arrayidx745, align 4
  %554 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %555 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub746 = sub nsw i32 %554, %555
  %556 = load i32, i32* %qp_rem_dc, align 4
  %idxprom747 = sext i32 %556 to i64
  %557 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx748 = getelementptr inbounds i32**, i32*** %557, i64 %idxprom747
  %558 = load i32**, i32*** %arrayidx748, align 8
  %arrayidx749 = getelementptr inbounds i32*, i32** %558, i64 0
  %559 = load i32*, i32** %arrayidx749, align 8
  %arrayidx750 = getelementptr inbounds i32, i32* %559, i64 0
  %560 = load i32, i32* %arrayidx750, align 4
  %mul751 = mul nsw i32 %sub746, %560
  %561 = load i32, i32* %qp_per_dc, align 4
  %sub752 = sub nsw i32 3, %561
  %shl753 = shl i32 1, %sub752
  %add754 = add nsw i32 %mul751, %shl753
  %562 = load i32, i32* %qp_per_dc, align 4
  %sub755 = sub nsw i32 4, %562
  %shr756 = ashr i32 %add754, %sub755
  %add757 = add nsw i32 %shr756, 2
  %shr758 = ashr i32 %add757, 2
  %563 = load i32, i32* %i, align 4
  %mul759 = mul nsw i32 %563, 4
  %idxprom760 = sext i32 %mul759 to i64
  %564 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7761 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %564, i32 0, i32 52
  %arrayidx762 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7761, i32 0, i64 12
  %arrayidx763 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx762, i32 0, i64 %idxprom760
  store i32 %shr758, i32* %arrayidx763, align 4
  br label %if.end.825

if.else.764:                                      ; preds = %for.body.660
  %565 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %566 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add765 = add nsw i32 %565, %566
  %567 = load i32, i32* %qp_rem_dc, align 4
  %idxprom766 = sext i32 %567 to i64
  %568 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx767 = getelementptr inbounds i32**, i32*** %568, i64 %idxprom766
  %569 = load i32**, i32*** %arrayidx767, align 8
  %arrayidx768 = getelementptr inbounds i32*, i32** %569, i64 0
  %570 = load i32*, i32** %arrayidx768, align 8
  %arrayidx769 = getelementptr inbounds i32, i32* %570, i64 0
  %571 = load i32, i32* %arrayidx769, align 4
  %mul770 = mul nsw i32 %add765, %571
  %572 = load i32, i32* %qp_per_dc, align 4
  %sub771 = sub nsw i32 %572, 4
  %shl772 = shl i32 %mul770, %sub771
  %add773 = add nsw i32 %shl772, 2
  %shr774 = ashr i32 %add773, 2
  %573 = load i32, i32* %i, align 4
  %mul775 = mul nsw i32 %573, 4
  %idxprom776 = sext i32 %mul775 to i64
  %574 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7777 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %574, i32 0, i32 52
  %arrayidx778 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7777, i32 0, i64 0
  %arrayidx779 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx778, i32 0, i64 %idxprom776
  store i32 %shr774, i32* %arrayidx779, align 4
  %575 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %576 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add780 = add nsw i32 %575, %576
  %577 = load i32, i32* %qp_rem_dc, align 4
  %idxprom781 = sext i32 %577 to i64
  %578 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx782 = getelementptr inbounds i32**, i32*** %578, i64 %idxprom781
  %579 = load i32**, i32*** %arrayidx782, align 8
  %arrayidx783 = getelementptr inbounds i32*, i32** %579, i64 0
  %580 = load i32*, i32** %arrayidx783, align 8
  %arrayidx784 = getelementptr inbounds i32, i32* %580, i64 0
  %581 = load i32, i32* %arrayidx784, align 4
  %mul785 = mul nsw i32 %add780, %581
  %582 = load i32, i32* %qp_per_dc, align 4
  %sub786 = sub nsw i32 %582, 4
  %shl787 = shl i32 %mul785, %sub786
  %add788 = add nsw i32 %shl787, 2
  %shr789 = ashr i32 %add788, 2
  %583 = load i32, i32* %i, align 4
  %mul790 = mul nsw i32 %583, 4
  %idxprom791 = sext i32 %mul790 to i64
  %584 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7792 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %584, i32 0, i32 52
  %arrayidx793 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7792, i32 0, i64 4
  %arrayidx794 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx793, i32 0, i64 %idxprom791
  store i32 %shr789, i32* %arrayidx794, align 4
  %585 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %586 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub795 = sub nsw i32 %585, %586
  %587 = load i32, i32* %qp_rem_dc, align 4
  %idxprom796 = sext i32 %587 to i64
  %588 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx797 = getelementptr inbounds i32**, i32*** %588, i64 %idxprom796
  %589 = load i32**, i32*** %arrayidx797, align 8
  %arrayidx798 = getelementptr inbounds i32*, i32** %589, i64 0
  %590 = load i32*, i32** %arrayidx798, align 8
  %arrayidx799 = getelementptr inbounds i32, i32* %590, i64 0
  %591 = load i32, i32* %arrayidx799, align 4
  %mul800 = mul nsw i32 %sub795, %591
  %592 = load i32, i32* %qp_per_dc, align 4
  %sub801 = sub nsw i32 %592, 4
  %shl802 = shl i32 %mul800, %sub801
  %add803 = add nsw i32 %shl802, 2
  %shr804 = ashr i32 %add803, 2
  %593 = load i32, i32* %i, align 4
  %mul805 = mul nsw i32 %593, 4
  %idxprom806 = sext i32 %mul805 to i64
  %594 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7807 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %594, i32 0, i32 52
  %arrayidx808 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7807, i32 0, i64 8
  %arrayidx809 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx808, i32 0, i64 %idxprom806
  store i32 %shr804, i32* %arrayidx809, align 4
  %595 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %596 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub810 = sub nsw i32 %595, %596
  %597 = load i32, i32* %qp_rem_dc, align 4
  %idxprom811 = sext i32 %597 to i64
  %598 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx812 = getelementptr inbounds i32**, i32*** %598, i64 %idxprom811
  %599 = load i32**, i32*** %arrayidx812, align 8
  %arrayidx813 = getelementptr inbounds i32*, i32** %599, i64 0
  %600 = load i32*, i32** %arrayidx813, align 8
  %arrayidx814 = getelementptr inbounds i32, i32* %600, i64 0
  %601 = load i32, i32* %arrayidx814, align 4
  %mul815 = mul nsw i32 %sub810, %601
  %602 = load i32, i32* %qp_per_dc, align 4
  %sub816 = sub nsw i32 %602, 4
  %shl817 = shl i32 %mul815, %sub816
  %add818 = add nsw i32 %shl817, 2
  %shr819 = ashr i32 %add818, 2
  %603 = load i32, i32* %i, align 4
  %mul820 = mul nsw i32 %603, 4
  %idxprom821 = sext i32 %mul820 to i64
  %604 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7822 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %604, i32 0, i32 52
  %arrayidx823 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7822, i32 0, i64 12
  %arrayidx824 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx823, i32 0, i64 %idxprom821
  store i32 %shr819, i32* %arrayidx824, align 4
  br label %if.end.825

if.end.825:                                       ; preds = %if.else.764, %if.then.691
  br label %for.inc.826

for.inc.826:                                      ; preds = %if.end.825
  %605 = load i32, i32* %i, align 4
  %inc827 = add nsw i32 %605, 1
  store i32 %inc827, i32* %i, align 4
  br label %for.cond.657

for.end.828:                                      ; preds = %for.cond.657
  br label %if.end.829

if.end.829:                                       ; preds = %for.end.828, %for.end.644
  br label %if.end.1255

if.else.830:                                      ; preds = %if.else.469
  %606 = load i32, i32* %yuv, align 4
  %cmp831 = icmp eq i32 %606, 3
  br i1 %cmp831, label %if.then.833, label %if.end.1254

if.then.833:                                      ; preds = %if.else.830
  store i32 0, i32* %j, align 4
  br label %for.cond.834

for.cond.834:                                     ; preds = %for.inc.858, %if.then.833
  %607 = load i32, i32* %j, align 4
  %608 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y835 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %608, i32 0, i32 163
  %609 = load i32, i32* %mb_cr_size_y835, align 4
  %cmp836 = icmp slt i32 %607, %609
  br i1 %cmp836, label %for.body.838, label %for.end.860

for.body.838:                                     ; preds = %for.cond.834
  store i32 0, i32* %i, align 4
  br label %for.cond.839

for.cond.839:                                     ; preds = %for.inc.855, %for.body.838
  %610 = load i32, i32* %i, align 4
  %611 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x840 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %611, i32 0, i32 162
  %612 = load i32, i32* %mb_cr_size_x840, align 4
  %cmp841 = icmp slt i32 %610, %612
  br i1 %cmp841, label %for.body.843, label %for.end.857

for.body.843:                                     ; preds = %for.cond.839
  %613 = load i32, i32* %i, align 4
  %idxprom844 = sext i32 %613 to i64
  %614 = load i32, i32* %j, align 4
  %idxprom845 = sext i32 %614 to i64
  %615 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7846 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %615, i32 0, i32 52
  %arrayidx847 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7846, i32 0, i64 %idxprom845
  %arrayidx848 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx847, i32 0, i64 %idxprom844
  %616 = load i32, i32* %arrayidx848, align 4
  %617 = load i32, i32* %j, align 4
  %shr849 = ashr i32 %617, 2
  %idxprom850 = sext i32 %shr849 to i64
  %618 = load i32, i32* %i, align 4
  %shr851 = ashr i32 %618, 2
  %idxprom852 = sext i32 %shr851 to i64
  %arrayidx853 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom852
  %arrayidx854 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx853, i32 0, i64 %idxprom850
  store i32 %616, i32* %arrayidx854, align 4
  br label %for.inc.855

for.inc.855:                                      ; preds = %for.body.843
  %619 = load i32, i32* %i, align 4
  %add856 = add nsw i32 %619, 4
  store i32 %add856, i32* %i, align 4
  br label %for.cond.839

for.end.857:                                      ; preds = %for.cond.839
  br label %for.inc.858

for.inc.858:                                      ; preds = %for.end.857
  %620 = load i32, i32* %j, align 4
  %add859 = add nsw i32 %620, 4
  store i32 %add859, i32* %j, align 4
  br label %for.cond.834

for.end.860:                                      ; preds = %for.cond.834
  store i32 0, i32* %j, align 4
  br label %for.cond.861

for.cond.861:                                     ; preds = %for.inc.901, %for.end.860
  %621 = load i32, i32* %j, align 4
  %cmp862 = icmp slt i32 %621, 4
  br i1 %cmp862, label %land.rhs.864, label %land.end.866

land.rhs.864:                                     ; preds = %for.cond.861
  %622 = load i32, i32* %lossless_qpprime, align 4
  %tobool865 = icmp ne i32 %622, 0
  %lnot = xor i1 %tobool865, true
  br label %land.end.866

land.end.866:                                     ; preds = %land.rhs.864, %for.cond.861
  %623 = phi i1 [ false, %for.cond.861 ], [ %lnot, %land.rhs.864 ]
  br i1 %623, label %for.body.868, label %for.end.903

for.body.868:                                     ; preds = %land.end.866
  %624 = load i32, i32* %j, align 4
  %idxprom869 = sext i32 %624 to i64
  %arrayidx870 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom869
  %625 = load i32, i32* %arrayidx870, align 4
  %626 = load i32, i32* %j, align 4
  %idxprom871 = sext i32 %626 to i64
  %arrayidx872 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom871
  %627 = load i32, i32* %arrayidx872, align 4
  %add873 = add nsw i32 %625, %627
  store i32 %add873, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %628 = load i32, i32* %j, align 4
  %idxprom874 = sext i32 %628 to i64
  %arrayidx875 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom874
  %629 = load i32, i32* %arrayidx875, align 4
  %630 = load i32, i32* %j, align 4
  %idxprom876 = sext i32 %630 to i64
  %arrayidx877 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom876
  %631 = load i32, i32* %arrayidx877, align 4
  %add878 = add nsw i32 %629, %631
  store i32 %add878, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %632 = load i32, i32* %j, align 4
  %idxprom879 = sext i32 %632 to i64
  %arrayidx880 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom879
  %633 = load i32, i32* %arrayidx880, align 4
  %634 = load i32, i32* %j, align 4
  %idxprom881 = sext i32 %634 to i64
  %arrayidx882 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom881
  %635 = load i32, i32* %arrayidx882, align 4
  %sub883 = sub nsw i32 %633, %635
  store i32 %sub883, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %636 = load i32, i32* %j, align 4
  %idxprom884 = sext i32 %636 to i64
  %arrayidx885 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom884
  %637 = load i32, i32* %arrayidx885, align 4
  %638 = load i32, i32* %j, align 4
  %idxprom886 = sext i32 %638 to i64
  %arrayidx887 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom886
  %639 = load i32, i32* %arrayidx887, align 4
  %sub888 = sub nsw i32 %637, %639
  store i32 %sub888, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %640 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %641 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %add889 = add nsw i32 %640, %641
  %642 = load i32, i32* %j, align 4
  %idxprom890 = sext i32 %642 to i64
  %arrayidx891 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom890
  store i32 %add889, i32* %arrayidx891, align 4
  %643 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %644 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %sub892 = sub nsw i32 %643, %644
  %645 = load i32, i32* %j, align 4
  %idxprom893 = sext i32 %645 to i64
  %arrayidx894 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom893
  store i32 %sub892, i32* %arrayidx894, align 4
  %646 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %647 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add895 = add nsw i32 %646, %647
  %648 = load i32, i32* %j, align 4
  %idxprom896 = sext i32 %648 to i64
  %arrayidx897 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom896
  store i32 %add895, i32* %arrayidx897, align 4
  %649 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %650 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %sub898 = sub nsw i32 %649, %650
  %651 = load i32, i32* %j, align 4
  %idxprom899 = sext i32 %651 to i64
  %arrayidx900 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom899
  store i32 %sub898, i32* %arrayidx900, align 4
  br label %for.inc.901

for.inc.901:                                      ; preds = %for.body.868
  %652 = load i32, i32* %j, align 4
  %inc902 = add nsw i32 %652, 1
  store i32 %inc902, i32* %j, align 4
  br label %for.cond.861

for.end.903:                                      ; preds = %land.end.866
  store i32 0, i32* %i, align 4
  br label %for.cond.904

for.cond.904:                                     ; preds = %for.inc.961, %for.end.903
  %653 = load i32, i32* %i, align 4
  %cmp905 = icmp slt i32 %653, 4
  br i1 %cmp905, label %land.rhs.907, label %land.end.910

land.rhs.907:                                     ; preds = %for.cond.904
  %654 = load i32, i32* %lossless_qpprime, align 4
  %tobool908 = icmp ne i32 %654, 0
  %lnot909 = xor i1 %tobool908, true
  br label %land.end.910

land.end.910:                                     ; preds = %land.rhs.907, %for.cond.904
  %655 = phi i1 [ false, %for.cond.904 ], [ %lnot909, %land.rhs.907 ]
  br i1 %655, label %for.body.912, label %for.end.963

for.body.912:                                     ; preds = %land.end.910
  %656 = load i32, i32* %i, align 4
  %idxprom913 = sext i32 %656 to i64
  %arrayidx914 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom913
  %arrayidx915 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx914, i32 0, i64 0
  %657 = load i32, i32* %arrayidx915, align 4
  %658 = load i32, i32* %i, align 4
  %idxprom916 = sext i32 %658 to i64
  %arrayidx917 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom916
  %arrayidx918 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx917, i32 0, i64 3
  %659 = load i32, i32* %arrayidx918, align 4
  %add919 = add nsw i32 %657, %659
  store i32 %add919, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %660 = load i32, i32* %i, align 4
  %idxprom920 = sext i32 %660 to i64
  %arrayidx921 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom920
  %arrayidx922 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx921, i32 0, i64 1
  %661 = load i32, i32* %arrayidx922, align 4
  %662 = load i32, i32* %i, align 4
  %idxprom923 = sext i32 %662 to i64
  %arrayidx924 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom923
  %arrayidx925 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx924, i32 0, i64 2
  %663 = load i32, i32* %arrayidx925, align 4
  %add926 = add nsw i32 %661, %663
  store i32 %add926, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %664 = load i32, i32* %i, align 4
  %idxprom927 = sext i32 %664 to i64
  %arrayidx928 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom927
  %arrayidx929 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx928, i32 0, i64 1
  %665 = load i32, i32* %arrayidx929, align 4
  %666 = load i32, i32* %i, align 4
  %idxprom930 = sext i32 %666 to i64
  %arrayidx931 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom930
  %arrayidx932 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx931, i32 0, i64 2
  %667 = load i32, i32* %arrayidx932, align 4
  %sub933 = sub nsw i32 %665, %667
  store i32 %sub933, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %668 = load i32, i32* %i, align 4
  %idxprom934 = sext i32 %668 to i64
  %arrayidx935 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom934
  %arrayidx936 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx935, i32 0, i64 0
  %669 = load i32, i32* %arrayidx936, align 4
  %670 = load i32, i32* %i, align 4
  %idxprom937 = sext i32 %670 to i64
  %arrayidx938 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom937
  %arrayidx939 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx938, i32 0, i64 3
  %671 = load i32, i32* %arrayidx939, align 4
  %sub940 = sub nsw i32 %669, %671
  store i32 %sub940, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %672 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %673 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %add941 = add nsw i32 %672, %673
  %shr942 = ashr i32 %add941, 1
  %674 = load i32, i32* %i, align 4
  %idxprom943 = sext i32 %674 to i64
  %arrayidx944 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom943
  %arrayidx945 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx944, i32 0, i64 0
  store i32 %shr942, i32* %arrayidx945, align 4
  %675 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %676 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %sub946 = sub nsw i32 %675, %676
  %shr947 = ashr i32 %sub946, 1
  %677 = load i32, i32* %i, align 4
  %idxprom948 = sext i32 %677 to i64
  %arrayidx949 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom948
  %arrayidx950 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx949, i32 0, i64 2
  store i32 %shr947, i32* %arrayidx950, align 4
  %678 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %679 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add951 = add nsw i32 %678, %679
  %shr952 = ashr i32 %add951, 1
  %680 = load i32, i32* %i, align 4
  %idxprom953 = sext i32 %680 to i64
  %arrayidx954 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom953
  %arrayidx955 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx954, i32 0, i64 1
  store i32 %shr952, i32* %arrayidx955, align 4
  %681 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %682 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %sub956 = sub nsw i32 %681, %682
  %shr957 = ashr i32 %sub956, 1
  %683 = load i32, i32* %i, align 4
  %idxprom958 = sext i32 %683 to i64
  %arrayidx959 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom958
  %arrayidx960 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx959, i32 0, i64 3
  store i32 %shr957, i32* %arrayidx960, align 4
  br label %for.inc.961

for.inc.961:                                      ; preds = %for.body.912
  %684 = load i32, i32* %i, align 4
  %inc962 = add nsw i32 %684, 1
  store i32 %inc962, i32* %i, align 4
  br label %for.cond.904

for.end.963:                                      ; preds = %land.end.910
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.964

for.cond.964:                                     ; preds = %for.inc.1035, %for.end.963
  %685 = load i32, i32* %coeff_ctr, align 4
  %cmp965 = icmp slt i32 %685, 16
  br i1 %cmp965, label %for.body.967, label %for.end.1037

for.body.967:                                     ; preds = %for.cond.964
  %686 = load i32, i32* %coeff_ctr, align 4
  %idxprom968 = sext i32 %686 to i64
  %arrayidx969 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom968
  %arrayidx970 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx969, i32 0, i64 0
  %687 = load i8, i8* %arrayidx970, align 1
  %conv971 = zext i8 %687 to i32
  store i32 %conv971, i32* %i, align 4
  %688 = load i32, i32* %coeff_ctr, align 4
  %idxprom972 = sext i32 %688 to i64
  %arrayidx973 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom972
  %arrayidx974 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx973, i32 0, i64 1
  %689 = load i8, i8* %arrayidx974, align 1
  %conv975 = zext i8 %689 to i32
  store i32 %conv975, i32* %j, align 4
  %690 = load i32, i32* %run, align 4
  %inc976 = add nsw i32 %690, 1
  store i32 %inc976, i32* %run, align 4
  %691 = load i32, i32* %lossless_qpprime, align 4
  %tobool977 = icmp ne i32 %691, 0
  br i1 %tobool977, label %if.then.978, label %if.else.984

if.then.978:                                      ; preds = %for.body.967
  %692 = load i32, i32* %j, align 4
  %idxprom979 = sext i32 %692 to i64
  %693 = load i32, i32* %i, align 4
  %idxprom980 = sext i32 %693 to i64
  %arrayidx981 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom980
  %arrayidx982 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx981, i32 0, i64 %idxprom979
  %694 = load i32, i32* %arrayidx982, align 4
  %call983 = call i32 @iabs(i32 %694)
  store i32 %call983, i32* %level, align 4
  br label %if.end.1003

if.else.984:                                      ; preds = %for.body.967
  %695 = load i32, i32* %j, align 4
  %idxprom985 = sext i32 %695 to i64
  %696 = load i32, i32* %i, align 4
  %idxprom986 = sext i32 %696 to i64
  %arrayidx987 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom986
  %arrayidx988 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx987, i32 0, i64 %idxprom985
  %697 = load i32, i32* %arrayidx988, align 4
  %call989 = call i32 @iabs(i32 %697)
  %698 = load i32, i32* %qp_rem, align 4
  %idxprom990 = sext i32 %698 to i64
  %699 = load i32***, i32**** %levelscale, align 8
  %arrayidx991 = getelementptr inbounds i32**, i32*** %699, i64 %idxprom990
  %700 = load i32**, i32*** %arrayidx991, align 8
  %arrayidx992 = getelementptr inbounds i32*, i32** %700, i64 0
  %701 = load i32*, i32** %arrayidx992, align 8
  %arrayidx993 = getelementptr inbounds i32, i32* %701, i64 0
  %702 = load i32, i32* %arrayidx993, align 4
  %mul994 = mul nsw i32 %call989, %702
  %703 = load i32, i32* %qp_per, align 4
  %idxprom995 = sext i32 %703 to i64
  %704 = load i32***, i32**** %leveloffset, align 8
  %arrayidx996 = getelementptr inbounds i32**, i32*** %704, i64 %idxprom995
  %705 = load i32**, i32*** %arrayidx996, align 8
  %arrayidx997 = getelementptr inbounds i32*, i32** %705, i64 0
  %706 = load i32*, i32** %arrayidx997, align 8
  %arrayidx998 = getelementptr inbounds i32, i32* %706, i64 0
  %707 = load i32, i32* %arrayidx998, align 4
  %mul999 = mul nsw i32 %707, 2
  %add1000 = add nsw i32 %mul994, %mul999
  %708 = load i32, i32* %q_bits, align 4
  %add1001 = add nsw i32 %708, 1
  %shr1002 = ashr i32 %add1000, %add1001
  store i32 %shr1002, i32* %level, align 4
  br label %if.end.1003

if.end.1003:                                      ; preds = %if.else.984, %if.then.978
  %709 = load i32, i32* %level, align 4
  %cmp1004 = icmp ne i32 %709, 0
  br i1 %cmp1004, label %if.then.1006, label %if.end.1022

if.then.1006:                                     ; preds = %if.end.1003
  %710 = load i32, i32* %uv.addr, align 4
  %shl1007 = shl i32 %710, 4
  %sh_prom = zext i32 %shl1007 to i64
  %shl1008 = shl i64 4294901760, %sh_prom
  %711 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk1009 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %711, i32 0, i32 13
  %712 = load i64, i64* %cbp_blk1009, align 8
  %or1010 = or i64 %712, %shl1008
  store i64 %or1010, i64* %cbp_blk1009, align 8
  %713 = load i32, i32* %cr_cbp.addr, align 4
  %call1011 = call i32 @imax(i32 1, i32 %713)
  store i32 %call1011, i32* %cr_cbp.addr, align 4
  store i32 1, i32* %DCcoded, align 4
  %714 = load i32, i32* %level, align 4
  %715 = load i32, i32* %j, align 4
  %idxprom1012 = sext i32 %715 to i64
  %716 = load i32, i32* %i, align 4
  %idxprom1013 = sext i32 %716 to i64
  %arrayidx1014 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1013
  %arrayidx1015 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1014, i32 0, i64 %idxprom1012
  %717 = load i32, i32* %arrayidx1015, align 4
  %call1016 = call i32 @isignab(i32 %714, i32 %717)
  %718 = load i32, i32* %scan_pos, align 4
  %idxprom1017 = sext i32 %718 to i64
  %719 = load i32*, i32** %DCLevel, align 8
  %arrayidx1018 = getelementptr inbounds i32, i32* %719, i64 %idxprom1017
  store i32 %call1016, i32* %arrayidx1018, align 4
  %720 = load i32, i32* %run, align 4
  %721 = load i32, i32* %scan_pos, align 4
  %idxprom1019 = sext i32 %721 to i64
  %722 = load i32*, i32** %DCRun, align 8
  %arrayidx1020 = getelementptr inbounds i32, i32* %722, i64 %idxprom1019
  store i32 %720, i32* %arrayidx1020, align 4
  %723 = load i32, i32* %scan_pos, align 4
  %inc1021 = add nsw i32 %723, 1
  store i32 %inc1021, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.1022

if.end.1022:                                      ; preds = %if.then.1006, %if.end.1003
  %724 = load i32, i32* %lossless_qpprime, align 4
  %tobool1023 = icmp ne i32 %724, 0
  br i1 %tobool1023, label %if.end.1034, label %if.then.1024

if.then.1024:                                     ; preds = %if.end.1022
  %725 = load i32, i32* %level, align 4
  %726 = load i32, i32* %j, align 4
  %idxprom1025 = sext i32 %726 to i64
  %727 = load i32, i32* %i, align 4
  %idxprom1026 = sext i32 %727 to i64
  %arrayidx1027 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1026
  %arrayidx1028 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1027, i32 0, i64 %idxprom1025
  %728 = load i32, i32* %arrayidx1028, align 4
  %call1029 = call i32 @isignab(i32 %725, i32 %728)
  %729 = load i32, i32* %j, align 4
  %idxprom1030 = sext i32 %729 to i64
  %730 = load i32, i32* %i, align 4
  %idxprom1031 = sext i32 %730 to i64
  %arrayidx1032 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1031
  %arrayidx1033 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1032, i32 0, i64 %idxprom1030
  store i32 %call1029, i32* %arrayidx1033, align 4
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.then.1024, %if.end.1022
  br label %for.inc.1035

for.inc.1035:                                     ; preds = %if.end.1034
  %731 = load i32, i32* %coeff_ctr, align 4
  %inc1036 = add nsw i32 %731, 1
  store i32 %inc1036, i32* %coeff_ctr, align 4
  br label %for.cond.964

for.end.1037:                                     ; preds = %for.cond.964
  %732 = load i32, i32* %scan_pos, align 4
  %idxprom1038 = sext i32 %732 to i64
  %733 = load i32*, i32** %DCLevel, align 8
  %arrayidx1039 = getelementptr inbounds i32, i32* %733, i64 %idxprom1038
  store i32 0, i32* %arrayidx1039, align 4
  %734 = load i32, i32* %lossless_qpprime, align 4
  %tobool1040 = icmp ne i32 %734, 0
  br i1 %tobool1040, label %if.end.1253, label %if.then.1041

if.then.1041:                                     ; preds = %for.end.1037
  store i32 0, i32* %j, align 4
  br label %for.cond.1042

for.cond.1042:                                    ; preds = %for.inc.1078, %if.then.1041
  %735 = load i32, i32* %j, align 4
  %cmp1043 = icmp slt i32 %735, 4
  br i1 %cmp1043, label %for.body.1045, label %for.end.1080

for.body.1045:                                    ; preds = %for.cond.1042
  %736 = load i32, i32* %j, align 4
  %idxprom1046 = sext i32 %736 to i64
  %arrayidx1047 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom1046
  %737 = load i32, i32* %arrayidx1047, align 4
  %738 = load i32, i32* %j, align 4
  %idxprom1048 = sext i32 %738 to i64
  %arrayidx1049 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom1048
  %739 = load i32, i32* %arrayidx1049, align 4
  %add1050 = add nsw i32 %737, %739
  store i32 %add1050, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %740 = load i32, i32* %j, align 4
  %idxprom1051 = sext i32 %740 to i64
  %arrayidx1052 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom1051
  %741 = load i32, i32* %arrayidx1052, align 4
  %742 = load i32, i32* %j, align 4
  %idxprom1053 = sext i32 %742 to i64
  %arrayidx1054 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom1053
  %743 = load i32, i32* %arrayidx1054, align 4
  %sub1055 = sub nsw i32 %741, %743
  store i32 %sub1055, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %744 = load i32, i32* %j, align 4
  %idxprom1056 = sext i32 %744 to i64
  %arrayidx1057 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom1056
  %745 = load i32, i32* %arrayidx1057, align 4
  %746 = load i32, i32* %j, align 4
  %idxprom1058 = sext i32 %746 to i64
  %arrayidx1059 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom1058
  %747 = load i32, i32* %arrayidx1059, align 4
  %sub1060 = sub nsw i32 %745, %747
  store i32 %sub1060, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %748 = load i32, i32* %j, align 4
  %idxprom1061 = sext i32 %748 to i64
  %arrayidx1062 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom1061
  %749 = load i32, i32* %arrayidx1062, align 4
  %750 = load i32, i32* %j, align 4
  %idxprom1063 = sext i32 %750 to i64
  %arrayidx1064 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom1063
  %751 = load i32, i32* %arrayidx1064, align 4
  %add1065 = add nsw i32 %749, %751
  store i32 %add1065, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %752 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %753 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add1066 = add nsw i32 %752, %753
  %754 = load i32, i32* %j, align 4
  %idxprom1067 = sext i32 %754 to i64
  %arrayidx1068 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 0), i32 0, i64 %idxprom1067
  store i32 %add1066, i32* %arrayidx1068, align 4
  %755 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %756 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add1069 = add nsw i32 %755, %756
  %757 = load i32, i32* %j, align 4
  %idxprom1070 = sext i32 %757 to i64
  %arrayidx1071 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 1), i32 0, i64 %idxprom1070
  store i32 %add1069, i32* %arrayidx1071, align 4
  %758 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %759 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub1072 = sub nsw i32 %758, %759
  %760 = load i32, i32* %j, align 4
  %idxprom1073 = sext i32 %760 to i64
  %arrayidx1074 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 2), i32 0, i64 %idxprom1073
  store i32 %sub1072, i32* %arrayidx1074, align 4
  %761 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %762 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub1075 = sub nsw i32 %761, %762
  %763 = load i32, i32* %j, align 4
  %idxprom1076 = sext i32 %763 to i64
  %arrayidx1077 = getelementptr inbounds [4 x i32], [4 x i32]* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 3), i32 0, i64 %idxprom1076
  store i32 %sub1075, i32* %arrayidx1077, align 4
  br label %for.inc.1078

for.inc.1078:                                     ; preds = %for.body.1045
  %764 = load i32, i32* %j, align 4
  %inc1079 = add nsw i32 %764, 1
  store i32 %inc1079, i32* %j, align 4
  br label %for.cond.1042

for.end.1080:                                     ; preds = %for.cond.1042
  store i32 0, i32* %i, align 4
  br label %for.cond.1081

for.cond.1081:                                    ; preds = %for.inc.1250, %for.end.1080
  %765 = load i32, i32* %i, align 4
  %cmp1082 = icmp slt i32 %765, 4
  br i1 %cmp1082, label %for.body.1084, label %for.end.1252

for.body.1084:                                    ; preds = %for.cond.1081
  %766 = load i32, i32* %i, align 4
  %idxprom1085 = sext i32 %766 to i64
  %arrayidx1086 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1085
  %arrayidx1087 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1086, i32 0, i64 0
  %767 = load i32, i32* %arrayidx1087, align 4
  %768 = load i32, i32* %i, align 4
  %idxprom1088 = sext i32 %768 to i64
  %arrayidx1089 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1088
  %arrayidx1090 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1089, i32 0, i64 2
  %769 = load i32, i32* %arrayidx1090, align 4
  %add1091 = add nsw i32 %767, %769
  store i32 %add1091, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %770 = load i32, i32* %i, align 4
  %idxprom1092 = sext i32 %770 to i64
  %arrayidx1093 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1092
  %arrayidx1094 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1093, i32 0, i64 0
  %771 = load i32, i32* %arrayidx1094, align 4
  %772 = load i32, i32* %i, align 4
  %idxprom1095 = sext i32 %772 to i64
  %arrayidx1096 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1095
  %arrayidx1097 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1096, i32 0, i64 2
  %773 = load i32, i32* %arrayidx1097, align 4
  %sub1098 = sub nsw i32 %771, %773
  store i32 %sub1098, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %774 = load i32, i32* %i, align 4
  %idxprom1099 = sext i32 %774 to i64
  %arrayidx1100 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1099
  %arrayidx1101 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1100, i32 0, i64 1
  %775 = load i32, i32* %arrayidx1101, align 4
  %776 = load i32, i32* %i, align 4
  %idxprom1102 = sext i32 %776 to i64
  %arrayidx1103 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1102
  %arrayidx1104 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1103, i32 0, i64 3
  %777 = load i32, i32* %arrayidx1104, align 4
  %sub1105 = sub nsw i32 %775, %777
  store i32 %sub1105, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %778 = load i32, i32* %i, align 4
  %idxprom1106 = sext i32 %778 to i64
  %arrayidx1107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1106
  %arrayidx1108 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1107, i32 0, i64 1
  %779 = load i32, i32* %arrayidx1108, align 4
  %780 = load i32, i32* %i, align 4
  %idxprom1109 = sext i32 %780 to i64
  %arrayidx1110 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @dct_chroma.m4, i32 0, i64 %idxprom1109
  %arrayidx1111 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1110, i32 0, i64 3
  %781 = load i32, i32* %arrayidx1111, align 4
  %add1112 = add nsw i32 %779, %781
  store i32 %add1112, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %782 = load i32, i32* %qp_per, align 4
  %cmp1113 = icmp slt i32 %782, 4
  br i1 %cmp1113, label %if.then.1115, label %if.else.1188

if.then.1115:                                     ; preds = %for.body.1084
  %783 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %784 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add1116 = add nsw i32 %783, %784
  %785 = load i32, i32* %qp_rem, align 4
  %idxprom1117 = sext i32 %785 to i64
  %786 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1118 = getelementptr inbounds i32**, i32*** %786, i64 %idxprom1117
  %787 = load i32**, i32*** %arrayidx1118, align 8
  %arrayidx1119 = getelementptr inbounds i32*, i32** %787, i64 0
  %788 = load i32*, i32** %arrayidx1119, align 8
  %arrayidx1120 = getelementptr inbounds i32, i32* %788, i64 0
  %789 = load i32, i32* %arrayidx1120, align 4
  %mul1121 = mul nsw i32 %add1116, %789
  %790 = load i32, i32* %qp_per, align 4
  %sub1122 = sub nsw i32 3, %790
  %shl1123 = shl i32 1, %sub1122
  %add1124 = add nsw i32 %mul1121, %shl1123
  %791 = load i32, i32* %qp_per, align 4
  %sub1125 = sub nsw i32 4, %791
  %shr1126 = ashr i32 %add1124, %sub1125
  %add1127 = add nsw i32 %shr1126, 2
  %shr1128 = ashr i32 %add1127, 2
  %792 = load i32, i32* %i, align 4
  %mul1129 = mul nsw i32 %792, 4
  %idxprom1130 = sext i32 %mul1129 to i64
  %793 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71131 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %793, i32 0, i32 52
  %arrayidx1132 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71131, i32 0, i64 0
  %arrayidx1133 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1132, i32 0, i64 %idxprom1130
  store i32 %shr1128, i32* %arrayidx1133, align 4
  %794 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %795 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add1134 = add nsw i32 %794, %795
  %796 = load i32, i32* %qp_rem, align 4
  %idxprom1135 = sext i32 %796 to i64
  %797 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1136 = getelementptr inbounds i32**, i32*** %797, i64 %idxprom1135
  %798 = load i32**, i32*** %arrayidx1136, align 8
  %arrayidx1137 = getelementptr inbounds i32*, i32** %798, i64 0
  %799 = load i32*, i32** %arrayidx1137, align 8
  %arrayidx1138 = getelementptr inbounds i32, i32* %799, i64 0
  %800 = load i32, i32* %arrayidx1138, align 4
  %mul1139 = mul nsw i32 %add1134, %800
  %801 = load i32, i32* %qp_per, align 4
  %sub1140 = sub nsw i32 3, %801
  %shl1141 = shl i32 1, %sub1140
  %add1142 = add nsw i32 %mul1139, %shl1141
  %802 = load i32, i32* %qp_per, align 4
  %sub1143 = sub nsw i32 4, %802
  %shr1144 = ashr i32 %add1142, %sub1143
  %add1145 = add nsw i32 %shr1144, 2
  %shr1146 = ashr i32 %add1145, 2
  %803 = load i32, i32* %i, align 4
  %mul1147 = mul nsw i32 %803, 4
  %idxprom1148 = sext i32 %mul1147 to i64
  %804 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %804, i32 0, i32 52
  %arrayidx1150 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71149, i32 0, i64 4
  %arrayidx1151 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1150, i32 0, i64 %idxprom1148
  store i32 %shr1146, i32* %arrayidx1151, align 4
  %805 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %806 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub1152 = sub nsw i32 %805, %806
  %807 = load i32, i32* %qp_rem, align 4
  %idxprom1153 = sext i32 %807 to i64
  %808 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1154 = getelementptr inbounds i32**, i32*** %808, i64 %idxprom1153
  %809 = load i32**, i32*** %arrayidx1154, align 8
  %arrayidx1155 = getelementptr inbounds i32*, i32** %809, i64 0
  %810 = load i32*, i32** %arrayidx1155, align 8
  %arrayidx1156 = getelementptr inbounds i32, i32* %810, i64 0
  %811 = load i32, i32* %arrayidx1156, align 4
  %mul1157 = mul nsw i32 %sub1152, %811
  %812 = load i32, i32* %qp_per, align 4
  %sub1158 = sub nsw i32 3, %812
  %shl1159 = shl i32 1, %sub1158
  %add1160 = add nsw i32 %mul1157, %shl1159
  %813 = load i32, i32* %qp_per, align 4
  %sub1161 = sub nsw i32 4, %813
  %shr1162 = ashr i32 %add1160, %sub1161
  %add1163 = add nsw i32 %shr1162, 2
  %shr1164 = ashr i32 %add1163, 2
  %814 = load i32, i32* %i, align 4
  %mul1165 = mul nsw i32 %814, 4
  %idxprom1166 = sext i32 %mul1165 to i64
  %815 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71167 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %815, i32 0, i32 52
  %arrayidx1168 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71167, i32 0, i64 8
  %arrayidx1169 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1168, i32 0, i64 %idxprom1166
  store i32 %shr1164, i32* %arrayidx1169, align 4
  %816 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %817 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub1170 = sub nsw i32 %816, %817
  %818 = load i32, i32* %qp_rem, align 4
  %idxprom1171 = sext i32 %818 to i64
  %819 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1172 = getelementptr inbounds i32**, i32*** %819, i64 %idxprom1171
  %820 = load i32**, i32*** %arrayidx1172, align 8
  %arrayidx1173 = getelementptr inbounds i32*, i32** %820, i64 0
  %821 = load i32*, i32** %arrayidx1173, align 8
  %arrayidx1174 = getelementptr inbounds i32, i32* %821, i64 0
  %822 = load i32, i32* %arrayidx1174, align 4
  %mul1175 = mul nsw i32 %sub1170, %822
  %823 = load i32, i32* %qp_per, align 4
  %sub1176 = sub nsw i32 3, %823
  %shl1177 = shl i32 1, %sub1176
  %add1178 = add nsw i32 %mul1175, %shl1177
  %824 = load i32, i32* %qp_per, align 4
  %sub1179 = sub nsw i32 4, %824
  %shr1180 = ashr i32 %add1178, %sub1179
  %add1181 = add nsw i32 %shr1180, 2
  %shr1182 = ashr i32 %add1181, 2
  %825 = load i32, i32* %i, align 4
  %mul1183 = mul nsw i32 %825, 4
  %idxprom1184 = sext i32 %mul1183 to i64
  %826 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %826, i32 0, i32 52
  %arrayidx1186 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71185, i32 0, i64 12
  %arrayidx1187 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1186, i32 0, i64 %idxprom1184
  store i32 %shr1182, i32* %arrayidx1187, align 4
  br label %if.end.1249

if.else.1188:                                     ; preds = %for.body.1084
  %827 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %828 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add1189 = add nsw i32 %827, %828
  %829 = load i32, i32* %qp_rem, align 4
  %idxprom1190 = sext i32 %829 to i64
  %830 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1191 = getelementptr inbounds i32**, i32*** %830, i64 %idxprom1190
  %831 = load i32**, i32*** %arrayidx1191, align 8
  %arrayidx1192 = getelementptr inbounds i32*, i32** %831, i64 0
  %832 = load i32*, i32** %arrayidx1192, align 8
  %arrayidx1193 = getelementptr inbounds i32, i32* %832, i64 0
  %833 = load i32, i32* %arrayidx1193, align 4
  %mul1194 = mul nsw i32 %add1189, %833
  %834 = load i32, i32* %qp_per, align 4
  %sub1195 = sub nsw i32 %834, 4
  %shl1196 = shl i32 %mul1194, %sub1195
  %add1197 = add nsw i32 %shl1196, 2
  %shr1198 = ashr i32 %add1197, 2
  %835 = load i32, i32* %i, align 4
  %mul1199 = mul nsw i32 %835, 4
  %idxprom1200 = sext i32 %mul1199 to i64
  %836 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %836, i32 0, i32 52
  %arrayidx1202 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71201, i32 0, i64 0
  %arrayidx1203 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1202, i32 0, i64 %idxprom1200
  store i32 %shr1198, i32* %arrayidx1203, align 4
  %837 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %838 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add1204 = add nsw i32 %837, %838
  %839 = load i32, i32* %qp_rem, align 4
  %idxprom1205 = sext i32 %839 to i64
  %840 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1206 = getelementptr inbounds i32**, i32*** %840, i64 %idxprom1205
  %841 = load i32**, i32*** %arrayidx1206, align 8
  %arrayidx1207 = getelementptr inbounds i32*, i32** %841, i64 0
  %842 = load i32*, i32** %arrayidx1207, align 8
  %arrayidx1208 = getelementptr inbounds i32, i32* %842, i64 0
  %843 = load i32, i32* %arrayidx1208, align 4
  %mul1209 = mul nsw i32 %add1204, %843
  %844 = load i32, i32* %qp_per, align 4
  %sub1210 = sub nsw i32 %844, 4
  %shl1211 = shl i32 %mul1209, %sub1210
  %add1212 = add nsw i32 %shl1211, 2
  %shr1213 = ashr i32 %add1212, 2
  %845 = load i32, i32* %i, align 4
  %mul1214 = mul nsw i32 %845, 4
  %idxprom1215 = sext i32 %mul1214 to i64
  %846 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71216 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %846, i32 0, i32 52
  %arrayidx1217 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71216, i32 0, i64 4
  %arrayidx1218 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1217, i32 0, i64 %idxprom1215
  store i32 %shr1213, i32* %arrayidx1218, align 4
  %847 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %848 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub1219 = sub nsw i32 %847, %848
  %849 = load i32, i32* %qp_rem, align 4
  %idxprom1220 = sext i32 %849 to i64
  %850 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1221 = getelementptr inbounds i32**, i32*** %850, i64 %idxprom1220
  %851 = load i32**, i32*** %arrayidx1221, align 8
  %arrayidx1222 = getelementptr inbounds i32*, i32** %851, i64 0
  %852 = load i32*, i32** %arrayidx1222, align 8
  %arrayidx1223 = getelementptr inbounds i32, i32* %852, i64 0
  %853 = load i32, i32* %arrayidx1223, align 4
  %mul1224 = mul nsw i32 %sub1219, %853
  %854 = load i32, i32* %qp_per, align 4
  %sub1225 = sub nsw i32 %854, 4
  %shl1226 = shl i32 %mul1224, %sub1225
  %add1227 = add nsw i32 %shl1226, 2
  %shr1228 = ashr i32 %add1227, 2
  %855 = load i32, i32* %i, align 4
  %mul1229 = mul nsw i32 %855, 4
  %idxprom1230 = sext i32 %mul1229 to i64
  %856 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71231 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %856, i32 0, i32 52
  %arrayidx1232 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71231, i32 0, i64 8
  %arrayidx1233 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1232, i32 0, i64 %idxprom1230
  store i32 %shr1228, i32* %arrayidx1233, align 4
  %857 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %858 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub1234 = sub nsw i32 %857, %858
  %859 = load i32, i32* %qp_rem, align 4
  %idxprom1235 = sext i32 %859 to i64
  %860 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1236 = getelementptr inbounds i32**, i32*** %860, i64 %idxprom1235
  %861 = load i32**, i32*** %arrayidx1236, align 8
  %arrayidx1237 = getelementptr inbounds i32*, i32** %861, i64 0
  %862 = load i32*, i32** %arrayidx1237, align 8
  %arrayidx1238 = getelementptr inbounds i32, i32* %862, i64 0
  %863 = load i32, i32* %arrayidx1238, align 4
  %mul1239 = mul nsw i32 %sub1234, %863
  %864 = load i32, i32* %qp_per, align 4
  %sub1240 = sub nsw i32 %864, 4
  %shl1241 = shl i32 %mul1239, %sub1240
  %add1242 = add nsw i32 %shl1241, 2
  %shr1243 = ashr i32 %add1242, 2
  %865 = load i32, i32* %i, align 4
  %mul1244 = mul nsw i32 %865, 4
  %idxprom1245 = sext i32 %mul1244 to i64
  %866 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71246 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %866, i32 0, i32 52
  %arrayidx1247 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71246, i32 0, i64 12
  %arrayidx1248 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1247, i32 0, i64 %idxprom1245
  store i32 %shr1243, i32* %arrayidx1248, align 4
  br label %if.end.1249

if.end.1249:                                      ; preds = %if.else.1188, %if.then.1115
  br label %for.inc.1250

for.inc.1250:                                     ; preds = %if.end.1249
  %867 = load i32, i32* %i, align 4
  %inc1251 = add nsw i32 %867, 1
  store i32 %inc1251, i32* %i, align 4
  br label %for.cond.1081

for.end.1252:                                     ; preds = %for.cond.1081
  br label %if.end.1253

if.end.1253:                                      ; preds = %for.end.1252, %for.end.1037
  br label %if.end.1254

if.end.1254:                                      ; preds = %if.end.1253, %if.else.830
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.end.1254, %if.end.829
  br label %if.end.1256

if.end.1256:                                      ; preds = %if.end.1255, %if.end.468
  store i32 0, i32* %coeff_cost, align 4
  store i32 0, i32* %cr_cbp_tmp, align 4
  store i32 0, i32* %b8, align 4
  br label %for.cond.1257

for.cond.1257:                                    ; preds = %for.inc.1510, %if.end.1256
  %868 = load i32, i32* %b8, align 4
  %869 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv1258 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %869, i32 0, i32 158
  %870 = load i32, i32* %num_blk8x8_uv1258, align 4
  %shr1259 = ashr i32 %870, 1
  %cmp1260 = icmp slt i32 %868, %shr1259
  br i1 %cmp1260, label %for.body.1262, label %for.end.1512

for.body.1262:                                    ; preds = %for.cond.1257
  store i32 0, i32* %b4, align 4
  br label %for.cond.1263

for.cond.1263:                                    ; preds = %for.inc.1507, %for.body.1262
  %871 = load i32, i32* %b4, align 4
  %cmp1264 = icmp slt i32 %871, 4
  br i1 %cmp1264, label %for.body.1266, label %for.end.1509

for.body.1266:                                    ; preds = %for.cond.1263
  %872 = load i32, i32* %b4, align 4
  %idxprom1267 = sext i32 %872 to i64
  %873 = load i32, i32* %b8, align 4
  %874 = load i32, i32* %uv_scale, align 4
  %add1268 = add nsw i32 %873, %874
  %idxprom1269 = sext i32 %add1268 to i64
  %arrayidx1270 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* @cbp_blk_chroma, i32 0, i64 %idxprom1269
  %arrayidx1271 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1270, i32 0, i64 %idxprom1267
  %875 = load i8, i8* %arrayidx1271, align 1
  %conv1272 = zext i8 %875 to i32
  %sh_prom1273 = zext i32 %conv1272 to i64
  %shl1274 = shl i64 1, %sh_prom1273
  store i64 %shl1274, i64* %uv_cbpblk, align 8
  %876 = load i32, i32* %b4, align 4
  %idxprom1275 = sext i32 %876 to i64
  %877 = load i32, i32* %b8, align 4
  %idxprom1276 = sext i32 %877 to i64
  %878 = load i32, i32* %yuv, align 4
  %idxprom1277 = sext i32 %878 to i64
  %arrayidx1278 = getelementptr inbounds [4 x [4 x [4 x i8]]], [4 x [4 x [4 x i8]]]* @hor_offset, i32 0, i64 %idxprom1277
  %arrayidx1279 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx1278, i32 0, i64 %idxprom1276
  %arrayidx1280 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1279, i32 0, i64 %idxprom1275
  %879 = load i8, i8* %arrayidx1280, align 1
  %conv1281 = zext i8 %879 to i32
  store i32 %conv1281, i32* %n1, align 4
  %880 = load i32, i32* %b4, align 4
  %idxprom1282 = sext i32 %880 to i64
  %881 = load i32, i32* %b8, align 4
  %idxprom1283 = sext i32 %881 to i64
  %882 = load i32, i32* %yuv, align 4
  %idxprom1284 = sext i32 %882 to i64
  %arrayidx1285 = getelementptr inbounds [4 x [4 x [4 x i8]]], [4 x [4 x [4 x i8]]]* @ver_offset, i32 0, i64 %idxprom1284
  %arrayidx1286 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx1285, i32 0, i64 %idxprom1283
  %arrayidx1287 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1286, i32 0, i64 %idxprom1282
  %883 = load i8, i8* %arrayidx1287, align 1
  %conv1288 = zext i8 %883 to i32
  store i32 %conv1288, i32* %n2, align 4
  %884 = load i32, i32* %b4, align 4
  %idxprom1289 = sext i32 %884 to i64
  %885 = load i32, i32* %b8, align 4
  %add1290 = add nsw i32 4, %885
  %886 = load i32, i32* %uv_scale, align 4
  %add1291 = add nsw i32 %add1290, %886
  %idxprom1292 = sext i32 %add1291 to i64
  %887 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %887, i32 0, i32 53
  %888 = load i32****, i32***** %cofAC, align 8
  %arrayidx1293 = getelementptr inbounds i32***, i32**** %888, i64 %idxprom1292
  %889 = load i32***, i32**** %arrayidx1293, align 8
  %arrayidx1294 = getelementptr inbounds i32**, i32*** %889, i64 %idxprom1289
  %890 = load i32**, i32*** %arrayidx1294, align 8
  %arrayidx1295 = getelementptr inbounds i32*, i32** %890, i64 0
  %891 = load i32*, i32** %arrayidx1295, align 8
  store i32* %891, i32** %ACLevel, align 8
  %892 = load i32, i32* %b4, align 4
  %idxprom1296 = sext i32 %892 to i64
  %893 = load i32, i32* %b8, align 4
  %add1297 = add nsw i32 4, %893
  %894 = load i32, i32* %uv_scale, align 4
  %add1298 = add nsw i32 %add1297, %894
  %idxprom1299 = sext i32 %add1298 to i64
  %895 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC1300 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %895, i32 0, i32 53
  %896 = load i32****, i32***** %cofAC1300, align 8
  %arrayidx1301 = getelementptr inbounds i32***, i32**** %896, i64 %idxprom1299
  %897 = load i32***, i32**** %arrayidx1301, align 8
  %arrayidx1302 = getelementptr inbounds i32**, i32*** %897, i64 %idxprom1296
  %898 = load i32**, i32*** %arrayidx1302, align 8
  %arrayidx1303 = getelementptr inbounds i32*, i32** %898, i64 1
  %899 = load i32*, i32** %arrayidx1303, align 8
  store i32* %899, i32** %ACRun, align 8
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  %900 = load i32, i32* %lossless_qpprime, align 4
  %tobool1304 = icmp ne i32 %900, 0
  br i1 %tobool1304, label %if.else.1436, label %if.then.1305

if.then.1305:                                     ; preds = %for.body.1266
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.1306

for.cond.1306:                                    ; preds = %for.inc.1433, %if.then.1305
  %901 = load i32, i32* %coeff_ctr, align 4
  %cmp1307 = icmp slt i32 %901, 16
  br i1 %cmp1307, label %for.body.1309, label %for.end.1435

for.body.1309:                                    ; preds = %for.cond.1306
  %902 = load i32, i32* %coeff_ctr, align 4
  %idxprom1310 = sext i32 %902 to i64
  %903 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1311 = getelementptr inbounds [2 x i8], [2 x i8]* %903, i64 %idxprom1310
  %arrayidx1312 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1311, i32 0, i64 0
  %904 = load i8, i8* %arrayidx1312, align 1
  %conv1313 = zext i8 %904 to i32
  store i32 %conv1313, i32* %i, align 4
  %905 = load i32, i32* %coeff_ctr, align 4
  %idxprom1314 = sext i32 %905 to i64
  %906 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1315 = getelementptr inbounds [2 x i8], [2 x i8]* %906, i64 %idxprom1314
  %arrayidx1316 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1315, i32 0, i64 1
  %907 = load i8, i8* %arrayidx1316, align 1
  %conv1317 = zext i8 %907 to i32
  store i32 %conv1317, i32* %j, align 4
  %908 = load i32, i32* %run, align 4
  %inc1318 = add nsw i32 %908, 1
  store i32 %inc1318, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %909 = load i32, i32* %n1, align 4
  %910 = load i32, i32* %i, align 4
  %add1319 = add nsw i32 %909, %910
  %idxprom1320 = sext i32 %add1319 to i64
  %911 = load i32, i32* %n2, align 4
  %912 = load i32, i32* %j, align 4
  %add1321 = add nsw i32 %911, %912
  %idxprom1322 = sext i32 %add1321 to i64
  %913 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71323 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %913, i32 0, i32 52
  %arrayidx1324 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71323, i32 0, i64 %idxprom1322
  %arrayidx1325 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1324, i32 0, i64 %idxprom1320
  %914 = load i32, i32* %arrayidx1325, align 4
  %call1326 = call i32 @iabs(i32 %914)
  %915 = load i32, i32* %i, align 4
  %idxprom1327 = sext i32 %915 to i64
  %916 = load i32, i32* %j, align 4
  %idxprom1328 = sext i32 %916 to i64
  %917 = load i32, i32* %qp_rem, align 4
  %idxprom1329 = sext i32 %917 to i64
  %918 = load i32***, i32**** %levelscale, align 8
  %arrayidx1330 = getelementptr inbounds i32**, i32*** %918, i64 %idxprom1329
  %919 = load i32**, i32*** %arrayidx1330, align 8
  %arrayidx1331 = getelementptr inbounds i32*, i32** %919, i64 %idxprom1328
  %920 = load i32*, i32** %arrayidx1331, align 8
  %arrayidx1332 = getelementptr inbounds i32, i32* %920, i64 %idxprom1327
  %921 = load i32, i32* %arrayidx1332, align 4
  %mul1333 = mul nsw i32 %call1326, %921
  %922 = load i32, i32* %i, align 4
  %idxprom1334 = sext i32 %922 to i64
  %923 = load i32, i32* %j, align 4
  %idxprom1335 = sext i32 %923 to i64
  %924 = load i32, i32* %qp_per, align 4
  %idxprom1336 = sext i32 %924 to i64
  %925 = load i32***, i32**** %leveloffset, align 8
  %arrayidx1337 = getelementptr inbounds i32**, i32*** %925, i64 %idxprom1336
  %926 = load i32**, i32*** %arrayidx1337, align 8
  %arrayidx1338 = getelementptr inbounds i32*, i32** %926, i64 %idxprom1335
  %927 = load i32*, i32** %arrayidx1338, align 8
  %arrayidx1339 = getelementptr inbounds i32, i32* %927, i64 %idxprom1334
  %928 = load i32, i32* %arrayidx1339, align 4
  %add1340 = add nsw i32 %mul1333, %928
  %929 = load i32, i32* %q_bits, align 4
  %shr1341 = ashr i32 %add1340, %929
  store i32 %shr1341, i32* %level, align 4
  %930 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %930, i32 0, i32 98
  %931 = load i32, i32* %AdaptiveRounding, align 4
  %tobool1342 = icmp ne i32 %931, 0
  br i1 %tobool1342, label %if.then.1343, label %if.end.1377

if.then.1343:                                     ; preds = %for.body.1309
  %932 = load i32, i32* %level, align 4
  %cmp1344 = icmp eq i32 %932, 0
  br i1 %cmp1344, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.1343
  br label %cond.end

cond.false:                                       ; preds = %if.then.1343
  %933 = load i32, i32* @AdaptRndCrWeight, align 4
  %934 = load i32, i32* %n1, align 4
  %935 = load i32, i32* %i, align 4
  %add1346 = add nsw i32 %934, %935
  %idxprom1347 = sext i32 %add1346 to i64
  %936 = load i32, i32* %n2, align 4
  %937 = load i32, i32* %j, align 4
  %add1348 = add nsw i32 %936, %937
  %idxprom1349 = sext i32 %add1348 to i64
  %938 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71350 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %938, i32 0, i32 52
  %arrayidx1351 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71350, i32 0, i64 %idxprom1349
  %arrayidx1352 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1351, i32 0, i64 %idxprom1347
  %939 = load i32, i32* %arrayidx1352, align 4
  %call1353 = call i32 @iabs(i32 %939)
  %940 = load i32, i32* %i, align 4
  %idxprom1354 = sext i32 %940 to i64
  %941 = load i32, i32* %j, align 4
  %idxprom1355 = sext i32 %941 to i64
  %942 = load i32, i32* %qp_rem, align 4
  %idxprom1356 = sext i32 %942 to i64
  %943 = load i32***, i32**** %levelscale, align 8
  %arrayidx1357 = getelementptr inbounds i32**, i32*** %943, i64 %idxprom1356
  %944 = load i32**, i32*** %arrayidx1357, align 8
  %arrayidx1358 = getelementptr inbounds i32*, i32** %944, i64 %idxprom1355
  %945 = load i32*, i32** %arrayidx1358, align 8
  %arrayidx1359 = getelementptr inbounds i32, i32* %945, i64 %idxprom1354
  %946 = load i32, i32* %arrayidx1359, align 4
  %mul1360 = mul nsw i32 %call1353, %946
  %947 = load i32, i32* %level, align 4
  %948 = load i32, i32* %q_bits, align 4
  %shl1361 = shl i32 %947, %948
  %sub1362 = sub nsw i32 %mul1360, %shl1361
  %mul1363 = mul nsw i32 %933, %sub1362
  %949 = load i32, i32* %q_bits, align 4
  %add1364 = add nsw i32 %949, 1
  %call1365 = call i32 @rshift_rnd_sf(i32 %mul1363, i32 %add1364)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond1366 = phi i32 [ 0, %cond.true ], [ %call1365, %cond.false ]
  %950 = load i32, i32* %n1, align 4
  %951 = load i32, i32* %i, align 4
  %add1367 = add nsw i32 %950, %951
  %idxprom1368 = sext i32 %add1367 to i64
  %952 = load i32, i32* %n2, align 4
  %953 = load i32, i32* %j, align 4
  %add1369 = add nsw i32 %952, %953
  %idxprom1370 = sext i32 %add1369 to i64
  %954 = load i32, i32* %uv.addr, align 4
  %idxprom1371 = sext i32 %954 to i64
  %955 = load i32, i32* %intra, align 4
  %idxprom1372 = sext i32 %955 to i64
  %956 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4Cr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %956, i32 0, i32 57
  %957 = load i32****, i32***** %fadjust4x4Cr, align 8
  %arrayidx1373 = getelementptr inbounds i32***, i32**** %957, i64 %idxprom1372
  %958 = load i32***, i32**** %arrayidx1373, align 8
  %arrayidx1374 = getelementptr inbounds i32**, i32*** %958, i64 %idxprom1371
  %959 = load i32**, i32*** %arrayidx1374, align 8
  %arrayidx1375 = getelementptr inbounds i32*, i32** %959, i64 %idxprom1370
  %960 = load i32*, i32** %arrayidx1375, align 8
  %arrayidx1376 = getelementptr inbounds i32, i32* %960, i64 %idxprom1368
  store i32 %cond1366, i32* %arrayidx1376, align 4
  br label %if.end.1377

if.end.1377:                                      ; preds = %cond.end, %for.body.1309
  %961 = load i32, i32* %level, align 4
  %cmp1378 = icmp ne i32 %961, 0
  br i1 %cmp1378, label %if.then.1380, label %if.end.1425

if.then.1380:                                     ; preds = %if.end.1377
  %962 = load i64, i64* %uv_cbpblk, align 8
  %963 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk1381 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %963, i32 0, i32 13
  %964 = load i64, i64* %cbp_blk1381, align 8
  %or1382 = or i64 %964, %962
  store i64 %or1382, i64* %cbp_blk1381, align 8
  %965 = load i32, i32* %level, align 4
  %cmp1383 = icmp sgt i32 %965, 1
  br i1 %cmp1383, label %cond.true.1385, label %cond.false.1386

cond.true.1385:                                   ; preds = %if.then.1380
  br label %cond.end.1392

cond.false.1386:                                  ; preds = %if.then.1380
  %966 = load i32, i32* %run, align 4
  %idxprom1387 = sext i32 %966 to i64
  %967 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %967, i32 0, i32 116
  %968 = load i32, i32* %disthres, align 4
  %idxprom1388 = sext i32 %968 to i64
  %arrayidx1389 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom1388
  %arrayidx1390 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx1389, i32 0, i64 %idxprom1387
  %969 = load i8, i8* %arrayidx1390, align 1
  %conv1391 = zext i8 %969 to i32
  br label %cond.end.1392

cond.end.1392:                                    ; preds = %cond.false.1386, %cond.true.1385
  %cond1393 = phi i32 [ 999999, %cond.true.1385 ], [ %conv1391, %cond.false.1386 ]
  %970 = load i32, i32* %coeff_cost, align 4
  %add1394 = add nsw i32 %970, %cond1393
  store i32 %add1394, i32* %coeff_cost, align 4
  store i32 2, i32* %cr_cbp_tmp, align 4
  %971 = load i32, i32* %level, align 4
  %972 = load i32, i32* %n1, align 4
  %973 = load i32, i32* %i, align 4
  %add1395 = add nsw i32 %972, %973
  %idxprom1396 = sext i32 %add1395 to i64
  %974 = load i32, i32* %n2, align 4
  %975 = load i32, i32* %j, align 4
  %add1397 = add nsw i32 %974, %975
  %idxprom1398 = sext i32 %add1397 to i64
  %976 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71399 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %976, i32 0, i32 52
  %arrayidx1400 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71399, i32 0, i64 %idxprom1398
  %arrayidx1401 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1400, i32 0, i64 %idxprom1396
  %977 = load i32, i32* %arrayidx1401, align 4
  %call1402 = call i32 @isignab(i32 %971, i32 %977)
  %978 = load i32, i32* %scan_pos, align 4
  %idxprom1403 = sext i32 %978 to i64
  %979 = load i32*, i32** %ACLevel, align 8
  %arrayidx1404 = getelementptr inbounds i32, i32* %979, i64 %idxprom1403
  store i32 %call1402, i32* %arrayidx1404, align 4
  %980 = load i32, i32* %run, align 4
  %981 = load i32, i32* %scan_pos, align 4
  %idxprom1405 = sext i32 %981 to i64
  %982 = load i32*, i32** %ACRun, align 8
  %arrayidx1406 = getelementptr inbounds i32, i32* %982, i64 %idxprom1405
  store i32 %980, i32* %arrayidx1406, align 4
  %983 = load i32, i32* %scan_pos, align 4
  %inc1407 = add nsw i32 %983, 1
  store i32 %inc1407, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %984 = load i32, i32* %level, align 4
  %985 = load i32, i32* %n1, align 4
  %986 = load i32, i32* %i, align 4
  %add1408 = add nsw i32 %985, %986
  %idxprom1409 = sext i32 %add1408 to i64
  %987 = load i32, i32* %n2, align 4
  %988 = load i32, i32* %j, align 4
  %add1410 = add nsw i32 %987, %988
  %idxprom1411 = sext i32 %add1410 to i64
  %989 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71412 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %989, i32 0, i32 52
  %arrayidx1413 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71412, i32 0, i64 %idxprom1411
  %arrayidx1414 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1413, i32 0, i64 %idxprom1409
  %990 = load i32, i32* %arrayidx1414, align 4
  %call1415 = call i32 @isignab(i32 %984, i32 %990)
  store i32 %call1415, i32* %level, align 4
  %991 = load i32, i32* %level, align 4
  %992 = load i32, i32* %i, align 4
  %idxprom1416 = sext i32 %992 to i64
  %993 = load i32, i32* %j, align 4
  %idxprom1417 = sext i32 %993 to i64
  %994 = load i32, i32* %qp_rem, align 4
  %idxprom1418 = sext i32 %994 to i64
  %995 = load i32***, i32**** %invlevelscale, align 8
  %arrayidx1419 = getelementptr inbounds i32**, i32*** %995, i64 %idxprom1418
  %996 = load i32**, i32*** %arrayidx1419, align 8
  %arrayidx1420 = getelementptr inbounds i32*, i32** %996, i64 %idxprom1417
  %997 = load i32*, i32** %arrayidx1420, align 8
  %arrayidx1421 = getelementptr inbounds i32, i32* %997, i64 %idxprom1416
  %998 = load i32, i32* %arrayidx1421, align 4
  %mul1422 = mul nsw i32 %991, %998
  %999 = load i32, i32* %qp_per, align 4
  %shl1423 = shl i32 %mul1422, %999
  %call1424 = call i32 @rshift_rnd_sf(i32 %shl1423, i32 4)
  store i32 %call1424, i32* %ilev, align 4
  br label %if.end.1425

if.end.1425:                                      ; preds = %cond.end.1392, %if.end.1377
  %1000 = load i32, i32* %ilev, align 4
  %1001 = load i32, i32* %n1, align 4
  %1002 = load i32, i32* %i, align 4
  %add1426 = add nsw i32 %1001, %1002
  %idxprom1427 = sext i32 %add1426 to i64
  %1003 = load i32, i32* %n2, align 4
  %1004 = load i32, i32* %j, align 4
  %add1428 = add nsw i32 %1003, %1004
  %idxprom1429 = sext i32 %add1428 to i64
  %1005 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71430 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1005, i32 0, i32 52
  %arrayidx1431 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71430, i32 0, i64 %idxprom1429
  %arrayidx1432 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1431, i32 0, i64 %idxprom1427
  store i32 %1000, i32* %arrayidx1432, align 4
  br label %for.inc.1433

for.inc.1433:                                     ; preds = %if.end.1425
  %1006 = load i32, i32* %coeff_ctr, align 4
  %inc1434 = add nsw i32 %1006, 1
  store i32 %inc1434, i32* %coeff_ctr, align 4
  br label %for.cond.1306

for.end.1435:                                     ; preds = %for.cond.1306
  br label %if.end.1504

if.else.1436:                                     ; preds = %for.body.1266
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.1437

for.cond.1437:                                    ; preds = %for.inc.1501, %if.else.1436
  %1007 = load i32, i32* %coeff_ctr, align 4
  %cmp1438 = icmp slt i32 %1007, 16
  br i1 %cmp1438, label %for.body.1440, label %for.end.1503

for.body.1440:                                    ; preds = %for.cond.1437
  %1008 = load i32, i32* %coeff_ctr, align 4
  %idxprom1441 = sext i32 %1008 to i64
  %1009 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1442 = getelementptr inbounds [2 x i8], [2 x i8]* %1009, i64 %idxprom1441
  %arrayidx1443 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1442, i32 0, i64 0
  %1010 = load i8, i8* %arrayidx1443, align 1
  %conv1444 = zext i8 %1010 to i32
  store i32 %conv1444, i32* %i, align 4
  %1011 = load i32, i32* %coeff_ctr, align 4
  %idxprom1445 = sext i32 %1011 to i64
  %1012 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1446 = getelementptr inbounds [2 x i8], [2 x i8]* %1012, i64 %idxprom1445
  %arrayidx1447 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1446, i32 0, i64 1
  %1013 = load i8, i8* %arrayidx1447, align 1
  %conv1448 = zext i8 %1013 to i32
  store i32 %conv1448, i32* %j, align 4
  %1014 = load i32, i32* %run, align 4
  %inc1449 = add nsw i32 %1014, 1
  store i32 %inc1449, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %1015 = load i32, i32* %n1, align 4
  %1016 = load i32, i32* %i, align 4
  %add1450 = add nsw i32 %1015, %1016
  %idxprom1451 = sext i32 %add1450 to i64
  %1017 = load i32, i32* %n2, align 4
  %1018 = load i32, i32* %j, align 4
  %add1452 = add nsw i32 %1017, %1018
  %idxprom1453 = sext i32 %add1452 to i64
  %1019 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71454 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1019, i32 0, i32 52
  %arrayidx1455 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71454, i32 0, i64 %idxprom1453
  %arrayidx1456 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1455, i32 0, i64 %idxprom1451
  %1020 = load i32, i32* %arrayidx1456, align 4
  %call1457 = call i32 @iabs(i32 %1020)
  store i32 %call1457, i32* %level, align 4
  %1021 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %AdaptiveRounding1458 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1021, i32 0, i32 98
  %1022 = load i32, i32* %AdaptiveRounding1458, align 4
  %tobool1459 = icmp ne i32 %1022, 0
  br i1 %tobool1459, label %if.then.1460, label %if.end.1472

if.then.1460:                                     ; preds = %for.body.1440
  %1023 = load i32, i32* %n1, align 4
  %1024 = load i32, i32* %i, align 4
  %add1461 = add nsw i32 %1023, %1024
  %idxprom1462 = sext i32 %add1461 to i64
  %1025 = load i32, i32* %n2, align 4
  %1026 = load i32, i32* %j, align 4
  %add1463 = add nsw i32 %1025, %1026
  %idxprom1464 = sext i32 %add1463 to i64
  %1027 = load i32, i32* %uv.addr, align 4
  %idxprom1465 = sext i32 %1027 to i64
  %1028 = load i32, i32* %intra, align 4
  %idxprom1466 = sext i32 %1028 to i64
  %1029 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %fadjust4x4Cr1467 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1029, i32 0, i32 57
  %1030 = load i32****, i32***** %fadjust4x4Cr1467, align 8
  %arrayidx1468 = getelementptr inbounds i32***, i32**** %1030, i64 %idxprom1466
  %1031 = load i32***, i32**** %arrayidx1468, align 8
  %arrayidx1469 = getelementptr inbounds i32**, i32*** %1031, i64 %idxprom1465
  %1032 = load i32**, i32*** %arrayidx1469, align 8
  %arrayidx1470 = getelementptr inbounds i32*, i32** %1032, i64 %idxprom1464
  %1033 = load i32*, i32** %arrayidx1470, align 8
  %arrayidx1471 = getelementptr inbounds i32, i32* %1033, i64 %idxprom1462
  store i32 0, i32* %arrayidx1471, align 4
  br label %if.end.1472

if.end.1472:                                      ; preds = %if.then.1460, %for.body.1440
  %1034 = load i32, i32* %level, align 4
  %cmp1473 = icmp ne i32 %1034, 0
  br i1 %cmp1473, label %if.then.1475, label %if.end.1500

if.then.1475:                                     ; preds = %if.end.1472
  %1035 = load i64, i64* %uv_cbpblk, align 8
  %1036 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk1476 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1036, i32 0, i32 13
  %1037 = load i64, i64* %cbp_blk1476, align 8
  %or1477 = or i64 %1037, %1035
  store i64 %or1477, i64* %cbp_blk1476, align 8
  %1038 = load i32, i32* %coeff_cost, align 4
  %add1478 = add nsw i32 %1038, 999999
  store i32 %add1478, i32* %coeff_cost, align 4
  store i32 2, i32* %cr_cbp_tmp, align 4
  %1039 = load i32, i32* %level, align 4
  %1040 = load i32, i32* %n1, align 4
  %1041 = load i32, i32* %i, align 4
  %add1479 = add nsw i32 %1040, %1041
  %idxprom1480 = sext i32 %add1479 to i64
  %1042 = load i32, i32* %n2, align 4
  %1043 = load i32, i32* %j, align 4
  %add1481 = add nsw i32 %1042, %1043
  %idxprom1482 = sext i32 %add1481 to i64
  %1044 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71483 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1044, i32 0, i32 52
  %arrayidx1484 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71483, i32 0, i64 %idxprom1482
  %arrayidx1485 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1484, i32 0, i64 %idxprom1480
  %1045 = load i32, i32* %arrayidx1485, align 4
  %call1486 = call i32 @isignab(i32 %1039, i32 %1045)
  %1046 = load i32, i32* %scan_pos, align 4
  %idxprom1487 = sext i32 %1046 to i64
  %1047 = load i32*, i32** %ACLevel, align 8
  %arrayidx1488 = getelementptr inbounds i32, i32* %1047, i64 %idxprom1487
  store i32 %call1486, i32* %arrayidx1488, align 4
  %1048 = load i32, i32* %run, align 4
  %1049 = load i32, i32* %scan_pos, align 4
  %idxprom1489 = sext i32 %1049 to i64
  %1050 = load i32*, i32** %ACRun, align 8
  %arrayidx1490 = getelementptr inbounds i32, i32* %1050, i64 %idxprom1489
  store i32 %1048, i32* %arrayidx1490, align 4
  %1051 = load i32, i32* %scan_pos, align 4
  %inc1491 = add nsw i32 %1051, 1
  store i32 %inc1491, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %1052 = load i32, i32* %level, align 4
  %1053 = load i32, i32* %n1, align 4
  %1054 = load i32, i32* %i, align 4
  %add1492 = add nsw i32 %1053, %1054
  %idxprom1493 = sext i32 %add1492 to i64
  %1055 = load i32, i32* %n2, align 4
  %1056 = load i32, i32* %j, align 4
  %add1494 = add nsw i32 %1055, %1056
  %idxprom1495 = sext i32 %add1494 to i64
  %1057 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71496 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1057, i32 0, i32 52
  %arrayidx1497 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71496, i32 0, i64 %idxprom1495
  %arrayidx1498 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1497, i32 0, i64 %idxprom1493
  %1058 = load i32, i32* %arrayidx1498, align 4
  %call1499 = call i32 @isignab(i32 %1052, i32 %1058)
  store i32 %call1499, i32* %level, align 4
  %1059 = load i32, i32* %level, align 4
  store i32 %1059, i32* %ilev, align 4
  br label %if.end.1500

if.end.1500:                                      ; preds = %if.then.1475, %if.end.1472
  br label %for.inc.1501

for.inc.1501:                                     ; preds = %if.end.1500
  %1060 = load i32, i32* %coeff_ctr, align 4
  %inc1502 = add nsw i32 %1060, 1
  store i32 %inc1502, i32* %coeff_ctr, align 4
  br label %for.cond.1437

for.end.1503:                                     ; preds = %for.cond.1437
  br label %if.end.1504

if.end.1504:                                      ; preds = %for.end.1503, %for.end.1435
  %1061 = load i32, i32* %scan_pos, align 4
  %idxprom1505 = sext i32 %1061 to i64
  %1062 = load i32*, i32** %ACLevel, align 8
  %arrayidx1506 = getelementptr inbounds i32, i32* %1062, i64 %idxprom1505
  store i32 0, i32* %arrayidx1506, align 4
  br label %for.inc.1507

for.inc.1507:                                     ; preds = %if.end.1504
  %1063 = load i32, i32* %b4, align 4
  %inc1508 = add nsw i32 %1063, 1
  store i32 %inc1508, i32* %b4, align 4
  br label %for.cond.1263

for.end.1509:                                     ; preds = %for.cond.1263
  br label %for.inc.1510

for.inc.1510:                                     ; preds = %for.end.1509
  %1064 = load i32, i32* %b8, align 4
  %inc1511 = add nsw i32 %1064, 1
  store i32 %inc1511, i32* %b8, align 4
  br label %for.cond.1257

for.end.1512:                                     ; preds = %for.cond.1257
  %1065 = load i32, i32* %lossless_qpprime, align 4
  %tobool1513 = icmp ne i32 %1065, 0
  br i1 %tobool1513, label %if.else.1811, label %if.then.1514

if.then.1514:                                     ; preds = %for.end.1512
  %1066 = load i32, i32* %coeff_cost, align 4
  %cmp1515 = icmp slt i32 %1066, 4
  br i1 %cmp1515, label %if.then.1517, label %if.end.1601

if.then.1517:                                     ; preds = %if.then.1514
  %1067 = load i32, i32* %yuv, align 4
  %idxprom1519 = sext i32 %1067 to i64
  %arrayidx1520 = getelementptr inbounds [4 x i64], [4 x i64]* @dct_chroma.cbpblk_pattern, i32 0, i64 %idxprom1519
  %1068 = load i64, i64* %arrayidx1520, align 8
  %1069 = load i32, i32* %uv.addr, align 4
  %1070 = load i32, i32* %yuv, align 4
  %add1521 = add nsw i32 1, %1070
  %shl1522 = shl i32 %1069, %add1521
  %sh_prom1523 = zext i32 %shl1522 to i64
  %shl1524 = shl i64 %1068, %sh_prom1523
  store i64 %shl1524, i64* %uv_cbpblk1518, align 8
  store i32 0, i32* %cr_cbp_tmp, align 4
  store i32 0, i32* %b8, align 4
  br label %for.cond.1525

for.cond.1525:                                    ; preds = %for.inc.1598, %if.then.1517
  %1071 = load i32, i32* %b8, align 4
  %1072 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv1526 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1072, i32 0, i32 158
  %1073 = load i32, i32* %num_blk8x8_uv1526, align 4
  %shr1527 = ashr i32 %1073, 1
  %cmp1528 = icmp slt i32 %1071, %shr1527
  br i1 %cmp1528, label %for.body.1530, label %for.end.1600

for.body.1530:                                    ; preds = %for.cond.1525
  store i32 0, i32* %b4, align 4
  br label %for.cond.1531

for.cond.1531:                                    ; preds = %for.inc.1595, %for.body.1530
  %1074 = load i32, i32* %b4, align 4
  %cmp1532 = icmp slt i32 %1074, 4
  br i1 %cmp1532, label %for.body.1534, label %for.end.1597

for.body.1534:                                    ; preds = %for.cond.1531
  %1075 = load i32, i32* %b4, align 4
  %idxprom1535 = sext i32 %1075 to i64
  %1076 = load i32, i32* %b8, align 4
  %idxprom1536 = sext i32 %1076 to i64
  %1077 = load i32, i32* %yuv, align 4
  %idxprom1537 = sext i32 %1077 to i64
  %arrayidx1538 = getelementptr inbounds [4 x [4 x [4 x i8]]], [4 x [4 x [4 x i8]]]* @hor_offset, i32 0, i64 %idxprom1537
  %arrayidx1539 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx1538, i32 0, i64 %idxprom1536
  %arrayidx1540 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1539, i32 0, i64 %idxprom1535
  %1078 = load i8, i8* %arrayidx1540, align 1
  %conv1541 = zext i8 %1078 to i32
  store i32 %conv1541, i32* %n1, align 4
  %1079 = load i32, i32* %b4, align 4
  %idxprom1542 = sext i32 %1079 to i64
  %1080 = load i32, i32* %b8, align 4
  %idxprom1543 = sext i32 %1080 to i64
  %1081 = load i32, i32* %yuv, align 4
  %idxprom1544 = sext i32 %1081 to i64
  %arrayidx1545 = getelementptr inbounds [4 x [4 x [4 x i8]]], [4 x [4 x [4 x i8]]]* @ver_offset, i32 0, i64 %idxprom1544
  %arrayidx1546 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx1545, i32 0, i64 %idxprom1543
  %arrayidx1547 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1546, i32 0, i64 %idxprom1542
  %1082 = load i8, i8* %arrayidx1547, align 1
  %conv1548 = zext i8 %1082 to i32
  store i32 %conv1548, i32* %n2, align 4
  %1083 = load i32, i32* %b4, align 4
  %idxprom1549 = sext i32 %1083 to i64
  %1084 = load i32, i32* %b8, align 4
  %add1550 = add nsw i32 4, %1084
  %1085 = load i32, i32* %uv_scale, align 4
  %add1551 = add nsw i32 %add1550, %1085
  %idxprom1552 = sext i32 %add1551 to i64
  %1086 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC1553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1086, i32 0, i32 53
  %1087 = load i32****, i32***** %cofAC1553, align 8
  %arrayidx1554 = getelementptr inbounds i32***, i32**** %1087, i64 %idxprom1552
  %1088 = load i32***, i32**** %arrayidx1554, align 8
  %arrayidx1555 = getelementptr inbounds i32**, i32*** %1088, i64 %idxprom1549
  %1089 = load i32**, i32*** %arrayidx1555, align 8
  %arrayidx1556 = getelementptr inbounds i32*, i32** %1089, i64 0
  %1090 = load i32*, i32** %arrayidx1556, align 8
  store i32* %1090, i32** %ACLevel, align 8
  %1091 = load i32, i32* %b4, align 4
  %idxprom1557 = sext i32 %1091 to i64
  %1092 = load i32, i32* %b8, align 4
  %add1558 = add nsw i32 4, %1092
  %1093 = load i32, i32* %uv_scale, align 4
  %add1559 = add nsw i32 %add1558, %1093
  %idxprom1560 = sext i32 %add1559 to i64
  %1094 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC1561 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1094, i32 0, i32 53
  %1095 = load i32****, i32***** %cofAC1561, align 8
  %arrayidx1562 = getelementptr inbounds i32***, i32**** %1095, i64 %idxprom1560
  %1096 = load i32***, i32**** %arrayidx1562, align 8
  %arrayidx1563 = getelementptr inbounds i32**, i32*** %1096, i64 %idxprom1557
  %1097 = load i32**, i32*** %arrayidx1563, align 8
  %arrayidx1564 = getelementptr inbounds i32*, i32** %1097, i64 1
  %1098 = load i32*, i32** %arrayidx1564, align 8
  store i32* %1098, i32** %ACRun, align 8
  %1099 = load i32, i32* %DCcoded, align 4
  %cmp1565 = icmp eq i32 %1099, 0
  br i1 %cmp1565, label %if.then.1567, label %if.end.1569

if.then.1567:                                     ; preds = %for.body.1534
  %1100 = load i64, i64* %uv_cbpblk1518, align 8
  %neg = xor i64 %1100, -1
  %1101 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk1568 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1101, i32 0, i32 13
  %1102 = load i64, i64* %cbp_blk1568, align 8
  %and = and i64 %1102, %neg
  store i64 %and, i64* %cbp_blk1568, align 8
  br label %if.end.1569

if.end.1569:                                      ; preds = %if.then.1567, %for.body.1534
  %1103 = load i32*, i32** %ACLevel, align 8
  %arrayidx1570 = getelementptr inbounds i32, i32* %1103, i64 0
  store i32 0, i32* %arrayidx1570, align 4
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.1571

for.cond.1571:                                    ; preds = %for.inc.1592, %if.end.1569
  %1104 = load i32, i32* %coeff_ctr, align 4
  %cmp1572 = icmp slt i32 %1104, 16
  br i1 %cmp1572, label %for.body.1574, label %for.end.1594

for.body.1574:                                    ; preds = %for.cond.1571
  %1105 = load i32, i32* %coeff_ctr, align 4
  %idxprom1575 = sext i32 %1105 to i64
  %1106 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1576 = getelementptr inbounds [2 x i8], [2 x i8]* %1106, i64 %idxprom1575
  %arrayidx1577 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1576, i32 0, i64 0
  %1107 = load i8, i8* %arrayidx1577, align 1
  %conv1578 = zext i8 %1107 to i32
  store i32 %conv1578, i32* %i, align 4
  %1108 = load i32, i32* %coeff_ctr, align 4
  %idxprom1579 = sext i32 %1108 to i64
  %1109 = load [2 x i8]*, [2 x i8]** %pos_scan, align 8
  %arrayidx1580 = getelementptr inbounds [2 x i8], [2 x i8]* %1109, i64 %idxprom1579
  %arrayidx1581 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx1580, i32 0, i64 1
  %1110 = load i8, i8* %arrayidx1581, align 1
  %conv1582 = zext i8 %1110 to i32
  store i32 %conv1582, i32* %j, align 4
  %1111 = load i32, i32* %n1, align 4
  %1112 = load i32, i32* %i, align 4
  %add1583 = add nsw i32 %1111, %1112
  %idxprom1584 = sext i32 %add1583 to i64
  %1113 = load i32, i32* %n2, align 4
  %1114 = load i32, i32* %j, align 4
  %add1585 = add nsw i32 %1113, %1114
  %idxprom1586 = sext i32 %add1585 to i64
  %1115 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71587 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1115, i32 0, i32 52
  %arrayidx1588 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71587, i32 0, i64 %idxprom1586
  %arrayidx1589 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1588, i32 0, i64 %idxprom1584
  store i32 0, i32* %arrayidx1589, align 4
  %1116 = load i32, i32* %coeff_ctr, align 4
  %idxprom1590 = sext i32 %1116 to i64
  %1117 = load i32*, i32** %ACLevel, align 8
  %arrayidx1591 = getelementptr inbounds i32, i32* %1117, i64 %idxprom1590
  store i32 0, i32* %arrayidx1591, align 4
  br label %for.inc.1592

for.inc.1592:                                     ; preds = %for.body.1574
  %1118 = load i32, i32* %coeff_ctr, align 4
  %inc1593 = add nsw i32 %1118, 1
  store i32 %inc1593, i32* %coeff_ctr, align 4
  br label %for.cond.1571

for.end.1594:                                     ; preds = %for.cond.1571
  br label %for.inc.1595

for.inc.1595:                                     ; preds = %for.end.1594
  %1119 = load i32, i32* %b4, align 4
  %inc1596 = add nsw i32 %1119, 1
  store i32 %inc1596, i32* %b4, align 4
  br label %for.cond.1531

for.end.1597:                                     ; preds = %for.cond.1531
  br label %for.inc.1598

for.inc.1598:                                     ; preds = %for.end.1597
  %1120 = load i32, i32* %b8, align 4
  %inc1599 = add nsw i32 %1120, 1
  store i32 %inc1599, i32* %b8, align 4
  br label %for.cond.1525

for.end.1600:                                     ; preds = %for.cond.1525
  br label %if.end.1601

if.end.1601:                                      ; preds = %for.end.1600, %if.then.1514
  %1121 = load i32, i32* %cr_cbp_tmp, align 4
  %cmp1602 = icmp eq i32 %1121, 2
  br i1 %cmp1602, label %if.then.1604, label %if.end.1605

if.then.1604:                                     ; preds = %if.end.1601
  store i32 2, i32* %cr_cbp.addr, align 4
  br label %if.end.1605

if.end.1605:                                      ; preds = %if.then.1604, %if.end.1601
  store i32 0, i32* %n2, align 4
  br label %for.cond.1606

for.cond.1606:                                    ; preds = %for.inc.1774, %if.end.1605
  %1122 = load i32, i32* %n2, align 4
  %1123 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y1607 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1123, i32 0, i32 163
  %1124 = load i32, i32* %mb_cr_size_y1607, align 4
  %cmp1608 = icmp slt i32 %1122, %1124
  br i1 %cmp1608, label %for.body.1610, label %for.end.1776

for.body.1610:                                    ; preds = %for.cond.1606
  store i32 0, i32* %n1, align 4
  br label %for.cond.1611

for.cond.1611:                                    ; preds = %for.inc.1771, %for.body.1610
  %1125 = load i32, i32* %n1, align 4
  %1126 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x1612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1126, i32 0, i32 162
  %1127 = load i32, i32* %mb_cr_size_x1612, align 4
  %cmp1613 = icmp slt i32 %1125, %1127
  br i1 %cmp1613, label %for.body.1615, label %for.end.1773

for.body.1615:                                    ; preds = %for.cond.1611
  store i32 0, i32* %j, align 4
  br label %for.cond.1616

for.cond.1616:                                    ; preds = %for.inc.1659, %for.body.1615
  %1128 = load i32, i32* %j, align 4
  %cmp1617 = icmp slt i32 %1128, 4
  br i1 %cmp1617, label %for.body.1619, label %for.end.1661

for.body.1619:                                    ; preds = %for.cond.1616
  %1129 = load i32, i32* %n2, align 4
  %1130 = load i32, i32* %j, align 4
  %add1620 = add nsw i32 %1129, %1130
  store i32 %add1620, i32* %j2, align 4
  %1131 = load i32, i32* %n1, align 4
  %idxprom1621 = sext i32 %1131 to i64
  %1132 = load i32, i32* %j2, align 4
  %idxprom1622 = sext i32 %1132 to i64
  %1133 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71623 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1133, i32 0, i32 52
  %arrayidx1624 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71623, i32 0, i64 %idxprom1622
  %arrayidx1625 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1624, i32 0, i64 %idxprom1621
  %1134 = bitcast i32* %arrayidx1625 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([4 x i32]* @dct_chroma.m5 to i8*), i8* %1134, i64 16, i32 4, i1 false)
  %1135 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %1136 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add1626 = add nsw i32 %1135, %1136
  store i32 %add1626, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1137 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %1138 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %sub1627 = sub nsw i32 %1137, %1138
  store i32 %sub1627, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1139 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %shr1628 = ashr i32 %1139, 1
  %1140 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %sub1629 = sub nsw i32 %shr1628, %1140
  store i32 %sub1629, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %1141 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %1142 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %shr1630 = ashr i32 %1142, 1
  %add1631 = add nsw i32 %1141, %shr1630
  store i32 %add1631, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %1143 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1144 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add1632 = add nsw i32 %1143, %1144
  %1145 = load i32, i32* %n1, align 4
  %idxprom1633 = sext i32 %1145 to i64
  %1146 = load i32, i32* %j2, align 4
  %idxprom1634 = sext i32 %1146 to i64
  %1147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71635 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1147, i32 0, i32 52
  %arrayidx1636 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71635, i32 0, i64 %idxprom1634
  %arrayidx1637 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1636, i32 0, i64 %idxprom1633
  store i32 %add1632, i32* %arrayidx1637, align 4
  %1148 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1149 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add1638 = add nsw i32 %1148, %1149
  %1150 = load i32, i32* %n1, align 4
  %add1639 = add nsw i32 %1150, 1
  %idxprom1640 = sext i32 %add1639 to i64
  %1151 = load i32, i32* %j2, align 4
  %idxprom1641 = sext i32 %1151 to i64
  %1152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71642 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1152, i32 0, i32 52
  %arrayidx1643 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71642, i32 0, i64 %idxprom1641
  %arrayidx1644 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1643, i32 0, i64 %idxprom1640
  store i32 %add1638, i32* %arrayidx1644, align 4
  %1153 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1154 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub1645 = sub nsw i32 %1153, %1154
  %1155 = load i32, i32* %n1, align 4
  %add1646 = add nsw i32 %1155, 2
  %idxprom1647 = sext i32 %add1646 to i64
  %1156 = load i32, i32* %j2, align 4
  %idxprom1648 = sext i32 %1156 to i64
  %1157 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71649 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1157, i32 0, i32 52
  %arrayidx1650 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71649, i32 0, i64 %idxprom1648
  %arrayidx1651 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1650, i32 0, i64 %idxprom1647
  store i32 %sub1645, i32* %arrayidx1651, align 4
  %1158 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1159 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub1652 = sub nsw i32 %1158, %1159
  %1160 = load i32, i32* %n1, align 4
  %add1653 = add nsw i32 %1160, 3
  %idxprom1654 = sext i32 %add1653 to i64
  %1161 = load i32, i32* %j2, align 4
  %idxprom1655 = sext i32 %1161 to i64
  %1162 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71656 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1162, i32 0, i32 52
  %arrayidx1657 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71656, i32 0, i64 %idxprom1655
  %arrayidx1658 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1657, i32 0, i64 %idxprom1654
  store i32 %sub1652, i32* %arrayidx1658, align 4
  br label %for.inc.1659

for.inc.1659:                                     ; preds = %for.body.1619
  %1163 = load i32, i32* %j, align 4
  %inc1660 = add nsw i32 %1163, 1
  store i32 %inc1660, i32* %j, align 4
  br label %for.cond.1616

for.end.1661:                                     ; preds = %for.cond.1616
  store i32 0, i32* %i, align 4
  br label %for.cond.1662

for.cond.1662:                                    ; preds = %for.inc.1768, %for.end.1661
  %1164 = load i32, i32* %i, align 4
  %cmp1663 = icmp slt i32 %1164, 4
  br i1 %cmp1663, label %for.body.1665, label %for.end.1770

for.body.1665:                                    ; preds = %for.cond.1662
  %1165 = load i32, i32* %n1, align 4
  %1166 = load i32, i32* %i, align 4
  %add1666 = add nsw i32 %1165, %1166
  store i32 %add1666, i32* %i1, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.1667

for.cond.1667:                                    ; preds = %for.inc.1679, %for.body.1665
  %1167 = load i32, i32* %j, align 4
  %cmp1668 = icmp slt i32 %1167, 4
  br i1 %cmp1668, label %for.body.1670, label %for.end.1681

for.body.1670:                                    ; preds = %for.cond.1667
  %1168 = load i32, i32* %i1, align 4
  %idxprom1671 = sext i32 %1168 to i64
  %1169 = load i32, i32* %n2, align 4
  %1170 = load i32, i32* %j, align 4
  %add1672 = add nsw i32 %1169, %1170
  %idxprom1673 = sext i32 %add1672 to i64
  %1171 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71674 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1171, i32 0, i32 52
  %arrayidx1675 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71674, i32 0, i64 %idxprom1673
  %arrayidx1676 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1675, i32 0, i64 %idxprom1671
  %1172 = load i32, i32* %arrayidx1676, align 4
  %1173 = load i32, i32* %j, align 4
  %idxprom1677 = sext i32 %1173 to i64
  %arrayidx1678 = getelementptr inbounds [4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 %idxprom1677
  store i32 %1172, i32* %arrayidx1678, align 4
  br label %for.inc.1679

for.inc.1679:                                     ; preds = %for.body.1670
  %1174 = load i32, i32* %j, align 4
  %inc1680 = add nsw i32 %1174, 1
  store i32 %inc1680, i32* %j, align 4
  br label %for.cond.1667

for.end.1681:                                     ; preds = %for.cond.1667
  %1175 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %1176 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %add1682 = add nsw i32 %1175, %1176
  store i32 %add1682, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1177 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 0), align 4
  %1178 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 2), align 4
  %sub1683 = sub nsw i32 %1177, %1178
  store i32 %sub1683, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1179 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %shr1684 = ashr i32 %1179, 1
  %1180 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %sub1685 = sub nsw i32 %shr1684, %1180
  store i32 %sub1685, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %1181 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 1), align 4
  %1182 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m5, i32 0, i64 3), align 4
  %shr1686 = ashr i32 %1182, 1
  %add1687 = add nsw i32 %1181, %shr1686
  store i32 %add1687, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %1183 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1183, i32 0, i32 157
  %1184 = load i32, i32* %max_imgpel_value_uv, align 4
  %1185 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1186 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %add1688 = add nsw i32 %1185, %1186
  %conv1689 = sext i32 %add1688 to i64
  %1187 = load i32, i32* %i1, align 4
  %idxprom1690 = sext i32 %1187 to i64
  %1188 = load i32, i32* %n2, align 4
  %idxprom1691 = sext i32 %1188 to i64
  %1189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1189, i32 0, i32 51
  %arrayidx1692 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom1691
  %arrayidx1693 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1692, i32 0, i64 %idxprom1690
  %1190 = load i16, i16* %arrayidx1693, align 2
  %conv1694 = zext i16 %1190 to i64
  %shl1695 = shl i64 %conv1694, 6
  %add1696 = add nsw i64 %conv1689, %shl1695
  %conv1697 = trunc i64 %add1696 to i32
  %call1698 = call i32 @rshift_rnd_sf(i32 %conv1697, i32 6)
  %call1699 = call i32 @iClip1(i32 %1184, i32 %call1698)
  %1191 = load i32, i32* %i1, align 4
  %idxprom1700 = sext i32 %1191 to i64
  %1192 = load i32, i32* %n2, align 4
  %idxprom1701 = sext i32 %1192 to i64
  %1193 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71702 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1193, i32 0, i32 52
  %arrayidx1703 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71702, i32 0, i64 %idxprom1701
  %arrayidx1704 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1703, i32 0, i64 %idxprom1700
  store i32 %call1699, i32* %arrayidx1704, align 4
  %1194 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv1705 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1194, i32 0, i32 157
  %1195 = load i32, i32* %max_imgpel_value_uv1705, align 4
  %1196 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1197 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %add1706 = add nsw i32 %1196, %1197
  %conv1707 = sext i32 %add1706 to i64
  %1198 = load i32, i32* %i1, align 4
  %idxprom1708 = sext i32 %1198 to i64
  %1199 = load i32, i32* %n2, align 4
  %add1709 = add nsw i32 %1199, 1
  %idxprom1710 = sext i32 %add1709 to i64
  %1200 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr1711 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1200, i32 0, i32 51
  %arrayidx1712 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr1711, i32 0, i64 %idxprom1710
  %arrayidx1713 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1712, i32 0, i64 %idxprom1708
  %1201 = load i16, i16* %arrayidx1713, align 2
  %conv1714 = zext i16 %1201 to i64
  %shl1715 = shl i64 %conv1714, 6
  %add1716 = add nsw i64 %conv1707, %shl1715
  %conv1717 = trunc i64 %add1716 to i32
  %call1718 = call i32 @rshift_rnd_sf(i32 %conv1717, i32 6)
  %call1719 = call i32 @iClip1(i32 %1195, i32 %call1718)
  %1202 = load i32, i32* %i1, align 4
  %idxprom1720 = sext i32 %1202 to i64
  %1203 = load i32, i32* %n2, align 4
  %add1721 = add nsw i32 %1203, 1
  %idxprom1722 = sext i32 %add1721 to i64
  %1204 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71723 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1204, i32 0, i32 52
  %arrayidx1724 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71723, i32 0, i64 %idxprom1722
  %arrayidx1725 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1724, i32 0, i64 %idxprom1720
  store i32 %call1719, i32* %arrayidx1725, align 4
  %1205 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv1726 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1205, i32 0, i32 157
  %1206 = load i32, i32* %max_imgpel_value_uv1726, align 4
  %1207 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 1), align 4
  %1208 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 2), align 4
  %sub1727 = sub nsw i32 %1207, %1208
  %conv1728 = sext i32 %sub1727 to i64
  %1209 = load i32, i32* %i1, align 4
  %idxprom1729 = sext i32 %1209 to i64
  %1210 = load i32, i32* %n2, align 4
  %add1730 = add nsw i32 %1210, 2
  %idxprom1731 = sext i32 %add1730 to i64
  %1211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr1732 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1211, i32 0, i32 51
  %arrayidx1733 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr1732, i32 0, i64 %idxprom1731
  %arrayidx1734 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1733, i32 0, i64 %idxprom1729
  %1212 = load i16, i16* %arrayidx1734, align 2
  %conv1735 = zext i16 %1212 to i64
  %shl1736 = shl i64 %conv1735, 6
  %add1737 = add nsw i64 %conv1728, %shl1736
  %conv1738 = trunc i64 %add1737 to i32
  %call1739 = call i32 @rshift_rnd_sf(i32 %conv1738, i32 6)
  %call1740 = call i32 @iClip1(i32 %1206, i32 %call1739)
  %1213 = load i32, i32* %i1, align 4
  %idxprom1741 = sext i32 %1213 to i64
  %1214 = load i32, i32* %n2, align 4
  %add1742 = add nsw i32 %1214, 2
  %idxprom1743 = sext i32 %add1742 to i64
  %1215 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71744 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1215, i32 0, i32 52
  %arrayidx1745 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71744, i32 0, i64 %idxprom1743
  %arrayidx1746 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1745, i32 0, i64 %idxprom1741
  store i32 %call1740, i32* %arrayidx1746, align 4
  %1216 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv1747 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1216, i32 0, i32 157
  %1217 = load i32, i32* %max_imgpel_value_uv1747, align 4
  %1218 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 0), align 4
  %1219 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @dct_chroma.m6, i32 0, i64 3), align 4
  %sub1748 = sub nsw i32 %1218, %1219
  %conv1749 = sext i32 %sub1748 to i64
  %1220 = load i32, i32* %i1, align 4
  %idxprom1750 = sext i32 %1220 to i64
  %1221 = load i32, i32* %n2, align 4
  %add1751 = add nsw i32 %1221, 3
  %idxprom1752 = sext i32 %add1751 to i64
  %1222 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr1753 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1222, i32 0, i32 51
  %arrayidx1754 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr1753, i32 0, i64 %idxprom1752
  %arrayidx1755 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1754, i32 0, i64 %idxprom1750
  %1223 = load i16, i16* %arrayidx1755, align 2
  %conv1756 = zext i16 %1223 to i64
  %shl1757 = shl i64 %conv1756, 6
  %add1758 = add nsw i64 %conv1749, %shl1757
  %conv1759 = trunc i64 %add1758 to i32
  %call1760 = call i32 @rshift_rnd_sf(i32 %conv1759, i32 6)
  %call1761 = call i32 @iClip1(i32 %1217, i32 %call1760)
  %1224 = load i32, i32* %i1, align 4
  %idxprom1762 = sext i32 %1224 to i64
  %1225 = load i32, i32* %n2, align 4
  %add1763 = add nsw i32 %1225, 3
  %idxprom1764 = sext i32 %add1763 to i64
  %1226 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71765 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1226, i32 0, i32 52
  %arrayidx1766 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71765, i32 0, i64 %idxprom1764
  %arrayidx1767 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1766, i32 0, i64 %idxprom1762
  store i32 %call1761, i32* %arrayidx1767, align 4
  br label %for.inc.1768

for.inc.1768:                                     ; preds = %for.end.1681
  %1227 = load i32, i32* %i, align 4
  %inc1769 = add nsw i32 %1227, 1
  store i32 %inc1769, i32* %i, align 4
  br label %for.cond.1662

for.end.1770:                                     ; preds = %for.cond.1662
  br label %for.inc.1771

for.inc.1771:                                     ; preds = %for.end.1770
  %1228 = load i32, i32* %n1, align 4
  %add1772 = add nsw i32 %1228, 4
  store i32 %add1772, i32* %n1, align 4
  br label %for.cond.1611

for.end.1773:                                     ; preds = %for.cond.1611
  br label %for.inc.1774

for.inc.1774:                                     ; preds = %for.end.1773
  %1229 = load i32, i32* %n2, align 4
  %add1775 = add nsw i32 %1229, 4
  store i32 %add1775, i32* %n2, align 4
  br label %for.cond.1606

for.end.1776:                                     ; preds = %for.cond.1606
  store i32 0, i32* %j, align 4
  br label %for.cond.1777

for.cond.1777:                                    ; preds = %for.inc.1808, %for.end.1776
  %1230 = load i32, i32* %j, align 4
  %1231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y1778 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1231, i32 0, i32 163
  %1232 = load i32, i32* %mb_cr_size_y1778, align 4
  %cmp1779 = icmp slt i32 %1230, %1232
  br i1 %cmp1779, label %for.body.1781, label %for.end.1810

for.body.1781:                                    ; preds = %for.cond.1777
  %1233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y1782 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1233, i32 0, i32 42
  %1234 = load i32, i32* %pix_c_y1782, align 4
  %1235 = load i32, i32* %j, align 4
  %add1783 = add nsw i32 %1234, %1235
  %conv1784 = trunc i32 %add1783 to i16
  store i16 %conv1784, i16* %pix_c_y, align 2
  store i32 0, i32* %i, align 4
  br label %for.cond.1785

for.cond.1785:                                    ; preds = %for.inc.1805, %for.body.1781
  %1236 = load i32, i32* %i, align 4
  %1237 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x1786 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1237, i32 0, i32 162
  %1238 = load i32, i32* %mb_cr_size_x1786, align 4
  %cmp1787 = icmp slt i32 %1236, %1238
  br i1 %cmp1787, label %for.body.1789, label %for.end.1807

for.body.1789:                                    ; preds = %for.cond.1785
  %1239 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x1790 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1239, i32 0, i32 41
  %1240 = load i32, i32* %pix_c_x1790, align 4
  %1241 = load i32, i32* %i, align 4
  %add1791 = add nsw i32 %1240, %1241
  %conv1792 = trunc i32 %add1791 to i16
  store i16 %conv1792, i16* %pix_c_x, align 2
  %1242 = load i32, i32* %i, align 4
  %idxprom1793 = sext i32 %1242 to i64
  %1243 = load i32, i32* %j, align 4
  %idxprom1794 = sext i32 %1243 to i64
  %1244 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71795 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1244, i32 0, i32 52
  %arrayidx1796 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71795, i32 0, i64 %idxprom1794
  %arrayidx1797 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1796, i32 0, i64 %idxprom1793
  %1245 = load i32, i32* %arrayidx1797, align 4
  %conv1798 = trunc i32 %1245 to i16
  %1246 = load i16, i16* %pix_c_x, align 2
  %idxprom1799 = sext i16 %1246 to i64
  %1247 = load i16, i16* %pix_c_y, align 2
  %idxprom1800 = sext i16 %1247 to i64
  %1248 = load i32, i32* %uv.addr, align 4
  %idxprom1801 = sext i32 %1248 to i64
  %1249 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1249, i32 0, i32 33
  %1250 = load i16***, i16**** %imgUV, align 8
  %arrayidx1802 = getelementptr inbounds i16**, i16*** %1250, i64 %idxprom1801
  %1251 = load i16**, i16*** %arrayidx1802, align 8
  %arrayidx1803 = getelementptr inbounds i16*, i16** %1251, i64 %idxprom1800
  %1252 = load i16*, i16** %arrayidx1803, align 8
  %arrayidx1804 = getelementptr inbounds i16, i16* %1252, i64 %idxprom1799
  store i16 %conv1798, i16* %arrayidx1804, align 2
  br label %for.inc.1805

for.inc.1805:                                     ; preds = %for.body.1789
  %1253 = load i32, i32* %i, align 4
  %inc1806 = add nsw i32 %1253, 1
  store i32 %inc1806, i32* %i, align 4
  br label %for.cond.1785

for.end.1807:                                     ; preds = %for.cond.1785
  br label %for.inc.1808

for.inc.1808:                                     ; preds = %for.end.1807
  %1254 = load i32, i32* %j, align 4
  %inc1809 = add nsw i32 %1254, 1
  store i32 %inc1809, i32* %j, align 4
  br label %for.cond.1777

for.end.1810:                                     ; preds = %for.cond.1777
  br label %if.end.1856

if.else.1811:                                     ; preds = %for.end.1512
  store i32 0, i32* %j, align 4
  br label %for.cond.1812

for.cond.1812:                                    ; preds = %for.inc.1853, %if.else.1811
  %1255 = load i32, i32* %j, align 4
  %1256 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y1813 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1256, i32 0, i32 163
  %1257 = load i32, i32* %mb_cr_size_y1813, align 4
  %cmp1814 = icmp slt i32 %1255, %1257
  br i1 %cmp1814, label %for.body.1816, label %for.end.1855

for.body.1816:                                    ; preds = %for.cond.1812
  %1258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y1817 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1258, i32 0, i32 42
  %1259 = load i32, i32* %pix_c_y1817, align 4
  %1260 = load i32, i32* %j, align 4
  %add1818 = add nsw i32 %1259, %1260
  %conv1819 = trunc i32 %add1818 to i16
  store i16 %conv1819, i16* %pix_c_y, align 2
  store i32 0, i32* %i, align 4
  br label %for.cond.1820

for.cond.1820:                                    ; preds = %for.inc.1850, %for.body.1816
  %1261 = load i32, i32* %i, align 4
  %1262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x1821 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1262, i32 0, i32 162
  %1263 = load i32, i32* %mb_cr_size_x1821, align 4
  %cmp1822 = icmp slt i32 %1261, %1263
  br i1 %cmp1822, label %for.body.1824, label %for.end.1852

for.body.1824:                                    ; preds = %for.cond.1820
  %1264 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x1825 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1264, i32 0, i32 41
  %1265 = load i32, i32* %pix_c_x1825, align 4
  %1266 = load i32, i32* %i, align 4
  %add1826 = add nsw i32 %1265, %1266
  %conv1827 = trunc i32 %add1826 to i16
  store i16 %conv1827, i16* %pix_c_x, align 2
  %1267 = load i32, i32* %i, align 4
  %idxprom1828 = sext i32 %1267 to i64
  %1268 = load i32, i32* %j, align 4
  %idxprom1829 = sext i32 %1268 to i64
  %1269 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71830 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1269, i32 0, i32 52
  %arrayidx1831 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71830, i32 0, i64 %idxprom1829
  %arrayidx1832 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1831, i32 0, i64 %idxprom1828
  %1270 = load i32, i32* %arrayidx1832, align 4
  %conv1833 = trunc i32 %1270 to i16
  %conv1834 = zext i16 %conv1833 to i32
  %1271 = load i32, i32* %i, align 4
  %idxprom1835 = sext i32 %1271 to i64
  %1272 = load i32, i32* %j, align 4
  %idxprom1836 = sext i32 %1272 to i64
  %1273 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr1837 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1273, i32 0, i32 51
  %arrayidx1838 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr1837, i32 0, i64 %idxprom1836
  %arrayidx1839 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx1838, i32 0, i64 %idxprom1835
  %1274 = load i16, i16* %arrayidx1839, align 2
  %conv1840 = zext i16 %1274 to i32
  %add1841 = add nsw i32 %conv1834, %conv1840
  %conv1842 = trunc i32 %add1841 to i16
  %1275 = load i16, i16* %pix_c_x, align 2
  %idxprom1843 = sext i16 %1275 to i64
  %1276 = load i16, i16* %pix_c_y, align 2
  %idxprom1844 = sext i16 %1276 to i64
  %1277 = load i32, i32* %uv.addr, align 4
  %idxprom1845 = sext i32 %1277 to i64
  %1278 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV1846 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1278, i32 0, i32 33
  %1279 = load i16***, i16**** %imgUV1846, align 8
  %arrayidx1847 = getelementptr inbounds i16**, i16*** %1279, i64 %idxprom1845
  %1280 = load i16**, i16*** %arrayidx1847, align 8
  %arrayidx1848 = getelementptr inbounds i16*, i16** %1280, i64 %idxprom1844
  %1281 = load i16*, i16** %arrayidx1848, align 8
  %arrayidx1849 = getelementptr inbounds i16, i16* %1281, i64 %idxprom1843
  store i16 %conv1842, i16* %arrayidx1849, align 2
  br label %for.inc.1850

for.inc.1850:                                     ; preds = %for.body.1824
  %1282 = load i32, i32* %i, align 4
  %inc1851 = add nsw i32 %1282, 1
  store i32 %inc1851, i32* %i, align 4
  br label %for.cond.1820

for.end.1852:                                     ; preds = %for.cond.1820
  br label %for.inc.1853

for.inc.1853:                                     ; preds = %for.end.1852
  %1283 = load i32, i32* %j, align 4
  %inc1854 = add nsw i32 %1283, 1
  store i32 %inc1854, i32* %j, align 4
  br label %for.cond.1812

for.end.1855:                                     ; preds = %for.cond.1812
  br label %if.end.1856

if.end.1856:                                      ; preds = %for.end.1855, %for.end.1810
  %1284 = load i32, i32* %cr_cbp.addr, align 4
  ret i32 %1284
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @imax(i32 %a, i32 %b) #1 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load i32, i32* %b.addr, align 4
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma_sp(i32 %block_x, i32 %block_y, i32* %coeff_cost) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %coeff_cost.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %ilev = alloca i32, align 4
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %coeff_ctr = alloca i32, align 4
  %qp_const = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %nonzero = alloca i32, align 4
  %predicted_block = alloca [4 x [4 x i32]], align 16
  %c_err = alloca i32, align 4
  %qp_const2 = alloca i32, align 4
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %qp_per_sp = alloca i32, align 4
  %qp_rem_sp = alloca i32, align 4
  %q_bits_sp = alloca i32, align 4
  %pos_x = alloca i32, align 4
  %pos_y = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %c_err1 = alloca i32, align 4
  %c_err2 = alloca i32, align 4
  %level1 = alloca i32, align 4
  %level2 = alloca i32, align 4
  %D_dis1 = alloca double, align 8
  %D_dis2 = alloca double, align 8
  %len = alloca i32, align 4
  %info = alloca i32, align 4
  %lambda_mode = alloca double, align 8
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32* %coeff_cost, i32** %coeff_cost.addr, align 8
  %0 = load i32, i32* %block_x.addr, align 4
  %shr = ashr i32 %0, 2
  store i32 %shr, i32* %pos_x, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %shr1 = ashr i32 %1, 2
  store i32 %shr1, i32* %pos_y, align 4
  %2 = load i32, i32* %pos_y, align 4
  %shr2 = ashr i32 %2, 1
  %mul = mul nsw i32 2, %shr2
  %3 = load i32, i32* %pos_x, align 4
  %shr3 = ashr i32 %3, 1
  %add = add nsw i32 %mul, %shr3
  store i32 %add, i32* %b8, align 4
  %4 = load i32, i32* %pos_y, align 4
  %and = and i32 %4, 1
  %mul4 = mul nsw i32 2, %and
  %5 = load i32, i32* %pos_x, align 4
  %and5 = and i32 %5, 1
  %add6 = add nsw i32 %mul4, %and5
  store i32 %add6, i32* %b4, align 4
  %6 = load i32, i32* %b4, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load i32, i32* %b8, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 53
  %9 = load i32****, i32***** %cofAC, align 8
  %arrayidx = getelementptr inbounds i32***, i32**** %9, i64 %idxprom7
  %10 = load i32***, i32**** %arrayidx, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 %idxprom
  %11 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %11, i64 0
  %12 = load i32*, i32** %arrayidx9, align 8
  store i32* %12, i32** %ACLevel, align 8
  %13 = load i32, i32* %b4, align 4
  %idxprom10 = sext i32 %13 to i64
  %14 = load i32, i32* %b8, align 4
  %idxprom11 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 53
  %16 = load i32****, i32***** %cofAC12, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %16, i64 %idxprom11
  %17 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %17, i64 %idxprom10
  %18 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %18, i64 1
  %19 = load i32*, i32** %arrayidx15, align 8
  store i32* %19, i32** %ACRun, align 8
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 3
  %21 = load i32, i32* %current_mb_nr, align 4
  %idxprom16 = sext i32 %21 to i64
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 61
  %23 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %23, i64 %idxprom16
  store %struct.macroblock* %arrayidx17, %struct.macroblock** %currMB, align 8
  %24 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i32 0, i32 2
  %25 = load i32, i32* %qp, align 4
  %sub = sub nsw i32 %25, 12
  %conv = sitofp i32 %sub to double
  %div = fdiv double %conv, 3.000000e+00
  %call = call double @pow(double 2.000000e+00, double %div) #2
  %mul18 = fmul double 8.500000e-01, %call
  %mul19 = fmul double %mul18, 4.000000e+00
  store double %mul19, double* %lambda_mode, align 8
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 2
  %27 = load i32, i32* %qp20, align 4
  %sub21 = sub nsw i32 %27, 0
  %idxprom22 = sext i32 %sub21 to i64
  %28 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %28, i64 %idxprom22
  %29 = load i32, i32* %arrayidx23, align 4
  store i32 %29, i32* %qp_per, align 4
  %30 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i32 0, i32 2
  %31 = load i32, i32* %qp24, align 4
  %sub25 = sub nsw i32 %31, 0
  %idxprom26 = sext i32 %sub25 to i64
  %32 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %32, i64 %idxprom26
  %33 = load i32, i32* %arrayidx27, align 4
  store i32 %33, i32* %qp_rem, align 4
  %34 = load i32, i32* %qp_per, align 4
  %add28 = add nsw i32 15, %34
  store i32 %add28, i32* %q_bits, align 4
  %35 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %35, i32 0, i32 4
  %36 = load i32, i32* %qpsp, align 4
  %sub29 = sub nsw i32 %36, 0
  %idxprom30 = sext i32 %sub29 to i64
  %37 = load i32*, i32** @qp_per_matrix, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom30
  %38 = load i32, i32* %arrayidx31, align 4
  store i32 %38, i32* %qp_per_sp, align 4
  %39 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %39, i32 0, i32 4
  %40 = load i32, i32* %qpsp32, align 4
  %sub33 = sub nsw i32 %40, 0
  %idxprom34 = sext i32 %sub33 to i64
  %41 = load i32*, i32** @qp_rem_matrix, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34
  %42 = load i32, i32* %arrayidx35, align 4
  store i32 %42, i32* %qp_rem_sp, align 4
  %43 = load i32, i32* %qp_per_sp, align 4
  %add36 = add nsw i32 15, %43
  store i32 %add36, i32* %q_bits_sp, align 4
  %44 = load i32, i32* %q_bits, align 4
  %shl = shl i32 1, %44
  %div37 = sdiv i32 %shl, 6
  store i32 %div37, i32* %qp_const, align 4
  %45 = load i32, i32* %q_bits_sp, align 4
  %shl38 = shl i32 1, %45
  %div39 = sdiv i32 %shl38, 2
  store i32 %div39, i32* %qp_const2, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.69, %entry
  %46 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %46, 4
  br i1 %cmp, label %for.body, label %for.end.71

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc, %for.body
  %47 = load i32, i32* %i, align 4
  %cmp42 = icmp slt i32 %47, 4
  br i1 %cmp42, label %for.body.44, label %for.end

for.body.44:                                      ; preds = %for.cond.41
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %block_x.addr, align 4
  %add45 = add nsw i32 %48, %49
  %idxprom46 = sext i32 %add45 to i64
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %block_y.addr, align 4
  %add47 = add nsw i32 %50, %51
  %idxprom48 = sext i32 %add47 to i64
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 51
  %arrayidx49 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx49, i32 0, i64 %idxprom46
  %53 = load i16, i16* %arrayidx50, align 2
  %conv51 = zext i16 %53 to i32
  %54 = load i32, i32* %i, align 4
  %idxprom52 = sext i32 %54 to i64
  %55 = load i32, i32* %j, align 4
  %idxprom53 = sext i32 %55 to i64
  %56 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %56, i32 0, i32 52
  %arrayidx54 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom53
  %arrayidx55 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx54, i32 0, i64 %idxprom52
  %57 = load i32, i32* %arrayidx55, align 4
  %add56 = add nsw i32 %57, %conv51
  store i32 %add56, i32* %arrayidx55, align 4
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %block_x.addr, align 4
  %add57 = add nsw i32 %58, %59
  %idxprom58 = sext i32 %add57 to i64
  %60 = load i32, i32* %j, align 4
  %61 = load i32, i32* %block_y.addr, align 4
  %add59 = add nsw i32 %60, %61
  %idxprom60 = sext i32 %add59 to i64
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr61 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i32 0, i32 51
  %arrayidx62 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr61, i32 0, i64 %idxprom60
  %arrayidx63 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx62, i32 0, i64 %idxprom58
  %63 = load i16, i16* %arrayidx63, align 2
  %conv64 = zext i16 %63 to i32
  %64 = load i32, i32* %j, align 4
  %idxprom65 = sext i32 %64 to i64
  %65 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %65 to i64
  %arrayidx67 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom66
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx67, i32 0, i64 %idxprom65
  store i32 %conv64, i32* %arrayidx68, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.44
  %66 = load i32, i32* %i, align 4
  %inc = add nsw i32 %66, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.41

for.end:                                          ; preds = %for.cond.41
  br label %for.inc.69

for.inc.69:                                       ; preds = %for.end
  %67 = load i32, i32* %j, align 4
  %inc70 = add nsw i32 %67, 1
  store i32 %inc70, i32* %j, align 4
  br label %for.cond

for.end.71:                                       ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %for.inc.140, %for.end.71
  %68 = load i32, i32* %j, align 4
  %cmp73 = icmp slt i32 %68, 4
  br i1 %cmp73, label %for.body.75, label %for.end.142

for.body.75:                                      ; preds = %for.cond.72
  store i32 0, i32* %i, align 4
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.107, %for.body.75
  %69 = load i32, i32* %i, align 4
  %cmp77 = icmp slt i32 %69, 2
  br i1 %cmp77, label %for.body.79, label %for.end.109

for.body.79:                                      ; preds = %for.cond.76
  %70 = load i32, i32* %i, align 4
  %sub80 = sub nsw i32 3, %70
  store i32 %sub80, i32* %i1, align 4
  %71 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %71 to i64
  %72 = load i32, i32* %j, align 4
  %idxprom82 = sext i32 %72 to i64
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m783 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 52
  %arrayidx84 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m783, i32 0, i64 %idxprom82
  %arrayidx85 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx84, i32 0, i64 %idxprom81
  %74 = load i32, i32* %arrayidx85, align 4
  %75 = load i32, i32* %i1, align 4
  %idxprom86 = sext i32 %75 to i64
  %76 = load i32, i32* %j, align 4
  %idxprom87 = sext i32 %76 to i64
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m788 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 52
  %arrayidx89 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m788, i32 0, i64 %idxprom87
  %arrayidx90 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx89, i32 0, i64 %idxprom86
  %78 = load i32, i32* %arrayidx90, align 4
  %add91 = add nsw i32 %74, %78
  %79 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %79 to i64
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom92
  store i32 %add91, i32* %arrayidx93, align 4
  %80 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %80 to i64
  %81 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %81 to i64
  %82 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m796 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %82, i32 0, i32 52
  %arrayidx97 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m796, i32 0, i64 %idxprom95
  %arrayidx98 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx97, i32 0, i64 %idxprom94
  %83 = load i32, i32* %arrayidx98, align 4
  %84 = load i32, i32* %i1, align 4
  %idxprom99 = sext i32 %84 to i64
  %85 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %85 to i64
  %86 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7101 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %86, i32 0, i32 52
  %arrayidx102 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7101, i32 0, i64 %idxprom100
  %arrayidx103 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx102, i32 0, i64 %idxprom99
  %87 = load i32, i32* %arrayidx103, align 4
  %sub104 = sub nsw i32 %83, %87
  %88 = load i32, i32* %i1, align 4
  %idxprom105 = sext i32 %88 to i64
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom105
  store i32 %sub104, i32* %arrayidx106, align 4
  br label %for.inc.107

for.inc.107:                                      ; preds = %for.body.79
  %89 = load i32, i32* %i, align 4
  %inc108 = add nsw i32 %89, 1
  store i32 %inc108, i32* %i, align 4
  br label %for.cond.76

for.end.109:                                      ; preds = %for.cond.76
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %90 = load i32, i32* %arrayidx110, align 4
  %arrayidx111 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %91 = load i32, i32* %arrayidx111, align 4
  %add112 = add nsw i32 %90, %91
  %92 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %92 to i64
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7114 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 52
  %arrayidx115 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7114, i32 0, i64 %idxprom113
  %arrayidx116 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx115, i32 0, i64 0
  store i32 %add112, i32* %arrayidx116, align 4
  %arrayidx117 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %94 = load i32, i32* %arrayidx117, align 4
  %arrayidx118 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %95 = load i32, i32* %arrayidx118, align 4
  %sub119 = sub nsw i32 %94, %95
  %96 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %96 to i64
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 52
  %arrayidx122 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7121, i32 0, i64 %idxprom120
  %arrayidx123 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx122, i32 0, i64 2
  store i32 %sub119, i32* %arrayidx123, align 4
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %98 = load i32, i32* %arrayidx124, align 4
  %mul125 = mul nsw i32 %98, 2
  %arrayidx126 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %99 = load i32, i32* %arrayidx126, align 4
  %add127 = add nsw i32 %mul125, %99
  %100 = load i32, i32* %j, align 4
  %idxprom128 = sext i32 %100 to i64
  %101 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7129 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %101, i32 0, i32 52
  %arrayidx130 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7129, i32 0, i64 %idxprom128
  %arrayidx131 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx130, i32 0, i64 1
  store i32 %add127, i32* %arrayidx131, align 4
  %arrayidx132 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %102 = load i32, i32* %arrayidx132, align 4
  %arrayidx133 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %103 = load i32, i32* %arrayidx133, align 4
  %mul134 = mul nsw i32 %103, 2
  %sub135 = sub nsw i32 %102, %mul134
  %104 = load i32, i32* %j, align 4
  %idxprom136 = sext i32 %104 to i64
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7137 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 52
  %arrayidx138 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7137, i32 0, i64 %idxprom136
  %arrayidx139 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx138, i32 0, i64 3
  store i32 %sub135, i32* %arrayidx139, align 4
  br label %for.inc.140

for.inc.140:                                      ; preds = %for.end.109
  %106 = load i32, i32* %j, align 4
  %inc141 = add nsw i32 %106, 1
  store i32 %inc141, i32* %j, align 4
  br label %for.cond.72

for.end.142:                                      ; preds = %for.cond.72
  store i32 0, i32* %i, align 4
  br label %for.cond.143

for.cond.143:                                     ; preds = %for.inc.211, %for.end.142
  %107 = load i32, i32* %i, align 4
  %cmp144 = icmp slt i32 %107, 4
  br i1 %cmp144, label %for.body.146, label %for.end.213

for.body.146:                                     ; preds = %for.cond.143
  store i32 0, i32* %j, align 4
  br label %for.cond.147

for.cond.147:                                     ; preds = %for.inc.178, %for.body.146
  %108 = load i32, i32* %j, align 4
  %cmp148 = icmp slt i32 %108, 2
  br i1 %cmp148, label %for.body.150, label %for.end.180

for.body.150:                                     ; preds = %for.cond.147
  %109 = load i32, i32* %j, align 4
  %sub151 = sub nsw i32 3, %109
  store i32 %sub151, i32* %j1, align 4
  %110 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %110 to i64
  %111 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %111 to i64
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 52
  %arrayidx155 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7154, i32 0, i64 %idxprom153
  %arrayidx156 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx155, i32 0, i64 %idxprom152
  %113 = load i32, i32* %arrayidx156, align 4
  %114 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %114 to i64
  %115 = load i32, i32* %j1, align 4
  %idxprom158 = sext i32 %115 to i64
  %116 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7159 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %116, i32 0, i32 52
  %arrayidx160 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7159, i32 0, i64 %idxprom158
  %arrayidx161 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx160, i32 0, i64 %idxprom157
  %117 = load i32, i32* %arrayidx161, align 4
  %add162 = add nsw i32 %113, %117
  %118 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %118 to i64
  %arrayidx164 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom163
  store i32 %add162, i32* %arrayidx164, align 4
  %119 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %119 to i64
  %120 = load i32, i32* %j, align 4
  %idxprom166 = sext i32 %120 to i64
  %121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7167 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %121, i32 0, i32 52
  %arrayidx168 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7167, i32 0, i64 %idxprom166
  %arrayidx169 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx168, i32 0, i64 %idxprom165
  %122 = load i32, i32* %arrayidx169, align 4
  %123 = load i32, i32* %i, align 4
  %idxprom170 = sext i32 %123 to i64
  %124 = load i32, i32* %j1, align 4
  %idxprom171 = sext i32 %124 to i64
  %125 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7172 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %125, i32 0, i32 52
  %arrayidx173 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7172, i32 0, i64 %idxprom171
  %arrayidx174 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx173, i32 0, i64 %idxprom170
  %126 = load i32, i32* %arrayidx174, align 4
  %sub175 = sub nsw i32 %122, %126
  %127 = load i32, i32* %j1, align 4
  %idxprom176 = sext i32 %127 to i64
  %arrayidx177 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom176
  store i32 %sub175, i32* %arrayidx177, align 4
  br label %for.inc.178

for.inc.178:                                      ; preds = %for.body.150
  %128 = load i32, i32* %j, align 4
  %inc179 = add nsw i32 %128, 1
  store i32 %inc179, i32* %j, align 4
  br label %for.cond.147

for.end.180:                                      ; preds = %for.cond.147
  %arrayidx181 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %129 = load i32, i32* %arrayidx181, align 4
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %130 = load i32, i32* %arrayidx182, align 4
  %add183 = add nsw i32 %129, %130
  %131 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %131 to i64
  %132 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %132, i32 0, i32 52
  %arrayidx186 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7185, i32 0, i64 0
  %arrayidx187 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx186, i32 0, i64 %idxprom184
  store i32 %add183, i32* %arrayidx187, align 4
  %arrayidx188 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %133 = load i32, i32* %arrayidx188, align 4
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %134 = load i32, i32* %arrayidx189, align 4
  %sub190 = sub nsw i32 %133, %134
  %135 = load i32, i32* %i, align 4
  %idxprom191 = sext i32 %135 to i64
  %136 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %136, i32 0, i32 52
  %arrayidx193 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7192, i32 0, i64 2
  %arrayidx194 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx193, i32 0, i64 %idxprom191
  store i32 %sub190, i32* %arrayidx194, align 4
  %arrayidx195 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %137 = load i32, i32* %arrayidx195, align 4
  %mul196 = mul nsw i32 %137, 2
  %arrayidx197 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %138 = load i32, i32* %arrayidx197, align 4
  %add198 = add nsw i32 %mul196, %138
  %139 = load i32, i32* %i, align 4
  %idxprom199 = sext i32 %139 to i64
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7200 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 52
  %arrayidx201 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7200, i32 0, i64 1
  %arrayidx202 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx201, i32 0, i64 %idxprom199
  store i32 %add198, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %141 = load i32, i32* %arrayidx203, align 4
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %142 = load i32, i32* %arrayidx204, align 4
  %mul205 = mul nsw i32 %142, 2
  %sub206 = sub nsw i32 %141, %mul205
  %143 = load i32, i32* %i, align 4
  %idxprom207 = sext i32 %143 to i64
  %144 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %144, i32 0, i32 52
  %arrayidx209 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7208, i32 0, i64 3
  %arrayidx210 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx209, i32 0, i64 %idxprom207
  store i32 %sub206, i32* %arrayidx210, align 4
  br label %for.inc.211

for.inc.211:                                      ; preds = %for.end.180
  %145 = load i32, i32* %i, align 4
  %inc212 = add nsw i32 %145, 1
  store i32 %inc212, i32* %i, align 4
  br label %for.cond.143

for.end.213:                                      ; preds = %for.cond.143
  store i32 0, i32* %j, align 4
  br label %for.cond.214

for.cond.214:                                     ; preds = %for.inc.274, %for.end.213
  %146 = load i32, i32* %j, align 4
  %cmp215 = icmp slt i32 %146, 4
  br i1 %cmp215, label %for.body.217, label %for.end.276

for.body.217:                                     ; preds = %for.cond.214
  store i32 0, i32* %i, align 4
  br label %for.cond.218

for.cond.218:                                     ; preds = %for.inc.245, %for.body.217
  %147 = load i32, i32* %i, align 4
  %cmp219 = icmp slt i32 %147, 2
  br i1 %cmp219, label %for.body.221, label %for.end.247

for.body.221:                                     ; preds = %for.cond.218
  %148 = load i32, i32* %i, align 4
  %sub222 = sub nsw i32 3, %148
  store i32 %sub222, i32* %i1, align 4
  %149 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %149 to i64
  %150 = load i32, i32* %i, align 4
  %idxprom224 = sext i32 %150 to i64
  %arrayidx225 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom224
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx225, i32 0, i64 %idxprom223
  %151 = load i32, i32* %arrayidx226, align 4
  %152 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %152 to i64
  %153 = load i32, i32* %i1, align 4
  %idxprom228 = sext i32 %153 to i64
  %arrayidx229 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom228
  %arrayidx230 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx229, i32 0, i64 %idxprom227
  %154 = load i32, i32* %arrayidx230, align 4
  %add231 = add nsw i32 %151, %154
  %155 = load i32, i32* %i, align 4
  %idxprom232 = sext i32 %155 to i64
  %arrayidx233 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom232
  store i32 %add231, i32* %arrayidx233, align 4
  %156 = load i32, i32* %j, align 4
  %idxprom234 = sext i32 %156 to i64
  %157 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %157 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom235
  %arrayidx237 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i32 0, i64 %idxprom234
  %158 = load i32, i32* %arrayidx237, align 4
  %159 = load i32, i32* %j, align 4
  %idxprom238 = sext i32 %159 to i64
  %160 = load i32, i32* %i1, align 4
  %idxprom239 = sext i32 %160 to i64
  %arrayidx240 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom239
  %arrayidx241 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx240, i32 0, i64 %idxprom238
  %161 = load i32, i32* %arrayidx241, align 4
  %sub242 = sub nsw i32 %158, %161
  %162 = load i32, i32* %i1, align 4
  %idxprom243 = sext i32 %162 to i64
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom243
  store i32 %sub242, i32* %arrayidx244, align 4
  br label %for.inc.245

for.inc.245:                                      ; preds = %for.body.221
  %163 = load i32, i32* %i, align 4
  %inc246 = add nsw i32 %163, 1
  store i32 %inc246, i32* %i, align 4
  br label %for.cond.218

for.end.247:                                      ; preds = %for.cond.218
  %arrayidx248 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %164 = load i32, i32* %arrayidx248, align 4
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %165 = load i32, i32* %arrayidx249, align 4
  %add250 = add nsw i32 %164, %165
  %166 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %166 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 0
  %arrayidx253 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i32 0, i64 %idxprom251
  store i32 %add250, i32* %arrayidx253, align 4
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %167 = load i32, i32* %arrayidx254, align 4
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %168 = load i32, i32* %arrayidx255, align 4
  %sub256 = sub nsw i32 %167, %168
  %169 = load i32, i32* %j, align 4
  %idxprom257 = sext i32 %169 to i64
  %arrayidx258 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 2
  %arrayidx259 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx258, i32 0, i64 %idxprom257
  store i32 %sub256, i32* %arrayidx259, align 4
  %arrayidx260 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %170 = load i32, i32* %arrayidx260, align 4
  %mul261 = mul nsw i32 %170, 2
  %arrayidx262 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %171 = load i32, i32* %arrayidx262, align 4
  %add263 = add nsw i32 %mul261, %171
  %172 = load i32, i32* %j, align 4
  %idxprom264 = sext i32 %172 to i64
  %arrayidx265 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 1
  %arrayidx266 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx265, i32 0, i64 %idxprom264
  store i32 %add263, i32* %arrayidx266, align 4
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %173 = load i32, i32* %arrayidx267, align 4
  %arrayidx268 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %174 = load i32, i32* %arrayidx268, align 4
  %mul269 = mul nsw i32 %174, 2
  %sub270 = sub nsw i32 %173, %mul269
  %175 = load i32, i32* %j, align 4
  %idxprom271 = sext i32 %175 to i64
  %arrayidx272 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 3
  %arrayidx273 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx272, i32 0, i64 %idxprom271
  store i32 %sub270, i32* %arrayidx273, align 4
  br label %for.inc.274

for.inc.274:                                      ; preds = %for.end.247
  %176 = load i32, i32* %j, align 4
  %inc275 = add nsw i32 %176, 1
  store i32 %inc275, i32* %j, align 4
  br label %for.cond.214

for.end.276:                                      ; preds = %for.cond.214
  store i32 0, i32* %i, align 4
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.337, %for.end.276
  %177 = load i32, i32* %i, align 4
  %cmp278 = icmp slt i32 %177, 4
  br i1 %cmp278, label %for.body.280, label %for.end.339

for.body.280:                                     ; preds = %for.cond.277
  store i32 0, i32* %j, align 4
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.308, %for.body.280
  %178 = load i32, i32* %j, align 4
  %cmp282 = icmp slt i32 %178, 2
  br i1 %cmp282, label %for.body.284, label %for.end.310

for.body.284:                                     ; preds = %for.cond.281
  %179 = load i32, i32* %j, align 4
  %sub285 = sub nsw i32 3, %179
  store i32 %sub285, i32* %j1, align 4
  %180 = load i32, i32* %j, align 4
  %idxprom286 = sext i32 %180 to i64
  %181 = load i32, i32* %i, align 4
  %idxprom287 = sext i32 %181 to i64
  %arrayidx288 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom287
  %arrayidx289 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx288, i32 0, i64 %idxprom286
  %182 = load i32, i32* %arrayidx289, align 4
  %183 = load i32, i32* %j1, align 4
  %idxprom290 = sext i32 %183 to i64
  %184 = load i32, i32* %i, align 4
  %idxprom291 = sext i32 %184 to i64
  %arrayidx292 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom291
  %arrayidx293 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx292, i32 0, i64 %idxprom290
  %185 = load i32, i32* %arrayidx293, align 4
  %add294 = add nsw i32 %182, %185
  %186 = load i32, i32* %j, align 4
  %idxprom295 = sext i32 %186 to i64
  %arrayidx296 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom295
  store i32 %add294, i32* %arrayidx296, align 4
  %187 = load i32, i32* %j, align 4
  %idxprom297 = sext i32 %187 to i64
  %188 = load i32, i32* %i, align 4
  %idxprom298 = sext i32 %188 to i64
  %arrayidx299 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom298
  %arrayidx300 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx299, i32 0, i64 %idxprom297
  %189 = load i32, i32* %arrayidx300, align 4
  %190 = load i32, i32* %j1, align 4
  %idxprom301 = sext i32 %190 to i64
  %191 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %191 to i64
  %arrayidx303 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom302
  %arrayidx304 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx303, i32 0, i64 %idxprom301
  %192 = load i32, i32* %arrayidx304, align 4
  %sub305 = sub nsw i32 %189, %192
  %193 = load i32, i32* %j1, align 4
  %idxprom306 = sext i32 %193 to i64
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom306
  store i32 %sub305, i32* %arrayidx307, align 4
  br label %for.inc.308

for.inc.308:                                      ; preds = %for.body.284
  %194 = load i32, i32* %j, align 4
  %inc309 = add nsw i32 %194, 1
  store i32 %inc309, i32* %j, align 4
  br label %for.cond.281

for.end.310:                                      ; preds = %for.cond.281
  %arrayidx311 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %195 = load i32, i32* %arrayidx311, align 4
  %arrayidx312 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %196 = load i32, i32* %arrayidx312, align 4
  %add313 = add nsw i32 %195, %196
  %197 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %197 to i64
  %arrayidx315 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom314
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx315, i32 0, i64 0
  store i32 %add313, i32* %arrayidx316, align 4
  %arrayidx317 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %198 = load i32, i32* %arrayidx317, align 4
  %arrayidx318 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %199 = load i32, i32* %arrayidx318, align 4
  %sub319 = sub nsw i32 %198, %199
  %200 = load i32, i32* %i, align 4
  %idxprom320 = sext i32 %200 to i64
  %arrayidx321 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom320
  %arrayidx322 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx321, i32 0, i64 2
  store i32 %sub319, i32* %arrayidx322, align 4
  %arrayidx323 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %201 = load i32, i32* %arrayidx323, align 4
  %mul324 = mul nsw i32 %201, 2
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %202 = load i32, i32* %arrayidx325, align 4
  %add326 = add nsw i32 %mul324, %202
  %203 = load i32, i32* %i, align 4
  %idxprom327 = sext i32 %203 to i64
  %arrayidx328 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom327
  %arrayidx329 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx328, i32 0, i64 1
  store i32 %add326, i32* %arrayidx329, align 4
  %arrayidx330 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %204 = load i32, i32* %arrayidx330, align 4
  %arrayidx331 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %205 = load i32, i32* %arrayidx331, align 4
  %mul332 = mul nsw i32 %205, 2
  %sub333 = sub nsw i32 %204, %mul332
  %206 = load i32, i32* %i, align 4
  %idxprom334 = sext i32 %206 to i64
  %arrayidx335 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom334
  %arrayidx336 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx335, i32 0, i64 3
  store i32 %sub333, i32* %arrayidx336, align 4
  br label %for.inc.337

for.inc.337:                                      ; preds = %for.end.310
  %207 = load i32, i32* %i, align 4
  %inc338 = add nsw i32 %207, 1
  store i32 %inc338, i32* %i, align 4
  br label %for.cond.277

for.end.339:                                      ; preds = %for.cond.277
  store i32 0, i32* %nonzero, align 4
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.340

for.cond.340:                                     ; preds = %for.inc.623, %for.end.339
  %208 = load i32, i32* %coeff_ctr, align 4
  %cmp341 = icmp slt i32 %208, 16
  br i1 %cmp341, label %for.body.343, label %for.end.625

for.body.343:                                     ; preds = %for.cond.340
  %209 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %is_field_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %209, i32 0, i32 20
  %210 = load i32, i32* %is_field_mode, align 4
  %tobool = icmp ne i32 %210, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body.343
  %211 = load i32, i32* %coeff_ctr, align 4
  %idxprom344 = sext i32 %211 to i64
  %arrayidx345 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom344
  %arrayidx346 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx345, i32 0, i64 0
  %212 = load i8, i8* %arrayidx346, align 1
  %conv347 = zext i8 %212 to i32
  store i32 %conv347, i32* %i, align 4
  %213 = load i32, i32* %coeff_ctr, align 4
  %idxprom348 = sext i32 %213 to i64
  %arrayidx349 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom348
  %arrayidx350 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx349, i32 0, i64 1
  %214 = load i8, i8* %arrayidx350, align 1
  %conv351 = zext i8 %214 to i32
  store i32 %conv351, i32* %j, align 4
  br label %if.end

if.else:                                          ; preds = %for.body.343
  %215 = load i32, i32* %coeff_ctr, align 4
  %idxprom352 = sext i32 %215 to i64
  %arrayidx353 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom352
  %arrayidx354 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx353, i32 0, i64 0
  %216 = load i8, i8* %arrayidx354, align 1
  %conv355 = zext i8 %216 to i32
  store i32 %conv355, i32* %i, align 4
  %217 = load i32, i32* %coeff_ctr, align 4
  %idxprom356 = sext i32 %217 to i64
  %arrayidx357 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom356
  %arrayidx358 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx357, i32 0, i64 1
  %218 = load i8, i8* %arrayidx358, align 1
  %conv359 = zext i8 %218 to i32
  store i32 %conv359, i32* %j, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %219 = load i32, i32* %run, align 4
  %inc360 = add nsw i32 %219, 1
  store i32 %inc360, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %220 = load i32, i32* %j, align 4
  %idxprom361 = sext i32 %220 to i64
  %221 = load i32, i32* %i, align 4
  %idxprom362 = sext i32 %221 to i64
  %arrayidx363 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom362
  %arrayidx364 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx363, i32 0, i64 %idxprom361
  %222 = load i32, i32* %arrayidx364, align 4
  %call365 = call i32 @iabs(i32 %222)
  %223 = load i32, i32* %j, align 4
  %idxprom366 = sext i32 %223 to i64
  %224 = load i32, i32* %i, align 4
  %idxprom367 = sext i32 %224 to i64
  %225 = load i32, i32* %qp_rem_sp, align 4
  %idxprom368 = sext i32 %225 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom368
  %arrayidx370 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i32 0, i64 %idxprom367
  %arrayidx371 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx370, i32 0, i64 %idxprom366
  %226 = load i32, i32* %arrayidx371, align 4
  %mul372 = mul nsw i32 %call365, %226
  %227 = load i32, i32* %qp_const2, align 4
  %add373 = add nsw i32 %mul372, %227
  %228 = load i32, i32* %q_bits_sp, align 4
  %shr374 = ashr i32 %add373, %228
  store i32 %shr374, i32* %level1, align 4
  %229 = load i32, i32* %level1, align 4
  %230 = load i32, i32* %q_bits_sp, align 4
  %shl375 = shl i32 %229, %230
  %231 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %231 to i64
  %232 = load i32, i32* %i, align 4
  %idxprom377 = sext i32 %232 to i64
  %233 = load i32, i32* %qp_rem_sp, align 4
  %idxprom378 = sext i32 %233 to i64
  %arrayidx379 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom378
  %arrayidx380 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx379, i32 0, i64 %idxprom377
  %arrayidx381 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx380, i32 0, i64 %idxprom376
  %234 = load i32, i32* %arrayidx381, align 4
  %div382 = sdiv i32 %shl375, %234
  store i32 %div382, i32* %level1, align 4
  %235 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %235 to i64
  %236 = load i32, i32* %j, align 4
  %idxprom384 = sext i32 %236 to i64
  %237 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7385 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %237, i32 0, i32 52
  %arrayidx386 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7385, i32 0, i64 %idxprom384
  %arrayidx387 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx386, i32 0, i64 %idxprom383
  %238 = load i32, i32* %arrayidx387, align 4
  %239 = load i32, i32* %level1, align 4
  %240 = load i32, i32* %j, align 4
  %idxprom388 = sext i32 %240 to i64
  %241 = load i32, i32* %i, align 4
  %idxprom389 = sext i32 %241 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom389
  %arrayidx391 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i32 0, i64 %idxprom388
  %242 = load i32, i32* %arrayidx391, align 4
  %call392 = call i32 @isignab(i32 %239, i32 %242)
  %sub393 = sub nsw i32 %238, %call392
  store i32 %sub393, i32* %c_err1, align 4
  %243 = load i32, i32* %c_err1, align 4
  %call394 = call i32 @iabs(i32 %243)
  %244 = load i32, i32* %j, align 4
  %idxprom395 = sext i32 %244 to i64
  %245 = load i32, i32* %i, align 4
  %idxprom396 = sext i32 %245 to i64
  %246 = load i32, i32* %qp_rem, align 4
  %idxprom397 = sext i32 %246 to i64
  %arrayidx398 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom397
  %arrayidx399 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx398, i32 0, i64 %idxprom396
  %arrayidx400 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx399, i32 0, i64 %idxprom395
  %247 = load i32, i32* %arrayidx400, align 4
  %mul401 = mul nsw i32 %call394, %247
  %248 = load i32, i32* %qp_const, align 4
  %add402 = add nsw i32 %mul401, %248
  %249 = load i32, i32* %q_bits, align 4
  %shr403 = ashr i32 %add402, %249
  store i32 %shr403, i32* %level1, align 4
  %250 = load i32, i32* %i, align 4
  %idxprom404 = sext i32 %250 to i64
  %251 = load i32, i32* %j, align 4
  %idxprom405 = sext i32 %251 to i64
  %252 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %252, i32 0, i32 52
  %arrayidx407 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7406, i32 0, i64 %idxprom405
  %arrayidx408 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx407, i32 0, i64 %idxprom404
  %253 = load i32, i32* %arrayidx408, align 4
  %254 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %254 to i64
  %255 = load i32, i32* %i, align 4
  %idxprom410 = sext i32 %255 to i64
  %arrayidx411 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom410
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx411, i32 0, i64 %idxprom409
  %256 = load i32, i32* %arrayidx412, align 4
  %sub413 = sub nsw i32 %253, %256
  store i32 %sub413, i32* %c_err2, align 4
  %257 = load i32, i32* %c_err2, align 4
  %call414 = call i32 @iabs(i32 %257)
  %258 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %258 to i64
  %259 = load i32, i32* %i, align 4
  %idxprom416 = sext i32 %259 to i64
  %260 = load i32, i32* %qp_rem, align 4
  %idxprom417 = sext i32 %260 to i64
  %arrayidx418 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom417
  %arrayidx419 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx418, i32 0, i64 %idxprom416
  %arrayidx420 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx419, i32 0, i64 %idxprom415
  %261 = load i32, i32* %arrayidx420, align 4
  %mul421 = mul nsw i32 %call414, %261
  %262 = load i32, i32* %qp_const, align 4
  %add422 = add nsw i32 %mul421, %262
  %263 = load i32, i32* %q_bits, align 4
  %shr423 = ashr i32 %add422, %263
  store i32 %shr423, i32* %level2, align 4
  %264 = load i32, i32* %level1, align 4
  %265 = load i32, i32* %level2, align 4
  %cmp424 = icmp ne i32 %264, %265
  br i1 %cmp424, label %land.lhs.true, label %if.else.514

land.lhs.true:                                    ; preds = %if.end
  %266 = load i32, i32* %level1, align 4
  %cmp426 = icmp ne i32 %266, 0
  br i1 %cmp426, label %land.lhs.true.428, label %if.else.514

land.lhs.true.428:                                ; preds = %land.lhs.true
  %267 = load i32, i32* %level2, align 4
  %cmp429 = icmp ne i32 %267, 0
  br i1 %cmp429, label %if.then.431, label %if.else.514

if.then.431:                                      ; preds = %land.lhs.true.428
  %268 = load i32, i32* %i, align 4
  %idxprom432 = sext i32 %268 to i64
  %269 = load i32, i32* %j, align 4
  %idxprom433 = sext i32 %269 to i64
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 52
  %arrayidx435 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7434, i32 0, i64 %idxprom433
  %arrayidx436 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx435, i32 0, i64 %idxprom432
  %271 = load i32, i32* %arrayidx436, align 4
  %272 = load i32, i32* %level1, align 4
  %273 = load i32, i32* %c_err1, align 4
  %call437 = call i32 @isignab(i32 %272, i32 %273)
  %274 = load i32, i32* %j, align 4
  %idxprom438 = sext i32 %274 to i64
  %275 = load i32, i32* %i, align 4
  %idxprom439 = sext i32 %275 to i64
  %276 = load i32, i32* %qp_rem, align 4
  %idxprom440 = sext i32 %276 to i64
  %arrayidx441 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom440
  %arrayidx442 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx441, i32 0, i64 %idxprom439
  %arrayidx443 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx442, i32 0, i64 %idxprom438
  %277 = load i32, i32* %arrayidx443, align 4
  %mul444 = mul nsw i32 %call437, %277
  %278 = load i32, i32* %j, align 4
  %idxprom445 = sext i32 %278 to i64
  %279 = load i32, i32* %i, align 4
  %idxprom446 = sext i32 %279 to i64
  %arrayidx447 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom446
  %arrayidx448 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx447, i32 0, i64 %idxprom445
  %280 = load i32, i32* %arrayidx448, align 4
  %mul449 = mul nsw i32 %mul444, %280
  %281 = load i32, i32* %qp_per, align 4
  %shl450 = shl i32 %mul449, %281
  %shr451 = ashr i32 %shl450, 6
  %sub452 = sub nsw i32 %271, %shr451
  %282 = load i32, i32* %j, align 4
  %idxprom453 = sext i32 %282 to i64
  %283 = load i32, i32* %i, align 4
  %idxprom454 = sext i32 %283 to i64
  %arrayidx455 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom454
  %arrayidx456 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx455, i32 0, i64 %idxprom453
  %284 = load i32, i32* %arrayidx456, align 4
  %sub457 = sub nsw i32 %sub452, %284
  %conv458 = sitofp i32 %sub457 to double
  store double %conv458, double* %D_dis1, align 8
  %285 = load i32, i32* %level1, align 4
  %286 = load i32, i32* %run, align 4
  call void @levrun_linfo_inter(i32 %285, i32 %286, i32* %len, i32* %info)
  %287 = load double, double* %D_dis1, align 8
  %288 = load double, double* %D_dis1, align 8
  %mul459 = fmul double %287, %288
  %289 = load double, double* %lambda_mode, align 8
  %290 = load i32, i32* %len, align 4
  %conv460 = sitofp i32 %290 to double
  %mul461 = fmul double %289, %conv460
  %add462 = fadd double %mul459, %mul461
  store double %add462, double* %D_dis1, align 8
  %291 = load i32, i32* %i, align 4
  %idxprom463 = sext i32 %291 to i64
  %292 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %292 to i64
  %293 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7465 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %293, i32 0, i32 52
  %arrayidx466 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7465, i32 0, i64 %idxprom464
  %arrayidx467 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx466, i32 0, i64 %idxprom463
  %294 = load i32, i32* %arrayidx467, align 4
  %295 = load i32, i32* %level2, align 4
  %296 = load i32, i32* %c_err2, align 4
  %call468 = call i32 @isignab(i32 %295, i32 %296)
  %297 = load i32, i32* %j, align 4
  %idxprom469 = sext i32 %297 to i64
  %298 = load i32, i32* %i, align 4
  %idxprom470 = sext i32 %298 to i64
  %299 = load i32, i32* %qp_rem, align 4
  %idxprom471 = sext i32 %299 to i64
  %arrayidx472 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom471
  %arrayidx473 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx472, i32 0, i64 %idxprom470
  %arrayidx474 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx473, i32 0, i64 %idxprom469
  %300 = load i32, i32* %arrayidx474, align 4
  %mul475 = mul nsw i32 %call468, %300
  %301 = load i32, i32* %j, align 4
  %idxprom476 = sext i32 %301 to i64
  %302 = load i32, i32* %i, align 4
  %idxprom477 = sext i32 %302 to i64
  %arrayidx478 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom477
  %arrayidx479 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx478, i32 0, i64 %idxprom476
  %303 = load i32, i32* %arrayidx479, align 4
  %mul480 = mul nsw i32 %mul475, %303
  %304 = load i32, i32* %qp_per, align 4
  %shl481 = shl i32 %mul480, %304
  %shr482 = ashr i32 %shl481, 6
  %sub483 = sub nsw i32 %294, %shr482
  %305 = load i32, i32* %j, align 4
  %idxprom484 = sext i32 %305 to i64
  %306 = load i32, i32* %i, align 4
  %idxprom485 = sext i32 %306 to i64
  %arrayidx486 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom485
  %arrayidx487 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx486, i32 0, i64 %idxprom484
  %307 = load i32, i32* %arrayidx487, align 4
  %sub488 = sub nsw i32 %sub483, %307
  %conv489 = sitofp i32 %sub488 to double
  store double %conv489, double* %D_dis2, align 8
  %308 = load i32, i32* %level2, align 4
  %309 = load i32, i32* %run, align 4
  call void @levrun_linfo_inter(i32 %308, i32 %309, i32* %len, i32* %info)
  %310 = load double, double* %D_dis2, align 8
  %311 = load double, double* %D_dis2, align 8
  %mul490 = fmul double %310, %311
  %312 = load double, double* %lambda_mode, align 8
  %313 = load i32, i32* %len, align 4
  %conv491 = sitofp i32 %313 to double
  %mul492 = fmul double %312, %conv491
  %add493 = fadd double %mul490, %mul492
  store double %add493, double* %D_dis2, align 8
  %314 = load double, double* %D_dis1, align 8
  %315 = load double, double* %D_dis2, align 8
  %cmp494 = fcmp oeq double %314, %315
  br i1 %cmp494, label %if.then.496, label %if.else.501

if.then.496:                                      ; preds = %if.then.431
  %316 = load i32, i32* %level1, align 4
  %call497 = call i32 @iabs(i32 %316)
  %317 = load i32, i32* %level2, align 4
  %call498 = call i32 @iabs(i32 %317)
  %cmp499 = icmp slt i32 %call497, %call498
  br i1 %cmp499, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.496
  %318 = load i32, i32* %level1, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then.496
  %319 = load i32, i32* %level2, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %318, %cond.true ], [ %319, %cond.false ]
  store i32 %cond, i32* %level, align 4
  br label %if.end.507

if.else.501:                                      ; preds = %if.then.431
  %320 = load double, double* %D_dis1, align 8
  %321 = load double, double* %D_dis2, align 8
  %cmp502 = fcmp olt double %320, %321
  br i1 %cmp502, label %if.then.504, label %if.else.505

if.then.504:                                      ; preds = %if.else.501
  %322 = load i32, i32* %level1, align 4
  store i32 %322, i32* %level, align 4
  br label %if.end.506

if.else.505:                                      ; preds = %if.else.501
  %323 = load i32, i32* %level2, align 4
  store i32 %323, i32* %level, align 4
  br label %if.end.506

if.end.506:                                       ; preds = %if.else.505, %if.then.504
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %cond.end
  %324 = load i32, i32* %level, align 4
  %325 = load i32, i32* %level1, align 4
  %cmp508 = icmp eq i32 %324, %325
  br i1 %cmp508, label %cond.true.510, label %cond.false.511

cond.true.510:                                    ; preds = %if.end.507
  %326 = load i32, i32* %c_err1, align 4
  br label %cond.end.512

cond.false.511:                                   ; preds = %if.end.507
  %327 = load i32, i32* %c_err2, align 4
  br label %cond.end.512

cond.end.512:                                     ; preds = %cond.false.511, %cond.true.510
  %cond513 = phi i32 [ %326, %cond.true.510 ], [ %327, %cond.false.511 ]
  store i32 %cond513, i32* %c_err, align 4
  br label %if.end.532

if.else.514:                                      ; preds = %land.lhs.true.428, %land.lhs.true, %if.end
  %328 = load i32, i32* %level1, align 4
  %329 = load i32, i32* %level2, align 4
  %cmp515 = icmp eq i32 %328, %329
  br i1 %cmp515, label %if.then.517, label %if.else.518

if.then.517:                                      ; preds = %if.else.514
  %330 = load i32, i32* %level1, align 4
  store i32 %330, i32* %level, align 4
  %331 = load i32, i32* %c_err1, align 4
  store i32 %331, i32* %c_err, align 4
  br label %if.end.531

if.else.518:                                      ; preds = %if.else.514
  %332 = load i32, i32* %level1, align 4
  %cmp519 = icmp eq i32 %332, 0
  br i1 %cmp519, label %cond.true.521, label %cond.false.522

cond.true.521:                                    ; preds = %if.else.518
  %333 = load i32, i32* %level1, align 4
  br label %cond.end.523

cond.false.522:                                   ; preds = %if.else.518
  %334 = load i32, i32* %level2, align 4
  br label %cond.end.523

cond.end.523:                                     ; preds = %cond.false.522, %cond.true.521
  %cond524 = phi i32 [ %333, %cond.true.521 ], [ %334, %cond.false.522 ]
  store i32 %cond524, i32* %level, align 4
  %335 = load i32, i32* %level1, align 4
  %cmp525 = icmp eq i32 %335, 0
  br i1 %cmp525, label %cond.true.527, label %cond.false.528

cond.true.527:                                    ; preds = %cond.end.523
  %336 = load i32, i32* %c_err1, align 4
  br label %cond.end.529

cond.false.528:                                   ; preds = %cond.end.523
  %337 = load i32, i32* %c_err2, align 4
  br label %cond.end.529

cond.end.529:                                     ; preds = %cond.false.528, %cond.true.527
  %cond530 = phi i32 [ %336, %cond.true.527 ], [ %337, %cond.false.528 ]
  store i32 %cond530, i32* %c_err, align 4
  br label %if.end.531

if.end.531:                                       ; preds = %cond.end.529, %if.then.517
  br label %if.end.532

if.end.532:                                       ; preds = %if.end.531, %cond.end.512
  %338 = load i32, i32* %level, align 4
  %cmp533 = icmp ne i32 %338, 0
  br i1 %cmp533, label %if.then.535, label %if.end.569

if.then.535:                                      ; preds = %if.end.532
  store i32 1, i32* %nonzero, align 4
  %339 = load i32, i32* %level, align 4
  %cmp536 = icmp sgt i32 %339, 1
  br i1 %cmp536, label %if.then.538, label %if.else.540

if.then.538:                                      ; preds = %if.then.535
  %340 = load i32*, i32** %coeff_cost.addr, align 8
  %341 = load i32, i32* %340, align 4
  %add539 = add nsw i32 %341, 999999
  store i32 %add539, i32* %340, align 4
  br label %if.end.547

if.else.540:                                      ; preds = %if.then.535
  %342 = load i32, i32* %run, align 4
  %idxprom541 = sext i32 %342 to i64
  %343 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %343, i32 0, i32 116
  %344 = load i32, i32* %disthres, align 4
  %idxprom542 = sext i32 %344 to i64
  %arrayidx543 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom542
  %arrayidx544 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx543, i32 0, i64 %idxprom541
  %345 = load i8, i8* %arrayidx544, align 1
  %conv545 = zext i8 %345 to i32
  %346 = load i32*, i32** %coeff_cost.addr, align 8
  %347 = load i32, i32* %346, align 4
  %add546 = add nsw i32 %347, %conv545
  store i32 %add546, i32* %346, align 4
  br label %if.end.547

if.end.547:                                       ; preds = %if.else.540, %if.then.538
  %348 = load i32, i32* %level, align 4
  %349 = load i32, i32* %c_err, align 4
  %call548 = call i32 @isignab(i32 %348, i32 %349)
  %350 = load i32, i32* %scan_pos, align 4
  %idxprom549 = sext i32 %350 to i64
  %351 = load i32*, i32** %ACLevel, align 8
  %arrayidx550 = getelementptr inbounds i32, i32* %351, i64 %idxprom549
  store i32 %call548, i32* %arrayidx550, align 4
  %352 = load i32, i32* %run, align 4
  %353 = load i32, i32* %scan_pos, align 4
  %idxprom551 = sext i32 %353 to i64
  %354 = load i32*, i32** %ACRun, align 8
  %arrayidx552 = getelementptr inbounds i32, i32* %354, i64 %idxprom551
  store i32 %352, i32* %arrayidx552, align 4
  %355 = load i32, i32* %scan_pos, align 4
  %inc553 = add nsw i32 %355, 1
  store i32 %inc553, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %356 = load i32, i32* %level, align 4
  %357 = load i32, i32* %c_err, align 4
  %call554 = call i32 @isignab(i32 %356, i32 %357)
  %358 = load i32, i32* %j, align 4
  %idxprom555 = sext i32 %358 to i64
  %359 = load i32, i32* %i, align 4
  %idxprom556 = sext i32 %359 to i64
  %360 = load i32, i32* %qp_rem, align 4
  %idxprom557 = sext i32 %360 to i64
  %arrayidx558 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom557
  %arrayidx559 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx558, i32 0, i64 %idxprom556
  %arrayidx560 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx559, i32 0, i64 %idxprom555
  %361 = load i32, i32* %arrayidx560, align 4
  %mul561 = mul nsw i32 %call554, %361
  %362 = load i32, i32* %j, align 4
  %idxprom562 = sext i32 %362 to i64
  %363 = load i32, i32* %i, align 4
  %idxprom563 = sext i32 %363 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom563
  %arrayidx565 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i32 0, i64 %idxprom562
  %364 = load i32, i32* %arrayidx565, align 4
  %mul566 = mul nsw i32 %mul561, %364
  %365 = load i32, i32* %qp_per, align 4
  %shl567 = shl i32 %mul566, %365
  %shr568 = ashr i32 %shl567, 6
  store i32 %shr568, i32* %ilev, align 4
  br label %if.end.569

if.end.569:                                       ; preds = %if.end.547, %if.end.532
  %366 = load i32, i32* %j, align 4
  %idxprom570 = sext i32 %366 to i64
  %367 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %367 to i64
  %arrayidx572 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom571
  %arrayidx573 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx572, i32 0, i64 %idxprom570
  %368 = load i32, i32* %arrayidx573, align 4
  %369 = load i32, i32* %ilev, align 4
  %add574 = add nsw i32 %369, %368
  store i32 %add574, i32* %ilev, align 4
  %370 = load i32, i32* @si_frame_indicator, align 4
  %tobool575 = icmp ne i32 %370, 0
  br i1 %tobool575, label %if.end.598, label %land.lhs.true.576

land.lhs.true.576:                                ; preds = %if.end.569
  %371 = load i32, i32* @sp2_frame_indicator, align 4
  %tobool577 = icmp ne i32 %371, 0
  br i1 %tobool577, label %if.end.598, label %if.then.578

if.then.578:                                      ; preds = %land.lhs.true.576
  %372 = load i32, i32* %ilev, align 4
  %call579 = call i32 @iabs(i32 %372)
  %373 = load i32, i32* %j, align 4
  %idxprom580 = sext i32 %373 to i64
  %374 = load i32, i32* %i, align 4
  %idxprom581 = sext i32 %374 to i64
  %375 = load i32, i32* %qp_rem_sp, align 4
  %idxprom582 = sext i32 %375 to i64
  %arrayidx583 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom582
  %arrayidx584 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx583, i32 0, i64 %idxprom581
  %arrayidx585 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx584, i32 0, i64 %idxprom580
  %376 = load i32, i32* %arrayidx585, align 4
  %mul586 = mul nsw i32 %call579, %376
  %377 = load i32, i32* %qp_const2, align 4
  %add587 = add nsw i32 %mul586, %377
  %378 = load i32, i32* %q_bits_sp, align 4
  %shr588 = ashr i32 %add587, %378
  %379 = load i32, i32* %ilev, align 4
  %call589 = call i32 @isignab(i32 %shr588, i32 %379)
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 39
  %381 = load i32, i32* %pix_x, align 4
  %382 = load i32, i32* %block_x.addr, align 4
  %add590 = add nsw i32 %381, %382
  %383 = load i32, i32* %i, align 4
  %add591 = add nsw i32 %add590, %383
  %idxprom592 = sext i32 %add591 to i64
  %384 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %384, i32 0, i32 40
  %385 = load i32, i32* %pix_y, align 4
  %386 = load i32, i32* %block_y.addr, align 4
  %add593 = add nsw i32 %385, %386
  %387 = load i32, i32* %j, align 4
  %add594 = add nsw i32 %add593, %387
  %idxprom595 = sext i32 %add594 to i64
  %388 = load i32**, i32*** @lrec, align 8
  %arrayidx596 = getelementptr inbounds i32*, i32** %388, i64 %idxprom595
  %389 = load i32*, i32** %arrayidx596, align 8
  %arrayidx597 = getelementptr inbounds i32, i32* %389, i64 %idxprom592
  store i32 %call589, i32* %arrayidx597, align 4
  br label %if.end.598

if.end.598:                                       ; preds = %if.then.578, %land.lhs.true.576, %if.end.569
  %390 = load i32, i32* %ilev, align 4
  %call599 = call i32 @iabs(i32 %390)
  %391 = load i32, i32* %j, align 4
  %idxprom600 = sext i32 %391 to i64
  %392 = load i32, i32* %i, align 4
  %idxprom601 = sext i32 %392 to i64
  %393 = load i32, i32* %qp_rem_sp, align 4
  %idxprom602 = sext i32 %393 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom602
  %arrayidx604 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i32 0, i64 %idxprom601
  %arrayidx605 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx604, i32 0, i64 %idxprom600
  %394 = load i32, i32* %arrayidx605, align 4
  %mul606 = mul nsw i32 %call599, %394
  %395 = load i32, i32* %qp_const2, align 4
  %add607 = add nsw i32 %mul606, %395
  %396 = load i32, i32* %q_bits_sp, align 4
  %shr608 = ashr i32 %add607, %396
  %397 = load i32, i32* %ilev, align 4
  %call609 = call i32 @isignab(i32 %shr608, i32 %397)
  %398 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %398 to i64
  %399 = load i32, i32* %i, align 4
  %idxprom611 = sext i32 %399 to i64
  %400 = load i32, i32* %qp_rem_sp, align 4
  %idxprom612 = sext i32 %400 to i64
  %arrayidx613 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom612
  %arrayidx614 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx613, i32 0, i64 %idxprom611
  %arrayidx615 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx614, i32 0, i64 %idxprom610
  %401 = load i32, i32* %arrayidx615, align 4
  %mul616 = mul nsw i32 %call609, %401
  %402 = load i32, i32* %qp_per_sp, align 4
  %shl617 = shl i32 %mul616, %402
  %403 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %403 to i64
  %404 = load i32, i32* %j, align 4
  %idxprom619 = sext i32 %404 to i64
  %405 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %405, i32 0, i32 52
  %arrayidx621 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7620, i32 0, i64 %idxprom619
  %arrayidx622 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx621, i32 0, i64 %idxprom618
  store i32 %shl617, i32* %arrayidx622, align 4
  br label %for.inc.623

for.inc.623:                                      ; preds = %if.end.598
  %406 = load i32, i32* %coeff_ctr, align 4
  %inc624 = add nsw i32 %406, 1
  store i32 %inc624, i32* %coeff_ctr, align 4
  br label %for.cond.340

for.end.625:                                      ; preds = %for.cond.340
  %407 = load i32, i32* %scan_pos, align 4
  %idxprom626 = sext i32 %407 to i64
  %408 = load i32*, i32** %ACLevel, align 8
  %arrayidx627 = getelementptr inbounds i32, i32* %408, i64 %idxprom626
  store i32 0, i32* %arrayidx627, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.628

for.cond.628:                                     ; preds = %for.inc.692, %for.end.625
  %409 = load i32, i32* %j, align 4
  %cmp629 = icmp slt i32 %409, 4
  br i1 %cmp629, label %for.body.631, label %for.end.694

for.body.631:                                     ; preds = %for.cond.628
  store i32 0, i32* %i, align 4
  br label %for.cond.632

for.cond.632:                                     ; preds = %for.inc.643, %for.body.631
  %410 = load i32, i32* %i, align 4
  %cmp633 = icmp slt i32 %410, 4
  br i1 %cmp633, label %for.body.635, label %for.end.645

for.body.635:                                     ; preds = %for.cond.632
  %411 = load i32, i32* %i, align 4
  %idxprom636 = sext i32 %411 to i64
  %412 = load i32, i32* %j, align 4
  %idxprom637 = sext i32 %412 to i64
  %413 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7638 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %413, i32 0, i32 52
  %arrayidx639 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7638, i32 0, i64 %idxprom637
  %arrayidx640 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx639, i32 0, i64 %idxprom636
  %414 = load i32, i32* %arrayidx640, align 4
  %415 = load i32, i32* %i, align 4
  %idxprom641 = sext i32 %415 to i64
  %arrayidx642 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom641
  store i32 %414, i32* %arrayidx642, align 4
  br label %for.inc.643

for.inc.643:                                      ; preds = %for.body.635
  %416 = load i32, i32* %i, align 4
  %inc644 = add nsw i32 %416, 1
  store i32 %inc644, i32* %i, align 4
  br label %for.cond.632

for.end.645:                                      ; preds = %for.cond.632
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %417 = load i32, i32* %arrayidx646, align 4
  %arrayidx647 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %418 = load i32, i32* %arrayidx647, align 4
  %add648 = add nsw i32 %417, %418
  %arrayidx649 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add648, i32* %arrayidx649, align 4
  %arrayidx650 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %419 = load i32, i32* %arrayidx650, align 4
  %arrayidx651 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %420 = load i32, i32* %arrayidx651, align 4
  %sub652 = sub nsw i32 %419, %420
  %arrayidx653 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub652, i32* %arrayidx653, align 4
  %arrayidx654 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %421 = load i32, i32* %arrayidx654, align 4
  %shr655 = ashr i32 %421, 1
  %arrayidx656 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %422 = load i32, i32* %arrayidx656, align 4
  %sub657 = sub nsw i32 %shr655, %422
  %arrayidx658 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub657, i32* %arrayidx658, align 4
  %arrayidx659 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %423 = load i32, i32* %arrayidx659, align 4
  %arrayidx660 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %424 = load i32, i32* %arrayidx660, align 4
  %shr661 = ashr i32 %424, 1
  %add662 = add nsw i32 %423, %shr661
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add662, i32* %arrayidx663, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.664

for.cond.664:                                     ; preds = %for.inc.689, %for.end.645
  %425 = load i32, i32* %i, align 4
  %cmp665 = icmp slt i32 %425, 2
  br i1 %cmp665, label %for.body.667, label %for.end.691

for.body.667:                                     ; preds = %for.cond.664
  %426 = load i32, i32* %i, align 4
  %sub668 = sub nsw i32 3, %426
  store i32 %sub668, i32* %i1, align 4
  %427 = load i32, i32* %i, align 4
  %idxprom669 = sext i32 %427 to i64
  %arrayidx670 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom669
  %428 = load i32, i32* %arrayidx670, align 4
  %429 = load i32, i32* %i1, align 4
  %idxprom671 = sext i32 %429 to i64
  %arrayidx672 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom671
  %430 = load i32, i32* %arrayidx672, align 4
  %add673 = add nsw i32 %428, %430
  %431 = load i32, i32* %i, align 4
  %idxprom674 = sext i32 %431 to i64
  %432 = load i32, i32* %j, align 4
  %idxprom675 = sext i32 %432 to i64
  %433 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7676 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %433, i32 0, i32 52
  %arrayidx677 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7676, i32 0, i64 %idxprom675
  %arrayidx678 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx677, i32 0, i64 %idxprom674
  store i32 %add673, i32* %arrayidx678, align 4
  %434 = load i32, i32* %i, align 4
  %idxprom679 = sext i32 %434 to i64
  %arrayidx680 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom679
  %435 = load i32, i32* %arrayidx680, align 4
  %436 = load i32, i32* %i1, align 4
  %idxprom681 = sext i32 %436 to i64
  %arrayidx682 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom681
  %437 = load i32, i32* %arrayidx682, align 4
  %sub683 = sub nsw i32 %435, %437
  %438 = load i32, i32* %i1, align 4
  %idxprom684 = sext i32 %438 to i64
  %439 = load i32, i32* %j, align 4
  %idxprom685 = sext i32 %439 to i64
  %440 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7686 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %440, i32 0, i32 52
  %arrayidx687 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7686, i32 0, i64 %idxprom685
  %arrayidx688 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx687, i32 0, i64 %idxprom684
  store i32 %sub683, i32* %arrayidx688, align 4
  br label %for.inc.689

for.inc.689:                                      ; preds = %for.body.667
  %441 = load i32, i32* %i, align 4
  %inc690 = add nsw i32 %441, 1
  store i32 %inc690, i32* %i, align 4
  br label %for.cond.664

for.end.691:                                      ; preds = %for.cond.664
  br label %for.inc.692

for.inc.692:                                      ; preds = %for.end.691
  %442 = load i32, i32* %j, align 4
  %inc693 = add nsw i32 %442, 1
  store i32 %inc693, i32* %j, align 4
  br label %for.cond.628

for.end.694:                                      ; preds = %for.cond.628
  store i32 0, i32* %i, align 4
  br label %for.cond.695

for.cond.695:                                     ; preds = %for.inc.766, %for.end.694
  %443 = load i32, i32* %i, align 4
  %cmp696 = icmp slt i32 %443, 4
  br i1 %cmp696, label %for.body.698, label %for.end.768

for.body.698:                                     ; preds = %for.cond.695
  store i32 0, i32* %j, align 4
  br label %for.cond.699

for.cond.699:                                     ; preds = %for.inc.710, %for.body.698
  %444 = load i32, i32* %j, align 4
  %cmp700 = icmp slt i32 %444, 4
  br i1 %cmp700, label %for.body.702, label %for.end.712

for.body.702:                                     ; preds = %for.cond.699
  %445 = load i32, i32* %i, align 4
  %idxprom703 = sext i32 %445 to i64
  %446 = load i32, i32* %j, align 4
  %idxprom704 = sext i32 %446 to i64
  %447 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7705 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %447, i32 0, i32 52
  %arrayidx706 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7705, i32 0, i64 %idxprom704
  %arrayidx707 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx706, i32 0, i64 %idxprom703
  %448 = load i32, i32* %arrayidx707, align 4
  %449 = load i32, i32* %j, align 4
  %idxprom708 = sext i32 %449 to i64
  %arrayidx709 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom708
  store i32 %448, i32* %arrayidx709, align 4
  br label %for.inc.710

for.inc.710:                                      ; preds = %for.body.702
  %450 = load i32, i32* %j, align 4
  %inc711 = add nsw i32 %450, 1
  store i32 %inc711, i32* %j, align 4
  br label %for.cond.699

for.end.712:                                      ; preds = %for.cond.699
  %arrayidx713 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %451 = load i32, i32* %arrayidx713, align 4
  %arrayidx714 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %452 = load i32, i32* %arrayidx714, align 4
  %add715 = add nsw i32 %451, %452
  %arrayidx716 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add715, i32* %arrayidx716, align 4
  %arrayidx717 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %453 = load i32, i32* %arrayidx717, align 4
  %arrayidx718 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %454 = load i32, i32* %arrayidx718, align 4
  %sub719 = sub nsw i32 %453, %454
  %arrayidx720 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub719, i32* %arrayidx720, align 4
  %arrayidx721 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %455 = load i32, i32* %arrayidx721, align 4
  %shr722 = ashr i32 %455, 1
  %arrayidx723 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %456 = load i32, i32* %arrayidx723, align 4
  %sub724 = sub nsw i32 %shr722, %456
  %arrayidx725 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub724, i32* %arrayidx725, align 4
  %arrayidx726 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %457 = load i32, i32* %arrayidx726, align 4
  %arrayidx727 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %458 = load i32, i32* %arrayidx727, align 4
  %shr728 = ashr i32 %458, 1
  %add729 = add nsw i32 %457, %shr728
  %arrayidx730 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add729, i32* %arrayidx730, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.731

for.cond.731:                                     ; preds = %for.inc.763, %for.end.712
  %459 = load i32, i32* %j, align 4
  %cmp732 = icmp slt i32 %459, 2
  br i1 %cmp732, label %for.body.734, label %for.end.765

for.body.734:                                     ; preds = %for.cond.731
  %460 = load i32, i32* %j, align 4
  %sub735 = sub nsw i32 3, %460
  store i32 %sub735, i32* %j1, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 156
  %462 = load i32, i32* %max_imgpel_value, align 4
  %463 = load i32, i32* %j, align 4
  %idxprom736 = sext i32 %463 to i64
  %arrayidx737 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom736
  %464 = load i32, i32* %arrayidx737, align 4
  %465 = load i32, i32* %j1, align 4
  %idxprom738 = sext i32 %465 to i64
  %arrayidx739 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom738
  %466 = load i32, i32* %arrayidx739, align 4
  %add740 = add nsw i32 %464, %466
  %add741 = add nsw i32 %add740, 32
  %shr742 = ashr i32 %add741, 6
  %call743 = call i32 @iClip3(i32 0, i32 %462, i32 %shr742)
  %467 = load i32, i32* %i, align 4
  %idxprom744 = sext i32 %467 to i64
  %468 = load i32, i32* %j, align 4
  %idxprom745 = sext i32 %468 to i64
  %469 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7746 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %469, i32 0, i32 52
  %arrayidx747 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7746, i32 0, i64 %idxprom745
  %arrayidx748 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx747, i32 0, i64 %idxprom744
  store i32 %call743, i32* %arrayidx748, align 4
  %470 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value749 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %470, i32 0, i32 156
  %471 = load i32, i32* %max_imgpel_value749, align 4
  %472 = load i32, i32* %j, align 4
  %idxprom750 = sext i32 %472 to i64
  %arrayidx751 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom750
  %473 = load i32, i32* %arrayidx751, align 4
  %474 = load i32, i32* %j1, align 4
  %idxprom752 = sext i32 %474 to i64
  %arrayidx753 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom752
  %475 = load i32, i32* %arrayidx753, align 4
  %sub754 = sub nsw i32 %473, %475
  %add755 = add nsw i32 %sub754, 32
  %shr756 = ashr i32 %add755, 6
  %call757 = call i32 @iClip3(i32 0, i32 %471, i32 %shr756)
  %476 = load i32, i32* %i, align 4
  %idxprom758 = sext i32 %476 to i64
  %477 = load i32, i32* %j1, align 4
  %idxprom759 = sext i32 %477 to i64
  %478 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7760 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %478, i32 0, i32 52
  %arrayidx761 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7760, i32 0, i64 %idxprom759
  %arrayidx762 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx761, i32 0, i64 %idxprom758
  store i32 %call757, i32* %arrayidx762, align 4
  br label %for.inc.763

for.inc.763:                                      ; preds = %for.body.734
  %479 = load i32, i32* %j, align 4
  %inc764 = add nsw i32 %479, 1
  store i32 %inc764, i32* %j, align 4
  br label %for.cond.731

for.end.765:                                      ; preds = %for.cond.731
  br label %for.inc.766

for.inc.766:                                      ; preds = %for.end.765
  %480 = load i32, i32* %i, align 4
  %inc767 = add nsw i32 %480, 1
  store i32 %inc767, i32* %i, align 4
  br label %for.cond.695

for.end.768:                                      ; preds = %for.cond.695
  store i32 0, i32* %j, align 4
  br label %for.cond.769

for.cond.769:                                     ; preds = %for.inc.796, %for.end.768
  %481 = load i32, i32* %j, align 4
  %cmp770 = icmp slt i32 %481, 4
  br i1 %cmp770, label %for.body.772, label %for.end.798

for.body.772:                                     ; preds = %for.cond.769
  store i32 0, i32* %i, align 4
  br label %for.cond.773

for.cond.773:                                     ; preds = %for.inc.793, %for.body.772
  %482 = load i32, i32* %i, align 4
  %cmp774 = icmp slt i32 %482, 4
  br i1 %cmp774, label %for.body.776, label %for.end.795

for.body.776:                                     ; preds = %for.cond.773
  %483 = load i32, i32* %i, align 4
  %idxprom777 = sext i32 %483 to i64
  %484 = load i32, i32* %j, align 4
  %idxprom778 = sext i32 %484 to i64
  %485 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7779 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %485, i32 0, i32 52
  %arrayidx780 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7779, i32 0, i64 %idxprom778
  %arrayidx781 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx780, i32 0, i64 %idxprom777
  %486 = load i32, i32* %arrayidx781, align 4
  %conv782 = trunc i32 %486 to i16
  %487 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x783 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %487, i32 0, i32 39
  %488 = load i32, i32* %pix_x783, align 4
  %489 = load i32, i32* %block_x.addr, align 4
  %add784 = add nsw i32 %488, %489
  %490 = load i32, i32* %i, align 4
  %add785 = add nsw i32 %add784, %490
  %idxprom786 = sext i32 %add785 to i64
  %491 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y787 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %491, i32 0, i32 40
  %492 = load i32, i32* %pix_y787, align 4
  %493 = load i32, i32* %block_y.addr, align 4
  %add788 = add nsw i32 %492, %493
  %494 = load i32, i32* %j, align 4
  %add789 = add nsw i32 %add788, %494
  %idxprom790 = sext i32 %add789 to i64
  %495 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %495, i32 0, i32 29
  %496 = load i16**, i16*** %imgY, align 8
  %arrayidx791 = getelementptr inbounds i16*, i16** %496, i64 %idxprom790
  %497 = load i16*, i16** %arrayidx791, align 8
  %arrayidx792 = getelementptr inbounds i16, i16* %497, i64 %idxprom786
  store i16 %conv782, i16* %arrayidx792, align 2
  br label %for.inc.793

for.inc.793:                                      ; preds = %for.body.776
  %498 = load i32, i32* %i, align 4
  %inc794 = add nsw i32 %498, 1
  store i32 %inc794, i32* %i, align 4
  br label %for.cond.773

for.end.795:                                      ; preds = %for.cond.773
  br label %for.inc.796

for.inc.796:                                      ; preds = %for.end.795
  %499 = load i32, i32* %j, align 4
  %inc797 = add nsw i32 %499, 1
  store i32 %inc797, i32* %j, align 4
  br label %for.cond.769

for.end.798:                                      ; preds = %for.cond.769
  %500 = load i32, i32* %nonzero, align 4
  ret i32 %500
}

; Function Attrs: nounwind
declare double @pow(double, double) #3

declare void @levrun_linfo_inter(i32, i32, i32*, i32*) #4

; Function Attrs: nounwind uwtable
define i32 @dct_chroma_sp(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %uv.addr = alloca i32, align 4
  %cr_cbp.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %ilev = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %coeff_ctr = alloca i32, align 4
  %qp_const = alloca i32, align 4
  %c_err = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %m1 = alloca [4 x i32], align 16
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %coeff_cost = alloca i32, align 4
  %cr_cbp_tmp = alloca i32, align 4
  %predicted_chroma_block = alloca [8 x [8 x i32]], align 16
  %qp_const2 = alloca i32, align 4
  %mp1 = alloca [4 x i32], align 16
  %currMB = alloca %struct.macroblock*, align 8
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %qp_per_sp = alloca i32, align 4
  %qp_rem_sp = alloca i32, align 4
  %q_bits_sp = alloca i32, align 4
  %b4 = alloca i32, align 4
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %c_err1 = alloca i32, align 4
  %c_err2 = alloca i32, align 4
  %level1 = alloca i32, align 4
  %level2 = alloca i32, align 4
  %len = alloca i32, align 4
  %info = alloca i32, align 4
  %D_dis1 = alloca double, align 8
  %D_dis2 = alloca double, align 8
  %lambda_mode = alloca double, align 8
  %qpChroma = alloca i32, align 4
  %qpChromaSP = alloca i32, align 4
  store i32 %uv, i32* %uv.addr, align 4
  store i32 %cr_cbp, i32* %cr_cbp.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 61
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load i32, i32* %uv.addr, align 4
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 54
  %6 = load i32***, i32**** %cofDC, align 8
  %arrayidx2 = getelementptr inbounds i32**, i32*** %6, i64 %idxprom1
  %7 = load i32**, i32*** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32*, i32** %7, i64 0
  %8 = load i32*, i32** %arrayidx3, align 8
  store i32* %8, i32** %DCLevel, align 8
  %9 = load i32, i32* %uv.addr, align 4
  %add4 = add nsw i32 %9, 1
  %idxprom5 = sext i32 %add4 to i64
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC6 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 54
  %11 = load i32***, i32**** %cofDC6, align 8
  %arrayidx7 = getelementptr inbounds i32**, i32*** %11, i64 %idxprom5
  %12 = load i32**, i32*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32*, i32** %12, i64 1
  %13 = load i32*, i32** %arrayidx8, align 8
  store i32* %13, i32** %DCRun, align 8
  %14 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i32 0, i32 2
  %15 = load i32, i32* %qp, align 4
  %sub = sub nsw i32 %15, 12
  %conv = sitofp i32 %sub to double
  %div = fdiv double %conv, 3.000000e+00
  %call = call double @pow(double 2.000000e+00, double %div) #2
  %mul = fmul double 8.500000e-01, %call
  %mul9 = fmul double %mul, 4.000000e+00
  store double %mul9, double* %lambda_mode, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 145
  %17 = load i32, i32* %bitdepth_chroma_qp_scale, align 4
  %sub10 = sub nsw i32 0, %17
  %18 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i32 0, i32 2
  %19 = load i32, i32* %qp11, align 4
  %20 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %chroma_qp_index_offset = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %20, i32 0, i32 23
  %21 = load i32, i32* %chroma_qp_index_offset, align 4
  %add12 = add nsw i32 %19, %21
  %call13 = call i32 @iClip3(i32 %sub10, i32 51, i32 %add12)
  store i32 %call13, i32* %qpChroma, align 4
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma_qp_scale14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 145
  %23 = load i32, i32* %bitdepth_chroma_qp_scale14, align 4
  %sub15 = sub nsw i32 0, %23
  %24 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i32 0, i32 4
  %25 = load i32, i32* %qpsp, align 4
  %26 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %chroma_qp_index_offset16 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %26, i32 0, i32 23
  %27 = load i32, i32* %chroma_qp_index_offset16, align 4
  %add17 = add nsw i32 %25, %27
  %call18 = call i32 @iClip3(i32 %sub15, i32 51, i32 %add17)
  store i32 %call18, i32* %qpChromaSP, align 4
  %28 = load i32, i32* %qpChroma, align 4
  %cmp = icmp slt i32 %28, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %29 = load i32, i32* %qpChroma, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %30 = load i32, i32* %qpChroma, align 4
  %idxprom20 = sext i32 %30 to i64
  %arrayidx21 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom20
  %31 = load i8, i8* %arrayidx21, align 1
  %conv22 = zext i8 %31 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ %conv22, %cond.false ]
  %sub23 = sub nsw i32 %cond, 0
  %div24 = sdiv i32 %sub23, 6
  store i32 %div24, i32* %qp_per, align 4
  %32 = load i32, i32* %qpChroma, align 4
  %cmp25 = icmp slt i32 %32, 0
  br i1 %cmp25, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %cond.end
  %33 = load i32, i32* %qpChroma, align 4
  br label %cond.end.32

cond.false.28:                                    ; preds = %cond.end
  %34 = load i32, i32* %qpChroma, align 4
  %idxprom29 = sext i32 %34 to i64
  %arrayidx30 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom29
  %35 = load i8, i8* %arrayidx30, align 1
  %conv31 = zext i8 %35 to i32
  br label %cond.end.32

cond.end.32:                                      ; preds = %cond.false.28, %cond.true.27
  %cond33 = phi i32 [ %33, %cond.true.27 ], [ %conv31, %cond.false.28 ]
  %sub34 = sub nsw i32 %cond33, 0
  %rem = srem i32 %sub34, 6
  store i32 %rem, i32* %qp_rem, align 4
  %36 = load i32, i32* %qp_per, align 4
  %add35 = add nsw i32 15, %36
  store i32 %add35, i32* %q_bits, align 4
  %37 = load i32, i32* %q_bits, align 4
  %shl = shl i32 1, %37
  %div36 = sdiv i32 %shl, 6
  store i32 %div36, i32* %qp_const, align 4
  %38 = load i32, i32* %qpChromaSP, align 4
  %cmp37 = icmp slt i32 %38, 0
  br i1 %cmp37, label %cond.true.39, label %cond.false.41

cond.true.39:                                     ; preds = %cond.end.32
  %39 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %39, i32 0, i32 4
  %40 = load i32, i32* %qpsp40, align 4
  br label %cond.end.45

cond.false.41:                                    ; preds = %cond.end.32
  %41 = load i32, i32* %qpChromaSP, align 4
  %idxprom42 = sext i32 %41 to i64
  %arrayidx43 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom42
  %42 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %42 to i32
  br label %cond.end.45

cond.end.45:                                      ; preds = %cond.false.41, %cond.true.39
  %cond46 = phi i32 [ %40, %cond.true.39 ], [ %conv44, %cond.false.41 ]
  %sub47 = sub nsw i32 %cond46, 0
  %div48 = sdiv i32 %sub47, 6
  store i32 %div48, i32* %qp_per_sp, align 4
  %43 = load i32, i32* %qpChromaSP, align 4
  %cmp49 = icmp slt i32 %43, 0
  br i1 %cmp49, label %cond.true.51, label %cond.false.53

cond.true.51:                                     ; preds = %cond.end.45
  %44 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %44, i32 0, i32 4
  %45 = load i32, i32* %qpsp52, align 4
  br label %cond.end.57

cond.false.53:                                    ; preds = %cond.end.45
  %46 = load i32, i32* %qpChromaSP, align 4
  %idxprom54 = sext i32 %46 to i64
  %arrayidx55 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom54
  %47 = load i8, i8* %arrayidx55, align 1
  %conv56 = zext i8 %47 to i32
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.false.53, %cond.true.51
  %cond58 = phi i32 [ %45, %cond.true.51 ], [ %conv56, %cond.false.53 ]
  %sub59 = sub nsw i32 %cond58, 0
  %rem60 = srem i32 %sub59, 6
  store i32 %rem60, i32* %qp_rem_sp, align 4
  %48 = load i32, i32* %qp_per_sp, align 4
  %add61 = add nsw i32 15, %48
  store i32 %add61, i32* %q_bits_sp, align 4
  %49 = load i32, i32* %q_bits_sp, align 4
  %shl62 = shl i32 1, %49
  %div63 = sdiv i32 %shl62, 2
  store i32 %div63, i32* %qp_const2, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.90, %cond.end.57
  %50 = load i32, i32* %j, align 4
  %cmp64 = icmp slt i32 %50, 8
  br i1 %cmp64, label %for.body, label %for.end.92

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc, %for.body
  %51 = load i32, i32* %i, align 4
  %cmp67 = icmp slt i32 %51, 8
  br i1 %cmp67, label %for.body.69, label %for.end

for.body.69:                                      ; preds = %for.cond.66
  %52 = load i32, i32* %i, align 4
  %idxprom70 = sext i32 %52 to i64
  %53 = load i32, i32* %j, align 4
  %idxprom71 = sext i32 %53 to i64
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 51
  %arrayidx72 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom71
  %arrayidx73 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx72, i32 0, i64 %idxprom70
  %55 = load i16, i16* %arrayidx73, align 2
  %conv74 = zext i16 %55 to i32
  %56 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %56 to i64
  %57 = load i32, i32* %j, align 4
  %idxprom76 = sext i32 %57 to i64
  %58 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i32 0, i32 52
  %arrayidx77 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom76
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx77, i32 0, i64 %idxprom75
  %59 = load i32, i32* %arrayidx78, align 4
  %add79 = add nsw i32 %59, %conv74
  store i32 %add79, i32* %arrayidx78, align 4
  %60 = load i32, i32* %i, align 4
  %idxprom80 = sext i32 %60 to i64
  %61 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %61 to i64
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr82 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i32 0, i32 51
  %arrayidx83 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr82, i32 0, i64 %idxprom81
  %arrayidx84 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx83, i32 0, i64 %idxprom80
  %63 = load i16, i16* %arrayidx84, align 2
  %conv85 = zext i16 %63 to i32
  %64 = load i32, i32* %j, align 4
  %idxprom86 = sext i32 %64 to i64
  %65 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %65 to i64
  %arrayidx88 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom87
  %arrayidx89 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx88, i32 0, i64 %idxprom86
  store i32 %conv85, i32* %arrayidx89, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.69
  %66 = load i32, i32* %i, align 4
  %inc = add nsw i32 %66, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.66

for.end:                                          ; preds = %for.cond.66
  br label %for.inc.90

for.inc.90:                                       ; preds = %for.end
  %67 = load i32, i32* %j, align 4
  %inc91 = add nsw i32 %67, 1
  store i32 %inc91, i32* %j, align 4
  br label %for.cond

for.end.92:                                       ; preds = %for.cond
  store i32 0, i32* %n2, align 4
  br label %for.cond.93

for.cond.93:                                      ; preds = %for.inc.270, %for.end.92
  %68 = load i32, i32* %n2, align 4
  %cmp94 = icmp sle i32 %68, 4
  br i1 %cmp94, label %for.body.96, label %for.end.272

for.body.96:                                      ; preds = %for.cond.93
  store i32 0, i32* %n1, align 4
  br label %for.cond.97

for.cond.97:                                      ; preds = %for.inc.267, %for.body.96
  %69 = load i32, i32* %n1, align 4
  %cmp98 = icmp sle i32 %69, 4
  br i1 %cmp98, label %for.body.100, label %for.end.269

for.body.100:                                     ; preds = %for.cond.97
  store i32 0, i32* %j, align 4
  br label %for.cond.101

for.cond.101:                                     ; preds = %for.inc.181, %for.body.100
  %70 = load i32, i32* %j, align 4
  %cmp102 = icmp slt i32 %70, 4
  br i1 %cmp102, label %for.body.104, label %for.end.183

for.body.104:                                     ; preds = %for.cond.101
  %71 = load i32, i32* %n2, align 4
  %72 = load i32, i32* %j, align 4
  %add105 = add nsw i32 %71, %72
  store i32 %add105, i32* %mb_y, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.106

for.cond.106:                                     ; preds = %for.inc.141, %for.body.104
  %73 = load i32, i32* %i, align 4
  %cmp107 = icmp slt i32 %73, 2
  br i1 %cmp107, label %for.body.109, label %for.end.143

for.body.109:                                     ; preds = %for.cond.106
  %74 = load i32, i32* %i, align 4
  %sub110 = sub nsw i32 3, %74
  store i32 %sub110, i32* %i1, align 4
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* %n1, align 4
  %add111 = add nsw i32 %75, %76
  %idxprom112 = sext i32 %add111 to i64
  %77 = load i32, i32* %mb_y, align 4
  %idxprom113 = sext i32 %77 to i64
  %78 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7114 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %78, i32 0, i32 52
  %arrayidx115 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7114, i32 0, i64 %idxprom113
  %arrayidx116 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx115, i32 0, i64 %idxprom112
  %79 = load i32, i32* %arrayidx116, align 4
  %80 = load i32, i32* %i1, align 4
  %81 = load i32, i32* %n1, align 4
  %add117 = add nsw i32 %80, %81
  %idxprom118 = sext i32 %add117 to i64
  %82 = load i32, i32* %mb_y, align 4
  %idxprom119 = sext i32 %82 to i64
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7120 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 52
  %arrayidx121 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7120, i32 0, i64 %idxprom119
  %arrayidx122 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx121, i32 0, i64 %idxprom118
  %84 = load i32, i32* %arrayidx122, align 4
  %add123 = add nsw i32 %79, %84
  %85 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %85 to i64
  %arrayidx125 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom124
  store i32 %add123, i32* %arrayidx125, align 4
  %86 = load i32, i32* %i, align 4
  %87 = load i32, i32* %n1, align 4
  %add126 = add nsw i32 %86, %87
  %idxprom127 = sext i32 %add126 to i64
  %88 = load i32, i32* %mb_y, align 4
  %idxprom128 = sext i32 %88 to i64
  %89 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7129 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %89, i32 0, i32 52
  %arrayidx130 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7129, i32 0, i64 %idxprom128
  %arrayidx131 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx130, i32 0, i64 %idxprom127
  %90 = load i32, i32* %arrayidx131, align 4
  %91 = load i32, i32* %i1, align 4
  %92 = load i32, i32* %n1, align 4
  %add132 = add nsw i32 %91, %92
  %idxprom133 = sext i32 %add132 to i64
  %93 = load i32, i32* %mb_y, align 4
  %idxprom134 = sext i32 %93 to i64
  %94 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7135 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %94, i32 0, i32 52
  %arrayidx136 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7135, i32 0, i64 %idxprom134
  %arrayidx137 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx136, i32 0, i64 %idxprom133
  %95 = load i32, i32* %arrayidx137, align 4
  %sub138 = sub nsw i32 %90, %95
  %96 = load i32, i32* %i1, align 4
  %idxprom139 = sext i32 %96 to i64
  %arrayidx140 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom139
  store i32 %sub138, i32* %arrayidx140, align 4
  br label %for.inc.141

for.inc.141:                                      ; preds = %for.body.109
  %97 = load i32, i32* %i, align 4
  %inc142 = add nsw i32 %97, 1
  store i32 %inc142, i32* %i, align 4
  br label %for.cond.106

for.end.143:                                      ; preds = %for.cond.106
  %arrayidx144 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %98 = load i32, i32* %arrayidx144, align 4
  %arrayidx145 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %99 = load i32, i32* %arrayidx145, align 4
  %add146 = add nsw i32 %98, %99
  %100 = load i32, i32* %n1, align 4
  %idxprom147 = sext i32 %100 to i64
  %101 = load i32, i32* %mb_y, align 4
  %idxprom148 = sext i32 %101 to i64
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 52
  %arrayidx150 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7149, i32 0, i64 %idxprom148
  %arrayidx151 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx150, i32 0, i64 %idxprom147
  store i32 %add146, i32* %arrayidx151, align 4
  %arrayidx152 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %103 = load i32, i32* %arrayidx152, align 4
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %104 = load i32, i32* %arrayidx153, align 4
  %sub154 = sub nsw i32 %103, %104
  %105 = load i32, i32* %n1, align 4
  %add155 = add nsw i32 %105, 2
  %idxprom156 = sext i32 %add155 to i64
  %106 = load i32, i32* %mb_y, align 4
  %idxprom157 = sext i32 %106 to i64
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7158 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 52
  %arrayidx159 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7158, i32 0, i64 %idxprom157
  %arrayidx160 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx159, i32 0, i64 %idxprom156
  store i32 %sub154, i32* %arrayidx160, align 4
  %arrayidx161 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %108 = load i32, i32* %arrayidx161, align 4
  %mul162 = mul nsw i32 %108, 2
  %arrayidx163 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %109 = load i32, i32* %arrayidx163, align 4
  %add164 = add nsw i32 %mul162, %109
  %110 = load i32, i32* %n1, align 4
  %add165 = add nsw i32 %110, 1
  %idxprom166 = sext i32 %add165 to i64
  %111 = load i32, i32* %mb_y, align 4
  %idxprom167 = sext i32 %111 to i64
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7168 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 52
  %arrayidx169 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7168, i32 0, i64 %idxprom167
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx169, i32 0, i64 %idxprom166
  store i32 %add164, i32* %arrayidx170, align 4
  %arrayidx171 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %113 = load i32, i32* %arrayidx171, align 4
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %114 = load i32, i32* %arrayidx172, align 4
  %mul173 = mul nsw i32 %114, 2
  %sub174 = sub nsw i32 %113, %mul173
  %115 = load i32, i32* %n1, align 4
  %add175 = add nsw i32 %115, 3
  %idxprom176 = sext i32 %add175 to i64
  %116 = load i32, i32* %mb_y, align 4
  %idxprom177 = sext i32 %116 to i64
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7178 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 52
  %arrayidx179 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7178, i32 0, i64 %idxprom177
  %arrayidx180 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx179, i32 0, i64 %idxprom176
  store i32 %sub174, i32* %arrayidx180, align 4
  br label %for.inc.181

for.inc.181:                                      ; preds = %for.end.143
  %118 = load i32, i32* %j, align 4
  %inc182 = add nsw i32 %118, 1
  store i32 %inc182, i32* %j, align 4
  br label %for.cond.101

for.end.183:                                      ; preds = %for.cond.101
  store i32 0, i32* %i, align 4
  br label %for.cond.184

for.cond.184:                                     ; preds = %for.inc.264, %for.end.183
  %119 = load i32, i32* %i, align 4
  %cmp185 = icmp slt i32 %119, 4
  br i1 %cmp185, label %for.body.187, label %for.end.266

for.body.187:                                     ; preds = %for.cond.184
  %120 = load i32, i32* %n1, align 4
  %121 = load i32, i32* %i, align 4
  %add188 = add nsw i32 %120, %121
  store i32 %add188, i32* %j1, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.189

for.cond.189:                                     ; preds = %for.inc.224, %for.body.187
  %122 = load i32, i32* %j, align 4
  %cmp190 = icmp slt i32 %122, 2
  br i1 %cmp190, label %for.body.192, label %for.end.226

for.body.192:                                     ; preds = %for.cond.189
  %123 = load i32, i32* %j, align 4
  %sub193 = sub nsw i32 3, %123
  store i32 %sub193, i32* %j2, align 4
  %124 = load i32, i32* %j1, align 4
  %idxprom194 = sext i32 %124 to i64
  %125 = load i32, i32* %n2, align 4
  %126 = load i32, i32* %j, align 4
  %add195 = add nsw i32 %125, %126
  %idxprom196 = sext i32 %add195 to i64
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 52
  %arrayidx198 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7197, i32 0, i64 %idxprom196
  %arrayidx199 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx198, i32 0, i64 %idxprom194
  %128 = load i32, i32* %arrayidx199, align 4
  %129 = load i32, i32* %j1, align 4
  %idxprom200 = sext i32 %129 to i64
  %130 = load i32, i32* %n2, align 4
  %131 = load i32, i32* %j2, align 4
  %add201 = add nsw i32 %130, %131
  %idxprom202 = sext i32 %add201 to i64
  %132 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %132, i32 0, i32 52
  %arrayidx204 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7203, i32 0, i64 %idxprom202
  %arrayidx205 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx204, i32 0, i64 %idxprom200
  %133 = load i32, i32* %arrayidx205, align 4
  %add206 = add nsw i32 %128, %133
  %134 = load i32, i32* %j, align 4
  %idxprom207 = sext i32 %134 to i64
  %arrayidx208 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom207
  store i32 %add206, i32* %arrayidx208, align 4
  %135 = load i32, i32* %j1, align 4
  %idxprom209 = sext i32 %135 to i64
  %136 = load i32, i32* %n2, align 4
  %137 = load i32, i32* %j, align 4
  %add210 = add nsw i32 %136, %137
  %idxprom211 = sext i32 %add210 to i64
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7212 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 52
  %arrayidx213 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7212, i32 0, i64 %idxprom211
  %arrayidx214 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx213, i32 0, i64 %idxprom209
  %139 = load i32, i32* %arrayidx214, align 4
  %140 = load i32, i32* %j1, align 4
  %idxprom215 = sext i32 %140 to i64
  %141 = load i32, i32* %n2, align 4
  %142 = load i32, i32* %j2, align 4
  %add216 = add nsw i32 %141, %142
  %idxprom217 = sext i32 %add216 to i64
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7218 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 52
  %arrayidx219 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7218, i32 0, i64 %idxprom217
  %arrayidx220 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx219, i32 0, i64 %idxprom215
  %144 = load i32, i32* %arrayidx220, align 4
  %sub221 = sub nsw i32 %139, %144
  %145 = load i32, i32* %j2, align 4
  %idxprom222 = sext i32 %145 to i64
  %arrayidx223 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom222
  store i32 %sub221, i32* %arrayidx223, align 4
  br label %for.inc.224

for.inc.224:                                      ; preds = %for.body.192
  %146 = load i32, i32* %j, align 4
  %inc225 = add nsw i32 %146, 1
  store i32 %inc225, i32* %j, align 4
  br label %for.cond.189

for.end.226:                                      ; preds = %for.cond.189
  %arrayidx227 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %147 = load i32, i32* %arrayidx227, align 4
  %arrayidx228 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %148 = load i32, i32* %arrayidx228, align 4
  %add229 = add nsw i32 %147, %148
  %149 = load i32, i32* %j1, align 4
  %idxprom230 = sext i32 %149 to i64
  %150 = load i32, i32* %n2, align 4
  %idxprom231 = sext i32 %150 to i64
  %151 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7232 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %151, i32 0, i32 52
  %arrayidx233 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7232, i32 0, i64 %idxprom231
  %arrayidx234 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx233, i32 0, i64 %idxprom230
  store i32 %add229, i32* %arrayidx234, align 4
  %arrayidx235 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %152 = load i32, i32* %arrayidx235, align 4
  %arrayidx236 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %153 = load i32, i32* %arrayidx236, align 4
  %sub237 = sub nsw i32 %152, %153
  %154 = load i32, i32* %j1, align 4
  %idxprom238 = sext i32 %154 to i64
  %155 = load i32, i32* %n2, align 4
  %add239 = add nsw i32 %155, 2
  %idxprom240 = sext i32 %add239 to i64
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7241 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 52
  %arrayidx242 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7241, i32 0, i64 %idxprom240
  %arrayidx243 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx242, i32 0, i64 %idxprom238
  store i32 %sub237, i32* %arrayidx243, align 4
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %157 = load i32, i32* %arrayidx244, align 4
  %mul245 = mul nsw i32 %157, 2
  %arrayidx246 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %158 = load i32, i32* %arrayidx246, align 4
  %add247 = add nsw i32 %mul245, %158
  %159 = load i32, i32* %j1, align 4
  %idxprom248 = sext i32 %159 to i64
  %160 = load i32, i32* %n2, align 4
  %add249 = add nsw i32 %160, 1
  %idxprom250 = sext i32 %add249 to i64
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7251 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 52
  %arrayidx252 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7251, i32 0, i64 %idxprom250
  %arrayidx253 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx252, i32 0, i64 %idxprom248
  store i32 %add247, i32* %arrayidx253, align 4
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %162 = load i32, i32* %arrayidx254, align 4
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %163 = load i32, i32* %arrayidx255, align 4
  %mul256 = mul nsw i32 %163, 2
  %sub257 = sub nsw i32 %162, %mul256
  %164 = load i32, i32* %j1, align 4
  %idxprom258 = sext i32 %164 to i64
  %165 = load i32, i32* %n2, align 4
  %add259 = add nsw i32 %165, 3
  %idxprom260 = sext i32 %add259 to i64
  %166 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %166, i32 0, i32 52
  %arrayidx262 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7261, i32 0, i64 %idxprom260
  %arrayidx263 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx262, i32 0, i64 %idxprom258
  store i32 %sub257, i32* %arrayidx263, align 4
  br label %for.inc.264

for.inc.264:                                      ; preds = %for.end.226
  %167 = load i32, i32* %i, align 4
  %inc265 = add nsw i32 %167, 1
  store i32 %inc265, i32* %i, align 4
  br label %for.cond.184

for.end.266:                                      ; preds = %for.cond.184
  br label %for.inc.267

for.inc.267:                                      ; preds = %for.end.266
  %168 = load i32, i32* %n1, align 4
  %add268 = add nsw i32 %168, 4
  store i32 %add268, i32* %n1, align 4
  br label %for.cond.97

for.end.269:                                      ; preds = %for.cond.97
  br label %for.inc.270

for.inc.270:                                      ; preds = %for.end.269
  %169 = load i32, i32* %n2, align 4
  %add271 = add nsw i32 %169, 4
  store i32 %add271, i32* %n2, align 4
  br label %for.cond.93

for.end.272:                                      ; preds = %for.cond.93
  store i32 0, i32* %n2, align 4
  br label %for.cond.273

for.cond.273:                                     ; preds = %for.inc.434, %for.end.272
  %170 = load i32, i32* %n2, align 4
  %cmp274 = icmp sle i32 %170, 4
  br i1 %cmp274, label %for.body.276, label %for.end.436

for.body.276:                                     ; preds = %for.cond.273
  store i32 0, i32* %n1, align 4
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.431, %for.body.276
  %171 = load i32, i32* %n1, align 4
  %cmp278 = icmp sle i32 %171, 4
  br i1 %cmp278, label %for.body.280, label %for.end.433

for.body.280:                                     ; preds = %for.cond.277
  store i32 0, i32* %j, align 4
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.353, %for.body.280
  %172 = load i32, i32* %j, align 4
  %cmp282 = icmp slt i32 %172, 4
  br i1 %cmp282, label %for.body.284, label %for.end.355

for.body.284:                                     ; preds = %for.cond.281
  %173 = load i32, i32* %n2, align 4
  %174 = load i32, i32* %j, align 4
  %add285 = add nsw i32 %173, %174
  store i32 %add285, i32* %mb_y, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.286

for.cond.286:                                     ; preds = %for.inc.317, %for.body.284
  %175 = load i32, i32* %i, align 4
  %cmp287 = icmp slt i32 %175, 2
  br i1 %cmp287, label %for.body.289, label %for.end.319

for.body.289:                                     ; preds = %for.cond.286
  %176 = load i32, i32* %i, align 4
  %sub290 = sub nsw i32 3, %176
  store i32 %sub290, i32* %i1, align 4
  %177 = load i32, i32* %mb_y, align 4
  %idxprom291 = sext i32 %177 to i64
  %178 = load i32, i32* %i, align 4
  %179 = load i32, i32* %n1, align 4
  %add292 = add nsw i32 %178, %179
  %idxprom293 = sext i32 %add292 to i64
  %arrayidx294 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom293
  %arrayidx295 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx294, i32 0, i64 %idxprom291
  %180 = load i32, i32* %arrayidx295, align 4
  %181 = load i32, i32* %mb_y, align 4
  %idxprom296 = sext i32 %181 to i64
  %182 = load i32, i32* %i1, align 4
  %183 = load i32, i32* %n1, align 4
  %add297 = add nsw i32 %182, %183
  %idxprom298 = sext i32 %add297 to i64
  %arrayidx299 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom298
  %arrayidx300 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx299, i32 0, i64 %idxprom296
  %184 = load i32, i32* %arrayidx300, align 4
  %add301 = add nsw i32 %180, %184
  %185 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %185 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom302
  store i32 %add301, i32* %arrayidx303, align 4
  %186 = load i32, i32* %mb_y, align 4
  %idxprom304 = sext i32 %186 to i64
  %187 = load i32, i32* %i, align 4
  %188 = load i32, i32* %n1, align 4
  %add305 = add nsw i32 %187, %188
  %idxprom306 = sext i32 %add305 to i64
  %arrayidx307 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom306
  %arrayidx308 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx307, i32 0, i64 %idxprom304
  %189 = load i32, i32* %arrayidx308, align 4
  %190 = load i32, i32* %mb_y, align 4
  %idxprom309 = sext i32 %190 to i64
  %191 = load i32, i32* %i1, align 4
  %192 = load i32, i32* %n1, align 4
  %add310 = add nsw i32 %191, %192
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom311
  %arrayidx313 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx312, i32 0, i64 %idxprom309
  %193 = load i32, i32* %arrayidx313, align 4
  %sub314 = sub nsw i32 %189, %193
  %194 = load i32, i32* %i1, align 4
  %idxprom315 = sext i32 %194 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom315
  store i32 %sub314, i32* %arrayidx316, align 4
  br label %for.inc.317

for.inc.317:                                      ; preds = %for.body.289
  %195 = load i32, i32* %i, align 4
  %inc318 = add nsw i32 %195, 1
  store i32 %inc318, i32* %i, align 4
  br label %for.cond.286

for.end.319:                                      ; preds = %for.cond.286
  %arrayidx320 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %196 = load i32, i32* %arrayidx320, align 4
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %197 = load i32, i32* %arrayidx321, align 4
  %add322 = add nsw i32 %196, %197
  %198 = load i32, i32* %mb_y, align 4
  %idxprom323 = sext i32 %198 to i64
  %199 = load i32, i32* %n1, align 4
  %idxprom324 = sext i32 %199 to i64
  %arrayidx325 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom324
  %arrayidx326 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx325, i32 0, i64 %idxprom323
  store i32 %add322, i32* %arrayidx326, align 4
  %arrayidx327 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %200 = load i32, i32* %arrayidx327, align 4
  %arrayidx328 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %201 = load i32, i32* %arrayidx328, align 4
  %sub329 = sub nsw i32 %200, %201
  %202 = load i32, i32* %mb_y, align 4
  %idxprom330 = sext i32 %202 to i64
  %203 = load i32, i32* %n1, align 4
  %add331 = add nsw i32 %203, 2
  %idxprom332 = sext i32 %add331 to i64
  %arrayidx333 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom332
  %arrayidx334 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx333, i32 0, i64 %idxprom330
  store i32 %sub329, i32* %arrayidx334, align 4
  %arrayidx335 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %204 = load i32, i32* %arrayidx335, align 4
  %mul336 = mul nsw i32 %204, 2
  %arrayidx337 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %205 = load i32, i32* %arrayidx337, align 4
  %add338 = add nsw i32 %mul336, %205
  %206 = load i32, i32* %mb_y, align 4
  %idxprom339 = sext i32 %206 to i64
  %207 = load i32, i32* %n1, align 4
  %add340 = add nsw i32 %207, 1
  %idxprom341 = sext i32 %add340 to i64
  %arrayidx342 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom341
  %arrayidx343 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx342, i32 0, i64 %idxprom339
  store i32 %add338, i32* %arrayidx343, align 4
  %arrayidx344 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %208 = load i32, i32* %arrayidx344, align 4
  %arrayidx345 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %209 = load i32, i32* %arrayidx345, align 4
  %mul346 = mul nsw i32 %209, 2
  %sub347 = sub nsw i32 %208, %mul346
  %210 = load i32, i32* %mb_y, align 4
  %idxprom348 = sext i32 %210 to i64
  %211 = load i32, i32* %n1, align 4
  %add349 = add nsw i32 %211, 3
  %idxprom350 = sext i32 %add349 to i64
  %arrayidx351 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom350
  %arrayidx352 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx351, i32 0, i64 %idxprom348
  store i32 %sub347, i32* %arrayidx352, align 4
  br label %for.inc.353

for.inc.353:                                      ; preds = %for.end.319
  %212 = load i32, i32* %j, align 4
  %inc354 = add nsw i32 %212, 1
  store i32 %inc354, i32* %j, align 4
  br label %for.cond.281

for.end.355:                                      ; preds = %for.cond.281
  store i32 0, i32* %i, align 4
  br label %for.cond.356

for.cond.356:                                     ; preds = %for.inc.428, %for.end.355
  %213 = load i32, i32* %i, align 4
  %cmp357 = icmp slt i32 %213, 4
  br i1 %cmp357, label %for.body.359, label %for.end.430

for.body.359:                                     ; preds = %for.cond.356
  %214 = load i32, i32* %n1, align 4
  %215 = load i32, i32* %i, align 4
  %add360 = add nsw i32 %214, %215
  store i32 %add360, i32* %j1, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.361

for.cond.361:                                     ; preds = %for.inc.392, %for.body.359
  %216 = load i32, i32* %j, align 4
  %cmp362 = icmp slt i32 %216, 2
  br i1 %cmp362, label %for.body.364, label %for.end.394

for.body.364:                                     ; preds = %for.cond.361
  %217 = load i32, i32* %j, align 4
  %sub365 = sub nsw i32 3, %217
  store i32 %sub365, i32* %j2, align 4
  %218 = load i32, i32* %n2, align 4
  %219 = load i32, i32* %j, align 4
  %add366 = add nsw i32 %218, %219
  %idxprom367 = sext i32 %add366 to i64
  %220 = load i32, i32* %j1, align 4
  %idxprom368 = sext i32 %220 to i64
  %arrayidx369 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom368
  %arrayidx370 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx369, i32 0, i64 %idxprom367
  %221 = load i32, i32* %arrayidx370, align 4
  %222 = load i32, i32* %n2, align 4
  %223 = load i32, i32* %j2, align 4
  %add371 = add nsw i32 %222, %223
  %idxprom372 = sext i32 %add371 to i64
  %224 = load i32, i32* %j1, align 4
  %idxprom373 = sext i32 %224 to i64
  %arrayidx374 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom373
  %arrayidx375 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx374, i32 0, i64 %idxprom372
  %225 = load i32, i32* %arrayidx375, align 4
  %add376 = add nsw i32 %221, %225
  %226 = load i32, i32* %j, align 4
  %idxprom377 = sext i32 %226 to i64
  %arrayidx378 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom377
  store i32 %add376, i32* %arrayidx378, align 4
  %227 = load i32, i32* %n2, align 4
  %228 = load i32, i32* %j, align 4
  %add379 = add nsw i32 %227, %228
  %idxprom380 = sext i32 %add379 to i64
  %229 = load i32, i32* %j1, align 4
  %idxprom381 = sext i32 %229 to i64
  %arrayidx382 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom381
  %arrayidx383 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx382, i32 0, i64 %idxprom380
  %230 = load i32, i32* %arrayidx383, align 4
  %231 = load i32, i32* %n2, align 4
  %232 = load i32, i32* %j2, align 4
  %add384 = add nsw i32 %231, %232
  %idxprom385 = sext i32 %add384 to i64
  %233 = load i32, i32* %j1, align 4
  %idxprom386 = sext i32 %233 to i64
  %arrayidx387 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom386
  %arrayidx388 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx387, i32 0, i64 %idxprom385
  %234 = load i32, i32* %arrayidx388, align 4
  %sub389 = sub nsw i32 %230, %234
  %235 = load i32, i32* %j2, align 4
  %idxprom390 = sext i32 %235 to i64
  %arrayidx391 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom390
  store i32 %sub389, i32* %arrayidx391, align 4
  br label %for.inc.392

for.inc.392:                                      ; preds = %for.body.364
  %236 = load i32, i32* %j, align 4
  %inc393 = add nsw i32 %236, 1
  store i32 %inc393, i32* %j, align 4
  br label %for.cond.361

for.end.394:                                      ; preds = %for.cond.361
  %arrayidx395 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %237 = load i32, i32* %arrayidx395, align 4
  %arrayidx396 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %238 = load i32, i32* %arrayidx396, align 4
  %add397 = add nsw i32 %237, %238
  %239 = load i32, i32* %n2, align 4
  %idxprom398 = sext i32 %239 to i64
  %240 = load i32, i32* %j1, align 4
  %idxprom399 = sext i32 %240 to i64
  %arrayidx400 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom399
  %arrayidx401 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx400, i32 0, i64 %idxprom398
  store i32 %add397, i32* %arrayidx401, align 4
  %arrayidx402 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %241 = load i32, i32* %arrayidx402, align 4
  %arrayidx403 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %242 = load i32, i32* %arrayidx403, align 4
  %sub404 = sub nsw i32 %241, %242
  %243 = load i32, i32* %n2, align 4
  %add405 = add nsw i32 %243, 2
  %idxprom406 = sext i32 %add405 to i64
  %244 = load i32, i32* %j1, align 4
  %idxprom407 = sext i32 %244 to i64
  %arrayidx408 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom407
  %arrayidx409 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx408, i32 0, i64 %idxprom406
  store i32 %sub404, i32* %arrayidx409, align 4
  %arrayidx410 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %245 = load i32, i32* %arrayidx410, align 4
  %mul411 = mul nsw i32 %245, 2
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %246 = load i32, i32* %arrayidx412, align 4
  %add413 = add nsw i32 %mul411, %246
  %247 = load i32, i32* %n2, align 4
  %add414 = add nsw i32 %247, 1
  %idxprom415 = sext i32 %add414 to i64
  %248 = load i32, i32* %j1, align 4
  %idxprom416 = sext i32 %248 to i64
  %arrayidx417 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom416
  %arrayidx418 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx417, i32 0, i64 %idxprom415
  store i32 %add413, i32* %arrayidx418, align 4
  %arrayidx419 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %249 = load i32, i32* %arrayidx419, align 4
  %arrayidx420 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %250 = load i32, i32* %arrayidx420, align 4
  %mul421 = mul nsw i32 %250, 2
  %sub422 = sub nsw i32 %249, %mul421
  %251 = load i32, i32* %n2, align 4
  %add423 = add nsw i32 %251, 3
  %idxprom424 = sext i32 %add423 to i64
  %252 = load i32, i32* %j1, align 4
  %idxprom425 = sext i32 %252 to i64
  %arrayidx426 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom425
  %arrayidx427 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx426, i32 0, i64 %idxprom424
  store i32 %sub422, i32* %arrayidx427, align 4
  br label %for.inc.428

for.inc.428:                                      ; preds = %for.end.394
  %253 = load i32, i32* %i, align 4
  %inc429 = add nsw i32 %253, 1
  store i32 %inc429, i32* %i, align 4
  br label %for.cond.356

for.end.430:                                      ; preds = %for.cond.356
  br label %for.inc.431

for.inc.431:                                      ; preds = %for.end.430
  %254 = load i32, i32* %n1, align 4
  %add432 = add nsw i32 %254, 4
  store i32 %add432, i32* %n1, align 4
  br label %for.cond.277

for.end.433:                                      ; preds = %for.cond.277
  br label %for.inc.434

for.inc.434:                                      ; preds = %for.end.433
  %255 = load i32, i32* %n2, align 4
  %add435 = add nsw i32 %255, 4
  store i32 %add435, i32* %n2, align 4
  br label %for.cond.273

for.end.436:                                      ; preds = %for.cond.273
  %256 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7437 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %256, i32 0, i32 52
  %arrayidx438 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7437, i32 0, i64 0
  %arrayidx439 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx438, i32 0, i64 0
  %257 = load i32, i32* %arrayidx439, align 4
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7440 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 52
  %arrayidx441 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7440, i32 0, i64 0
  %arrayidx442 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx441, i32 0, i64 4
  %259 = load i32, i32* %arrayidx442, align 4
  %add443 = add nsw i32 %257, %259
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7444 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 52
  %arrayidx445 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7444, i32 0, i64 4
  %arrayidx446 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx445, i32 0, i64 0
  %261 = load i32, i32* %arrayidx446, align 4
  %add447 = add nsw i32 %add443, %261
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7448 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 52
  %arrayidx449 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7448, i32 0, i64 4
  %arrayidx450 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx449, i32 0, i64 4
  %263 = load i32, i32* %arrayidx450, align 4
  %add451 = add nsw i32 %add447, %263
  %arrayidx452 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  store i32 %add451, i32* %arrayidx452, align 4
  %264 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7453 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %264, i32 0, i32 52
  %arrayidx454 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7453, i32 0, i64 0
  %arrayidx455 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx454, i32 0, i64 0
  %265 = load i32, i32* %arrayidx455, align 4
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7456 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 52
  %arrayidx457 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7456, i32 0, i64 0
  %arrayidx458 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx457, i32 0, i64 4
  %267 = load i32, i32* %arrayidx458, align 4
  %sub459 = sub nsw i32 %265, %267
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7460 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 52
  %arrayidx461 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7460, i32 0, i64 4
  %arrayidx462 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx461, i32 0, i64 0
  %269 = load i32, i32* %arrayidx462, align 4
  %add463 = add nsw i32 %sub459, %269
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7464 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 52
  %arrayidx465 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7464, i32 0, i64 4
  %arrayidx466 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx465, i32 0, i64 4
  %271 = load i32, i32* %arrayidx466, align 4
  %sub467 = sub nsw i32 %add463, %271
  %arrayidx468 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  store i32 %sub467, i32* %arrayidx468, align 4
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7469 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 52
  %arrayidx470 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7469, i32 0, i64 0
  %arrayidx471 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx470, i32 0, i64 0
  %273 = load i32, i32* %arrayidx471, align 4
  %274 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7472 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %274, i32 0, i32 52
  %arrayidx473 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7472, i32 0, i64 0
  %arrayidx474 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx473, i32 0, i64 4
  %275 = load i32, i32* %arrayidx474, align 4
  %add475 = add nsw i32 %273, %275
  %276 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7476 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %276, i32 0, i32 52
  %arrayidx477 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7476, i32 0, i64 4
  %arrayidx478 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx477, i32 0, i64 0
  %277 = load i32, i32* %arrayidx478, align 4
  %sub479 = sub nsw i32 %add475, %277
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7480 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 52
  %arrayidx481 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7480, i32 0, i64 4
  %arrayidx482 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx481, i32 0, i64 4
  %279 = load i32, i32* %arrayidx482, align 4
  %sub483 = sub nsw i32 %sub479, %279
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  store i32 %sub483, i32* %arrayidx484, align 4
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7485 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 52
  %arrayidx486 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7485, i32 0, i64 0
  %arrayidx487 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx486, i32 0, i64 0
  %281 = load i32, i32* %arrayidx487, align 4
  %282 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7488 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %282, i32 0, i32 52
  %arrayidx489 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7488, i32 0, i64 0
  %arrayidx490 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx489, i32 0, i64 4
  %283 = load i32, i32* %arrayidx490, align 4
  %sub491 = sub nsw i32 %281, %283
  %284 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7492 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %284, i32 0, i32 52
  %arrayidx493 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7492, i32 0, i64 4
  %arrayidx494 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx493, i32 0, i64 0
  %285 = load i32, i32* %arrayidx494, align 4
  %sub495 = sub nsw i32 %sub491, %285
  %286 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7496 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %286, i32 0, i32 52
  %arrayidx497 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7496, i32 0, i64 4
  %arrayidx498 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx497, i32 0, i64 4
  %287 = load i32, i32* %arrayidx498, align 4
  %add499 = add nsw i32 %sub495, %287
  %arrayidx500 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  store i32 %add499, i32* %arrayidx500, align 4
  %arrayidx501 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx502 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx501, i32 0, i64 0
  %288 = load i32, i32* %arrayidx502, align 4
  %arrayidx503 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx504 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx503, i32 0, i64 0
  %289 = load i32, i32* %arrayidx504, align 4
  %add505 = add nsw i32 %288, %289
  %arrayidx506 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx507 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx506, i32 0, i64 4
  %290 = load i32, i32* %arrayidx507, align 4
  %add508 = add nsw i32 %add505, %290
  %arrayidx509 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx510 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx509, i32 0, i64 4
  %291 = load i32, i32* %arrayidx510, align 4
  %add511 = add nsw i32 %add508, %291
  %arrayidx512 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 0
  store i32 %add511, i32* %arrayidx512, align 4
  %arrayidx513 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx514 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx513, i32 0, i64 0
  %292 = load i32, i32* %arrayidx514, align 4
  %arrayidx515 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx516 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx515, i32 0, i64 0
  %293 = load i32, i32* %arrayidx516, align 4
  %sub517 = sub nsw i32 %292, %293
  %arrayidx518 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx519 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx518, i32 0, i64 4
  %294 = load i32, i32* %arrayidx519, align 4
  %add520 = add nsw i32 %sub517, %294
  %arrayidx521 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx522 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx521, i32 0, i64 4
  %295 = load i32, i32* %arrayidx522, align 4
  %sub523 = sub nsw i32 %add520, %295
  %arrayidx524 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 1
  store i32 %sub523, i32* %arrayidx524, align 4
  %arrayidx525 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx526 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx525, i32 0, i64 0
  %296 = load i32, i32* %arrayidx526, align 4
  %arrayidx527 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx528 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx527, i32 0, i64 0
  %297 = load i32, i32* %arrayidx528, align 4
  %add529 = add nsw i32 %296, %297
  %arrayidx530 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx531 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx530, i32 0, i64 4
  %298 = load i32, i32* %arrayidx531, align 4
  %sub532 = sub nsw i32 %add529, %298
  %arrayidx533 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx534 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx533, i32 0, i64 4
  %299 = load i32, i32* %arrayidx534, align 4
  %sub535 = sub nsw i32 %sub532, %299
  %arrayidx536 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 2
  store i32 %sub535, i32* %arrayidx536, align 4
  %arrayidx537 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx538 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx537, i32 0, i64 0
  %300 = load i32, i32* %arrayidx538, align 4
  %arrayidx539 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx540 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx539, i32 0, i64 0
  %301 = load i32, i32* %arrayidx540, align 4
  %sub541 = sub nsw i32 %300, %301
  %arrayidx542 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx543 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx542, i32 0, i64 4
  %302 = load i32, i32* %arrayidx543, align 4
  %sub544 = sub nsw i32 %sub541, %302
  %arrayidx545 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx546 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx545, i32 0, i64 4
  %303 = load i32, i32* %arrayidx546, align 4
  %add547 = add nsw i32 %sub544, %303
  %arrayidx548 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 3
  store i32 %add547, i32* %arrayidx548, align 4
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.549

for.cond.549:                                     ; preds = %for.inc.775, %for.end.436
  %304 = load i32, i32* %coeff_ctr, align 4
  %cmp550 = icmp slt i32 %304, 4
  br i1 %cmp550, label %for.body.552, label %for.end.777

for.body.552:                                     ; preds = %for.cond.549
  %305 = load i32, i32* %run, align 4
  %inc553 = add nsw i32 %305, 1
  store i32 %inc553, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %306 = load i32, i32* %coeff_ctr, align 4
  %idxprom554 = sext i32 %306 to i64
  %arrayidx555 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom554
  %307 = load i32, i32* %arrayidx555, align 4
  %call556 = call i32 @iabs(i32 %307)
  %308 = load i32, i32* %qp_rem_sp, align 4
  %idxprom557 = sext i32 %308 to i64
  %arrayidx558 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom557
  %arrayidx559 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx558, i32 0, i64 0
  %arrayidx560 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx559, i32 0, i64 0
  %309 = load i32, i32* %arrayidx560, align 4
  %mul561 = mul nsw i32 %call556, %309
  %310 = load i32, i32* %qp_const2, align 4
  %mul562 = mul nsw i32 2, %310
  %add563 = add nsw i32 %mul561, %mul562
  %311 = load i32, i32* %q_bits_sp, align 4
  %add564 = add nsw i32 %311, 1
  %shr = ashr i32 %add563, %add564
  store i32 %shr, i32* %c_err1, align 4
  %312 = load i32, i32* %c_err1, align 4
  %313 = load i32, i32* %q_bits_sp, align 4
  %add565 = add nsw i32 %313, 1
  %shl566 = shl i32 %312, %add565
  %314 = load i32, i32* %qp_rem_sp, align 4
  %idxprom567 = sext i32 %314 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom567
  %arrayidx569 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i32 0, i64 0
  %arrayidx570 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx569, i32 0, i64 0
  %315 = load i32, i32* %arrayidx570, align 4
  %div571 = sdiv i32 %shl566, %315
  store i32 %div571, i32* %c_err1, align 4
  %316 = load i32, i32* %coeff_ctr, align 4
  %idxprom572 = sext i32 %316 to i64
  %arrayidx573 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom572
  %317 = load i32, i32* %arrayidx573, align 4
  %318 = load i32, i32* %c_err1, align 4
  %319 = load i32, i32* %coeff_ctr, align 4
  %idxprom574 = sext i32 %319 to i64
  %arrayidx575 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom574
  %320 = load i32, i32* %arrayidx575, align 4
  %call576 = call i32 @isignab(i32 %318, i32 %320)
  %sub577 = sub nsw i32 %317, %call576
  store i32 %sub577, i32* %c_err1, align 4
  %321 = load i32, i32* %c_err1, align 4
  %call578 = call i32 @iabs(i32 %321)
  %322 = load i32, i32* %qp_rem, align 4
  %idxprom579 = sext i32 %322 to i64
  %arrayidx580 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom579
  %arrayidx581 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx580, i32 0, i64 0
  %arrayidx582 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx581, i32 0, i64 0
  %323 = load i32, i32* %arrayidx582, align 4
  %mul583 = mul nsw i32 %call578, %323
  %324 = load i32, i32* %qp_const, align 4
  %mul584 = mul nsw i32 2, %324
  %add585 = add nsw i32 %mul583, %mul584
  %325 = load i32, i32* %q_bits, align 4
  %add586 = add nsw i32 %325, 1
  %shr587 = ashr i32 %add585, %add586
  store i32 %shr587, i32* %level1, align 4
  %326 = load i32, i32* %coeff_ctr, align 4
  %idxprom588 = sext i32 %326 to i64
  %arrayidx589 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom588
  %327 = load i32, i32* %arrayidx589, align 4
  %328 = load i32, i32* %coeff_ctr, align 4
  %idxprom590 = sext i32 %328 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom590
  %329 = load i32, i32* %arrayidx591, align 4
  %sub592 = sub nsw i32 %327, %329
  store i32 %sub592, i32* %c_err2, align 4
  %330 = load i32, i32* %c_err2, align 4
  %call593 = call i32 @iabs(i32 %330)
  %331 = load i32, i32* %qp_rem, align 4
  %idxprom594 = sext i32 %331 to i64
  %arrayidx595 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom594
  %arrayidx596 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx595, i32 0, i64 0
  %arrayidx597 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx596, i32 0, i64 0
  %332 = load i32, i32* %arrayidx597, align 4
  %mul598 = mul nsw i32 %call593, %332
  %333 = load i32, i32* %qp_const, align 4
  %mul599 = mul nsw i32 2, %333
  %add600 = add nsw i32 %mul598, %mul599
  %334 = load i32, i32* %q_bits, align 4
  %add601 = add nsw i32 %334, 1
  %shr602 = ashr i32 %add600, %add601
  store i32 %shr602, i32* %level2, align 4
  %335 = load i32, i32* %level1, align 4
  %336 = load i32, i32* %level2, align 4
  %cmp603 = icmp ne i32 %335, %336
  br i1 %cmp603, label %land.lhs.true, label %if.else.672

land.lhs.true:                                    ; preds = %for.body.552
  %337 = load i32, i32* %level1, align 4
  %cmp605 = icmp ne i32 %337, 0
  br i1 %cmp605, label %land.lhs.true.607, label %if.else.672

land.lhs.true.607:                                ; preds = %land.lhs.true
  %338 = load i32, i32* %level2, align 4
  %cmp608 = icmp ne i32 %338, 0
  br i1 %cmp608, label %if.then, label %if.else.672

if.then:                                          ; preds = %land.lhs.true.607
  %339 = load i32, i32* %coeff_ctr, align 4
  %idxprom610 = sext i32 %339 to i64
  %arrayidx611 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom610
  %340 = load i32, i32* %arrayidx611, align 4
  %341 = load i32, i32* %level1, align 4
  %342 = load i32, i32* %c_err1, align 4
  %call612 = call i32 @isignab(i32 %341, i32 %342)
  %343 = load i32, i32* %qp_rem, align 4
  %idxprom613 = sext i32 %343 to i64
  %arrayidx614 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom613
  %arrayidx615 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx614, i32 0, i64 0
  %arrayidx616 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx615, i32 0, i64 0
  %344 = load i32, i32* %arrayidx616, align 4
  %mul617 = mul nsw i32 %call612, %344
  %345 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 0, i64 0), align 4
  %mul618 = mul nsw i32 %mul617, %345
  %346 = load i32, i32* %qp_per, align 4
  %shl619 = shl i32 %mul618, %346
  %shr620 = ashr i32 %shl619, 5
  %sub621 = sub nsw i32 %340, %shr620
  %347 = load i32, i32* %coeff_ctr, align 4
  %idxprom622 = sext i32 %347 to i64
  %arrayidx623 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom622
  %348 = load i32, i32* %arrayidx623, align 4
  %sub624 = sub nsw i32 %sub621, %348
  %conv625 = sitofp i32 %sub624 to double
  store double %conv625, double* %D_dis1, align 8
  %349 = load i32, i32* %level1, align 4
  %350 = load i32, i32* %run, align 4
  call void @levrun_linfo_c2x2(i32 %349, i32 %350, i32* %len, i32* %info)
  %351 = load double, double* %D_dis1, align 8
  %352 = load double, double* %D_dis1, align 8
  %mul626 = fmul double %351, %352
  %353 = load double, double* %lambda_mode, align 8
  %354 = load i32, i32* %len, align 4
  %conv627 = sitofp i32 %354 to double
  %mul628 = fmul double %353, %conv627
  %add629 = fadd double %mul626, %mul628
  store double %add629, double* %D_dis1, align 8
  %355 = load i32, i32* %coeff_ctr, align 4
  %idxprom630 = sext i32 %355 to i64
  %arrayidx631 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom630
  %356 = load i32, i32* %arrayidx631, align 4
  %357 = load i32, i32* %level2, align 4
  %358 = load i32, i32* %c_err2, align 4
  %call632 = call i32 @isignab(i32 %357, i32 %358)
  %359 = load i32, i32* %qp_rem, align 4
  %idxprom633 = sext i32 %359 to i64
  %arrayidx634 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom633
  %arrayidx635 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx634, i32 0, i64 0
  %arrayidx636 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx635, i32 0, i64 0
  %360 = load i32, i32* %arrayidx636, align 4
  %mul637 = mul nsw i32 %call632, %360
  %361 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 0, i64 0), align 4
  %mul638 = mul nsw i32 %mul637, %361
  %362 = load i32, i32* %qp_per, align 4
  %shl639 = shl i32 %mul638, %362
  %shr640 = ashr i32 %shl639, 5
  %sub641 = sub nsw i32 %356, %shr640
  %363 = load i32, i32* %coeff_ctr, align 4
  %idxprom642 = sext i32 %363 to i64
  %arrayidx643 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom642
  %364 = load i32, i32* %arrayidx643, align 4
  %sub644 = sub nsw i32 %sub641, %364
  %conv645 = sitofp i32 %sub644 to double
  store double %conv645, double* %D_dis2, align 8
  %365 = load i32, i32* %level2, align 4
  %366 = load i32, i32* %run, align 4
  call void @levrun_linfo_c2x2(i32 %365, i32 %366, i32* %len, i32* %info)
  %367 = load double, double* %D_dis2, align 8
  %368 = load double, double* %D_dis2, align 8
  %mul646 = fmul double %367, %368
  %369 = load double, double* %lambda_mode, align 8
  %370 = load i32, i32* %len, align 4
  %conv647 = sitofp i32 %370 to double
  %mul648 = fmul double %369, %conv647
  %add649 = fadd double %mul646, %mul648
  store double %add649, double* %D_dis2, align 8
  %371 = load double, double* %D_dis1, align 8
  %372 = load double, double* %D_dis2, align 8
  %cmp650 = fcmp oeq double %371, %372
  br i1 %cmp650, label %if.then.652, label %if.else

if.then.652:                                      ; preds = %if.then
  %373 = load i32, i32* %level1, align 4
  %call653 = call i32 @iabs(i32 %373)
  %374 = load i32, i32* %level2, align 4
  %call654 = call i32 @iabs(i32 %374)
  %cmp655 = icmp slt i32 %call653, %call654
  br i1 %cmp655, label %cond.true.657, label %cond.false.658

cond.true.657:                                    ; preds = %if.then.652
  %375 = load i32, i32* %level1, align 4
  br label %cond.end.659

cond.false.658:                                   ; preds = %if.then.652
  %376 = load i32, i32* %level2, align 4
  br label %cond.end.659

cond.end.659:                                     ; preds = %cond.false.658, %cond.true.657
  %cond660 = phi i32 [ %375, %cond.true.657 ], [ %376, %cond.false.658 ]
  store i32 %cond660, i32* %level, align 4
  br label %if.end.665

if.else:                                          ; preds = %if.then
  %377 = load double, double* %D_dis1, align 8
  %378 = load double, double* %D_dis2, align 8
  %cmp661 = fcmp olt double %377, %378
  br i1 %cmp661, label %if.then.663, label %if.else.664

if.then.663:                                      ; preds = %if.else
  %379 = load i32, i32* %level1, align 4
  store i32 %379, i32* %level, align 4
  br label %if.end

if.else.664:                                      ; preds = %if.else
  %380 = load i32, i32* %level2, align 4
  store i32 %380, i32* %level, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.664, %if.then.663
  br label %if.end.665

if.end.665:                                       ; preds = %if.end, %cond.end.659
  %381 = load i32, i32* %level, align 4
  %382 = load i32, i32* %level1, align 4
  %cmp666 = icmp eq i32 %381, %382
  br i1 %cmp666, label %cond.true.668, label %cond.false.669

cond.true.668:                                    ; preds = %if.end.665
  %383 = load i32, i32* %c_err1, align 4
  br label %cond.end.670

cond.false.669:                                   ; preds = %if.end.665
  %384 = load i32, i32* %c_err2, align 4
  br label %cond.end.670

cond.end.670:                                     ; preds = %cond.false.669, %cond.true.668
  %cond671 = phi i32 [ %383, %cond.true.668 ], [ %384, %cond.false.669 ]
  store i32 %cond671, i32* %c_err, align 4
  br label %if.end.690

if.else.672:                                      ; preds = %land.lhs.true.607, %land.lhs.true, %for.body.552
  %385 = load i32, i32* %level1, align 4
  %386 = load i32, i32* %level2, align 4
  %cmp673 = icmp eq i32 %385, %386
  br i1 %cmp673, label %if.then.675, label %if.else.676

if.then.675:                                      ; preds = %if.else.672
  %387 = load i32, i32* %level1, align 4
  store i32 %387, i32* %level, align 4
  %388 = load i32, i32* %c_err1, align 4
  store i32 %388, i32* %c_err, align 4
  br label %if.end.689

if.else.676:                                      ; preds = %if.else.672
  %389 = load i32, i32* %level1, align 4
  %cmp677 = icmp eq i32 %389, 0
  br i1 %cmp677, label %cond.true.679, label %cond.false.680

cond.true.679:                                    ; preds = %if.else.676
  %390 = load i32, i32* %level1, align 4
  br label %cond.end.681

cond.false.680:                                   ; preds = %if.else.676
  %391 = load i32, i32* %level2, align 4
  br label %cond.end.681

cond.end.681:                                     ; preds = %cond.false.680, %cond.true.679
  %cond682 = phi i32 [ %390, %cond.true.679 ], [ %391, %cond.false.680 ]
  store i32 %cond682, i32* %level, align 4
  %392 = load i32, i32* %level1, align 4
  %cmp683 = icmp eq i32 %392, 0
  br i1 %cmp683, label %cond.true.685, label %cond.false.686

cond.true.685:                                    ; preds = %cond.end.681
  %393 = load i32, i32* %c_err1, align 4
  br label %cond.end.687

cond.false.686:                                   ; preds = %cond.end.681
  %394 = load i32, i32* %c_err2, align 4
  br label %cond.end.687

cond.end.687:                                     ; preds = %cond.false.686, %cond.true.685
  %cond688 = phi i32 [ %393, %cond.true.685 ], [ %394, %cond.false.686 ]
  store i32 %cond688, i32* %c_err, align 4
  br label %if.end.689

if.end.689:                                       ; preds = %cond.end.687, %if.then.675
  br label %if.end.690

if.end.690:                                       ; preds = %if.end.689, %cond.end.670
  %395 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %395, i32 0, i32 74
  %396 = load i32, i32* %symbol_mode, align 4
  %cmp691 = icmp eq i32 %396, 0
  br i1 %cmp691, label %land.lhs.true.693, label %if.end.702

land.lhs.true.693:                                ; preds = %if.end.690
  %397 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp694 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %397, i32 0, i32 9
  %398 = load i32, i32* %qp694, align 4
  %cmp695 = icmp slt i32 %398, 4
  br i1 %cmp695, label %if.then.697, label %if.end.702

if.then.697:                                      ; preds = %land.lhs.true.693
  %399 = load i32, i32* %level, align 4
  %cmp698 = icmp sgt i32 %399, 2063
  br i1 %cmp698, label %if.then.700, label %if.end.701

if.then.700:                                      ; preds = %if.then.697
  store i32 2063, i32* %level, align 4
  br label %if.end.701

if.end.701:                                       ; preds = %if.then.700, %if.then.697
  br label %if.end.702

if.end.702:                                       ; preds = %if.end.701, %land.lhs.true.693, %if.end.690
  %400 = load i32, i32* %level, align 4
  %cmp703 = icmp ne i32 %400, 0
  br i1 %cmp703, label %if.then.705, label %if.end.725

if.then.705:                                      ; preds = %if.end.702
  %401 = load i32, i32* %uv.addr, align 4
  %shl706 = shl i32 %401, 2
  %shl707 = shl i32 983040, %shl706
  %conv708 = sext i32 %shl707 to i64
  %402 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, %struct.macroblock* %402, i32 0, i32 13
  %403 = load i64, i64* %cbp_blk, align 8
  %or = or i64 %403, %conv708
  store i64 %or, i64* %cbp_blk, align 8
  %404 = load i32, i32* %cr_cbp.addr, align 4
  %call709 = call i32 @imax(i32 1, i32 %404)
  store i32 %call709, i32* %cr_cbp.addr, align 4
  %405 = load i32, i32* %level, align 4
  %406 = load i32, i32* %c_err, align 4
  %call710 = call i32 @isignab(i32 %405, i32 %406)
  %407 = load i32, i32* %scan_pos, align 4
  %idxprom711 = sext i32 %407 to i64
  %408 = load i32*, i32** %DCLevel, align 8
  %arrayidx712 = getelementptr inbounds i32, i32* %408, i64 %idxprom711
  store i32 %call710, i32* %arrayidx712, align 4
  %409 = load i32, i32* %run, align 4
  %410 = load i32, i32* %scan_pos, align 4
  %idxprom713 = sext i32 %410 to i64
  %411 = load i32*, i32** %DCRun, align 8
  %arrayidx714 = getelementptr inbounds i32, i32* %411, i64 %idxprom713
  store i32 %409, i32* %arrayidx714, align 4
  %412 = load i32, i32* %scan_pos, align 4
  %inc715 = add nsw i32 %412, 1
  store i32 %inc715, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %413 = load i32, i32* %level, align 4
  %414 = load i32, i32* %c_err, align 4
  %call716 = call i32 @isignab(i32 %413, i32 %414)
  %415 = load i32, i32* %qp_rem, align 4
  %idxprom717 = sext i32 %415 to i64
  %arrayidx718 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom717
  %arrayidx719 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx718, i32 0, i64 0
  %arrayidx720 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx719, i32 0, i64 0
  %416 = load i32, i32* %arrayidx720, align 4
  %mul721 = mul nsw i32 %call716, %416
  %417 = load i32, i32* getelementptr inbounds ([4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 0, i64 0), align 4
  %mul722 = mul nsw i32 %mul721, %417
  %418 = load i32, i32* %qp_per, align 4
  %shl723 = shl i32 %mul722, %418
  %shr724 = ashr i32 %shl723, 5
  store i32 %shr724, i32* %ilev, align 4
  br label %if.end.725

if.end.725:                                       ; preds = %if.then.705, %if.end.702
  %419 = load i32, i32* %coeff_ctr, align 4
  %idxprom726 = sext i32 %419 to i64
  %arrayidx727 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom726
  %420 = load i32, i32* %arrayidx727, align 4
  %421 = load i32, i32* %ilev, align 4
  %add728 = add nsw i32 %421, %420
  store i32 %add728, i32* %ilev, align 4
  %422 = load i32, i32* %ilev, align 4
  %call729 = call i32 @iabs(i32 %422)
  %423 = load i32, i32* %qp_rem_sp, align 4
  %idxprom730 = sext i32 %423 to i64
  %arrayidx731 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom730
  %arrayidx732 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx731, i32 0, i64 0
  %arrayidx733 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx732, i32 0, i64 0
  %424 = load i32, i32* %arrayidx733, align 4
  %mul734 = mul nsw i32 %call729, %424
  %425 = load i32, i32* %qp_const2, align 4
  %mul735 = mul nsw i32 2, %425
  %add736 = add nsw i32 %mul734, %mul735
  %426 = load i32, i32* %q_bits_sp, align 4
  %add737 = add nsw i32 %426, 1
  %shr738 = ashr i32 %add736, %add737
  %427 = load i32, i32* %ilev, align 4
  %call739 = call i32 @isignab(i32 %shr738, i32 %427)
  %428 = load i32, i32* %qp_rem_sp, align 4
  %idxprom740 = sext i32 %428 to i64
  %arrayidx741 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom740
  %arrayidx742 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx741, i32 0, i64 0
  %arrayidx743 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx742, i32 0, i64 0
  %429 = load i32, i32* %arrayidx743, align 4
  %mul744 = mul nsw i32 %call739, %429
  %430 = load i32, i32* %qp_per_sp, align 4
  %shl745 = shl i32 %mul744, %430
  %431 = load i32, i32* %coeff_ctr, align 4
  %idxprom746 = sext i32 %431 to i64
  %arrayidx747 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom746
  store i32 %shl745, i32* %arrayidx747, align 4
  %432 = load i32, i32* @si_frame_indicator, align 4
  %tobool = icmp ne i32 %432, 0
  br i1 %tobool, label %if.end.774, label %land.lhs.true.748

land.lhs.true.748:                                ; preds = %if.end.725
  %433 = load i32, i32* @sp2_frame_indicator, align 4
  %tobool749 = icmp ne i32 %433, 0
  br i1 %tobool749, label %if.end.774, label %if.then.750

if.then.750:                                      ; preds = %land.lhs.true.748
  %434 = load i32, i32* %ilev, align 4
  %call751 = call i32 @iabs(i32 %434)
  %435 = load i32, i32* %qp_rem_sp, align 4
  %idxprom752 = sext i32 %435 to i64
  %arrayidx753 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom752
  %arrayidx754 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx753, i32 0, i64 0
  %arrayidx755 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx754, i32 0, i64 0
  %436 = load i32, i32* %arrayidx755, align 4
  %mul756 = mul nsw i32 %call751, %436
  %437 = load i32, i32* %qp_const2, align 4
  %mul757 = mul nsw i32 2, %437
  %add758 = add nsw i32 %mul756, %mul757
  %438 = load i32, i32* %q_bits_sp, align 4
  %add759 = add nsw i32 %438, 1
  %shr760 = ashr i32 %add758, %add759
  %439 = load i32, i32* %ilev, align 4
  %call761 = call i32 @isignab(i32 %shr760, i32 %439)
  %440 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %440, i32 0, i32 41
  %441 = load i32, i32* %pix_c_x, align 4
  %442 = load i32, i32* %coeff_ctr, align 4
  %div762 = sdiv i32 %442, 2
  %mul763 = mul nsw i32 4, %div762
  %add764 = add nsw i32 %441, %mul763
  %idxprom765 = sext i32 %add764 to i64
  %443 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %443, i32 0, i32 42
  %444 = load i32, i32* %pix_c_y, align 4
  %445 = load i32, i32* %coeff_ctr, align 4
  %rem766 = srem i32 %445, 2
  %mul767 = mul nsw i32 4, %rem766
  %add768 = add nsw i32 %444, %mul767
  %idxprom769 = sext i32 %add768 to i64
  %446 = load i32, i32* %uv.addr, align 4
  %idxprom770 = sext i32 %446 to i64
  %447 = load i32***, i32**** @lrec_uv, align 8
  %arrayidx771 = getelementptr inbounds i32**, i32*** %447, i64 %idxprom770
  %448 = load i32**, i32*** %arrayidx771, align 8
  %arrayidx772 = getelementptr inbounds i32*, i32** %448, i64 %idxprom769
  %449 = load i32*, i32** %arrayidx772, align 8
  %arrayidx773 = getelementptr inbounds i32, i32* %449, i64 %idxprom765
  store i32 %call761, i32* %arrayidx773, align 4
  br label %if.end.774

if.end.774:                                       ; preds = %if.then.750, %land.lhs.true.748, %if.end.725
  br label %for.inc.775

for.inc.775:                                      ; preds = %if.end.774
  %450 = load i32, i32* %coeff_ctr, align 4
  %inc776 = add nsw i32 %450, 1
  store i32 %inc776, i32* %coeff_ctr, align 4
  br label %for.cond.549

for.end.777:                                      ; preds = %for.cond.549
  %451 = load i32, i32* %scan_pos, align 4
  %idxprom778 = sext i32 %451 to i64
  %452 = load i32*, i32** %DCLevel, align 8
  %arrayidx779 = getelementptr inbounds i32, i32* %452, i64 %idxprom778
  store i32 0, i32* %arrayidx779, align 4
  %arrayidx780 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %453 = load i32, i32* %arrayidx780, align 4
  %arrayidx781 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %454 = load i32, i32* %arrayidx781, align 4
  %add782 = add nsw i32 %453, %454
  %arrayidx783 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %455 = load i32, i32* %arrayidx783, align 4
  %add784 = add nsw i32 %add782, %455
  %arrayidx785 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %456 = load i32, i32* %arrayidx785, align 4
  %add786 = add nsw i32 %add784, %456
  %div787 = sdiv i32 %add786, 2
  %457 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7788 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %457, i32 0, i32 52
  %arrayidx789 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7788, i32 0, i64 0
  %arrayidx790 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx789, i32 0, i64 0
  store i32 %div787, i32* %arrayidx790, align 4
  %arrayidx791 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %458 = load i32, i32* %arrayidx791, align 4
  %arrayidx792 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %459 = load i32, i32* %arrayidx792, align 4
  %sub793 = sub nsw i32 %458, %459
  %arrayidx794 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %460 = load i32, i32* %arrayidx794, align 4
  %add795 = add nsw i32 %sub793, %460
  %arrayidx796 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %461 = load i32, i32* %arrayidx796, align 4
  %sub797 = sub nsw i32 %add795, %461
  %div798 = sdiv i32 %sub797, 2
  %462 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7799 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %462, i32 0, i32 52
  %arrayidx800 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7799, i32 0, i64 0
  %arrayidx801 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx800, i32 0, i64 4
  store i32 %div798, i32* %arrayidx801, align 4
  %arrayidx802 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %463 = load i32, i32* %arrayidx802, align 4
  %arrayidx803 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %464 = load i32, i32* %arrayidx803, align 4
  %add804 = add nsw i32 %463, %464
  %arrayidx805 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %465 = load i32, i32* %arrayidx805, align 4
  %sub806 = sub nsw i32 %add804, %465
  %arrayidx807 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %466 = load i32, i32* %arrayidx807, align 4
  %sub808 = sub nsw i32 %sub806, %466
  %div809 = sdiv i32 %sub808, 2
  %467 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7810 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %467, i32 0, i32 52
  %arrayidx811 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7810, i32 0, i64 4
  %arrayidx812 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx811, i32 0, i64 0
  store i32 %div809, i32* %arrayidx812, align 4
  %arrayidx813 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %468 = load i32, i32* %arrayidx813, align 4
  %arrayidx814 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %469 = load i32, i32* %arrayidx814, align 4
  %sub815 = sub nsw i32 %468, %469
  %arrayidx816 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %470 = load i32, i32* %arrayidx816, align 4
  %sub817 = sub nsw i32 %sub815, %470
  %arrayidx818 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %471 = load i32, i32* %arrayidx818, align 4
  %add819 = add nsw i32 %sub817, %471
  %div820 = sdiv i32 %add819, 2
  %472 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7821 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %472, i32 0, i32 52
  %arrayidx822 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7821, i32 0, i64 4
  %arrayidx823 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx822, i32 0, i64 4
  store i32 %div820, i32* %arrayidx823, align 4
  store i32 0, i32* %coeff_cost, align 4
  store i32 0, i32* %cr_cbp_tmp, align 4
  store i32 0, i32* %n2, align 4
  br label %for.cond.824

for.cond.824:                                     ; preds = %for.inc.1195, %for.end.777
  %473 = load i32, i32* %n2, align 4
  %cmp825 = icmp sle i32 %473, 4
  br i1 %cmp825, label %for.body.827, label %for.end.1197

for.body.827:                                     ; preds = %for.cond.824
  store i32 0, i32* %n1, align 4
  br label %for.cond.828

for.cond.828:                                     ; preds = %for.inc.1192, %for.body.827
  %474 = load i32, i32* %n1, align 4
  %cmp829 = icmp sle i32 %474, 4
  br i1 %cmp829, label %for.body.831, label %for.end.1194

for.body.831:                                     ; preds = %for.cond.828
  %475 = load i32, i32* %n2, align 4
  %shr832 = ashr i32 %475, 2
  %mul833 = mul nsw i32 2, %shr832
  %476 = load i32, i32* %n1, align 4
  %shr834 = ashr i32 %476, 2
  %add835 = add nsw i32 %mul833, %shr834
  store i32 %add835, i32* %b4, align 4
  %477 = load i32, i32* %b4, align 4
  %idxprom836 = sext i32 %477 to i64
  %478 = load i32, i32* %uv.addr, align 4
  %add837 = add nsw i32 %478, 4
  %idxprom838 = sext i32 %add837 to i64
  %479 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %479, i32 0, i32 53
  %480 = load i32****, i32***** %cofAC, align 8
  %arrayidx839 = getelementptr inbounds i32***, i32**** %480, i64 %idxprom838
  %481 = load i32***, i32**** %arrayidx839, align 8
  %arrayidx840 = getelementptr inbounds i32**, i32*** %481, i64 %idxprom836
  %482 = load i32**, i32*** %arrayidx840, align 8
  %arrayidx841 = getelementptr inbounds i32*, i32** %482, i64 0
  %483 = load i32*, i32** %arrayidx841, align 8
  store i32* %483, i32** %ACLevel, align 8
  %484 = load i32, i32* %b4, align 4
  %idxprom842 = sext i32 %484 to i64
  %485 = load i32, i32* %uv.addr, align 4
  %add843 = add nsw i32 %485, 4
  %idxprom844 = sext i32 %add843 to i64
  %486 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC845 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %486, i32 0, i32 53
  %487 = load i32****, i32***** %cofAC845, align 8
  %arrayidx846 = getelementptr inbounds i32***, i32**** %487, i64 %idxprom844
  %488 = load i32***, i32**** %arrayidx846, align 8
  %arrayidx847 = getelementptr inbounds i32**, i32*** %488, i64 %idxprom842
  %489 = load i32**, i32*** %arrayidx847, align 8
  %arrayidx848 = getelementptr inbounds i32*, i32** %489, i64 1
  %490 = load i32*, i32** %arrayidx848, align 8
  store i32* %490, i32** %ACRun, align 8
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.849

for.cond.849:                                     ; preds = %for.inc.1187, %for.body.831
  %491 = load i32, i32* %coeff_ctr, align 4
  %cmp850 = icmp slt i32 %491, 16
  br i1 %cmp850, label %for.body.852, label %for.end.1189

for.body.852:                                     ; preds = %for.cond.849
  %492 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %is_field_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %492, i32 0, i32 20
  %493 = load i32, i32* %is_field_mode, align 4
  %tobool853 = icmp ne i32 %493, 0
  br i1 %tobool853, label %if.then.854, label %if.else.863

if.then.854:                                      ; preds = %for.body.852
  %494 = load i32, i32* %coeff_ctr, align 4
  %idxprom855 = sext i32 %494 to i64
  %arrayidx856 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom855
  %arrayidx857 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx856, i32 0, i64 0
  %495 = load i8, i8* %arrayidx857, align 1
  %conv858 = zext i8 %495 to i32
  store i32 %conv858, i32* %i, align 4
  %496 = load i32, i32* %coeff_ctr, align 4
  %idxprom859 = sext i32 %496 to i64
  %arrayidx860 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom859
  %arrayidx861 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx860, i32 0, i64 1
  %497 = load i8, i8* %arrayidx861, align 1
  %conv862 = zext i8 %497 to i32
  store i32 %conv862, i32* %j, align 4
  br label %if.end.872

if.else.863:                                      ; preds = %for.body.852
  %498 = load i32, i32* %coeff_ctr, align 4
  %idxprom864 = sext i32 %498 to i64
  %arrayidx865 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom864
  %arrayidx866 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx865, i32 0, i64 0
  %499 = load i8, i8* %arrayidx866, align 1
  %conv867 = zext i8 %499 to i32
  store i32 %conv867, i32* %i, align 4
  %500 = load i32, i32* %coeff_ctr, align 4
  %idxprom868 = sext i32 %500 to i64
  %arrayidx869 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom868
  %arrayidx870 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx869, i32 0, i64 1
  %501 = load i8, i8* %arrayidx870, align 1
  %conv871 = zext i8 %501 to i32
  store i32 %conv871, i32* %j, align 4
  br label %if.end.872

if.end.872:                                       ; preds = %if.else.863, %if.then.854
  %502 = load i32, i32* %run, align 4
  %inc873 = add nsw i32 %502, 1
  store i32 %inc873, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %503 = load i32, i32* %n2, align 4
  %504 = load i32, i32* %j, align 4
  %add874 = add nsw i32 %503, %504
  %idxprom875 = sext i32 %add874 to i64
  %505 = load i32, i32* %n1, align 4
  %506 = load i32, i32* %i, align 4
  %add876 = add nsw i32 %505, %506
  %idxprom877 = sext i32 %add876 to i64
  %arrayidx878 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom877
  %arrayidx879 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx878, i32 0, i64 %idxprom875
  %507 = load i32, i32* %arrayidx879, align 4
  %call880 = call i32 @iabs(i32 %507)
  %508 = load i32, i32* %j, align 4
  %idxprom881 = sext i32 %508 to i64
  %509 = load i32, i32* %i, align 4
  %idxprom882 = sext i32 %509 to i64
  %510 = load i32, i32* %qp_rem_sp, align 4
  %idxprom883 = sext i32 %510 to i64
  %arrayidx884 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom883
  %arrayidx885 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx884, i32 0, i64 %idxprom882
  %arrayidx886 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx885, i32 0, i64 %idxprom881
  %511 = load i32, i32* %arrayidx886, align 4
  %mul887 = mul nsw i32 %call880, %511
  %512 = load i32, i32* %qp_const2, align 4
  %add888 = add nsw i32 %mul887, %512
  %513 = load i32, i32* %q_bits_sp, align 4
  %shr889 = ashr i32 %add888, %513
  store i32 %shr889, i32* %c_err1, align 4
  %514 = load i32, i32* %c_err1, align 4
  %515 = load i32, i32* %q_bits_sp, align 4
  %shl890 = shl i32 %514, %515
  %516 = load i32, i32* %j, align 4
  %idxprom891 = sext i32 %516 to i64
  %517 = load i32, i32* %i, align 4
  %idxprom892 = sext i32 %517 to i64
  %518 = load i32, i32* %qp_rem_sp, align 4
  %idxprom893 = sext i32 %518 to i64
  %arrayidx894 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom893
  %arrayidx895 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx894, i32 0, i64 %idxprom892
  %arrayidx896 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx895, i32 0, i64 %idxprom891
  %519 = load i32, i32* %arrayidx896, align 4
  %div897 = sdiv i32 %shl890, %519
  store i32 %div897, i32* %c_err1, align 4
  %520 = load i32, i32* %n1, align 4
  %521 = load i32, i32* %i, align 4
  %add898 = add nsw i32 %520, %521
  %idxprom899 = sext i32 %add898 to i64
  %522 = load i32, i32* %n2, align 4
  %523 = load i32, i32* %j, align 4
  %add900 = add nsw i32 %522, %523
  %idxprom901 = sext i32 %add900 to i64
  %524 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7902 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %524, i32 0, i32 52
  %arrayidx903 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7902, i32 0, i64 %idxprom901
  %arrayidx904 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx903, i32 0, i64 %idxprom899
  %525 = load i32, i32* %arrayidx904, align 4
  %526 = load i32, i32* %c_err1, align 4
  %527 = load i32, i32* %n2, align 4
  %528 = load i32, i32* %j, align 4
  %add905 = add nsw i32 %527, %528
  %idxprom906 = sext i32 %add905 to i64
  %529 = load i32, i32* %n1, align 4
  %530 = load i32, i32* %i, align 4
  %add907 = add nsw i32 %529, %530
  %idxprom908 = sext i32 %add907 to i64
  %arrayidx909 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom908
  %arrayidx910 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx909, i32 0, i64 %idxprom906
  %531 = load i32, i32* %arrayidx910, align 4
  %call911 = call i32 @isignab(i32 %526, i32 %531)
  %sub912 = sub nsw i32 %525, %call911
  store i32 %sub912, i32* %c_err1, align 4
  %532 = load i32, i32* %c_err1, align 4
  %call913 = call i32 @iabs(i32 %532)
  %533 = load i32, i32* %j, align 4
  %idxprom914 = sext i32 %533 to i64
  %534 = load i32, i32* %i, align 4
  %idxprom915 = sext i32 %534 to i64
  %535 = load i32, i32* %qp_rem, align 4
  %idxprom916 = sext i32 %535 to i64
  %arrayidx917 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom916
  %arrayidx918 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx917, i32 0, i64 %idxprom915
  %arrayidx919 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx918, i32 0, i64 %idxprom914
  %536 = load i32, i32* %arrayidx919, align 4
  %mul920 = mul nsw i32 %call913, %536
  %537 = load i32, i32* %qp_const, align 4
  %add921 = add nsw i32 %mul920, %537
  %538 = load i32, i32* %q_bits, align 4
  %shr922 = ashr i32 %add921, %538
  store i32 %shr922, i32* %level1, align 4
  %539 = load i32, i32* %n1, align 4
  %540 = load i32, i32* %i, align 4
  %add923 = add nsw i32 %539, %540
  %idxprom924 = sext i32 %add923 to i64
  %541 = load i32, i32* %n2, align 4
  %542 = load i32, i32* %j, align 4
  %add925 = add nsw i32 %541, %542
  %idxprom926 = sext i32 %add925 to i64
  %543 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7927 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %543, i32 0, i32 52
  %arrayidx928 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7927, i32 0, i64 %idxprom926
  %arrayidx929 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx928, i32 0, i64 %idxprom924
  %544 = load i32, i32* %arrayidx929, align 4
  %545 = load i32, i32* %n2, align 4
  %546 = load i32, i32* %j, align 4
  %add930 = add nsw i32 %545, %546
  %idxprom931 = sext i32 %add930 to i64
  %547 = load i32, i32* %n1, align 4
  %548 = load i32, i32* %i, align 4
  %add932 = add nsw i32 %547, %548
  %idxprom933 = sext i32 %add932 to i64
  %arrayidx934 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom933
  %arrayidx935 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx934, i32 0, i64 %idxprom931
  %549 = load i32, i32* %arrayidx935, align 4
  %sub936 = sub nsw i32 %544, %549
  store i32 %sub936, i32* %c_err2, align 4
  %550 = load i32, i32* %c_err2, align 4
  %call937 = call i32 @iabs(i32 %550)
  %551 = load i32, i32* %j, align 4
  %idxprom938 = sext i32 %551 to i64
  %552 = load i32, i32* %i, align 4
  %idxprom939 = sext i32 %552 to i64
  %553 = load i32, i32* %qp_rem, align 4
  %idxprom940 = sext i32 %553 to i64
  %arrayidx941 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom940
  %arrayidx942 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx941, i32 0, i64 %idxprom939
  %arrayidx943 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx942, i32 0, i64 %idxprom938
  %554 = load i32, i32* %arrayidx943, align 4
  %mul944 = mul nsw i32 %call937, %554
  %555 = load i32, i32* %qp_const, align 4
  %add945 = add nsw i32 %mul944, %555
  %556 = load i32, i32* %q_bits, align 4
  %shr946 = ashr i32 %add945, %556
  store i32 %shr946, i32* %level2, align 4
  %557 = load i32, i32* %level1, align 4
  %558 = load i32, i32* %level2, align 4
  %cmp947 = icmp ne i32 %557, %558
  br i1 %cmp947, label %land.lhs.true.949, label %if.else.1050

land.lhs.true.949:                                ; preds = %if.end.872
  %559 = load i32, i32* %level1, align 4
  %cmp950 = icmp ne i32 %559, 0
  br i1 %cmp950, label %land.lhs.true.952, label %if.else.1050

land.lhs.true.952:                                ; preds = %land.lhs.true.949
  %560 = load i32, i32* %level2, align 4
  %cmp953 = icmp ne i32 %560, 0
  br i1 %cmp953, label %if.then.955, label %if.else.1050

if.then.955:                                      ; preds = %land.lhs.true.952
  %561 = load i32, i32* %n1, align 4
  %562 = load i32, i32* %i, align 4
  %add956 = add nsw i32 %561, %562
  %idxprom957 = sext i32 %add956 to i64
  %563 = load i32, i32* %n2, align 4
  %564 = load i32, i32* %j, align 4
  %add958 = add nsw i32 %563, %564
  %idxprom959 = sext i32 %add958 to i64
  %565 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7960 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %565, i32 0, i32 52
  %arrayidx961 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7960, i32 0, i64 %idxprom959
  %arrayidx962 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx961, i32 0, i64 %idxprom957
  %566 = load i32, i32* %arrayidx962, align 4
  %567 = load i32, i32* %level1, align 4
  %568 = load i32, i32* %c_err1, align 4
  %call963 = call i32 @isignab(i32 %567, i32 %568)
  %569 = load i32, i32* %j, align 4
  %idxprom964 = sext i32 %569 to i64
  %570 = load i32, i32* %i, align 4
  %idxprom965 = sext i32 %570 to i64
  %571 = load i32, i32* %qp_rem, align 4
  %idxprom966 = sext i32 %571 to i64
  %arrayidx967 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom966
  %arrayidx968 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx967, i32 0, i64 %idxprom965
  %arrayidx969 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx968, i32 0, i64 %idxprom964
  %572 = load i32, i32* %arrayidx969, align 4
  %mul970 = mul nsw i32 %call963, %572
  %573 = load i32, i32* %j, align 4
  %idxprom971 = sext i32 %573 to i64
  %574 = load i32, i32* %i, align 4
  %idxprom972 = sext i32 %574 to i64
  %arrayidx973 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom972
  %arrayidx974 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx973, i32 0, i64 %idxprom971
  %575 = load i32, i32* %arrayidx974, align 4
  %mul975 = mul nsw i32 %mul970, %575
  %576 = load i32, i32* %qp_per, align 4
  %shl976 = shl i32 %mul975, %576
  %shr977 = ashr i32 %shl976, 6
  %sub978 = sub nsw i32 %566, %shr977
  %577 = load i32, i32* %n2, align 4
  %578 = load i32, i32* %j, align 4
  %add979 = add nsw i32 %577, %578
  %idxprom980 = sext i32 %add979 to i64
  %579 = load i32, i32* %n1, align 4
  %580 = load i32, i32* %i, align 4
  %add981 = add nsw i32 %579, %580
  %idxprom982 = sext i32 %add981 to i64
  %arrayidx983 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom982
  %arrayidx984 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx983, i32 0, i64 %idxprom980
  %581 = load i32, i32* %arrayidx984, align 4
  %sub985 = sub nsw i32 %sub978, %581
  %conv986 = sitofp i32 %sub985 to double
  store double %conv986, double* %D_dis1, align 8
  %582 = load i32, i32* %level1, align 4
  %583 = load i32, i32* %run, align 4
  call void @levrun_linfo_inter(i32 %582, i32 %583, i32* %len, i32* %info)
  %584 = load double, double* %D_dis1, align 8
  %585 = load double, double* %D_dis1, align 8
  %mul987 = fmul double %584, %585
  %586 = load double, double* %lambda_mode, align 8
  %587 = load i32, i32* %len, align 4
  %conv988 = sitofp i32 %587 to double
  %mul989 = fmul double %586, %conv988
  %add990 = fadd double %mul987, %mul989
  store double %add990, double* %D_dis1, align 8
  %588 = load i32, i32* %n1, align 4
  %589 = load i32, i32* %i, align 4
  %add991 = add nsw i32 %588, %589
  %idxprom992 = sext i32 %add991 to i64
  %590 = load i32, i32* %n2, align 4
  %591 = load i32, i32* %j, align 4
  %add993 = add nsw i32 %590, %591
  %idxprom994 = sext i32 %add993 to i64
  %592 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7995 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %592, i32 0, i32 52
  %arrayidx996 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7995, i32 0, i64 %idxprom994
  %arrayidx997 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx996, i32 0, i64 %idxprom992
  %593 = load i32, i32* %arrayidx997, align 4
  %594 = load i32, i32* %level2, align 4
  %595 = load i32, i32* %c_err2, align 4
  %call998 = call i32 @isignab(i32 %594, i32 %595)
  %596 = load i32, i32* %j, align 4
  %idxprom999 = sext i32 %596 to i64
  %597 = load i32, i32* %i, align 4
  %idxprom1000 = sext i32 %597 to i64
  %598 = load i32, i32* %qp_rem, align 4
  %idxprom1001 = sext i32 %598 to i64
  %arrayidx1002 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom1001
  %arrayidx1003 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx1002, i32 0, i64 %idxprom1000
  %arrayidx1004 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1003, i32 0, i64 %idxprom999
  %599 = load i32, i32* %arrayidx1004, align 4
  %mul1005 = mul nsw i32 %call998, %599
  %600 = load i32, i32* %j, align 4
  %idxprom1006 = sext i32 %600 to i64
  %601 = load i32, i32* %i, align 4
  %idxprom1007 = sext i32 %601 to i64
  %arrayidx1008 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom1007
  %arrayidx1009 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1008, i32 0, i64 %idxprom1006
  %602 = load i32, i32* %arrayidx1009, align 4
  %mul1010 = mul nsw i32 %mul1005, %602
  %603 = load i32, i32* %qp_per, align 4
  %shl1011 = shl i32 %mul1010, %603
  %shr1012 = ashr i32 %shl1011, 6
  %sub1013 = sub nsw i32 %593, %shr1012
  %604 = load i32, i32* %n2, align 4
  %605 = load i32, i32* %j, align 4
  %add1014 = add nsw i32 %604, %605
  %idxprom1015 = sext i32 %add1014 to i64
  %606 = load i32, i32* %n1, align 4
  %607 = load i32, i32* %i, align 4
  %add1016 = add nsw i32 %606, %607
  %idxprom1017 = sext i32 %add1016 to i64
  %arrayidx1018 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom1017
  %arrayidx1019 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx1018, i32 0, i64 %idxprom1015
  %608 = load i32, i32* %arrayidx1019, align 4
  %sub1020 = sub nsw i32 %sub1013, %608
  %conv1021 = sitofp i32 %sub1020 to double
  store double %conv1021, double* %D_dis2, align 8
  %609 = load i32, i32* %level2, align 4
  %610 = load i32, i32* %run, align 4
  call void @levrun_linfo_inter(i32 %609, i32 %610, i32* %len, i32* %info)
  %611 = load double, double* %D_dis2, align 8
  %612 = load double, double* %D_dis2, align 8
  %mul1022 = fmul double %611, %612
  %613 = load double, double* %lambda_mode, align 8
  %614 = load i32, i32* %len, align 4
  %conv1023 = sitofp i32 %614 to double
  %mul1024 = fmul double %613, %conv1023
  %add1025 = fadd double %mul1022, %mul1024
  store double %add1025, double* %D_dis2, align 8
  %615 = load double, double* %D_dis1, align 8
  %616 = load double, double* %D_dis2, align 8
  %cmp1026 = fcmp oeq double %615, %616
  br i1 %cmp1026, label %if.then.1028, label %if.else.1037

if.then.1028:                                     ; preds = %if.then.955
  %617 = load i32, i32* %level1, align 4
  %call1029 = call i32 @iabs(i32 %617)
  %618 = load i32, i32* %level2, align 4
  %call1030 = call i32 @iabs(i32 %618)
  %cmp1031 = icmp slt i32 %call1029, %call1030
  br i1 %cmp1031, label %cond.true.1033, label %cond.false.1034

cond.true.1033:                                   ; preds = %if.then.1028
  %619 = load i32, i32* %level1, align 4
  br label %cond.end.1035

cond.false.1034:                                  ; preds = %if.then.1028
  %620 = load i32, i32* %level2, align 4
  br label %cond.end.1035

cond.end.1035:                                    ; preds = %cond.false.1034, %cond.true.1033
  %cond1036 = phi i32 [ %619, %cond.true.1033 ], [ %620, %cond.false.1034 ]
  store i32 %cond1036, i32* %level, align 4
  br label %if.end.1043

if.else.1037:                                     ; preds = %if.then.955
  %621 = load double, double* %D_dis1, align 8
  %622 = load double, double* %D_dis2, align 8
  %cmp1038 = fcmp olt double %621, %622
  br i1 %cmp1038, label %if.then.1040, label %if.else.1041

if.then.1040:                                     ; preds = %if.else.1037
  %623 = load i32, i32* %level1, align 4
  store i32 %623, i32* %level, align 4
  br label %if.end.1042

if.else.1041:                                     ; preds = %if.else.1037
  %624 = load i32, i32* %level2, align 4
  store i32 %624, i32* %level, align 4
  br label %if.end.1042

if.end.1042:                                      ; preds = %if.else.1041, %if.then.1040
  br label %if.end.1043

if.end.1043:                                      ; preds = %if.end.1042, %cond.end.1035
  %625 = load i32, i32* %level, align 4
  %626 = load i32, i32* %level1, align 4
  %cmp1044 = icmp eq i32 %625, %626
  br i1 %cmp1044, label %cond.true.1046, label %cond.false.1047

cond.true.1046:                                   ; preds = %if.end.1043
  %627 = load i32, i32* %c_err1, align 4
  br label %cond.end.1048

cond.false.1047:                                  ; preds = %if.end.1043
  %628 = load i32, i32* %c_err2, align 4
  br label %cond.end.1048

cond.end.1048:                                    ; preds = %cond.false.1047, %cond.true.1046
  %cond1049 = phi i32 [ %627, %cond.true.1046 ], [ %628, %cond.false.1047 ]
  store i32 %cond1049, i32* %c_err, align 4
  br label %if.end.1068

if.else.1050:                                     ; preds = %land.lhs.true.952, %land.lhs.true.949, %if.end.872
  %629 = load i32, i32* %level1, align 4
  %630 = load i32, i32* %level2, align 4
  %cmp1051 = icmp eq i32 %629, %630
  br i1 %cmp1051, label %if.then.1053, label %if.else.1054

if.then.1053:                                     ; preds = %if.else.1050
  %631 = load i32, i32* %level1, align 4
  store i32 %631, i32* %level, align 4
  %632 = load i32, i32* %c_err1, align 4
  store i32 %632, i32* %c_err, align 4
  br label %if.end.1067

if.else.1054:                                     ; preds = %if.else.1050
  %633 = load i32, i32* %level1, align 4
  %cmp1055 = icmp eq i32 %633, 0
  br i1 %cmp1055, label %cond.true.1057, label %cond.false.1058

cond.true.1057:                                   ; preds = %if.else.1054
  %634 = load i32, i32* %level1, align 4
  br label %cond.end.1059

cond.false.1058:                                  ; preds = %if.else.1054
  %635 = load i32, i32* %level2, align 4
  br label %cond.end.1059

cond.end.1059:                                    ; preds = %cond.false.1058, %cond.true.1057
  %cond1060 = phi i32 [ %634, %cond.true.1057 ], [ %635, %cond.false.1058 ]
  store i32 %cond1060, i32* %level, align 4
  %636 = load i32, i32* %level1, align 4
  %cmp1061 = icmp eq i32 %636, 0
  br i1 %cmp1061, label %cond.true.1063, label %cond.false.1064

cond.true.1063:                                   ; preds = %cond.end.1059
  %637 = load i32, i32* %c_err1, align 4
  br label %cond.end.1065

cond.false.1064:                                  ; preds = %cond.end.1059
  %638 = load i32, i32* %c_err2, align 4
  br label %cond.end.1065

cond.end.1065:                                    ; preds = %cond.false.1064, %cond.true.1063
  %cond1066 = phi i32 [ %637, %cond.true.1063 ], [ %638, %cond.false.1064 ]
  store i32 %cond1066, i32* %c_err, align 4
  br label %if.end.1067

if.end.1067:                                      ; preds = %cond.end.1065, %if.then.1053
  br label %if.end.1068

if.end.1068:                                      ; preds = %if.end.1067, %cond.end.1048
  %639 = load i32, i32* %level, align 4
  %cmp1069 = icmp ne i32 %639, 0
  br i1 %cmp1069, label %if.then.1071, label %if.end.1114

if.then.1071:                                     ; preds = %if.end.1068
  %640 = load i32, i32* %uv.addr, align 4
  %shl1072 = shl i32 %640, 2
  %add1073 = add nsw i32 16, %shl1072
  %641 = load i32, i32* %n2, align 4
  %shr1074 = ashr i32 %641, 1
  %642 = load i32, i32* %n1, align 4
  %shr1075 = ashr i32 %642, 2
  %add1076 = add nsw i32 %shr1074, %shr1075
  %add1077 = add nsw i32 %add1073, %add1076
  %sh_prom = zext i32 %add1077 to i64
  %shl1078 = shl i64 1, %sh_prom
  %643 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk1079 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %643, i32 0, i32 13
  %644 = load i64, i64* %cbp_blk1079, align 8
  %or1080 = or i64 %644, %shl1078
  store i64 %or1080, i64* %cbp_blk1079, align 8
  %645 = load i32, i32* %level, align 4
  %cmp1081 = icmp sgt i32 %645, 1
  br i1 %cmp1081, label %if.then.1083, label %if.else.1085

if.then.1083:                                     ; preds = %if.then.1071
  %646 = load i32, i32* %coeff_cost, align 4
  %add1084 = add nsw i32 %646, 999999
  store i32 %add1084, i32* %coeff_cost, align 4
  br label %if.end.1092

if.else.1085:                                     ; preds = %if.then.1071
  %647 = load i32, i32* %run, align 4
  %idxprom1086 = sext i32 %647 to i64
  %648 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %648, i32 0, i32 116
  %649 = load i32, i32* %disthres, align 4
  %idxprom1087 = sext i32 %649 to i64
  %arrayidx1088 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom1087
  %arrayidx1089 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx1088, i32 0, i64 %idxprom1086
  %650 = load i8, i8* %arrayidx1089, align 1
  %conv1090 = zext i8 %650 to i32
  %651 = load i32, i32* %coeff_cost, align 4
  %add1091 = add nsw i32 %651, %conv1090
  store i32 %add1091, i32* %coeff_cost, align 4
  br label %if.end.1092

if.end.1092:                                      ; preds = %if.else.1085, %if.then.1083
  store i32 2, i32* %cr_cbp_tmp, align 4
  %652 = load i32, i32* %level, align 4
  %653 = load i32, i32* %c_err, align 4
  %call1093 = call i32 @isignab(i32 %652, i32 %653)
  %654 = load i32, i32* %scan_pos, align 4
  %idxprom1094 = sext i32 %654 to i64
  %655 = load i32*, i32** %ACLevel, align 8
  %arrayidx1095 = getelementptr inbounds i32, i32* %655, i64 %idxprom1094
  store i32 %call1093, i32* %arrayidx1095, align 4
  %656 = load i32, i32* %run, align 4
  %657 = load i32, i32* %scan_pos, align 4
  %idxprom1096 = sext i32 %657 to i64
  %658 = load i32*, i32** %ACRun, align 8
  %arrayidx1097 = getelementptr inbounds i32, i32* %658, i64 %idxprom1096
  store i32 %656, i32* %arrayidx1097, align 4
  %659 = load i32, i32* %scan_pos, align 4
  %inc1098 = add nsw i32 %659, 1
  store i32 %inc1098, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  %660 = load i32, i32* %level, align 4
  %661 = load i32, i32* %c_err, align 4
  %call1099 = call i32 @isignab(i32 %660, i32 %661)
  %662 = load i32, i32* %j, align 4
  %idxprom1100 = sext i32 %662 to i64
  %663 = load i32, i32* %i, align 4
  %idxprom1101 = sext i32 %663 to i64
  %664 = load i32, i32* %qp_rem, align 4
  %idxprom1102 = sext i32 %664 to i64
  %arrayidx1103 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom1102
  %arrayidx1104 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx1103, i32 0, i64 %idxprom1101
  %arrayidx1105 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1104, i32 0, i64 %idxprom1100
  %665 = load i32, i32* %arrayidx1105, align 4
  %mul1106 = mul nsw i32 %call1099, %665
  %666 = load i32, i32* %j, align 4
  %idxprom1107 = sext i32 %666 to i64
  %667 = load i32, i32* %i, align 4
  %idxprom1108 = sext i32 %667 to i64
  %arrayidx1109 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @A, i32 0, i64 %idxprom1108
  %arrayidx1110 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1109, i32 0, i64 %idxprom1107
  %668 = load i32, i32* %arrayidx1110, align 4
  %mul1111 = mul nsw i32 %mul1106, %668
  %669 = load i32, i32* %qp_per, align 4
  %shl1112 = shl i32 %mul1111, %669
  %shr1113 = ashr i32 %shl1112, 6
  store i32 %shr1113, i32* %ilev, align 4
  br label %if.end.1114

if.end.1114:                                      ; preds = %if.end.1092, %if.end.1068
  %670 = load i32, i32* %n2, align 4
  %671 = load i32, i32* %j, align 4
  %add1115 = add nsw i32 %670, %671
  %idxprom1116 = sext i32 %add1115 to i64
  %672 = load i32, i32* %n1, align 4
  %673 = load i32, i32* %i, align 4
  %add1117 = add nsw i32 %672, %673
  %idxprom1118 = sext i32 %add1117 to i64
  %arrayidx1119 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom1118
  %arrayidx1120 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx1119, i32 0, i64 %idxprom1116
  %674 = load i32, i32* %arrayidx1120, align 4
  %675 = load i32, i32* %ilev, align 4
  %add1121 = add nsw i32 %675, %674
  store i32 %add1121, i32* %ilev, align 4
  %676 = load i32, i32* @si_frame_indicator, align 4
  %tobool1122 = icmp ne i32 %676, 0
  br i1 %tobool1122, label %if.end.1160, label %land.lhs.true.1123

land.lhs.true.1123:                               ; preds = %if.end.1114
  %677 = load i32, i32* @sp2_frame_indicator, align 4
  %tobool1124 = icmp ne i32 %677, 0
  br i1 %tobool1124, label %if.end.1160, label %if.then.1125

if.then.1125:                                     ; preds = %land.lhs.true.1123
  %678 = load i32, i32* %n2, align 4
  %679 = load i32, i32* %j, align 4
  %add1126 = add nsw i32 %678, %679
  %rem1127 = srem i32 %add1126, 4
  %cmp1128 = icmp eq i32 %rem1127, 0
  br i1 %cmp1128, label %land.lhs.true.1130, label %if.then.1135

land.lhs.true.1130:                               ; preds = %if.then.1125
  %680 = load i32, i32* %n1, align 4
  %681 = load i32, i32* %i, align 4
  %add1131 = add nsw i32 %680, %681
  %rem1132 = srem i32 %add1131, 4
  %cmp1133 = icmp eq i32 %rem1132, 0
  br i1 %cmp1133, label %if.end.1159, label %if.then.1135

if.then.1135:                                     ; preds = %land.lhs.true.1130, %if.then.1125
  %682 = load i32, i32* %ilev, align 4
  %call1136 = call i32 @iabs(i32 %682)
  %683 = load i32, i32* %j, align 4
  %idxprom1137 = sext i32 %683 to i64
  %684 = load i32, i32* %i, align 4
  %idxprom1138 = sext i32 %684 to i64
  %685 = load i32, i32* %qp_rem_sp, align 4
  %idxprom1139 = sext i32 %685 to i64
  %arrayidx1140 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom1139
  %arrayidx1141 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx1140, i32 0, i64 %idxprom1138
  %arrayidx1142 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1141, i32 0, i64 %idxprom1137
  %686 = load i32, i32* %arrayidx1142, align 4
  %mul1143 = mul nsw i32 %call1136, %686
  %687 = load i32, i32* %qp_const2, align 4
  %add1144 = add nsw i32 %mul1143, %687
  %688 = load i32, i32* %q_bits_sp, align 4
  %shr1145 = ashr i32 %add1144, %688
  %689 = load i32, i32* %ilev, align 4
  %call1146 = call i32 @isignab(i32 %shr1145, i32 %689)
  %690 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x1147 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %690, i32 0, i32 41
  %691 = load i32, i32* %pix_c_x1147, align 4
  %692 = load i32, i32* %n2, align 4
  %add1148 = add nsw i32 %691, %692
  %693 = load i32, i32* %i, align 4
  %add1149 = add nsw i32 %add1148, %693
  %idxprom1150 = sext i32 %add1149 to i64
  %694 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y1151 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %694, i32 0, i32 42
  %695 = load i32, i32* %pix_c_y1151, align 4
  %696 = load i32, i32* %n1, align 4
  %add1152 = add nsw i32 %695, %696
  %697 = load i32, i32* %j, align 4
  %add1153 = add nsw i32 %add1152, %697
  %idxprom1154 = sext i32 %add1153 to i64
  %698 = load i32, i32* %uv.addr, align 4
  %idxprom1155 = sext i32 %698 to i64
  %699 = load i32***, i32**** @lrec_uv, align 8
  %arrayidx1156 = getelementptr inbounds i32**, i32*** %699, i64 %idxprom1155
  %700 = load i32**, i32*** %arrayidx1156, align 8
  %arrayidx1157 = getelementptr inbounds i32*, i32** %700, i64 %idxprom1154
  %701 = load i32*, i32** %arrayidx1157, align 8
  %arrayidx1158 = getelementptr inbounds i32, i32* %701, i64 %idxprom1150
  store i32 %call1146, i32* %arrayidx1158, align 4
  br label %if.end.1159

if.end.1159:                                      ; preds = %if.then.1135, %land.lhs.true.1130
  br label %if.end.1160

if.end.1160:                                      ; preds = %if.end.1159, %land.lhs.true.1123, %if.end.1114
  %702 = load i32, i32* %ilev, align 4
  %call1161 = call i32 @iabs(i32 %702)
  %703 = load i32, i32* %j, align 4
  %idxprom1162 = sext i32 %703 to i64
  %704 = load i32, i32* %i, align 4
  %idxprom1163 = sext i32 %704 to i64
  %705 = load i32, i32* %qp_rem_sp, align 4
  %idxprom1164 = sext i32 %705 to i64
  %arrayidx1165 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom1164
  %arrayidx1166 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx1165, i32 0, i64 %idxprom1163
  %arrayidx1167 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1166, i32 0, i64 %idxprom1162
  %706 = load i32, i32* %arrayidx1167, align 4
  %mul1168 = mul nsw i32 %call1161, %706
  %707 = load i32, i32* %qp_const2, align 4
  %add1169 = add nsw i32 %mul1168, %707
  %708 = load i32, i32* %q_bits_sp, align 4
  %shr1170 = ashr i32 %add1169, %708
  %709 = load i32, i32* %ilev, align 4
  %call1171 = call i32 @isignab(i32 %shr1170, i32 %709)
  %710 = load i32, i32* %j, align 4
  %idxprom1172 = sext i32 %710 to i64
  %711 = load i32, i32* %i, align 4
  %idxprom1173 = sext i32 %711 to i64
  %712 = load i32, i32* %qp_rem_sp, align 4
  %idxprom1174 = sext i32 %712 to i64
  %arrayidx1175 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom1174
  %arrayidx1176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx1175, i32 0, i64 %idxprom1173
  %arrayidx1177 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1176, i32 0, i64 %idxprom1172
  %713 = load i32, i32* %arrayidx1177, align 4
  %mul1178 = mul nsw i32 %call1171, %713
  %714 = load i32, i32* %qp_per_sp, align 4
  %shl1179 = shl i32 %mul1178, %714
  %715 = load i32, i32* %n1, align 4
  %716 = load i32, i32* %i, align 4
  %add1180 = add nsw i32 %715, %716
  %idxprom1181 = sext i32 %add1180 to i64
  %717 = load i32, i32* %n2, align 4
  %718 = load i32, i32* %j, align 4
  %add1182 = add nsw i32 %717, %718
  %idxprom1183 = sext i32 %add1182 to i64
  %719 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71184 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %719, i32 0, i32 52
  %arrayidx1185 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71184, i32 0, i64 %idxprom1183
  %arrayidx1186 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1185, i32 0, i64 %idxprom1181
  store i32 %shl1179, i32* %arrayidx1186, align 4
  br label %for.inc.1187

for.inc.1187:                                     ; preds = %if.end.1160
  %720 = load i32, i32* %coeff_ctr, align 4
  %inc1188 = add nsw i32 %720, 1
  store i32 %inc1188, i32* %coeff_ctr, align 4
  br label %for.cond.849

for.end.1189:                                     ; preds = %for.cond.849
  %721 = load i32, i32* %scan_pos, align 4
  %idxprom1190 = sext i32 %721 to i64
  %722 = load i32*, i32** %ACLevel, align 8
  %arrayidx1191 = getelementptr inbounds i32, i32* %722, i64 %idxprom1190
  store i32 0, i32* %arrayidx1191, align 4
  br label %for.inc.1192

for.inc.1192:                                     ; preds = %for.end.1189
  %723 = load i32, i32* %n1, align 4
  %add1193 = add nsw i32 %723, 4
  store i32 %add1193, i32* %n1, align 4
  br label %for.cond.828

for.end.1194:                                     ; preds = %for.cond.828
  br label %for.inc.1195

for.inc.1195:                                     ; preds = %for.end.1194
  %724 = load i32, i32* %n2, align 4
  %add1196 = add nsw i32 %724, 4
  store i32 %add1196, i32* %n2, align 4
  br label %for.cond.824

for.end.1197:                                     ; preds = %for.cond.824
  %725 = load i32, i32* %cr_cbp_tmp, align 4
  %cmp1198 = icmp eq i32 %725, 2
  br i1 %cmp1198, label %if.then.1200, label %if.end.1201

if.then.1200:                                     ; preds = %for.end.1197
  store i32 2, i32* %cr_cbp.addr, align 4
  br label %if.end.1201

if.end.1201:                                      ; preds = %if.then.1200, %for.end.1197
  store i32 0, i32* %n2, align 4
  br label %for.cond.1202

for.cond.1202:                                    ; preds = %for.inc.1366, %if.end.1201
  %726 = load i32, i32* %n2, align 4
  %cmp1203 = icmp sle i32 %726, 4
  br i1 %cmp1203, label %for.body.1205, label %for.end.1368

for.body.1205:                                    ; preds = %for.cond.1202
  store i32 0, i32* %n1, align 4
  br label %for.cond.1206

for.cond.1206:                                    ; preds = %for.inc.1363, %for.body.1205
  %727 = load i32, i32* %n1, align 4
  %cmp1207 = icmp sle i32 %727, 4
  br i1 %cmp1207, label %for.body.1209, label %for.end.1365

for.body.1209:                                    ; preds = %for.cond.1206
  store i32 0, i32* %j, align 4
  br label %for.cond.1210

for.cond.1210:                                    ; preds = %for.inc.1280, %for.body.1209
  %728 = load i32, i32* %j, align 4
  %cmp1211 = icmp slt i32 %728, 4
  br i1 %cmp1211, label %for.body.1213, label %for.end.1282

for.body.1213:                                    ; preds = %for.cond.1210
  store i32 0, i32* %i, align 4
  br label %for.cond.1214

for.cond.1214:                                    ; preds = %for.inc.1227, %for.body.1213
  %729 = load i32, i32* %i, align 4
  %cmp1215 = icmp slt i32 %729, 4
  br i1 %cmp1215, label %for.body.1217, label %for.end.1229

for.body.1217:                                    ; preds = %for.cond.1214
  %730 = load i32, i32* %n1, align 4
  %731 = load i32, i32* %i, align 4
  %add1218 = add nsw i32 %730, %731
  %idxprom1219 = sext i32 %add1218 to i64
  %732 = load i32, i32* %n2, align 4
  %733 = load i32, i32* %j, align 4
  %add1220 = add nsw i32 %732, %733
  %idxprom1221 = sext i32 %add1220 to i64
  %734 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71222 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %734, i32 0, i32 52
  %arrayidx1223 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71222, i32 0, i64 %idxprom1221
  %arrayidx1224 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1223, i32 0, i64 %idxprom1219
  %735 = load i32, i32* %arrayidx1224, align 4
  %736 = load i32, i32* %i, align 4
  %idxprom1225 = sext i32 %736 to i64
  %arrayidx1226 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom1225
  store i32 %735, i32* %arrayidx1226, align 4
  br label %for.inc.1227

for.inc.1227:                                     ; preds = %for.body.1217
  %737 = load i32, i32* %i, align 4
  %inc1228 = add nsw i32 %737, 1
  store i32 %inc1228, i32* %i, align 4
  br label %for.cond.1214

for.end.1229:                                     ; preds = %for.cond.1214
  %arrayidx1230 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %738 = load i32, i32* %arrayidx1230, align 4
  %arrayidx1231 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %739 = load i32, i32* %arrayidx1231, align 4
  %add1232 = add nsw i32 %738, %739
  %arrayidx1233 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add1232, i32* %arrayidx1233, align 4
  %arrayidx1234 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %740 = load i32, i32* %arrayidx1234, align 4
  %arrayidx1235 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %741 = load i32, i32* %arrayidx1235, align 4
  %sub1236 = sub nsw i32 %740, %741
  %arrayidx1237 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub1236, i32* %arrayidx1237, align 4
  %arrayidx1238 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %742 = load i32, i32* %arrayidx1238, align 4
  %shr1239 = ashr i32 %742, 1
  %arrayidx1240 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %743 = load i32, i32* %arrayidx1240, align 4
  %sub1241 = sub nsw i32 %shr1239, %743
  %arrayidx1242 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub1241, i32* %arrayidx1242, align 4
  %arrayidx1243 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %744 = load i32, i32* %arrayidx1243, align 4
  %arrayidx1244 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %745 = load i32, i32* %arrayidx1244, align 4
  %shr1245 = ashr i32 %745, 1
  %add1246 = add nsw i32 %744, %shr1245
  %arrayidx1247 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add1246, i32* %arrayidx1247, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1248

for.cond.1248:                                    ; preds = %for.inc.1277, %for.end.1229
  %746 = load i32, i32* %i, align 4
  %cmp1249 = icmp slt i32 %746, 2
  br i1 %cmp1249, label %for.body.1251, label %for.end.1279

for.body.1251:                                    ; preds = %for.cond.1248
  %747 = load i32, i32* %i, align 4
  %sub1252 = sub nsw i32 3, %747
  store i32 %sub1252, i32* %i1, align 4
  %748 = load i32, i32* %i, align 4
  %idxprom1253 = sext i32 %748 to i64
  %arrayidx1254 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1253
  %749 = load i32, i32* %arrayidx1254, align 4
  %750 = load i32, i32* %i1, align 4
  %idxprom1255 = sext i32 %750 to i64
  %arrayidx1256 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1255
  %751 = load i32, i32* %arrayidx1256, align 4
  %add1257 = add nsw i32 %749, %751
  %752 = load i32, i32* %n1, align 4
  %753 = load i32, i32* %i, align 4
  %add1258 = add nsw i32 %752, %753
  %idxprom1259 = sext i32 %add1258 to i64
  %754 = load i32, i32* %n2, align 4
  %755 = load i32, i32* %j, align 4
  %add1260 = add nsw i32 %754, %755
  %idxprom1261 = sext i32 %add1260 to i64
  %756 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71262 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %756, i32 0, i32 52
  %arrayidx1263 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71262, i32 0, i64 %idxprom1261
  %arrayidx1264 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1263, i32 0, i64 %idxprom1259
  store i32 %add1257, i32* %arrayidx1264, align 4
  %757 = load i32, i32* %i, align 4
  %idxprom1265 = sext i32 %757 to i64
  %arrayidx1266 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1265
  %758 = load i32, i32* %arrayidx1266, align 4
  %759 = load i32, i32* %i1, align 4
  %idxprom1267 = sext i32 %759 to i64
  %arrayidx1268 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1267
  %760 = load i32, i32* %arrayidx1268, align 4
  %sub1269 = sub nsw i32 %758, %760
  %761 = load i32, i32* %n1, align 4
  %762 = load i32, i32* %i1, align 4
  %add1270 = add nsw i32 %761, %762
  %idxprom1271 = sext i32 %add1270 to i64
  %763 = load i32, i32* %n2, align 4
  %764 = load i32, i32* %j, align 4
  %add1272 = add nsw i32 %763, %764
  %idxprom1273 = sext i32 %add1272 to i64
  %765 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71274 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %765, i32 0, i32 52
  %arrayidx1275 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71274, i32 0, i64 %idxprom1273
  %arrayidx1276 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1275, i32 0, i64 %idxprom1271
  store i32 %sub1269, i32* %arrayidx1276, align 4
  br label %for.inc.1277

for.inc.1277:                                     ; preds = %for.body.1251
  %766 = load i32, i32* %i, align 4
  %inc1278 = add nsw i32 %766, 1
  store i32 %inc1278, i32* %i, align 4
  br label %for.cond.1248

for.end.1279:                                     ; preds = %for.cond.1248
  br label %for.inc.1280

for.inc.1280:                                     ; preds = %for.end.1279
  %767 = load i32, i32* %j, align 4
  %inc1281 = add nsw i32 %767, 1
  store i32 %inc1281, i32* %j, align 4
  br label %for.cond.1210

for.end.1282:                                     ; preds = %for.cond.1210
  store i32 0, i32* %i, align 4
  br label %for.cond.1283

for.cond.1283:                                    ; preds = %for.inc.1360, %for.end.1282
  %768 = load i32, i32* %i, align 4
  %cmp1284 = icmp slt i32 %768, 4
  br i1 %cmp1284, label %for.body.1286, label %for.end.1362

for.body.1286:                                    ; preds = %for.cond.1283
  store i32 0, i32* %j, align 4
  br label %for.cond.1287

for.cond.1287:                                    ; preds = %for.inc.1300, %for.body.1286
  %769 = load i32, i32* %j, align 4
  %cmp1288 = icmp slt i32 %769, 4
  br i1 %cmp1288, label %for.body.1290, label %for.end.1302

for.body.1290:                                    ; preds = %for.cond.1287
  %770 = load i32, i32* %n1, align 4
  %771 = load i32, i32* %i, align 4
  %add1291 = add nsw i32 %770, %771
  %idxprom1292 = sext i32 %add1291 to i64
  %772 = load i32, i32* %n2, align 4
  %773 = load i32, i32* %j, align 4
  %add1293 = add nsw i32 %772, %773
  %idxprom1294 = sext i32 %add1293 to i64
  %774 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71295 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %774, i32 0, i32 52
  %arrayidx1296 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71295, i32 0, i64 %idxprom1294
  %arrayidx1297 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1296, i32 0, i64 %idxprom1292
  %775 = load i32, i32* %arrayidx1297, align 4
  %776 = load i32, i32* %j, align 4
  %idxprom1298 = sext i32 %776 to i64
  %arrayidx1299 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom1298
  store i32 %775, i32* %arrayidx1299, align 4
  br label %for.inc.1300

for.inc.1300:                                     ; preds = %for.body.1290
  %777 = load i32, i32* %j, align 4
  %inc1301 = add nsw i32 %777, 1
  store i32 %inc1301, i32* %j, align 4
  br label %for.cond.1287

for.end.1302:                                     ; preds = %for.cond.1287
  %arrayidx1303 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %778 = load i32, i32* %arrayidx1303, align 4
  %arrayidx1304 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %779 = load i32, i32* %arrayidx1304, align 4
  %add1305 = add nsw i32 %778, %779
  %arrayidx1306 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add1305, i32* %arrayidx1306, align 4
  %arrayidx1307 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %780 = load i32, i32* %arrayidx1307, align 4
  %arrayidx1308 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %781 = load i32, i32* %arrayidx1308, align 4
  %sub1309 = sub nsw i32 %780, %781
  %arrayidx1310 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub1309, i32* %arrayidx1310, align 4
  %arrayidx1311 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %782 = load i32, i32* %arrayidx1311, align 4
  %shr1312 = ashr i32 %782, 1
  %arrayidx1313 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %783 = load i32, i32* %arrayidx1313, align 4
  %sub1314 = sub nsw i32 %shr1312, %783
  %arrayidx1315 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub1314, i32* %arrayidx1315, align 4
  %arrayidx1316 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %784 = load i32, i32* %arrayidx1316, align 4
  %arrayidx1317 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %785 = load i32, i32* %arrayidx1317, align 4
  %shr1318 = ashr i32 %785, 1
  %add1319 = add nsw i32 %784, %shr1318
  %arrayidx1320 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add1319, i32* %arrayidx1320, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.1321

for.cond.1321:                                    ; preds = %for.inc.1357, %for.end.1302
  %786 = load i32, i32* %j, align 4
  %cmp1322 = icmp slt i32 %786, 2
  br i1 %cmp1322, label %for.body.1324, label %for.end.1359

for.body.1324:                                    ; preds = %for.cond.1321
  %787 = load i32, i32* %j, align 4
  %sub1325 = sub nsw i32 3, %787
  store i32 %sub1325, i32* %j2, align 4
  %788 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %788, i32 0, i32 157
  %789 = load i32, i32* %max_imgpel_value_uv, align 4
  %790 = load i32, i32* %j, align 4
  %idxprom1326 = sext i32 %790 to i64
  %arrayidx1327 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1326
  %791 = load i32, i32* %arrayidx1327, align 4
  %792 = load i32, i32* %j2, align 4
  %idxprom1328 = sext i32 %792 to i64
  %arrayidx1329 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1328
  %793 = load i32, i32* %arrayidx1329, align 4
  %add1330 = add nsw i32 %791, %793
  %add1331 = add nsw i32 %add1330, 32
  %shr1332 = ashr i32 %add1331, 6
  %call1333 = call i32 @iClip3(i32 0, i32 %789, i32 %shr1332)
  %794 = load i32, i32* %n1, align 4
  %795 = load i32, i32* %i, align 4
  %add1334 = add nsw i32 %794, %795
  %idxprom1335 = sext i32 %add1334 to i64
  %796 = load i32, i32* %n2, align 4
  %797 = load i32, i32* %j, align 4
  %add1336 = add nsw i32 %796, %797
  %idxprom1337 = sext i32 %add1336 to i64
  %798 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71338 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %798, i32 0, i32 52
  %arrayidx1339 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71338, i32 0, i64 %idxprom1337
  %arrayidx1340 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1339, i32 0, i64 %idxprom1335
  store i32 %call1333, i32* %arrayidx1340, align 4
  %799 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv1341 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %799, i32 0, i32 157
  %800 = load i32, i32* %max_imgpel_value_uv1341, align 4
  %801 = load i32, i32* %j, align 4
  %idxprom1342 = sext i32 %801 to i64
  %arrayidx1343 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1342
  %802 = load i32, i32* %arrayidx1343, align 4
  %803 = load i32, i32* %j2, align 4
  %idxprom1344 = sext i32 %803 to i64
  %arrayidx1345 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom1344
  %804 = load i32, i32* %arrayidx1345, align 4
  %sub1346 = sub nsw i32 %802, %804
  %add1347 = add nsw i32 %sub1346, 32
  %shr1348 = ashr i32 %add1347, 6
  %call1349 = call i32 @iClip3(i32 0, i32 %800, i32 %shr1348)
  %805 = load i32, i32* %n1, align 4
  %806 = load i32, i32* %i, align 4
  %add1350 = add nsw i32 %805, %806
  %idxprom1351 = sext i32 %add1350 to i64
  %807 = load i32, i32* %n2, align 4
  %808 = load i32, i32* %j2, align 4
  %add1352 = add nsw i32 %807, %808
  %idxprom1353 = sext i32 %add1352 to i64
  %809 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %809, i32 0, i32 52
  %arrayidx1355 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71354, i32 0, i64 %idxprom1353
  %arrayidx1356 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1355, i32 0, i64 %idxprom1351
  store i32 %call1349, i32* %arrayidx1356, align 4
  br label %for.inc.1357

for.inc.1357:                                     ; preds = %for.body.1324
  %810 = load i32, i32* %j, align 4
  %inc1358 = add nsw i32 %810, 1
  store i32 %inc1358, i32* %j, align 4
  br label %for.cond.1321

for.end.1359:                                     ; preds = %for.cond.1321
  br label %for.inc.1360

for.inc.1360:                                     ; preds = %for.end.1359
  %811 = load i32, i32* %i, align 4
  %inc1361 = add nsw i32 %811, 1
  store i32 %inc1361, i32* %i, align 4
  br label %for.cond.1283

for.end.1362:                                     ; preds = %for.cond.1283
  br label %for.inc.1363

for.inc.1363:                                     ; preds = %for.end.1362
  %812 = load i32, i32* %n1, align 4
  %add1364 = add nsw i32 %812, 4
  store i32 %add1364, i32* %n1, align 4
  br label %for.cond.1206

for.end.1365:                                     ; preds = %for.cond.1206
  br label %for.inc.1366

for.inc.1366:                                     ; preds = %for.end.1365
  %813 = load i32, i32* %n2, align 4
  %add1367 = add nsw i32 %813, 4
  store i32 %add1367, i32* %n2, align 4
  br label %for.cond.1202

for.end.1368:                                     ; preds = %for.cond.1202
  store i32 0, i32* %j, align 4
  br label %for.cond.1369

for.cond.1369:                                    ; preds = %for.inc.1396, %for.end.1368
  %814 = load i32, i32* %j, align 4
  %cmp1370 = icmp slt i32 %814, 8
  br i1 %cmp1370, label %for.body.1372, label %for.end.1398

for.body.1372:                                    ; preds = %for.cond.1369
  store i32 0, i32* %i, align 4
  br label %for.cond.1373

for.cond.1373:                                    ; preds = %for.inc.1393, %for.body.1372
  %815 = load i32, i32* %i, align 4
  %cmp1374 = icmp slt i32 %815, 8
  br i1 %cmp1374, label %for.body.1376, label %for.end.1395

for.body.1376:                                    ; preds = %for.cond.1373
  %816 = load i32, i32* %i, align 4
  %idxprom1377 = sext i32 %816 to i64
  %817 = load i32, i32* %j, align 4
  %idxprom1378 = sext i32 %817 to i64
  %818 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m71379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %818, i32 0, i32 52
  %arrayidx1380 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m71379, i32 0, i64 %idxprom1378
  %arrayidx1381 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1380, i32 0, i64 %idxprom1377
  %819 = load i32, i32* %arrayidx1381, align 4
  %conv1382 = trunc i32 %819 to i16
  %820 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x1383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %820, i32 0, i32 41
  %821 = load i32, i32* %pix_c_x1383, align 4
  %822 = load i32, i32* %i, align 4
  %add1384 = add nsw i32 %821, %822
  %idxprom1385 = sext i32 %add1384 to i64
  %823 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y1386 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %823, i32 0, i32 42
  %824 = load i32, i32* %pix_c_y1386, align 4
  %825 = load i32, i32* %j, align 4
  %add1387 = add nsw i32 %824, %825
  %idxprom1388 = sext i32 %add1387 to i64
  %826 = load i32, i32* %uv.addr, align 4
  %idxprom1389 = sext i32 %826 to i64
  %827 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %827, i32 0, i32 33
  %828 = load i16***, i16**** %imgUV, align 8
  %arrayidx1390 = getelementptr inbounds i16**, i16*** %828, i64 %idxprom1389
  %829 = load i16**, i16*** %arrayidx1390, align 8
  %arrayidx1391 = getelementptr inbounds i16*, i16** %829, i64 %idxprom1388
  %830 = load i16*, i16** %arrayidx1391, align 8
  %arrayidx1392 = getelementptr inbounds i16, i16* %830, i64 %idxprom1385
  store i16 %conv1382, i16* %arrayidx1392, align 2
  br label %for.inc.1393

for.inc.1393:                                     ; preds = %for.body.1376
  %831 = load i32, i32* %i, align 4
  %inc1394 = add nsw i32 %831, 1
  store i32 %inc1394, i32* %i, align 4
  br label %for.cond.1373

for.end.1395:                                     ; preds = %for.cond.1373
  br label %for.inc.1396

for.inc.1396:                                     ; preds = %for.end.1395
  %832 = load i32, i32* %j, align 4
  %inc1397 = add nsw i32 %832, 1
  store i32 %inc1397, i32* %j, align 4
  br label %for.cond.1369

for.end.1398:                                     ; preds = %for.cond.1369
  %833 = load i32, i32* %cr_cbp.addr, align 4
  ret i32 %833
}

declare void @levrun_linfo_c2x2(i32, i32, i32*, i32*) #4

; Function Attrs: nounwind uwtable
define void @copyblock_sp(i32 %block_x, i32 %block_y) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %currMB = alloca %struct.macroblock*, align 8
  %predicted_block = alloca [4 x [4 x i32]], align 16
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %qp_const2 = alloca i32, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 61
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 4
  %5 = load i32, i32* %qpsp, align 4
  %sub = sub nsw i32 %5, 0
  %div = sdiv i32 %sub, 6
  store i32 %div, i32* %qp_per, align 4
  %6 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp1 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %6, i32 0, i32 4
  %7 = load i32, i32* %qpsp1, align 4
  %sub2 = sub nsw i32 %7, 0
  %rem = srem i32 %sub2, 6
  store i32 %rem, i32* %qp_rem, align 4
  %8 = load i32, i32* %qp_per, align 4
  %add = add nsw i32 15, %8
  store i32 %add, i32* %q_bits, align 4
  %9 = load i32, i32* %q_bits, align 4
  %shl = shl i32 1, %9
  %div3 = sdiv i32 %shl, 2
  store i32 %div3, i32* %qp_const2, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.17, %entry
  %10 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %10, 4
  br i1 %cmp, label %for.body, label %for.end.19

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4
  %cmp5 = icmp slt i32 %11, 4
  br i1 %cmp5, label %for.body.6, label %for.end

for.body.6:                                       ; preds = %for.cond.4
  %12 = load i32, i32* %i, align 4
  %13 = load i32, i32* %block_x.addr, align 4
  %add7 = add nsw i32 %12, %13
  %idxprom8 = sext i32 %add7 to i64
  %14 = load i32, i32* %j, align 4
  %15 = load i32, i32* %block_y.addr, align 4
  %add9 = add nsw i32 %14, %15
  %idxprom10 = sext i32 %add9 to i64
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 51
  %arrayidx11 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom10
  %arrayidx12 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx11, i32 0, i64 %idxprom8
  %17 = load i16, i16* %arrayidx12, align 2
  %conv = zext i16 %17 to i32
  %18 = load i32, i32* %j, align 4
  %idxprom13 = sext i32 %18 to i64
  %19 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx15, i32 0, i64 %idxprom13
  store i32 %conv, i32* %arrayidx16, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.6
  %20 = load i32, i32* %i, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.4

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.17

for.inc.17:                                       ; preds = %for.end
  %21 = load i32, i32* %j, align 4
  %inc18 = add nsw i32 %21, 1
  store i32 %inc18, i32* %j, align 4
  br label %for.cond

for.end.19:                                       ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond.20

for.cond.20:                                      ; preds = %for.inc.79, %for.end.19
  %22 = load i32, i32* %j, align 4
  %cmp21 = icmp slt i32 %22, 4
  br i1 %cmp21, label %for.body.23, label %for.end.81

for.body.23:                                      ; preds = %for.cond.20
  store i32 0, i32* %i, align 4
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc.51, %for.body.23
  %23 = load i32, i32* %i, align 4
  %cmp25 = icmp slt i32 %23, 2
  br i1 %cmp25, label %for.body.27, label %for.end.53

for.body.27:                                      ; preds = %for.cond.24
  %24 = load i32, i32* %i, align 4
  %sub28 = sub nsw i32 3, %24
  store i32 %sub28, i32* %i1, align 4
  %25 = load i32, i32* %j, align 4
  %idxprom29 = sext i32 %25 to i64
  %26 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %26 to i64
  %arrayidx31 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom30
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx31, i32 0, i64 %idxprom29
  %27 = load i32, i32* %arrayidx32, align 4
  %28 = load i32, i32* %j, align 4
  %idxprom33 = sext i32 %28 to i64
  %29 = load i32, i32* %i1, align 4
  %idxprom34 = sext i32 %29 to i64
  %arrayidx35 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom34
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx35, i32 0, i64 %idxprom33
  %30 = load i32, i32* %arrayidx36, align 4
  %add37 = add nsw i32 %27, %30
  %31 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %31 to i64
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom38
  store i32 %add37, i32* %arrayidx39, align 4
  %32 = load i32, i32* %j, align 4
  %idxprom40 = sext i32 %32 to i64
  %33 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %33 to i64
  %arrayidx42 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx42, i32 0, i64 %idxprom40
  %34 = load i32, i32* %arrayidx43, align 4
  %35 = load i32, i32* %j, align 4
  %idxprom44 = sext i32 %35 to i64
  %36 = load i32, i32* %i1, align 4
  %idxprom45 = sext i32 %36 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom45
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i32 0, i64 %idxprom44
  %37 = load i32, i32* %arrayidx47, align 4
  %sub48 = sub nsw i32 %34, %37
  %38 = load i32, i32* %i1, align 4
  %idxprom49 = sext i32 %38 to i64
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom49
  store i32 %sub48, i32* %arrayidx50, align 4
  br label %for.inc.51

for.inc.51:                                       ; preds = %for.body.27
  %39 = load i32, i32* %i, align 4
  %inc52 = add nsw i32 %39, 1
  store i32 %inc52, i32* %i, align 4
  br label %for.cond.24

for.end.53:                                       ; preds = %for.cond.24
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %40 = load i32, i32* %arrayidx54, align 4
  %arrayidx55 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %41 = load i32, i32* %arrayidx55, align 4
  %add56 = add nsw i32 %40, %41
  %42 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %42 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i32 0, i64 %idxprom57
  store i32 %add56, i32* %arrayidx59, align 4
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %43 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %44 = load i32, i32* %arrayidx61, align 4
  %sub62 = sub nsw i32 %43, %44
  %45 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %45 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 2
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i32 0, i64 %idxprom63
  store i32 %sub62, i32* %arrayidx65, align 4
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %46 = load i32, i32* %arrayidx66, align 4
  %mul = mul nsw i32 %46, 2
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %47 = load i32, i32* %arrayidx67, align 4
  %add68 = add nsw i32 %mul, %47
  %48 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %48 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 1
  %arrayidx71 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i32 0, i64 %idxprom69
  store i32 %add68, i32* %arrayidx71, align 4
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %49 = load i32, i32* %arrayidx72, align 4
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %50 = load i32, i32* %arrayidx73, align 4
  %mul74 = mul nsw i32 %50, 2
  %sub75 = sub nsw i32 %49, %mul74
  %51 = load i32, i32* %j, align 4
  %idxprom76 = sext i32 %51 to i64
  %arrayidx77 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 3
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx77, i32 0, i64 %idxprom76
  store i32 %sub75, i32* %arrayidx78, align 4
  br label %for.inc.79

for.inc.79:                                       ; preds = %for.end.53
  %52 = load i32, i32* %j, align 4
  %inc80 = add nsw i32 %52, 1
  store i32 %inc80, i32* %j, align 4
  br label %for.cond.20

for.end.81:                                       ; preds = %for.cond.20
  store i32 0, i32* %i, align 4
  br label %for.cond.82

for.cond.82:                                      ; preds = %for.inc.142, %for.end.81
  %53 = load i32, i32* %i, align 4
  %cmp83 = icmp slt i32 %53, 4
  br i1 %cmp83, label %for.body.85, label %for.end.144

for.body.85:                                      ; preds = %for.cond.82
  store i32 0, i32* %j, align 4
  br label %for.cond.86

for.cond.86:                                      ; preds = %for.inc.113, %for.body.85
  %54 = load i32, i32* %j, align 4
  %cmp87 = icmp slt i32 %54, 2
  br i1 %cmp87, label %for.body.89, label %for.end.115

for.body.89:                                      ; preds = %for.cond.86
  %55 = load i32, i32* %j, align 4
  %sub90 = sub nsw i32 3, %55
  store i32 %sub90, i32* %j1, align 4
  %56 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %56 to i64
  %57 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %57 to i64
  %arrayidx93 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom92
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx93, i32 0, i64 %idxprom91
  %58 = load i32, i32* %arrayidx94, align 4
  %59 = load i32, i32* %j1, align 4
  %idxprom95 = sext i32 %59 to i64
  %60 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %60 to i64
  %arrayidx97 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom96
  %arrayidx98 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx97, i32 0, i64 %idxprom95
  %61 = load i32, i32* %arrayidx98, align 4
  %add99 = add nsw i32 %58, %61
  %62 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %62 to i64
  %arrayidx101 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom100
  store i32 %add99, i32* %arrayidx101, align 4
  %63 = load i32, i32* %j, align 4
  %idxprom102 = sext i32 %63 to i64
  %64 = load i32, i32* %i, align 4
  %idxprom103 = sext i32 %64 to i64
  %arrayidx104 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom103
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx104, i32 0, i64 %idxprom102
  %65 = load i32, i32* %arrayidx105, align 4
  %66 = load i32, i32* %j1, align 4
  %idxprom106 = sext i32 %66 to i64
  %67 = load i32, i32* %i, align 4
  %idxprom107 = sext i32 %67 to i64
  %arrayidx108 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom107
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx108, i32 0, i64 %idxprom106
  %68 = load i32, i32* %arrayidx109, align 4
  %sub110 = sub nsw i32 %65, %68
  %69 = load i32, i32* %j1, align 4
  %idxprom111 = sext i32 %69 to i64
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom111
  store i32 %sub110, i32* %arrayidx112, align 4
  br label %for.inc.113

for.inc.113:                                      ; preds = %for.body.89
  %70 = load i32, i32* %j, align 4
  %inc114 = add nsw i32 %70, 1
  store i32 %inc114, i32* %j, align 4
  br label %for.cond.86

for.end.115:                                      ; preds = %for.cond.86
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %71 = load i32, i32* %arrayidx116, align 4
  %arrayidx117 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %72 = load i32, i32* %arrayidx117, align 4
  %add118 = add nsw i32 %71, %72
  %73 = load i32, i32* %i, align 4
  %idxprom119 = sext i32 %73 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom119
  %arrayidx121 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i32 0, i64 0
  store i32 %add118, i32* %arrayidx121, align 4
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %74 = load i32, i32* %arrayidx122, align 4
  %arrayidx123 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %75 = load i32, i32* %arrayidx123, align 4
  %sub124 = sub nsw i32 %74, %75
  %76 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %76 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom125
  %arrayidx127 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i32 0, i64 2
  store i32 %sub124, i32* %arrayidx127, align 4
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %77 = load i32, i32* %arrayidx128, align 4
  %mul129 = mul nsw i32 %77, 2
  %arrayidx130 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %78 = load i32, i32* %arrayidx130, align 4
  %add131 = add nsw i32 %mul129, %78
  %79 = load i32, i32* %i, align 4
  %idxprom132 = sext i32 %79 to i64
  %arrayidx133 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom132
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx133, i32 0, i64 1
  store i32 %add131, i32* %arrayidx134, align 4
  %arrayidx135 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %80 = load i32, i32* %arrayidx135, align 4
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %81 = load i32, i32* %arrayidx136, align 4
  %mul137 = mul nsw i32 %81, 2
  %sub138 = sub nsw i32 %80, %mul137
  %82 = load i32, i32* %i, align 4
  %idxprom139 = sext i32 %82 to i64
  %arrayidx140 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom139
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx140, i32 0, i64 3
  store i32 %sub138, i32* %arrayidx141, align 4
  br label %for.inc.142

for.inc.142:                                      ; preds = %for.end.115
  %83 = load i32, i32* %i, align 4
  %inc143 = add nsw i32 %83, 1
  store i32 %inc143, i32* %i, align 4
  br label %for.cond.82

for.end.144:                                      ; preds = %for.cond.82
  store i32 0, i32* %j, align 4
  br label %for.cond.145

for.cond.145:                                     ; preds = %for.inc.213, %for.end.144
  %84 = load i32, i32* %j, align 4
  %cmp146 = icmp slt i32 %84, 4
  br i1 %cmp146, label %for.body.148, label %for.end.215

for.body.148:                                     ; preds = %for.cond.145
  store i32 0, i32* %i, align 4
  br label %for.cond.149

for.cond.149:                                     ; preds = %for.inc.210, %for.body.148
  %85 = load i32, i32* %i, align 4
  %cmp150 = icmp slt i32 %85, 4
  br i1 %cmp150, label %for.body.152, label %for.end.212

for.body.152:                                     ; preds = %for.cond.149
  %86 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %86 to i64
  %87 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %87 to i64
  %arrayidx155 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom154
  %arrayidx156 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx155, i32 0, i64 %idxprom153
  %88 = load i32, i32* %arrayidx156, align 4
  %call = call i32 @iabs(i32 %88)
  %89 = load i32, i32* %j, align 4
  %idxprom157 = sext i32 %89 to i64
  %90 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %90 to i64
  %91 = load i32, i32* %qp_rem, align 4
  %idxprom159 = sext i32 %91 to i64
  %arrayidx160 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom159
  %arrayidx161 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx160, i32 0, i64 %idxprom158
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx161, i32 0, i64 %idxprom157
  %92 = load i32, i32* %arrayidx162, align 4
  %mul163 = mul nsw i32 %call, %92
  %93 = load i32, i32* %qp_const2, align 4
  %add164 = add nsw i32 %mul163, %93
  %94 = load i32, i32* %q_bits, align 4
  %shr = ashr i32 %add164, %94
  %95 = load i32, i32* %j, align 4
  %idxprom165 = sext i32 %95 to i64
  %96 = load i32, i32* %i, align 4
  %idxprom166 = sext i32 %96 to i64
  %arrayidx167 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom166
  %arrayidx168 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx167, i32 0, i64 %idxprom165
  %97 = load i32, i32* %arrayidx168, align 4
  %call169 = call i32 @isignab(i32 %shr, i32 %97)
  %98 = load i32, i32* %j, align 4
  %idxprom170 = sext i32 %98 to i64
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %100 = load i32, i32* %qp_rem, align 4
  %idxprom172 = sext i32 %100 to i64
  %arrayidx173 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom172
  %arrayidx174 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx173, i32 0, i64 %idxprom171
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx174, i32 0, i64 %idxprom170
  %101 = load i32, i32* %arrayidx175, align 4
  %mul176 = mul nsw i32 %call169, %101
  %102 = load i32, i32* %qp_per, align 4
  %shl177 = shl i32 %mul176, %102
  %103 = load i32, i32* %i, align 4
  %idxprom178 = sext i32 %103 to i64
  %104 = load i32, i32* %j, align 4
  %idxprom179 = sext i32 %104 to i64
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 52
  %arrayidx180 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom179
  %arrayidx181 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx180, i32 0, i64 %idxprom178
  store i32 %shl177, i32* %arrayidx181, align 4
  %106 = load i32, i32* @si_frame_indicator, align 4
  %tobool = icmp ne i32 %106, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body.152
  %107 = load i32, i32* @sp2_frame_indicator, align 4
  %tobool182 = icmp ne i32 %107, 0
  br i1 %tobool182, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %108 = load i32, i32* %j, align 4
  %idxprom183 = sext i32 %108 to i64
  %109 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %109 to i64
  %arrayidx185 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom184
  %arrayidx186 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx185, i32 0, i64 %idxprom183
  %110 = load i32, i32* %arrayidx186, align 4
  %call187 = call i32 @iabs(i32 %110)
  %111 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %111 to i64
  %112 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %112 to i64
  %113 = load i32, i32* %qp_rem, align 4
  %idxprom190 = sext i32 %113 to i64
  %arrayidx191 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom190
  %arrayidx192 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx191, i32 0, i64 %idxprom189
  %arrayidx193 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx192, i32 0, i64 %idxprom188
  %114 = load i32, i32* %arrayidx193, align 4
  %mul194 = mul nsw i32 %call187, %114
  %115 = load i32, i32* %qp_const2, align 4
  %add195 = add nsw i32 %mul194, %115
  %116 = load i32, i32* %q_bits, align 4
  %shr196 = ashr i32 %add195, %116
  %117 = load i32, i32* %j, align 4
  %idxprom197 = sext i32 %117 to i64
  %118 = load i32, i32* %i, align 4
  %idxprom198 = sext i32 %118 to i64
  %arrayidx199 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom198
  %arrayidx200 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx199, i32 0, i64 %idxprom197
  %119 = load i32, i32* %arrayidx200, align 4
  %call201 = call i32 @isignab(i32 %shr196, i32 %119)
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 39
  %121 = load i32, i32* %pix_x, align 4
  %122 = load i32, i32* %block_x.addr, align 4
  %add202 = add nsw i32 %121, %122
  %123 = load i32, i32* %i, align 4
  %add203 = add nsw i32 %add202, %123
  %idxprom204 = sext i32 %add203 to i64
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i32 0, i32 40
  %125 = load i32, i32* %pix_y, align 4
  %126 = load i32, i32* %block_y.addr, align 4
  %add205 = add nsw i32 %125, %126
  %127 = load i32, i32* %j, align 4
  %add206 = add nsw i32 %add205, %127
  %idxprom207 = sext i32 %add206 to i64
  %128 = load i32**, i32*** @lrec, align 8
  %arrayidx208 = getelementptr inbounds i32*, i32** %128, i64 %idxprom207
  %129 = load i32*, i32** %arrayidx208, align 8
  %arrayidx209 = getelementptr inbounds i32, i32* %129, i64 %idxprom204
  store i32 %call201, i32* %arrayidx209, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body.152
  br label %for.inc.210

for.inc.210:                                      ; preds = %if.end
  %130 = load i32, i32* %i, align 4
  %inc211 = add nsw i32 %130, 1
  store i32 %inc211, i32* %i, align 4
  br label %for.cond.149

for.end.212:                                      ; preds = %for.cond.149
  br label %for.inc.213

for.inc.213:                                      ; preds = %for.end.212
  %131 = load i32, i32* %j, align 4
  %inc214 = add nsw i32 %131, 1
  store i32 %inc214, i32* %j, align 4
  br label %for.cond.145

for.end.215:                                      ; preds = %for.cond.145
  store i32 0, i32* %j, align 4
  br label %for.cond.216

for.cond.216:                                     ; preds = %for.inc.280, %for.end.215
  %132 = load i32, i32* %j, align 4
  %cmp217 = icmp slt i32 %132, 4
  br i1 %cmp217, label %for.body.219, label %for.end.282

for.body.219:                                     ; preds = %for.cond.216
  store i32 0, i32* %i, align 4
  br label %for.cond.220

for.cond.220:                                     ; preds = %for.inc.231, %for.body.219
  %133 = load i32, i32* %i, align 4
  %cmp221 = icmp slt i32 %133, 4
  br i1 %cmp221, label %for.body.223, label %for.end.233

for.body.223:                                     ; preds = %for.cond.220
  %134 = load i32, i32* %i, align 4
  %idxprom224 = sext i32 %134 to i64
  %135 = load i32, i32* %j, align 4
  %idxprom225 = sext i32 %135 to i64
  %136 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7226 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %136, i32 0, i32 52
  %arrayidx227 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7226, i32 0, i64 %idxprom225
  %arrayidx228 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx227, i32 0, i64 %idxprom224
  %137 = load i32, i32* %arrayidx228, align 4
  %138 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %138 to i64
  %arrayidx230 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom229
  store i32 %137, i32* %arrayidx230, align 4
  br label %for.inc.231

for.inc.231:                                      ; preds = %for.body.223
  %139 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %139, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond.220

for.end.233:                                      ; preds = %for.cond.220
  %arrayidx234 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %140 = load i32, i32* %arrayidx234, align 4
  %arrayidx235 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %141 = load i32, i32* %arrayidx235, align 4
  %add236 = add nsw i32 %140, %141
  %arrayidx237 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add236, i32* %arrayidx237, align 4
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %142 = load i32, i32* %arrayidx238, align 4
  %arrayidx239 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %143 = load i32, i32* %arrayidx239, align 4
  %sub240 = sub nsw i32 %142, %143
  %arrayidx241 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub240, i32* %arrayidx241, align 4
  %arrayidx242 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %144 = load i32, i32* %arrayidx242, align 4
  %shr243 = ashr i32 %144, 1
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %145 = load i32, i32* %arrayidx244, align 4
  %sub245 = sub nsw i32 %shr243, %145
  %arrayidx246 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub245, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %146 = load i32, i32* %arrayidx247, align 4
  %arrayidx248 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %147 = load i32, i32* %arrayidx248, align 4
  %shr249 = ashr i32 %147, 1
  %add250 = add nsw i32 %146, %shr249
  %arrayidx251 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add250, i32* %arrayidx251, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.252

for.cond.252:                                     ; preds = %for.inc.277, %for.end.233
  %148 = load i32, i32* %i, align 4
  %cmp253 = icmp slt i32 %148, 2
  br i1 %cmp253, label %for.body.255, label %for.end.279

for.body.255:                                     ; preds = %for.cond.252
  %149 = load i32, i32* %i, align 4
  %sub256 = sub nsw i32 3, %149
  store i32 %sub256, i32* %i1, align 4
  %150 = load i32, i32* %i, align 4
  %idxprom257 = sext i32 %150 to i64
  %arrayidx258 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom257
  %151 = load i32, i32* %arrayidx258, align 4
  %152 = load i32, i32* %i1, align 4
  %idxprom259 = sext i32 %152 to i64
  %arrayidx260 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom259
  %153 = load i32, i32* %arrayidx260, align 4
  %add261 = add nsw i32 %151, %153
  %154 = load i32, i32* %i, align 4
  %idxprom262 = sext i32 %154 to i64
  %155 = load i32, i32* %j, align 4
  %idxprom263 = sext i32 %155 to i64
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7264 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 52
  %arrayidx265 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7264, i32 0, i64 %idxprom263
  %arrayidx266 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx265, i32 0, i64 %idxprom262
  store i32 %add261, i32* %arrayidx266, align 4
  %157 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %157 to i64
  %arrayidx268 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom267
  %158 = load i32, i32* %arrayidx268, align 4
  %159 = load i32, i32* %i1, align 4
  %idxprom269 = sext i32 %159 to i64
  %arrayidx270 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom269
  %160 = load i32, i32* %arrayidx270, align 4
  %sub271 = sub nsw i32 %158, %160
  %161 = load i32, i32* %i1, align 4
  %idxprom272 = sext i32 %161 to i64
  %162 = load i32, i32* %j, align 4
  %idxprom273 = sext i32 %162 to i64
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7274 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 52
  %arrayidx275 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7274, i32 0, i64 %idxprom273
  %arrayidx276 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx275, i32 0, i64 %idxprom272
  store i32 %sub271, i32* %arrayidx276, align 4
  br label %for.inc.277

for.inc.277:                                      ; preds = %for.body.255
  %164 = load i32, i32* %i, align 4
  %inc278 = add nsw i32 %164, 1
  store i32 %inc278, i32* %i, align 4
  br label %for.cond.252

for.end.279:                                      ; preds = %for.cond.252
  br label %for.inc.280

for.inc.280:                                      ; preds = %for.end.279
  %165 = load i32, i32* %j, align 4
  %inc281 = add nsw i32 %165, 1
  store i32 %inc281, i32* %j, align 4
  br label %for.cond.216

for.end.282:                                      ; preds = %for.cond.216
  store i32 0, i32* %i, align 4
  br label %for.cond.283

for.cond.283:                                     ; preds = %for.inc.354, %for.end.282
  %166 = load i32, i32* %i, align 4
  %cmp284 = icmp slt i32 %166, 4
  br i1 %cmp284, label %for.body.286, label %for.end.356

for.body.286:                                     ; preds = %for.cond.283
  store i32 0, i32* %j, align 4
  br label %for.cond.287

for.cond.287:                                     ; preds = %for.inc.298, %for.body.286
  %167 = load i32, i32* %j, align 4
  %cmp288 = icmp slt i32 %167, 4
  br i1 %cmp288, label %for.body.290, label %for.end.300

for.body.290:                                     ; preds = %for.cond.287
  %168 = load i32, i32* %i, align 4
  %idxprom291 = sext i32 %168 to i64
  %169 = load i32, i32* %j, align 4
  %idxprom292 = sext i32 %169 to i64
  %170 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7293 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %170, i32 0, i32 52
  %arrayidx294 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7293, i32 0, i64 %idxprom292
  %arrayidx295 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx294, i32 0, i64 %idxprom291
  %171 = load i32, i32* %arrayidx295, align 4
  %172 = load i32, i32* %j, align 4
  %idxprom296 = sext i32 %172 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom296
  store i32 %171, i32* %arrayidx297, align 4
  br label %for.inc.298

for.inc.298:                                      ; preds = %for.body.290
  %173 = load i32, i32* %j, align 4
  %inc299 = add nsw i32 %173, 1
  store i32 %inc299, i32* %j, align 4
  br label %for.cond.287

for.end.300:                                      ; preds = %for.cond.287
  %arrayidx301 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %174 = load i32, i32* %arrayidx301, align 4
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %175 = load i32, i32* %arrayidx302, align 4
  %add303 = add nsw i32 %174, %175
  %arrayidx304 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add303, i32* %arrayidx304, align 4
  %arrayidx305 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %176 = load i32, i32* %arrayidx305, align 4
  %arrayidx306 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %177 = load i32, i32* %arrayidx306, align 4
  %sub307 = sub nsw i32 %176, %177
  %arrayidx308 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub307, i32* %arrayidx308, align 4
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %178 = load i32, i32* %arrayidx309, align 4
  %shr310 = ashr i32 %178, 1
  %arrayidx311 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %179 = load i32, i32* %arrayidx311, align 4
  %sub312 = sub nsw i32 %shr310, %179
  %arrayidx313 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub312, i32* %arrayidx313, align 4
  %arrayidx314 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %180 = load i32, i32* %arrayidx314, align 4
  %arrayidx315 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %181 = load i32, i32* %arrayidx315, align 4
  %shr316 = ashr i32 %181, 1
  %add317 = add nsw i32 %180, %shr316
  %arrayidx318 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add317, i32* %arrayidx318, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.319

for.cond.319:                                     ; preds = %for.inc.351, %for.end.300
  %182 = load i32, i32* %j, align 4
  %cmp320 = icmp slt i32 %182, 2
  br i1 %cmp320, label %for.body.322, label %for.end.353

for.body.322:                                     ; preds = %for.cond.319
  %183 = load i32, i32* %j, align 4
  %sub323 = sub nsw i32 3, %183
  store i32 %sub323, i32* %j1, align 4
  %184 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %184, i32 0, i32 156
  %185 = load i32, i32* %max_imgpel_value, align 4
  %186 = load i32, i32* %j, align 4
  %idxprom324 = sext i32 %186 to i64
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom324
  %187 = load i32, i32* %arrayidx325, align 4
  %188 = load i32, i32* %j1, align 4
  %idxprom326 = sext i32 %188 to i64
  %arrayidx327 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom326
  %189 = load i32, i32* %arrayidx327, align 4
  %add328 = add nsw i32 %187, %189
  %add329 = add nsw i32 %add328, 32
  %shr330 = ashr i32 %add329, 6
  %call331 = call i32 @iClip3(i32 0, i32 %185, i32 %shr330)
  %190 = load i32, i32* %i, align 4
  %idxprom332 = sext i32 %190 to i64
  %191 = load i32, i32* %j, align 4
  %idxprom333 = sext i32 %191 to i64
  %192 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7334 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %192, i32 0, i32 52
  %arrayidx335 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7334, i32 0, i64 %idxprom333
  %arrayidx336 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx335, i32 0, i64 %idxprom332
  store i32 %call331, i32* %arrayidx336, align 4
  %193 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value337 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %193, i32 0, i32 156
  %194 = load i32, i32* %max_imgpel_value337, align 4
  %195 = load i32, i32* %j, align 4
  %idxprom338 = sext i32 %195 to i64
  %arrayidx339 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom338
  %196 = load i32, i32* %arrayidx339, align 4
  %197 = load i32, i32* %j1, align 4
  %idxprom340 = sext i32 %197 to i64
  %arrayidx341 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom340
  %198 = load i32, i32* %arrayidx341, align 4
  %sub342 = sub nsw i32 %196, %198
  %add343 = add nsw i32 %sub342, 32
  %shr344 = ashr i32 %add343, 6
  %call345 = call i32 @iClip3(i32 0, i32 %194, i32 %shr344)
  %199 = load i32, i32* %i, align 4
  %idxprom346 = sext i32 %199 to i64
  %200 = load i32, i32* %j1, align 4
  %idxprom347 = sext i32 %200 to i64
  %201 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7348 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %201, i32 0, i32 52
  %arrayidx349 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7348, i32 0, i64 %idxprom347
  %arrayidx350 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx349, i32 0, i64 %idxprom346
  store i32 %call345, i32* %arrayidx350, align 4
  br label %for.inc.351

for.inc.351:                                      ; preds = %for.body.322
  %202 = load i32, i32* %j, align 4
  %inc352 = add nsw i32 %202, 1
  store i32 %inc352, i32* %j, align 4
  br label %for.cond.319

for.end.353:                                      ; preds = %for.cond.319
  br label %for.inc.354

for.inc.354:                                      ; preds = %for.end.353
  %203 = load i32, i32* %i, align 4
  %inc355 = add nsw i32 %203, 1
  store i32 %inc355, i32* %i, align 4
  br label %for.cond.283

for.end.356:                                      ; preds = %for.cond.283
  store i32 0, i32* %j, align 4
  br label %for.cond.357

for.cond.357:                                     ; preds = %for.inc.384, %for.end.356
  %204 = load i32, i32* %j, align 4
  %cmp358 = icmp slt i32 %204, 4
  br i1 %cmp358, label %for.body.360, label %for.end.386

for.body.360:                                     ; preds = %for.cond.357
  store i32 0, i32* %i, align 4
  br label %for.cond.361

for.cond.361:                                     ; preds = %for.inc.381, %for.body.360
  %205 = load i32, i32* %i, align 4
  %cmp362 = icmp slt i32 %205, 4
  br i1 %cmp362, label %for.body.364, label %for.end.383

for.body.364:                                     ; preds = %for.cond.361
  %206 = load i32, i32* %i, align 4
  %idxprom365 = sext i32 %206 to i64
  %207 = load i32, i32* %j, align 4
  %idxprom366 = sext i32 %207 to i64
  %208 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7367 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %208, i32 0, i32 52
  %arrayidx368 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7367, i32 0, i64 %idxprom366
  %arrayidx369 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx368, i32 0, i64 %idxprom365
  %209 = load i32, i32* %arrayidx369, align 4
  %conv370 = trunc i32 %209 to i16
  %210 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x371 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %210, i32 0, i32 39
  %211 = load i32, i32* %pix_x371, align 4
  %212 = load i32, i32* %block_x.addr, align 4
  %add372 = add nsw i32 %211, %212
  %213 = load i32, i32* %i, align 4
  %add373 = add nsw i32 %add372, %213
  %idxprom374 = sext i32 %add373 to i64
  %214 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y375 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %214, i32 0, i32 40
  %215 = load i32, i32* %pix_y375, align 4
  %216 = load i32, i32* %block_y.addr, align 4
  %add376 = add nsw i32 %215, %216
  %217 = load i32, i32* %j, align 4
  %add377 = add nsw i32 %add376, %217
  %idxprom378 = sext i32 %add377 to i64
  %218 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %218, i32 0, i32 29
  %219 = load i16**, i16*** %imgY, align 8
  %arrayidx379 = getelementptr inbounds i16*, i16** %219, i64 %idxprom378
  %220 = load i16*, i16** %arrayidx379, align 8
  %arrayidx380 = getelementptr inbounds i16, i16* %220, i64 %idxprom374
  store i16 %conv370, i16* %arrayidx380, align 2
  br label %for.inc.381

for.inc.381:                                      ; preds = %for.body.364
  %221 = load i32, i32* %i, align 4
  %inc382 = add nsw i32 %221, 1
  store i32 %inc382, i32* %i, align 4
  br label %for.cond.361

for.end.383:                                      ; preds = %for.cond.361
  br label %for.inc.384

for.inc.384:                                      ; preds = %for.end.383
  %222 = load i32, i32* %j, align 4
  %inc385 = add nsw i32 %222, 1
  store i32 %inc385, i32* %j, align 4
  br label %for.cond.357

for.end.386:                                      ; preds = %for.cond.357
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @writeIPCMBytes(%struct.Bitstream* %currStream) #0 {
entry:
  %currStream.addr = alloca %struct.Bitstream*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %jj = alloca i32, align 4
  %len = alloca i32, align 4
  %uv = alloca i32, align 4
  %se = alloca %struct.syntaxelement, align 8
  store %struct.Bitstream* %currStream, %struct.Bitstream** %currStream.addr, align 8
  store i32 0, i32* %len, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.10, %entry
  %0 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end.12

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 40
  %2 = load i32, i32* %pix_y, align 4
  %3 = load i32, i32* %j, align 4
  %add = add nsw i32 %2, %3
  store i32 %add, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %4, 16
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 142
  %6 = load i32, i32* %bitdepth_luma, align 4
  %len4 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 3
  store i32 %6, i32* %len4, align 4
  %len5 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 3
  %7 = load i32, i32* %len5, align 4
  %8 = load i32, i32* %len, align 4
  %add6 = add nsw i32 %8, %7
  store i32 %add6, i32* %len, align 4
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 39
  %10 = load i32, i32* %pix_x, align 4
  %11 = load i32, i32* %i, align 4
  %add7 = add nsw i32 %10, %11
  %idxprom = sext i32 %add7 to i64
  %12 = load i32, i32* %jj, align 4
  %idxprom8 = sext i32 %12 to i64
  %13 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %13, i32 0, i32 29
  %14 = load i16**, i16*** %imgY, align 8
  %arrayidx = getelementptr inbounds i16*, i16** %14, i64 %idxprom8
  %15 = load i16*, i16** %arrayidx, align 8
  %arrayidx9 = getelementptr inbounds i16, i16* %15, i64 %idxprom
  %16 = load i16, i16* %arrayidx9, align 2
  %conv = zext i16 %16 to i32
  %bitpattern = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 5
  store i32 %conv, i32* %bitpattern, align 4
  %17 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %call = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %se, %struct.Bitstream* %17)
  br label %for.inc

for.inc:                                          ; preds = %for.body.3
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.10

for.inc.10:                                       ; preds = %for.end
  %19 = load i32, i32* %j, align 4
  %inc11 = add nsw i32 %19, 1
  store i32 %inc11, i32* %j, align 4
  br label %for.cond

for.end.12:                                       ; preds = %for.cond
  store i32 0, i32* %uv, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.45, %for.end.12
  %20 = load i32, i32* %uv, align 4
  %cmp14 = icmp slt i32 %20, 2
  br i1 %cmp14, label %for.body.16, label %for.end.47

for.body.16:                                      ; preds = %for.cond.13
  store i32 0, i32* %j, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc.42, %for.body.16
  %21 = load i32, i32* %j, align 4
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 163
  %23 = load i32, i32* %mb_cr_size_y, align 4
  %cmp18 = icmp slt i32 %21, %23
  br i1 %cmp18, label %for.body.20, label %for.end.44

for.body.20:                                      ; preds = %for.cond.17
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 42
  %25 = load i32, i32* %pix_c_y, align 4
  %26 = load i32, i32* %j, align 4
  %add21 = add nsw i32 %25, %26
  store i32 %add21, i32* %jj, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc.39, %for.body.20
  %27 = load i32, i32* %i, align 4
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 162
  %29 = load i32, i32* %mb_cr_size_x, align 4
  %cmp23 = icmp slt i32 %27, %29
  br i1 %cmp23, label %for.body.25, label %for.end.41

for.body.25:                                      ; preds = %for.cond.22
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_chroma = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 143
  %31 = load i32, i32* %bitdepth_chroma, align 4
  %len26 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 3
  store i32 %31, i32* %len26, align 4
  %len27 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 3
  %32 = load i32, i32* %len27, align 4
  %33 = load i32, i32* %len, align 4
  %add28 = add nsw i32 %33, %32
  store i32 %add28, i32* %len, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 41
  %35 = load i32, i32* %pix_c_x, align 4
  %36 = load i32, i32* %i, align 4
  %add29 = add nsw i32 %35, %36
  %idxprom30 = sext i32 %add29 to i64
  %37 = load i32, i32* %jj, align 4
  %idxprom31 = sext i32 %37 to i64
  %38 = load i32, i32* %uv, align 4
  %idxprom32 = sext i32 %38 to i64
  %39 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %39, i32 0, i32 33
  %40 = load i16***, i16**** %imgUV, align 8
  %arrayidx33 = getelementptr inbounds i16**, i16*** %40, i64 %idxprom32
  %41 = load i16**, i16*** %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds i16*, i16** %41, i64 %idxprom31
  %42 = load i16*, i16** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i16, i16* %42, i64 %idxprom30
  %43 = load i16, i16* %arrayidx35, align 2
  %conv36 = zext i16 %43 to i32
  %bitpattern37 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %se, i32 0, i32 5
  store i32 %conv36, i32* %bitpattern37, align 4
  %44 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %call38 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %se, %struct.Bitstream* %44)
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.body.25
  %45 = load i32, i32* %i, align 4
  %inc40 = add nsw i32 %45, 1
  store i32 %inc40, i32* %i, align 4
  br label %for.cond.22

for.end.41:                                       ; preds = %for.cond.22
  br label %for.inc.42

for.inc.42:                                       ; preds = %for.end.41
  %46 = load i32, i32* %j, align 4
  %inc43 = add nsw i32 %46, 1
  store i32 %inc43, i32* %j, align 4
  br label %for.cond.17

for.end.44:                                       ; preds = %for.cond.17
  br label %for.inc.45

for.inc.45:                                       ; preds = %for.end.44
  %47 = load i32, i32* %uv, align 4
  %inc46 = add nsw i32 %47, 1
  store i32 %inc46, i32* %uv, align 4
  br label %for.cond.13

for.end.47:                                       ; preds = %for.cond.13
  %48 = load i32, i32* %len, align 4
  ret i32 %48
}

declare i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement*, %struct.Bitstream*) #4

; Function Attrs: nounwind uwtable
define i32 @writePCMByteAlign(%struct.Bitstream* %currStream) #0 {
entry:
  %currStream.addr = alloca %struct.Bitstream*, align 8
  %len = alloca i32, align 4
  store %struct.Bitstream* %currStream, %struct.Bitstream** %currStream.addr, align 8
  store i32 0, i32* %len, align 4
  %0 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %0, i32 0, i32 1
  %1 = load i32, i32* %bits_to_go, align 4
  %cmp = icmp slt i32 %1, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go1 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %2, i32 0, i32 1
  %3 = load i32, i32* %bits_to_go1, align 4
  %sub = sub nsw i32 8, %3
  store i32 %sub, i32* %len, align 4
  %4 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %byte_buf = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %4, i32 0, i32 2
  %5 = load i8, i8* %byte_buf, align 1
  %conv = zext i8 %5 to i32
  %6 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go2 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %6, i32 0, i32 1
  %7 = load i32, i32* %bits_to_go2, align 4
  %shl = shl i32 %conv, %7
  %8 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go3 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %8, i32 0, i32 1
  %9 = load i32, i32* %bits_to_go3, align 4
  %sub4 = sub nsw i32 8, %9
  %shr = ashr i32 255, %sub4
  %or = or i32 %shl, %shr
  %conv5 = trunc i32 %or to i8
  %10 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %byte_buf6 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %10, i32 0, i32 2
  store i8 %conv5, i8* %byte_buf6, align 1
  %11 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go7 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %11, i32 0, i32 1
  %12 = load i32, i32* %bits_to_go7, align 4
  %conv8 = sext i32 %12 to i64
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 5
  %14 = load i32, i32* %type, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_stuffingBits = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %15, i32 0, i32 24
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %bit_use_stuffingBits, i32 0, i64 %idxprom
  %16 = load i64, i64* %arrayidx, align 8
  %add = add nsw i64 %16, %conv8
  store i64 %add, i64* %arrayidx, align 8
  %17 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %byte_buf9 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %17, i32 0, i32 2
  %18 = load i8, i8* %byte_buf9, align 1
  %19 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %19, i32 0, i32 0
  %20 = load i32, i32* %byte_pos, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %byte_pos, align 4
  %idxprom10 = sext i32 %20 to i64
  %21 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %streamBuffer = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %21, i32 0, i32 9
  %22 = load i8*, i8** %streamBuffer, align 8
  %arrayidx11 = getelementptr inbounds i8, i8* %22, i64 %idxprom10
  store i8 %18, i8* %arrayidx11, align 1
  %23 = load %struct.Bitstream*, %struct.Bitstream** %currStream.addr, align 8
  %bits_to_go12 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %23, i32 0, i32 1
  store i32 8, i32* %bits_to_go12, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %24 = load i32, i32* %len, align 4
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define i32 @dct_luma_sp2(i32 %block_x, i32 %block_y, i32* %coeff_cost) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %coeff_cost.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %ilev = alloca i32, align 4
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %coeff_ctr = alloca i32, align 4
  %qp_const = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %nonzero = alloca i32, align 4
  %predicted_block = alloca [4 x [4 x i32]], align 16
  %c_err = alloca i32, align 4
  %qp_const2 = alloca i32, align 4
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %qp_per_sp = alloca i32, align 4
  %qp_rem_sp = alloca i32, align 4
  %q_bits_sp = alloca i32, align 4
  %pos_x = alloca i32, align 4
  %pos_y = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %level1 = alloca i32, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32* %coeff_cost, i32** %coeff_cost.addr, align 8
  %0 = load i32, i32* %block_x.addr, align 4
  %shr = ashr i32 %0, 2
  store i32 %shr, i32* %pos_x, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %shr1 = ashr i32 %1, 2
  store i32 %shr1, i32* %pos_y, align 4
  %2 = load i32, i32* %pos_y, align 4
  %shr2 = ashr i32 %2, 1
  %mul = mul nsw i32 2, %shr2
  %3 = load i32, i32* %pos_x, align 4
  %shr3 = ashr i32 %3, 1
  %add = add nsw i32 %mul, %shr3
  store i32 %add, i32* %b8, align 4
  %4 = load i32, i32* %pos_y, align 4
  %and = and i32 %4, 1
  %mul4 = mul nsw i32 2, %and
  %5 = load i32, i32* %pos_x, align 4
  %and5 = and i32 %5, 1
  %add6 = add nsw i32 %mul4, %and5
  store i32 %add6, i32* %b4, align 4
  %6 = load i32, i32* %b4, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load i32, i32* %b8, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 53
  %9 = load i32****, i32***** %cofAC, align 8
  %arrayidx = getelementptr inbounds i32***, i32**** %9, i64 %idxprom7
  %10 = load i32***, i32**** %arrayidx, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 %idxprom
  %11 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %11, i64 0
  %12 = load i32*, i32** %arrayidx9, align 8
  store i32* %12, i32** %ACLevel, align 8
  %13 = load i32, i32* %b4, align 4
  %idxprom10 = sext i32 %13 to i64
  %14 = load i32, i32* %b8, align 4
  %idxprom11 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 53
  %16 = load i32****, i32***** %cofAC12, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %16, i64 %idxprom11
  %17 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %17, i64 %idxprom10
  %18 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %18, i64 1
  %19 = load i32*, i32** %arrayidx15, align 8
  store i32* %19, i32** %ACRun, align 8
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 10
  %21 = load i32, i32* %qpsp, align 4
  %sub = sub nsw i32 %21, 0
  %div = sdiv i32 %sub, 6
  store i32 %div, i32* %qp_per, align 4
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 10
  %23 = load i32, i32* %qpsp16, align 4
  %sub17 = sub nsw i32 %23, 0
  %rem = srem i32 %sub17, 6
  store i32 %rem, i32* %qp_rem, align 4
  %24 = load i32, i32* %qp_per, align 4
  %add18 = add nsw i32 15, %24
  store i32 %add18, i32* %q_bits, align 4
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 10
  %26 = load i32, i32* %qpsp19, align 4
  %sub20 = sub nsw i32 %26, 0
  %div21 = sdiv i32 %sub20, 6
  store i32 %div21, i32* %qp_per_sp, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 10
  %28 = load i32, i32* %qpsp22, align 4
  %sub23 = sub nsw i32 %28, 0
  %rem24 = srem i32 %sub23, 6
  store i32 %rem24, i32* %qp_rem_sp, align 4
  %29 = load i32, i32* %qp_per_sp, align 4
  %add25 = add nsw i32 15, %29
  store i32 %add25, i32* %q_bits_sp, align 4
  %30 = load i32, i32* %q_bits, align 4
  %shl = shl i32 1, %30
  %div26 = sdiv i32 %shl, 6
  store i32 %div26, i32* %qp_const, align 4
  %31 = load i32, i32* %q_bits_sp, align 4
  %shl27 = shl i32 1, %31
  %div28 = sdiv i32 %shl27, 2
  store i32 %div28, i32* %qp_const2, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.54, %entry
  %32 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %32, 4
  br i1 %cmp, label %for.body, label %for.end.56

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.29

for.cond.29:                                      ; preds = %for.inc, %for.body
  %33 = load i32, i32* %i, align 4
  %cmp30 = icmp slt i32 %33, 4
  br i1 %cmp30, label %for.body.31, label %for.end

for.body.31:                                      ; preds = %for.cond.29
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 39
  %35 = load i32, i32* %pix_x, align 4
  %36 = load i32, i32* %block_x.addr, align 4
  %add32 = add nsw i32 %35, %36
  %37 = load i32, i32* %i, align 4
  %add33 = add nsw i32 %add32, %37
  %idxprom34 = sext i32 %add33 to i64
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 40
  %39 = load i32, i32* %pix_y, align 4
  %40 = load i32, i32* %block_y.addr, align 4
  %add35 = add nsw i32 %39, %40
  %41 = load i32, i32* %j, align 4
  %add36 = add nsw i32 %add35, %41
  %idxprom37 = sext i32 %add36 to i64
  %42 = load i32**, i32*** @lrec, align 8
  %arrayidx38 = getelementptr inbounds i32*, i32** %42, i64 %idxprom37
  %43 = load i32*, i32** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %43, i64 %idxprom34
  %44 = load i32, i32* %arrayidx39, align 4
  %45 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %45 to i64
  %46 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %46 to i64
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 52
  %arrayidx42 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx42, i32 0, i64 %idxprom40
  store i32 %44, i32* %arrayidx43, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %block_x.addr, align 4
  %add44 = add nsw i32 %48, %49
  %idxprom45 = sext i32 %add44 to i64
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %block_y.addr, align 4
  %add46 = add nsw i32 %50, %51
  %idxprom47 = sext i32 %add46 to i64
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 51
  %arrayidx48 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx48, i32 0, i64 %idxprom45
  %53 = load i16, i16* %arrayidx49, align 2
  %conv = zext i16 %53 to i32
  %54 = load i32, i32* %j, align 4
  %idxprom50 = sext i32 %54 to i64
  %55 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %55 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i32 0, i64 %idxprom50
  store i32 %conv, i32* %arrayidx53, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.31
  %56 = load i32, i32* %i, align 4
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.29

for.end:                                          ; preds = %for.cond.29
  br label %for.inc.54

for.inc.54:                                       ; preds = %for.end
  %57 = load i32, i32* %j, align 4
  %inc55 = add nsw i32 %57, 1
  store i32 %inc55, i32* %j, align 4
  br label %for.cond

for.end.56:                                       ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond.57

for.cond.57:                                      ; preds = %for.inc.117, %for.end.56
  %58 = load i32, i32* %j, align 4
  %cmp58 = icmp slt i32 %58, 4
  br i1 %cmp58, label %for.body.60, label %for.end.119

for.body.60:                                      ; preds = %for.cond.57
  store i32 0, i32* %i, align 4
  br label %for.cond.61

for.cond.61:                                      ; preds = %for.inc.88, %for.body.60
  %59 = load i32, i32* %i, align 4
  %cmp62 = icmp slt i32 %59, 2
  br i1 %cmp62, label %for.body.64, label %for.end.90

for.body.64:                                      ; preds = %for.cond.61
  %60 = load i32, i32* %i, align 4
  %sub65 = sub nsw i32 3, %60
  store i32 %sub65, i32* %i1, align 4
  %61 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %61 to i64
  %62 = load i32, i32* %i, align 4
  %idxprom67 = sext i32 %62 to i64
  %arrayidx68 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx68, i32 0, i64 %idxprom66
  %63 = load i32, i32* %arrayidx69, align 4
  %64 = load i32, i32* %j, align 4
  %idxprom70 = sext i32 %64 to i64
  %65 = load i32, i32* %i1, align 4
  %idxprom71 = sext i32 %65 to i64
  %arrayidx72 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom71
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx72, i32 0, i64 %idxprom70
  %66 = load i32, i32* %arrayidx73, align 4
  %add74 = add nsw i32 %63, %66
  %67 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %67 to i64
  %arrayidx76 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom75
  store i32 %add74, i32* %arrayidx76, align 4
  %68 = load i32, i32* %j, align 4
  %idxprom77 = sext i32 %68 to i64
  %69 = load i32, i32* %i, align 4
  %idxprom78 = sext i32 %69 to i64
  %arrayidx79 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom78
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx79, i32 0, i64 %idxprom77
  %70 = load i32, i32* %arrayidx80, align 4
  %71 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %71 to i64
  %72 = load i32, i32* %i1, align 4
  %idxprom82 = sext i32 %72 to i64
  %arrayidx83 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83, i32 0, i64 %idxprom81
  %73 = load i32, i32* %arrayidx84, align 4
  %sub85 = sub nsw i32 %70, %73
  %74 = load i32, i32* %i1, align 4
  %idxprom86 = sext i32 %74 to i64
  %arrayidx87 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom86
  store i32 %sub85, i32* %arrayidx87, align 4
  br label %for.inc.88

for.inc.88:                                       ; preds = %for.body.64
  %75 = load i32, i32* %i, align 4
  %inc89 = add nsw i32 %75, 1
  store i32 %inc89, i32* %i, align 4
  br label %for.cond.61

for.end.90:                                       ; preds = %for.cond.61
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %76 = load i32, i32* %arrayidx91, align 4
  %arrayidx92 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %77 = load i32, i32* %arrayidx92, align 4
  %add93 = add nsw i32 %76, %77
  %78 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %78 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 0
  %arrayidx96 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i32 0, i64 %idxprom94
  store i32 %add93, i32* %arrayidx96, align 4
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %79 = load i32, i32* %arrayidx97, align 4
  %arrayidx98 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %80 = load i32, i32* %arrayidx98, align 4
  %sub99 = sub nsw i32 %79, %80
  %81 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %81 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 2
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i32 0, i64 %idxprom100
  store i32 %sub99, i32* %arrayidx102, align 4
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %82 = load i32, i32* %arrayidx103, align 4
  %mul104 = mul nsw i32 %82, 2
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %83 = load i32, i32* %arrayidx105, align 4
  %add106 = add nsw i32 %mul104, %83
  %84 = load i32, i32* %j, align 4
  %idxprom107 = sext i32 %84 to i64
  %arrayidx108 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 1
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx108, i32 0, i64 %idxprom107
  store i32 %add106, i32* %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %85 = load i32, i32* %arrayidx110, align 4
  %arrayidx111 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %86 = load i32, i32* %arrayidx111, align 4
  %mul112 = mul nsw i32 %86, 2
  %sub113 = sub nsw i32 %85, %mul112
  %87 = load i32, i32* %j, align 4
  %idxprom114 = sext i32 %87 to i64
  %arrayidx115 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 3
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx115, i32 0, i64 %idxprom114
  store i32 %sub113, i32* %arrayidx116, align 4
  br label %for.inc.117

for.inc.117:                                      ; preds = %for.end.90
  %88 = load i32, i32* %j, align 4
  %inc118 = add nsw i32 %88, 1
  store i32 %inc118, i32* %j, align 4
  br label %for.cond.57

for.end.119:                                      ; preds = %for.cond.57
  store i32 0, i32* %i, align 4
  br label %for.cond.120

for.cond.120:                                     ; preds = %for.inc.180, %for.end.119
  %89 = load i32, i32* %i, align 4
  %cmp121 = icmp slt i32 %89, 4
  br i1 %cmp121, label %for.body.123, label %for.end.182

for.body.123:                                     ; preds = %for.cond.120
  store i32 0, i32* %j, align 4
  br label %for.cond.124

for.cond.124:                                     ; preds = %for.inc.151, %for.body.123
  %90 = load i32, i32* %j, align 4
  %cmp125 = icmp slt i32 %90, 2
  br i1 %cmp125, label %for.body.127, label %for.end.153

for.body.127:                                     ; preds = %for.cond.124
  %91 = load i32, i32* %j, align 4
  %sub128 = sub nsw i32 3, %91
  store i32 %sub128, i32* %j1, align 4
  %92 = load i32, i32* %j, align 4
  %idxprom129 = sext i32 %92 to i64
  %93 = load i32, i32* %i, align 4
  %idxprom130 = sext i32 %93 to i64
  %arrayidx131 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom130
  %arrayidx132 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx131, i32 0, i64 %idxprom129
  %94 = load i32, i32* %arrayidx132, align 4
  %95 = load i32, i32* %j1, align 4
  %idxprom133 = sext i32 %95 to i64
  %96 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %96 to i64
  %arrayidx135 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom134
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx135, i32 0, i64 %idxprom133
  %97 = load i32, i32* %arrayidx136, align 4
  %add137 = add nsw i32 %94, %97
  %98 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %98 to i64
  %arrayidx139 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom138
  store i32 %add137, i32* %arrayidx139, align 4
  %99 = load i32, i32* %j, align 4
  %idxprom140 = sext i32 %99 to i64
  %100 = load i32, i32* %i, align 4
  %idxprom141 = sext i32 %100 to i64
  %arrayidx142 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom141
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx142, i32 0, i64 %idxprom140
  %101 = load i32, i32* %arrayidx143, align 4
  %102 = load i32, i32* %j1, align 4
  %idxprom144 = sext i32 %102 to i64
  %103 = load i32, i32* %i, align 4
  %idxprom145 = sext i32 %103 to i64
  %arrayidx146 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom145
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx146, i32 0, i64 %idxprom144
  %104 = load i32, i32* %arrayidx147, align 4
  %sub148 = sub nsw i32 %101, %104
  %105 = load i32, i32* %j1, align 4
  %idxprom149 = sext i32 %105 to i64
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom149
  store i32 %sub148, i32* %arrayidx150, align 4
  br label %for.inc.151

for.inc.151:                                      ; preds = %for.body.127
  %106 = load i32, i32* %j, align 4
  %inc152 = add nsw i32 %106, 1
  store i32 %inc152, i32* %j, align 4
  br label %for.cond.124

for.end.153:                                      ; preds = %for.cond.124
  %arrayidx154 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %107 = load i32, i32* %arrayidx154, align 4
  %arrayidx155 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %108 = load i32, i32* %arrayidx155, align 4
  %add156 = add nsw i32 %107, %108
  %109 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %109 to i64
  %arrayidx158 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom157
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx158, i32 0, i64 0
  store i32 %add156, i32* %arrayidx159, align 4
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %110 = load i32, i32* %arrayidx160, align 4
  %arrayidx161 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %111 = load i32, i32* %arrayidx161, align 4
  %sub162 = sub nsw i32 %110, %111
  %112 = load i32, i32* %i, align 4
  %idxprom163 = sext i32 %112 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom163
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i32 0, i64 2
  store i32 %sub162, i32* %arrayidx165, align 4
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %113 = load i32, i32* %arrayidx166, align 4
  %mul167 = mul nsw i32 %113, 2
  %arrayidx168 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %114 = load i32, i32* %arrayidx168, align 4
  %add169 = add nsw i32 %mul167, %114
  %115 = load i32, i32* %i, align 4
  %idxprom170 = sext i32 %115 to i64
  %arrayidx171 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom170
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx171, i32 0, i64 1
  store i32 %add169, i32* %arrayidx172, align 4
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %116 = load i32, i32* %arrayidx173, align 4
  %arrayidx174 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %117 = load i32, i32* %arrayidx174, align 4
  %mul175 = mul nsw i32 %117, 2
  %sub176 = sub nsw i32 %116, %mul175
  %118 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %118 to i64
  %arrayidx178 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom177
  %arrayidx179 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx178, i32 0, i64 3
  store i32 %sub176, i32* %arrayidx179, align 4
  br label %for.inc.180

for.inc.180:                                      ; preds = %for.end.153
  %119 = load i32, i32* %i, align 4
  %inc181 = add nsw i32 %119, 1
  store i32 %inc181, i32* %i, align 4
  br label %for.cond.120

for.end.182:                                      ; preds = %for.cond.120
  store i32 0, i32* %nonzero, align 4
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.183

for.cond.183:                                     ; preds = %for.inc.272, %for.end.182
  %120 = load i32, i32* %coeff_ctr, align 4
  %cmp184 = icmp slt i32 %120, 16
  br i1 %cmp184, label %for.body.186, label %for.end.274

for.body.186:                                     ; preds = %for.cond.183
  %121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_picture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %121, i32 0, i32 110
  %122 = load i32, i32* %field_picture, align 4
  %tobool = icmp ne i32 %122, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.186
  %123 = load i32, i32* @mb_adaptive, align 4
  %tobool187 = icmp ne i32 %123, 0
  br i1 %tobool187, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_mode = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i32 0, i32 90
  %125 = load i32, i32* %field_mode, align 4
  %tobool188 = icmp ne i32 %125, 0
  br i1 %tobool188, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %for.body.186
  %126 = load i32, i32* %coeff_ctr, align 4
  %idxprom189 = sext i32 %126 to i64
  %arrayidx190 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom189
  %arrayidx191 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx190, i32 0, i64 0
  %127 = load i8, i8* %arrayidx191, align 1
  %conv192 = zext i8 %127 to i32
  store i32 %conv192, i32* %i, align 4
  %128 = load i32, i32* %coeff_ctr, align 4
  %idxprom193 = sext i32 %128 to i64
  %arrayidx194 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom193
  %arrayidx195 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx194, i32 0, i64 1
  %129 = load i8, i8* %arrayidx195, align 1
  %conv196 = zext i8 %129 to i32
  store i32 %conv196, i32* %j, align 4
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %130 = load i32, i32* %coeff_ctr, align 4
  %idxprom197 = sext i32 %130 to i64
  %arrayidx198 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom197
  %arrayidx199 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx198, i32 0, i64 0
  %131 = load i8, i8* %arrayidx199, align 1
  %conv200 = zext i8 %131 to i32
  store i32 %conv200, i32* %i, align 4
  %132 = load i32, i32* %coeff_ctr, align 4
  %idxprom201 = sext i32 %132 to i64
  %arrayidx202 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom201
  %arrayidx203 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx202, i32 0, i64 1
  %133 = load i8, i8* %arrayidx203, align 1
  %conv204 = zext i8 %133 to i32
  store i32 %conv204, i32* %j, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %134 = load i32, i32* %run, align 4
  %inc205 = add nsw i32 %134, 1
  store i32 %inc205, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %135 = load i32, i32* %j, align 4
  %idxprom206 = sext i32 %135 to i64
  %136 = load i32, i32* %i, align 4
  %idxprom207 = sext i32 %136 to i64
  %arrayidx208 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom207
  %arrayidx209 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx208, i32 0, i64 %idxprom206
  %137 = load i32, i32* %arrayidx209, align 4
  %call = call i32 @iabs(i32 %137)
  %138 = load i32, i32* %j, align 4
  %idxprom210 = sext i32 %138 to i64
  %139 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %139 to i64
  %140 = load i32, i32* %qp_rem_sp, align 4
  %idxprom212 = sext i32 %140 to i64
  %arrayidx213 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom212
  %arrayidx214 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx213, i32 0, i64 %idxprom211
  %arrayidx215 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx214, i32 0, i64 %idxprom210
  %141 = load i32, i32* %arrayidx215, align 4
  %mul216 = mul nsw i32 %call, %141
  %142 = load i32, i32* %qp_const2, align 4
  %add217 = add nsw i32 %mul216, %142
  %143 = load i32, i32* %q_bits_sp, align 4
  %shr218 = ashr i32 %add217, %143
  store i32 %shr218, i32* %level1, align 4
  %144 = load i32, i32* %i, align 4
  %idxprom219 = sext i32 %144 to i64
  %145 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %145 to i64
  %146 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7221 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %146, i32 0, i32 52
  %arrayidx222 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7221, i32 0, i64 %idxprom220
  %arrayidx223 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx222, i32 0, i64 %idxprom219
  %147 = load i32, i32* %arrayidx223, align 4
  %148 = load i32, i32* %level1, align 4
  %149 = load i32, i32* %j, align 4
  %idxprom224 = sext i32 %149 to i64
  %150 = load i32, i32* %i, align 4
  %idxprom225 = sext i32 %150 to i64
  %arrayidx226 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom225
  %arrayidx227 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx226, i32 0, i64 %idxprom224
  %151 = load i32, i32* %arrayidx227, align 4
  %call228 = call i32 @isignab(i32 %148, i32 %151)
  %sub229 = sub nsw i32 %147, %call228
  store i32 %sub229, i32* %c_err, align 4
  %152 = load i32, i32* %c_err, align 4
  %call230 = call i32 @iabs(i32 %152)
  store i32 %call230, i32* %level, align 4
  %153 = load i32, i32* %level, align 4
  %cmp231 = icmp ne i32 %153, 0
  br i1 %cmp231, label %if.then.233, label %if.end.252

if.then.233:                                      ; preds = %if.end
  store i32 1, i32* %nonzero, align 4
  %154 = load i32, i32* %level, align 4
  %cmp234 = icmp sgt i32 %154, 1
  br i1 %cmp234, label %if.then.236, label %if.else.238

if.then.236:                                      ; preds = %if.then.233
  %155 = load i32*, i32** %coeff_cost.addr, align 8
  %156 = load i32, i32* %155, align 4
  %add237 = add nsw i32 %156, 999999
  store i32 %add237, i32* %155, align 4
  br label %if.end.245

if.else.238:                                      ; preds = %if.then.233
  %157 = load i32, i32* %run, align 4
  %idxprom239 = sext i32 %157 to i64
  %158 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %158, i32 0, i32 116
  %159 = load i32, i32* %disthres, align 4
  %idxprom240 = sext i32 %159 to i64
  %arrayidx241 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom240
  %arrayidx242 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx241, i32 0, i64 %idxprom239
  %160 = load i8, i8* %arrayidx242, align 1
  %conv243 = zext i8 %160 to i32
  %161 = load i32*, i32** %coeff_cost.addr, align 8
  %162 = load i32, i32* %161, align 4
  %add244 = add nsw i32 %162, %conv243
  store i32 %add244, i32* %161, align 4
  br label %if.end.245

if.end.245:                                       ; preds = %if.else.238, %if.then.236
  %163 = load i32, i32* %level, align 4
  %164 = load i32, i32* %c_err, align 4
  %call246 = call i32 @isignab(i32 %163, i32 %164)
  %165 = load i32, i32* %scan_pos, align 4
  %idxprom247 = sext i32 %165 to i64
  %166 = load i32*, i32** %ACLevel, align 8
  %arrayidx248 = getelementptr inbounds i32, i32* %166, i64 %idxprom247
  store i32 %call246, i32* %arrayidx248, align 4
  %167 = load i32, i32* %run, align 4
  %168 = load i32, i32* %scan_pos, align 4
  %idxprom249 = sext i32 %168 to i64
  %169 = load i32*, i32** %ACRun, align 8
  %arrayidx250 = getelementptr inbounds i32, i32* %169, i64 %idxprom249
  store i32 %167, i32* %arrayidx250, align 4
  %170 = load i32, i32* %scan_pos, align 4
  %inc251 = add nsw i32 %170, 1
  store i32 %inc251, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.252

if.end.252:                                       ; preds = %if.end.245, %if.end
  %171 = load i32, i32* %c_err, align 4
  %172 = load i32, i32* %level1, align 4
  %173 = load i32, i32* %j, align 4
  %idxprom253 = sext i32 %173 to i64
  %174 = load i32, i32* %i, align 4
  %idxprom254 = sext i32 %174 to i64
  %arrayidx255 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %predicted_block, i32 0, i64 %idxprom254
  %arrayidx256 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx255, i32 0, i64 %idxprom253
  %175 = load i32, i32* %arrayidx256, align 4
  %call257 = call i32 @isignab(i32 %172, i32 %175)
  %add258 = add nsw i32 %171, %call257
  store i32 %add258, i32* %ilev, align 4
  %176 = load i32, i32* %ilev, align 4
  %177 = load i32, i32* %j, align 4
  %idxprom259 = sext i32 %177 to i64
  %178 = load i32, i32* %i, align 4
  %idxprom260 = sext i32 %178 to i64
  %179 = load i32, i32* %qp_rem_sp, align 4
  %idxprom261 = sext i32 %179 to i64
  %arrayidx262 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom261
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx262, i32 0, i64 %idxprom260
  %arrayidx264 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i32 0, i64 %idxprom259
  %180 = load i32, i32* %arrayidx264, align 4
  %mul265 = mul nsw i32 %176, %180
  %181 = load i32, i32* %qp_per_sp, align 4
  %shl266 = shl i32 %mul265, %181
  %182 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %182 to i64
  %183 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %183 to i64
  %184 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7269 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %184, i32 0, i32 52
  %arrayidx270 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7269, i32 0, i64 %idxprom268
  %arrayidx271 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx270, i32 0, i64 %idxprom267
  store i32 %shl266, i32* %arrayidx271, align 4
  br label %for.inc.272

for.inc.272:                                      ; preds = %if.end.252
  %185 = load i32, i32* %coeff_ctr, align 4
  %inc273 = add nsw i32 %185, 1
  store i32 %inc273, i32* %coeff_ctr, align 4
  br label %for.cond.183

for.end.274:                                      ; preds = %for.cond.183
  %186 = load i32, i32* %scan_pos, align 4
  %idxprom275 = sext i32 %186 to i64
  %187 = load i32*, i32** %ACLevel, align 8
  %arrayidx276 = getelementptr inbounds i32, i32* %187, i64 %idxprom275
  store i32 0, i32* %arrayidx276, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.341, %for.end.274
  %188 = load i32, i32* %j, align 4
  %cmp278 = icmp slt i32 %188, 4
  br i1 %cmp278, label %for.body.280, label %for.end.343

for.body.280:                                     ; preds = %for.cond.277
  store i32 0, i32* %i, align 4
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.292, %for.body.280
  %189 = load i32, i32* %i, align 4
  %cmp282 = icmp slt i32 %189, 4
  br i1 %cmp282, label %for.body.284, label %for.end.294

for.body.284:                                     ; preds = %for.cond.281
  %190 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %190 to i64
  %191 = load i32, i32* %j, align 4
  %idxprom286 = sext i32 %191 to i64
  %192 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7287 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %192, i32 0, i32 52
  %arrayidx288 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7287, i32 0, i64 %idxprom286
  %arrayidx289 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx288, i32 0, i64 %idxprom285
  %193 = load i32, i32* %arrayidx289, align 4
  %194 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %194 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom290
  store i32 %193, i32* %arrayidx291, align 4
  br label %for.inc.292

for.inc.292:                                      ; preds = %for.body.284
  %195 = load i32, i32* %i, align 4
  %inc293 = add nsw i32 %195, 1
  store i32 %inc293, i32* %i, align 4
  br label %for.cond.281

for.end.294:                                      ; preds = %for.cond.281
  %arrayidx295 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %196 = load i32, i32* %arrayidx295, align 4
  %arrayidx296 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %197 = load i32, i32* %arrayidx296, align 4
  %add297 = add nsw i32 %196, %197
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add297, i32* %arrayidx298, align 4
  %arrayidx299 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %198 = load i32, i32* %arrayidx299, align 4
  %arrayidx300 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %199 = load i32, i32* %arrayidx300, align 4
  %sub301 = sub nsw i32 %198, %199
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub301, i32* %arrayidx302, align 4
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %200 = load i32, i32* %arrayidx303, align 4
  %shr304 = ashr i32 %200, 1
  %arrayidx305 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %201 = load i32, i32* %arrayidx305, align 4
  %sub306 = sub nsw i32 %shr304, %201
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub306, i32* %arrayidx307, align 4
  %arrayidx308 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %202 = load i32, i32* %arrayidx308, align 4
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %203 = load i32, i32* %arrayidx309, align 4
  %shr310 = ashr i32 %203, 1
  %add311 = add nsw i32 %202, %shr310
  %arrayidx312 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add311, i32* %arrayidx312, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.313

for.cond.313:                                     ; preds = %for.inc.338, %for.end.294
  %204 = load i32, i32* %i, align 4
  %cmp314 = icmp slt i32 %204, 2
  br i1 %cmp314, label %for.body.316, label %for.end.340

for.body.316:                                     ; preds = %for.cond.313
  %205 = load i32, i32* %i, align 4
  %sub317 = sub nsw i32 3, %205
  store i32 %sub317, i32* %i1, align 4
  %206 = load i32, i32* %i, align 4
  %idxprom318 = sext i32 %206 to i64
  %arrayidx319 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom318
  %207 = load i32, i32* %arrayidx319, align 4
  %208 = load i32, i32* %i1, align 4
  %idxprom320 = sext i32 %208 to i64
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom320
  %209 = load i32, i32* %arrayidx321, align 4
  %add322 = add nsw i32 %207, %209
  %210 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %210 to i64
  %211 = load i32, i32* %j, align 4
  %idxprom324 = sext i32 %211 to i64
  %212 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7325 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %212, i32 0, i32 52
  %arrayidx326 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7325, i32 0, i64 %idxprom324
  %arrayidx327 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx326, i32 0, i64 %idxprom323
  store i32 %add322, i32* %arrayidx327, align 4
  %213 = load i32, i32* %i, align 4
  %idxprom328 = sext i32 %213 to i64
  %arrayidx329 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom328
  %214 = load i32, i32* %arrayidx329, align 4
  %215 = load i32, i32* %i1, align 4
  %idxprom330 = sext i32 %215 to i64
  %arrayidx331 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom330
  %216 = load i32, i32* %arrayidx331, align 4
  %sub332 = sub nsw i32 %214, %216
  %217 = load i32, i32* %i1, align 4
  %idxprom333 = sext i32 %217 to i64
  %218 = load i32, i32* %j, align 4
  %idxprom334 = sext i32 %218 to i64
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7335 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 52
  %arrayidx336 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7335, i32 0, i64 %idxprom334
  %arrayidx337 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx336, i32 0, i64 %idxprom333
  store i32 %sub332, i32* %arrayidx337, align 4
  br label %for.inc.338

for.inc.338:                                      ; preds = %for.body.316
  %220 = load i32, i32* %i, align 4
  %inc339 = add nsw i32 %220, 1
  store i32 %inc339, i32* %i, align 4
  br label %for.cond.313

for.end.340:                                      ; preds = %for.cond.313
  br label %for.inc.341

for.inc.341:                                      ; preds = %for.end.340
  %221 = load i32, i32* %j, align 4
  %inc342 = add nsw i32 %221, 1
  store i32 %inc342, i32* %j, align 4
  br label %for.cond.277

for.end.343:                                      ; preds = %for.cond.277
  store i32 0, i32* %i, align 4
  br label %for.cond.344

for.cond.344:                                     ; preds = %for.inc.414, %for.end.343
  %222 = load i32, i32* %i, align 4
  %cmp345 = icmp slt i32 %222, 4
  br i1 %cmp345, label %for.body.347, label %for.end.416

for.body.347:                                     ; preds = %for.cond.344
  store i32 0, i32* %j, align 4
  br label %for.cond.348

for.cond.348:                                     ; preds = %for.inc.359, %for.body.347
  %223 = load i32, i32* %j, align 4
  %cmp349 = icmp slt i32 %223, 4
  br i1 %cmp349, label %for.body.351, label %for.end.361

for.body.351:                                     ; preds = %for.cond.348
  %224 = load i32, i32* %i, align 4
  %idxprom352 = sext i32 %224 to i64
  %225 = load i32, i32* %j, align 4
  %idxprom353 = sext i32 %225 to i64
  %226 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %226, i32 0, i32 52
  %arrayidx355 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7354, i32 0, i64 %idxprom353
  %arrayidx356 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx355, i32 0, i64 %idxprom352
  %227 = load i32, i32* %arrayidx356, align 4
  %228 = load i32, i32* %j, align 4
  %idxprom357 = sext i32 %228 to i64
  %arrayidx358 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom357
  store i32 %227, i32* %arrayidx358, align 4
  br label %for.inc.359

for.inc.359:                                      ; preds = %for.body.351
  %229 = load i32, i32* %j, align 4
  %inc360 = add nsw i32 %229, 1
  store i32 %inc360, i32* %j, align 4
  br label %for.cond.348

for.end.361:                                      ; preds = %for.cond.348
  %arrayidx362 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %230 = load i32, i32* %arrayidx362, align 4
  %arrayidx363 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %231 = load i32, i32* %arrayidx363, align 4
  %add364 = add nsw i32 %230, %231
  %arrayidx365 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add364, i32* %arrayidx365, align 4
  %arrayidx366 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %232 = load i32, i32* %arrayidx366, align 4
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %233 = load i32, i32* %arrayidx367, align 4
  %sub368 = sub nsw i32 %232, %233
  %arrayidx369 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub368, i32* %arrayidx369, align 4
  %arrayidx370 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %234 = load i32, i32* %arrayidx370, align 4
  %shr371 = ashr i32 %234, 1
  %arrayidx372 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %235 = load i32, i32* %arrayidx372, align 4
  %sub373 = sub nsw i32 %shr371, %235
  %arrayidx374 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub373, i32* %arrayidx374, align 4
  %arrayidx375 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %236 = load i32, i32* %arrayidx375, align 4
  %arrayidx376 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %237 = load i32, i32* %arrayidx376, align 4
  %shr377 = ashr i32 %237, 1
  %add378 = add nsw i32 %236, %shr377
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add378, i32* %arrayidx379, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.380

for.cond.380:                                     ; preds = %for.inc.411, %for.end.361
  %238 = load i32, i32* %j, align 4
  %cmp381 = icmp slt i32 %238, 2
  br i1 %cmp381, label %for.body.383, label %for.end.413

for.body.383:                                     ; preds = %for.cond.380
  %239 = load i32, i32* %j, align 4
  %sub384 = sub nsw i32 3, %239
  store i32 %sub384, i32* %j1, align 4
  %240 = load i32, i32* %j, align 4
  %idxprom385 = sext i32 %240 to i64
  %arrayidx386 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom385
  %241 = load i32, i32* %arrayidx386, align 4
  %242 = load i32, i32* %j1, align 4
  %idxprom387 = sext i32 %242 to i64
  %arrayidx388 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom387
  %243 = load i32, i32* %arrayidx388, align 4
  %add389 = add nsw i32 %241, %243
  %add390 = add nsw i32 %add389, 32
  %shr391 = ashr i32 %add390, 6
  %call392 = call i32 @iClip3(i32 0, i32 255, i32 %shr391)
  %244 = load i32, i32* %i, align 4
  %idxprom393 = sext i32 %244 to i64
  %245 = load i32, i32* %j, align 4
  %idxprom394 = sext i32 %245 to i64
  %246 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7395 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %246, i32 0, i32 52
  %arrayidx396 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7395, i32 0, i64 %idxprom394
  %arrayidx397 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx396, i32 0, i64 %idxprom393
  store i32 %call392, i32* %arrayidx397, align 4
  %247 = load i32, i32* %j, align 4
  %idxprom398 = sext i32 %247 to i64
  %arrayidx399 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom398
  %248 = load i32, i32* %arrayidx399, align 4
  %249 = load i32, i32* %j1, align 4
  %idxprom400 = sext i32 %249 to i64
  %arrayidx401 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom400
  %250 = load i32, i32* %arrayidx401, align 4
  %sub402 = sub nsw i32 %248, %250
  %add403 = add nsw i32 %sub402, 32
  %shr404 = ashr i32 %add403, 6
  %call405 = call i32 @iClip3(i32 0, i32 255, i32 %shr404)
  %251 = load i32, i32* %i, align 4
  %idxprom406 = sext i32 %251 to i64
  %252 = load i32, i32* %j1, align 4
  %idxprom407 = sext i32 %252 to i64
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7408 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 52
  %arrayidx409 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7408, i32 0, i64 %idxprom407
  %arrayidx410 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx409, i32 0, i64 %idxprom406
  store i32 %call405, i32* %arrayidx410, align 4
  br label %for.inc.411

for.inc.411:                                      ; preds = %for.body.383
  %254 = load i32, i32* %j, align 4
  %inc412 = add nsw i32 %254, 1
  store i32 %inc412, i32* %j, align 4
  br label %for.cond.380

for.end.413:                                      ; preds = %for.cond.380
  br label %for.inc.414

for.inc.414:                                      ; preds = %for.end.413
  %255 = load i32, i32* %i, align 4
  %inc415 = add nsw i32 %255, 1
  store i32 %inc415, i32* %i, align 4
  br label %for.cond.344

for.end.416:                                      ; preds = %for.cond.344
  store i32 0, i32* %j, align 4
  br label %for.cond.417

for.cond.417:                                     ; preds = %for.inc.444, %for.end.416
  %256 = load i32, i32* %j, align 4
  %cmp418 = icmp slt i32 %256, 4
  br i1 %cmp418, label %for.body.420, label %for.end.446

for.body.420:                                     ; preds = %for.cond.417
  store i32 0, i32* %i, align 4
  br label %for.cond.421

for.cond.421:                                     ; preds = %for.inc.441, %for.body.420
  %257 = load i32, i32* %i, align 4
  %cmp422 = icmp slt i32 %257, 4
  br i1 %cmp422, label %for.body.424, label %for.end.443

for.body.424:                                     ; preds = %for.cond.421
  %258 = load i32, i32* %j, align 4
  %idxprom425 = sext i32 %258 to i64
  %259 = load i32, i32* %i, align 4
  %idxprom426 = sext i32 %259 to i64
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7427 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 52
  %arrayidx428 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7427, i32 0, i64 %idxprom426
  %arrayidx429 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx428, i32 0, i64 %idxprom425
  %261 = load i32, i32* %arrayidx429, align 4
  %conv430 = trunc i32 %261 to i16
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x431 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 39
  %263 = load i32, i32* %pix_x431, align 4
  %264 = load i32, i32* %block_x.addr, align 4
  %add432 = add nsw i32 %263, %264
  %265 = load i32, i32* %j, align 4
  %add433 = add nsw i32 %add432, %265
  %idxprom434 = sext i32 %add433 to i64
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y435 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 40
  %267 = load i32, i32* %pix_y435, align 4
  %268 = load i32, i32* %block_y.addr, align 4
  %add436 = add nsw i32 %267, %268
  %269 = load i32, i32* %i, align 4
  %add437 = add nsw i32 %add436, %269
  %idxprom438 = sext i32 %add437 to i64
  %270 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %270, i32 0, i32 29
  %271 = load i16**, i16*** %imgY, align 8
  %arrayidx439 = getelementptr inbounds i16*, i16** %271, i64 %idxprom438
  %272 = load i16*, i16** %arrayidx439, align 8
  %arrayidx440 = getelementptr inbounds i16, i16* %272, i64 %idxprom434
  store i16 %conv430, i16* %arrayidx440, align 2
  br label %for.inc.441

for.inc.441:                                      ; preds = %for.body.424
  %273 = load i32, i32* %i, align 4
  %inc442 = add nsw i32 %273, 1
  store i32 %inc442, i32* %i, align 4
  br label %for.cond.421

for.end.443:                                      ; preds = %for.cond.421
  br label %for.inc.444

for.inc.444:                                      ; preds = %for.end.443
  %274 = load i32, i32* %j, align 4
  %inc445 = add nsw i32 %274, 1
  store i32 %inc445, i32* %j, align 4
  br label %for.cond.417

for.end.446:                                      ; preds = %for.cond.417
  %275 = load i32, i32* %nonzero, align 4
  ret i32 %275
}

; Function Attrs: nounwind uwtable
define i32 @dct_chroma_sp2(i32 %uv, i32 %cr_cbp) #0 {
entry:
  %uv.addr = alloca i32, align 4
  %cr_cbp.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %ilev = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %coeff_ctr = alloca i32, align 4
  %qp_const = alloca i32, align 4
  %c_err = alloca i32, align 4
  %level = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %run = alloca i32, align 4
  %m1 = alloca [4 x i32], align 16
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %coeff_cost = alloca i32, align 4
  %cr_cbp_tmp = alloca i32, align 4
  %predicted_chroma_block = alloca [8 x [8 x i32]], align 16
  %qp_const2 = alloca i32, align 4
  %mp1 = alloca [4 x i32], align 16
  %currMB = alloca %struct.macroblock*, align 8
  %qp_per = alloca i32, align 4
  %qp_rem = alloca i32, align 4
  %q_bits = alloca i32, align 4
  %qp_per_sp = alloca i32, align 4
  %qp_rem_sp = alloca i32, align 4
  %q_bits_sp = alloca i32, align 4
  %b4 = alloca i32, align 4
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %level1 = alloca i32, align 4
  store i32 %uv, i32* %uv.addr, align 4
  store i32 %cr_cbp, i32* %cr_cbp.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 61
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load i32, i32* %uv.addr, align 4
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 54
  %6 = load i32***, i32**** %cofDC, align 8
  %arrayidx2 = getelementptr inbounds i32**, i32*** %6, i64 %idxprom1
  %7 = load i32**, i32*** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32*, i32** %7, i64 0
  %8 = load i32*, i32** %arrayidx3, align 8
  store i32* %8, i32** %DCLevel, align 8
  %9 = load i32, i32* %uv.addr, align 4
  %add4 = add nsw i32 %9, 1
  %idxprom5 = sext i32 %add4 to i64
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC6 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 54
  %11 = load i32***, i32**** %cofDC6, align 8
  %arrayidx7 = getelementptr inbounds i32**, i32*** %11, i64 %idxprom5
  %12 = load i32**, i32*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32*, i32** %12, i64 1
  %13 = load i32*, i32** %arrayidx8, align 8
  store i32* %13, i32** %DCRun, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 9
  %15 = load i32, i32* %qp, align 4
  %cmp = icmp slt i32 %15, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 9
  %17 = load i32, i32* %qp9, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 9
  %19 = load i32, i32* %qp10, align 4
  %idxprom11 = sext i32 %19 to i64
  %arrayidx12 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom11
  %20 = load i8, i8* %arrayidx12, align 1
  %conv = zext i8 %20 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %conv, %cond.false ]
  %sub = sub nsw i32 %cond, 0
  %div = sdiv i32 %sub, 6
  store i32 %div, i32* %qp_per, align 4
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 9
  %22 = load i32, i32* %qp13, align 4
  %cmp14 = icmp slt i32 %22, 0
  br i1 %cmp14, label %cond.true.16, label %cond.false.18

cond.true.16:                                     ; preds = %cond.end
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 9
  %24 = load i32, i32* %qp17, align 4
  br label %cond.end.23

cond.false.18:                                    ; preds = %cond.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 9
  %26 = load i32, i32* %qp19, align 4
  %idxprom20 = sext i32 %26 to i64
  %arrayidx21 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom20
  %27 = load i8, i8* %arrayidx21, align 1
  %conv22 = zext i8 %27 to i32
  br label %cond.end.23

cond.end.23:                                      ; preds = %cond.false.18, %cond.true.16
  %cond24 = phi i32 [ %24, %cond.true.16 ], [ %conv22, %cond.false.18 ]
  %sub25 = sub nsw i32 %cond24, 0
  %rem = srem i32 %sub25, 6
  store i32 %rem, i32* %qp_rem, align 4
  %28 = load i32, i32* %qp_per, align 4
  %add26 = add nsw i32 15, %28
  store i32 %add26, i32* %q_bits, align 4
  %29 = load i32, i32* %q_bits, align 4
  %shl = shl i32 1, %29
  %div27 = sdiv i32 %shl, 6
  store i32 %div27, i32* %qp_const, align 4
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 10
  %31 = load i32, i32* %qpsp, align 4
  %cmp28 = icmp slt i32 %31, 0
  br i1 %cmp28, label %cond.true.30, label %cond.false.32

cond.true.30:                                     ; preds = %cond.end.23
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp31 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 10
  %33 = load i32, i32* %qpsp31, align 4
  br label %cond.end.37

cond.false.32:                                    ; preds = %cond.end.23
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp33 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 10
  %35 = load i32, i32* %qpsp33, align 4
  %idxprom34 = sext i32 %35 to i64
  %arrayidx35 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom34
  %36 = load i8, i8* %arrayidx35, align 1
  %conv36 = zext i8 %36 to i32
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.false.32, %cond.true.30
  %cond38 = phi i32 [ %33, %cond.true.30 ], [ %conv36, %cond.false.32 ]
  %sub39 = sub nsw i32 %cond38, 0
  %div40 = sdiv i32 %sub39, 6
  store i32 %div40, i32* %qp_per_sp, align 4
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp41 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 10
  %38 = load i32, i32* %qpsp41, align 4
  %cmp42 = icmp slt i32 %38, 0
  br i1 %cmp42, label %cond.true.44, label %cond.false.46

cond.true.44:                                     ; preds = %cond.end.37
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 10
  %40 = load i32, i32* %qpsp45, align 4
  br label %cond.end.51

cond.false.46:                                    ; preds = %cond.end.37
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp47 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 10
  %42 = load i32, i32* %qpsp47, align 4
  %idxprom48 = sext i32 %42 to i64
  %arrayidx49 = getelementptr inbounds [52 x i8], [52 x i8]* @QP_SCALE_CR, i32 0, i64 %idxprom48
  %43 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %43 to i32
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.false.46, %cond.true.44
  %cond52 = phi i32 [ %40, %cond.true.44 ], [ %conv50, %cond.false.46 ]
  %sub53 = sub nsw i32 %cond52, 0
  %rem54 = srem i32 %sub53, 6
  store i32 %rem54, i32* %qp_rem_sp, align 4
  %44 = load i32, i32* %qp_per_sp, align 4
  %add55 = add nsw i32 15, %44
  store i32 %add55, i32* %q_bits_sp, align 4
  %45 = load i32, i32* %q_bits_sp, align 4
  %shl56 = shl i32 1, %45
  %div57 = sdiv i32 %shl56, 2
  store i32 %div57, i32* %qp_const2, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.85, %cond.end.51
  %46 = load i32, i32* %j, align 4
  %cmp58 = icmp slt i32 %46, 8
  br i1 %cmp58, label %for.body, label %for.end.87

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.60

for.cond.60:                                      ; preds = %for.inc, %for.body
  %47 = load i32, i32* %i, align 4
  %cmp61 = icmp slt i32 %47, 8
  br i1 %cmp61, label %for.body.63, label %for.end

for.body.63:                                      ; preds = %for.cond.60
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %49 = load i32, i32* %j, align 4
  %idxprom65 = sext i32 %49 to i64
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 51
  %arrayidx66 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom65
  %arrayidx67 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx66, i32 0, i64 %idxprom64
  %51 = load i16, i16* %arrayidx67, align 2
  %conv68 = zext i16 %51 to i32
  %52 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %52 to i64
  %53 = load i32, i32* %i, align 4
  %idxprom70 = sext i32 %53 to i64
  %arrayidx71 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom70
  %arrayidx72 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx71, i32 0, i64 %idxprom69
  store i32 %conv68, i32* %arrayidx72, align 4
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 41
  %55 = load i32, i32* %pix_c_x, align 4
  %56 = load i32, i32* %i, align 4
  %add73 = add nsw i32 %55, %56
  %idxprom74 = sext i32 %add73 to i64
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 42
  %58 = load i32, i32* %pix_c_y, align 4
  %59 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %58, %59
  %idxprom76 = sext i32 %add75 to i64
  %60 = load i32, i32* %uv.addr, align 4
  %idxprom77 = sext i32 %60 to i64
  %61 = load i32***, i32**** @lrec_uv, align 8
  %arrayidx78 = getelementptr inbounds i32**, i32*** %61, i64 %idxprom77
  %62 = load i32**, i32*** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i32*, i32** %62, i64 %idxprom76
  %63 = load i32*, i32** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i32, i32* %63, i64 %idxprom74
  %64 = load i32, i32* %arrayidx80, align 4
  %65 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %65 to i64
  %66 = load i32, i32* %j, align 4
  %idxprom82 = sext i32 %66 to i64
  %67 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %67, i32 0, i32 52
  %arrayidx83 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx83, i32 0, i64 %idxprom81
  store i32 %64, i32* %arrayidx84, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.63
  %68 = load i32, i32* %i, align 4
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.60

for.end:                                          ; preds = %for.cond.60
  br label %for.inc.85

for.inc.85:                                       ; preds = %for.end
  %69 = load i32, i32* %j, align 4
  %inc86 = add nsw i32 %69, 1
  store i32 %inc86, i32* %j, align 4
  br label %for.cond

for.end.87:                                       ; preds = %for.cond
  store i32 0, i32* %n2, align 4
  br label %for.cond.88

for.cond.88:                                      ; preds = %for.inc.248, %for.end.87
  %70 = load i32, i32* %n2, align 4
  %cmp89 = icmp sle i32 %70, 4
  br i1 %cmp89, label %for.body.91, label %for.end.250

for.body.91:                                      ; preds = %for.cond.88
  store i32 0, i32* %n1, align 4
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc.245, %for.body.91
  %71 = load i32, i32* %n1, align 4
  %cmp93 = icmp sle i32 %71, 4
  br i1 %cmp93, label %for.body.95, label %for.end.247

for.body.95:                                      ; preds = %for.cond.92
  store i32 0, i32* %j, align 4
  br label %for.cond.96

for.cond.96:                                      ; preds = %for.inc.167, %for.body.95
  %72 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %72, 4
  br i1 %cmp97, label %for.body.99, label %for.end.169

for.body.99:                                      ; preds = %for.cond.96
  %73 = load i32, i32* %n2, align 4
  %74 = load i32, i32* %j, align 4
  %add100 = add nsw i32 %73, %74
  store i32 %add100, i32* %mb_y, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.101

for.cond.101:                                     ; preds = %for.inc.132, %for.body.99
  %75 = load i32, i32* %i, align 4
  %cmp102 = icmp slt i32 %75, 2
  br i1 %cmp102, label %for.body.104, label %for.end.134

for.body.104:                                     ; preds = %for.cond.101
  %76 = load i32, i32* %i, align 4
  %sub105 = sub nsw i32 3, %76
  store i32 %sub105, i32* %i1, align 4
  %77 = load i32, i32* %mb_y, align 4
  %idxprom106 = sext i32 %77 to i64
  %78 = load i32, i32* %i, align 4
  %79 = load i32, i32* %n1, align 4
  %add107 = add nsw i32 %78, %79
  %idxprom108 = sext i32 %add107 to i64
  %arrayidx109 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom108
  %arrayidx110 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx109, i32 0, i64 %idxprom106
  %80 = load i32, i32* %arrayidx110, align 4
  %81 = load i32, i32* %mb_y, align 4
  %idxprom111 = sext i32 %81 to i64
  %82 = load i32, i32* %i1, align 4
  %83 = load i32, i32* %n1, align 4
  %add112 = add nsw i32 %82, %83
  %idxprom113 = sext i32 %add112 to i64
  %arrayidx114 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom113
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx114, i32 0, i64 %idxprom111
  %84 = load i32, i32* %arrayidx115, align 4
  %add116 = add nsw i32 %80, %84
  %85 = load i32, i32* %i, align 4
  %idxprom117 = sext i32 %85 to i64
  %arrayidx118 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom117
  store i32 %add116, i32* %arrayidx118, align 4
  %86 = load i32, i32* %mb_y, align 4
  %idxprom119 = sext i32 %86 to i64
  %87 = load i32, i32* %i, align 4
  %88 = load i32, i32* %n1, align 4
  %add120 = add nsw i32 %87, %88
  %idxprom121 = sext i32 %add120 to i64
  %arrayidx122 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom121
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx122, i32 0, i64 %idxprom119
  %89 = load i32, i32* %arrayidx123, align 4
  %90 = load i32, i32* %mb_y, align 4
  %idxprom124 = sext i32 %90 to i64
  %91 = load i32, i32* %i1, align 4
  %92 = load i32, i32* %n1, align 4
  %add125 = add nsw i32 %91, %92
  %idxprom126 = sext i32 %add125 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom126
  %arrayidx128 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i32 0, i64 %idxprom124
  %93 = load i32, i32* %arrayidx128, align 4
  %sub129 = sub nsw i32 %89, %93
  %94 = load i32, i32* %i1, align 4
  %idxprom130 = sext i32 %94 to i64
  %arrayidx131 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom130
  store i32 %sub129, i32* %arrayidx131, align 4
  br label %for.inc.132

for.inc.132:                                      ; preds = %for.body.104
  %95 = load i32, i32* %i, align 4
  %inc133 = add nsw i32 %95, 1
  store i32 %inc133, i32* %i, align 4
  br label %for.cond.101

for.end.134:                                      ; preds = %for.cond.101
  %arrayidx135 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %96 = load i32, i32* %arrayidx135, align 4
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %97 = load i32, i32* %arrayidx136, align 4
  %add137 = add nsw i32 %96, %97
  %98 = load i32, i32* %mb_y, align 4
  %idxprom138 = sext i32 %98 to i64
  %99 = load i32, i32* %n1, align 4
  %idxprom139 = sext i32 %99 to i64
  %arrayidx140 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom139
  %arrayidx141 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx140, i32 0, i64 %idxprom138
  store i32 %add137, i32* %arrayidx141, align 4
  %arrayidx142 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %100 = load i32, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %101 = load i32, i32* %arrayidx143, align 4
  %sub144 = sub nsw i32 %100, %101
  %102 = load i32, i32* %mb_y, align 4
  %idxprom145 = sext i32 %102 to i64
  %103 = load i32, i32* %n1, align 4
  %add146 = add nsw i32 %103, 2
  %idxprom147 = sext i32 %add146 to i64
  %arrayidx148 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom147
  %arrayidx149 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx148, i32 0, i64 %idxprom145
  store i32 %sub144, i32* %arrayidx149, align 4
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %104 = load i32, i32* %arrayidx150, align 4
  %mul = mul nsw i32 %104, 2
  %arrayidx151 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %105 = load i32, i32* %arrayidx151, align 4
  %add152 = add nsw i32 %mul, %105
  %106 = load i32, i32* %mb_y, align 4
  %idxprom153 = sext i32 %106 to i64
  %107 = load i32, i32* %n1, align 4
  %add154 = add nsw i32 %107, 1
  %idxprom155 = sext i32 %add154 to i64
  %arrayidx156 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom155
  %arrayidx157 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx156, i32 0, i64 %idxprom153
  store i32 %add152, i32* %arrayidx157, align 4
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %108 = load i32, i32* %arrayidx158, align 4
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %109 = load i32, i32* %arrayidx159, align 4
  %mul160 = mul nsw i32 %109, 2
  %sub161 = sub nsw i32 %108, %mul160
  %110 = load i32, i32* %mb_y, align 4
  %idxprom162 = sext i32 %110 to i64
  %111 = load i32, i32* %n1, align 4
  %add163 = add nsw i32 %111, 3
  %idxprom164 = sext i32 %add163 to i64
  %arrayidx165 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom164
  %arrayidx166 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx165, i32 0, i64 %idxprom162
  store i32 %sub161, i32* %arrayidx166, align 4
  br label %for.inc.167

for.inc.167:                                      ; preds = %for.end.134
  %112 = load i32, i32* %j, align 4
  %inc168 = add nsw i32 %112, 1
  store i32 %inc168, i32* %j, align 4
  br label %for.cond.96

for.end.169:                                      ; preds = %for.cond.96
  store i32 0, i32* %i, align 4
  br label %for.cond.170

for.cond.170:                                     ; preds = %for.inc.242, %for.end.169
  %113 = load i32, i32* %i, align 4
  %cmp171 = icmp slt i32 %113, 4
  br i1 %cmp171, label %for.body.173, label %for.end.244

for.body.173:                                     ; preds = %for.cond.170
  %114 = load i32, i32* %n1, align 4
  %115 = load i32, i32* %i, align 4
  %add174 = add nsw i32 %114, %115
  store i32 %add174, i32* %j1, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.175

for.cond.175:                                     ; preds = %for.inc.206, %for.body.173
  %116 = load i32, i32* %j, align 4
  %cmp176 = icmp slt i32 %116, 2
  br i1 %cmp176, label %for.body.178, label %for.end.208

for.body.178:                                     ; preds = %for.cond.175
  %117 = load i32, i32* %j, align 4
  %sub179 = sub nsw i32 3, %117
  store i32 %sub179, i32* %j2, align 4
  %118 = load i32, i32* %n2, align 4
  %119 = load i32, i32* %j, align 4
  %add180 = add nsw i32 %118, %119
  %idxprom181 = sext i32 %add180 to i64
  %120 = load i32, i32* %j1, align 4
  %idxprom182 = sext i32 %120 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom182
  %arrayidx184 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i32 0, i64 %idxprom181
  %121 = load i32, i32* %arrayidx184, align 4
  %122 = load i32, i32* %n2, align 4
  %123 = load i32, i32* %j2, align 4
  %add185 = add nsw i32 %122, %123
  %idxprom186 = sext i32 %add185 to i64
  %124 = load i32, i32* %j1, align 4
  %idxprom187 = sext i32 %124 to i64
  %arrayidx188 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx188, i32 0, i64 %idxprom186
  %125 = load i32, i32* %arrayidx189, align 4
  %add190 = add nsw i32 %121, %125
  %126 = load i32, i32* %j, align 4
  %idxprom191 = sext i32 %126 to i64
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom191
  store i32 %add190, i32* %arrayidx192, align 4
  %127 = load i32, i32* %n2, align 4
  %128 = load i32, i32* %j, align 4
  %add193 = add nsw i32 %127, %128
  %idxprom194 = sext i32 %add193 to i64
  %129 = load i32, i32* %j1, align 4
  %idxprom195 = sext i32 %129 to i64
  %arrayidx196 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom195
  %arrayidx197 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx196, i32 0, i64 %idxprom194
  %130 = load i32, i32* %arrayidx197, align 4
  %131 = load i32, i32* %n2, align 4
  %132 = load i32, i32* %j2, align 4
  %add198 = add nsw i32 %131, %132
  %idxprom199 = sext i32 %add198 to i64
  %133 = load i32, i32* %j1, align 4
  %idxprom200 = sext i32 %133 to i64
  %arrayidx201 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom200
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx201, i32 0, i64 %idxprom199
  %134 = load i32, i32* %arrayidx202, align 4
  %sub203 = sub nsw i32 %130, %134
  %135 = load i32, i32* %j2, align 4
  %idxprom204 = sext i32 %135 to i64
  %arrayidx205 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom204
  store i32 %sub203, i32* %arrayidx205, align 4
  br label %for.inc.206

for.inc.206:                                      ; preds = %for.body.178
  %136 = load i32, i32* %j, align 4
  %inc207 = add nsw i32 %136, 1
  store i32 %inc207, i32* %j, align 4
  br label %for.cond.175

for.end.208:                                      ; preds = %for.cond.175
  %arrayidx209 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %137 = load i32, i32* %arrayidx209, align 4
  %arrayidx210 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %138 = load i32, i32* %arrayidx210, align 4
  %add211 = add nsw i32 %137, %138
  %139 = load i32, i32* %n2, align 4
  %idxprom212 = sext i32 %139 to i64
  %140 = load i32, i32* %j1, align 4
  %idxprom213 = sext i32 %140 to i64
  %arrayidx214 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom213
  %arrayidx215 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx214, i32 0, i64 %idxprom212
  store i32 %add211, i32* %arrayidx215, align 4
  %arrayidx216 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %141 = load i32, i32* %arrayidx216, align 4
  %arrayidx217 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %142 = load i32, i32* %arrayidx217, align 4
  %sub218 = sub nsw i32 %141, %142
  %143 = load i32, i32* %n2, align 4
  %add219 = add nsw i32 %143, 2
  %idxprom220 = sext i32 %add219 to i64
  %144 = load i32, i32* %j1, align 4
  %idxprom221 = sext i32 %144 to i64
  %arrayidx222 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom221
  %arrayidx223 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx222, i32 0, i64 %idxprom220
  store i32 %sub218, i32* %arrayidx223, align 4
  %arrayidx224 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %145 = load i32, i32* %arrayidx224, align 4
  %mul225 = mul nsw i32 %145, 2
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %146 = load i32, i32* %arrayidx226, align 4
  %add227 = add nsw i32 %mul225, %146
  %147 = load i32, i32* %n2, align 4
  %add228 = add nsw i32 %147, 1
  %idxprom229 = sext i32 %add228 to i64
  %148 = load i32, i32* %j1, align 4
  %idxprom230 = sext i32 %148 to i64
  %arrayidx231 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom230
  %arrayidx232 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx231, i32 0, i64 %idxprom229
  store i32 %add227, i32* %arrayidx232, align 4
  %arrayidx233 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %149 = load i32, i32* %arrayidx233, align 4
  %arrayidx234 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %150 = load i32, i32* %arrayidx234, align 4
  %mul235 = mul nsw i32 %150, 2
  %sub236 = sub nsw i32 %149, %mul235
  %151 = load i32, i32* %n2, align 4
  %add237 = add nsw i32 %151, 3
  %idxprom238 = sext i32 %add237 to i64
  %152 = load i32, i32* %j1, align 4
  %idxprom239 = sext i32 %152 to i64
  %arrayidx240 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom239
  %arrayidx241 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx240, i32 0, i64 %idxprom238
  store i32 %sub236, i32* %arrayidx241, align 4
  br label %for.inc.242

for.inc.242:                                      ; preds = %for.end.208
  %153 = load i32, i32* %i, align 4
  %inc243 = add nsw i32 %153, 1
  store i32 %inc243, i32* %i, align 4
  br label %for.cond.170

for.end.244:                                      ; preds = %for.cond.170
  br label %for.inc.245

for.inc.245:                                      ; preds = %for.end.244
  %154 = load i32, i32* %n1, align 4
  %add246 = add nsw i32 %154, 4
  store i32 %add246, i32* %n1, align 4
  br label %for.cond.92

for.end.247:                                      ; preds = %for.cond.92
  br label %for.inc.248

for.inc.248:                                      ; preds = %for.end.247
  %155 = load i32, i32* %n2, align 4
  %add249 = add nsw i32 %155, 4
  store i32 %add249, i32* %n2, align 4
  br label %for.cond.88

for.end.250:                                      ; preds = %for.cond.88
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7251 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 52
  %arrayidx252 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7251, i32 0, i64 0
  %arrayidx253 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx252, i32 0, i64 0
  %157 = load i32, i32* %arrayidx253, align 4
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  store i32 %157, i32* %arrayidx254, align 4
  %158 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7255 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %158, i32 0, i32 52
  %arrayidx256 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7255, i32 0, i64 4
  %arrayidx257 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx256, i32 0, i64 0
  %159 = load i32, i32* %arrayidx257, align 4
  %arrayidx258 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  store i32 %159, i32* %arrayidx258, align 4
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7259 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 52
  %arrayidx260 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7259, i32 0, i64 0
  %arrayidx261 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx260, i32 0, i64 4
  %161 = load i32, i32* %arrayidx261, align 4
  %arrayidx262 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  store i32 %161, i32* %arrayidx262, align 4
  %162 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7263 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %162, i32 0, i32 52
  %arrayidx264 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7263, i32 0, i64 4
  %arrayidx265 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx264, i32 0, i64 4
  %163 = load i32, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  store i32 %163, i32* %arrayidx266, align 4
  %arrayidx267 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx268 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx267, i32 0, i64 0
  %164 = load i32, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx270 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx269, i32 0, i64 0
  %165 = load i32, i32* %arrayidx270, align 4
  %add271 = add nsw i32 %164, %165
  %arrayidx272 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx273 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx272, i32 0, i64 4
  %166 = load i32, i32* %arrayidx273, align 4
  %add274 = add nsw i32 %add271, %166
  %arrayidx275 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx276 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx275, i32 0, i64 4
  %167 = load i32, i32* %arrayidx276, align 4
  %add277 = add nsw i32 %add274, %167
  %arrayidx278 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 0
  store i32 %add277, i32* %arrayidx278, align 4
  %arrayidx279 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx280 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx279, i32 0, i64 0
  %168 = load i32, i32* %arrayidx280, align 4
  %arrayidx281 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx282 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx281, i32 0, i64 0
  %169 = load i32, i32* %arrayidx282, align 4
  %sub283 = sub nsw i32 %168, %169
  %arrayidx284 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx285 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx284, i32 0, i64 4
  %170 = load i32, i32* %arrayidx285, align 4
  %add286 = add nsw i32 %sub283, %170
  %arrayidx287 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx288 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx287, i32 0, i64 4
  %171 = load i32, i32* %arrayidx288, align 4
  %sub289 = sub nsw i32 %add286, %171
  %arrayidx290 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 1
  store i32 %sub289, i32* %arrayidx290, align 4
  %arrayidx291 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx292 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx291, i32 0, i64 0
  %172 = load i32, i32* %arrayidx292, align 4
  %arrayidx293 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx294 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx293, i32 0, i64 0
  %173 = load i32, i32* %arrayidx294, align 4
  %add295 = add nsw i32 %172, %173
  %arrayidx296 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx297 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx296, i32 0, i64 4
  %174 = load i32, i32* %arrayidx297, align 4
  %sub298 = sub nsw i32 %add295, %174
  %arrayidx299 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx300 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx299, i32 0, i64 4
  %175 = load i32, i32* %arrayidx300, align 4
  %sub301 = sub nsw i32 %sub298, %175
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 2
  store i32 %sub301, i32* %arrayidx302, align 4
  %arrayidx303 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx304 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx303, i32 0, i64 0
  %176 = load i32, i32* %arrayidx304, align 4
  %arrayidx305 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx306 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx305, i32 0, i64 0
  %177 = load i32, i32* %arrayidx306, align 4
  %sub307 = sub nsw i32 %176, %177
  %arrayidx308 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 0
  %arrayidx309 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx308, i32 0, i64 4
  %178 = load i32, i32* %arrayidx309, align 4
  %sub310 = sub nsw i32 %sub307, %178
  %arrayidx311 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 4
  %arrayidx312 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx311, i32 0, i64 4
  %179 = load i32, i32* %arrayidx312, align 4
  %add313 = add nsw i32 %sub310, %179
  %arrayidx314 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 3
  store i32 %add313, i32* %arrayidx314, align 4
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 0, i32* %coeff_ctr, align 4
  br label %for.cond.315

for.cond.315:                                     ; preds = %for.inc.361, %for.end.250
  %180 = load i32, i32* %coeff_ctr, align 4
  %cmp316 = icmp slt i32 %180, 4
  br i1 %cmp316, label %for.body.318, label %for.end.363

for.body.318:                                     ; preds = %for.cond.315
  %181 = load i32, i32* %run, align 4
  %inc319 = add nsw i32 %181, 1
  store i32 %inc319, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %182 = load i32, i32* %coeff_ctr, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom320
  %183 = load i32, i32* %arrayidx321, align 4
  %call = call i32 @iabs(i32 %183)
  %184 = load i32, i32* %qp_rem_sp, align 4
  %idxprom322 = sext i32 %184 to i64
  %arrayidx323 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom322
  %arrayidx324 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx323, i32 0, i64 0
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx324, i32 0, i64 0
  %185 = load i32, i32* %arrayidx325, align 4
  %mul326 = mul nsw i32 %call, %185
  %186 = load i32, i32* %qp_const2, align 4
  %mul327 = mul nsw i32 2, %186
  %add328 = add nsw i32 %mul326, %mul327
  %187 = load i32, i32* %q_bits_sp, align 4
  %add329 = add nsw i32 %187, 1
  %shr = ashr i32 %add328, %add329
  store i32 %shr, i32* %level1, align 4
  %188 = load i32, i32* %coeff_ctr, align 4
  %idxprom330 = sext i32 %188 to i64
  %arrayidx331 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom330
  %189 = load i32, i32* %arrayidx331, align 4
  %190 = load i32, i32* %level1, align 4
  %191 = load i32, i32* %coeff_ctr, align 4
  %idxprom332 = sext i32 %191 to i64
  %arrayidx333 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom332
  %192 = load i32, i32* %arrayidx333, align 4
  %call334 = call i32 @isignab(i32 %190, i32 %192)
  %sub335 = sub nsw i32 %189, %call334
  store i32 %sub335, i32* %c_err, align 4
  %193 = load i32, i32* %c_err, align 4
  %call336 = call i32 @iabs(i32 %193)
  store i32 %call336, i32* %level, align 4
  %194 = load i32, i32* %level, align 4
  %cmp337 = icmp ne i32 %194, 0
  br i1 %cmp337, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.318
  %195 = load i32, i32* %uv.addr, align 4
  %shl339 = shl i32 %195, 2
  %shl340 = shl i32 983040, %shl339
  %conv341 = sext i32 %shl340 to i64
  %196 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, %struct.macroblock* %196, i32 0, i32 13
  %197 = load i64, i64* %cbp_blk, align 8
  %or = or i64 %197, %conv341
  store i64 %or, i64* %cbp_blk, align 8
  %198 = load i32, i32* %cr_cbp.addr, align 4
  %call342 = call i32 @imax(i32 1, i32 %198)
  store i32 %call342, i32* %cr_cbp.addr, align 4
  %199 = load i32, i32* %level, align 4
  %200 = load i32, i32* %c_err, align 4
  %call343 = call i32 @isignab(i32 %199, i32 %200)
  %201 = load i32, i32* %scan_pos, align 4
  %idxprom344 = sext i32 %201 to i64
  %202 = load i32*, i32** %DCLevel, align 8
  %arrayidx345 = getelementptr inbounds i32, i32* %202, i64 %idxprom344
  store i32 %call343, i32* %arrayidx345, align 4
  %203 = load i32, i32* %run, align 4
  %204 = load i32, i32* %scan_pos, align 4
  %idxprom346 = sext i32 %204 to i64
  %205 = load i32*, i32** %DCRun, align 8
  %arrayidx347 = getelementptr inbounds i32, i32* %205, i64 %idxprom346
  store i32 %203, i32* %arrayidx347, align 4
  %206 = load i32, i32* %scan_pos, align 4
  %inc348 = add nsw i32 %206, 1
  store i32 %inc348, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.318
  %207 = load i32, i32* %c_err, align 4
  %208 = load i32, i32* %level1, align 4
  %209 = load i32, i32* %coeff_ctr, align 4
  %idxprom349 = sext i32 %209 to i64
  %arrayidx350 = getelementptr inbounds [4 x i32], [4 x i32]* %mp1, i32 0, i64 %idxprom349
  %210 = load i32, i32* %arrayidx350, align 4
  %call351 = call i32 @isignab(i32 %208, i32 %210)
  %add352 = add nsw i32 %207, %call351
  store i32 %add352, i32* %ilev, align 4
  %211 = load i32, i32* %ilev, align 4
  %212 = load i32, i32* %qp_rem_sp, align 4
  %idxprom353 = sext i32 %212 to i64
  %arrayidx354 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom353
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx354, i32 0, i64 0
  %arrayidx356 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i32 0, i64 0
  %213 = load i32, i32* %arrayidx356, align 4
  %mul357 = mul nsw i32 %211, %213
  %214 = load i32, i32* %qp_per_sp, align 4
  %shl358 = shl i32 %mul357, %214
  %215 = load i32, i32* %coeff_ctr, align 4
  %idxprom359 = sext i32 %215 to i64
  %arrayidx360 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 %idxprom359
  store i32 %shl358, i32* %arrayidx360, align 4
  br label %for.inc.361

for.inc.361:                                      ; preds = %if.end
  %216 = load i32, i32* %coeff_ctr, align 4
  %inc362 = add nsw i32 %216, 1
  store i32 %inc362, i32* %coeff_ctr, align 4
  br label %for.cond.315

for.end.363:                                      ; preds = %for.cond.315
  %217 = load i32, i32* %scan_pos, align 4
  %idxprom364 = sext i32 %217 to i64
  %218 = load i32*, i32** %DCLevel, align 8
  %arrayidx365 = getelementptr inbounds i32, i32* %218, i64 %idxprom364
  store i32 0, i32* %arrayidx365, align 4
  %arrayidx366 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %219 = load i32, i32* %arrayidx366, align 4
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %220 = load i32, i32* %arrayidx367, align 4
  %add368 = add nsw i32 %219, %220
  %arrayidx369 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %221 = load i32, i32* %arrayidx369, align 4
  %add370 = add nsw i32 %add368, %221
  %arrayidx371 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %222 = load i32, i32* %arrayidx371, align 4
  %add372 = add nsw i32 %add370, %222
  %div373 = sdiv i32 %add372, 2
  %223 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7374 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %223, i32 0, i32 52
  %arrayidx375 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7374, i32 0, i64 0
  %arrayidx376 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx375, i32 0, i64 0
  store i32 %div373, i32* %arrayidx376, align 4
  %arrayidx377 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %224 = load i32, i32* %arrayidx377, align 4
  %arrayidx378 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %225 = load i32, i32* %arrayidx378, align 4
  %sub379 = sub nsw i32 %224, %225
  %arrayidx380 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %226 = load i32, i32* %arrayidx380, align 4
  %add381 = add nsw i32 %sub379, %226
  %arrayidx382 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %227 = load i32, i32* %arrayidx382, align 4
  %sub383 = sub nsw i32 %add381, %227
  %div384 = sdiv i32 %sub383, 2
  %228 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7385 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %228, i32 0, i32 52
  %arrayidx386 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7385, i32 0, i64 4
  %arrayidx387 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx386, i32 0, i64 0
  store i32 %div384, i32* %arrayidx387, align 4
  %arrayidx388 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %229 = load i32, i32* %arrayidx388, align 4
  %arrayidx389 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %230 = load i32, i32* %arrayidx389, align 4
  %add390 = add nsw i32 %229, %230
  %arrayidx391 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %231 = load i32, i32* %arrayidx391, align 4
  %sub392 = sub nsw i32 %add390, %231
  %arrayidx393 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %232 = load i32, i32* %arrayidx393, align 4
  %sub394 = sub nsw i32 %sub392, %232
  %div395 = sdiv i32 %sub394, 2
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 52
  %arrayidx397 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7396, i32 0, i64 0
  %arrayidx398 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx397, i32 0, i64 4
  store i32 %div395, i32* %arrayidx398, align 4
  %arrayidx399 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 0
  %234 = load i32, i32* %arrayidx399, align 4
  %arrayidx400 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 1
  %235 = load i32, i32* %arrayidx400, align 4
  %sub401 = sub nsw i32 %234, %235
  %arrayidx402 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 2
  %236 = load i32, i32* %arrayidx402, align 4
  %sub403 = sub nsw i32 %sub401, %236
  %arrayidx404 = getelementptr inbounds [4 x i32], [4 x i32]* %m1, i32 0, i64 3
  %237 = load i32, i32* %arrayidx404, align 4
  %add405 = add nsw i32 %sub403, %237
  %div406 = sdiv i32 %add405, 2
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7407 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 52
  %arrayidx408 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7407, i32 0, i64 4
  %arrayidx409 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx408, i32 0, i64 4
  store i32 %div406, i32* %arrayidx409, align 4
  store i32 0, i32* %coeff_cost, align 4
  store i32 0, i32* %cr_cbp_tmp, align 4
  store i32 0, i32* %n2, align 4
  br label %for.cond.410

for.cond.410:                                     ; preds = %for.inc.554, %for.end.363
  %239 = load i32, i32* %n2, align 4
  %cmp411 = icmp sle i32 %239, 4
  br i1 %cmp411, label %for.body.413, label %for.end.556

for.body.413:                                     ; preds = %for.cond.410
  store i32 0, i32* %n1, align 4
  br label %for.cond.414

for.cond.414:                                     ; preds = %for.inc.551, %for.body.413
  %240 = load i32, i32* %n1, align 4
  %cmp415 = icmp sle i32 %240, 4
  br i1 %cmp415, label %for.body.417, label %for.end.553

for.body.417:                                     ; preds = %for.cond.414
  %241 = load i32, i32* %n2, align 4
  %div418 = sdiv i32 %241, 4
  %mul419 = mul nsw i32 2, %div418
  %242 = load i32, i32* %n1, align 4
  %div420 = sdiv i32 %242, 4
  %add421 = add nsw i32 %mul419, %div420
  store i32 %add421, i32* %b4, align 4
  %243 = load i32, i32* %b4, align 4
  %idxprom422 = sext i32 %243 to i64
  %244 = load i32, i32* %uv.addr, align 4
  %add423 = add nsw i32 %244, 4
  %idxprom424 = sext i32 %add423 to i64
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 53
  %246 = load i32****, i32***** %cofAC, align 8
  %arrayidx425 = getelementptr inbounds i32***, i32**** %246, i64 %idxprom424
  %247 = load i32***, i32**** %arrayidx425, align 8
  %arrayidx426 = getelementptr inbounds i32**, i32*** %247, i64 %idxprom422
  %248 = load i32**, i32*** %arrayidx426, align 8
  %arrayidx427 = getelementptr inbounds i32*, i32** %248, i64 0
  %249 = load i32*, i32** %arrayidx427, align 8
  store i32* %249, i32** %ACLevel, align 8
  %250 = load i32, i32* %b4, align 4
  %idxprom428 = sext i32 %250 to i64
  %251 = load i32, i32* %uv.addr, align 4
  %add429 = add nsw i32 %251, 4
  %idxprom430 = sext i32 %add429 to i64
  %252 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC431 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %252, i32 0, i32 53
  %253 = load i32****, i32***** %cofAC431, align 8
  %arrayidx432 = getelementptr inbounds i32***, i32**** %253, i64 %idxprom430
  %254 = load i32***, i32**** %arrayidx432, align 8
  %arrayidx433 = getelementptr inbounds i32**, i32*** %254, i64 %idxprom428
  %255 = load i32**, i32*** %arrayidx433, align 8
  %arrayidx434 = getelementptr inbounds i32*, i32** %255, i64 1
  %256 = load i32*, i32** %arrayidx434, align 8
  store i32* %256, i32** %ACRun, align 8
  store i32 -1, i32* %run, align 4
  store i32 0, i32* %scan_pos, align 4
  store i32 1, i32* %coeff_ctr, align 4
  br label %for.cond.435

for.cond.435:                                     ; preds = %for.inc.546, %for.body.417
  %257 = load i32, i32* %coeff_ctr, align 4
  %cmp436 = icmp slt i32 %257, 16
  br i1 %cmp436, label %for.body.438, label %for.end.548

for.body.438:                                     ; preds = %for.cond.435
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_picture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 110
  %259 = load i32, i32* %field_picture, align 4
  %tobool = icmp ne i32 %259, 0
  br i1 %tobool, label %if.then.441, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.438
  %260 = load i32, i32* @mb_adaptive, align 4
  %tobool439 = icmp ne i32 %260, 0
  br i1 %tobool439, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_mode = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 90
  %262 = load i32, i32* %field_mode, align 4
  %tobool440 = icmp ne i32 %262, 0
  br i1 %tobool440, label %if.then.441, label %if.else

if.then.441:                                      ; preds = %land.lhs.true, %for.body.438
  %263 = load i32, i32* %coeff_ctr, align 4
  %idxprom442 = sext i32 %263 to i64
  %arrayidx443 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom442
  %arrayidx444 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx443, i32 0, i64 0
  %264 = load i8, i8* %arrayidx444, align 1
  %conv445 = zext i8 %264 to i32
  store i32 %conv445, i32* %j, align 4
  %265 = load i32, i32* %coeff_ctr, align 4
  %idxprom446 = sext i32 %265 to i64
  %arrayidx447 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @FIELD_SCAN, i32 0, i64 %idxprom446
  %arrayidx448 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx447, i32 0, i64 1
  %266 = load i8, i8* %arrayidx448, align 1
  %conv449 = zext i8 %266 to i32
  store i32 %conv449, i32* %i, align 4
  br label %if.end.458

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %267 = load i32, i32* %coeff_ctr, align 4
  %idxprom450 = sext i32 %267 to i64
  %arrayidx451 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom450
  %arrayidx452 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx451, i32 0, i64 0
  %268 = load i8, i8* %arrayidx452, align 1
  %conv453 = zext i8 %268 to i32
  store i32 %conv453, i32* %j, align 4
  %269 = load i32, i32* %coeff_ctr, align 4
  %idxprom454 = sext i32 %269 to i64
  %arrayidx455 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @SNGL_SCAN, i32 0, i64 %idxprom454
  %arrayidx456 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx455, i32 0, i64 1
  %270 = load i8, i8* %arrayidx456, align 1
  %conv457 = zext i8 %270 to i32
  store i32 %conv457, i32* %i, align 4
  br label %if.end.458

if.end.458:                                       ; preds = %if.else, %if.then.441
  %271 = load i32, i32* %run, align 4
  %inc459 = add nsw i32 %271, 1
  store i32 %inc459, i32* %run, align 4
  store i32 0, i32* %ilev, align 4
  %272 = load i32, i32* %n2, align 4
  %273 = load i32, i32* %i, align 4
  %add460 = add nsw i32 %272, %273
  %idxprom461 = sext i32 %add460 to i64
  %274 = load i32, i32* %n1, align 4
  %275 = load i32, i32* %j, align 4
  %add462 = add nsw i32 %274, %275
  %idxprom463 = sext i32 %add462 to i64
  %arrayidx464 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom463
  %arrayidx465 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx464, i32 0, i64 %idxprom461
  %276 = load i32, i32* %arrayidx465, align 4
  %call466 = call i32 @iabs(i32 %276)
  %277 = load i32, i32* %j, align 4
  %idxprom467 = sext i32 %277 to i64
  %278 = load i32, i32* %i, align 4
  %idxprom468 = sext i32 %278 to i64
  %279 = load i32, i32* %qp_rem_sp, align 4
  %idxprom469 = sext i32 %279 to i64
  %arrayidx470 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i32 0, i64 %idxprom469
  %arrayidx471 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx470, i32 0, i64 %idxprom468
  %arrayidx472 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx471, i32 0, i64 %idxprom467
  %280 = load i32, i32* %arrayidx472, align 4
  %mul473 = mul nsw i32 %call466, %280
  %281 = load i32, i32* %qp_const2, align 4
  %add474 = add nsw i32 %mul473, %281
  %282 = load i32, i32* %q_bits_sp, align 4
  %shr475 = ashr i32 %add474, %282
  store i32 %shr475, i32* %level1, align 4
  %283 = load i32, i32* %n2, align 4
  %284 = load i32, i32* %j, align 4
  %add476 = add nsw i32 %283, %284
  %idxprom477 = sext i32 %add476 to i64
  %285 = load i32, i32* %n1, align 4
  %286 = load i32, i32* %i, align 4
  %add478 = add nsw i32 %285, %286
  %idxprom479 = sext i32 %add478 to i64
  %287 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7480 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %287, i32 0, i32 52
  %arrayidx481 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7480, i32 0, i64 %idxprom479
  %arrayidx482 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx481, i32 0, i64 %idxprom477
  %288 = load i32, i32* %arrayidx482, align 4
  %289 = load i32, i32* %level1, align 4
  %290 = load i32, i32* %n2, align 4
  %291 = load i32, i32* %i, align 4
  %add483 = add nsw i32 %290, %291
  %idxprom484 = sext i32 %add483 to i64
  %292 = load i32, i32* %n1, align 4
  %293 = load i32, i32* %j, align 4
  %add485 = add nsw i32 %292, %293
  %idxprom486 = sext i32 %add485 to i64
  %arrayidx487 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom486
  %arrayidx488 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx487, i32 0, i64 %idxprom484
  %294 = load i32, i32* %arrayidx488, align 4
  %call489 = call i32 @isignab(i32 %289, i32 %294)
  %sub490 = sub nsw i32 %288, %call489
  store i32 %sub490, i32* %c_err, align 4
  %295 = load i32, i32* %c_err, align 4
  %call491 = call i32 @iabs(i32 %295)
  store i32 %call491, i32* %level, align 4
  %296 = load i32, i32* %level, align 4
  %cmp492 = icmp ne i32 %296, 0
  br i1 %cmp492, label %if.then.494, label %if.end.522

if.then.494:                                      ; preds = %if.end.458
  %297 = load i32, i32* %uv.addr, align 4
  %shl495 = shl i32 %297, 2
  %add496 = add nsw i32 16, %shl495
  %298 = load i32, i32* %n2, align 4
  %shr497 = ashr i32 %298, 1
  %299 = load i32, i32* %n1, align 4
  %shr498 = ashr i32 %299, 2
  %add499 = add nsw i32 %shr497, %shr498
  %add500 = add nsw i32 %add496, %add499
  %sh_prom = zext i32 %add500 to i64
  %shl501 = shl i64 1, %sh_prom
  %300 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk502 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %300, i32 0, i32 13
  %301 = load i64, i64* %cbp_blk502, align 8
  %or503 = or i64 %301, %shl501
  store i64 %or503, i64* %cbp_blk502, align 8
  %302 = load i32, i32* %level, align 4
  %cmp504 = icmp sgt i32 %302, 1
  br i1 %cmp504, label %if.then.506, label %if.else.508

if.then.506:                                      ; preds = %if.then.494
  %303 = load i32, i32* %coeff_cost, align 4
  %add507 = add nsw i32 %303, 999999
  store i32 %add507, i32* %coeff_cost, align 4
  br label %if.end.515

if.else.508:                                      ; preds = %if.then.494
  %304 = load i32, i32* %run, align 4
  %idxprom509 = sext i32 %304 to i64
  %305 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %disthres = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %305, i32 0, i32 116
  %306 = load i32, i32* %disthres, align 4
  %idxprom510 = sext i32 %306 to i64
  %arrayidx511 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @COEFF_COST, i32 0, i64 %idxprom510
  %arrayidx512 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx511, i32 0, i64 %idxprom509
  %307 = load i8, i8* %arrayidx512, align 1
  %conv513 = zext i8 %307 to i32
  %308 = load i32, i32* %coeff_cost, align 4
  %add514 = add nsw i32 %308, %conv513
  store i32 %add514, i32* %coeff_cost, align 4
  br label %if.end.515

if.end.515:                                       ; preds = %if.else.508, %if.then.506
  store i32 2, i32* %cr_cbp_tmp, align 4
  %309 = load i32, i32* %level, align 4
  %310 = load i32, i32* %c_err, align 4
  %call516 = call i32 @isignab(i32 %309, i32 %310)
  %311 = load i32, i32* %scan_pos, align 4
  %idxprom517 = sext i32 %311 to i64
  %312 = load i32*, i32** %ACLevel, align 8
  %arrayidx518 = getelementptr inbounds i32, i32* %312, i64 %idxprom517
  store i32 %call516, i32* %arrayidx518, align 4
  %313 = load i32, i32* %run, align 4
  %314 = load i32, i32* %scan_pos, align 4
  %idxprom519 = sext i32 %314 to i64
  %315 = load i32*, i32** %ACRun, align 8
  %arrayidx520 = getelementptr inbounds i32, i32* %315, i64 %idxprom519
  store i32 %313, i32* %arrayidx520, align 4
  %316 = load i32, i32* %scan_pos, align 4
  %inc521 = add nsw i32 %316, 1
  store i32 %inc521, i32* %scan_pos, align 4
  store i32 -1, i32* %run, align 4
  br label %if.end.522

if.end.522:                                       ; preds = %if.end.515, %if.end.458
  %317 = load i32, i32* %c_err, align 4
  %318 = load i32, i32* %level1, align 4
  %319 = load i32, i32* %n2, align 4
  %320 = load i32, i32* %i, align 4
  %add523 = add nsw i32 %319, %320
  %idxprom524 = sext i32 %add523 to i64
  %321 = load i32, i32* %n1, align 4
  %322 = load i32, i32* %j, align 4
  %add525 = add nsw i32 %321, %322
  %idxprom526 = sext i32 %add525 to i64
  %arrayidx527 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %predicted_chroma_block, i32 0, i64 %idxprom526
  %arrayidx528 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx527, i32 0, i64 %idxprom524
  %323 = load i32, i32* %arrayidx528, align 4
  %call529 = call i32 @isignab(i32 %318, i32 %323)
  %add530 = add nsw i32 %317, %call529
  store i32 %add530, i32* %ilev, align 4
  %324 = load i32, i32* %ilev, align 4
  %325 = load i32, i32* %j, align 4
  %idxprom531 = sext i32 %325 to i64
  %326 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %326 to i64
  %327 = load i32, i32* %qp_rem_sp, align 4
  %idxprom533 = sext i32 %327 to i64
  %arrayidx534 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i32 0, i64 %idxprom533
  %arrayidx535 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx534, i32 0, i64 %idxprom532
  %arrayidx536 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx535, i32 0, i64 %idxprom531
  %328 = load i32, i32* %arrayidx536, align 4
  %mul537 = mul nsw i32 %324, %328
  %329 = load i32, i32* %qp_per_sp, align 4
  %shl538 = shl i32 %mul537, %329
  %330 = load i32, i32* %n2, align 4
  %331 = load i32, i32* %j, align 4
  %add539 = add nsw i32 %330, %331
  %idxprom540 = sext i32 %add539 to i64
  %332 = load i32, i32* %n1, align 4
  %333 = load i32, i32* %i, align 4
  %add541 = add nsw i32 %332, %333
  %idxprom542 = sext i32 %add541 to i64
  %334 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7543 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %334, i32 0, i32 52
  %arrayidx544 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7543, i32 0, i64 %idxprom542
  %arrayidx545 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx544, i32 0, i64 %idxprom540
  store i32 %shl538, i32* %arrayidx545, align 4
  br label %for.inc.546

for.inc.546:                                      ; preds = %if.end.522
  %335 = load i32, i32* %coeff_ctr, align 4
  %inc547 = add nsw i32 %335, 1
  store i32 %inc547, i32* %coeff_ctr, align 4
  br label %for.cond.435

for.end.548:                                      ; preds = %for.cond.435
  %336 = load i32, i32* %scan_pos, align 4
  %idxprom549 = sext i32 %336 to i64
  %337 = load i32*, i32** %ACLevel, align 8
  %arrayidx550 = getelementptr inbounds i32, i32* %337, i64 %idxprom549
  store i32 0, i32* %arrayidx550, align 4
  br label %for.inc.551

for.inc.551:                                      ; preds = %for.end.548
  %338 = load i32, i32* %n1, align 4
  %add552 = add nsw i32 %338, 4
  store i32 %add552, i32* %n1, align 4
  br label %for.cond.414

for.end.553:                                      ; preds = %for.cond.414
  br label %for.inc.554

for.inc.554:                                      ; preds = %for.end.553
  %339 = load i32, i32* %n2, align 4
  %add555 = add nsw i32 %339, 4
  store i32 %add555, i32* %n2, align 4
  br label %for.cond.410

for.end.556:                                      ; preds = %for.cond.410
  %340 = load i32, i32* %cr_cbp_tmp, align 4
  %cmp557 = icmp eq i32 %340, 2
  br i1 %cmp557, label %if.then.559, label %if.end.560

if.then.559:                                      ; preds = %for.end.556
  store i32 2, i32* %cr_cbp.addr, align 4
  br label %if.end.560

if.end.560:                                       ; preds = %if.then.559, %for.end.556
  store i32 0, i32* %n2, align 4
  br label %for.cond.561

for.cond.561:                                     ; preds = %for.inc.724, %if.end.560
  %341 = load i32, i32* %n2, align 4
  %cmp562 = icmp sle i32 %341, 4
  br i1 %cmp562, label %for.body.564, label %for.end.726

for.body.564:                                     ; preds = %for.cond.561
  store i32 0, i32* %n1, align 4
  br label %for.cond.565

for.cond.565:                                     ; preds = %for.inc.721, %for.body.564
  %342 = load i32, i32* %n1, align 4
  %cmp566 = icmp sle i32 %342, 4
  br i1 %cmp566, label %for.body.568, label %for.end.723

for.body.568:                                     ; preds = %for.cond.565
  store i32 0, i32* %j, align 4
  br label %for.cond.569

for.cond.569:                                     ; preds = %for.inc.639, %for.body.568
  %343 = load i32, i32* %j, align 4
  %cmp570 = icmp slt i32 %343, 4
  br i1 %cmp570, label %for.body.572, label %for.end.641

for.body.572:                                     ; preds = %for.cond.569
  store i32 0, i32* %i, align 4
  br label %for.cond.573

for.cond.573:                                     ; preds = %for.inc.586, %for.body.572
  %344 = load i32, i32* %i, align 4
  %cmp574 = icmp slt i32 %344, 4
  br i1 %cmp574, label %for.body.576, label %for.end.588

for.body.576:                                     ; preds = %for.cond.573
  %345 = load i32, i32* %n2, align 4
  %346 = load i32, i32* %j, align 4
  %add577 = add nsw i32 %345, %346
  %idxprom578 = sext i32 %add577 to i64
  %347 = load i32, i32* %n1, align 4
  %348 = load i32, i32* %i, align 4
  %add579 = add nsw i32 %347, %348
  %idxprom580 = sext i32 %add579 to i64
  %349 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7581 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %349, i32 0, i32 52
  %arrayidx582 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7581, i32 0, i64 %idxprom580
  %arrayidx583 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx582, i32 0, i64 %idxprom578
  %350 = load i32, i32* %arrayidx583, align 4
  %351 = load i32, i32* %i, align 4
  %idxprom584 = sext i32 %351 to i64
  %arrayidx585 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom584
  store i32 %350, i32* %arrayidx585, align 4
  br label %for.inc.586

for.inc.586:                                      ; preds = %for.body.576
  %352 = load i32, i32* %i, align 4
  %inc587 = add nsw i32 %352, 1
  store i32 %inc587, i32* %i, align 4
  br label %for.cond.573

for.end.588:                                      ; preds = %for.cond.573
  %arrayidx589 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %353 = load i32, i32* %arrayidx589, align 4
  %arrayidx590 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %354 = load i32, i32* %arrayidx590, align 4
  %add591 = add nsw i32 %353, %354
  %arrayidx592 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add591, i32* %arrayidx592, align 4
  %arrayidx593 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %355 = load i32, i32* %arrayidx593, align 4
  %arrayidx594 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %356 = load i32, i32* %arrayidx594, align 4
  %sub595 = sub nsw i32 %355, %356
  %arrayidx596 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub595, i32* %arrayidx596, align 4
  %arrayidx597 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %357 = load i32, i32* %arrayidx597, align 4
  %shr598 = ashr i32 %357, 1
  %arrayidx599 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %358 = load i32, i32* %arrayidx599, align 4
  %sub600 = sub nsw i32 %shr598, %358
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub600, i32* %arrayidx601, align 4
  %arrayidx602 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %359 = load i32, i32* %arrayidx602, align 4
  %arrayidx603 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %360 = load i32, i32* %arrayidx603, align 4
  %shr604 = ashr i32 %360, 1
  %add605 = add nsw i32 %359, %shr604
  %arrayidx606 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add605, i32* %arrayidx606, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.607

for.cond.607:                                     ; preds = %for.inc.636, %for.end.588
  %361 = load i32, i32* %i, align 4
  %cmp608 = icmp slt i32 %361, 2
  br i1 %cmp608, label %for.body.610, label %for.end.638

for.body.610:                                     ; preds = %for.cond.607
  %362 = load i32, i32* %i, align 4
  %sub611 = sub nsw i32 3, %362
  store i32 %sub611, i32* %i1, align 4
  %363 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %363 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom612
  %364 = load i32, i32* %arrayidx613, align 4
  %365 = load i32, i32* %i1, align 4
  %idxprom614 = sext i32 %365 to i64
  %arrayidx615 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom614
  %366 = load i32, i32* %arrayidx615, align 4
  %add616 = add nsw i32 %364, %366
  %367 = load i32, i32* %n2, align 4
  %368 = load i32, i32* %j, align 4
  %add617 = add nsw i32 %367, %368
  %idxprom618 = sext i32 %add617 to i64
  %369 = load i32, i32* %n1, align 4
  %370 = load i32, i32* %i, align 4
  %add619 = add nsw i32 %369, %370
  %idxprom620 = sext i32 %add619 to i64
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7621 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 52
  %arrayidx622 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7621, i32 0, i64 %idxprom620
  %arrayidx623 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx622, i32 0, i64 %idxprom618
  store i32 %add616, i32* %arrayidx623, align 4
  %372 = load i32, i32* %i, align 4
  %idxprom624 = sext i32 %372 to i64
  %arrayidx625 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom624
  %373 = load i32, i32* %arrayidx625, align 4
  %374 = load i32, i32* %i1, align 4
  %idxprom626 = sext i32 %374 to i64
  %arrayidx627 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom626
  %375 = load i32, i32* %arrayidx627, align 4
  %sub628 = sub nsw i32 %373, %375
  %376 = load i32, i32* %n2, align 4
  %377 = load i32, i32* %j, align 4
  %add629 = add nsw i32 %376, %377
  %idxprom630 = sext i32 %add629 to i64
  %378 = load i32, i32* %n1, align 4
  %379 = load i32, i32* %i1, align 4
  %add631 = add nsw i32 %378, %379
  %idxprom632 = sext i32 %add631 to i64
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7633 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 52
  %arrayidx634 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7633, i32 0, i64 %idxprom632
  %arrayidx635 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx634, i32 0, i64 %idxprom630
  store i32 %sub628, i32* %arrayidx635, align 4
  br label %for.inc.636

for.inc.636:                                      ; preds = %for.body.610
  %381 = load i32, i32* %i, align 4
  %inc637 = add nsw i32 %381, 1
  store i32 %inc637, i32* %i, align 4
  br label %for.cond.607

for.end.638:                                      ; preds = %for.cond.607
  br label %for.inc.639

for.inc.639:                                      ; preds = %for.end.638
  %382 = load i32, i32* %j, align 4
  %inc640 = add nsw i32 %382, 1
  store i32 %inc640, i32* %j, align 4
  br label %for.cond.569

for.end.641:                                      ; preds = %for.cond.569
  store i32 0, i32* %i, align 4
  br label %for.cond.642

for.cond.642:                                     ; preds = %for.inc.718, %for.end.641
  %383 = load i32, i32* %i, align 4
  %cmp643 = icmp slt i32 %383, 4
  br i1 %cmp643, label %for.body.645, label %for.end.720

for.body.645:                                     ; preds = %for.cond.642
  store i32 0, i32* %j, align 4
  br label %for.cond.646

for.cond.646:                                     ; preds = %for.inc.659, %for.body.645
  %384 = load i32, i32* %j, align 4
  %cmp647 = icmp slt i32 %384, 4
  br i1 %cmp647, label %for.body.649, label %for.end.661

for.body.649:                                     ; preds = %for.cond.646
  %385 = load i32, i32* %n2, align 4
  %386 = load i32, i32* %j, align 4
  %add650 = add nsw i32 %385, %386
  %idxprom651 = sext i32 %add650 to i64
  %387 = load i32, i32* %n1, align 4
  %388 = load i32, i32* %i, align 4
  %add652 = add nsw i32 %387, %388
  %idxprom653 = sext i32 %add652 to i64
  %389 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %389, i32 0, i32 52
  %arrayidx655 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7654, i32 0, i64 %idxprom653
  %arrayidx656 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx655, i32 0, i64 %idxprom651
  %390 = load i32, i32* %arrayidx656, align 4
  %391 = load i32, i32* %j, align 4
  %idxprom657 = sext i32 %391 to i64
  %arrayidx658 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 %idxprom657
  store i32 %390, i32* %arrayidx658, align 4
  br label %for.inc.659

for.inc.659:                                      ; preds = %for.body.649
  %392 = load i32, i32* %j, align 4
  %inc660 = add nsw i32 %392, 1
  store i32 %inc660, i32* %j, align 4
  br label %for.cond.646

for.end.661:                                      ; preds = %for.cond.646
  %arrayidx662 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %393 = load i32, i32* %arrayidx662, align 4
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %394 = load i32, i32* %arrayidx663, align 4
  %add664 = add nsw i32 %393, %394
  %arrayidx665 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 0
  store i32 %add664, i32* %arrayidx665, align 4
  %arrayidx666 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 0
  %395 = load i32, i32* %arrayidx666, align 4
  %arrayidx667 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 2
  %396 = load i32, i32* %arrayidx667, align 4
  %sub668 = sub nsw i32 %395, %396
  %arrayidx669 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 1
  store i32 %sub668, i32* %arrayidx669, align 4
  %arrayidx670 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %397 = load i32, i32* %arrayidx670, align 4
  %shr671 = ashr i32 %397, 1
  %arrayidx672 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %398 = load i32, i32* %arrayidx672, align 4
  %sub673 = sub nsw i32 %shr671, %398
  %arrayidx674 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 2
  store i32 %sub673, i32* %arrayidx674, align 4
  %arrayidx675 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 1
  %399 = load i32, i32* %arrayidx675, align 4
  %arrayidx676 = getelementptr inbounds [4 x i32], [4 x i32]* %m5, i32 0, i64 3
  %400 = load i32, i32* %arrayidx676, align 4
  %shr677 = ashr i32 %400, 1
  %add678 = add nsw i32 %399, %shr677
  %arrayidx679 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 3
  store i32 %add678, i32* %arrayidx679, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.680

for.cond.680:                                     ; preds = %for.inc.715, %for.end.661
  %401 = load i32, i32* %j, align 4
  %cmp681 = icmp slt i32 %401, 2
  br i1 %cmp681, label %for.body.683, label %for.end.717

for.body.683:                                     ; preds = %for.cond.680
  %402 = load i32, i32* %j, align 4
  %sub684 = sub nsw i32 3, %402
  store i32 %sub684, i32* %j2, align 4
  %403 = load i32, i32* %j, align 4
  %idxprom685 = sext i32 %403 to i64
  %arrayidx686 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom685
  %404 = load i32, i32* %arrayidx686, align 4
  %405 = load i32, i32* %j2, align 4
  %idxprom687 = sext i32 %405 to i64
  %arrayidx688 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom687
  %406 = load i32, i32* %arrayidx688, align 4
  %add689 = add nsw i32 %404, %406
  %add690 = add nsw i32 %add689, 32
  %shr691 = ashr i32 %add690, 6
  %call692 = call i32 @iClip3(i32 0, i32 255, i32 %shr691)
  %407 = load i32, i32* %n2, align 4
  %408 = load i32, i32* %j, align 4
  %add693 = add nsw i32 %407, %408
  %idxprom694 = sext i32 %add693 to i64
  %409 = load i32, i32* %n1, align 4
  %410 = load i32, i32* %i, align 4
  %add695 = add nsw i32 %409, %410
  %idxprom696 = sext i32 %add695 to i64
  %411 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7697 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %411, i32 0, i32 52
  %arrayidx698 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7697, i32 0, i64 %idxprom696
  %arrayidx699 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx698, i32 0, i64 %idxprom694
  store i32 %call692, i32* %arrayidx699, align 4
  %412 = load i32, i32* %j, align 4
  %idxprom700 = sext i32 %412 to i64
  %arrayidx701 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom700
  %413 = load i32, i32* %arrayidx701, align 4
  %414 = load i32, i32* %j2, align 4
  %idxprom702 = sext i32 %414 to i64
  %arrayidx703 = getelementptr inbounds [4 x i32], [4 x i32]* %m6, i32 0, i64 %idxprom702
  %415 = load i32, i32* %arrayidx703, align 4
  %sub704 = sub nsw i32 %413, %415
  %add705 = add nsw i32 %sub704, 32
  %shr706 = ashr i32 %add705, 6
  %call707 = call i32 @iClip3(i32 0, i32 255, i32 %shr706)
  %416 = load i32, i32* %n2, align 4
  %417 = load i32, i32* %j2, align 4
  %add708 = add nsw i32 %416, %417
  %idxprom709 = sext i32 %add708 to i64
  %418 = load i32, i32* %n1, align 4
  %419 = load i32, i32* %i, align 4
  %add710 = add nsw i32 %418, %419
  %idxprom711 = sext i32 %add710 to i64
  %420 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7712 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %420, i32 0, i32 52
  %arrayidx713 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7712, i32 0, i64 %idxprom711
  %arrayidx714 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx713, i32 0, i64 %idxprom709
  store i32 %call707, i32* %arrayidx714, align 4
  br label %for.inc.715

for.inc.715:                                      ; preds = %for.body.683
  %421 = load i32, i32* %j, align 4
  %inc716 = add nsw i32 %421, 1
  store i32 %inc716, i32* %j, align 4
  br label %for.cond.680

for.end.717:                                      ; preds = %for.cond.680
  br label %for.inc.718

for.inc.718:                                      ; preds = %for.end.717
  %422 = load i32, i32* %i, align 4
  %inc719 = add nsw i32 %422, 1
  store i32 %inc719, i32* %i, align 4
  br label %for.cond.642

for.end.720:                                      ; preds = %for.cond.642
  br label %for.inc.721

for.inc.721:                                      ; preds = %for.end.720
  %423 = load i32, i32* %n1, align 4
  %add722 = add nsw i32 %423, 4
  store i32 %add722, i32* %n1, align 4
  br label %for.cond.565

for.end.723:                                      ; preds = %for.cond.565
  br label %for.inc.724

for.inc.724:                                      ; preds = %for.end.723
  %424 = load i32, i32* %n2, align 4
  %add725 = add nsw i32 %424, 4
  store i32 %add725, i32* %n2, align 4
  br label %for.cond.561

for.end.726:                                      ; preds = %for.cond.561
  store i32 0, i32* %j, align 4
  br label %for.cond.727

for.cond.727:                                     ; preds = %for.inc.813, %for.end.726
  %425 = load i32, i32* %j, align 4
  %cmp728 = icmp slt i32 %425, 4
  br i1 %cmp728, label %for.body.730, label %for.end.815

for.body.730:                                     ; preds = %for.cond.727
  store i32 0, i32* %i, align 4
  br label %for.cond.731

for.cond.731:                                     ; preds = %for.inc.810, %for.body.730
  %426 = load i32, i32* %i, align 4
  %cmp732 = icmp slt i32 %426, 4
  br i1 %cmp732, label %for.body.734, label %for.end.812

for.body.734:                                     ; preds = %for.cond.731
  %427 = load i32, i32* %j, align 4
  %idxprom735 = sext i32 %427 to i64
  %428 = load i32, i32* %i, align 4
  %idxprom736 = sext i32 %428 to i64
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7737 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 52
  %arrayidx738 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7737, i32 0, i64 %idxprom736
  %arrayidx739 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx738, i32 0, i64 %idxprom735
  %430 = load i32, i32* %arrayidx739, align 4
  %conv740 = trunc i32 %430 to i16
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x741 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 41
  %432 = load i32, i32* %pix_c_x741, align 4
  %433 = load i32, i32* %j, align 4
  %add742 = add nsw i32 %432, %433
  %idxprom743 = sext i32 %add742 to i64
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y744 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 42
  %435 = load i32, i32* %pix_c_y744, align 4
  %436 = load i32, i32* %i, align 4
  %add745 = add nsw i32 %435, %436
  %idxprom746 = sext i32 %add745 to i64
  %437 = load i32, i32* %uv.addr, align 4
  %idxprom747 = sext i32 %437 to i64
  %438 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %438, i32 0, i32 33
  %439 = load i16***, i16**** %imgUV, align 8
  %arrayidx748 = getelementptr inbounds i16**, i16*** %439, i64 %idxprom747
  %440 = load i16**, i16*** %arrayidx748, align 8
  %arrayidx749 = getelementptr inbounds i16*, i16** %440, i64 %idxprom746
  %441 = load i16*, i16** %arrayidx749, align 8
  %arrayidx750 = getelementptr inbounds i16, i16* %441, i64 %idxprom743
  store i16 %conv740, i16* %arrayidx750, align 2
  %442 = load i32, i32* %j, align 4
  %idxprom751 = sext i32 %442 to i64
  %443 = load i32, i32* %i, align 4
  %add752 = add nsw i32 %443, 4
  %idxprom753 = sext i32 %add752 to i64
  %444 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7754 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %444, i32 0, i32 52
  %arrayidx755 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7754, i32 0, i64 %idxprom753
  %arrayidx756 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx755, i32 0, i64 %idxprom751
  %445 = load i32, i32* %arrayidx756, align 4
  %conv757 = trunc i32 %445 to i16
  %446 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x758 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %446, i32 0, i32 41
  %447 = load i32, i32* %pix_c_x758, align 4
  %448 = load i32, i32* %j, align 4
  %add759 = add nsw i32 %447, %448
  %add760 = add nsw i32 %add759, 4
  %idxprom761 = sext i32 %add760 to i64
  %449 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y762 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %449, i32 0, i32 42
  %450 = load i32, i32* %pix_c_y762, align 4
  %451 = load i32, i32* %i, align 4
  %add763 = add nsw i32 %450, %451
  %idxprom764 = sext i32 %add763 to i64
  %452 = load i32, i32* %uv.addr, align 4
  %idxprom765 = sext i32 %452 to i64
  %453 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV766 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %453, i32 0, i32 33
  %454 = load i16***, i16**** %imgUV766, align 8
  %arrayidx767 = getelementptr inbounds i16**, i16*** %454, i64 %idxprom765
  %455 = load i16**, i16*** %arrayidx767, align 8
  %arrayidx768 = getelementptr inbounds i16*, i16** %455, i64 %idxprom764
  %456 = load i16*, i16** %arrayidx768, align 8
  %arrayidx769 = getelementptr inbounds i16, i16* %456, i64 %idxprom761
  store i16 %conv757, i16* %arrayidx769, align 2
  %457 = load i32, i32* %j, align 4
  %add770 = add nsw i32 %457, 4
  %idxprom771 = sext i32 %add770 to i64
  %458 = load i32, i32* %i, align 4
  %idxprom772 = sext i32 %458 to i64
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7773 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 52
  %arrayidx774 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7773, i32 0, i64 %idxprom772
  %arrayidx775 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx774, i32 0, i64 %idxprom771
  %460 = load i32, i32* %arrayidx775, align 4
  %conv776 = trunc i32 %460 to i16
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x777 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 41
  %462 = load i32, i32* %pix_c_x777, align 4
  %463 = load i32, i32* %j, align 4
  %add778 = add nsw i32 %462, %463
  %idxprom779 = sext i32 %add778 to i64
  %464 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y780 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %464, i32 0, i32 42
  %465 = load i32, i32* %pix_c_y780, align 4
  %466 = load i32, i32* %i, align 4
  %add781 = add nsw i32 %465, %466
  %add782 = add nsw i32 %add781, 4
  %idxprom783 = sext i32 %add782 to i64
  %467 = load i32, i32* %uv.addr, align 4
  %idxprom784 = sext i32 %467 to i64
  %468 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV785 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %468, i32 0, i32 33
  %469 = load i16***, i16**** %imgUV785, align 8
  %arrayidx786 = getelementptr inbounds i16**, i16*** %469, i64 %idxprom784
  %470 = load i16**, i16*** %arrayidx786, align 8
  %arrayidx787 = getelementptr inbounds i16*, i16** %470, i64 %idxprom783
  %471 = load i16*, i16** %arrayidx787, align 8
  %arrayidx788 = getelementptr inbounds i16, i16* %471, i64 %idxprom779
  store i16 %conv776, i16* %arrayidx788, align 2
  %472 = load i32, i32* %j, align 4
  %add789 = add nsw i32 %472, 4
  %idxprom790 = sext i32 %add789 to i64
  %473 = load i32, i32* %i, align 4
  %add791 = add nsw i32 %473, 4
  %idxprom792 = sext i32 %add791 to i64
  %474 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7793 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %474, i32 0, i32 52
  %arrayidx794 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7793, i32 0, i64 %idxprom792
  %arrayidx795 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx794, i32 0, i64 %idxprom790
  %475 = load i32, i32* %arrayidx795, align 4
  %conv796 = trunc i32 %475 to i16
  %476 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x797 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %476, i32 0, i32 41
  %477 = load i32, i32* %pix_c_x797, align 4
  %478 = load i32, i32* %j, align 4
  %add798 = add nsw i32 %477, %478
  %add799 = add nsw i32 %add798, 4
  %idxprom800 = sext i32 %add799 to i64
  %479 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y801 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %479, i32 0, i32 42
  %480 = load i32, i32* %pix_c_y801, align 4
  %481 = load i32, i32* %i, align 4
  %add802 = add nsw i32 %480, %481
  %add803 = add nsw i32 %add802, 4
  %idxprom804 = sext i32 %add803 to i64
  %482 = load i32, i32* %uv.addr, align 4
  %idxprom805 = sext i32 %482 to i64
  %483 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV806 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %483, i32 0, i32 33
  %484 = load i16***, i16**** %imgUV806, align 8
  %arrayidx807 = getelementptr inbounds i16**, i16*** %484, i64 %idxprom805
  %485 = load i16**, i16*** %arrayidx807, align 8
  %arrayidx808 = getelementptr inbounds i16*, i16** %485, i64 %idxprom804
  %486 = load i16*, i16** %arrayidx808, align 8
  %arrayidx809 = getelementptr inbounds i16, i16* %486, i64 %idxprom800
  store i16 %conv796, i16* %arrayidx809, align 2
  br label %for.inc.810

for.inc.810:                                      ; preds = %for.body.734
  %487 = load i32, i32* %i, align 4
  %inc811 = add nsw i32 %487, 1
  store i32 %inc811, i32* %i, align 4
  br label %for.cond.731

for.end.812:                                      ; preds = %for.cond.731
  br label %for.inc.813

for.inc.813:                                      ; preds = %for.end.812
  %488 = load i32, i32* %j, align 4
  %inc814 = add nsw i32 %488, 1
  store i32 %inc814, i32* %j, align 4
  br label %for.cond.727

for.end.815:                                      ; preds = %for.cond.727
  %489 = load i32, i32* %cr_cbp.addr, align 4
  ret i32 %489
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @imin(i32 %a, i32 %b) #1 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load i32, i32* %b.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
