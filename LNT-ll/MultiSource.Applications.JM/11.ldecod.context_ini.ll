; ModuleID = './MultiSource.Applications.JM/11.ldecod.context_ini.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], [6 x [16 x i32]], [2 x [64 x i32]], [6 x i32], [2 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], [6 x [16 x i32]], [2 x [64 x i32]], [6 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.img_par = type { i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x [16 x i16]], [6 x [32 x i32]], [16 x [16 x i32]], [4 x [12 x [4 x [4 x i32]]]], [16 x i32], i8**, i32*, i32***, i32**, i32, i32, i32, i32, %struct.Slice*, %struct.macroblock*, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32***, i32***, i32****, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [3 x [2 x i32]], i32, i32, i64, i64, %struct.timeb, %struct.timeb, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (%struct.img_par*, %struct.inp_par*)*, i32, i32, i32, i32 }
%struct.datapartition = type { %struct.Bitstream*, %struct.DecodingEnvironment, i32 (%struct.syntaxelement*, %struct.img_par*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i32, i32, i8*, i32 }
%struct.DecodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32* }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.img_par*, %struct.DecodingEnvironment*)* }
%struct.MotionInfoContexts = type { [4 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.inp_par = type { [1000 x i8], [1000 x i8], [1000 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macroblock = type { i32, [2 x i32], i32, i32, %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], i32, i64, i64, i32, i32, [4 x i8], [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.timeb = type { i64, i16, i16, i16 }

@INIT_MB_TYPE_I = internal constant [1 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51]], [11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_TYPE_P = internal constant [3 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 23, i32 33], [2 x i32] [i32 23, i32 2], [2 x i32] [i32 21, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 9], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 -37, i32 118], [2 x i32] [i32 5, i32 57], [2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -11, i32 65], [2 x i32] [i32 1, i32 62]], [11 x [2 x i32]] [[2 x i32] [i32 26, i32 67], [2 x i32] [i32 16, i32 90], [2 x i32] [i32 9, i32 104], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -46, i32 127], [2 x i32] [i32 -20, i32 104], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 18, i32 64], [2 x i32] [i32 9, i32 43], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 22, i32 25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 16, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -2, i32 9], [2 x i32] [i32 4, i32 41], [2 x i32] [i32 -29, i32 118], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 71], [2 x i32] [i32 -13, i32 79], [2 x i32] [i32 5, i32 52]], [11 x [2 x i32]] [[2 x i32] [i32 57, i32 2], [2 x i32] [i32 41, i32 36], [2 x i32] [i32 26, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -45, i32 127], [2 x i32] [i32 -15, i32 101], [2 x i32] [i32 -4, i32 76], [2 x i32] [i32 26, i32 34], [2 x i32] [i32 19, i32 22], [2 x i32] [i32 40, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 29, i32 16], [2 x i32] [i32 25, i32 0], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 51], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -27, i32 99], [2 x i32] [i32 26, i32 16], [2 x i32] [i32 -4, i32 85], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 5, i32 57]], [11 x [2 x i32]] [[2 x i32] [i32 54, i32 0], [2 x i32] [i32 37, i32 42], [2 x i32] [i32 12, i32 97], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -32, i32 127], [2 x i32] [i32 -22, i32 117], [2 x i32] [i32 -2, i32 74], [2 x i32] [i32 20, i32 40], [2 x i32] [i32 20, i32 10], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_I = internal constant [1 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_P = internal constant [3 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 49], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 73], [2 x i32] [i32 17, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 86], [2 x i32] [i32 -17, i32 95], [2 x i32] [i32 -6, i32 61], [2 x i32] [i32 9, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 10, i32 54], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 6, i32 69], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 8, i32 43], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 73], [2 x i32] [i32 14, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -14, i32 88], [2 x i32] [i32 -6, i32 44], [2 x i32] [i32 4, i32 55], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_I = internal constant [1 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_P = internal constant [3 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -3, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -11, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 6, i32 55], [2 x i32] [i32 7, i32 67], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 2, i32 88], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 4, i32 69], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 0, i32 88], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 56], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -6, i32 85], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 2, i32 59], [2 x i32] [i32 2, i32 75], [2 x i32] [i32 -3, i32 87], [2 x i32] [i32 -3, i32 100], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -7, i32 86], [2 x i32] [i32 -5, i32 95], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -11, i32 89], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -15, i32 103], [2 x i32] [i32 -21, i32 116], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 19, i32 57], [2 x i32] [i32 20, i32 58], [2 x i32] [i32 4, i32 84], [2 x i32] [i32 6, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 63], [2 x i32] [i32 6, i32 75], [2 x i32] [i32 -3, i32 90], [2 x i32] [i32 -1, i32 101], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_I = internal constant [1 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_P = internal constant [3 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -7, i32 67], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -5, i32 80], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 1, i32 58]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -1, i32 77], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 -2, i32 86], [2 x i32] [i32 -5, i32 72], [2 x i32] [i32 0, i32 61]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -2, i32 75], [2 x i32] [i32 -12, i32 97], [2 x i32] [i32 -7, i32 50], [2 x i32] [i32 1, i32 60]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_DELTA_QP_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_DELTA_QP_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_MB_AFF_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 11], [2 x i32] [i32 1, i32 55], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_AFF_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 45], [2 x i32] [i32 -4, i32 78], [2 x i32] [i32 -3, i32 96], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 13, i32 15], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 2, i32 80], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 7, i32 34], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -20, i32 127], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_TRANSFORM_SIZE_I = internal constant [1 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 31, i32 21], [2 x i32] [i32 31, i32 31], [2 x i32] [i32 25, i32 50]]]], align 16
@INIT_TRANSFORM_SIZE_P = internal constant [3 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 12, i32 40], [2 x i32] [i32 11, i32 51], [2 x i32] [i32 14, i32 59]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 25, i32 32], [2 x i32] [i32 21, i32 49], [2 x i32] [i32 21, i32 54]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 21, i32 33], [2 x i32] [i32 19, i32 50], [2 x i32] [i32 17, i32 61]]]], align 16
@INIT_IPR_I = internal constant [1 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_IPR_P = internal constant [3 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_CIPR_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CIPR_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CBP_I = internal constant [1 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 127], [2 x i32] [i32 -13, i32 102], [2 x i32] [i32 0, i32 82], [2 x i32] [i32 -7, i32 74]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -31, i32 127], [2 x i32] [i32 -24, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -18, i32 95], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -30, i32 127]]]], align 16
@INIT_CBP_P = internal constant [3 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -27, i32 126], [2 x i32] [i32 -28, i32 98], [2 x i32] [i32 -25, i32 101], [2 x i32] [i32 -23, i32 67]], [4 x [2 x i32]] [[2 x i32] [i32 -28, i32 82], [2 x i32] [i32 -20, i32 94], [2 x i32] [i32 -16, i32 83], [2 x i32] [i32 -22, i32 110]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 91], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -13, i32 93], [2 x i32] [i32 -29, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -39, i32 127], [2 x i32] [i32 -18, i32 91], [2 x i32] [i32 -17, i32 96], [2 x i32] [i32 -26, i32 81]], [4 x [2 x i32]] [[2 x i32] [i32 -35, i32 98], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 -23, i32 97], [2 x i32] [i32 -27, i32 119]], [4 x [2 x i32]] [[2 x i32] [i32 -24, i32 99], [2 x i32] [i32 -21, i32 110], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -36, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -36, i32 127], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 -25, i32 84]], [4 x [2 x i32]] [[2 x i32] [i32 -25, i32 86], [2 x i32] [i32 -12, i32 89], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -14, i32 76], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -37, i32 127]]]], align 16
@INIT_BCBP_I = internal constant [1 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 123], [2 x i32] [i32 -12, i32 115], [2 x i32] [i32 -16, i32 122], [2 x i32] [i32 -11, i32 115]], [4 x [2 x i32]] [[2 x i32] [i32 -12, i32 63], [2 x i32] [i32 -2, i32 68], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -13, i32 104]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -8, i32 93], [2 x i32] [i32 -10, i32 90], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -6, i32 97], [2 x i32] [i32 -7, i32 91], [2 x i32] [i32 -20, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -4, i32 56], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -7, i32 76], [2 x i32] [i32 -22, i32 125]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_BCBP_P = internal constant [3 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -7, i32 92], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 96], [2 x i32] [i32 -13, i32 108]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 46], [2 x i32] [i32 -1, i32 65], [2 x i32] [i32 -1, i32 57], [2 x i32] [i32 -9, i32 93]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -9, i32 92], [2 x i32] [i32 -8, i32 87], [2 x i32] [i32 -23, i32 126]], [4 x [2 x i32]] [[2 x i32] [i32 5, i32 54], [2 x i32] [i32 6, i32 60], [2 x i32] [i32 6, i32 59], [2 x i32] [i32 6, i32 69]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 48], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -8, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 80], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 94], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 39], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -35, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -2, i32 73], [2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -9, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 7, i32 56], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 8, i32 61]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 53], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -7, i32 74], [2 x i32] [i32 -9, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 11, i32 80], [2 x i32] [i32 5, i32 76], [2 x i32] [i32 2, i32 84], [2 x i32] [i32 5, i32 78]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 4, i32 61], [2 x i32] [i32 -14, i32 83], [2 x i32] [i32 -37, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -5, i32 79], [2 x i32] [i32 -11, i32 104], [2 x i32] [i32 -11, i32 91], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 65], [2 x i32] [i32 -2, i32 79], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 56], [2 x i32] [i32 3, i32 68], [2 x i32] [i32 -8, i32 71], [2 x i32] [i32 -13, i32 98]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -7, i32 93], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -5, i32 71], [2 x i32] [i32 -4, i32 63], [2 x i32] [i32 -4, i32 68], [2 x i32] [i32 -12, i32 84], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 -7, i32 65], [2 x i32] [i32 8, i32 61], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 -2, i32 66], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -2, i32 78]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 7, i32 52], [2 x i32] [i32 10, i32 35], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 11, i32 38], [2 x i32] [i32 1, i32 45], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 31, i32 17], [2 x i32] [i32 1, i32 51], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 28, i32 19], [2 x i32] [i32 16, i32 33], [2 x i32] [i32 14, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 -17, i32 120], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -18, i32 114], [2 x i32] [i32 -11, i32 85], [2 x i32] [i32 -15, i32 92], [2 x i32] [i32 -14, i32 89], [2 x i32] [i32 -26, i32 71], [2 x i32] [i32 -15, i32 81], [2 x i32] [i32 -14, i32 80], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -14, i32 70], [2 x i32] [i32 -24, i32 56], [2 x i32] [i32 -23, i32 68], [2 x i32] [i32 -24, i32 50], [2 x i32] [i32 -11, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -13, i32 108], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 -13, i32 101], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -12, i32 94], [2 x i32] [i32 -10, i32 88], [2 x i32] [i32 -16, i32 84], [2 x i32] [i32 -10, i32 86], [2 x i32] [i32 -7, i32 83], [2 x i32] [i32 -13, i32 87], [2 x i32] [i32 -19, i32 94], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 18, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 -8, i32 102], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 0, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 -3, i32 71], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 -13, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 21, i32 37], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 9, i32 57], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 12, i32 72]]]], align 16
@INIT_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -2, i32 85], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -1, i32 75], [2 x i32] [i32 -7, i32 77], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 5, i32 50], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 6, i32 42], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -2, i32 76]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 12, i32 24], [2 x i32] [i32 13, i32 29], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 -10, i32 93], [2 x i32] [i32 -7, i32 73], [2 x i32] [i32 -2, i32 73], [2 x i32] [i32 13, i32 46], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 -7, i32 100]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -5, i32 69], [2 x i32] [i32 -9, i32 70], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -10, i32 68], [2 x i32] [i32 -19, i32 73], [2 x i32] [i32 -12, i32 69], [2 x i32] [i32 -16, i32 70], [2 x i32] [i32 -15, i32 67], [2 x i32] [i32 -20, i32 62], [2 x i32] [i32 -19, i32 70], [2 x i32] [i32 -16, i32 66], [2 x i32] [i32 -22, i32 65], [2 x i32] [i32 -20, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 53], [2 x i32] [i32 2, i32 53], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 -2, i32 61], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 -13, i32 63], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 62], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -6, i32 69], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 14, i32 39], [2 x i32] [i32 4, i32 51], [2 x i32] [i32 13, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 9, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 16, i32 39], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 11, i32 48], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 22, i32 33], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 14, i32 43], [2 x i32] [i32 -1, i32 78], [2 x i32] [i32 0, i32 60], [2 x i32] [i32 9, i32 69]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 103], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -9, i32 89], [2 x i32] [i32 -14, i32 92], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -12, i32 87], [2 x i32] [i32 -23, i32 110], [2 x i32] [i32 -24, i32 105], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -17, i32 99], [2 x i32] [i32 -78, i32 127], [2 x i32] [i32 -70, i32 127], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -46, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 2, i32 59], [2 x i32] [i32 -1, i32 55], [2 x i32] [i32 -7, i32 70], [2 x i32] [i32 -6, i32 75], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 -34, i32 119], [2 x i32] [i32 -3, i32 75], [2 x i32] [i32 32, i32 20], [2 x i32] [i32 30, i32 22], [2 x i32] [i32 -44, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 54], [2 x i32] [i32 -5, i32 61], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -1, i32 60], [2 x i32] [i32 -3, i32 61], [2 x i32] [i32 -8, i32 67], [2 x i32] [i32 -25, i32 84], [2 x i32] [i32 -14, i32 74], [2 x i32] [i32 -5, i32 65], [2 x i32] [i32 5, i32 52], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -11, i32 70], [2 x i32] [i32 18, i32 55]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 71], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 7, i32 61], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 9, i32 32], [2 x i32] [i32 5, i32 43], [2 x i32] [i32 9, i32 47], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 0, i32 51], [2 x i32] [i32 2, i32 46], [2 x i32] [i32 19, i32 38], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 15, i32 38], [2 x i32] [i32 12, i32 42], [2 x i32] [i32 9, i32 34], [2 x i32] [i32 0, i32 89]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -4, i32 86], [2 x i32] [i32 -12, i32 88], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 -16, i32 89], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 5, i32 66], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 -1, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 44], [2 x i32] [i32 -1, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -7, i32 51], [2 x i32] [i32 -4, i32 47], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -3, i32 41], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 8, i32 76], [2 x i32] [i32 -9, i32 78], [2 x i32] [i32 -11, i32 83], [2 x i32] [i32 9, i32 52], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 -5, i32 90]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -8, i32 80], [2 x i32] [i32 -21, i32 83], [2 x i32] [i32 -21, i32 64], [2 x i32] [i32 -13, i32 31], [2 x i32] [i32 -25, i32 64], [2 x i32] [i32 -29, i32 94], [2 x i32] [i32 9, i32 75], [2 x i32] [i32 17, i32 63], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -5, i32 35], [2 x i32] [i32 -2, i32 27], [2 x i32] [i32 13, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 65], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 66], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 -20, i32 81], [2 x i32] [i32 0, i32 30], [2 x i32] [i32 1, i32 7], [2 x i32] [i32 -3, i32 23], [2 x i32] [i32 -21, i32 74], [2 x i32] [i32 16, i32 66], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 17, i32 37], [2 x i32] [i32 44, i32 -18], [2 x i32] [i32 50, i32 -34], [2 x i32] [i32 -22, i32 127]]]], align 16
@INIT_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 24, i32 0], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 8, i32 25], [2 x i32] [i32 13, i32 18], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 13, i32 19], [2 x i32] [i32 10, i32 37], [2 x i32] [i32 12, i32 18], [2 x i32] [i32 6, i32 29], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 15, i32 30], [2 x i32] [i32 4, i32 45], [2 x i32] [i32 1, i32 58], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 7, i32 61]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 38], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 15, i32 39], [2 x i32] [i32 11, i32 42], [2 x i32] [i32 13, i32 44], [2 x i32] [i32 16, i32 45], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 49], [2 x i32] [i32 30, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 10, i32 55], [2 x i32] [i32 17, i32 51], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 0, i32 89]], [15 x [2 x i32]] [[2 x i32] [i32 23, i32 -13], [2 x i32] [i32 26, i32 -13], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 49, i32 -14], [2 x i32] [i32 44, i32 3], [2 x i32] [i32 45, i32 6], [2 x i32] [i32 44, i32 34], [2 x i32] [i32 33, i32 54], [2 x i32] [i32 19, i32 82], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 26, i32 -19], [2 x i32] [i32 22, i32 -17], [2 x i32] [i32 26, i32 -17], [2 x i32] [i32 30, i32 -25], [2 x i32] [i32 28, i32 -20], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 37, i32 -27], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 40, i32 -28], [2 x i32] [i32 38, i32 -17], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 41, i32 -6], [2 x i32] [i32 38, i32 1], [2 x i32] [i32 41, i32 17]], [15 x [2 x i32]] [[2 x i32] [i32 30, i32 -6], [2 x i32] [i32 27, i32 3], [2 x i32] [i32 26, i32 22], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 37, i32 -16], [2 x i32] [i32 35, i32 -4], [2 x i32] [i32 38, i32 -8], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 37, i32 3], [2 x i32] [i32 38, i32 5], [2 x i32] [i32 42, i32 0], [2 x i32] [i32 35, i32 16], [2 x i32] [i32 39, i32 22], [2 x i32] [i32 14, i32 48], [2 x i32] [i32 27, i32 37], [2 x i32] [i32 21, i32 60], [2 x i32] [i32 12, i32 68], [2 x i32] [i32 2, i32 97]]]], align 16
@INIT_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 11, i32 28], [2 x i32] [i32 2, i32 40], [2 x i32] [i32 3, i32 44], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 2, i32 44], [2 x i32] [i32 2, i32 51], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 4, i32 39], [2 x i32] [i32 2, i32 62], [2 x i32] [i32 6, i32 46], [2 x i32] [i32 0, i32 54], [2 x i32] [i32 3, i32 54], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 4, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 51], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 7, i32 53], [2 x i32] [i32 6, i32 52], [2 x i32] [i32 6, i32 55], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 14, i32 36], [2 x i32] [i32 8, i32 53], [2 x i32] [i32 -1, i32 82], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 -3, i32 78], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 22, i32 31], [2 x i32] [i32 -1, i32 84]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 26, i32 -9], [2 x i32] [i32 33, i32 -9], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 41, i32 -2], [2 x i32] [i32 45, i32 3], [2 x i32] [i32 49, i32 9], [2 x i32] [i32 45, i32 27], [2 x i32] [i32 36, i32 59], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 25, i32 7], [2 x i32] [i32 30, i32 -7], [2 x i32] [i32 28, i32 3], [2 x i32] [i32 28, i32 4], [2 x i32] [i32 32, i32 0], [2 x i32] [i32 34, i32 -1], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 32, i32 9], [2 x i32] [i32 31, i32 19], [2 x i32] [i32 26, i32 27], [2 x i32] [i32 26, i32 30], [2 x i32] [i32 37, i32 20], [2 x i32] [i32 28, i32 34], [2 x i32] [i32 17, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 30], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 24, i32 31], [2 x i32] [i32 23, i32 38], [2 x i32] [i32 18, i32 43], [2 x i32] [i32 20, i32 41], [2 x i32] [i32 11, i32 63], [2 x i32] [i32 9, i32 59], [2 x i32] [i32 9, i32 64], [2 x i32] [i32 -1, i32 94], [2 x i32] [i32 -2, i32 89], [2 x i32] [i32 -9, i32 108]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 45], [2 x i32] [i32 10, i32 28], [2 x i32] [i32 10, i32 31], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 52, i32 -43], [2 x i32] [i32 18, i32 15], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 35, i32 -22], [2 x i32] [i32 38, i32 -25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 39, i32 -18], [2 x i32] [i32 32, i32 -12], [2 x i32] [i32 102, i32 -94], [2 x i32] zeroinitializer, [2 x i32] [i32 56, i32 -15]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 33, i32 -4], [2 x i32] [i32 29, i32 10], [2 x i32] [i32 37, i32 -5], [2 x i32] [i32 51, i32 -29], [2 x i32] [i32 39, i32 -9], [2 x i32] [i32 52, i32 -34], [2 x i32] [i32 69, i32 -58], [2 x i32] [i32 67, i32 -63], [2 x i32] [i32 44, i32 -5], [2 x i32] [i32 32, i32 7], [2 x i32] [i32 55, i32 -29], [2 x i32] [i32 32, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 27, i32 36]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 33, i32 -25], [2 x i32] [i32 34, i32 -30], [2 x i32] [i32 36, i32 -28], [2 x i32] [i32 38, i32 -28], [2 x i32] [i32 38, i32 -27], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 35, i32 -16], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 32, i32 -8], [2 x i32] [i32 37, i32 -6], [2 x i32] [i32 35, i32 0], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 28, i32 18], [2 x i32] [i32 26, i32 25], [2 x i32] [i32 29, i32 41]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 14, i32 35], [2 x i32] [i32 18, i32 31], [2 x i32] [i32 17, i32 35], [2 x i32] [i32 21, i32 30], [2 x i32] [i32 17, i32 45], [2 x i32] [i32 20, i32 42], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 27, i32 26], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 7, i32 66], [2 x i32] [i32 16, i32 56], [2 x i32] [i32 11, i32 73], [2 x i32] [i32 10, i32 67], [2 x i32] [i32 -10, i32 116]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 39], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 7, i32 34], [2 x i32] [i32 11, i32 29], [2 x i32] [i32 8, i32 31], [2 x i32] [i32 6, i32 37], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 3, i32 40], [2 x i32] [i32 8, i32 33], [2 x i32] [i32 13, i32 43], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 4, i32 47], [2 x i32] [i32 3, i32 55], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 6, i32 60]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 8, i32 44], [2 x i32] [i32 11, i32 44], [2 x i32] [i32 14, i32 42], [2 x i32] [i32 7, i32 48], [2 x i32] [i32 4, i32 56], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 13, i32 37], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 19, i32 58], [2 x i32] [i32 10, i32 48], [2 x i32] [i32 12, i32 45], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 8, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 35, i32 -18], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 28, i32 -3], [2 x i32] [i32 24, i32 10], [2 x i32] [i32 27, i32 0], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 52, i32 -44], [2 x i32] [i32 39, i32 -24], [2 x i32] [i32 19, i32 17], [2 x i32] [i32 31, i32 25], [2 x i32] [i32 36, i32 29], [2 x i32] [i32 24, i32 33], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 22, i32 73]], [15 x [2 x i32]] [[2 x i32] [i32 20, i32 34], [2 x i32] [i32 19, i32 31], [2 x i32] [i32 27, i32 44], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 19, i32 16], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 21, i32 28], [2 x i32] [i32 25, i32 21], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 42], [2 x i32] [i32 0, i32 93], [2 x i32] [i32 14, i32 56], [2 x i32] [i32 15, i32 57], [2 x i32] [i32 26, i32 38], [2 x i32] [i32 -24, i32 127]]]], align 16
@INIT_ONE_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -3, i32 71], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -5, i32 50], [2 x i32] [i32 -3, i32 54], [2 x i32] [i32 -2, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 67], [2 x i32] [i32 -5, i32 27], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 46]], [5 x [2 x i32]] [[2 x i32] [i32 -3, i32 75], [2 x i32] [i32 -1, i32 23], [2 x i32] [i32 1, i32 34], [2 x i32] [i32 1, i32 43], [2 x i32] [i32 0, i32 54]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -15, i32 55], [2 x i32] [i32 -10, i32 60], [2 x i32] [i32 -6, i32 62], [2 x i32] [i32 -4, i32 65]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -20, i32 84], [2 x i32] [i32 -11, i32 79], [2 x i32] [i32 -6, i32 73], [2 x i32] [i32 -4, i32 74]], [5 x [2 x i32]] [[2 x i32] [i32 -8, i32 78], [2 x i32] [i32 -5, i32 33], [2 x i32] [i32 -4, i32 48], [2 x i32] [i32 -2, i32 53], [2 x i32] [i32 -3, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ONE_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 45], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 -3, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 77], [2 x i32] [i32 3, i32 24], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 0, i32 48], [2 x i32] [i32 0, i32 55]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 66], [2 x i32] [i32 -7, i32 35], [2 x i32] [i32 -7, i32 42], [2 x i32] [i32 -8, i32 45], [2 x i32] [i32 -5, i32 48]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 1, i32 58], [2 x i32] [i32 -3, i32 29], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 1, i32 38], [2 x i32] [i32 2, i32 43]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 70], [2 x i32] [i32 -4, i32 29], [2 x i32] [i32 5, i32 31], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 1, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 8, i32 5], [2 x i32] [i32 10, i32 14], [2 x i32] [i32 14, i32 18], [2 x i32] [i32 13, i32 27]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -23, i32 112], [2 x i32] [i32 -15, i32 71], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 -5, i32 66]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 101], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -5, i32 53], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 -11, i32 75]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 71], [2 x i32] [i32 0, i32 24], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 -2, i32 42], [2 x i32] [i32 -2, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 76], [2 x i32] [i32 -10, i32 44], [2 x i32] [i32 -10, i32 52], [2 x i32] [i32 -10, i32 57], [2 x i32] [i32 -9, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 66], [2 x i32] [i32 -9, i32 34], [2 x i32] [i32 1, i32 32], [2 x i32] [i32 11, i32 31], [2 x i32] [i32 5, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 52], [2 x i32] [i32 7, i32 4], [2 x i32] [i32 10, i32 8], [2 x i32] [i32 17, i32 8], [2 x i32] [i32 16, i32 19]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -24, i32 115], [2 x i32] [i32 -22, i32 82], [2 x i32] [i32 -9, i32 62], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 0, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 100], [2 x i32] [i32 -14, i32 57], [2 x i32] [i32 -12, i32 67], [2 x i32] [i32 -11, i32 71], [2 x i32] [i32 -10, i32 77]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -7, i32 37], [2 x i32] [i32 -8, i32 44], [2 x i32] [i32 -11, i32 49], [2 x i32] [i32 -10, i32 56]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -10, i32 82], [2 x i32] [i32 -8, i32 48], [2 x i32] [i32 -8, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -7, i32 70]], [5 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -22, i32 69], [2 x i32] [i32 -16, i32 75], [2 x i32] [i32 -2, i32 58], [2 x i32] [i32 1, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 81], [2 x i32] [i32 -6, i32 38], [2 x i32] [i32 -13, i32 62], [2 x i32] [i32 -6, i32 58], [2 x i32] [i32 -2, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -2, i32 72], [2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -9, i32 91]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 64], [2 x i32] [i32 -8, i32 68], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -6, i32 77], [2 x i32] [i32 -10, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -9, i32 92]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 73], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -7, i32 80], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -17, i32 110]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -13, i32 96], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -19, i32 117], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 71], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -12, i32 86], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -14, i32 97]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 -8, i32 82], [2 x i32] [i32 -17, i32 102]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 59], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -12, i32 83], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -30, i32 119]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 56], [2 x i32] [i32 -6, i32 60], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -8, i32 76]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -10, i32 90]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 58], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 40], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 79], [2 x i32] [i32 -8, i32 85]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -11, i32 77], [2 x i32] [i32 -9, i32 80], [2 x i32] [i32 -9, i32 84], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -34, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -15, i32 77], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -25, i32 107], [2 x i32] [i32 -25, i32 111], [2 x i32] [i32 -28, i32 122]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 57], [2 x i32] [i32 -6, i32 63], [2 x i32] [i32 -4, i32 65], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -7, i32 82]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 72], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -9, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 -2, i32 67], [2 x i32] [i32 0, i32 73], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 37], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -5, i32 73], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -4, i32 78]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -14, i32 85], [2 x i32] [i32 -13, i32 89], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -11, i32 92], [2 x i32] [i32 -29, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 85], [2 x i32] [i32 -16, i32 88], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -15, i32 98], [2 x i32] [i32 -37, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 59], [2 x i32] [i32 -8, i32 63], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -6, i32 68], [2 x i32] [i32 -10, i32 79]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -14, i32 75], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -18, i32 108]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 -13, i32 99], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 73], [2 x i32] [i32 -10, i32 76], [2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -10, i32 87]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_FLD_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -6, i32 84], [2 x i32] [i32 -8, i32 79], [2 x i32] [i32 0, i32 66], [2 x i32] [i32 -1, i32 71], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -2, i32 60], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -4, i32 58], [2 x i32] [i32 -9, i32 66], [2 x i32] [i32 -1, i32 79], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 3, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 14, i32 40], [2 x i32] [i32 16, i32 27], [2 x i32] [i32 12, i32 29], [2 x i32] [i32 1, i32 44], [2 x i32] [i32 20, i32 36], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 5, i32 42], [2 x i32] [i32 1, i32 48], [2 x i32] [i32 10, i32 62], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 9, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -14, i32 106], [2 x i32] [i32 -13, i32 97], [2 x i32] [i32 -15, i32 90], [2 x i32] [i32 -12, i32 90], [2 x i32] [i32 -18, i32 88], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -9, i32 79], [2 x i32] [i32 -14, i32 86], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -10, i32 70], [2 x i32] [i32 -10, i32 69], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -9, i32 64], [2 x i32] [i32 -5, i32 58], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -16, i32 96], [2 x i32] [i32 -7, i32 88], [2 x i32] [i32 -8, i32 85], [2 x i32] [i32 -7, i32 85], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -13, i32 88], [2 x i32] [i32 4, i32 66], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 10, i32 58], [2 x i32] [i32 -1, i32 76], [2 x i32] [i32 -1, i32 83]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 99], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 2, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 76], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 0, i32 70], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -14, i32 73], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 4, i32 62], [2 x i32] [i32 -1, i32 68], [2 x i32] [i32 -13, i32 75], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 12, i32 70]]]], align 16
@INIT_FLD_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -16, i32 106], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -18, i32 110], [2 x i32] [i32 -14, i32 98], [2 x i32] [i32 -22, i32 110], [2 x i32] [i32 -21, i32 106], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -23, i32 108], [2 x i32] [i32 -26, i32 112], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 -12, i32 95], [2 x i32] [i32 -5, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -9, i32 93], [2 x i32] [i32 -22, i32 94], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 -4, i32 80], [2 x i32] [i32 -10, i32 85], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 7, i32 60], [2 x i32] [i32 9, i32 58], [2 x i32] [i32 5, i32 61], [2 x i32] [i32 12, i32 50], [2 x i32] [i32 15, i32 50], [2 x i32] [i32 18, i32 49], [2 x i32] [i32 17, i32 54]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 10, i32 41], [2 x i32] [i32 7, i32 46], [2 x i32] [i32 -1, i32 51], [2 x i32] [i32 7, i32 49], [2 x i32] [i32 8, i32 52], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 6, i32 47], [2 x i32] [i32 2, i32 55], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 6, i32 50], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 13, i32 49], [2 x i32] [i32 4, i32 63], [2 x i32] [i32 6, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 6, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 9, i32 31], [2 x i32] [i32 12, i32 43], [2 x i32] [i32 3, i32 53], [2 x i32] [i32 14, i32 34], [2 x i32] [i32 10, i32 38], [2 x i32] [i32 -3, i32 52], [2 x i32] [i32 13, i32 40], [2 x i32] [i32 17, i32 32], [2 x i32] [i32 7, i32 44], [2 x i32] [i32 7, i32 38], [2 x i32] [i32 13, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 26, i32 43]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -21, i32 126], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 -20, i32 110], [2 x i32] [i32 -26, i32 126], [2 x i32] [i32 -25, i32 124], [2 x i32] [i32 -17, i32 105], [2 x i32] [i32 -27, i32 121], [2 x i32] [i32 -27, i32 117], [2 x i32] [i32 -17, i32 102], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -27, i32 116], [2 x i32] [i32 -33, i32 122], [2 x i32] [i32 -10, i32 95], [2 x i32] [i32 -14, i32 100], [2 x i32] [i32 -8, i32 95]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 111], [2 x i32] [i32 -28, i32 114], [2 x i32] [i32 -6, i32 89], [2 x i32] [i32 -2, i32 80], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -8, i32 81], [2 x i32] [i32 -1, i32 72], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 9, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 1, i32 69], [2 x i32] [i32 7, i32 69]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -12, i32 72], [2 x i32] [i32 -14, i32 68], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -4, i32 61], [2 x i32] [i32 -9, i32 60], [2 x i32] [i32 1, i32 54], [2 x i32] [i32 2, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -16, i32 77], [2 x i32] [i32 -2, i32 64], [2 x i32] [i32 2, i32 61], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -3, i32 64], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -3, i32 65], [2 x i32] [i32 -3, i32 66], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 9, i32 51], [2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 -2, i32 75]], [15 x [2 x i32]] [[2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 37], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 11, i32 37], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 41], [2 x i32] [i32 2, i32 48], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 3, i32 50], [2 x i32] [i32 19, i32 40], [2 x i32] [i32 3, i32 66], [2 x i32] [i32 18, i32 50]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -22, i32 127], [2 x i32] [i32 -25, i32 127], [2 x i32] [i32 -25, i32 120], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -19, i32 114], [2 x i32] [i32 -23, i32 117], [2 x i32] [i32 -25, i32 118], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -24, i32 113], [2 x i32] [i32 -28, i32 118], [2 x i32] [i32 -31, i32 120], [2 x i32] [i32 -37, i32 124], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 -15, i32 102], [2 x i32] [i32 -10, i32 99]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -5, i32 92], [2 x i32] [i32 17, i32 57], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -12, i32 91], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 -1, i32 73], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 15, i32 57]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -10, i32 67], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 77], [2 x i32] [i32 2, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 14, i32 54], [2 x i32] [i32 15, i32 44], [2 x i32] [i32 5, i32 60], [2 x i32] [i32 2, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 76], [2 x i32] [i32 -18, i32 86], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 -12, i32 70], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 74], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 7, i32 54], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -11, i32 82], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 25, i32 42]]]], align 16
@INIT_FLD_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 15, i32 6], [2 x i32] [i32 6, i32 19], [2 x i32] [i32 7, i32 16], [2 x i32] [i32 12, i32 14], [2 x i32] [i32 18, i32 13], [2 x i32] [i32 13, i32 11], [2 x i32] [i32 13, i32 15], [2 x i32] [i32 15, i32 16], [2 x i32] [i32 12, i32 23], [2 x i32] [i32 13, i32 23], [2 x i32] [i32 15, i32 20], [2 x i32] [i32 14, i32 26], [2 x i32] [i32 14, i32 44], [2 x i32] [i32 17, i32 40], [2 x i32] [i32 17, i32 47]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 17], [2 x i32] [i32 21, i32 21], [2 x i32] [i32 25, i32 22], [2 x i32] [i32 31, i32 27], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 19, i32 35], [2 x i32] [i32 14, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 7, i32 63], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -3, i32 94], [2 x i32] [i32 9, i32 69], [2 x i32] [i32 -12, i32 109]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -10], [2 x i32] [i32 24, i32 -11], [2 x i32] [i32 28, i32 -8], [2 x i32] [i32 28, i32 -1], [2 x i32] [i32 29, i32 3], [2 x i32] [i32 29, i32 9], [2 x i32] [i32 35, i32 20], [2 x i32] [i32 29, i32 36], [2 x i32] [i32 14, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -35], [2 x i32] [i32 36, i32 -34], [2 x i32] [i32 32, i32 -26], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 44, i32 -32], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 34, i32 -15], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 33, i32 -7], [2 x i32] [i32 35, i32 -5], [2 x i32] [i32 33, i32 0], [2 x i32] [i32 38, i32 2], [2 x i32] [i32 33, i32 13], [2 x i32] [i32 23, i32 35], [2 x i32] [i32 13, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 29, i32 -3], [2 x i32] [i32 26, i32 0], [2 x i32] [i32 22, i32 30], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 31, i32 -7], [2 x i32] [i32 35, i32 -15], [2 x i32] [i32 34, i32 -3], [2 x i32] [i32 34, i32 3], [2 x i32] [i32 36, i32 -1], [2 x i32] [i32 34, i32 5], [2 x i32] [i32 32, i32 11], [2 x i32] [i32 35, i32 5], [2 x i32] [i32 34, i32 12], [2 x i32] [i32 39, i32 11], [2 x i32] [i32 30, i32 29], [2 x i32] [i32 34, i32 26], [2 x i32] [i32 29, i32 39], [2 x i32] [i32 19, i32 66]]]], align 16
@INIT_FLD_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 14, i32 11], [2 x i32] [i32 11, i32 14], [2 x i32] [i32 9, i32 11], [2 x i32] [i32 18, i32 11], [2 x i32] [i32 21, i32 9], [2 x i32] [i32 23, i32 -2], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 34, i32 -21], [2 x i32] [i32 39, i32 -23], [2 x i32] [i32 42, i32 -33], [2 x i32] [i32 41, i32 -31], [2 x i32] [i32 46, i32 -28], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 21, i32 29]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 45, i32 -24], [2 x i32] [i32 53, i32 -45], [2 x i32] [i32 48, i32 -26], [2 x i32] [i32 65, i32 -43], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 39, i32 -10], [2 x i32] [i32 30, i32 9], [2 x i32] [i32 18, i32 26], [2 x i32] [i32 20, i32 27], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -14, i32 82], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -19, i32 97], [2 x i32] [i32 -35, i32 125]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -13], [2 x i32] [i32 33, i32 -14], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 46, i32 -2], [2 x i32] [i32 51, i32 2], [2 x i32] [i32 60, i32 6], [2 x i32] [i32 61, i32 17], [2 x i32] [i32 55, i32 34], [2 x i32] [i32 42, i32 62], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 27, i32 0], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 27, i32 6], [2 x i32] [i32 34, i32 8], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 24, i32 22], [2 x i32] [i32 33, i32 19], [2 x i32] [i32 22, i32 32], [2 x i32] [i32 26, i32 31], [2 x i32] [i32 21, i32 41], [2 x i32] [i32 26, i32 44], [2 x i32] [i32 23, i32 47], [2 x i32] [i32 16, i32 65], [2 x i32] [i32 14, i32 71]], [15 x [2 x i32]] [[2 x i32] [i32 8, i32 60], [2 x i32] [i32 6, i32 63], [2 x i32] [i32 17, i32 65], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 21, i32 24], [2 x i32] [i32 23, i32 20], [2 x i32] [i32 26, i32 23], [2 x i32] [i32 27, i32 32], [2 x i32] [i32 28, i32 23], [2 x i32] [i32 28, i32 24], [2 x i32] [i32 23, i32 40], [2 x i32] [i32 24, i32 32], [2 x i32] [i32 28, i32 29], [2 x i32] [i32 23, i32 42], [2 x i32] [i32 19, i32 57], [2 x i32] [i32 22, i32 53], [2 x i32] [i32 22, i32 61], [2 x i32] [i32 11, i32 86]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 19, i32 -6], [2 x i32] [i32 18, i32 -6], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 26, i32 -12], [2 x i32] [i32 31, i32 -16], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 33, i32 -22], [2 x i32] [i32 37, i32 -28], [2 x i32] [i32 39, i32 -30], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 47, i32 -42], [2 x i32] [i32 45, i32 -36], [2 x i32] [i32 49, i32 -34], [2 x i32] [i32 41, i32 -17], [2 x i32] [i32 32, i32 9]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 69, i32 -71], [2 x i32] [i32 63, i32 -63], [2 x i32] [i32 66, i32 -64], [2 x i32] [i32 77, i32 -74], [2 x i32] [i32 54, i32 -39], [2 x i32] [i32 52, i32 -35], [2 x i32] [i32 41, i32 -10], [2 x i32] [i32 36, i32 0], [2 x i32] [i32 40, i32 -1], [2 x i32] [i32 30, i32 14], [2 x i32] [i32 28, i32 26], [2 x i32] [i32 23, i32 37], [2 x i32] [i32 12, i32 55], [2 x i32] [i32 11, i32 65]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 37, i32 -33], [2 x i32] [i32 39, i32 -36], [2 x i32] [i32 40, i32 -37], [2 x i32] [i32 38, i32 -30], [2 x i32] [i32 46, i32 -33], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 40, i32 -24], [2 x i32] [i32 49, i32 -29], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 40, i32 -10], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 46, i32 -5], [2 x i32] [i32 31, i32 20], [2 x i32] [i32 29, i32 30], [2 x i32] [i32 25, i32 44]], [15 x [2 x i32]] [[2 x i32] [i32 12, i32 48], [2 x i32] [i32 11, i32 49], [2 x i32] [i32 26, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 22, i32 22], [2 x i32] [i32 23, i32 22], [2 x i32] [i32 27, i32 21], [2 x i32] [i32 33, i32 20], [2 x i32] [i32 26, i32 28], [2 x i32] [i32 30, i32 24], [2 x i32] [i32 27, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 25, i32 39], [2 x i32] [i32 18, i32 50], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 21, i32 54], [2 x i32] [i32 14, i32 71], [2 x i32] [i32 11, i32 83]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 17, i32 -13], [2 x i32] [i32 16, i32 -9], [2 x i32] [i32 17, i32 -12], [2 x i32] [i32 27, i32 -21], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 41, i32 -40], [2 x i32] [i32 42, i32 -41], [2 x i32] [i32 48, i32 -47], [2 x i32] [i32 39, i32 -32], [2 x i32] [i32 46, i32 -40], [2 x i32] [i32 52, i32 -51], [2 x i32] [i32 46, i32 -41], [2 x i32] [i32 52, i32 -39], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 32, i32 11]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 61, i32 -55], [2 x i32] [i32 56, i32 -46], [2 x i32] [i32 62, i32 -50], [2 x i32] [i32 81, i32 -67], [2 x i32] [i32 45, i32 -20], [2 x i32] [i32 35, i32 -2], [2 x i32] [i32 28, i32 15], [2 x i32] [i32 34, i32 1], [2 x i32] [i32 39, i32 1], [2 x i32] [i32 30, i32 17], [2 x i32] [i32 20, i32 38], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 15, i32 54], [2 x i32] [i32 0, i32 79]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -16], [2 x i32] [i32 37, i32 -14], [2 x i32] [i32 37, i32 -17], [2 x i32] [i32 32, i32 1], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 29, i32 15], [2 x i32] [i32 24, i32 25], [2 x i32] [i32 34, i32 22], [2 x i32] [i32 31, i32 16], [2 x i32] [i32 35, i32 18], [2 x i32] [i32 31, i32 28], [2 x i32] [i32 33, i32 41], [2 x i32] [i32 36, i32 28], [2 x i32] [i32 27, i32 47], [2 x i32] [i32 21, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 18, i32 31], [2 x i32] [i32 19, i32 26], [2 x i32] [i32 36, i32 24], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 23], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 30], [2 x i32] [i32 31, i32 29], [2 x i32] [i32 22, i32 41], [2 x i32] [i32 22, i32 42], [2 x i32] [i32 16, i32 60], [2 x i32] [i32 15, i32 52], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 3, i32 78], [2 x i32] [i32 -16, i32 123], [2 x i32] [i32 21, i32 53], [2 x i32] [i32 22, i32 56], [2 x i32] [i32 25, i32 61]]]], align 16
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@imgY_ref = common global i16** null, align 8
@imgUV_ref = common global i16*** null, align 8
@PicPos = common global i32** null, align 8
@ReMapRef = common global [20 x i32] zeroinitializer, align 16
@Bframe_ctr = common global i32 0, align 4
@frame_no = common global i32 0, align 4
@g_nFrame = common global i32 0, align 4
@TopFieldForSkip_Y = common global [16 x [16 x i32]] zeroinitializer, align 16
@TopFieldForSkip_UV = common global [2 x [16 x [16 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Luma_Intra = common global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Intra = common global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale4x4Luma_Inter = common global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Inter = common global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale8x8Luma_Intra = common global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@InvLevelScale8x8Luma_Inter = common global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@qmatrix = common global [8 x i32*] zeroinitializer, align 16
@errortext = common global [300 x i8] zeroinitializer, align 16
@tot_time = common global i64 0, align 8
@p_out = common global i32 0, align 4
@p_ref = common global i32 0, align 4
@p_log = common global %struct._IO_FILE* null, align 8
@previous_frame_num = common global i32 0, align 4
@ref_flag = common global [17 x i32] zeroinitializer, align 16
@Is_primary_correct = common global i32 0, align 4
@Is_redundant_correct = common global i32 0, align 4
@redundant_slice_ref_idx = common global i32 0, align 4
@nal_startcode_follows = common global i32 (%struct.img_par*, i32)* null, align 8

; Function Attrs: nounwind uwtable
define void @init_contexts(%struct.img_par* %img) #0 {
entry:
  %img.addr = alloca %struct.img_par*, align 8
  %mc = alloca %struct.MotionInfoContexts*, align 8
  %tc = alloca %struct.TextureInfoContexts*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.img_par* %img, %struct.img_par** %img.addr, align 8
  %0 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %currentSlice = getelementptr inbounds %struct.img_par, %struct.img_par* %0, i32 0, i32 38
  %1 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %mot_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %1, i32 0, i32 10
  %2 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mot_ctx, align 8
  store %struct.MotionInfoContexts* %2, %struct.MotionInfoContexts** %mc, align 8
  %3 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %currentSlice1 = getelementptr inbounds %struct.img_par, %struct.img_par* %3, i32 0, i32 38
  %4 = load %struct.Slice*, %struct.Slice** %currentSlice1, align 8
  %tex_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %4, i32 0, i32 11
  %5 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tex_ctx, align 8
  store %struct.TextureInfoContexts* %5, %struct.TextureInfoContexts** %tc, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.30, %entry
  %6 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %6, 3
  br i1 %cmp, label %for.body, label %for.end.32

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %for.body
  %7 = load i32, i32* %j, align 4
  %cmp3 = icmp slt i32 %7, 11
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.2
  %8 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type = getelementptr inbounds %struct.img_par, %struct.img_par* %8, i32 0, i32 10
  %9 = load i32, i32* %type, align 4
  %cmp5 = icmp eq i32 %9, 2
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.4
  %10 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type6 = getelementptr inbounds %struct.img_par, %struct.img_par* %10, i32 0, i32 10
  %11 = load i32, i32* %type6, align 4
  %cmp7 = icmp eq i32 %11, 4
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %for.body.4
  %12 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %13 = load i32, i32* %j, align 4
  %idxprom = sext i32 %13 to i64
  %14 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %14 to i64
  %15 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %15, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [11 x %struct.BiContextType]], [4 x [11 x %struct.BiContextType]]* %mb_type_contexts, i32 0, i64 %idxprom8
  %arrayidx9 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx, i32 0, i64 %idxprom
  %16 = load i32, i32* %j, align 4
  %idxprom10 = sext i32 %16 to i64
  %17 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %17 to i64
  %18 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number = getelementptr inbounds %struct.img_par, %struct.img_par* %18, i32 0, i32 99
  %19 = load i32, i32* %model_number, align 4
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], [1 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_I, i32 0, i64 %idxprom12
  %arrayidx14 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx13, i32 0, i64 %idxprom11
  %arrayidx15 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx14, i32 0, i64 %idxprom10
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx15, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %12, %struct.BiContextType* %arrayidx9, i32* %arrayidx16)
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %20 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %21 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %21 to i64
  %22 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %22 to i64
  %23 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_type_contexts19 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %23, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], [4 x [11 x %struct.BiContextType]]* %mb_type_contexts19, i32 0, i64 %idxprom18
  %arrayidx21 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx20, i32 0, i64 %idxprom17
  %24 = load i32, i32* %j, align 4
  %idxprom22 = sext i32 %24 to i64
  %25 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %25 to i64
  %26 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number24 = getelementptr inbounds %struct.img_par, %struct.img_par* %26, i32 0, i32 99
  %27 = load i32, i32* %model_number24, align 4
  %idxprom25 = sext i32 %27 to i64
  %arrayidx26 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], [3 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_P, i32 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx26, i32 0, i64 %idxprom23
  %arrayidx28 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx27, i32 0, i64 %idxprom22
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx28, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %20, %struct.BiContextType* %arrayidx21, i32* %arrayidx29)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %j, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.2

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.30

for.inc.30:                                       ; preds = %for.end
  %29 = load i32, i32* %i, align 4
  %inc31 = add nsw i32 %29, 1
  store i32 %inc31, i32* %i, align 4
  br label %for.cond

for.end.32:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc.75, %for.end.32
  %30 = load i32, i32* %i, align 4
  %cmp34 = icmp slt i32 %30, 2
  br i1 %cmp34, label %for.body.35, label %for.end.77

for.body.35:                                      ; preds = %for.cond.33
  store i32 0, i32* %j, align 4
  br label %for.cond.36

for.cond.36:                                      ; preds = %for.inc.72, %for.body.35
  %31 = load i32, i32* %j, align 4
  %cmp37 = icmp slt i32 %31, 9
  br i1 %cmp37, label %for.body.38, label %for.end.74

for.body.38:                                      ; preds = %for.cond.36
  %32 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type39 = getelementptr inbounds %struct.img_par, %struct.img_par* %32, i32 0, i32 10
  %33 = load i32, i32* %type39, align 4
  %cmp40 = icmp eq i32 %33, 2
  br i1 %cmp40, label %if.then.44, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %for.body.38
  %34 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type42 = getelementptr inbounds %struct.img_par, %struct.img_par* %34, i32 0, i32 10
  %35 = load i32, i32* %type42, align 4
  %cmp43 = icmp eq i32 %35, 4
  br i1 %cmp43, label %if.then.44, label %if.else.57

if.then.44:                                       ; preds = %lor.lhs.false.41, %for.body.38
  %36 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %37 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %37 to i64
  %38 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %38 to i64
  %39 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %b8_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %39, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts, i32 0, i64 %idxprom46
  %arrayidx48 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx47, i32 0, i64 %idxprom45
  %40 = load i32, i32* %j, align 4
  %idxprom49 = sext i32 %40 to i64
  %41 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %41 to i64
  %42 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number51 = getelementptr inbounds %struct.img_par, %struct.img_par* %42, i32 0, i32 99
  %43 = load i32, i32* %model_number51, align 4
  %idxprom52 = sext i32 %43 to i64
  %arrayidx53 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], [1 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_I, i32 0, i64 %idxprom52
  %arrayidx54 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx53, i32 0, i64 %idxprom50
  %arrayidx55 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx54, i32 0, i64 %idxprom49
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx55, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %36, %struct.BiContextType* %arrayidx48, i32* %arrayidx56)
  br label %if.end.71

if.else.57:                                       ; preds = %lor.lhs.false.41
  %44 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %45 = load i32, i32* %j, align 4
  %idxprom58 = sext i32 %45 to i64
  %46 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %46 to i64
  %47 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %b8_type_contexts60 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %47, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts60, i32 0, i64 %idxprom59
  %arrayidx62 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx61, i32 0, i64 %idxprom58
  %48 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %48 to i64
  %49 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %49 to i64
  %50 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number65 = getelementptr inbounds %struct.img_par, %struct.img_par* %50, i32 0, i32 99
  %51 = load i32, i32* %model_number65, align 4
  %idxprom66 = sext i32 %51 to i64
  %arrayidx67 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], [3 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_P, i32 0, i64 %idxprom66
  %arrayidx68 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx67, i32 0, i64 %idxprom64
  %arrayidx69 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx68, i32 0, i64 %idxprom63
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx69, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %44, %struct.BiContextType* %arrayidx62, i32* %arrayidx70)
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.57, %if.then.44
  br label %for.inc.72

for.inc.72:                                       ; preds = %if.end.71
  %52 = load i32, i32* %j, align 4
  %inc73 = add nsw i32 %52, 1
  store i32 %inc73, i32* %j, align 4
  br label %for.cond.36

for.end.74:                                       ; preds = %for.cond.36
  br label %for.inc.75

for.inc.75:                                       ; preds = %for.end.74
  %53 = load i32, i32* %i, align 4
  %inc76 = add nsw i32 %53, 1
  store i32 %inc76, i32* %i, align 4
  br label %for.cond.33

for.end.77:                                       ; preds = %for.cond.33
  store i32 0, i32* %i, align 4
  br label %for.cond.78

for.cond.78:                                      ; preds = %for.inc.120, %for.end.77
  %54 = load i32, i32* %i, align 4
  %cmp79 = icmp slt i32 %54, 2
  br i1 %cmp79, label %for.body.80, label %for.end.122

for.body.80:                                      ; preds = %for.cond.78
  store i32 0, i32* %j, align 4
  br label %for.cond.81

for.cond.81:                                      ; preds = %for.inc.117, %for.body.80
  %55 = load i32, i32* %j, align 4
  %cmp82 = icmp slt i32 %55, 10
  br i1 %cmp82, label %for.body.83, label %for.end.119

for.body.83:                                      ; preds = %for.cond.81
  %56 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type84 = getelementptr inbounds %struct.img_par, %struct.img_par* %56, i32 0, i32 10
  %57 = load i32, i32* %type84, align 4
  %cmp85 = icmp eq i32 %57, 2
  br i1 %cmp85, label %if.then.89, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %for.body.83
  %58 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type87 = getelementptr inbounds %struct.img_par, %struct.img_par* %58, i32 0, i32 10
  %59 = load i32, i32* %type87, align 4
  %cmp88 = icmp eq i32 %59, 4
  br i1 %cmp88, label %if.then.89, label %if.else.102

if.then.89:                                       ; preds = %lor.lhs.false.86, %for.body.83
  %60 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %61 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %61 to i64
  %62 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %62 to i64
  %63 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mv_res_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %63, i32 0, i32 2
  %arrayidx92 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts, i32 0, i64 %idxprom91
  %arrayidx93 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx92, i32 0, i64 %idxprom90
  %64 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %64 to i64
  %65 = load i32, i32* %i, align 4
  %idxprom95 = sext i32 %65 to i64
  %66 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number96 = getelementptr inbounds %struct.img_par, %struct.img_par* %66, i32 0, i32 99
  %67 = load i32, i32* %model_number96, align 4
  %idxprom97 = sext i32 %67 to i64
  %arrayidx98 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], [1 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_I, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx98, i32 0, i64 %idxprom95
  %arrayidx100 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx99, i32 0, i64 %idxprom94
  %arrayidx101 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx100, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %60, %struct.BiContextType* %arrayidx93, i32* %arrayidx101)
  br label %if.end.116

if.else.102:                                      ; preds = %lor.lhs.false.86
  %68 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %69 = load i32, i32* %j, align 4
  %idxprom103 = sext i32 %69 to i64
  %70 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %70 to i64
  %71 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mv_res_contexts105 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %71, i32 0, i32 2
  %arrayidx106 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts105, i32 0, i64 %idxprom104
  %arrayidx107 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx106, i32 0, i64 %idxprom103
  %72 = load i32, i32* %j, align 4
  %idxprom108 = sext i32 %72 to i64
  %73 = load i32, i32* %i, align 4
  %idxprom109 = sext i32 %73 to i64
  %74 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number110 = getelementptr inbounds %struct.img_par, %struct.img_par* %74, i32 0, i32 99
  %75 = load i32, i32* %model_number110, align 4
  %idxprom111 = sext i32 %75 to i64
  %arrayidx112 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], [3 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_P, i32 0, i64 %idxprom111
  %arrayidx113 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx112, i32 0, i64 %idxprom109
  %arrayidx114 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx113, i32 0, i64 %idxprom108
  %arrayidx115 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx114, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %68, %struct.BiContextType* %arrayidx107, i32* %arrayidx115)
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.102, %if.then.89
  br label %for.inc.117

for.inc.117:                                      ; preds = %if.end.116
  %76 = load i32, i32* %j, align 4
  %inc118 = add nsw i32 %76, 1
  store i32 %inc118, i32* %j, align 4
  br label %for.cond.81

for.end.119:                                      ; preds = %for.cond.81
  br label %for.inc.120

for.inc.120:                                      ; preds = %for.end.119
  %77 = load i32, i32* %i, align 4
  %inc121 = add nsw i32 %77, 1
  store i32 %inc121, i32* %i, align 4
  br label %for.cond.78

for.end.122:                                      ; preds = %for.cond.78
  store i32 0, i32* %i, align 4
  br label %for.cond.123

for.cond.123:                                     ; preds = %for.inc.165, %for.end.122
  %78 = load i32, i32* %i, align 4
  %cmp124 = icmp slt i32 %78, 2
  br i1 %cmp124, label %for.body.125, label %for.end.167

for.body.125:                                     ; preds = %for.cond.123
  store i32 0, i32* %j, align 4
  br label %for.cond.126

for.cond.126:                                     ; preds = %for.inc.162, %for.body.125
  %79 = load i32, i32* %j, align 4
  %cmp127 = icmp slt i32 %79, 6
  br i1 %cmp127, label %for.body.128, label %for.end.164

for.body.128:                                     ; preds = %for.cond.126
  %80 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type129 = getelementptr inbounds %struct.img_par, %struct.img_par* %80, i32 0, i32 10
  %81 = load i32, i32* %type129, align 4
  %cmp130 = icmp eq i32 %81, 2
  br i1 %cmp130, label %if.then.134, label %lor.lhs.false.131

lor.lhs.false.131:                                ; preds = %for.body.128
  %82 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type132 = getelementptr inbounds %struct.img_par, %struct.img_par* %82, i32 0, i32 10
  %83 = load i32, i32* %type132, align 4
  %cmp133 = icmp eq i32 %83, 4
  br i1 %cmp133, label %if.then.134, label %if.else.147

if.then.134:                                      ; preds = %lor.lhs.false.131, %for.body.128
  %84 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %85 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %85 to i64
  %86 = load i32, i32* %i, align 4
  %idxprom136 = sext i32 %86 to i64
  %87 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %ref_no_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %87, i32 0, i32 3
  %arrayidx137 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts, i32 0, i64 %idxprom136
  %arrayidx138 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx137, i32 0, i64 %idxprom135
  %88 = load i32, i32* %j, align 4
  %idxprom139 = sext i32 %88 to i64
  %89 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %89 to i64
  %90 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number141 = getelementptr inbounds %struct.img_par, %struct.img_par* %90, i32 0, i32 99
  %91 = load i32, i32* %model_number141, align 4
  %idxprom142 = sext i32 %91 to i64
  %arrayidx143 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], [1 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_I, i32 0, i64 %idxprom142
  %arrayidx144 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx143, i32 0, i64 %idxprom140
  %arrayidx145 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx144, i32 0, i64 %idxprom139
  %arrayidx146 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx145, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %84, %struct.BiContextType* %arrayidx138, i32* %arrayidx146)
  br label %if.end.161

if.else.147:                                      ; preds = %lor.lhs.false.131
  %92 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %93 = load i32, i32* %j, align 4
  %idxprom148 = sext i32 %93 to i64
  %94 = load i32, i32* %i, align 4
  %idxprom149 = sext i32 %94 to i64
  %95 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %ref_no_contexts150 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %95, i32 0, i32 3
  %arrayidx151 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts150, i32 0, i64 %idxprom149
  %arrayidx152 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx151, i32 0, i64 %idxprom148
  %96 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %96 to i64
  %97 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %97 to i64
  %98 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number155 = getelementptr inbounds %struct.img_par, %struct.img_par* %98, i32 0, i32 99
  %99 = load i32, i32* %model_number155, align 4
  %idxprom156 = sext i32 %99 to i64
  %arrayidx157 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], [3 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_P, i32 0, i64 %idxprom156
  %arrayidx158 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx157, i32 0, i64 %idxprom154
  %arrayidx159 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx158, i32 0, i64 %idxprom153
  %arrayidx160 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx159, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %92, %struct.BiContextType* %arrayidx152, i32* %arrayidx160)
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.147, %if.then.134
  br label %for.inc.162

for.inc.162:                                      ; preds = %if.end.161
  %100 = load i32, i32* %j, align 4
  %inc163 = add nsw i32 %100, 1
  store i32 %inc163, i32* %j, align 4
  br label %for.cond.126

for.end.164:                                      ; preds = %for.cond.126
  br label %for.inc.165

for.inc.165:                                      ; preds = %for.end.164
  %101 = load i32, i32* %i, align 4
  %inc166 = add nsw i32 %101, 1
  store i32 %inc166, i32* %i, align 4
  br label %for.cond.123

for.end.167:                                      ; preds = %for.cond.123
  store i32 0, i32* %j, align 4
  br label %for.cond.168

for.cond.168:                                     ; preds = %for.inc.198, %for.end.167
  %102 = load i32, i32* %j, align 4
  %cmp169 = icmp slt i32 %102, 4
  br i1 %cmp169, label %for.body.170, label %for.end.200

for.body.170:                                     ; preds = %for.cond.168
  %103 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type171 = getelementptr inbounds %struct.img_par, %struct.img_par* %103, i32 0, i32 10
  %104 = load i32, i32* %type171, align 4
  %cmp172 = icmp eq i32 %104, 2
  br i1 %cmp172, label %if.then.176, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %for.body.170
  %105 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type174 = getelementptr inbounds %struct.img_par, %struct.img_par* %105, i32 0, i32 10
  %106 = load i32, i32* %type174, align 4
  %cmp175 = icmp eq i32 %106, 4
  br i1 %cmp175, label %if.then.176, label %if.else.186

if.then.176:                                      ; preds = %lor.lhs.false.173, %for.body.170
  %107 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %108 = load i32, i32* %j, align 4
  %idxprom177 = sext i32 %108 to i64
  %109 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %delta_qp_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %109, i32 0, i32 4
  %arrayidx178 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts, i32 0, i64 %idxprom177
  %110 = load i32, i32* %j, align 4
  %idxprom179 = sext i32 %110 to i64
  %111 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number180 = getelementptr inbounds %struct.img_par, %struct.img_par* %111, i32 0, i32 99
  %112 = load i32, i32* %model_number180, align 4
  %idxprom181 = sext i32 %112 to i64
  %arrayidx182 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_I, i32 0, i64 %idxprom181
  %arrayidx183 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx182, i32 0, i64 0
  %arrayidx184 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx183, i32 0, i64 %idxprom179
  %arrayidx185 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx184, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %107, %struct.BiContextType* %arrayidx178, i32* %arrayidx185)
  br label %if.end.197

if.else.186:                                      ; preds = %lor.lhs.false.173
  %113 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %114 = load i32, i32* %j, align 4
  %idxprom187 = sext i32 %114 to i64
  %115 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %delta_qp_contexts188 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %115, i32 0, i32 4
  %arrayidx189 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts188, i32 0, i64 %idxprom187
  %116 = load i32, i32* %j, align 4
  %idxprom190 = sext i32 %116 to i64
  %117 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number191 = getelementptr inbounds %struct.img_par, %struct.img_par* %117, i32 0, i32 99
  %118 = load i32, i32* %model_number191, align 4
  %idxprom192 = sext i32 %118 to i64
  %arrayidx193 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_P, i32 0, i64 %idxprom192
  %arrayidx194 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx193, i32 0, i64 0
  %arrayidx195 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx194, i32 0, i64 %idxprom190
  %arrayidx196 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx195, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %113, %struct.BiContextType* %arrayidx189, i32* %arrayidx196)
  br label %if.end.197

if.end.197:                                       ; preds = %if.else.186, %if.then.176
  br label %for.inc.198

for.inc.198:                                      ; preds = %if.end.197
  %119 = load i32, i32* %j, align 4
  %inc199 = add nsw i32 %119, 1
  store i32 %inc199, i32* %j, align 4
  br label %for.cond.168

for.end.200:                                      ; preds = %for.cond.168
  store i32 0, i32* %j, align 4
  br label %for.cond.201

for.cond.201:                                     ; preds = %for.inc.231, %for.end.200
  %120 = load i32, i32* %j, align 4
  %cmp202 = icmp slt i32 %120, 4
  br i1 %cmp202, label %for.body.203, label %for.end.233

for.body.203:                                     ; preds = %for.cond.201
  %121 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type204 = getelementptr inbounds %struct.img_par, %struct.img_par* %121, i32 0, i32 10
  %122 = load i32, i32* %type204, align 4
  %cmp205 = icmp eq i32 %122, 2
  br i1 %cmp205, label %if.then.209, label %lor.lhs.false.206

lor.lhs.false.206:                                ; preds = %for.body.203
  %123 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type207 = getelementptr inbounds %struct.img_par, %struct.img_par* %123, i32 0, i32 10
  %124 = load i32, i32* %type207, align 4
  %cmp208 = icmp eq i32 %124, 4
  br i1 %cmp208, label %if.then.209, label %if.else.219

if.then.209:                                      ; preds = %lor.lhs.false.206, %for.body.203
  %125 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %126 = load i32, i32* %j, align 4
  %idxprom210 = sext i32 %126 to i64
  %127 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_aff_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %127, i32 0, i32 5
  %arrayidx211 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts, i32 0, i64 %idxprom210
  %128 = load i32, i32* %j, align 4
  %idxprom212 = sext i32 %128 to i64
  %129 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number213 = getelementptr inbounds %struct.img_par, %struct.img_par* %129, i32 0, i32 99
  %130 = load i32, i32* %model_number213, align 4
  %idxprom214 = sext i32 %130 to i64
  %arrayidx215 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_I, i32 0, i64 %idxprom214
  %arrayidx216 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx215, i32 0, i64 0
  %arrayidx217 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx216, i32 0, i64 %idxprom212
  %arrayidx218 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx217, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %125, %struct.BiContextType* %arrayidx211, i32* %arrayidx218)
  br label %if.end.230

if.else.219:                                      ; preds = %lor.lhs.false.206
  %131 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %132 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %132 to i64
  %133 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_aff_contexts221 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %133, i32 0, i32 5
  %arrayidx222 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts221, i32 0, i64 %idxprom220
  %134 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %134 to i64
  %135 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number224 = getelementptr inbounds %struct.img_par, %struct.img_par* %135, i32 0, i32 99
  %136 = load i32, i32* %model_number224, align 4
  %idxprom225 = sext i32 %136 to i64
  %arrayidx226 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_P, i32 0, i64 %idxprom225
  %arrayidx227 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx226, i32 0, i64 0
  %arrayidx228 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx227, i32 0, i64 %idxprom223
  %arrayidx229 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx228, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %131, %struct.BiContextType* %arrayidx222, i32* %arrayidx229)
  br label %if.end.230

if.end.230:                                       ; preds = %if.else.219, %if.then.209
  br label %for.inc.231

for.inc.231:                                      ; preds = %if.end.230
  %137 = load i32, i32* %j, align 4
  %inc232 = add nsw i32 %137, 1
  store i32 %inc232, i32* %j, align 4
  br label %for.cond.201

for.end.233:                                      ; preds = %for.cond.201
  store i32 0, i32* %j, align 4
  br label %for.cond.234

for.cond.234:                                     ; preds = %for.inc.264, %for.end.233
  %138 = load i32, i32* %j, align 4
  %cmp235 = icmp slt i32 %138, 3
  br i1 %cmp235, label %for.body.236, label %for.end.266

for.body.236:                                     ; preds = %for.cond.234
  %139 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type237 = getelementptr inbounds %struct.img_par, %struct.img_par* %139, i32 0, i32 10
  %140 = load i32, i32* %type237, align 4
  %cmp238 = icmp eq i32 %140, 2
  br i1 %cmp238, label %if.then.242, label %lor.lhs.false.239

lor.lhs.false.239:                                ; preds = %for.body.236
  %141 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type240 = getelementptr inbounds %struct.img_par, %struct.img_par* %141, i32 0, i32 10
  %142 = load i32, i32* %type240, align 4
  %cmp241 = icmp eq i32 %142, 4
  br i1 %cmp241, label %if.then.242, label %if.else.252

if.then.242:                                      ; preds = %lor.lhs.false.239, %for.body.236
  %143 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %144 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %144 to i64
  %145 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %transform_size_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %145, i32 0, i32 6
  %arrayidx244 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts, i32 0, i64 %idxprom243
  %146 = load i32, i32* %j, align 4
  %idxprom245 = sext i32 %146 to i64
  %147 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number246 = getelementptr inbounds %struct.img_par, %struct.img_par* %147, i32 0, i32 99
  %148 = load i32, i32* %model_number246, align 4
  %idxprom247 = sext i32 %148 to i64
  %arrayidx248 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], [1 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_I, i32 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx248, i32 0, i64 0
  %arrayidx250 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx249, i32 0, i64 %idxprom245
  %arrayidx251 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx250, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %143, %struct.BiContextType* %arrayidx244, i32* %arrayidx251)
  br label %if.end.263

if.else.252:                                      ; preds = %lor.lhs.false.239
  %149 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %150 = load i32, i32* %j, align 4
  %idxprom253 = sext i32 %150 to i64
  %151 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %transform_size_contexts254 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %151, i32 0, i32 6
  %arrayidx255 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts254, i32 0, i64 %idxprom253
  %152 = load i32, i32* %j, align 4
  %idxprom256 = sext i32 %152 to i64
  %153 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number257 = getelementptr inbounds %struct.img_par, %struct.img_par* %153, i32 0, i32 99
  %154 = load i32, i32* %model_number257, align 4
  %idxprom258 = sext i32 %154 to i64
  %arrayidx259 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], [3 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_P, i32 0, i64 %idxprom258
  %arrayidx260 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx259, i32 0, i64 0
  %arrayidx261 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx260, i32 0, i64 %idxprom256
  %arrayidx262 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx261, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %149, %struct.BiContextType* %arrayidx255, i32* %arrayidx262)
  br label %if.end.263

if.end.263:                                       ; preds = %if.else.252, %if.then.242
  br label %for.inc.264

for.inc.264:                                      ; preds = %if.end.263
  %155 = load i32, i32* %j, align 4
  %inc265 = add nsw i32 %155, 1
  store i32 %inc265, i32* %j, align 4
  br label %for.cond.234

for.end.266:                                      ; preds = %for.cond.234
  store i32 0, i32* %j, align 4
  br label %for.cond.267

for.cond.267:                                     ; preds = %for.inc.297, %for.end.266
  %156 = load i32, i32* %j, align 4
  %cmp268 = icmp slt i32 %156, 2
  br i1 %cmp268, label %for.body.269, label %for.end.299

for.body.269:                                     ; preds = %for.cond.267
  %157 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type270 = getelementptr inbounds %struct.img_par, %struct.img_par* %157, i32 0, i32 10
  %158 = load i32, i32* %type270, align 4
  %cmp271 = icmp eq i32 %158, 2
  br i1 %cmp271, label %if.then.275, label %lor.lhs.false.272

lor.lhs.false.272:                                ; preds = %for.body.269
  %159 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type273 = getelementptr inbounds %struct.img_par, %struct.img_par* %159, i32 0, i32 10
  %160 = load i32, i32* %type273, align 4
  %cmp274 = icmp eq i32 %160, 4
  br i1 %cmp274, label %if.then.275, label %if.else.285

if.then.275:                                      ; preds = %lor.lhs.false.272, %for.body.269
  %161 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %162 = load i32, i32* %j, align 4
  %idxprom276 = sext i32 %162 to i64
  %163 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %ipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %163, i32 0, i32 0
  %arrayidx277 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts, i32 0, i64 %idxprom276
  %164 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %164 to i64
  %165 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number279 = getelementptr inbounds %struct.img_par, %struct.img_par* %165, i32 0, i32 99
  %166 = load i32, i32* %model_number279, align 4
  %idxprom280 = sext i32 %166 to i64
  %arrayidx281 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], [1 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_I, i32 0, i64 %idxprom280
  %arrayidx282 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx281, i32 0, i64 0
  %arrayidx283 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx282, i32 0, i64 %idxprom278
  %arrayidx284 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx283, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %161, %struct.BiContextType* %arrayidx277, i32* %arrayidx284)
  br label %if.end.296

if.else.285:                                      ; preds = %lor.lhs.false.272
  %167 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %168 = load i32, i32* %j, align 4
  %idxprom286 = sext i32 %168 to i64
  %169 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %ipr_contexts287 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %169, i32 0, i32 0
  %arrayidx288 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts287, i32 0, i64 %idxprom286
  %170 = load i32, i32* %j, align 4
  %idxprom289 = sext i32 %170 to i64
  %171 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number290 = getelementptr inbounds %struct.img_par, %struct.img_par* %171, i32 0, i32 99
  %172 = load i32, i32* %model_number290, align 4
  %idxprom291 = sext i32 %172 to i64
  %arrayidx292 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], [3 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_P, i32 0, i64 %idxprom291
  %arrayidx293 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx292, i32 0, i64 0
  %arrayidx294 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx293, i32 0, i64 %idxprom289
  %arrayidx295 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx294, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %167, %struct.BiContextType* %arrayidx288, i32* %arrayidx295)
  br label %if.end.296

if.end.296:                                       ; preds = %if.else.285, %if.then.275
  br label %for.inc.297

for.inc.297:                                      ; preds = %if.end.296
  %173 = load i32, i32* %j, align 4
  %inc298 = add nsw i32 %173, 1
  store i32 %inc298, i32* %j, align 4
  br label %for.cond.267

for.end.299:                                      ; preds = %for.cond.267
  store i32 0, i32* %j, align 4
  br label %for.cond.300

for.cond.300:                                     ; preds = %for.inc.330, %for.end.299
  %174 = load i32, i32* %j, align 4
  %cmp301 = icmp slt i32 %174, 4
  br i1 %cmp301, label %for.body.302, label %for.end.332

for.body.302:                                     ; preds = %for.cond.300
  %175 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type303 = getelementptr inbounds %struct.img_par, %struct.img_par* %175, i32 0, i32 10
  %176 = load i32, i32* %type303, align 4
  %cmp304 = icmp eq i32 %176, 2
  br i1 %cmp304, label %if.then.308, label %lor.lhs.false.305

lor.lhs.false.305:                                ; preds = %for.body.302
  %177 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type306 = getelementptr inbounds %struct.img_par, %struct.img_par* %177, i32 0, i32 10
  %178 = load i32, i32* %type306, align 4
  %cmp307 = icmp eq i32 %178, 4
  br i1 %cmp307, label %if.then.308, label %if.else.318

if.then.308:                                      ; preds = %lor.lhs.false.305, %for.body.302
  %179 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %180 = load i32, i32* %j, align 4
  %idxprom309 = sext i32 %180 to i64
  %181 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %181, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts, i32 0, i64 %idxprom309
  %182 = load i32, i32* %j, align 4
  %idxprom311 = sext i32 %182 to i64
  %183 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number312 = getelementptr inbounds %struct.img_par, %struct.img_par* %183, i32 0, i32 99
  %184 = load i32, i32* %model_number312, align 4
  %idxprom313 = sext i32 %184 to i64
  %arrayidx314 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_I, i32 0, i64 %idxprom313
  %arrayidx315 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx314, i32 0, i64 0
  %arrayidx316 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx315, i32 0, i64 %idxprom311
  %arrayidx317 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx316, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %179, %struct.BiContextType* %arrayidx310, i32* %arrayidx317)
  br label %if.end.329

if.else.318:                                      ; preds = %lor.lhs.false.305
  %185 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %186 = load i32, i32* %j, align 4
  %idxprom319 = sext i32 %186 to i64
  %187 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cipr_contexts320 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %187, i32 0, i32 1
  %arrayidx321 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts320, i32 0, i64 %idxprom319
  %188 = load i32, i32* %j, align 4
  %idxprom322 = sext i32 %188 to i64
  %189 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number323 = getelementptr inbounds %struct.img_par, %struct.img_par* %189, i32 0, i32 99
  %190 = load i32, i32* %model_number323, align 4
  %idxprom324 = sext i32 %190 to i64
  %arrayidx325 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_P, i32 0, i64 %idxprom324
  %arrayidx326 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx325, i32 0, i64 0
  %arrayidx327 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx326, i32 0, i64 %idxprom322
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx327, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %185, %struct.BiContextType* %arrayidx321, i32* %arrayidx328)
  br label %if.end.329

if.end.329:                                       ; preds = %if.else.318, %if.then.308
  br label %for.inc.330

for.inc.330:                                      ; preds = %if.end.329
  %191 = load i32, i32* %j, align 4
  %inc331 = add nsw i32 %191, 1
  store i32 %inc331, i32* %j, align 4
  br label %for.cond.300

for.end.332:                                      ; preds = %for.cond.300
  store i32 0, i32* %i, align 4
  br label %for.cond.333

for.cond.333:                                     ; preds = %for.inc.375, %for.end.332
  %192 = load i32, i32* %i, align 4
  %cmp334 = icmp slt i32 %192, 3
  br i1 %cmp334, label %for.body.335, label %for.end.377

for.body.335:                                     ; preds = %for.cond.333
  store i32 0, i32* %j, align 4
  br label %for.cond.336

for.cond.336:                                     ; preds = %for.inc.372, %for.body.335
  %193 = load i32, i32* %j, align 4
  %cmp337 = icmp slt i32 %193, 4
  br i1 %cmp337, label %for.body.338, label %for.end.374

for.body.338:                                     ; preds = %for.cond.336
  %194 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type339 = getelementptr inbounds %struct.img_par, %struct.img_par* %194, i32 0, i32 10
  %195 = load i32, i32* %type339, align 4
  %cmp340 = icmp eq i32 %195, 2
  br i1 %cmp340, label %if.then.344, label %lor.lhs.false.341

lor.lhs.false.341:                                ; preds = %for.body.338
  %196 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type342 = getelementptr inbounds %struct.img_par, %struct.img_par* %196, i32 0, i32 10
  %197 = load i32, i32* %type342, align 4
  %cmp343 = icmp eq i32 %197, 4
  br i1 %cmp343, label %if.then.344, label %if.else.357

if.then.344:                                      ; preds = %lor.lhs.false.341, %for.body.338
  %198 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %199 = load i32, i32* %j, align 4
  %idxprom345 = sext i32 %199 to i64
  %200 = load i32, i32* %i, align 4
  %idxprom346 = sext i32 %200 to i64
  %201 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %201, i32 0, i32 2
  %arrayidx347 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts, i32 0, i64 %idxprom346
  %arrayidx348 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx347, i32 0, i64 %idxprom345
  %202 = load i32, i32* %j, align 4
  %idxprom349 = sext i32 %202 to i64
  %203 = load i32, i32* %i, align 4
  %idxprom350 = sext i32 %203 to i64
  %204 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number351 = getelementptr inbounds %struct.img_par, %struct.img_par* %204, i32 0, i32 99
  %205 = load i32, i32* %model_number351, align 4
  %idxprom352 = sext i32 %205 to i64
  %arrayidx353 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], [1 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_I, i32 0, i64 %idxprom352
  %arrayidx354 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx353, i32 0, i64 %idxprom350
  %arrayidx355 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx354, i32 0, i64 %idxprom349
  %arrayidx356 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx355, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %198, %struct.BiContextType* %arrayidx348, i32* %arrayidx356)
  br label %if.end.371

if.else.357:                                      ; preds = %lor.lhs.false.341
  %206 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %207 = load i32, i32* %j, align 4
  %idxprom358 = sext i32 %207 to i64
  %208 = load i32, i32* %i, align 4
  %idxprom359 = sext i32 %208 to i64
  %209 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cbp_contexts360 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %209, i32 0, i32 2
  %arrayidx361 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts360, i32 0, i64 %idxprom359
  %arrayidx362 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx361, i32 0, i64 %idxprom358
  %210 = load i32, i32* %j, align 4
  %idxprom363 = sext i32 %210 to i64
  %211 = load i32, i32* %i, align 4
  %idxprom364 = sext i32 %211 to i64
  %212 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number365 = getelementptr inbounds %struct.img_par, %struct.img_par* %212, i32 0, i32 99
  %213 = load i32, i32* %model_number365, align 4
  %idxprom366 = sext i32 %213 to i64
  %arrayidx367 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], [3 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_P, i32 0, i64 %idxprom366
  %arrayidx368 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx367, i32 0, i64 %idxprom364
  %arrayidx369 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx368, i32 0, i64 %idxprom363
  %arrayidx370 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx369, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %206, %struct.BiContextType* %arrayidx362, i32* %arrayidx370)
  br label %if.end.371

if.end.371:                                       ; preds = %if.else.357, %if.then.344
  br label %for.inc.372

for.inc.372:                                      ; preds = %if.end.371
  %214 = load i32, i32* %j, align 4
  %inc373 = add nsw i32 %214, 1
  store i32 %inc373, i32* %j, align 4
  br label %for.cond.336

for.end.374:                                      ; preds = %for.cond.336
  br label %for.inc.375

for.inc.375:                                      ; preds = %for.end.374
  %215 = load i32, i32* %i, align 4
  %inc376 = add nsw i32 %215, 1
  store i32 %inc376, i32* %i, align 4
  br label %for.cond.333

for.end.377:                                      ; preds = %for.cond.333
  store i32 0, i32* %i, align 4
  br label %for.cond.378

for.cond.378:                                     ; preds = %for.inc.420, %for.end.377
  %216 = load i32, i32* %i, align 4
  %cmp379 = icmp slt i32 %216, 8
  br i1 %cmp379, label %for.body.380, label %for.end.422

for.body.380:                                     ; preds = %for.cond.378
  store i32 0, i32* %j, align 4
  br label %for.cond.381

for.cond.381:                                     ; preds = %for.inc.417, %for.body.380
  %217 = load i32, i32* %j, align 4
  %cmp382 = icmp slt i32 %217, 4
  br i1 %cmp382, label %for.body.383, label %for.end.419

for.body.383:                                     ; preds = %for.cond.381
  %218 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type384 = getelementptr inbounds %struct.img_par, %struct.img_par* %218, i32 0, i32 10
  %219 = load i32, i32* %type384, align 4
  %cmp385 = icmp eq i32 %219, 2
  br i1 %cmp385, label %if.then.389, label %lor.lhs.false.386

lor.lhs.false.386:                                ; preds = %for.body.383
  %220 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type387 = getelementptr inbounds %struct.img_par, %struct.img_par* %220, i32 0, i32 10
  %221 = load i32, i32* %type387, align 4
  %cmp388 = icmp eq i32 %221, 4
  br i1 %cmp388, label %if.then.389, label %if.else.402

if.then.389:                                      ; preds = %lor.lhs.false.386, %for.body.383
  %222 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %223 = load i32, i32* %j, align 4
  %idxprom390 = sext i32 %223 to i64
  %224 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %224 to i64
  %225 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %bcbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %225, i32 0, i32 3
  %arrayidx392 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts, i32 0, i64 %idxprom391
  %arrayidx393 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx392, i32 0, i64 %idxprom390
  %226 = load i32, i32* %j, align 4
  %idxprom394 = sext i32 %226 to i64
  %227 = load i32, i32* %i, align 4
  %idxprom395 = sext i32 %227 to i64
  %228 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number396 = getelementptr inbounds %struct.img_par, %struct.img_par* %228, i32 0, i32 99
  %229 = load i32, i32* %model_number396, align 4
  %idxprom397 = sext i32 %229 to i64
  %arrayidx398 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], [1 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_I, i32 0, i64 %idxprom397
  %arrayidx399 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx398, i32 0, i64 %idxprom395
  %arrayidx400 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx399, i32 0, i64 %idxprom394
  %arrayidx401 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx400, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %222, %struct.BiContextType* %arrayidx393, i32* %arrayidx401)
  br label %if.end.416

if.else.402:                                      ; preds = %lor.lhs.false.386
  %230 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %231 = load i32, i32* %j, align 4
  %idxprom403 = sext i32 %231 to i64
  %232 = load i32, i32* %i, align 4
  %idxprom404 = sext i32 %232 to i64
  %233 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %bcbp_contexts405 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %233, i32 0, i32 3
  %arrayidx406 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts405, i32 0, i64 %idxprom404
  %arrayidx407 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx406, i32 0, i64 %idxprom403
  %234 = load i32, i32* %j, align 4
  %idxprom408 = sext i32 %234 to i64
  %235 = load i32, i32* %i, align 4
  %idxprom409 = sext i32 %235 to i64
  %236 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number410 = getelementptr inbounds %struct.img_par, %struct.img_par* %236, i32 0, i32 99
  %237 = load i32, i32* %model_number410, align 4
  %idxprom411 = sext i32 %237 to i64
  %arrayidx412 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], [3 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_P, i32 0, i64 %idxprom411
  %arrayidx413 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx412, i32 0, i64 %idxprom409
  %arrayidx414 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx413, i32 0, i64 %idxprom408
  %arrayidx415 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx414, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %230, %struct.BiContextType* %arrayidx407, i32* %arrayidx415)
  br label %if.end.416

if.end.416:                                       ; preds = %if.else.402, %if.then.389
  br label %for.inc.417

for.inc.417:                                      ; preds = %if.end.416
  %238 = load i32, i32* %j, align 4
  %inc418 = add nsw i32 %238, 1
  store i32 %inc418, i32* %j, align 4
  br label %for.cond.381

for.end.419:                                      ; preds = %for.cond.381
  br label %for.inc.420

for.inc.420:                                      ; preds = %for.end.419
  %239 = load i32, i32* %i, align 4
  %inc421 = add nsw i32 %239, 1
  store i32 %inc421, i32* %i, align 4
  br label %for.cond.378

for.end.422:                                      ; preds = %for.cond.378
  store i32 0, i32* %i, align 4
  br label %for.cond.423

for.cond.423:                                     ; preds = %for.inc.465, %for.end.422
  %240 = load i32, i32* %i, align 4
  %cmp424 = icmp slt i32 %240, 10
  br i1 %cmp424, label %for.body.425, label %for.end.467

for.body.425:                                     ; preds = %for.cond.423
  store i32 0, i32* %j, align 4
  br label %for.cond.426

for.cond.426:                                     ; preds = %for.inc.462, %for.body.425
  %241 = load i32, i32* %j, align 4
  %cmp427 = icmp slt i32 %241, 15
  br i1 %cmp427, label %for.body.428, label %for.end.464

for.body.428:                                     ; preds = %for.cond.426
  %242 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type429 = getelementptr inbounds %struct.img_par, %struct.img_par* %242, i32 0, i32 10
  %243 = load i32, i32* %type429, align 4
  %cmp430 = icmp eq i32 %243, 2
  br i1 %cmp430, label %if.then.434, label %lor.lhs.false.431

lor.lhs.false.431:                                ; preds = %for.body.428
  %244 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type432 = getelementptr inbounds %struct.img_par, %struct.img_par* %244, i32 0, i32 10
  %245 = load i32, i32* %type432, align 4
  %cmp433 = icmp eq i32 %245, 4
  br i1 %cmp433, label %if.then.434, label %if.else.447

if.then.434:                                      ; preds = %lor.lhs.false.431, %for.body.428
  %246 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %247 = load i32, i32* %j, align 4
  %idxprom435 = sext i32 %247 to i64
  %248 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %248 to i64
  %249 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %249, i32 0, i32 4
  %arrayidx437 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts, i32 0, i64 %idxprom436
  %arrayidx438 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx437, i32 0, i64 %idxprom435
  %250 = load i32, i32* %j, align 4
  %idxprom439 = sext i32 %250 to i64
  %251 = load i32, i32* %i, align 4
  %idxprom440 = sext i32 %251 to i64
  %252 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number441 = getelementptr inbounds %struct.img_par, %struct.img_par* %252, i32 0, i32 99
  %253 = load i32, i32* %model_number441, align 4
  %idxprom442 = sext i32 %253 to i64
  %arrayidx443 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_I, i32 0, i64 %idxprom442
  %arrayidx444 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx443, i32 0, i64 %idxprom440
  %arrayidx445 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx444, i32 0, i64 %idxprom439
  %arrayidx446 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx445, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %246, %struct.BiContextType* %arrayidx438, i32* %arrayidx446)
  br label %if.end.461

if.else.447:                                      ; preds = %lor.lhs.false.431
  %254 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %255 = load i32, i32* %j, align 4
  %idxprom448 = sext i32 %255 to i64
  %256 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %256 to i64
  %257 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %map_contexts450 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %257, i32 0, i32 4
  %arrayidx451 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts450, i32 0, i64 %idxprom449
  %arrayidx452 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx451, i32 0, i64 %idxprom448
  %258 = load i32, i32* %j, align 4
  %idxprom453 = sext i32 %258 to i64
  %259 = load i32, i32* %i, align 4
  %idxprom454 = sext i32 %259 to i64
  %260 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number455 = getelementptr inbounds %struct.img_par, %struct.img_par* %260, i32 0, i32 99
  %261 = load i32, i32* %model_number455, align 4
  %idxprom456 = sext i32 %261 to i64
  %arrayidx457 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_P, i32 0, i64 %idxprom456
  %arrayidx458 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx457, i32 0, i64 %idxprom454
  %arrayidx459 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx458, i32 0, i64 %idxprom453
  %arrayidx460 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx459, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %254, %struct.BiContextType* %arrayidx452, i32* %arrayidx460)
  br label %if.end.461

if.end.461:                                       ; preds = %if.else.447, %if.then.434
  br label %for.inc.462

for.inc.462:                                      ; preds = %if.end.461
  %262 = load i32, i32* %j, align 4
  %inc463 = add nsw i32 %262, 1
  store i32 %inc463, i32* %j, align 4
  br label %for.cond.426

for.end.464:                                      ; preds = %for.cond.426
  br label %for.inc.465

for.inc.465:                                      ; preds = %for.end.464
  %263 = load i32, i32* %i, align 4
  %inc466 = add nsw i32 %263, 1
  store i32 %inc466, i32* %i, align 4
  br label %for.cond.423

for.end.467:                                      ; preds = %for.cond.423
  store i32 0, i32* %i, align 4
  br label %for.cond.468

for.cond.468:                                     ; preds = %for.inc.510, %for.end.467
  %264 = load i32, i32* %i, align 4
  %cmp469 = icmp slt i32 %264, 10
  br i1 %cmp469, label %for.body.470, label %for.end.512

for.body.470:                                     ; preds = %for.cond.468
  store i32 0, i32* %j, align 4
  br label %for.cond.471

for.cond.471:                                     ; preds = %for.inc.507, %for.body.470
  %265 = load i32, i32* %j, align 4
  %cmp472 = icmp slt i32 %265, 15
  br i1 %cmp472, label %for.body.473, label %for.end.509

for.body.473:                                     ; preds = %for.cond.471
  %266 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type474 = getelementptr inbounds %struct.img_par, %struct.img_par* %266, i32 0, i32 10
  %267 = load i32, i32* %type474, align 4
  %cmp475 = icmp eq i32 %267, 2
  br i1 %cmp475, label %if.then.479, label %lor.lhs.false.476

lor.lhs.false.476:                                ; preds = %for.body.473
  %268 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type477 = getelementptr inbounds %struct.img_par, %struct.img_par* %268, i32 0, i32 10
  %269 = load i32, i32* %type477, align 4
  %cmp478 = icmp eq i32 %269, 4
  br i1 %cmp478, label %if.then.479, label %if.else.492

if.then.479:                                      ; preds = %lor.lhs.false.476, %for.body.473
  %270 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %271 = load i32, i32* %j, align 4
  %idxprom480 = sext i32 %271 to i64
  %272 = load i32, i32* %i, align 4
  %idxprom481 = sext i32 %272 to i64
  %273 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %273, i32 0, i32 5
  %arrayidx482 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts, i32 0, i64 %idxprom481
  %arrayidx483 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx482, i32 0, i64 %idxprom480
  %274 = load i32, i32* %j, align 4
  %idxprom484 = sext i32 %274 to i64
  %275 = load i32, i32* %i, align 4
  %idxprom485 = sext i32 %275 to i64
  %276 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number486 = getelementptr inbounds %struct.img_par, %struct.img_par* %276, i32 0, i32 99
  %277 = load i32, i32* %model_number486, align 4
  %idxprom487 = sext i32 %277 to i64
  %arrayidx488 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_I, i32 0, i64 %idxprom487
  %arrayidx489 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx488, i32 0, i64 %idxprom485
  %arrayidx490 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx489, i32 0, i64 %idxprom484
  %arrayidx491 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx490, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %270, %struct.BiContextType* %arrayidx483, i32* %arrayidx491)
  br label %if.end.506

if.else.492:                                      ; preds = %lor.lhs.false.476
  %278 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %279 = load i32, i32* %j, align 4
  %idxprom493 = sext i32 %279 to i64
  %280 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %280 to i64
  %281 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %last_contexts495 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %281, i32 0, i32 5
  %arrayidx496 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts495, i32 0, i64 %idxprom494
  %arrayidx497 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx496, i32 0, i64 %idxprom493
  %282 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %282 to i64
  %283 = load i32, i32* %i, align 4
  %idxprom499 = sext i32 %283 to i64
  %284 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number500 = getelementptr inbounds %struct.img_par, %struct.img_par* %284, i32 0, i32 99
  %285 = load i32, i32* %model_number500, align 4
  %idxprom501 = sext i32 %285 to i64
  %arrayidx502 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_P, i32 0, i64 %idxprom501
  %arrayidx503 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx502, i32 0, i64 %idxprom499
  %arrayidx504 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx503, i32 0, i64 %idxprom498
  %arrayidx505 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx504, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %278, %struct.BiContextType* %arrayidx497, i32* %arrayidx505)
  br label %if.end.506

if.end.506:                                       ; preds = %if.else.492, %if.then.479
  br label %for.inc.507

for.inc.507:                                      ; preds = %if.end.506
  %286 = load i32, i32* %j, align 4
  %inc508 = add nsw i32 %286, 1
  store i32 %inc508, i32* %j, align 4
  br label %for.cond.471

for.end.509:                                      ; preds = %for.cond.471
  br label %for.inc.510

for.inc.510:                                      ; preds = %for.end.509
  %287 = load i32, i32* %i, align 4
  %inc511 = add nsw i32 %287, 1
  store i32 %inc511, i32* %i, align 4
  br label %for.cond.468

for.end.512:                                      ; preds = %for.cond.468
  store i32 0, i32* %i, align 4
  br label %for.cond.513

for.cond.513:                                     ; preds = %for.inc.555, %for.end.512
  %288 = load i32, i32* %i, align 4
  %cmp514 = icmp slt i32 %288, 10
  br i1 %cmp514, label %for.body.515, label %for.end.557

for.body.515:                                     ; preds = %for.cond.513
  store i32 0, i32* %j, align 4
  br label %for.cond.516

for.cond.516:                                     ; preds = %for.inc.552, %for.body.515
  %289 = load i32, i32* %j, align 4
  %cmp517 = icmp slt i32 %289, 5
  br i1 %cmp517, label %for.body.518, label %for.end.554

for.body.518:                                     ; preds = %for.cond.516
  %290 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type519 = getelementptr inbounds %struct.img_par, %struct.img_par* %290, i32 0, i32 10
  %291 = load i32, i32* %type519, align 4
  %cmp520 = icmp eq i32 %291, 2
  br i1 %cmp520, label %if.then.524, label %lor.lhs.false.521

lor.lhs.false.521:                                ; preds = %for.body.518
  %292 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type522 = getelementptr inbounds %struct.img_par, %struct.img_par* %292, i32 0, i32 10
  %293 = load i32, i32* %type522, align 4
  %cmp523 = icmp eq i32 %293, 4
  br i1 %cmp523, label %if.then.524, label %if.else.537

if.then.524:                                      ; preds = %lor.lhs.false.521, %for.body.518
  %294 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %295 = load i32, i32* %j, align 4
  %idxprom525 = sext i32 %295 to i64
  %296 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %296 to i64
  %297 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %one_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %297, i32 0, i32 6
  %arrayidx527 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts, i32 0, i64 %idxprom526
  %arrayidx528 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx527, i32 0, i64 %idxprom525
  %298 = load i32, i32* %j, align 4
  %idxprom529 = sext i32 %298 to i64
  %299 = load i32, i32* %i, align 4
  %idxprom530 = sext i32 %299 to i64
  %300 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number531 = getelementptr inbounds %struct.img_par, %struct.img_par* %300, i32 0, i32 99
  %301 = load i32, i32* %model_number531, align 4
  %idxprom532 = sext i32 %301 to i64
  %arrayidx533 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_I, i32 0, i64 %idxprom532
  %arrayidx534 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx533, i32 0, i64 %idxprom530
  %arrayidx535 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx534, i32 0, i64 %idxprom529
  %arrayidx536 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx535, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %294, %struct.BiContextType* %arrayidx528, i32* %arrayidx536)
  br label %if.end.551

if.else.537:                                      ; preds = %lor.lhs.false.521
  %302 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %303 = load i32, i32* %j, align 4
  %idxprom538 = sext i32 %303 to i64
  %304 = load i32, i32* %i, align 4
  %idxprom539 = sext i32 %304 to i64
  %305 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %one_contexts540 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %305, i32 0, i32 6
  %arrayidx541 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts540, i32 0, i64 %idxprom539
  %arrayidx542 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx541, i32 0, i64 %idxprom538
  %306 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %306 to i64
  %307 = load i32, i32* %i, align 4
  %idxprom544 = sext i32 %307 to i64
  %308 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number545 = getelementptr inbounds %struct.img_par, %struct.img_par* %308, i32 0, i32 99
  %309 = load i32, i32* %model_number545, align 4
  %idxprom546 = sext i32 %309 to i64
  %arrayidx547 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_P, i32 0, i64 %idxprom546
  %arrayidx548 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx547, i32 0, i64 %idxprom544
  %arrayidx549 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx548, i32 0, i64 %idxprom543
  %arrayidx550 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx549, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %302, %struct.BiContextType* %arrayidx542, i32* %arrayidx550)
  br label %if.end.551

if.end.551:                                       ; preds = %if.else.537, %if.then.524
  br label %for.inc.552

for.inc.552:                                      ; preds = %if.end.551
  %310 = load i32, i32* %j, align 4
  %inc553 = add nsw i32 %310, 1
  store i32 %inc553, i32* %j, align 4
  br label %for.cond.516

for.end.554:                                      ; preds = %for.cond.516
  br label %for.inc.555

for.inc.555:                                      ; preds = %for.end.554
  %311 = load i32, i32* %i, align 4
  %inc556 = add nsw i32 %311, 1
  store i32 %inc556, i32* %i, align 4
  br label %for.cond.513

for.end.557:                                      ; preds = %for.cond.513
  store i32 0, i32* %i, align 4
  br label %for.cond.558

for.cond.558:                                     ; preds = %for.inc.600, %for.end.557
  %312 = load i32, i32* %i, align 4
  %cmp559 = icmp slt i32 %312, 10
  br i1 %cmp559, label %for.body.560, label %for.end.602

for.body.560:                                     ; preds = %for.cond.558
  store i32 0, i32* %j, align 4
  br label %for.cond.561

for.cond.561:                                     ; preds = %for.inc.597, %for.body.560
  %313 = load i32, i32* %j, align 4
  %cmp562 = icmp slt i32 %313, 5
  br i1 %cmp562, label %for.body.563, label %for.end.599

for.body.563:                                     ; preds = %for.cond.561
  %314 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type564 = getelementptr inbounds %struct.img_par, %struct.img_par* %314, i32 0, i32 10
  %315 = load i32, i32* %type564, align 4
  %cmp565 = icmp eq i32 %315, 2
  br i1 %cmp565, label %if.then.569, label %lor.lhs.false.566

lor.lhs.false.566:                                ; preds = %for.body.563
  %316 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type567 = getelementptr inbounds %struct.img_par, %struct.img_par* %316, i32 0, i32 10
  %317 = load i32, i32* %type567, align 4
  %cmp568 = icmp eq i32 %317, 4
  br i1 %cmp568, label %if.then.569, label %if.else.582

if.then.569:                                      ; preds = %lor.lhs.false.566, %for.body.563
  %318 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %319 = load i32, i32* %j, align 4
  %idxprom570 = sext i32 %319 to i64
  %320 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %320 to i64
  %321 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %abs_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %321, i32 0, i32 7
  %arrayidx572 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts, i32 0, i64 %idxprom571
  %arrayidx573 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx572, i32 0, i64 %idxprom570
  %322 = load i32, i32* %j, align 4
  %idxprom574 = sext i32 %322 to i64
  %323 = load i32, i32* %i, align 4
  %idxprom575 = sext i32 %323 to i64
  %324 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number576 = getelementptr inbounds %struct.img_par, %struct.img_par* %324, i32 0, i32 99
  %325 = load i32, i32* %model_number576, align 4
  %idxprom577 = sext i32 %325 to i64
  %arrayidx578 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_I, i32 0, i64 %idxprom577
  %arrayidx579 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx578, i32 0, i64 %idxprom575
  %arrayidx580 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx579, i32 0, i64 %idxprom574
  %arrayidx581 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx580, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %318, %struct.BiContextType* %arrayidx573, i32* %arrayidx581)
  br label %if.end.596

if.else.582:                                      ; preds = %lor.lhs.false.566
  %326 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %327 = load i32, i32* %j, align 4
  %idxprom583 = sext i32 %327 to i64
  %328 = load i32, i32* %i, align 4
  %idxprom584 = sext i32 %328 to i64
  %329 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %abs_contexts585 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %329, i32 0, i32 7
  %arrayidx586 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts585, i32 0, i64 %idxprom584
  %arrayidx587 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx586, i32 0, i64 %idxprom583
  %330 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %330 to i64
  %331 = load i32, i32* %i, align 4
  %idxprom589 = sext i32 %331 to i64
  %332 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number590 = getelementptr inbounds %struct.img_par, %struct.img_par* %332, i32 0, i32 99
  %333 = load i32, i32* %model_number590, align 4
  %idxprom591 = sext i32 %333 to i64
  %arrayidx592 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_P, i32 0, i64 %idxprom591
  %arrayidx593 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx592, i32 0, i64 %idxprom589
  %arrayidx594 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx593, i32 0, i64 %idxprom588
  %arrayidx595 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx594, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %326, %struct.BiContextType* %arrayidx587, i32* %arrayidx595)
  br label %if.end.596

if.end.596:                                       ; preds = %if.else.582, %if.then.569
  br label %for.inc.597

for.inc.597:                                      ; preds = %if.end.596
  %334 = load i32, i32* %j, align 4
  %inc598 = add nsw i32 %334, 1
  store i32 %inc598, i32* %j, align 4
  br label %for.cond.561

for.end.599:                                      ; preds = %for.cond.561
  br label %for.inc.600

for.inc.600:                                      ; preds = %for.end.599
  %335 = load i32, i32* %i, align 4
  %inc601 = add nsw i32 %335, 1
  store i32 %inc601, i32* %i, align 4
  br label %for.cond.558

for.end.602:                                      ; preds = %for.cond.558
  store i32 0, i32* %i, align 4
  br label %for.cond.603

for.cond.603:                                     ; preds = %for.inc.645, %for.end.602
  %336 = load i32, i32* %i, align 4
  %cmp604 = icmp slt i32 %336, 10
  br i1 %cmp604, label %for.body.605, label %for.end.647

for.body.605:                                     ; preds = %for.cond.603
  store i32 0, i32* %j, align 4
  br label %for.cond.606

for.cond.606:                                     ; preds = %for.inc.642, %for.body.605
  %337 = load i32, i32* %j, align 4
  %cmp607 = icmp slt i32 %337, 15
  br i1 %cmp607, label %for.body.608, label %for.end.644

for.body.608:                                     ; preds = %for.cond.606
  %338 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type609 = getelementptr inbounds %struct.img_par, %struct.img_par* %338, i32 0, i32 10
  %339 = load i32, i32* %type609, align 4
  %cmp610 = icmp eq i32 %339, 2
  br i1 %cmp610, label %if.then.614, label %lor.lhs.false.611

lor.lhs.false.611:                                ; preds = %for.body.608
  %340 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type612 = getelementptr inbounds %struct.img_par, %struct.img_par* %340, i32 0, i32 10
  %341 = load i32, i32* %type612, align 4
  %cmp613 = icmp eq i32 %341, 4
  br i1 %cmp613, label %if.then.614, label %if.else.627

if.then.614:                                      ; preds = %lor.lhs.false.611, %for.body.608
  %342 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %343 = load i32, i32* %j, align 4
  %idxprom615 = sext i32 %343 to i64
  %344 = load i32, i32* %i, align 4
  %idxprom616 = sext i32 %344 to i64
  %345 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %345, i32 0, i32 8
  %arrayidx617 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts, i32 0, i64 %idxprom616
  %arrayidx618 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx617, i32 0, i64 %idxprom615
  %346 = load i32, i32* %j, align 4
  %idxprom619 = sext i32 %346 to i64
  %347 = load i32, i32* %i, align 4
  %idxprom620 = sext i32 %347 to i64
  %348 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number621 = getelementptr inbounds %struct.img_par, %struct.img_par* %348, i32 0, i32 99
  %349 = load i32, i32* %model_number621, align 4
  %idxprom622 = sext i32 %349 to i64
  %arrayidx623 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_I, i32 0, i64 %idxprom622
  %arrayidx624 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx623, i32 0, i64 %idxprom620
  %arrayidx625 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx624, i32 0, i64 %idxprom619
  %arrayidx626 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx625, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %342, %struct.BiContextType* %arrayidx618, i32* %arrayidx626)
  br label %if.end.641

if.else.627:                                      ; preds = %lor.lhs.false.611
  %350 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %351 = load i32, i32* %j, align 4
  %idxprom628 = sext i32 %351 to i64
  %352 = load i32, i32* %i, align 4
  %idxprom629 = sext i32 %352 to i64
  %353 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_map_contexts630 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %353, i32 0, i32 8
  %arrayidx631 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts630, i32 0, i64 %idxprom629
  %arrayidx632 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx631, i32 0, i64 %idxprom628
  %354 = load i32, i32* %j, align 4
  %idxprom633 = sext i32 %354 to i64
  %355 = load i32, i32* %i, align 4
  %idxprom634 = sext i32 %355 to i64
  %356 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number635 = getelementptr inbounds %struct.img_par, %struct.img_par* %356, i32 0, i32 99
  %357 = load i32, i32* %model_number635, align 4
  %idxprom636 = sext i32 %357 to i64
  %arrayidx637 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_P, i32 0, i64 %idxprom636
  %arrayidx638 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx637, i32 0, i64 %idxprom634
  %arrayidx639 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx638, i32 0, i64 %idxprom633
  %arrayidx640 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx639, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %350, %struct.BiContextType* %arrayidx632, i32* %arrayidx640)
  br label %if.end.641

if.end.641:                                       ; preds = %if.else.627, %if.then.614
  br label %for.inc.642

for.inc.642:                                      ; preds = %if.end.641
  %358 = load i32, i32* %j, align 4
  %inc643 = add nsw i32 %358, 1
  store i32 %inc643, i32* %j, align 4
  br label %for.cond.606

for.end.644:                                      ; preds = %for.cond.606
  br label %for.inc.645

for.inc.645:                                      ; preds = %for.end.644
  %359 = load i32, i32* %i, align 4
  %inc646 = add nsw i32 %359, 1
  store i32 %inc646, i32* %i, align 4
  br label %for.cond.603

for.end.647:                                      ; preds = %for.cond.603
  store i32 0, i32* %i, align 4
  br label %for.cond.648

for.cond.648:                                     ; preds = %for.inc.690, %for.end.647
  %360 = load i32, i32* %i, align 4
  %cmp649 = icmp slt i32 %360, 10
  br i1 %cmp649, label %for.body.650, label %for.end.692

for.body.650:                                     ; preds = %for.cond.648
  store i32 0, i32* %j, align 4
  br label %for.cond.651

for.cond.651:                                     ; preds = %for.inc.687, %for.body.650
  %361 = load i32, i32* %j, align 4
  %cmp652 = icmp slt i32 %361, 15
  br i1 %cmp652, label %for.body.653, label %for.end.689

for.body.653:                                     ; preds = %for.cond.651
  %362 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type654 = getelementptr inbounds %struct.img_par, %struct.img_par* %362, i32 0, i32 10
  %363 = load i32, i32* %type654, align 4
  %cmp655 = icmp eq i32 %363, 2
  br i1 %cmp655, label %if.then.659, label %lor.lhs.false.656

lor.lhs.false.656:                                ; preds = %for.body.653
  %364 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %type657 = getelementptr inbounds %struct.img_par, %struct.img_par* %364, i32 0, i32 10
  %365 = load i32, i32* %type657, align 4
  %cmp658 = icmp eq i32 %365, 4
  br i1 %cmp658, label %if.then.659, label %if.else.672

if.then.659:                                      ; preds = %lor.lhs.false.656, %for.body.653
  %366 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %367 = load i32, i32* %j, align 4
  %idxprom660 = sext i32 %367 to i64
  %368 = load i32, i32* %i, align 4
  %idxprom661 = sext i32 %368 to i64
  %369 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %369, i32 0, i32 9
  %arrayidx662 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts, i32 0, i64 %idxprom661
  %arrayidx663 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx662, i32 0, i64 %idxprom660
  %370 = load i32, i32* %j, align 4
  %idxprom664 = sext i32 %370 to i64
  %371 = load i32, i32* %i, align 4
  %idxprom665 = sext i32 %371 to i64
  %372 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number666 = getelementptr inbounds %struct.img_par, %struct.img_par* %372, i32 0, i32 99
  %373 = load i32, i32* %model_number666, align 4
  %idxprom667 = sext i32 %373 to i64
  %arrayidx668 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_I, i32 0, i64 %idxprom667
  %arrayidx669 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx668, i32 0, i64 %idxprom665
  %arrayidx670 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx669, i32 0, i64 %idxprom664
  %arrayidx671 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx670, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %366, %struct.BiContextType* %arrayidx663, i32* %arrayidx671)
  br label %if.end.686

if.else.672:                                      ; preds = %lor.lhs.false.656
  %374 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %375 = load i32, i32* %j, align 4
  %idxprom673 = sext i32 %375 to i64
  %376 = load i32, i32* %i, align 4
  %idxprom674 = sext i32 %376 to i64
  %377 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_last_contexts675 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %377, i32 0, i32 9
  %arrayidx676 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts675, i32 0, i64 %idxprom674
  %arrayidx677 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx676, i32 0, i64 %idxprom673
  %378 = load i32, i32* %j, align 4
  %idxprom678 = sext i32 %378 to i64
  %379 = load i32, i32* %i, align 4
  %idxprom679 = sext i32 %379 to i64
  %380 = load %struct.img_par*, %struct.img_par** %img.addr, align 8
  %model_number680 = getelementptr inbounds %struct.img_par, %struct.img_par* %380, i32 0, i32 99
  %381 = load i32, i32* %model_number680, align 4
  %idxprom681 = sext i32 %381 to i64
  %arrayidx682 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_P, i32 0, i64 %idxprom681
  %arrayidx683 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx682, i32 0, i64 %idxprom679
  %arrayidx684 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx683, i32 0, i64 %idxprom678
  %arrayidx685 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx684, i32 0, i64 0
  call void @biari_init_context(%struct.img_par* %374, %struct.BiContextType* %arrayidx677, i32* %arrayidx685)
  br label %if.end.686

if.end.686:                                       ; preds = %if.else.672, %if.then.659
  br label %for.inc.687

for.inc.687:                                      ; preds = %if.end.686
  %382 = load i32, i32* %j, align 4
  %inc688 = add nsw i32 %382, 1
  store i32 %inc688, i32* %j, align 4
  br label %for.cond.651

for.end.689:                                      ; preds = %for.cond.651
  br label %for.inc.690

for.inc.690:                                      ; preds = %for.end.689
  %383 = load i32, i32* %i, align 4
  %inc691 = add nsw i32 %383, 1
  store i32 %inc691, i32* %i, align 4
  br label %for.cond.648

for.end.692:                                      ; preds = %for.cond.648
  ret void
}

declare void @biari_init_context(%struct.img_par*, %struct.BiContextType*, i32*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
