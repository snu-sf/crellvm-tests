; ModuleID = './MultiSource.Applications.JM/41.lencod.context_ini.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i8**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, i32***, i32***, i32****, i32****, %struct.Picture*, %struct.Slice*, %struct.macroblock*, i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [32 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double**, double***, i32***, double**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [2 x i32], i32, i32, i16, i32, i32, i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, %struct.EncodingEnvironment }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32 }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.macroblock = type { i32, i32, i32, [2 x i32], i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i8], [16 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], [4 x [4 x i32]], i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, [500 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, [5 x double], i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [6 x double], [256 x i8], i32, i32, i32, i32, [2 x [5 x i32]], [2 x [5 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i16]], [16 x [16 x i16]], [16 x [16 x i16]], i32****, i32***, i32, i16, [4 x i32], [4 x i32], i8**, [16 x i8], [16 x i8], i32, i64, i32, i16******, i16******, [2 x [4 x [4 x i8]]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@probability = global [128 x double] [double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 5.000000e-01, double 4.746090e-01, double 4.505070e-01, double 4.276290e-01, double 4.059120e-01, double 3.852990e-01, double 3.657320e-01, double 3.471590e-01, double 3.295300e-01, double 3.127950e-01, double 2.969110e-01, double 2.818330e-01, double 2.675200e-01, double 2.539350e-01, double 2.410390e-01, double 2.287990e-01, double 2.171800e-01, double 2.061510e-01, double 1.956820e-01, double 1.857440e-01, double 1.763120e-01, double 1.673580e-01, double 1.588590e-01, double 1.507920e-01, double 1.431340e-01, double 1.358660e-01, double 1.289660e-01, double 1.224170e-01, double 1.162000e-01, double 1.102990e-01, double 1.046980e-01, double 9.938100e-02, double 9.433400e-02, double 8.954300e-02, double 8.499600e-02, double 8.068000e-02, double 7.658300e-02, double 7.269400e-02, double 6.900200e-02, double 6.549800e-02, double 6.217200e-02, double 5.901400e-02, double 5.601800e-02, double 5.317300e-02, double 5.047300e-02, double 4.790900e-02, double 4.547600e-02, double 4.316700e-02, double 4.097500e-02, double 3.889400e-02, double 3.691900e-02, double 3.504400e-02, double 3.326400e-02, double 3.157500e-02, double 2.997200e-02, double 2.845000e-02, double 2.700500e-02, double 2.563300e-02, double 2.433200e-02, double 2.309600e-02, double 2.192300e-02, double 2.081000e-02, double 1.975300e-02, double 1.875000e-02], align 16
@img = external global %struct.ImageParameters*, align 8
@input = external global %struct.InputParameters*, align 8
@num_mb_per_slice = common global i32 0, align 4
@number_of_slices = common global i32 0, align 4
@initialized = common global i32*** null, align 8
@.str = private unnamed_addr constant [35 x i8] c"create_context_memory: initialized\00", align 1
@model_number = common global i32*** null, align 8
@.str.1 = private unnamed_addr constant [36 x i8] c"create_context_memory: model_number\00", align 1
@entropy = common global [128 x double] zeroinitializer, align 16
@INIT_MB_TYPE_I = internal constant [1 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51]], [11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_TYPE_P = internal constant [3 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 23, i32 33], [2 x i32] [i32 23, i32 2], [2 x i32] [i32 21, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 9], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 -37, i32 118], [2 x i32] [i32 5, i32 57], [2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -11, i32 65], [2 x i32] [i32 1, i32 62]], [11 x [2 x i32]] [[2 x i32] [i32 26, i32 67], [2 x i32] [i32 16, i32 90], [2 x i32] [i32 9, i32 104], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -46, i32 127], [2 x i32] [i32 -20, i32 104], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 18, i32 64], [2 x i32] [i32 9, i32 43], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 22, i32 25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 16, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -2, i32 9], [2 x i32] [i32 4, i32 41], [2 x i32] [i32 -29, i32 118], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 71], [2 x i32] [i32 -13, i32 79], [2 x i32] [i32 5, i32 52]], [11 x [2 x i32]] [[2 x i32] [i32 57, i32 2], [2 x i32] [i32 41, i32 36], [2 x i32] [i32 26, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -45, i32 127], [2 x i32] [i32 -15, i32 101], [2 x i32] [i32 -4, i32 76], [2 x i32] [i32 26, i32 34], [2 x i32] [i32 19, i32 22], [2 x i32] [i32 40, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 29, i32 16], [2 x i32] [i32 25, i32 0], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 51], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -27, i32 99], [2 x i32] [i32 26, i32 16], [2 x i32] [i32 -4, i32 85], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 5, i32 57]], [11 x [2 x i32]] [[2 x i32] [i32 54, i32 0], [2 x i32] [i32 37, i32 42], [2 x i32] [i32 12, i32 97], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -32, i32 127], [2 x i32] [i32 -22, i32 117], [2 x i32] [i32 -2, i32 74], [2 x i32] [i32 20, i32 40], [2 x i32] [i32 20, i32 10], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_I = internal constant [1 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_P = internal constant [3 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 49], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 73], [2 x i32] [i32 17, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 86], [2 x i32] [i32 -17, i32 95], [2 x i32] [i32 -6, i32 61], [2 x i32] [i32 9, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 10, i32 54], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 6, i32 69], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 8, i32 43], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 73], [2 x i32] [i32 14, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -14, i32 88], [2 x i32] [i32 -6, i32 44], [2 x i32] [i32 4, i32 55], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_I = internal constant [1 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_P = internal constant [3 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -3, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -11, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 6, i32 55], [2 x i32] [i32 7, i32 67], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 2, i32 88], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 4, i32 69], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 0, i32 88], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 56], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -6, i32 85], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 2, i32 59], [2 x i32] [i32 2, i32 75], [2 x i32] [i32 -3, i32 87], [2 x i32] [i32 -3, i32 100], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -7, i32 86], [2 x i32] [i32 -5, i32 95], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -11, i32 89], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -15, i32 103], [2 x i32] [i32 -21, i32 116], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 19, i32 57], [2 x i32] [i32 20, i32 58], [2 x i32] [i32 4, i32 84], [2 x i32] [i32 6, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 63], [2 x i32] [i32 6, i32 75], [2 x i32] [i32 -3, i32 90], [2 x i32] [i32 -1, i32 101], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_I = internal constant [1 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_P = internal constant [3 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -7, i32 67], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -5, i32 80], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 1, i32 58]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -1, i32 77], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 -2, i32 86], [2 x i32] [i32 -5, i32 72], [2 x i32] [i32 0, i32 61]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -2, i32 75], [2 x i32] [i32 -12, i32 97], [2 x i32] [i32 -7, i32 50], [2 x i32] [i32 1, i32 60]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_DELTA_QP_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_DELTA_QP_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_MB_AFF_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 11], [2 x i32] [i32 1, i32 55], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_AFF_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 45], [2 x i32] [i32 -4, i32 78], [2 x i32] [i32 -3, i32 96], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 13, i32 15], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 2, i32 80], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 7, i32 34], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -20, i32 127], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_TRANSFORM_SIZE_I = internal constant [1 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 31, i32 21], [2 x i32] [i32 31, i32 31], [2 x i32] [i32 25, i32 50]]]], align 16
@INIT_TRANSFORM_SIZE_P = internal constant [3 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 12, i32 40], [2 x i32] [i32 11, i32 51], [2 x i32] [i32 14, i32 59]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 25, i32 32], [2 x i32] [i32 21, i32 49], [2 x i32] [i32 21, i32 54]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 21, i32 33], [2 x i32] [i32 19, i32 50], [2 x i32] [i32 17, i32 61]]]], align 16
@INIT_IPR_I = internal constant [1 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_IPR_P = internal constant [3 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_CIPR_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CIPR_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CBP_I = internal constant [1 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 127], [2 x i32] [i32 -13, i32 102], [2 x i32] [i32 0, i32 82], [2 x i32] [i32 -7, i32 74]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -31, i32 127], [2 x i32] [i32 -24, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -18, i32 95], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -30, i32 127]]]], align 16
@INIT_CBP_P = internal constant [3 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -27, i32 126], [2 x i32] [i32 -28, i32 98], [2 x i32] [i32 -25, i32 101], [2 x i32] [i32 -23, i32 67]], [4 x [2 x i32]] [[2 x i32] [i32 -28, i32 82], [2 x i32] [i32 -20, i32 94], [2 x i32] [i32 -16, i32 83], [2 x i32] [i32 -22, i32 110]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 91], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -13, i32 93], [2 x i32] [i32 -29, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -39, i32 127], [2 x i32] [i32 -18, i32 91], [2 x i32] [i32 -17, i32 96], [2 x i32] [i32 -26, i32 81]], [4 x [2 x i32]] [[2 x i32] [i32 -35, i32 98], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 -23, i32 97], [2 x i32] [i32 -27, i32 119]], [4 x [2 x i32]] [[2 x i32] [i32 -24, i32 99], [2 x i32] [i32 -21, i32 110], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -36, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -36, i32 127], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 -25, i32 84]], [4 x [2 x i32]] [[2 x i32] [i32 -25, i32 86], [2 x i32] [i32 -12, i32 89], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -14, i32 76], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -37, i32 127]]]], align 16
@INIT_BCBP_I = internal constant [1 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 123], [2 x i32] [i32 -12, i32 115], [2 x i32] [i32 -16, i32 122], [2 x i32] [i32 -11, i32 115]], [4 x [2 x i32]] [[2 x i32] [i32 -12, i32 63], [2 x i32] [i32 -2, i32 68], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -13, i32 104]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -8, i32 93], [2 x i32] [i32 -10, i32 90], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -6, i32 97], [2 x i32] [i32 -7, i32 91], [2 x i32] [i32 -20, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -4, i32 56], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -7, i32 76], [2 x i32] [i32 -22, i32 125]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_BCBP_P = internal constant [3 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -7, i32 92], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 96], [2 x i32] [i32 -13, i32 108]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 46], [2 x i32] [i32 -1, i32 65], [2 x i32] [i32 -1, i32 57], [2 x i32] [i32 -9, i32 93]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -9, i32 92], [2 x i32] [i32 -8, i32 87], [2 x i32] [i32 -23, i32 126]], [4 x [2 x i32]] [[2 x i32] [i32 5, i32 54], [2 x i32] [i32 6, i32 60], [2 x i32] [i32 6, i32 59], [2 x i32] [i32 6, i32 69]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 48], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -8, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 80], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 94], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 39], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -35, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -2, i32 73], [2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -9, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 7, i32 56], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 8, i32 61]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 53], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -7, i32 74], [2 x i32] [i32 -9, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 11, i32 80], [2 x i32] [i32 5, i32 76], [2 x i32] [i32 2, i32 84], [2 x i32] [i32 5, i32 78]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 4, i32 61], [2 x i32] [i32 -14, i32 83], [2 x i32] [i32 -37, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -5, i32 79], [2 x i32] [i32 -11, i32 104], [2 x i32] [i32 -11, i32 91], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 65], [2 x i32] [i32 -2, i32 79], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 56], [2 x i32] [i32 3, i32 68], [2 x i32] [i32 -8, i32 71], [2 x i32] [i32 -13, i32 98]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -7, i32 93], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -5, i32 71], [2 x i32] [i32 -4, i32 63], [2 x i32] [i32 -4, i32 68], [2 x i32] [i32 -12, i32 84], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 -7, i32 65], [2 x i32] [i32 8, i32 61], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 -2, i32 66], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -2, i32 78]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 7, i32 52], [2 x i32] [i32 10, i32 35], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 11, i32 38], [2 x i32] [i32 1, i32 45], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 31, i32 17], [2 x i32] [i32 1, i32 51], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 28, i32 19], [2 x i32] [i32 16, i32 33], [2 x i32] [i32 14, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 -17, i32 120], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -18, i32 114], [2 x i32] [i32 -11, i32 85], [2 x i32] [i32 -15, i32 92], [2 x i32] [i32 -14, i32 89], [2 x i32] [i32 -26, i32 71], [2 x i32] [i32 -15, i32 81], [2 x i32] [i32 -14, i32 80], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -14, i32 70], [2 x i32] [i32 -24, i32 56], [2 x i32] [i32 -23, i32 68], [2 x i32] [i32 -24, i32 50], [2 x i32] [i32 -11, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -13, i32 108], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 -13, i32 101], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -12, i32 94], [2 x i32] [i32 -10, i32 88], [2 x i32] [i32 -16, i32 84], [2 x i32] [i32 -10, i32 86], [2 x i32] [i32 -7, i32 83], [2 x i32] [i32 -13, i32 87], [2 x i32] [i32 -19, i32 94], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 18, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 -8, i32 102], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 0, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 -3, i32 71], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 -13, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 21, i32 37], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 9, i32 57], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 12, i32 72]]]], align 16
@INIT_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -2, i32 85], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -1, i32 75], [2 x i32] [i32 -7, i32 77], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 5, i32 50], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 6, i32 42], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -2, i32 76]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 12, i32 24], [2 x i32] [i32 13, i32 29], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 -10, i32 93], [2 x i32] [i32 -7, i32 73], [2 x i32] [i32 -2, i32 73], [2 x i32] [i32 13, i32 46], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 -7, i32 100]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -5, i32 69], [2 x i32] [i32 -9, i32 70], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -10, i32 68], [2 x i32] [i32 -19, i32 73], [2 x i32] [i32 -12, i32 69], [2 x i32] [i32 -16, i32 70], [2 x i32] [i32 -15, i32 67], [2 x i32] [i32 -20, i32 62], [2 x i32] [i32 -19, i32 70], [2 x i32] [i32 -16, i32 66], [2 x i32] [i32 -22, i32 65], [2 x i32] [i32 -20, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 53], [2 x i32] [i32 2, i32 53], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 -2, i32 61], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 -13, i32 63], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 62], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -6, i32 69], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 14, i32 39], [2 x i32] [i32 4, i32 51], [2 x i32] [i32 13, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 9, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 16, i32 39], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 11, i32 48], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 22, i32 33], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 14, i32 43], [2 x i32] [i32 -1, i32 78], [2 x i32] [i32 0, i32 60], [2 x i32] [i32 9, i32 69]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 103], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -9, i32 89], [2 x i32] [i32 -14, i32 92], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -12, i32 87], [2 x i32] [i32 -23, i32 110], [2 x i32] [i32 -24, i32 105], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -17, i32 99], [2 x i32] [i32 -78, i32 127], [2 x i32] [i32 -70, i32 127], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -46, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 2, i32 59], [2 x i32] [i32 -1, i32 55], [2 x i32] [i32 -7, i32 70], [2 x i32] [i32 -6, i32 75], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 -34, i32 119], [2 x i32] [i32 -3, i32 75], [2 x i32] [i32 32, i32 20], [2 x i32] [i32 30, i32 22], [2 x i32] [i32 -44, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 54], [2 x i32] [i32 -5, i32 61], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -1, i32 60], [2 x i32] [i32 -3, i32 61], [2 x i32] [i32 -8, i32 67], [2 x i32] [i32 -25, i32 84], [2 x i32] [i32 -14, i32 74], [2 x i32] [i32 -5, i32 65], [2 x i32] [i32 5, i32 52], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -11, i32 70], [2 x i32] [i32 18, i32 55]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 71], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 7, i32 61], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 9, i32 32], [2 x i32] [i32 5, i32 43], [2 x i32] [i32 9, i32 47], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 0, i32 51], [2 x i32] [i32 2, i32 46], [2 x i32] [i32 19, i32 38], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 15, i32 38], [2 x i32] [i32 12, i32 42], [2 x i32] [i32 9, i32 34], [2 x i32] [i32 0, i32 89]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -4, i32 86], [2 x i32] [i32 -12, i32 88], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 -16, i32 89], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 5, i32 66], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 -1, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 44], [2 x i32] [i32 -1, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -7, i32 51], [2 x i32] [i32 -4, i32 47], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -3, i32 41], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 8, i32 76], [2 x i32] [i32 -9, i32 78], [2 x i32] [i32 -11, i32 83], [2 x i32] [i32 9, i32 52], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 -5, i32 90]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -8, i32 80], [2 x i32] [i32 -21, i32 83], [2 x i32] [i32 -21, i32 64], [2 x i32] [i32 -13, i32 31], [2 x i32] [i32 -25, i32 64], [2 x i32] [i32 -29, i32 94], [2 x i32] [i32 9, i32 75], [2 x i32] [i32 17, i32 63], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -5, i32 35], [2 x i32] [i32 -2, i32 27], [2 x i32] [i32 13, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 65], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 66], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 -20, i32 81], [2 x i32] [i32 0, i32 30], [2 x i32] [i32 1, i32 7], [2 x i32] [i32 -3, i32 23], [2 x i32] [i32 -21, i32 74], [2 x i32] [i32 16, i32 66], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 17, i32 37], [2 x i32] [i32 44, i32 -18], [2 x i32] [i32 50, i32 -34], [2 x i32] [i32 -22, i32 127]]]], align 16
@INIT_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 24, i32 0], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 8, i32 25], [2 x i32] [i32 13, i32 18], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 13, i32 19], [2 x i32] [i32 10, i32 37], [2 x i32] [i32 12, i32 18], [2 x i32] [i32 6, i32 29], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 15, i32 30], [2 x i32] [i32 4, i32 45], [2 x i32] [i32 1, i32 58], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 7, i32 61]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 38], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 15, i32 39], [2 x i32] [i32 11, i32 42], [2 x i32] [i32 13, i32 44], [2 x i32] [i32 16, i32 45], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 49], [2 x i32] [i32 30, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 10, i32 55], [2 x i32] [i32 17, i32 51], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 0, i32 89]], [15 x [2 x i32]] [[2 x i32] [i32 23, i32 -13], [2 x i32] [i32 26, i32 -13], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 49, i32 -14], [2 x i32] [i32 44, i32 3], [2 x i32] [i32 45, i32 6], [2 x i32] [i32 44, i32 34], [2 x i32] [i32 33, i32 54], [2 x i32] [i32 19, i32 82], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 26, i32 -19], [2 x i32] [i32 22, i32 -17], [2 x i32] [i32 26, i32 -17], [2 x i32] [i32 30, i32 -25], [2 x i32] [i32 28, i32 -20], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 37, i32 -27], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 40, i32 -28], [2 x i32] [i32 38, i32 -17], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 41, i32 -6], [2 x i32] [i32 38, i32 1], [2 x i32] [i32 41, i32 17]], [15 x [2 x i32]] [[2 x i32] [i32 30, i32 -6], [2 x i32] [i32 27, i32 3], [2 x i32] [i32 26, i32 22], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 37, i32 -16], [2 x i32] [i32 35, i32 -4], [2 x i32] [i32 38, i32 -8], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 37, i32 3], [2 x i32] [i32 38, i32 5], [2 x i32] [i32 42, i32 0], [2 x i32] [i32 35, i32 16], [2 x i32] [i32 39, i32 22], [2 x i32] [i32 14, i32 48], [2 x i32] [i32 27, i32 37], [2 x i32] [i32 21, i32 60], [2 x i32] [i32 12, i32 68], [2 x i32] [i32 2, i32 97]]]], align 16
@INIT_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 11, i32 28], [2 x i32] [i32 2, i32 40], [2 x i32] [i32 3, i32 44], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 2, i32 44], [2 x i32] [i32 2, i32 51], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 4, i32 39], [2 x i32] [i32 2, i32 62], [2 x i32] [i32 6, i32 46], [2 x i32] [i32 0, i32 54], [2 x i32] [i32 3, i32 54], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 4, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 51], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 7, i32 53], [2 x i32] [i32 6, i32 52], [2 x i32] [i32 6, i32 55], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 14, i32 36], [2 x i32] [i32 8, i32 53], [2 x i32] [i32 -1, i32 82], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 -3, i32 78], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 22, i32 31], [2 x i32] [i32 -1, i32 84]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 26, i32 -9], [2 x i32] [i32 33, i32 -9], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 41, i32 -2], [2 x i32] [i32 45, i32 3], [2 x i32] [i32 49, i32 9], [2 x i32] [i32 45, i32 27], [2 x i32] [i32 36, i32 59], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 25, i32 7], [2 x i32] [i32 30, i32 -7], [2 x i32] [i32 28, i32 3], [2 x i32] [i32 28, i32 4], [2 x i32] [i32 32, i32 0], [2 x i32] [i32 34, i32 -1], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 32, i32 9], [2 x i32] [i32 31, i32 19], [2 x i32] [i32 26, i32 27], [2 x i32] [i32 26, i32 30], [2 x i32] [i32 37, i32 20], [2 x i32] [i32 28, i32 34], [2 x i32] [i32 17, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 30], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 24, i32 31], [2 x i32] [i32 23, i32 38], [2 x i32] [i32 18, i32 43], [2 x i32] [i32 20, i32 41], [2 x i32] [i32 11, i32 63], [2 x i32] [i32 9, i32 59], [2 x i32] [i32 9, i32 64], [2 x i32] [i32 -1, i32 94], [2 x i32] [i32 -2, i32 89], [2 x i32] [i32 -9, i32 108]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 45], [2 x i32] [i32 10, i32 28], [2 x i32] [i32 10, i32 31], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 52, i32 -43], [2 x i32] [i32 18, i32 15], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 35, i32 -22], [2 x i32] [i32 38, i32 -25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 39, i32 -18], [2 x i32] [i32 32, i32 -12], [2 x i32] [i32 102, i32 -94], [2 x i32] zeroinitializer, [2 x i32] [i32 56, i32 -15]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 33, i32 -4], [2 x i32] [i32 29, i32 10], [2 x i32] [i32 37, i32 -5], [2 x i32] [i32 51, i32 -29], [2 x i32] [i32 39, i32 -9], [2 x i32] [i32 52, i32 -34], [2 x i32] [i32 69, i32 -58], [2 x i32] [i32 67, i32 -63], [2 x i32] [i32 44, i32 -5], [2 x i32] [i32 32, i32 7], [2 x i32] [i32 55, i32 -29], [2 x i32] [i32 32, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 27, i32 36]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 33, i32 -25], [2 x i32] [i32 34, i32 -30], [2 x i32] [i32 36, i32 -28], [2 x i32] [i32 38, i32 -28], [2 x i32] [i32 38, i32 -27], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 35, i32 -16], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 32, i32 -8], [2 x i32] [i32 37, i32 -6], [2 x i32] [i32 35, i32 0], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 28, i32 18], [2 x i32] [i32 26, i32 25], [2 x i32] [i32 29, i32 41]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 14, i32 35], [2 x i32] [i32 18, i32 31], [2 x i32] [i32 17, i32 35], [2 x i32] [i32 21, i32 30], [2 x i32] [i32 17, i32 45], [2 x i32] [i32 20, i32 42], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 27, i32 26], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 7, i32 66], [2 x i32] [i32 16, i32 56], [2 x i32] [i32 11, i32 73], [2 x i32] [i32 10, i32 67], [2 x i32] [i32 -10, i32 116]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 39], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 7, i32 34], [2 x i32] [i32 11, i32 29], [2 x i32] [i32 8, i32 31], [2 x i32] [i32 6, i32 37], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 3, i32 40], [2 x i32] [i32 8, i32 33], [2 x i32] [i32 13, i32 43], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 4, i32 47], [2 x i32] [i32 3, i32 55], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 6, i32 60]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 8, i32 44], [2 x i32] [i32 11, i32 44], [2 x i32] [i32 14, i32 42], [2 x i32] [i32 7, i32 48], [2 x i32] [i32 4, i32 56], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 13, i32 37], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 19, i32 58], [2 x i32] [i32 10, i32 48], [2 x i32] [i32 12, i32 45], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 8, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 35, i32 -18], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 28, i32 -3], [2 x i32] [i32 24, i32 10], [2 x i32] [i32 27, i32 0], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 52, i32 -44], [2 x i32] [i32 39, i32 -24], [2 x i32] [i32 19, i32 17], [2 x i32] [i32 31, i32 25], [2 x i32] [i32 36, i32 29], [2 x i32] [i32 24, i32 33], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 22, i32 73]], [15 x [2 x i32]] [[2 x i32] [i32 20, i32 34], [2 x i32] [i32 19, i32 31], [2 x i32] [i32 27, i32 44], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 19, i32 16], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 21, i32 28], [2 x i32] [i32 25, i32 21], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 42], [2 x i32] [i32 0, i32 93], [2 x i32] [i32 14, i32 56], [2 x i32] [i32 15, i32 57], [2 x i32] [i32 26, i32 38], [2 x i32] [i32 -24, i32 127]]]], align 16
@INIT_ONE_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -3, i32 71], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -5, i32 50], [2 x i32] [i32 -3, i32 54], [2 x i32] [i32 -2, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 67], [2 x i32] [i32 -5, i32 27], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 46]], [5 x [2 x i32]] [[2 x i32] [i32 -3, i32 75], [2 x i32] [i32 -1, i32 23], [2 x i32] [i32 1, i32 34], [2 x i32] [i32 1, i32 43], [2 x i32] [i32 0, i32 54]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -15, i32 55], [2 x i32] [i32 -10, i32 60], [2 x i32] [i32 -6, i32 62], [2 x i32] [i32 -4, i32 65]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -20, i32 84], [2 x i32] [i32 -11, i32 79], [2 x i32] [i32 -6, i32 73], [2 x i32] [i32 -4, i32 74]], [5 x [2 x i32]] [[2 x i32] [i32 -8, i32 78], [2 x i32] [i32 -5, i32 33], [2 x i32] [i32 -4, i32 48], [2 x i32] [i32 -2, i32 53], [2 x i32] [i32 -3, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ONE_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 45], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 -3, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 77], [2 x i32] [i32 3, i32 24], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 0, i32 48], [2 x i32] [i32 0, i32 55]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 66], [2 x i32] [i32 -7, i32 35], [2 x i32] [i32 -7, i32 42], [2 x i32] [i32 -8, i32 45], [2 x i32] [i32 -5, i32 48]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 1, i32 58], [2 x i32] [i32 -3, i32 29], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 1, i32 38], [2 x i32] [i32 2, i32 43]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 70], [2 x i32] [i32 -4, i32 29], [2 x i32] [i32 5, i32 31], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 1, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 8, i32 5], [2 x i32] [i32 10, i32 14], [2 x i32] [i32 14, i32 18], [2 x i32] [i32 13, i32 27]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -23, i32 112], [2 x i32] [i32 -15, i32 71], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 -5, i32 66]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 101], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -5, i32 53], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 -11, i32 75]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 71], [2 x i32] [i32 0, i32 24], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 -2, i32 42], [2 x i32] [i32 -2, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 76], [2 x i32] [i32 -10, i32 44], [2 x i32] [i32 -10, i32 52], [2 x i32] [i32 -10, i32 57], [2 x i32] [i32 -9, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 66], [2 x i32] [i32 -9, i32 34], [2 x i32] [i32 1, i32 32], [2 x i32] [i32 11, i32 31], [2 x i32] [i32 5, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 52], [2 x i32] [i32 7, i32 4], [2 x i32] [i32 10, i32 8], [2 x i32] [i32 17, i32 8], [2 x i32] [i32 16, i32 19]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -24, i32 115], [2 x i32] [i32 -22, i32 82], [2 x i32] [i32 -9, i32 62], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 0, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 100], [2 x i32] [i32 -14, i32 57], [2 x i32] [i32 -12, i32 67], [2 x i32] [i32 -11, i32 71], [2 x i32] [i32 -10, i32 77]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -7, i32 37], [2 x i32] [i32 -8, i32 44], [2 x i32] [i32 -11, i32 49], [2 x i32] [i32 -10, i32 56]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -10, i32 82], [2 x i32] [i32 -8, i32 48], [2 x i32] [i32 -8, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -7, i32 70]], [5 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -22, i32 69], [2 x i32] [i32 -16, i32 75], [2 x i32] [i32 -2, i32 58], [2 x i32] [i32 1, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 81], [2 x i32] [i32 -6, i32 38], [2 x i32] [i32 -13, i32 62], [2 x i32] [i32 -6, i32 58], [2 x i32] [i32 -2, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -2, i32 72], [2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -9, i32 91]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 64], [2 x i32] [i32 -8, i32 68], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -6, i32 77], [2 x i32] [i32 -10, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -9, i32 92]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 73], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -7, i32 80], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -17, i32 110]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -13, i32 96], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -19, i32 117], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 71], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -12, i32 86], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -14, i32 97]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 -8, i32 82], [2 x i32] [i32 -17, i32 102]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 59], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -12, i32 83], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -30, i32 119]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 56], [2 x i32] [i32 -6, i32 60], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -8, i32 76]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -10, i32 90]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 58], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 40], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 79], [2 x i32] [i32 -8, i32 85]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -11, i32 77], [2 x i32] [i32 -9, i32 80], [2 x i32] [i32 -9, i32 84], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -34, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -15, i32 77], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -25, i32 107], [2 x i32] [i32 -25, i32 111], [2 x i32] [i32 -28, i32 122]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 57], [2 x i32] [i32 -6, i32 63], [2 x i32] [i32 -4, i32 65], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -7, i32 82]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 72], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -9, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 -2, i32 67], [2 x i32] [i32 0, i32 73], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 37], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -5, i32 73], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -4, i32 78]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -14, i32 85], [2 x i32] [i32 -13, i32 89], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -11, i32 92], [2 x i32] [i32 -29, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 85], [2 x i32] [i32 -16, i32 88], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -15, i32 98], [2 x i32] [i32 -37, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 59], [2 x i32] [i32 -8, i32 63], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -6, i32 68], [2 x i32] [i32 -10, i32 79]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -14, i32 75], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -18, i32 108]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 -13, i32 99], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 73], [2 x i32] [i32 -10, i32 76], [2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -10, i32 87]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_FLD_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -6, i32 84], [2 x i32] [i32 -8, i32 79], [2 x i32] [i32 0, i32 66], [2 x i32] [i32 -1, i32 71], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -2, i32 60], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -4, i32 58], [2 x i32] [i32 -9, i32 66], [2 x i32] [i32 -1, i32 79], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 3, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 14, i32 40], [2 x i32] [i32 16, i32 27], [2 x i32] [i32 12, i32 29], [2 x i32] [i32 1, i32 44], [2 x i32] [i32 20, i32 36], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 5, i32 42], [2 x i32] [i32 1, i32 48], [2 x i32] [i32 10, i32 62], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 9, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -14, i32 106], [2 x i32] [i32 -13, i32 97], [2 x i32] [i32 -15, i32 90], [2 x i32] [i32 -12, i32 90], [2 x i32] [i32 -18, i32 88], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -9, i32 79], [2 x i32] [i32 -14, i32 86], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -10, i32 70], [2 x i32] [i32 -10, i32 69], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -9, i32 64], [2 x i32] [i32 -5, i32 58], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -16, i32 96], [2 x i32] [i32 -7, i32 88], [2 x i32] [i32 -8, i32 85], [2 x i32] [i32 -7, i32 85], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -13, i32 88], [2 x i32] [i32 4, i32 66], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 10, i32 58], [2 x i32] [i32 -1, i32 76], [2 x i32] [i32 -1, i32 83]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 99], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 2, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 76], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 0, i32 70], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -14, i32 73], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 4, i32 62], [2 x i32] [i32 -1, i32 68], [2 x i32] [i32 -13, i32 75], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 12, i32 70]]]], align 16
@INIT_FLD_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -16, i32 106], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -18, i32 110], [2 x i32] [i32 -14, i32 98], [2 x i32] [i32 -22, i32 110], [2 x i32] [i32 -21, i32 106], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -23, i32 108], [2 x i32] [i32 -26, i32 112], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 -12, i32 95], [2 x i32] [i32 -5, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -9, i32 93], [2 x i32] [i32 -22, i32 94], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 -4, i32 80], [2 x i32] [i32 -10, i32 85], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 7, i32 60], [2 x i32] [i32 9, i32 58], [2 x i32] [i32 5, i32 61], [2 x i32] [i32 12, i32 50], [2 x i32] [i32 15, i32 50], [2 x i32] [i32 18, i32 49], [2 x i32] [i32 17, i32 54]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 10, i32 41], [2 x i32] [i32 7, i32 46], [2 x i32] [i32 -1, i32 51], [2 x i32] [i32 7, i32 49], [2 x i32] [i32 8, i32 52], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 6, i32 47], [2 x i32] [i32 2, i32 55], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 6, i32 50], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 13, i32 49], [2 x i32] [i32 4, i32 63], [2 x i32] [i32 6, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 6, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 9, i32 31], [2 x i32] [i32 12, i32 43], [2 x i32] [i32 3, i32 53], [2 x i32] [i32 14, i32 34], [2 x i32] [i32 10, i32 38], [2 x i32] [i32 -3, i32 52], [2 x i32] [i32 13, i32 40], [2 x i32] [i32 17, i32 32], [2 x i32] [i32 7, i32 44], [2 x i32] [i32 7, i32 38], [2 x i32] [i32 13, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 26, i32 43]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -21, i32 126], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 -20, i32 110], [2 x i32] [i32 -26, i32 126], [2 x i32] [i32 -25, i32 124], [2 x i32] [i32 -17, i32 105], [2 x i32] [i32 -27, i32 121], [2 x i32] [i32 -27, i32 117], [2 x i32] [i32 -17, i32 102], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -27, i32 116], [2 x i32] [i32 -33, i32 122], [2 x i32] [i32 -10, i32 95], [2 x i32] [i32 -14, i32 100], [2 x i32] [i32 -8, i32 95]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 111], [2 x i32] [i32 -28, i32 114], [2 x i32] [i32 -6, i32 89], [2 x i32] [i32 -2, i32 80], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -8, i32 81], [2 x i32] [i32 -1, i32 72], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 9, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 1, i32 69], [2 x i32] [i32 7, i32 69]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -12, i32 72], [2 x i32] [i32 -14, i32 68], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -4, i32 61], [2 x i32] [i32 -9, i32 60], [2 x i32] [i32 1, i32 54], [2 x i32] [i32 2, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -16, i32 77], [2 x i32] [i32 -2, i32 64], [2 x i32] [i32 2, i32 61], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -3, i32 64], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -3, i32 65], [2 x i32] [i32 -3, i32 66], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 9, i32 51], [2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 -2, i32 75]], [15 x [2 x i32]] [[2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 37], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 11, i32 37], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 41], [2 x i32] [i32 2, i32 48], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 3, i32 50], [2 x i32] [i32 19, i32 40], [2 x i32] [i32 3, i32 66], [2 x i32] [i32 18, i32 50]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -22, i32 127], [2 x i32] [i32 -25, i32 127], [2 x i32] [i32 -25, i32 120], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -19, i32 114], [2 x i32] [i32 -23, i32 117], [2 x i32] [i32 -25, i32 118], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -24, i32 113], [2 x i32] [i32 -28, i32 118], [2 x i32] [i32 -31, i32 120], [2 x i32] [i32 -37, i32 124], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 -15, i32 102], [2 x i32] [i32 -10, i32 99]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -5, i32 92], [2 x i32] [i32 17, i32 57], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -12, i32 91], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 -1, i32 73], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 15, i32 57]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -10, i32 67], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 77], [2 x i32] [i32 2, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 14, i32 54], [2 x i32] [i32 15, i32 44], [2 x i32] [i32 5, i32 60], [2 x i32] [i32 2, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 76], [2 x i32] [i32 -18, i32 86], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 -12, i32 70], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 74], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 7, i32 54], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -11, i32 82], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 25, i32 42]]]], align 16
@INIT_FLD_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 15, i32 6], [2 x i32] [i32 6, i32 19], [2 x i32] [i32 7, i32 16], [2 x i32] [i32 12, i32 14], [2 x i32] [i32 18, i32 13], [2 x i32] [i32 13, i32 11], [2 x i32] [i32 13, i32 15], [2 x i32] [i32 15, i32 16], [2 x i32] [i32 12, i32 23], [2 x i32] [i32 13, i32 23], [2 x i32] [i32 15, i32 20], [2 x i32] [i32 14, i32 26], [2 x i32] [i32 14, i32 44], [2 x i32] [i32 17, i32 40], [2 x i32] [i32 17, i32 47]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 17], [2 x i32] [i32 21, i32 21], [2 x i32] [i32 25, i32 22], [2 x i32] [i32 31, i32 27], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 19, i32 35], [2 x i32] [i32 14, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 7, i32 63], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -3, i32 94], [2 x i32] [i32 9, i32 69], [2 x i32] [i32 -12, i32 109]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -10], [2 x i32] [i32 24, i32 -11], [2 x i32] [i32 28, i32 -8], [2 x i32] [i32 28, i32 -1], [2 x i32] [i32 29, i32 3], [2 x i32] [i32 29, i32 9], [2 x i32] [i32 35, i32 20], [2 x i32] [i32 29, i32 36], [2 x i32] [i32 14, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -35], [2 x i32] [i32 36, i32 -34], [2 x i32] [i32 32, i32 -26], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 44, i32 -32], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 34, i32 -15], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 33, i32 -7], [2 x i32] [i32 35, i32 -5], [2 x i32] [i32 33, i32 0], [2 x i32] [i32 38, i32 2], [2 x i32] [i32 33, i32 13], [2 x i32] [i32 23, i32 35], [2 x i32] [i32 13, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 29, i32 -3], [2 x i32] [i32 26, i32 0], [2 x i32] [i32 22, i32 30], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 31, i32 -7], [2 x i32] [i32 35, i32 -15], [2 x i32] [i32 34, i32 -3], [2 x i32] [i32 34, i32 3], [2 x i32] [i32 36, i32 -1], [2 x i32] [i32 34, i32 5], [2 x i32] [i32 32, i32 11], [2 x i32] [i32 35, i32 5], [2 x i32] [i32 34, i32 12], [2 x i32] [i32 39, i32 11], [2 x i32] [i32 30, i32 29], [2 x i32] [i32 34, i32 26], [2 x i32] [i32 29, i32 39], [2 x i32] [i32 19, i32 66]]]], align 16
@INIT_FLD_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 14, i32 11], [2 x i32] [i32 11, i32 14], [2 x i32] [i32 9, i32 11], [2 x i32] [i32 18, i32 11], [2 x i32] [i32 21, i32 9], [2 x i32] [i32 23, i32 -2], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 34, i32 -21], [2 x i32] [i32 39, i32 -23], [2 x i32] [i32 42, i32 -33], [2 x i32] [i32 41, i32 -31], [2 x i32] [i32 46, i32 -28], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 21, i32 29]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 45, i32 -24], [2 x i32] [i32 53, i32 -45], [2 x i32] [i32 48, i32 -26], [2 x i32] [i32 65, i32 -43], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 39, i32 -10], [2 x i32] [i32 30, i32 9], [2 x i32] [i32 18, i32 26], [2 x i32] [i32 20, i32 27], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -14, i32 82], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -19, i32 97], [2 x i32] [i32 -35, i32 125]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -13], [2 x i32] [i32 33, i32 -14], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 46, i32 -2], [2 x i32] [i32 51, i32 2], [2 x i32] [i32 60, i32 6], [2 x i32] [i32 61, i32 17], [2 x i32] [i32 55, i32 34], [2 x i32] [i32 42, i32 62], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 27, i32 0], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 27, i32 6], [2 x i32] [i32 34, i32 8], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 24, i32 22], [2 x i32] [i32 33, i32 19], [2 x i32] [i32 22, i32 32], [2 x i32] [i32 26, i32 31], [2 x i32] [i32 21, i32 41], [2 x i32] [i32 26, i32 44], [2 x i32] [i32 23, i32 47], [2 x i32] [i32 16, i32 65], [2 x i32] [i32 14, i32 71]], [15 x [2 x i32]] [[2 x i32] [i32 8, i32 60], [2 x i32] [i32 6, i32 63], [2 x i32] [i32 17, i32 65], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 21, i32 24], [2 x i32] [i32 23, i32 20], [2 x i32] [i32 26, i32 23], [2 x i32] [i32 27, i32 32], [2 x i32] [i32 28, i32 23], [2 x i32] [i32 28, i32 24], [2 x i32] [i32 23, i32 40], [2 x i32] [i32 24, i32 32], [2 x i32] [i32 28, i32 29], [2 x i32] [i32 23, i32 42], [2 x i32] [i32 19, i32 57], [2 x i32] [i32 22, i32 53], [2 x i32] [i32 22, i32 61], [2 x i32] [i32 11, i32 86]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 19, i32 -6], [2 x i32] [i32 18, i32 -6], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 26, i32 -12], [2 x i32] [i32 31, i32 -16], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 33, i32 -22], [2 x i32] [i32 37, i32 -28], [2 x i32] [i32 39, i32 -30], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 47, i32 -42], [2 x i32] [i32 45, i32 -36], [2 x i32] [i32 49, i32 -34], [2 x i32] [i32 41, i32 -17], [2 x i32] [i32 32, i32 9]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 69, i32 -71], [2 x i32] [i32 63, i32 -63], [2 x i32] [i32 66, i32 -64], [2 x i32] [i32 77, i32 -74], [2 x i32] [i32 54, i32 -39], [2 x i32] [i32 52, i32 -35], [2 x i32] [i32 41, i32 -10], [2 x i32] [i32 36, i32 0], [2 x i32] [i32 40, i32 -1], [2 x i32] [i32 30, i32 14], [2 x i32] [i32 28, i32 26], [2 x i32] [i32 23, i32 37], [2 x i32] [i32 12, i32 55], [2 x i32] [i32 11, i32 65]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 37, i32 -33], [2 x i32] [i32 39, i32 -36], [2 x i32] [i32 40, i32 -37], [2 x i32] [i32 38, i32 -30], [2 x i32] [i32 46, i32 -33], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 40, i32 -24], [2 x i32] [i32 49, i32 -29], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 40, i32 -10], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 46, i32 -5], [2 x i32] [i32 31, i32 20], [2 x i32] [i32 29, i32 30], [2 x i32] [i32 25, i32 44]], [15 x [2 x i32]] [[2 x i32] [i32 12, i32 48], [2 x i32] [i32 11, i32 49], [2 x i32] [i32 26, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 22, i32 22], [2 x i32] [i32 23, i32 22], [2 x i32] [i32 27, i32 21], [2 x i32] [i32 33, i32 20], [2 x i32] [i32 26, i32 28], [2 x i32] [i32 30, i32 24], [2 x i32] [i32 27, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 25, i32 39], [2 x i32] [i32 18, i32 50], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 21, i32 54], [2 x i32] [i32 14, i32 71], [2 x i32] [i32 11, i32 83]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 17, i32 -13], [2 x i32] [i32 16, i32 -9], [2 x i32] [i32 17, i32 -12], [2 x i32] [i32 27, i32 -21], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 41, i32 -40], [2 x i32] [i32 42, i32 -41], [2 x i32] [i32 48, i32 -47], [2 x i32] [i32 39, i32 -32], [2 x i32] [i32 46, i32 -40], [2 x i32] [i32 52, i32 -51], [2 x i32] [i32 46, i32 -41], [2 x i32] [i32 52, i32 -39], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 32, i32 11]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 61, i32 -55], [2 x i32] [i32 56, i32 -46], [2 x i32] [i32 62, i32 -50], [2 x i32] [i32 81, i32 -67], [2 x i32] [i32 45, i32 -20], [2 x i32] [i32 35, i32 -2], [2 x i32] [i32 28, i32 15], [2 x i32] [i32 34, i32 1], [2 x i32] [i32 39, i32 1], [2 x i32] [i32 30, i32 17], [2 x i32] [i32 20, i32 38], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 15, i32 54], [2 x i32] [i32 0, i32 79]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -16], [2 x i32] [i32 37, i32 -14], [2 x i32] [i32 37, i32 -17], [2 x i32] [i32 32, i32 1], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 29, i32 15], [2 x i32] [i32 24, i32 25], [2 x i32] [i32 34, i32 22], [2 x i32] [i32 31, i32 16], [2 x i32] [i32 35, i32 18], [2 x i32] [i32 31, i32 28], [2 x i32] [i32 33, i32 41], [2 x i32] [i32 36, i32 28], [2 x i32] [i32 27, i32 47], [2 x i32] [i32 21, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 18, i32 31], [2 x i32] [i32 19, i32 26], [2 x i32] [i32 36, i32 24], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 23], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 30], [2 x i32] [i32 31, i32 29], [2 x i32] [i32 22, i32 41], [2 x i32] [i32 22, i32 42], [2 x i32] [i32 16, i32 60], [2 x i32] [i32 15, i32 52], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 3, i32 78], [2 x i32] [i32 -16, i32 123], [2 x i32] [i32 21, i32 53], [2 x i32] [i32 22, i32 56], [2 x i32] [i32 25, i32 61]]]], align 16
@color_formats = common global i32 0, align 4
@top_pic = common global %struct.Picture* null, align 8
@bottom_pic = common global %struct.Picture* null, align 8
@frame_pic = common global %struct.Picture* null, align 8
@frame_pic_1 = common global %struct.Picture* null, align 8
@frame_pic_2 = common global %struct.Picture* null, align 8
@frame_pic_3 = common global %struct.Picture* null, align 8
@frame_pic_si = common global %struct.Picture* null, align 8
@Bit_Buffer = common global i64* null, align 8
@imgY_org = common global i16** null, align 8
@imgUV_org = common global i16*** null, align 8
@imgY_sub_tmp = common global i32** null, align 8
@PicPos = common global i32** null, align 8
@log2_max_frame_num_minus4 = common global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common global i32 0, align 4
@me_tot_time = common global i64 0, align 8
@me_time = common global i64 0, align 8
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@dsr_new_search_range = common global i32 0, align 4
@mb_adaptive = common global i32 0, align 4
@MBPairIsField = common global i32 0, align 4
@wp_weight = common global i32*** null, align 8
@wp_offset = common global i32*** null, align 8
@wbp_weight = common global i32**** null, align 8
@luma_log_weight_denom = common global i32 0, align 4
@chroma_log_weight_denom = common global i32 0, align 4
@wp_luma_round = common global i32 0, align 4
@wp_chroma_round = common global i32 0, align 4
@imgY_org_top = common global i16** null, align 8
@imgY_org_bot = common global i16** null, align 8
@imgUV_org_top = common global i16*** null, align 8
@imgUV_org_bot = common global i16*** null, align 8
@imgY_org_frm = common global i16** null, align 8
@imgUV_org_frm = common global i16*** null, align 8
@imgY_com = common global i16** null, align 8
@imgUV_com = common global i16*** null, align 8
@direct_ref_idx = common global i8*** null, align 8
@direct_pdir = common global i8** null, align 8
@pixel_map = common global i8** null, align 8
@refresh_map = common global i8** null, align 8
@intras = common global i32 0, align 4
@frame_ctr = common global [5 x i32] zeroinitializer, align 16
@frame_no = common global i32 0, align 4
@nextP_tr_fld = common global i32 0, align 4
@nextP_tr_frm = common global i32 0, align 4
@tot_time = common global i64 0, align 8
@errortext = common global [300 x i8] zeroinitializer, align 16
@b8_ipredmode8x8 = common global [4 x [4 x i8]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common global [16 x i8] zeroinitializer, align 16
@gop_structure = common global %struct.GOP_DATA* null, align 8
@rdopt = common global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common global %struct._IO_FILE* null, align 8
@p_log = common global %struct._IO_FILE* null, align 8
@p_trace = common global %struct._IO_FILE* null, align 8
@p_in = common global i32 0, align 4
@p_dec = common global i32 0, align 4
@mb16x16_cost_frame = common global double* null, align 8
@Bytes_After_Header = common global i32 0, align 4
@encode_one_macroblock = common global void ()* null, align 8
@lrec = common global i32** null, align 8
@lrec_uv = common global i32*** null, align 8
@si_frame_indicator = common global i32 0, align 4
@sp2_frame_indicator = common global i32 0, align 4
@number_sp2_frames = common global i32 0, align 4
@giRDOpt_B8OnlyFlag = common global i32 0, align 4
@imgY_tmp = common global i16** null, align 8
@imgUV_tmp = common global [2 x i16**] zeroinitializer, align 16
@frameNuminGOP = common global i32 0, align 4
@redundant_coding = common global i32 0, align 4
@key_frame = common global i32 0, align 4
@redundant_ref_idx = common global i32 0, align 4
@img_pad_size_uv_x = common global i32 0, align 4
@img_pad_size_uv_y = common global i32 0, align 4
@chroma_mask_mv_y = common global i8 0, align 1
@chroma_mask_mv_x = common global i8 0, align 1
@chroma_shift_y = common global i32 0, align 4
@chroma_shift_x = common global i32 0, align 4
@shift_cr_x = common global i32 0, align 4
@shift_cr_y = common global i32 0, align 4
@img_padded_size_x = common global i32 0, align 4
@img_cr_padded_size_x = common global i32 0, align 4
@start_me_refinement_hp = common global i32 0, align 4
@start_me_refinement_qp = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define void @create_context_memory() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %num_mb = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 120
  %1 = load i32, i32* %FrameSizeInMbs, align 4
  store i32 %1, i32* %num_mb, align 4
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i32 0, i32 21
  %3 = load i32, i32* %slice_mode, align 4
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_argument = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 22
  %5 = load i32, i32* %slice_argument, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %num_mb, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ]
  store i32 %cond, i32* @num_mb_per_slice, align 4
  %7 = load i32, i32* %num_mb, align 4
  %8 = load i32, i32* @num_mb_per_slice, align 4
  %add = add nsw i32 %7, %8
  %sub = sub nsw i32 %add, 1
  %9 = load i32, i32* @num_mb_per_slice, align 4
  %div = sdiv i32 %sub, %9
  store i32 %div, i32* @number_of_slices, align 4
  %call = call noalias i8* @malloc(i64 24) #4
  %10 = bitcast i8* %call to i32***
  store i32*** %10, i32**** @initialized, align 8
  %cmp1 = icmp eq i32*** %10, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %call2 = call noalias i8* @malloc(i64 24) #4
  %11 = bitcast i8* %call2 to i32***
  store i32*** %11, i32**** @model_number, align 8
  %cmp3 = icmp eq i32*** %11, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.end
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.40, %if.end.5
  %12 = load i32, i32* %k, align 4
  %cmp6 = icmp slt i32 %12, 3
  br i1 %cmp6, label %for.body, label %for.end.42

for.body:                                         ; preds = %for.cond
  %call7 = call noalias i8* @malloc(i64 32) #4
  %13 = bitcast i8* %call7 to i32**
  %14 = load i32, i32* %k, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load i32***, i32**** @initialized, align 8
  %arrayidx = getelementptr inbounds i32**, i32*** %15, i64 %idxprom
  store i32** %13, i32*** %arrayidx, align 8
  %cmp8 = icmp eq i32** %13, null
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %for.body
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0))
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.9, %for.body
  %call11 = call noalias i8* @malloc(i64 32) #4
  %16 = bitcast i8* %call11 to i32**
  %17 = load i32, i32* %k, align 4
  %idxprom12 = sext i32 %17 to i64
  %18 = load i32***, i32**** @model_number, align 8
  %arrayidx13 = getelementptr inbounds i32**, i32*** %18, i64 %idxprom12
  store i32** %16, i32*** %arrayidx13, align 8
  %cmp14 = icmp eq i32** %16, null
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.10
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %if.end.10
  store i32 0, i32* %i, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc, %if.end.16
  %19 = load i32, i32* %i, align 4
  %cmp18 = icmp slt i32 %19, 4
  br i1 %cmp18, label %for.body.19, label %for.end

for.body.19:                                      ; preds = %for.cond.17
  %20 = load i32, i32* @number_of_slices, align 4
  %conv = sext i32 %20 to i64
  %mul = mul i64 %conv, 4
  %call20 = call noalias i8* @malloc(i64 %mul) #4
  %21 = bitcast i8* %call20 to i32*
  %22 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %22 to i64
  %23 = load i32, i32* %k, align 4
  %idxprom22 = sext i32 %23 to i64
  %24 = load i32***, i32**** @initialized, align 8
  %arrayidx23 = getelementptr inbounds i32**, i32*** %24, i64 %idxprom22
  %25 = load i32**, i32*** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i32*, i32** %25, i64 %idxprom21
  store i32* %21, i32** %arrayidx24, align 8
  %cmp25 = icmp eq i32* %21, null
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %for.body.19
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0))
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.27, %for.body.19
  %26 = load i32, i32* @number_of_slices, align 4
  %conv29 = sext i32 %26 to i64
  %mul30 = mul i64 %conv29, 4
  %call31 = call noalias i8* @malloc(i64 %mul30) #4
  %27 = bitcast i8* %call31 to i32*
  %28 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %28 to i64
  %29 = load i32, i32* %k, align 4
  %idxprom33 = sext i32 %29 to i64
  %30 = load i32***, i32**** @model_number, align 8
  %arrayidx34 = getelementptr inbounds i32**, i32*** %30, i64 %idxprom33
  %31 = load i32**, i32*** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i32*, i32** %31, i64 %idxprom32
  store i32* %27, i32** %arrayidx35, align 8
  %cmp36 = icmp eq i32* %27, null
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.end.28
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.38, %if.end.28
  br label %for.inc

for.inc:                                          ; preds = %if.end.39
  %32 = load i32, i32* %i, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.17

for.end:                                          ; preds = %for.cond.17
  br label %for.inc.40

for.inc.40:                                       ; preds = %for.end
  %33 = load i32, i32* %k, align 4
  %inc41 = add nsw i32 %33, 1
  store i32 %inc41, i32* %k, align 4
  br label %for.cond

for.end.42:                                       ; preds = %for.cond
  store i32 0, i32* %k, align 4
  br label %for.cond.43

for.cond.43:                                      ; preds = %for.inc.67, %for.end.42
  %34 = load i32, i32* %k, align 4
  %cmp44 = icmp slt i32 %34, 3
  br i1 %cmp44, label %for.body.46, label %for.end.69

for.body.46:                                      ; preds = %for.cond.43
  store i32 0, i32* %i, align 4
  br label %for.cond.47

for.cond.47:                                      ; preds = %for.inc.64, %for.body.46
  %35 = load i32, i32* %i, align 4
  %cmp48 = icmp slt i32 %35, 4
  br i1 %cmp48, label %for.body.50, label %for.end.66

for.body.50:                                      ; preds = %for.cond.47
  store i32 0, i32* %j, align 4
  br label %for.cond.51

for.cond.51:                                      ; preds = %for.inc.61, %for.body.50
  %36 = load i32, i32* %j, align 4
  %37 = load i32, i32* @number_of_slices, align 4
  %cmp52 = icmp slt i32 %36, %37
  br i1 %cmp52, label %for.body.54, label %for.end.63

for.body.54:                                      ; preds = %for.cond.51
  %38 = load i32, i32* %j, align 4
  %idxprom55 = sext i32 %38 to i64
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %40 = load i32, i32* %k, align 4
  %idxprom57 = sext i32 %40 to i64
  %41 = load i32***, i32**** @initialized, align 8
  %arrayidx58 = getelementptr inbounds i32**, i32*** %41, i64 %idxprom57
  %42 = load i32**, i32*** %arrayidx58, align 8
  %arrayidx59 = getelementptr inbounds i32*, i32** %42, i64 %idxprom56
  %43 = load i32*, i32** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds i32, i32* %43, i64 %idxprom55
  store i32 0, i32* %arrayidx60, align 4
  br label %for.inc.61

for.inc.61:                                       ; preds = %for.body.54
  %44 = load i32, i32* %j, align 4
  %inc62 = add nsw i32 %44, 1
  store i32 %inc62, i32* %j, align 4
  br label %for.cond.51

for.end.63:                                       ; preds = %for.cond.51
  br label %for.inc.64

for.inc.64:                                       ; preds = %for.end.63
  %45 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %45, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond.47

for.end.66:                                       ; preds = %for.cond.47
  br label %for.inc.67

for.inc.67:                                       ; preds = %for.end.66
  %46 = load i32, i32* %k, align 4
  %inc68 = add nsw i32 %46, 1
  store i32 %inc68, i32* %k, align 4
  br label %for.cond.43

for.end.69:                                       ; preds = %for.cond.43
  store i32 0, i32* %k, align 4
  br label %for.cond.70

for.cond.70:                                      ; preds = %for.inc.96, %for.end.69
  %47 = load i32, i32* %k, align 4
  %cmp71 = icmp slt i32 %47, 64
  br i1 %cmp71, label %for.body.73, label %for.end.98

for.body.73:                                      ; preds = %for.cond.70
  %48 = load i32, i32* %k, align 4
  %sub74 = sub nsw i32 127, %48
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom75
  %49 = load double, double* %arrayidx76, align 8
  %sub77 = fsub double 1.000000e+00, %49
  %50 = load i32, i32* %k, align 4
  %idxprom78 = sext i32 %50 to i64
  %arrayidx79 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom78
  store double %sub77, double* %arrayidx79, align 8
  %51 = load i32, i32* %k, align 4
  %idxprom80 = sext i32 %51 to i64
  %arrayidx81 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom80
  %52 = load double, double* %arrayidx81, align 8
  %call82 = call double @log10(double %52) #4
  %call83 = call double @log10(double 2.000000e+00) #4
  %div84 = fdiv double %call82, %call83
  %53 = load i32, i32* %k, align 4
  %idxprom85 = sext i32 %53 to i64
  %arrayidx86 = getelementptr inbounds [128 x double], [128 x double]* @entropy, i32 0, i64 %idxprom85
  store double %div84, double* %arrayidx86, align 8
  %54 = load i32, i32* %k, align 4
  %sub87 = sub nsw i32 127, %54
  %idxprom88 = sext i32 %sub87 to i64
  %arrayidx89 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom88
  %55 = load double, double* %arrayidx89, align 8
  %call90 = call double @log10(double %55) #4
  %call91 = call double @log10(double 2.000000e+00) #4
  %div92 = fdiv double %call90, %call91
  %56 = load i32, i32* %k, align 4
  %sub93 = sub nsw i32 127, %56
  %idxprom94 = sext i32 %sub93 to i64
  %arrayidx95 = getelementptr inbounds [128 x double], [128 x double]* @entropy, i32 0, i64 %idxprom94
  store double %div92, double* %arrayidx95, align 8
  br label %for.inc.96

for.inc.96:                                       ; preds = %for.body.73
  %57 = load i32, i32* %k, align 4
  %inc97 = add nsw i32 %57, 1
  store i32 %inc97, i32* %k, align 4
  br label %for.cond.70

for.end.98:                                       ; preds = %for.cond.70
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

declare void @no_mem_exit(i8*) #2

; Function Attrs: nounwind
declare double @log10(double) #1

; Function Attrs: nounwind uwtable
define void @free_context_memory() #0 {
entry:
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.14, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end.16

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %1, 4
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32, i32* %k, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load i32***, i32**** @initialized, align 8
  %arrayidx = getelementptr inbounds i32**, i32*** %4, i64 %idxprom4
  %5 = load i32**, i32*** %arrayidx, align 8
  %arrayidx5 = getelementptr inbounds i32*, i32** %5, i64 %idxprom
  %6 = load i32*, i32** %arrayidx5, align 8
  %7 = bitcast i32* %6 to i8*
  call void @free(i8* %7) #4
  %8 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %8 to i64
  %9 = load i32, i32* %k, align 4
  %idxprom7 = sext i32 %9 to i64
  %10 = load i32***, i32**** @model_number, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 %idxprom7
  %11 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %11, i64 %idxprom6
  %12 = load i32*, i32** %arrayidx9, align 8
  %13 = bitcast i32* %12 to i8*
  call void @free(i8* %13) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body.3
  %14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  %15 = load i32, i32* %k, align 4
  %idxprom10 = sext i32 %15 to i64
  %16 = load i32***, i32**** @initialized, align 8
  %arrayidx11 = getelementptr inbounds i32**, i32*** %16, i64 %idxprom10
  %17 = load i32**, i32*** %arrayidx11, align 8
  %18 = bitcast i32** %17 to i8*
  call void @free(i8* %18) #4
  %19 = load i32, i32* %k, align 4
  %idxprom12 = sext i32 %19 to i64
  %20 = load i32***, i32**** @model_number, align 8
  %arrayidx13 = getelementptr inbounds i32**, i32*** %20, i64 %idxprom12
  %21 = load i32**, i32*** %arrayidx13, align 8
  %22 = bitcast i32** %21 to i8*
  call void @free(i8* %22) #4
  br label %for.inc.14

for.inc.14:                                       ; preds = %for.end
  %23 = load i32, i32* %k, align 4
  %inc15 = add nsw i32 %23, 1
  store i32 %inc15, i32* %k, align 4
  br label %for.cond

for.end.16:                                       ; preds = %for.cond
  %24 = load i32***, i32**** @initialized, align 8
  %25 = bitcast i32*** %24 to i8*
  call void @free(i8* %25) #4
  %26 = load i32***, i32**** @model_number, align 8
  %27 = bitcast i32*** %26 to i8*
  call void @free(i8* %27) #4
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define void @SetCtxModelNumber() #0 {
entry:
  %frame_field = alloca i32, align 4
  %img_type = alloca i32, align 4
  %ctx_number = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_picture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 110
  %1 = load i32, i32* %field_picture, align 4
  store i32 %1, i32* %frame_field, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 5
  %3 = load i32, i32* %type, align 4
  store i32 %3, i32* %img_type, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 60
  %5 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %start_mb_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %5, i32 0, i32 3
  %6 = load i32, i32* %start_mb_nr, align 4
  %7 = load i32, i32* @num_mb_per_slice, align 4
  %div = sdiv i32 %6, %7
  store i32 %div, i32* %ctx_number, align 4
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 5
  %9 = load i32, i32* %type1, align 4
  %cmp = icmp eq i32 %9, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 127
  store i32 0, i32* %model_number, align 4
  br label %if.end.39

if.end:                                           ; preds = %entry
  %11 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %context_init_method = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %11, i32 0, i32 151
  %12 = load i32, i32* %context_init_method, align 4
  %cmp2 = icmp eq i32 %12, 0
  br i1 %cmp2, label %if.then.3, label %if.end.6

if.then.3:                                        ; preds = %if.end
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %model_number4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 152
  %14 = load i32, i32* %model_number4, align 4
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 127
  store i32 %14, i32* %model_number5, align 4
  br label %if.end.39

if.end.6:                                         ; preds = %if.end
  %16 = load i32, i32* %ctx_number, align 4
  %idxprom = sext i32 %16 to i64
  %17 = load i32, i32* %img_type, align 4
  %idxprom7 = sext i32 %17 to i64
  %18 = load i32, i32* %frame_field, align 4
  %idxprom8 = sext i32 %18 to i64
  %19 = load i32***, i32**** @initialized, align 8
  %arrayidx = getelementptr inbounds i32**, i32*** %19, i64 %idxprom8
  %20 = load i32**, i32*** %arrayidx, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %20, i64 %idxprom7
  %21 = load i32*, i32** %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds i32, i32* %21, i64 %idxprom
  %22 = load i32, i32* %arrayidx10, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.end.6
  %23 = load i32, i32* %ctx_number, align 4
  %idxprom12 = sext i32 %23 to i64
  %24 = load i32, i32* %img_type, align 4
  %idxprom13 = sext i32 %24 to i64
  %25 = load i32, i32* %frame_field, align 4
  %idxprom14 = sext i32 %25 to i64
  %26 = load i32***, i32**** @model_number, align 8
  %arrayidx15 = getelementptr inbounds i32**, i32*** %26, i64 %idxprom14
  %27 = load i32**, i32*** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i32*, i32** %27, i64 %idxprom13
  %28 = load i32*, i32** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i32, i32* %28, i64 %idxprom12
  %29 = load i32, i32* %arrayidx17, align 4
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 127
  store i32 %29, i32* %model_number18, align 4
  br label %if.end.39

if.else:                                          ; preds = %if.end.6
  %31 = load i32, i32* %ctx_number, align 4
  %tobool19 = icmp ne i32 %31, 0
  br i1 %tobool19, label %land.lhs.true, label %if.else.36

land.lhs.true:                                    ; preds = %if.else
  %32 = load i32, i32* %ctx_number, align 4
  %sub = sub nsw i32 %32, 1
  %idxprom20 = sext i32 %sub to i64
  %33 = load i32, i32* %img_type, align 4
  %idxprom21 = sext i32 %33 to i64
  %34 = load i32, i32* %frame_field, align 4
  %idxprom22 = sext i32 %34 to i64
  %35 = load i32***, i32**** @initialized, align 8
  %arrayidx23 = getelementptr inbounds i32**, i32*** %35, i64 %idxprom22
  %36 = load i32**, i32*** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i32*, i32** %36, i64 %idxprom21
  %37 = load i32*, i32** %arrayidx24, align 8
  %arrayidx25 = getelementptr inbounds i32, i32* %37, i64 %idxprom20
  %38 = load i32, i32* %arrayidx25, align 4
  %tobool26 = icmp ne i32 %38, 0
  br i1 %tobool26, label %if.then.27, label %if.else.36

if.then.27:                                       ; preds = %land.lhs.true
  %39 = load i32, i32* %ctx_number, align 4
  %sub28 = sub nsw i32 %39, 1
  %idxprom29 = sext i32 %sub28 to i64
  %40 = load i32, i32* %img_type, align 4
  %idxprom30 = sext i32 %40 to i64
  %41 = load i32, i32* %frame_field, align 4
  %idxprom31 = sext i32 %41 to i64
  %42 = load i32***, i32**** @model_number, align 8
  %arrayidx32 = getelementptr inbounds i32**, i32*** %42, i64 %idxprom31
  %43 = load i32**, i32*** %arrayidx32, align 8
  %arrayidx33 = getelementptr inbounds i32*, i32** %43, i64 %idxprom30
  %44 = load i32*, i32** %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %44, i64 %idxprom29
  %45 = load i32, i32* %arrayidx34, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number35 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 127
  store i32 %45, i32* %model_number35, align 4
  br label %if.end.38

if.else.36:                                       ; preds = %land.lhs.true, %if.else
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number37 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 127
  store i32 0, i32* %model_number37, align 4
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.36, %if.then.27
  br label %if.end.39

if.end.39:                                        ; preds = %if.then, %if.then.3, %if.end.38, %if.then.11
  ret void
}

; Function Attrs: nounwind uwtable
define void @init_contexts() #0 {
entry:
  %mc = alloca %struct.MotionInfoContexts*, align 8
  %tc = alloca %struct.TextureInfoContexts*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 60
  %1 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %mot_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %1, i32 0, i32 7
  %2 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mot_ctx, align 8
  store %struct.MotionInfoContexts* %2, %struct.MotionInfoContexts** %mc, align 8
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 60
  %4 = load %struct.Slice*, %struct.Slice** %currentSlice1, align 8
  %tex_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %4, i32 0, i32 8
  %5 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tex_ctx, align 8
  store %struct.TextureInfoContexts* %5, %struct.TextureInfoContexts** %tc, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.28, %entry
  %6 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %6, 3
  br i1 %cmp, label %for.body, label %for.end.30

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %for.body
  %7 = load i32, i32* %j, align 4
  %cmp3 = icmp slt i32 %7, 11
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.2
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 5
  %9 = load i32, i32* %type, align 4
  %cmp5 = icmp eq i32 %9, 2
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %for.body.4
  %10 = load i32, i32* %j, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %11 to i64
  %12 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %12, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [11 x %struct.BiContextType]], [3 x [11 x %struct.BiContextType]]* %mb_type_contexts, i32 0, i64 %idxprom6
  %arrayidx7 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx, i32 0, i64 %idxprom
  %13 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %13 to i64
  %14 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 127
  %16 = load i32, i32* %model_number, align 4
  %idxprom10 = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], [1 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_I, i32 0, i64 %idxprom10
  %arrayidx12 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx11, i32 0, i64 %idxprom9
  %arrayidx13 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx12, i32 0, i64 %idxprom8
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx13, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx7, i32* %arrayidx14)
  br label %if.end

if.else:                                          ; preds = %for.body.4
  %17 = load i32, i32* %j, align 4
  %idxprom15 = sext i32 %17 to i64
  %18 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %18 to i64
  %19 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_type_contexts17 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %19, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], [3 x [11 x %struct.BiContextType]]* %mb_type_contexts17, i32 0, i64 %idxprom16
  %arrayidx19 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx18, i32 0, i64 %idxprom15
  %20 = load i32, i32* %j, align 4
  %idxprom20 = sext i32 %20 to i64
  %21 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %21 to i64
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 127
  %23 = load i32, i32* %model_number22, align 4
  %idxprom23 = sext i32 %23 to i64
  %arrayidx24 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], [3 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_P, i32 0, i64 %idxprom23
  %arrayidx25 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx24, i32 0, i64 %idxprom21
  %arrayidx26 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx25, i32 0, i64 %idxprom20
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx19, i32* %arrayidx27)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %j, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.2

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.28

for.inc.28:                                       ; preds = %for.end
  %25 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %25, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond

for.end.30:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.31

for.cond.31:                                      ; preds = %for.inc.70, %for.end.30
  %26 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %26, 2
  br i1 %cmp32, label %for.body.33, label %for.end.72

for.body.33:                                      ; preds = %for.cond.31
  store i32 0, i32* %j, align 4
  br label %for.cond.34

for.cond.34:                                      ; preds = %for.inc.67, %for.body.33
  %27 = load i32, i32* %j, align 4
  %cmp35 = icmp slt i32 %27, 9
  br i1 %cmp35, label %for.body.36, label %for.end.69

for.body.36:                                      ; preds = %for.cond.34
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type37 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 5
  %29 = load i32, i32* %type37, align 4
  %cmp38 = icmp eq i32 %29, 2
  br i1 %cmp38, label %if.then.39, label %if.else.52

if.then.39:                                       ; preds = %for.body.36
  %30 = load i32, i32* %j, align 4
  %idxprom40 = sext i32 %30 to i64
  %31 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %31 to i64
  %32 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %b8_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %32, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx42, i32 0, i64 %idxprom40
  %33 = load i32, i32* %j, align 4
  %idxprom44 = sext i32 %33 to i64
  %34 = load i32, i32* %i, align 4
  %idxprom45 = sext i32 %34 to i64
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number46 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 127
  %36 = load i32, i32* %model_number46, align 4
  %idxprom47 = sext i32 %36 to i64
  %arrayidx48 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], [1 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_I, i32 0, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx48, i32 0, i64 %idxprom45
  %arrayidx50 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx49, i32 0, i64 %idxprom44
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx50, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx43, i32* %arrayidx51)
  br label %if.end.66

if.else.52:                                       ; preds = %for.body.36
  %37 = load i32, i32* %j, align 4
  %idxprom53 = sext i32 %37 to i64
  %38 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %38 to i64
  %39 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %b8_type_contexts55 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %39, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts55, i32 0, i64 %idxprom54
  %arrayidx57 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx56, i32 0, i64 %idxprom53
  %40 = load i32, i32* %j, align 4
  %idxprom58 = sext i32 %40 to i64
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number60 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 127
  %43 = load i32, i32* %model_number60, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], [3 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_P, i32 0, i64 %idxprom61
  %arrayidx63 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx62, i32 0, i64 %idxprom59
  %arrayidx64 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx63, i32 0, i64 %idxprom58
  %arrayidx65 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx64, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx57, i32* %arrayidx65)
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.52, %if.then.39
  br label %for.inc.67

for.inc.67:                                       ; preds = %if.end.66
  %44 = load i32, i32* %j, align 4
  %inc68 = add nsw i32 %44, 1
  store i32 %inc68, i32* %j, align 4
  br label %for.cond.34

for.end.69:                                       ; preds = %for.cond.34
  br label %for.inc.70

for.inc.70:                                       ; preds = %for.end.69
  %45 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %45, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond.31

for.end.72:                                       ; preds = %for.cond.31
  store i32 0, i32* %i, align 4
  br label %for.cond.73

for.cond.73:                                      ; preds = %for.inc.112, %for.end.72
  %46 = load i32, i32* %i, align 4
  %cmp74 = icmp slt i32 %46, 2
  br i1 %cmp74, label %for.body.75, label %for.end.114

for.body.75:                                      ; preds = %for.cond.73
  store i32 0, i32* %j, align 4
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.109, %for.body.75
  %47 = load i32, i32* %j, align 4
  %cmp77 = icmp slt i32 %47, 10
  br i1 %cmp77, label %for.body.78, label %for.end.111

for.body.78:                                      ; preds = %for.cond.76
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type79 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 5
  %49 = load i32, i32* %type79, align 4
  %cmp80 = icmp eq i32 %49, 2
  br i1 %cmp80, label %if.then.81, label %if.else.94

if.then.81:                                       ; preds = %for.body.78
  %50 = load i32, i32* %j, align 4
  %idxprom82 = sext i32 %50 to i64
  %51 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %51 to i64
  %52 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mv_res_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %52, i32 0, i32 2
  %arrayidx84 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts, i32 0, i64 %idxprom83
  %arrayidx85 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx84, i32 0, i64 %idxprom82
  %53 = load i32, i32* %j, align 4
  %idxprom86 = sext i32 %53 to i64
  %54 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %54 to i64
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %model_number88, align 4
  %idxprom89 = sext i32 %56 to i64
  %arrayidx90 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], [1 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_I, i32 0, i64 %idxprom89
  %arrayidx91 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx90, i32 0, i64 %idxprom87
  %arrayidx92 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx91, i32 0, i64 %idxprom86
  %arrayidx93 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx92, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx85, i32* %arrayidx93)
  br label %if.end.108

if.else.94:                                       ; preds = %for.body.78
  %57 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %57 to i64
  %58 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %58 to i64
  %59 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mv_res_contexts97 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %59, i32 0, i32 2
  %arrayidx98 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts97, i32 0, i64 %idxprom96
  %arrayidx99 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx98, i32 0, i64 %idxprom95
  %60 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %60 to i64
  %61 = load i32, i32* %i, align 4
  %idxprom101 = sext i32 %61 to i64
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number102 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i32 0, i32 127
  %63 = load i32, i32* %model_number102, align 4
  %idxprom103 = sext i32 %63 to i64
  %arrayidx104 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], [3 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_P, i32 0, i64 %idxprom103
  %arrayidx105 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx104, i32 0, i64 %idxprom101
  %arrayidx106 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx105, i32 0, i64 %idxprom100
  %arrayidx107 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx106, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx99, i32* %arrayidx107)
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.94, %if.then.81
  br label %for.inc.109

for.inc.109:                                      ; preds = %if.end.108
  %64 = load i32, i32* %j, align 4
  %inc110 = add nsw i32 %64, 1
  store i32 %inc110, i32* %j, align 4
  br label %for.cond.76

for.end.111:                                      ; preds = %for.cond.76
  br label %for.inc.112

for.inc.112:                                      ; preds = %for.end.111
  %65 = load i32, i32* %i, align 4
  %inc113 = add nsw i32 %65, 1
  store i32 %inc113, i32* %i, align 4
  br label %for.cond.73

for.end.114:                                      ; preds = %for.cond.73
  store i32 0, i32* %i, align 4
  br label %for.cond.115

for.cond.115:                                     ; preds = %for.inc.154, %for.end.114
  %66 = load i32, i32* %i, align 4
  %cmp116 = icmp slt i32 %66, 2
  br i1 %cmp116, label %for.body.117, label %for.end.156

for.body.117:                                     ; preds = %for.cond.115
  store i32 0, i32* %j, align 4
  br label %for.cond.118

for.cond.118:                                     ; preds = %for.inc.151, %for.body.117
  %67 = load i32, i32* %j, align 4
  %cmp119 = icmp slt i32 %67, 6
  br i1 %cmp119, label %for.body.120, label %for.end.153

for.body.120:                                     ; preds = %for.cond.118
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 5
  %69 = load i32, i32* %type121, align 4
  %cmp122 = icmp eq i32 %69, 2
  br i1 %cmp122, label %if.then.123, label %if.else.136

if.then.123:                                      ; preds = %for.body.120
  %70 = load i32, i32* %j, align 4
  %idxprom124 = sext i32 %70 to i64
  %71 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %71 to i64
  %72 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %ref_no_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %72, i32 0, i32 3
  %arrayidx126 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts, i32 0, i64 %idxprom125
  %arrayidx127 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx126, i32 0, i64 %idxprom124
  %73 = load i32, i32* %j, align 4
  %idxprom128 = sext i32 %73 to i64
  %74 = load i32, i32* %i, align 4
  %idxprom129 = sext i32 %74 to i64
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number130 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 127
  %76 = load i32, i32* %model_number130, align 4
  %idxprom131 = sext i32 %76 to i64
  %arrayidx132 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], [1 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_I, i32 0, i64 %idxprom131
  %arrayidx133 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx132, i32 0, i64 %idxprom129
  %arrayidx134 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx133, i32 0, i64 %idxprom128
  %arrayidx135 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx134, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx127, i32* %arrayidx135)
  br label %if.end.150

if.else.136:                                      ; preds = %for.body.120
  %77 = load i32, i32* %j, align 4
  %idxprom137 = sext i32 %77 to i64
  %78 = load i32, i32* %i, align 4
  %idxprom138 = sext i32 %78 to i64
  %79 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %ref_no_contexts139 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %79, i32 0, i32 3
  %arrayidx140 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts139, i32 0, i64 %idxprom138
  %arrayidx141 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx140, i32 0, i64 %idxprom137
  %80 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %80 to i64
  %81 = load i32, i32* %i, align 4
  %idxprom143 = sext i32 %81 to i64
  %82 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %82, i32 0, i32 127
  %83 = load i32, i32* %model_number144, align 4
  %idxprom145 = sext i32 %83 to i64
  %arrayidx146 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], [3 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_P, i32 0, i64 %idxprom145
  %arrayidx147 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx146, i32 0, i64 %idxprom143
  %arrayidx148 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx147, i32 0, i64 %idxprom142
  %arrayidx149 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx148, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx141, i32* %arrayidx149)
  br label %if.end.150

if.end.150:                                       ; preds = %if.else.136, %if.then.123
  br label %for.inc.151

for.inc.151:                                      ; preds = %if.end.150
  %84 = load i32, i32* %j, align 4
  %inc152 = add nsw i32 %84, 1
  store i32 %inc152, i32* %j, align 4
  br label %for.cond.118

for.end.153:                                      ; preds = %for.cond.118
  br label %for.inc.154

for.inc.154:                                      ; preds = %for.end.153
  %85 = load i32, i32* %i, align 4
  %inc155 = add nsw i32 %85, 1
  store i32 %inc155, i32* %i, align 4
  br label %for.cond.115

for.end.156:                                      ; preds = %for.cond.115
  store i32 0, i32* %j, align 4
  br label %for.cond.157

for.cond.157:                                     ; preds = %for.inc.184, %for.end.156
  %86 = load i32, i32* %j, align 4
  %cmp158 = icmp slt i32 %86, 4
  br i1 %cmp158, label %for.body.159, label %for.end.186

for.body.159:                                     ; preds = %for.cond.157
  %87 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type160 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %87, i32 0, i32 5
  %88 = load i32, i32* %type160, align 4
  %cmp161 = icmp eq i32 %88, 2
  br i1 %cmp161, label %if.then.162, label %if.else.172

if.then.162:                                      ; preds = %for.body.159
  %89 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %89 to i64
  %90 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %delta_qp_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %90, i32 0, i32 4
  %arrayidx164 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts, i32 0, i64 %idxprom163
  %91 = load i32, i32* %j, align 4
  %idxprom165 = sext i32 %91 to i64
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 127
  %93 = load i32, i32* %model_number166, align 4
  %idxprom167 = sext i32 %93 to i64
  %arrayidx168 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_I, i32 0, i64 %idxprom167
  %arrayidx169 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx168, i32 0, i64 0
  %arrayidx170 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx169, i32 0, i64 %idxprom165
  %arrayidx171 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx170, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx164, i32* %arrayidx171)
  br label %if.end.183

if.else.172:                                      ; preds = %for.body.159
  %94 = load i32, i32* %j, align 4
  %idxprom173 = sext i32 %94 to i64
  %95 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %delta_qp_contexts174 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %95, i32 0, i32 4
  %arrayidx175 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts174, i32 0, i64 %idxprom173
  %96 = load i32, i32* %j, align 4
  %idxprom176 = sext i32 %96 to i64
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number177 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %model_number177, align 4
  %idxprom178 = sext i32 %98 to i64
  %arrayidx179 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_P, i32 0, i64 %idxprom178
  %arrayidx180 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx179, i32 0, i64 0
  %arrayidx181 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx180, i32 0, i64 %idxprom176
  %arrayidx182 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx181, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx175, i32* %arrayidx182)
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.172, %if.then.162
  br label %for.inc.184

for.inc.184:                                      ; preds = %if.end.183
  %99 = load i32, i32* %j, align 4
  %inc185 = add nsw i32 %99, 1
  store i32 %inc185, i32* %j, align 4
  br label %for.cond.157

for.end.186:                                      ; preds = %for.cond.157
  store i32 0, i32* %j, align 4
  br label %for.cond.187

for.cond.187:                                     ; preds = %for.inc.214, %for.end.186
  %100 = load i32, i32* %j, align 4
  %cmp188 = icmp slt i32 %100, 4
  br i1 %cmp188, label %for.body.189, label %for.end.216

for.body.189:                                     ; preds = %for.cond.187
  %101 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type190 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %101, i32 0, i32 5
  %102 = load i32, i32* %type190, align 4
  %cmp191 = icmp eq i32 %102, 2
  br i1 %cmp191, label %if.then.192, label %if.else.202

if.then.192:                                      ; preds = %for.body.189
  %103 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %103 to i64
  %104 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_aff_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %104, i32 0, i32 5
  %arrayidx194 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts, i32 0, i64 %idxprom193
  %105 = load i32, i32* %j, align 4
  %idxprom195 = sext i32 %105 to i64
  %106 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number196 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %106, i32 0, i32 127
  %107 = load i32, i32* %model_number196, align 4
  %idxprom197 = sext i32 %107 to i64
  %arrayidx198 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_I, i32 0, i64 %idxprom197
  %arrayidx199 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx198, i32 0, i64 0
  %arrayidx200 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx199, i32 0, i64 %idxprom195
  %arrayidx201 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx200, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx194, i32* %arrayidx201)
  br label %if.end.213

if.else.202:                                      ; preds = %for.body.189
  %108 = load i32, i32* %j, align 4
  %idxprom203 = sext i32 %108 to i64
  %109 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %mb_aff_contexts204 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %109, i32 0, i32 5
  %arrayidx205 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts204, i32 0, i64 %idxprom203
  %110 = load i32, i32* %j, align 4
  %idxprom206 = sext i32 %110 to i64
  %111 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number207 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %111, i32 0, i32 127
  %112 = load i32, i32* %model_number207, align 4
  %idxprom208 = sext i32 %112 to i64
  %arrayidx209 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_P, i32 0, i64 %idxprom208
  %arrayidx210 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx209, i32 0, i64 0
  %arrayidx211 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx210, i32 0, i64 %idxprom206
  %arrayidx212 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx211, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx205, i32* %arrayidx212)
  br label %if.end.213

if.end.213:                                       ; preds = %if.else.202, %if.then.192
  br label %for.inc.214

for.inc.214:                                      ; preds = %if.end.213
  %113 = load i32, i32* %j, align 4
  %inc215 = add nsw i32 %113, 1
  store i32 %inc215, i32* %j, align 4
  br label %for.cond.187

for.end.216:                                      ; preds = %for.cond.187
  store i32 0, i32* %j, align 4
  br label %for.cond.217

for.cond.217:                                     ; preds = %for.inc.244, %for.end.216
  %114 = load i32, i32* %j, align 4
  %cmp218 = icmp slt i32 %114, 3
  br i1 %cmp218, label %for.body.219, label %for.end.246

for.body.219:                                     ; preds = %for.cond.217
  %115 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %115, i32 0, i32 5
  %116 = load i32, i32* %type220, align 4
  %cmp221 = icmp eq i32 %116, 2
  br i1 %cmp221, label %if.then.222, label %if.else.232

if.then.222:                                      ; preds = %for.body.219
  %117 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %117 to i64
  %118 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %transform_size_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %118, i32 0, i32 6
  %arrayidx224 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts, i32 0, i64 %idxprom223
  %119 = load i32, i32* %j, align 4
  %idxprom225 = sext i32 %119 to i64
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number226 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 127
  %121 = load i32, i32* %model_number226, align 4
  %idxprom227 = sext i32 %121 to i64
  %arrayidx228 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], [1 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_I, i32 0, i64 %idxprom227
  %arrayidx229 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx228, i32 0, i64 0
  %arrayidx230 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx229, i32 0, i64 %idxprom225
  %arrayidx231 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx230, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx224, i32* %arrayidx231)
  br label %if.end.243

if.else.232:                                      ; preds = %for.body.219
  %122 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %122 to i64
  %123 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc, align 8
  %transform_size_contexts234 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %123, i32 0, i32 6
  %arrayidx235 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts234, i32 0, i64 %idxprom233
  %124 = load i32, i32* %j, align 4
  %idxprom236 = sext i32 %124 to i64
  %125 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number237 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %125, i32 0, i32 127
  %126 = load i32, i32* %model_number237, align 4
  %idxprom238 = sext i32 %126 to i64
  %arrayidx239 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], [3 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_P, i32 0, i64 %idxprom238
  %arrayidx240 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx239, i32 0, i64 0
  %arrayidx241 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx240, i32 0, i64 %idxprom236
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx241, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx235, i32* %arrayidx242)
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.232, %if.then.222
  br label %for.inc.244

for.inc.244:                                      ; preds = %if.end.243
  %127 = load i32, i32* %j, align 4
  %inc245 = add nsw i32 %127, 1
  store i32 %inc245, i32* %j, align 4
  br label %for.cond.217

for.end.246:                                      ; preds = %for.cond.217
  store i32 0, i32* %j, align 4
  br label %for.cond.247

for.cond.247:                                     ; preds = %for.inc.274, %for.end.246
  %128 = load i32, i32* %j, align 4
  %cmp248 = icmp slt i32 %128, 2
  br i1 %cmp248, label %for.body.249, label %for.end.276

for.body.249:                                     ; preds = %for.cond.247
  %129 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type250 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %129, i32 0, i32 5
  %130 = load i32, i32* %type250, align 4
  %cmp251 = icmp eq i32 %130, 2
  br i1 %cmp251, label %if.then.252, label %if.else.262

if.then.252:                                      ; preds = %for.body.249
  %131 = load i32, i32* %j, align 4
  %idxprom253 = sext i32 %131 to i64
  %132 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %ipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %132, i32 0, i32 0
  %arrayidx254 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts, i32 0, i64 %idxprom253
  %133 = load i32, i32* %j, align 4
  %idxprom255 = sext i32 %133 to i64
  %134 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number256 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %134, i32 0, i32 127
  %135 = load i32, i32* %model_number256, align 4
  %idxprom257 = sext i32 %135 to i64
  %arrayidx258 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], [1 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_I, i32 0, i64 %idxprom257
  %arrayidx259 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx258, i32 0, i64 0
  %arrayidx260 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx259, i32 0, i64 %idxprom255
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx260, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx254, i32* %arrayidx261)
  br label %if.end.273

if.else.262:                                      ; preds = %for.body.249
  %136 = load i32, i32* %j, align 4
  %idxprom263 = sext i32 %136 to i64
  %137 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %ipr_contexts264 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %137, i32 0, i32 0
  %arrayidx265 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts264, i32 0, i64 %idxprom263
  %138 = load i32, i32* %j, align 4
  %idxprom266 = sext i32 %138 to i64
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number267 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %model_number267, align 4
  %idxprom268 = sext i32 %140 to i64
  %arrayidx269 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], [3 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_P, i32 0, i64 %idxprom268
  %arrayidx270 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx269, i32 0, i64 0
  %arrayidx271 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx270, i32 0, i64 %idxprom266
  %arrayidx272 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx271, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx265, i32* %arrayidx272)
  br label %if.end.273

if.end.273:                                       ; preds = %if.else.262, %if.then.252
  br label %for.inc.274

for.inc.274:                                      ; preds = %if.end.273
  %141 = load i32, i32* %j, align 4
  %inc275 = add nsw i32 %141, 1
  store i32 %inc275, i32* %j, align 4
  br label %for.cond.247

for.end.276:                                      ; preds = %for.cond.247
  store i32 0, i32* %j, align 4
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.304, %for.end.276
  %142 = load i32, i32* %j, align 4
  %cmp278 = icmp slt i32 %142, 4
  br i1 %cmp278, label %for.body.279, label %for.end.306

for.body.279:                                     ; preds = %for.cond.277
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type280 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 5
  %144 = load i32, i32* %type280, align 4
  %cmp281 = icmp eq i32 %144, 2
  br i1 %cmp281, label %if.then.282, label %if.else.292

if.then.282:                                      ; preds = %for.body.279
  %145 = load i32, i32* %j, align 4
  %idxprom283 = sext i32 %145 to i64
  %146 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %146, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts, i32 0, i64 %idxprom283
  %147 = load i32, i32* %j, align 4
  %idxprom285 = sext i32 %147 to i64
  %148 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number286 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %148, i32 0, i32 127
  %149 = load i32, i32* %model_number286, align 4
  %idxprom287 = sext i32 %149 to i64
  %arrayidx288 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_I, i32 0, i64 %idxprom287
  %arrayidx289 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx288, i32 0, i64 0
  %arrayidx290 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx289, i32 0, i64 %idxprom285
  %arrayidx291 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx290, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx284, i32* %arrayidx291)
  br label %if.end.303

if.else.292:                                      ; preds = %for.body.279
  %150 = load i32, i32* %j, align 4
  %idxprom293 = sext i32 %150 to i64
  %151 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cipr_contexts294 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %151, i32 0, i32 1
  %arrayidx295 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts294, i32 0, i64 %idxprom293
  %152 = load i32, i32* %j, align 4
  %idxprom296 = sext i32 %152 to i64
  %153 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %153, i32 0, i32 127
  %154 = load i32, i32* %model_number297, align 4
  %idxprom298 = sext i32 %154 to i64
  %arrayidx299 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_P, i32 0, i64 %idxprom298
  %arrayidx300 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx299, i32 0, i64 0
  %arrayidx301 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx300, i32 0, i64 %idxprom296
  %arrayidx302 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx301, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx295, i32* %arrayidx302)
  br label %if.end.303

if.end.303:                                       ; preds = %if.else.292, %if.then.282
  br label %for.inc.304

for.inc.304:                                      ; preds = %if.end.303
  %155 = load i32, i32* %j, align 4
  %inc305 = add nsw i32 %155, 1
  store i32 %inc305, i32* %j, align 4
  br label %for.cond.277

for.end.306:                                      ; preds = %for.cond.277
  store i32 0, i32* %i, align 4
  br label %for.cond.307

for.cond.307:                                     ; preds = %for.inc.346, %for.end.306
  %156 = load i32, i32* %i, align 4
  %cmp308 = icmp slt i32 %156, 3
  br i1 %cmp308, label %for.body.309, label %for.end.348

for.body.309:                                     ; preds = %for.cond.307
  store i32 0, i32* %j, align 4
  br label %for.cond.310

for.cond.310:                                     ; preds = %for.inc.343, %for.body.309
  %157 = load i32, i32* %j, align 4
  %cmp311 = icmp slt i32 %157, 4
  br i1 %cmp311, label %for.body.312, label %for.end.345

for.body.312:                                     ; preds = %for.cond.310
  %158 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type313 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %158, i32 0, i32 5
  %159 = load i32, i32* %type313, align 4
  %cmp314 = icmp eq i32 %159, 2
  br i1 %cmp314, label %if.then.315, label %if.else.328

if.then.315:                                      ; preds = %for.body.312
  %160 = load i32, i32* %j, align 4
  %idxprom316 = sext i32 %160 to i64
  %161 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %161 to i64
  %162 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %162, i32 0, i32 2
  %arrayidx318 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts, i32 0, i64 %idxprom317
  %arrayidx319 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx318, i32 0, i64 %idxprom316
  %163 = load i32, i32* %j, align 4
  %idxprom320 = sext i32 %163 to i64
  %164 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %164 to i64
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number322 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %model_number322, align 4
  %idxprom323 = sext i32 %166 to i64
  %arrayidx324 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], [1 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_I, i32 0, i64 %idxprom323
  %arrayidx325 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx324, i32 0, i64 %idxprom321
  %arrayidx326 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx325, i32 0, i64 %idxprom320
  %arrayidx327 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx326, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx319, i32* %arrayidx327)
  br label %if.end.342

if.else.328:                                      ; preds = %for.body.312
  %167 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %167 to i64
  %168 = load i32, i32* %i, align 4
  %idxprom330 = sext i32 %168 to i64
  %169 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %cbp_contexts331 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %169, i32 0, i32 2
  %arrayidx332 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts331, i32 0, i64 %idxprom330
  %arrayidx333 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx332, i32 0, i64 %idxprom329
  %170 = load i32, i32* %j, align 4
  %idxprom334 = sext i32 %170 to i64
  %171 = load i32, i32* %i, align 4
  %idxprom335 = sext i32 %171 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number336 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 127
  %173 = load i32, i32* %model_number336, align 4
  %idxprom337 = sext i32 %173 to i64
  %arrayidx338 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], [3 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_P, i32 0, i64 %idxprom337
  %arrayidx339 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx338, i32 0, i64 %idxprom335
  %arrayidx340 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx339, i32 0, i64 %idxprom334
  %arrayidx341 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx340, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx333, i32* %arrayidx341)
  br label %if.end.342

if.end.342:                                       ; preds = %if.else.328, %if.then.315
  br label %for.inc.343

for.inc.343:                                      ; preds = %if.end.342
  %174 = load i32, i32* %j, align 4
  %inc344 = add nsw i32 %174, 1
  store i32 %inc344, i32* %j, align 4
  br label %for.cond.310

for.end.345:                                      ; preds = %for.cond.310
  br label %for.inc.346

for.inc.346:                                      ; preds = %for.end.345
  %175 = load i32, i32* %i, align 4
  %inc347 = add nsw i32 %175, 1
  store i32 %inc347, i32* %i, align 4
  br label %for.cond.307

for.end.348:                                      ; preds = %for.cond.307
  store i32 0, i32* %i, align 4
  br label %for.cond.349

for.cond.349:                                     ; preds = %for.inc.388, %for.end.348
  %176 = load i32, i32* %i, align 4
  %cmp350 = icmp slt i32 %176, 8
  br i1 %cmp350, label %for.body.351, label %for.end.390

for.body.351:                                     ; preds = %for.cond.349
  store i32 0, i32* %j, align 4
  br label %for.cond.352

for.cond.352:                                     ; preds = %for.inc.385, %for.body.351
  %177 = load i32, i32* %j, align 4
  %cmp353 = icmp slt i32 %177, 4
  br i1 %cmp353, label %for.body.354, label %for.end.387

for.body.354:                                     ; preds = %for.cond.352
  %178 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type355 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %178, i32 0, i32 5
  %179 = load i32, i32* %type355, align 4
  %cmp356 = icmp eq i32 %179, 2
  br i1 %cmp356, label %if.then.357, label %if.else.370

if.then.357:                                      ; preds = %for.body.354
  %180 = load i32, i32* %j, align 4
  %idxprom358 = sext i32 %180 to i64
  %181 = load i32, i32* %i, align 4
  %idxprom359 = sext i32 %181 to i64
  %182 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %bcbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %182, i32 0, i32 3
  %arrayidx360 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts, i32 0, i64 %idxprom359
  %arrayidx361 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx360, i32 0, i64 %idxprom358
  %183 = load i32, i32* %j, align 4
  %idxprom362 = sext i32 %183 to i64
  %184 = load i32, i32* %i, align 4
  %idxprom363 = sext i32 %184 to i64
  %185 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number364 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %185, i32 0, i32 127
  %186 = load i32, i32* %model_number364, align 4
  %idxprom365 = sext i32 %186 to i64
  %arrayidx366 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], [1 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_I, i32 0, i64 %idxprom365
  %arrayidx367 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx366, i32 0, i64 %idxprom363
  %arrayidx368 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx367, i32 0, i64 %idxprom362
  %arrayidx369 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx368, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx361, i32* %arrayidx369)
  br label %if.end.384

if.else.370:                                      ; preds = %for.body.354
  %187 = load i32, i32* %j, align 4
  %idxprom371 = sext i32 %187 to i64
  %188 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %188 to i64
  %189 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %bcbp_contexts373 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %189, i32 0, i32 3
  %arrayidx374 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts373, i32 0, i64 %idxprom372
  %arrayidx375 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx374, i32 0, i64 %idxprom371
  %190 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %190 to i64
  %191 = load i32, i32* %i, align 4
  %idxprom377 = sext i32 %191 to i64
  %192 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %192, i32 0, i32 127
  %193 = load i32, i32* %model_number378, align 4
  %idxprom379 = sext i32 %193 to i64
  %arrayidx380 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], [3 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_P, i32 0, i64 %idxprom379
  %arrayidx381 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx380, i32 0, i64 %idxprom377
  %arrayidx382 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx381, i32 0, i64 %idxprom376
  %arrayidx383 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx382, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx375, i32* %arrayidx383)
  br label %if.end.384

if.end.384:                                       ; preds = %if.else.370, %if.then.357
  br label %for.inc.385

for.inc.385:                                      ; preds = %if.end.384
  %194 = load i32, i32* %j, align 4
  %inc386 = add nsw i32 %194, 1
  store i32 %inc386, i32* %j, align 4
  br label %for.cond.352

for.end.387:                                      ; preds = %for.cond.352
  br label %for.inc.388

for.inc.388:                                      ; preds = %for.end.387
  %195 = load i32, i32* %i, align 4
  %inc389 = add nsw i32 %195, 1
  store i32 %inc389, i32* %i, align 4
  br label %for.cond.349

for.end.390:                                      ; preds = %for.cond.349
  store i32 0, i32* %i, align 4
  br label %for.cond.391

for.cond.391:                                     ; preds = %for.inc.430, %for.end.390
  %196 = load i32, i32* %i, align 4
  %cmp392 = icmp slt i32 %196, 10
  br i1 %cmp392, label %for.body.393, label %for.end.432

for.body.393:                                     ; preds = %for.cond.391
  store i32 0, i32* %j, align 4
  br label %for.cond.394

for.cond.394:                                     ; preds = %for.inc.427, %for.body.393
  %197 = load i32, i32* %j, align 4
  %cmp395 = icmp slt i32 %197, 15
  br i1 %cmp395, label %for.body.396, label %for.end.429

for.body.396:                                     ; preds = %for.cond.394
  %198 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %198, i32 0, i32 5
  %199 = load i32, i32* %type397, align 4
  %cmp398 = icmp eq i32 %199, 2
  br i1 %cmp398, label %if.then.399, label %if.else.412

if.then.399:                                      ; preds = %for.body.396
  %200 = load i32, i32* %j, align 4
  %idxprom400 = sext i32 %200 to i64
  %201 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %201 to i64
  %202 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %202, i32 0, i32 4
  %arrayidx402 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts, i32 0, i64 %idxprom401
  %arrayidx403 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx402, i32 0, i64 %idxprom400
  %203 = load i32, i32* %j, align 4
  %idxprom404 = sext i32 %203 to i64
  %204 = load i32, i32* %i, align 4
  %idxprom405 = sext i32 %204 to i64
  %205 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %205, i32 0, i32 127
  %206 = load i32, i32* %model_number406, align 4
  %idxprom407 = sext i32 %206 to i64
  %arrayidx408 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_I, i32 0, i64 %idxprom407
  %arrayidx409 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx408, i32 0, i64 %idxprom405
  %arrayidx410 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx409, i32 0, i64 %idxprom404
  %arrayidx411 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx410, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx403, i32* %arrayidx411)
  br label %if.end.426

if.else.412:                                      ; preds = %for.body.396
  %207 = load i32, i32* %j, align 4
  %idxprom413 = sext i32 %207 to i64
  %208 = load i32, i32* %i, align 4
  %idxprom414 = sext i32 %208 to i64
  %209 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %map_contexts415 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %209, i32 0, i32 4
  %arrayidx416 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts415, i32 0, i64 %idxprom414
  %arrayidx417 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx416, i32 0, i64 %idxprom413
  %210 = load i32, i32* %j, align 4
  %idxprom418 = sext i32 %210 to i64
  %211 = load i32, i32* %i, align 4
  %idxprom419 = sext i32 %211 to i64
  %212 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number420 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %212, i32 0, i32 127
  %213 = load i32, i32* %model_number420, align 4
  %idxprom421 = sext i32 %213 to i64
  %arrayidx422 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_P, i32 0, i64 %idxprom421
  %arrayidx423 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx422, i32 0, i64 %idxprom419
  %arrayidx424 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx423, i32 0, i64 %idxprom418
  %arrayidx425 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx424, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx417, i32* %arrayidx425)
  br label %if.end.426

if.end.426:                                       ; preds = %if.else.412, %if.then.399
  br label %for.inc.427

for.inc.427:                                      ; preds = %if.end.426
  %214 = load i32, i32* %j, align 4
  %inc428 = add nsw i32 %214, 1
  store i32 %inc428, i32* %j, align 4
  br label %for.cond.394

for.end.429:                                      ; preds = %for.cond.394
  br label %for.inc.430

for.inc.430:                                      ; preds = %for.end.429
  %215 = load i32, i32* %i, align 4
  %inc431 = add nsw i32 %215, 1
  store i32 %inc431, i32* %i, align 4
  br label %for.cond.391

for.end.432:                                      ; preds = %for.cond.391
  store i32 0, i32* %i, align 4
  br label %for.cond.433

for.cond.433:                                     ; preds = %for.inc.472, %for.end.432
  %216 = load i32, i32* %i, align 4
  %cmp434 = icmp slt i32 %216, 10
  br i1 %cmp434, label %for.body.435, label %for.end.474

for.body.435:                                     ; preds = %for.cond.433
  store i32 0, i32* %j, align 4
  br label %for.cond.436

for.cond.436:                                     ; preds = %for.inc.469, %for.body.435
  %217 = load i32, i32* %j, align 4
  %cmp437 = icmp slt i32 %217, 15
  br i1 %cmp437, label %for.body.438, label %for.end.471

for.body.438:                                     ; preds = %for.cond.436
  %218 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type439 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %218, i32 0, i32 5
  %219 = load i32, i32* %type439, align 4
  %cmp440 = icmp eq i32 %219, 2
  br i1 %cmp440, label %if.then.441, label %if.else.454

if.then.441:                                      ; preds = %for.body.438
  %220 = load i32, i32* %j, align 4
  %idxprom442 = sext i32 %220 to i64
  %221 = load i32, i32* %i, align 4
  %idxprom443 = sext i32 %221 to i64
  %222 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %222, i32 0, i32 5
  %arrayidx444 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts, i32 0, i64 %idxprom443
  %arrayidx445 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx444, i32 0, i64 %idxprom442
  %223 = load i32, i32* %j, align 4
  %idxprom446 = sext i32 %223 to i64
  %224 = load i32, i32* %i, align 4
  %idxprom447 = sext i32 %224 to i64
  %225 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number448 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %225, i32 0, i32 127
  %226 = load i32, i32* %model_number448, align 4
  %idxprom449 = sext i32 %226 to i64
  %arrayidx450 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_I, i32 0, i64 %idxprom449
  %arrayidx451 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx450, i32 0, i64 %idxprom447
  %arrayidx452 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx451, i32 0, i64 %idxprom446
  %arrayidx453 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx452, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx445, i32* %arrayidx453)
  br label %if.end.468

if.else.454:                                      ; preds = %for.body.438
  %227 = load i32, i32* %j, align 4
  %idxprom455 = sext i32 %227 to i64
  %228 = load i32, i32* %i, align 4
  %idxprom456 = sext i32 %228 to i64
  %229 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %last_contexts457 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %229, i32 0, i32 5
  %arrayidx458 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts457, i32 0, i64 %idxprom456
  %arrayidx459 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx458, i32 0, i64 %idxprom455
  %230 = load i32, i32* %j, align 4
  %idxprom460 = sext i32 %230 to i64
  %231 = load i32, i32* %i, align 4
  %idxprom461 = sext i32 %231 to i64
  %232 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number462 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %232, i32 0, i32 127
  %233 = load i32, i32* %model_number462, align 4
  %idxprom463 = sext i32 %233 to i64
  %arrayidx464 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_P, i32 0, i64 %idxprom463
  %arrayidx465 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx464, i32 0, i64 %idxprom461
  %arrayidx466 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx465, i32 0, i64 %idxprom460
  %arrayidx467 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx466, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx459, i32* %arrayidx467)
  br label %if.end.468

if.end.468:                                       ; preds = %if.else.454, %if.then.441
  br label %for.inc.469

for.inc.469:                                      ; preds = %if.end.468
  %234 = load i32, i32* %j, align 4
  %inc470 = add nsw i32 %234, 1
  store i32 %inc470, i32* %j, align 4
  br label %for.cond.436

for.end.471:                                      ; preds = %for.cond.436
  br label %for.inc.472

for.inc.472:                                      ; preds = %for.end.471
  %235 = load i32, i32* %i, align 4
  %inc473 = add nsw i32 %235, 1
  store i32 %inc473, i32* %i, align 4
  br label %for.cond.433

for.end.474:                                      ; preds = %for.cond.433
  store i32 0, i32* %i, align 4
  br label %for.cond.475

for.cond.475:                                     ; preds = %for.inc.514, %for.end.474
  %236 = load i32, i32* %i, align 4
  %cmp476 = icmp slt i32 %236, 10
  br i1 %cmp476, label %for.body.477, label %for.end.516

for.body.477:                                     ; preds = %for.cond.475
  store i32 0, i32* %j, align 4
  br label %for.cond.478

for.cond.478:                                     ; preds = %for.inc.511, %for.body.477
  %237 = load i32, i32* %j, align 4
  %cmp479 = icmp slt i32 %237, 5
  br i1 %cmp479, label %for.body.480, label %for.end.513

for.body.480:                                     ; preds = %for.cond.478
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type481 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 5
  %239 = load i32, i32* %type481, align 4
  %cmp482 = icmp eq i32 %239, 2
  br i1 %cmp482, label %if.then.483, label %if.else.496

if.then.483:                                      ; preds = %for.body.480
  %240 = load i32, i32* %j, align 4
  %idxprom484 = sext i32 %240 to i64
  %241 = load i32, i32* %i, align 4
  %idxprom485 = sext i32 %241 to i64
  %242 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %one_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %242, i32 0, i32 6
  %arrayidx486 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts, i32 0, i64 %idxprom485
  %arrayidx487 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx486, i32 0, i64 %idxprom484
  %243 = load i32, i32* %j, align 4
  %idxprom488 = sext i32 %243 to i64
  %244 = load i32, i32* %i, align 4
  %idxprom489 = sext i32 %244 to i64
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number490 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 127
  %246 = load i32, i32* %model_number490, align 4
  %idxprom491 = sext i32 %246 to i64
  %arrayidx492 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_I, i32 0, i64 %idxprom491
  %arrayidx493 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx492, i32 0, i64 %idxprom489
  %arrayidx494 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx493, i32 0, i64 %idxprom488
  %arrayidx495 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx494, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx487, i32* %arrayidx495)
  br label %if.end.510

if.else.496:                                      ; preds = %for.body.480
  %247 = load i32, i32* %j, align 4
  %idxprom497 = sext i32 %247 to i64
  %248 = load i32, i32* %i, align 4
  %idxprom498 = sext i32 %248 to i64
  %249 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %one_contexts499 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %249, i32 0, i32 6
  %arrayidx500 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts499, i32 0, i64 %idxprom498
  %arrayidx501 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx500, i32 0, i64 %idxprom497
  %250 = load i32, i32* %j, align 4
  %idxprom502 = sext i32 %250 to i64
  %251 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %251 to i64
  %252 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number504 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %252, i32 0, i32 127
  %253 = load i32, i32* %model_number504, align 4
  %idxprom505 = sext i32 %253 to i64
  %arrayidx506 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_P, i32 0, i64 %idxprom505
  %arrayidx507 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx506, i32 0, i64 %idxprom503
  %arrayidx508 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx507, i32 0, i64 %idxprom502
  %arrayidx509 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx508, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx501, i32* %arrayidx509)
  br label %if.end.510

if.end.510:                                       ; preds = %if.else.496, %if.then.483
  br label %for.inc.511

for.inc.511:                                      ; preds = %if.end.510
  %254 = load i32, i32* %j, align 4
  %inc512 = add nsw i32 %254, 1
  store i32 %inc512, i32* %j, align 4
  br label %for.cond.478

for.end.513:                                      ; preds = %for.cond.478
  br label %for.inc.514

for.inc.514:                                      ; preds = %for.end.513
  %255 = load i32, i32* %i, align 4
  %inc515 = add nsw i32 %255, 1
  store i32 %inc515, i32* %i, align 4
  br label %for.cond.475

for.end.516:                                      ; preds = %for.cond.475
  store i32 0, i32* %i, align 4
  br label %for.cond.517

for.cond.517:                                     ; preds = %for.inc.556, %for.end.516
  %256 = load i32, i32* %i, align 4
  %cmp518 = icmp slt i32 %256, 10
  br i1 %cmp518, label %for.body.519, label %for.end.558

for.body.519:                                     ; preds = %for.cond.517
  store i32 0, i32* %j, align 4
  br label %for.cond.520

for.cond.520:                                     ; preds = %for.inc.553, %for.body.519
  %257 = load i32, i32* %j, align 4
  %cmp521 = icmp slt i32 %257, 5
  br i1 %cmp521, label %for.body.522, label %for.end.555

for.body.522:                                     ; preds = %for.cond.520
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type523 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 5
  %259 = load i32, i32* %type523, align 4
  %cmp524 = icmp eq i32 %259, 2
  br i1 %cmp524, label %if.then.525, label %if.else.538

if.then.525:                                      ; preds = %for.body.522
  %260 = load i32, i32* %j, align 4
  %idxprom526 = sext i32 %260 to i64
  %261 = load i32, i32* %i, align 4
  %idxprom527 = sext i32 %261 to i64
  %262 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %abs_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %262, i32 0, i32 7
  %arrayidx528 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts, i32 0, i64 %idxprom527
  %arrayidx529 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx528, i32 0, i64 %idxprom526
  %263 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %263 to i64
  %264 = load i32, i32* %i, align 4
  %idxprom531 = sext i32 %264 to i64
  %265 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number532 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %265, i32 0, i32 127
  %266 = load i32, i32* %model_number532, align 4
  %idxprom533 = sext i32 %266 to i64
  %arrayidx534 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_I, i32 0, i64 %idxprom533
  %arrayidx535 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx534, i32 0, i64 %idxprom531
  %arrayidx536 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx535, i32 0, i64 %idxprom530
  %arrayidx537 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx536, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx529, i32* %arrayidx537)
  br label %if.end.552

if.else.538:                                      ; preds = %for.body.522
  %267 = load i32, i32* %j, align 4
  %idxprom539 = sext i32 %267 to i64
  %268 = load i32, i32* %i, align 4
  %idxprom540 = sext i32 %268 to i64
  %269 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %abs_contexts541 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %269, i32 0, i32 7
  %arrayidx542 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts541, i32 0, i64 %idxprom540
  %arrayidx543 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx542, i32 0, i64 %idxprom539
  %270 = load i32, i32* %j, align 4
  %idxprom544 = sext i32 %270 to i64
  %271 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %271 to i64
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number546 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 127
  %273 = load i32, i32* %model_number546, align 4
  %idxprom547 = sext i32 %273 to i64
  %arrayidx548 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_P, i32 0, i64 %idxprom547
  %arrayidx549 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx548, i32 0, i64 %idxprom545
  %arrayidx550 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx549, i32 0, i64 %idxprom544
  %arrayidx551 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx550, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx543, i32* %arrayidx551)
  br label %if.end.552

if.end.552:                                       ; preds = %if.else.538, %if.then.525
  br label %for.inc.553

for.inc.553:                                      ; preds = %if.end.552
  %274 = load i32, i32* %j, align 4
  %inc554 = add nsw i32 %274, 1
  store i32 %inc554, i32* %j, align 4
  br label %for.cond.520

for.end.555:                                      ; preds = %for.cond.520
  br label %for.inc.556

for.inc.556:                                      ; preds = %for.end.555
  %275 = load i32, i32* %i, align 4
  %inc557 = add nsw i32 %275, 1
  store i32 %inc557, i32* %i, align 4
  br label %for.cond.517

for.end.558:                                      ; preds = %for.cond.517
  store i32 0, i32* %i, align 4
  br label %for.cond.559

for.cond.559:                                     ; preds = %for.inc.598, %for.end.558
  %276 = load i32, i32* %i, align 4
  %cmp560 = icmp slt i32 %276, 10
  br i1 %cmp560, label %for.body.561, label %for.end.600

for.body.561:                                     ; preds = %for.cond.559
  store i32 0, i32* %j, align 4
  br label %for.cond.562

for.cond.562:                                     ; preds = %for.inc.595, %for.body.561
  %277 = load i32, i32* %j, align 4
  %cmp563 = icmp slt i32 %277, 15
  br i1 %cmp563, label %for.body.564, label %for.end.597

for.body.564:                                     ; preds = %for.cond.562
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type565 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 5
  %279 = load i32, i32* %type565, align 4
  %cmp566 = icmp eq i32 %279, 2
  br i1 %cmp566, label %if.then.567, label %if.else.580

if.then.567:                                      ; preds = %for.body.564
  %280 = load i32, i32* %j, align 4
  %idxprom568 = sext i32 %280 to i64
  %281 = load i32, i32* %i, align 4
  %idxprom569 = sext i32 %281 to i64
  %282 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %282, i32 0, i32 8
  %arrayidx570 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts, i32 0, i64 %idxprom569
  %arrayidx571 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx570, i32 0, i64 %idxprom568
  %283 = load i32, i32* %j, align 4
  %idxprom572 = sext i32 %283 to i64
  %284 = load i32, i32* %i, align 4
  %idxprom573 = sext i32 %284 to i64
  %285 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number574 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %285, i32 0, i32 127
  %286 = load i32, i32* %model_number574, align 4
  %idxprom575 = sext i32 %286 to i64
  %arrayidx576 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_I, i32 0, i64 %idxprom575
  %arrayidx577 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx576, i32 0, i64 %idxprom573
  %arrayidx578 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx577, i32 0, i64 %idxprom572
  %arrayidx579 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx578, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx571, i32* %arrayidx579)
  br label %if.end.594

if.else.580:                                      ; preds = %for.body.564
  %287 = load i32, i32* %j, align 4
  %idxprom581 = sext i32 %287 to i64
  %288 = load i32, i32* %i, align 4
  %idxprom582 = sext i32 %288 to i64
  %289 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_map_contexts583 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %289, i32 0, i32 8
  %arrayidx584 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts583, i32 0, i64 %idxprom582
  %arrayidx585 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx584, i32 0, i64 %idxprom581
  %290 = load i32, i32* %j, align 4
  %idxprom586 = sext i32 %290 to i64
  %291 = load i32, i32* %i, align 4
  %idxprom587 = sext i32 %291 to i64
  %292 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number588 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %292, i32 0, i32 127
  %293 = load i32, i32* %model_number588, align 4
  %idxprom589 = sext i32 %293 to i64
  %arrayidx590 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_P, i32 0, i64 %idxprom589
  %arrayidx591 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx590, i32 0, i64 %idxprom587
  %arrayidx592 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx591, i32 0, i64 %idxprom586
  %arrayidx593 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx592, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx585, i32* %arrayidx593)
  br label %if.end.594

if.end.594:                                       ; preds = %if.else.580, %if.then.567
  br label %for.inc.595

for.inc.595:                                      ; preds = %if.end.594
  %294 = load i32, i32* %j, align 4
  %inc596 = add nsw i32 %294, 1
  store i32 %inc596, i32* %j, align 4
  br label %for.cond.562

for.end.597:                                      ; preds = %for.cond.562
  br label %for.inc.598

for.inc.598:                                      ; preds = %for.end.597
  %295 = load i32, i32* %i, align 4
  %inc599 = add nsw i32 %295, 1
  store i32 %inc599, i32* %i, align 4
  br label %for.cond.559

for.end.600:                                      ; preds = %for.cond.559
  store i32 0, i32* %i, align 4
  br label %for.cond.601

for.cond.601:                                     ; preds = %for.inc.640, %for.end.600
  %296 = load i32, i32* %i, align 4
  %cmp602 = icmp slt i32 %296, 10
  br i1 %cmp602, label %for.body.603, label %for.end.642

for.body.603:                                     ; preds = %for.cond.601
  store i32 0, i32* %j, align 4
  br label %for.cond.604

for.cond.604:                                     ; preds = %for.inc.637, %for.body.603
  %297 = load i32, i32* %j, align 4
  %cmp605 = icmp slt i32 %297, 15
  br i1 %cmp605, label %for.body.606, label %for.end.639

for.body.606:                                     ; preds = %for.cond.604
  %298 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type607 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %298, i32 0, i32 5
  %299 = load i32, i32* %type607, align 4
  %cmp608 = icmp eq i32 %299, 2
  br i1 %cmp608, label %if.then.609, label %if.else.622

if.then.609:                                      ; preds = %for.body.606
  %300 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %300 to i64
  %301 = load i32, i32* %i, align 4
  %idxprom611 = sext i32 %301 to i64
  %302 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %302, i32 0, i32 9
  %arrayidx612 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts, i32 0, i64 %idxprom611
  %arrayidx613 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx612, i32 0, i64 %idxprom610
  %303 = load i32, i32* %j, align 4
  %idxprom614 = sext i32 %303 to i64
  %304 = load i32, i32* %i, align 4
  %idxprom615 = sext i32 %304 to i64
  %305 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i32 0, i32 127
  %306 = load i32, i32* %model_number616, align 4
  %idxprom617 = sext i32 %306 to i64
  %arrayidx618 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_I, i32 0, i64 %idxprom617
  %arrayidx619 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx618, i32 0, i64 %idxprom615
  %arrayidx620 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx619, i32 0, i64 %idxprom614
  %arrayidx621 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx620, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx613, i32* %arrayidx621)
  br label %if.end.636

if.else.622:                                      ; preds = %for.body.606
  %307 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %307 to i64
  %308 = load i32, i32* %i, align 4
  %idxprom624 = sext i32 %308 to i64
  %309 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc, align 8
  %fld_last_contexts625 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %309, i32 0, i32 9
  %arrayidx626 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts625, i32 0, i64 %idxprom624
  %arrayidx627 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx626, i32 0, i64 %idxprom623
  %310 = load i32, i32* %j, align 4
  %idxprom628 = sext i32 %310 to i64
  %311 = load i32, i32* %i, align 4
  %idxprom629 = sext i32 %311 to i64
  %312 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %model_number630 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %312, i32 0, i32 127
  %313 = load i32, i32* %model_number630, align 4
  %idxprom631 = sext i32 %313 to i64
  %arrayidx632 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_P, i32 0, i64 %idxprom631
  %arrayidx633 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx632, i32 0, i64 %idxprom629
  %arrayidx634 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx633, i32 0, i64 %idxprom628
  %arrayidx635 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx634, i32 0, i64 0
  call void @biari_init_context(%struct.BiContextType* %arrayidx627, i32* %arrayidx635)
  br label %if.end.636

if.end.636:                                       ; preds = %if.else.622, %if.then.609
  br label %for.inc.637

for.inc.637:                                      ; preds = %if.end.636
  %314 = load i32, i32* %j, align 4
  %inc638 = add nsw i32 %314, 1
  store i32 %inc638, i32* %j, align 4
  br label %for.cond.604

for.end.639:                                      ; preds = %for.cond.604
  br label %for.inc.640

for.inc.640:                                      ; preds = %for.end.639
  %315 = load i32, i32* %i, align 4
  %inc641 = add nsw i32 %315, 1
  store i32 %inc641, i32* %i, align 4
  br label %for.cond.601

for.end.642:                                      ; preds = %for.cond.601
  ret void
}

declare void @biari_init_context(%struct.BiContextType*, i32*) #2

; Function Attrs: nounwind uwtable
define double @XRate(%struct.BiContextType* %ctx, i32* %model) #0 {
entry:
  %ctx.addr = alloca %struct.BiContextType*, align 8
  %model.addr = alloca i32*, align 8
  %ctx_state = alloca i32, align 4
  %mod_state = alloca i32, align 4
  %weight = alloca double, align 8
  %xr = alloca double, align 8
  %qp = alloca i32, align 4
  store %struct.BiContextType* %ctx, %struct.BiContextType** %ctx.addr, align 8
  store i32* %model, i32** %model.addr, align 8
  store double 0.000000e+00, double* %xr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 9
  %1 = load i32, i32* %qp1, align 4
  %call = call i32 @imax(i32 0, i32 %1)
  store i32 %call, i32* %qp, align 4
  %2 = load %struct.BiContextType*, %struct.BiContextType** %ctx.addr, align 8
  %count = getelementptr inbounds %struct.BiContextType, %struct.BiContextType* %2, i32 0, i32 2
  %3 = load i64, i64* %count, align 8
  %conv = uitofp i64 %3 to double
  %div = fdiv double %conv, 3.200000e+01
  %call2 = call double @dmin(double 1.000000e+00, double %div)
  store double %call2, double* %weight, align 8
  %4 = load i32*, i32** %model.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0
  %5 = load i32, i32* %arrayidx, align 4
  %6 = load i32, i32* %qp, align 4
  %mul = mul nsw i32 %5, %6
  %shr = ashr i32 %mul, 4
  %7 = load i32*, i32** %model.addr, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %7, i64 1
  %8 = load i32, i32* %arrayidx3, align 4
  %add = add nsw i32 %shr, %8
  store i32 %add, i32* %mod_state, align 4
  %9 = load i32, i32* %mod_state, align 4
  %call4 = call i32 @iClip3(i32 0, i32 127, i32 %9)
  store i32 %call4, i32* %mod_state, align 4
  %10 = load %struct.BiContextType*, %struct.BiContextType** %ctx.addr, align 8
  %MPS = getelementptr inbounds %struct.BiContextType, %struct.BiContextType* %10, i32 0, i32 1
  %11 = load i8, i8* %MPS, align 1
  %conv5 = zext i8 %11 to i32
  %tobool = icmp ne i32 %conv5, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %12 = load %struct.BiContextType*, %struct.BiContextType** %ctx.addr, align 8
  %state = getelementptr inbounds %struct.BiContextType, %struct.BiContextType* %12, i32 0, i32 0
  %13 = load i16, i16* %state, align 2
  %conv6 = zext i16 %13 to i32
  %add7 = add nsw i32 64, %conv6
  br label %cond.end

cond.false:                                       ; preds = %entry
  %14 = load %struct.BiContextType*, %struct.BiContextType** %ctx.addr, align 8
  %state8 = getelementptr inbounds %struct.BiContextType, %struct.BiContextType* %14, i32 0, i32 0
  %15 = load i16, i16* %state8, align 2
  %conv9 = zext i16 %15 to i32
  %sub = sub nsw i32 63, %conv9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add7, %cond.true ], [ %sub, %cond.false ]
  store i32 %cond, i32* %ctx_state, align 4
  %16 = load double, double* %weight, align 8
  %17 = load i32, i32* %ctx_state, align 4
  %idxprom = sext i32 %17 to i64
  %arrayidx10 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom
  %18 = load double, double* %arrayidx10, align 8
  %mul11 = fmul double %16, %18
  %19 = load i32, i32* %mod_state, align 4
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds [128 x double], [128 x double]* @entropy, i32 0, i64 %idxprom12
  %20 = load double, double* %arrayidx13, align 8
  %mul14 = fmul double %mul11, %20
  %21 = load double, double* %xr, align 8
  %sub15 = fsub double %21, %mul14
  store double %sub15, double* %xr, align 8
  %22 = load double, double* %weight, align 8
  %23 = load i32, i32* %ctx_state, align 4
  %sub16 = sub nsw i32 127, %23
  %idxprom17 = sext i32 %sub16 to i64
  %arrayidx18 = getelementptr inbounds [128 x double], [128 x double]* @probability, i32 0, i64 %idxprom17
  %24 = load double, double* %arrayidx18, align 8
  %mul19 = fmul double %22, %24
  %25 = load i32, i32* %mod_state, align 4
  %sub20 = sub nsw i32 127, %25
  %idxprom21 = sext i32 %sub20 to i64
  %arrayidx22 = getelementptr inbounds [128 x double], [128 x double]* @entropy, i32 0, i64 %idxprom21
  %26 = load double, double* %arrayidx22, align 8
  %mul23 = fmul double %mul19, %26
  %27 = load double, double* %xr, align 8
  %sub24 = fsub double %27, %mul23
  store double %sub24, double* %xr, align 8
  %28 = load double, double* %xr, align 8
  ret double %28
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @imax(i32 %a, i32 %b) #3 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load i32, i32* %b.addr, align 4
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define internal double @dmin(double %a, double %b) #3 {
entry:
  %a.addr = alloca double, align 8
  %b.addr = alloca double, align 8
  store double %a, double* %a.addr, align 8
  store double %b, double* %b.addr, align 8
  %0 = load double, double* %a.addr, align 8
  %1 = load double, double* %b.addr, align 8
  %cmp = fcmp olt double %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load double, double* %a.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load double, double* %b.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %2, %cond.true ], [ %3, %cond.false ]
  ret double %cond
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @iClip3(i32 %low, i32 %high, i32 %x) #3 {
entry:
  %low.addr = alloca i32, align 4
  %high.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %low, i32* %low.addr, align 4
  store i32 %high, i32* %high.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %1 = load i32, i32* %low.addr, align 4
  %call = call i32 @imax(i32 %0, i32 %1)
  store i32 %call, i32* %x.addr, align 4
  %2 = load i32, i32* %x.addr, align 4
  %3 = load i32, i32* %high.addr, align 4
  %call1 = call i32 @imin(i32 %2, i32 %3)
  store i32 %call1, i32* %x.addr, align 4
  %4 = load i32, i32* %x.addr, align 4
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define void @GetCtxModelNumber(i32* %mnumber, %struct.MotionInfoContexts* %mc, %struct.TextureInfoContexts* %tc) #0 {
entry:
  %mnumber.addr = alloca i32*, align 8
  %mc.addr = alloca %struct.MotionInfoContexts*, align 8
  %tc.addr = alloca %struct.TextureInfoContexts*, align 8
  %model = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %num_models = alloca i32, align 4
  %xr = alloca double, align 8
  %min_xr = alloca double, align 8
  store i32* %mnumber, i32** %mnumber.addr, align 8
  store %struct.MotionInfoContexts* %mc, %struct.MotionInfoContexts** %mc.addr, align 8
  store %struct.TextureInfoContexts* %tc, %struct.TextureInfoContexts** %tc.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 5
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 2
  %cond = select i1 %cmp, i32 1, i32 3
  store i32 %cond, i32* %num_models, align 4
  store double 1.000000e+30, double* %min_xr, align 8
  store i32 0, i32* %model, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.683, %entry
  %2 = load i32, i32* %model, align 4
  %3 = load i32, i32* %num_models, align 4
  %cmp1 = icmp slt i32 %2, %3
  br i1 %cmp1, label %for.body, label %for.end.685

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %xr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc.33, %for.body
  %4 = load i32, i32* %i, align 4
  %cmp3 = icmp slt i32 %4, 3
  br i1 %cmp3, label %for.body.4, label %for.end.35

for.body.4:                                       ; preds = %for.cond.2
  store i32 0, i32* %j, align 4
  br label %for.cond.5

for.cond.5:                                       ; preds = %for.inc, %for.body.4
  %5 = load i32, i32* %j, align 4
  %cmp6 = icmp slt i32 %5, 11
  br i1 %cmp6, label %for.body.7, label %for.end

for.body.7:                                       ; preds = %for.cond.5
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %type8, align 4
  %cmp9 = icmp eq i32 %7, 2
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %for.body.7
  %8 = load i32, i32* %j, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mb_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %10, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [11 x %struct.BiContextType]], [3 x [11 x %struct.BiContextType]]* %mb_type_contexts, i32 0, i64 %idxprom10
  %arrayidx11 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx, i32 0, i64 %idxprom
  %11 = load i32, i32* %j, align 4
  %idxprom12 = sext i32 %11 to i64
  %12 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %13 = load i32, i32* %model, align 4
  %idxprom14 = sext i32 %13 to i64
  %arrayidx15 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], [1 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_I, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx15, i32 0, i64 %idxprom13
  %arrayidx17 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx16, i32 0, i64 %idxprom12
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx17, i32 0, i64 0
  %call = call double @XRate(%struct.BiContextType* %arrayidx11, i32* %arrayidx18)
  %14 = load double, double* %xr, align 8
  %add = fadd double %14, %call
  store double %add, double* %xr, align 8
  br label %if.end

if.else:                                          ; preds = %for.body.7
  %15 = load i32, i32* %j, align 4
  %idxprom19 = sext i32 %15 to i64
  %16 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %16 to i64
  %17 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mb_type_contexts21 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %17, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], [3 x [11 x %struct.BiContextType]]* %mb_type_contexts21, i32 0, i64 %idxprom20
  %arrayidx23 = getelementptr inbounds [11 x %struct.BiContextType], [11 x %struct.BiContextType]* %arrayidx22, i32 0, i64 %idxprom19
  %18 = load i32, i32* %j, align 4
  %idxprom24 = sext i32 %18 to i64
  %19 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %19 to i64
  %20 = load i32, i32* %model, align 4
  %idxprom26 = sext i32 %20 to i64
  %arrayidx27 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], [3 x [3 x [11 x [2 x i32]]]]* @INIT_MB_TYPE_P, i32 0, i64 %idxprom26
  %arrayidx28 = getelementptr inbounds [3 x [11 x [2 x i32]]], [3 x [11 x [2 x i32]]]* %arrayidx27, i32 0, i64 %idxprom25
  %arrayidx29 = getelementptr inbounds [11 x [2 x i32]], [11 x [2 x i32]]* %arrayidx28, i32 0, i64 %idxprom24
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i32 0, i64 0
  %call31 = call double @XRate(%struct.BiContextType* %arrayidx23, i32* %arrayidx30)
  %21 = load double, double* %xr, align 8
  %add32 = fadd double %21, %call31
  store double %add32, double* %xr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %j, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.5

for.end:                                          ; preds = %for.cond.5
  br label %for.inc.33

for.inc.33:                                       ; preds = %for.end
  %23 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %23, 1
  store i32 %inc34, i32* %i, align 4
  br label %for.cond.2

for.end.35:                                       ; preds = %for.cond.2
  store i32 0, i32* %i, align 4
  br label %for.cond.36

for.cond.36:                                      ; preds = %for.inc.77, %for.end.35
  %24 = load i32, i32* %i, align 4
  %cmp37 = icmp slt i32 %24, 2
  br i1 %cmp37, label %for.body.38, label %for.end.79

for.body.38:                                      ; preds = %for.cond.36
  store i32 0, i32* %j, align 4
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.74, %for.body.38
  %25 = load i32, i32* %j, align 4
  %cmp40 = icmp slt i32 %25, 9
  br i1 %cmp40, label %for.body.41, label %for.end.76

for.body.41:                                      ; preds = %for.cond.39
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 5
  %27 = load i32, i32* %type42, align 4
  %cmp43 = icmp eq i32 %27, 2
  br i1 %cmp43, label %if.then.44, label %if.else.58

if.then.44:                                       ; preds = %for.body.41
  %28 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %28 to i64
  %29 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %29 to i64
  %30 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %b8_type_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %30, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts, i32 0, i64 %idxprom46
  %arrayidx48 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx47, i32 0, i64 %idxprom45
  %31 = load i32, i32* %j, align 4
  %idxprom49 = sext i32 %31 to i64
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %33 = load i32, i32* %model, align 4
  %idxprom51 = sext i32 %33 to i64
  %arrayidx52 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], [1 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_I, i32 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx52, i32 0, i64 %idxprom50
  %arrayidx54 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx53, i32 0, i64 %idxprom49
  %arrayidx55 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx54, i32 0, i64 0
  %call56 = call double @XRate(%struct.BiContextType* %arrayidx48, i32* %arrayidx55)
  %34 = load double, double* %xr, align 8
  %add57 = fadd double %34, %call56
  store double %add57, double* %xr, align 8
  br label %if.end.73

if.else.58:                                       ; preds = %for.body.41
  %35 = load i32, i32* %j, align 4
  %idxprom59 = sext i32 %35 to i64
  %36 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %36 to i64
  %37 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %b8_type_contexts61 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %37, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [2 x [9 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]]* %b8_type_contexts61, i32 0, i64 %idxprom60
  %arrayidx63 = getelementptr inbounds [9 x %struct.BiContextType], [9 x %struct.BiContextType]* %arrayidx62, i32 0, i64 %idxprom59
  %38 = load i32, i32* %j, align 4
  %idxprom64 = sext i32 %38 to i64
  %39 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %39 to i64
  %40 = load i32, i32* %model, align 4
  %idxprom66 = sext i32 %40 to i64
  %arrayidx67 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], [3 x [2 x [9 x [2 x i32]]]]* @INIT_B8_TYPE_P, i32 0, i64 %idxprom66
  %arrayidx68 = getelementptr inbounds [2 x [9 x [2 x i32]]], [2 x [9 x [2 x i32]]]* %arrayidx67, i32 0, i64 %idxprom65
  %arrayidx69 = getelementptr inbounds [9 x [2 x i32]], [9 x [2 x i32]]* %arrayidx68, i32 0, i64 %idxprom64
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx69, i32 0, i64 0
  %call71 = call double @XRate(%struct.BiContextType* %arrayidx63, i32* %arrayidx70)
  %41 = load double, double* %xr, align 8
  %add72 = fadd double %41, %call71
  store double %add72, double* %xr, align 8
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.58, %if.then.44
  br label %for.inc.74

for.inc.74:                                       ; preds = %if.end.73
  %42 = load i32, i32* %j, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %j, align 4
  br label %for.cond.39

for.end.76:                                       ; preds = %for.cond.39
  br label %for.inc.77

for.inc.77:                                       ; preds = %for.end.76
  %43 = load i32, i32* %i, align 4
  %inc78 = add nsw i32 %43, 1
  store i32 %inc78, i32* %i, align 4
  br label %for.cond.36

for.end.79:                                       ; preds = %for.cond.36
  store i32 0, i32* %i, align 4
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.121, %for.end.79
  %44 = load i32, i32* %i, align 4
  %cmp81 = icmp slt i32 %44, 2
  br i1 %cmp81, label %for.body.82, label %for.end.123

for.body.82:                                      ; preds = %for.cond.80
  store i32 0, i32* %j, align 4
  br label %for.cond.83

for.cond.83:                                      ; preds = %for.inc.118, %for.body.82
  %45 = load i32, i32* %j, align 4
  %cmp84 = icmp slt i32 %45, 10
  br i1 %cmp84, label %for.body.85, label %for.end.120

for.body.85:                                      ; preds = %for.cond.83
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type86 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 5
  %47 = load i32, i32* %type86, align 4
  %cmp87 = icmp eq i32 %47, 2
  br i1 %cmp87, label %if.then.88, label %if.else.102

if.then.88:                                       ; preds = %for.body.85
  %48 = load i32, i32* %j, align 4
  %idxprom89 = sext i32 %48 to i64
  %49 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %49 to i64
  %50 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mv_res_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %50, i32 0, i32 2
  %arrayidx91 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts, i32 0, i64 %idxprom90
  %arrayidx92 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx91, i32 0, i64 %idxprom89
  %51 = load i32, i32* %j, align 4
  %idxprom93 = sext i32 %51 to i64
  %52 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %52 to i64
  %53 = load i32, i32* %model, align 4
  %idxprom95 = sext i32 %53 to i64
  %arrayidx96 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], [1 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_I, i32 0, i64 %idxprom95
  %arrayidx97 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx96, i32 0, i64 %idxprom94
  %arrayidx98 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx97, i32 0, i64 %idxprom93
  %arrayidx99 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx98, i32 0, i64 0
  %call100 = call double @XRate(%struct.BiContextType* %arrayidx92, i32* %arrayidx99)
  %54 = load double, double* %xr, align 8
  %add101 = fadd double %54, %call100
  store double %add101, double* %xr, align 8
  br label %if.end.117

if.else.102:                                      ; preds = %for.body.85
  %55 = load i32, i32* %j, align 4
  %idxprom103 = sext i32 %55 to i64
  %56 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %56 to i64
  %57 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mv_res_contexts105 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %57, i32 0, i32 2
  %arrayidx106 = getelementptr inbounds [2 x [10 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]]* %mv_res_contexts105, i32 0, i64 %idxprom104
  %arrayidx107 = getelementptr inbounds [10 x %struct.BiContextType], [10 x %struct.BiContextType]* %arrayidx106, i32 0, i64 %idxprom103
  %58 = load i32, i32* %j, align 4
  %idxprom108 = sext i32 %58 to i64
  %59 = load i32, i32* %i, align 4
  %idxprom109 = sext i32 %59 to i64
  %60 = load i32, i32* %model, align 4
  %idxprom110 = sext i32 %60 to i64
  %arrayidx111 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], [3 x [2 x [10 x [2 x i32]]]]* @INIT_MV_RES_P, i32 0, i64 %idxprom110
  %arrayidx112 = getelementptr inbounds [2 x [10 x [2 x i32]]], [2 x [10 x [2 x i32]]]* %arrayidx111, i32 0, i64 %idxprom109
  %arrayidx113 = getelementptr inbounds [10 x [2 x i32]], [10 x [2 x i32]]* %arrayidx112, i32 0, i64 %idxprom108
  %arrayidx114 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx113, i32 0, i64 0
  %call115 = call double @XRate(%struct.BiContextType* %arrayidx107, i32* %arrayidx114)
  %61 = load double, double* %xr, align 8
  %add116 = fadd double %61, %call115
  store double %add116, double* %xr, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.102, %if.then.88
  br label %for.inc.118

for.inc.118:                                      ; preds = %if.end.117
  %62 = load i32, i32* %j, align 4
  %inc119 = add nsw i32 %62, 1
  store i32 %inc119, i32* %j, align 4
  br label %for.cond.83

for.end.120:                                      ; preds = %for.cond.83
  br label %for.inc.121

for.inc.121:                                      ; preds = %for.end.120
  %63 = load i32, i32* %i, align 4
  %inc122 = add nsw i32 %63, 1
  store i32 %inc122, i32* %i, align 4
  br label %for.cond.80

for.end.123:                                      ; preds = %for.cond.80
  store i32 0, i32* %i, align 4
  br label %for.cond.124

for.cond.124:                                     ; preds = %for.inc.165, %for.end.123
  %64 = load i32, i32* %i, align 4
  %cmp125 = icmp slt i32 %64, 2
  br i1 %cmp125, label %for.body.126, label %for.end.167

for.body.126:                                     ; preds = %for.cond.124
  store i32 0, i32* %j, align 4
  br label %for.cond.127

for.cond.127:                                     ; preds = %for.inc.162, %for.body.126
  %65 = load i32, i32* %j, align 4
  %cmp128 = icmp slt i32 %65, 6
  br i1 %cmp128, label %for.body.129, label %for.end.164

for.body.129:                                     ; preds = %for.cond.127
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type130 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 5
  %67 = load i32, i32* %type130, align 4
  %cmp131 = icmp eq i32 %67, 2
  br i1 %cmp131, label %if.then.132, label %if.else.146

if.then.132:                                      ; preds = %for.body.129
  %68 = load i32, i32* %j, align 4
  %idxprom133 = sext i32 %68 to i64
  %69 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %69 to i64
  %70 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %ref_no_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %70, i32 0, i32 3
  %arrayidx135 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts, i32 0, i64 %idxprom134
  %arrayidx136 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx135, i32 0, i64 %idxprom133
  %71 = load i32, i32* %j, align 4
  %idxprom137 = sext i32 %71 to i64
  %72 = load i32, i32* %i, align 4
  %idxprom138 = sext i32 %72 to i64
  %73 = load i32, i32* %model, align 4
  %idxprom139 = sext i32 %73 to i64
  %arrayidx140 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], [1 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_I, i32 0, i64 %idxprom139
  %arrayidx141 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx140, i32 0, i64 %idxprom138
  %arrayidx142 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx141, i32 0, i64 %idxprom137
  %arrayidx143 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx142, i32 0, i64 0
  %call144 = call double @XRate(%struct.BiContextType* %arrayidx136, i32* %arrayidx143)
  %74 = load double, double* %xr, align 8
  %add145 = fadd double %74, %call144
  store double %add145, double* %xr, align 8
  br label %if.end.161

if.else.146:                                      ; preds = %for.body.129
  %75 = load i32, i32* %j, align 4
  %idxprom147 = sext i32 %75 to i64
  %76 = load i32, i32* %i, align 4
  %idxprom148 = sext i32 %76 to i64
  %77 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %ref_no_contexts149 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %77, i32 0, i32 3
  %arrayidx150 = getelementptr inbounds [2 x [6 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]]* %ref_no_contexts149, i32 0, i64 %idxprom148
  %arrayidx151 = getelementptr inbounds [6 x %struct.BiContextType], [6 x %struct.BiContextType]* %arrayidx150, i32 0, i64 %idxprom147
  %78 = load i32, i32* %j, align 4
  %idxprom152 = sext i32 %78 to i64
  %79 = load i32, i32* %i, align 4
  %idxprom153 = sext i32 %79 to i64
  %80 = load i32, i32* %model, align 4
  %idxprom154 = sext i32 %80 to i64
  %arrayidx155 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], [3 x [2 x [6 x [2 x i32]]]]* @INIT_REF_NO_P, i32 0, i64 %idxprom154
  %arrayidx156 = getelementptr inbounds [2 x [6 x [2 x i32]]], [2 x [6 x [2 x i32]]]* %arrayidx155, i32 0, i64 %idxprom153
  %arrayidx157 = getelementptr inbounds [6 x [2 x i32]], [6 x [2 x i32]]* %arrayidx156, i32 0, i64 %idxprom152
  %arrayidx158 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx157, i32 0, i64 0
  %call159 = call double @XRate(%struct.BiContextType* %arrayidx151, i32* %arrayidx158)
  %81 = load double, double* %xr, align 8
  %add160 = fadd double %81, %call159
  store double %add160, double* %xr, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.146, %if.then.132
  br label %for.inc.162

for.inc.162:                                      ; preds = %if.end.161
  %82 = load i32, i32* %j, align 4
  %inc163 = add nsw i32 %82, 1
  store i32 %inc163, i32* %j, align 4
  br label %for.cond.127

for.end.164:                                      ; preds = %for.cond.127
  br label %for.inc.165

for.inc.165:                                      ; preds = %for.end.164
  %83 = load i32, i32* %i, align 4
  %inc166 = add nsw i32 %83, 1
  store i32 %inc166, i32* %i, align 4
  br label %for.cond.124

for.end.167:                                      ; preds = %for.cond.124
  store i32 0, i32* %j, align 4
  br label %for.cond.168

for.cond.168:                                     ; preds = %for.inc.197, %for.end.167
  %84 = load i32, i32* %j, align 4
  %cmp169 = icmp slt i32 %84, 4
  br i1 %cmp169, label %for.body.170, label %for.end.199

for.body.170:                                     ; preds = %for.cond.168
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type171 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 5
  %86 = load i32, i32* %type171, align 4
  %cmp172 = icmp eq i32 %86, 2
  br i1 %cmp172, label %if.then.173, label %if.else.184

if.then.173:                                      ; preds = %for.body.170
  %87 = load i32, i32* %j, align 4
  %idxprom174 = sext i32 %87 to i64
  %88 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %delta_qp_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %88, i32 0, i32 4
  %arrayidx175 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts, i32 0, i64 %idxprom174
  %89 = load i32, i32* %j, align 4
  %idxprom176 = sext i32 %89 to i64
  %90 = load i32, i32* %model, align 4
  %idxprom177 = sext i32 %90 to i64
  %arrayidx178 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_I, i32 0, i64 %idxprom177
  %arrayidx179 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx178, i32 0, i64 0
  %arrayidx180 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx179, i32 0, i64 %idxprom176
  %arrayidx181 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx180, i32 0, i64 0
  %call182 = call double @XRate(%struct.BiContextType* %arrayidx175, i32* %arrayidx181)
  %91 = load double, double* %xr, align 8
  %add183 = fadd double %91, %call182
  store double %add183, double* %xr, align 8
  br label %if.end.196

if.else.184:                                      ; preds = %for.body.170
  %92 = load i32, i32* %j, align 4
  %idxprom185 = sext i32 %92 to i64
  %93 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %delta_qp_contexts186 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %93, i32 0, i32 4
  %arrayidx187 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %delta_qp_contexts186, i32 0, i64 %idxprom185
  %94 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %94 to i64
  %95 = load i32, i32* %model, align 4
  %idxprom189 = sext i32 %95 to i64
  %arrayidx190 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_DELTA_QP_P, i32 0, i64 %idxprom189
  %arrayidx191 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx190, i32 0, i64 0
  %arrayidx192 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx191, i32 0, i64 %idxprom188
  %arrayidx193 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx192, i32 0, i64 0
  %call194 = call double @XRate(%struct.BiContextType* %arrayidx187, i32* %arrayidx193)
  %96 = load double, double* %xr, align 8
  %add195 = fadd double %96, %call194
  store double %add195, double* %xr, align 8
  br label %if.end.196

if.end.196:                                       ; preds = %if.else.184, %if.then.173
  br label %for.inc.197

for.inc.197:                                      ; preds = %if.end.196
  %97 = load i32, i32* %j, align 4
  %inc198 = add nsw i32 %97, 1
  store i32 %inc198, i32* %j, align 4
  br label %for.cond.168

for.end.199:                                      ; preds = %for.cond.168
  store i32 0, i32* %j, align 4
  br label %for.cond.200

for.cond.200:                                     ; preds = %for.inc.229, %for.end.199
  %98 = load i32, i32* %j, align 4
  %cmp201 = icmp slt i32 %98, 4
  br i1 %cmp201, label %for.body.202, label %for.end.231

for.body.202:                                     ; preds = %for.cond.200
  %99 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %99, i32 0, i32 5
  %100 = load i32, i32* %type203, align 4
  %cmp204 = icmp eq i32 %100, 2
  br i1 %cmp204, label %if.then.205, label %if.else.216

if.then.205:                                      ; preds = %for.body.202
  %101 = load i32, i32* %j, align 4
  %idxprom206 = sext i32 %101 to i64
  %102 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mb_aff_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %102, i32 0, i32 5
  %arrayidx207 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts, i32 0, i64 %idxprom206
  %103 = load i32, i32* %j, align 4
  %idxprom208 = sext i32 %103 to i64
  %104 = load i32, i32* %model, align 4
  %idxprom209 = sext i32 %104 to i64
  %arrayidx210 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_I, i32 0, i64 %idxprom209
  %arrayidx211 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx210, i32 0, i64 0
  %arrayidx212 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx211, i32 0, i64 %idxprom208
  %arrayidx213 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx212, i32 0, i64 0
  %call214 = call double @XRate(%struct.BiContextType* %arrayidx207, i32* %arrayidx213)
  %105 = load double, double* %xr, align 8
  %add215 = fadd double %105, %call214
  store double %add215, double* %xr, align 8
  br label %if.end.228

if.else.216:                                      ; preds = %for.body.202
  %106 = load i32, i32* %j, align 4
  %idxprom217 = sext i32 %106 to i64
  %107 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %mb_aff_contexts218 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %107, i32 0, i32 5
  %arrayidx219 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %mb_aff_contexts218, i32 0, i64 %idxprom217
  %108 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %108 to i64
  %109 = load i32, i32* %model, align 4
  %idxprom221 = sext i32 %109 to i64
  %arrayidx222 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_MB_AFF_P, i32 0, i64 %idxprom221
  %arrayidx223 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx222, i32 0, i64 0
  %arrayidx224 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx223, i32 0, i64 %idxprom220
  %arrayidx225 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx224, i32 0, i64 0
  %call226 = call double @XRate(%struct.BiContextType* %arrayidx219, i32* %arrayidx225)
  %110 = load double, double* %xr, align 8
  %add227 = fadd double %110, %call226
  store double %add227, double* %xr, align 8
  br label %if.end.228

if.end.228:                                       ; preds = %if.else.216, %if.then.205
  br label %for.inc.229

for.inc.229:                                      ; preds = %if.end.228
  %111 = load i32, i32* %j, align 4
  %inc230 = add nsw i32 %111, 1
  store i32 %inc230, i32* %j, align 4
  br label %for.cond.200

for.end.231:                                      ; preds = %for.cond.200
  store i32 0, i32* %j, align 4
  br label %for.cond.232

for.cond.232:                                     ; preds = %for.inc.261, %for.end.231
  %112 = load i32, i32* %j, align 4
  %cmp233 = icmp slt i32 %112, 3
  br i1 %cmp233, label %for.body.234, label %for.end.263

for.body.234:                                     ; preds = %for.cond.232
  %113 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type235 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %113, i32 0, i32 5
  %114 = load i32, i32* %type235, align 4
  %cmp236 = icmp eq i32 %114, 2
  br i1 %cmp236, label %if.then.237, label %if.else.248

if.then.237:                                      ; preds = %for.body.234
  %115 = load i32, i32* %j, align 4
  %idxprom238 = sext i32 %115 to i64
  %116 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %transform_size_contexts = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %116, i32 0, i32 6
  %arrayidx239 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts, i32 0, i64 %idxprom238
  %117 = load i32, i32* %j, align 4
  %idxprom240 = sext i32 %117 to i64
  %118 = load i32, i32* %model, align 4
  %idxprom241 = sext i32 %118 to i64
  %arrayidx242 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], [1 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_I, i32 0, i64 %idxprom241
  %arrayidx243 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx242, i32 0, i64 0
  %arrayidx244 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx243, i32 0, i64 %idxprom240
  %arrayidx245 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx244, i32 0, i64 0
  %call246 = call double @XRate(%struct.BiContextType* %arrayidx239, i32* %arrayidx245)
  %119 = load double, double* %xr, align 8
  %add247 = fadd double %119, %call246
  store double %add247, double* %xr, align 8
  br label %if.end.260

if.else.248:                                      ; preds = %for.body.234
  %120 = load i32, i32* %j, align 4
  %idxprom249 = sext i32 %120 to i64
  %121 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mc.addr, align 8
  %transform_size_contexts250 = getelementptr inbounds %struct.MotionInfoContexts, %struct.MotionInfoContexts* %121, i32 0, i32 6
  %arrayidx251 = getelementptr inbounds [3 x %struct.BiContextType], [3 x %struct.BiContextType]* %transform_size_contexts250, i32 0, i64 %idxprom249
  %122 = load i32, i32* %j, align 4
  %idxprom252 = sext i32 %122 to i64
  %123 = load i32, i32* %model, align 4
  %idxprom253 = sext i32 %123 to i64
  %arrayidx254 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], [3 x [1 x [3 x [2 x i32]]]]* @INIT_TRANSFORM_SIZE_P, i32 0, i64 %idxprom253
  %arrayidx255 = getelementptr inbounds [1 x [3 x [2 x i32]]], [1 x [3 x [2 x i32]]]* %arrayidx254, i32 0, i64 0
  %arrayidx256 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %arrayidx255, i32 0, i64 %idxprom252
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx256, i32 0, i64 0
  %call258 = call double @XRate(%struct.BiContextType* %arrayidx251, i32* %arrayidx257)
  %124 = load double, double* %xr, align 8
  %add259 = fadd double %124, %call258
  store double %add259, double* %xr, align 8
  br label %if.end.260

if.end.260:                                       ; preds = %if.else.248, %if.then.237
  br label %for.inc.261

for.inc.261:                                      ; preds = %if.end.260
  %125 = load i32, i32* %j, align 4
  %inc262 = add nsw i32 %125, 1
  store i32 %inc262, i32* %j, align 4
  br label %for.cond.232

for.end.263:                                      ; preds = %for.cond.232
  store i32 0, i32* %j, align 4
  br label %for.cond.264

for.cond.264:                                     ; preds = %for.inc.293, %for.end.263
  %126 = load i32, i32* %j, align 4
  %cmp265 = icmp slt i32 %126, 2
  br i1 %cmp265, label %for.body.266, label %for.end.295

for.body.266:                                     ; preds = %for.cond.264
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type267 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 5
  %128 = load i32, i32* %type267, align 4
  %cmp268 = icmp eq i32 %128, 2
  br i1 %cmp268, label %if.then.269, label %if.else.280

if.then.269:                                      ; preds = %for.body.266
  %129 = load i32, i32* %j, align 4
  %idxprom270 = sext i32 %129 to i64
  %130 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %ipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %130, i32 0, i32 0
  %arrayidx271 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts, i32 0, i64 %idxprom270
  %131 = load i32, i32* %j, align 4
  %idxprom272 = sext i32 %131 to i64
  %132 = load i32, i32* %model, align 4
  %idxprom273 = sext i32 %132 to i64
  %arrayidx274 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], [1 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_I, i32 0, i64 %idxprom273
  %arrayidx275 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx274, i32 0, i64 0
  %arrayidx276 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx275, i32 0, i64 %idxprom272
  %arrayidx277 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx276, i32 0, i64 0
  %call278 = call double @XRate(%struct.BiContextType* %arrayidx271, i32* %arrayidx277)
  %133 = load double, double* %xr, align 8
  %add279 = fadd double %133, %call278
  store double %add279, double* %xr, align 8
  br label %if.end.292

if.else.280:                                      ; preds = %for.body.266
  %134 = load i32, i32* %j, align 4
  %idxprom281 = sext i32 %134 to i64
  %135 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %ipr_contexts282 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %135, i32 0, i32 0
  %arrayidx283 = getelementptr inbounds [2 x %struct.BiContextType], [2 x %struct.BiContextType]* %ipr_contexts282, i32 0, i64 %idxprom281
  %136 = load i32, i32* %j, align 4
  %idxprom284 = sext i32 %136 to i64
  %137 = load i32, i32* %model, align 4
  %idxprom285 = sext i32 %137 to i64
  %arrayidx286 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], [3 x [1 x [2 x [2 x i32]]]]* @INIT_IPR_P, i32 0, i64 %idxprom285
  %arrayidx287 = getelementptr inbounds [1 x [2 x [2 x i32]]], [1 x [2 x [2 x i32]]]* %arrayidx286, i32 0, i64 0
  %arrayidx288 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx287, i32 0, i64 %idxprom284
  %arrayidx289 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx288, i32 0, i64 0
  %call290 = call double @XRate(%struct.BiContextType* %arrayidx283, i32* %arrayidx289)
  %138 = load double, double* %xr, align 8
  %add291 = fadd double %138, %call290
  store double %add291, double* %xr, align 8
  br label %if.end.292

if.end.292:                                       ; preds = %if.else.280, %if.then.269
  br label %for.inc.293

for.inc.293:                                      ; preds = %if.end.292
  %139 = load i32, i32* %j, align 4
  %inc294 = add nsw i32 %139, 1
  store i32 %inc294, i32* %j, align 4
  br label %for.cond.264

for.end.295:                                      ; preds = %for.cond.264
  store i32 0, i32* %j, align 4
  br label %for.cond.296

for.cond.296:                                     ; preds = %for.inc.325, %for.end.295
  %140 = load i32, i32* %j, align 4
  %cmp297 = icmp slt i32 %140, 4
  br i1 %cmp297, label %for.body.298, label %for.end.327

for.body.298:                                     ; preds = %for.cond.296
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type299 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 5
  %142 = load i32, i32* %type299, align 4
  %cmp300 = icmp eq i32 %142, 2
  br i1 %cmp300, label %if.then.301, label %if.else.312

if.then.301:                                      ; preds = %for.body.298
  %143 = load i32, i32* %j, align 4
  %idxprom302 = sext i32 %143 to i64
  %144 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %cipr_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %144, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts, i32 0, i64 %idxprom302
  %145 = load i32, i32* %j, align 4
  %idxprom304 = sext i32 %145 to i64
  %146 = load i32, i32* %model, align 4
  %idxprom305 = sext i32 %146 to i64
  %arrayidx306 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], [1 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_I, i32 0, i64 %idxprom305
  %arrayidx307 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx306, i32 0, i64 0
  %arrayidx308 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx307, i32 0, i64 %idxprom304
  %arrayidx309 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx308, i32 0, i64 0
  %call310 = call double @XRate(%struct.BiContextType* %arrayidx303, i32* %arrayidx309)
  %147 = load double, double* %xr, align 8
  %add311 = fadd double %147, %call310
  store double %add311, double* %xr, align 8
  br label %if.end.324

if.else.312:                                      ; preds = %for.body.298
  %148 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %148 to i64
  %149 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %cipr_contexts314 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %149, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %cipr_contexts314, i32 0, i64 %idxprom313
  %150 = load i32, i32* %j, align 4
  %idxprom316 = sext i32 %150 to i64
  %151 = load i32, i32* %model, align 4
  %idxprom317 = sext i32 %151 to i64
  %arrayidx318 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], [3 x [1 x [4 x [2 x i32]]]]* @INIT_CIPR_P, i32 0, i64 %idxprom317
  %arrayidx319 = getelementptr inbounds [1 x [4 x [2 x i32]]], [1 x [4 x [2 x i32]]]* %arrayidx318, i32 0, i64 0
  %arrayidx320 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx319, i32 0, i64 %idxprom316
  %arrayidx321 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx320, i32 0, i64 0
  %call322 = call double @XRate(%struct.BiContextType* %arrayidx315, i32* %arrayidx321)
  %152 = load double, double* %xr, align 8
  %add323 = fadd double %152, %call322
  store double %add323, double* %xr, align 8
  br label %if.end.324

if.end.324:                                       ; preds = %if.else.312, %if.then.301
  br label %for.inc.325

for.inc.325:                                      ; preds = %if.end.324
  %153 = load i32, i32* %j, align 4
  %inc326 = add nsw i32 %153, 1
  store i32 %inc326, i32* %j, align 4
  br label %for.cond.296

for.end.327:                                      ; preds = %for.cond.296
  store i32 0, i32* %i, align 4
  br label %for.cond.328

for.cond.328:                                     ; preds = %for.inc.369, %for.end.327
  %154 = load i32, i32* %i, align 4
  %cmp329 = icmp slt i32 %154, 3
  br i1 %cmp329, label %for.body.330, label %for.end.371

for.body.330:                                     ; preds = %for.cond.328
  store i32 0, i32* %j, align 4
  br label %for.cond.331

for.cond.331:                                     ; preds = %for.inc.366, %for.body.330
  %155 = load i32, i32* %j, align 4
  %cmp332 = icmp slt i32 %155, 4
  br i1 %cmp332, label %for.body.333, label %for.end.368

for.body.333:                                     ; preds = %for.cond.331
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type334 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 5
  %157 = load i32, i32* %type334, align 4
  %cmp335 = icmp eq i32 %157, 2
  br i1 %cmp335, label %if.then.336, label %if.else.350

if.then.336:                                      ; preds = %for.body.333
  %158 = load i32, i32* %j, align 4
  %idxprom337 = sext i32 %158 to i64
  %159 = load i32, i32* %i, align 4
  %idxprom338 = sext i32 %159 to i64
  %160 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %cbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %160, i32 0, i32 2
  %arrayidx339 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts, i32 0, i64 %idxprom338
  %arrayidx340 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx339, i32 0, i64 %idxprom337
  %161 = load i32, i32* %j, align 4
  %idxprom341 = sext i32 %161 to i64
  %162 = load i32, i32* %i, align 4
  %idxprom342 = sext i32 %162 to i64
  %163 = load i32, i32* %model, align 4
  %idxprom343 = sext i32 %163 to i64
  %arrayidx344 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], [1 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_I, i32 0, i64 %idxprom343
  %arrayidx345 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx344, i32 0, i64 %idxprom342
  %arrayidx346 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx345, i32 0, i64 %idxprom341
  %arrayidx347 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx346, i32 0, i64 0
  %call348 = call double @XRate(%struct.BiContextType* %arrayidx340, i32* %arrayidx347)
  %164 = load double, double* %xr, align 8
  %add349 = fadd double %164, %call348
  store double %add349, double* %xr, align 8
  br label %if.end.365

if.else.350:                                      ; preds = %for.body.333
  %165 = load i32, i32* %j, align 4
  %idxprom351 = sext i32 %165 to i64
  %166 = load i32, i32* %i, align 4
  %idxprom352 = sext i32 %166 to i64
  %167 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %cbp_contexts353 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %167, i32 0, i32 2
  %arrayidx354 = getelementptr inbounds [3 x [4 x %struct.BiContextType]], [3 x [4 x %struct.BiContextType]]* %cbp_contexts353, i32 0, i64 %idxprom352
  %arrayidx355 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx354, i32 0, i64 %idxprom351
  %168 = load i32, i32* %j, align 4
  %idxprom356 = sext i32 %168 to i64
  %169 = load i32, i32* %i, align 4
  %idxprom357 = sext i32 %169 to i64
  %170 = load i32, i32* %model, align 4
  %idxprom358 = sext i32 %170 to i64
  %arrayidx359 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], [3 x [3 x [4 x [2 x i32]]]]* @INIT_CBP_P, i32 0, i64 %idxprom358
  %arrayidx360 = getelementptr inbounds [3 x [4 x [2 x i32]]], [3 x [4 x [2 x i32]]]* %arrayidx359, i32 0, i64 %idxprom357
  %arrayidx361 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx360, i32 0, i64 %idxprom356
  %arrayidx362 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx361, i32 0, i64 0
  %call363 = call double @XRate(%struct.BiContextType* %arrayidx355, i32* %arrayidx362)
  %171 = load double, double* %xr, align 8
  %add364 = fadd double %171, %call363
  store double %add364, double* %xr, align 8
  br label %if.end.365

if.end.365:                                       ; preds = %if.else.350, %if.then.336
  br label %for.inc.366

for.inc.366:                                      ; preds = %if.end.365
  %172 = load i32, i32* %j, align 4
  %inc367 = add nsw i32 %172, 1
  store i32 %inc367, i32* %j, align 4
  br label %for.cond.331

for.end.368:                                      ; preds = %for.cond.331
  br label %for.inc.369

for.inc.369:                                      ; preds = %for.end.368
  %173 = load i32, i32* %i, align 4
  %inc370 = add nsw i32 %173, 1
  store i32 %inc370, i32* %i, align 4
  br label %for.cond.328

for.end.371:                                      ; preds = %for.cond.328
  store i32 0, i32* %i, align 4
  br label %for.cond.372

for.cond.372:                                     ; preds = %for.inc.413, %for.end.371
  %174 = load i32, i32* %i, align 4
  %cmp373 = icmp slt i32 %174, 10
  br i1 %cmp373, label %for.body.374, label %for.end.415

for.body.374:                                     ; preds = %for.cond.372
  store i32 0, i32* %j, align 4
  br label %for.cond.375

for.cond.375:                                     ; preds = %for.inc.410, %for.body.374
  %175 = load i32, i32* %j, align 4
  %cmp376 = icmp slt i32 %175, 4
  br i1 %cmp376, label %for.body.377, label %for.end.412

for.body.377:                                     ; preds = %for.cond.375
  %176 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %176, i32 0, i32 5
  %177 = load i32, i32* %type378, align 4
  %cmp379 = icmp eq i32 %177, 2
  br i1 %cmp379, label %if.then.380, label %if.else.394

if.then.380:                                      ; preds = %for.body.377
  %178 = load i32, i32* %j, align 4
  %idxprom381 = sext i32 %178 to i64
  %179 = load i32, i32* %i, align 4
  %idxprom382 = sext i32 %179 to i64
  %180 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %bcbp_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %180, i32 0, i32 3
  %arrayidx383 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts, i32 0, i64 %idxprom382
  %arrayidx384 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx383, i32 0, i64 %idxprom381
  %181 = load i32, i32* %j, align 4
  %idxprom385 = sext i32 %181 to i64
  %182 = load i32, i32* %i, align 4
  %idxprom386 = sext i32 %182 to i64
  %183 = load i32, i32* %model, align 4
  %idxprom387 = sext i32 %183 to i64
  %arrayidx388 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], [1 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_I, i32 0, i64 %idxprom387
  %arrayidx389 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx388, i32 0, i64 %idxprom386
  %arrayidx390 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx389, i32 0, i64 %idxprom385
  %arrayidx391 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx390, i32 0, i64 0
  %call392 = call double @XRate(%struct.BiContextType* %arrayidx384, i32* %arrayidx391)
  %184 = load double, double* %xr, align 8
  %add393 = fadd double %184, %call392
  store double %add393, double* %xr, align 8
  br label %if.end.409

if.else.394:                                      ; preds = %for.body.377
  %185 = load i32, i32* %j, align 4
  %idxprom395 = sext i32 %185 to i64
  %186 = load i32, i32* %i, align 4
  %idxprom396 = sext i32 %186 to i64
  %187 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %bcbp_contexts397 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %187, i32 0, i32 3
  %arrayidx398 = getelementptr inbounds [10 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]]* %bcbp_contexts397, i32 0, i64 %idxprom396
  %arrayidx399 = getelementptr inbounds [4 x %struct.BiContextType], [4 x %struct.BiContextType]* %arrayidx398, i32 0, i64 %idxprom395
  %188 = load i32, i32* %j, align 4
  %idxprom400 = sext i32 %188 to i64
  %189 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %189 to i64
  %190 = load i32, i32* %model, align 4
  %idxprom402 = sext i32 %190 to i64
  %arrayidx403 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], [3 x [8 x [4 x [2 x i32]]]]* @INIT_BCBP_P, i32 0, i64 %idxprom402
  %arrayidx404 = getelementptr inbounds [8 x [4 x [2 x i32]]], [8 x [4 x [2 x i32]]]* %arrayidx403, i32 0, i64 %idxprom401
  %arrayidx405 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx404, i32 0, i64 %idxprom400
  %arrayidx406 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx405, i32 0, i64 0
  %call407 = call double @XRate(%struct.BiContextType* %arrayidx399, i32* %arrayidx406)
  %191 = load double, double* %xr, align 8
  %add408 = fadd double %191, %call407
  store double %add408, double* %xr, align 8
  br label %if.end.409

if.end.409:                                       ; preds = %if.else.394, %if.then.380
  br label %for.inc.410

for.inc.410:                                      ; preds = %if.end.409
  %192 = load i32, i32* %j, align 4
  %inc411 = add nsw i32 %192, 1
  store i32 %inc411, i32* %j, align 4
  br label %for.cond.375

for.end.412:                                      ; preds = %for.cond.375
  br label %for.inc.413

for.inc.413:                                      ; preds = %for.end.412
  %193 = load i32, i32* %i, align 4
  %inc414 = add nsw i32 %193, 1
  store i32 %inc414, i32* %i, align 4
  br label %for.cond.372

for.end.415:                                      ; preds = %for.cond.372
  store i32 0, i32* %i, align 4
  br label %for.cond.416

for.cond.416:                                     ; preds = %for.inc.457, %for.end.415
  %194 = load i32, i32* %i, align 4
  %cmp417 = icmp slt i32 %194, 10
  br i1 %cmp417, label %for.body.418, label %for.end.459

for.body.418:                                     ; preds = %for.cond.416
  store i32 0, i32* %j, align 4
  br label %for.cond.419

for.cond.419:                                     ; preds = %for.inc.454, %for.body.418
  %195 = load i32, i32* %j, align 4
  %cmp420 = icmp slt i32 %195, 15
  br i1 %cmp420, label %for.body.421, label %for.end.456

for.body.421:                                     ; preds = %for.cond.419
  %196 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type422 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %196, i32 0, i32 5
  %197 = load i32, i32* %type422, align 4
  %cmp423 = icmp eq i32 %197, 2
  br i1 %cmp423, label %if.then.424, label %if.else.438

if.then.424:                                      ; preds = %for.body.421
  %198 = load i32, i32* %j, align 4
  %idxprom425 = sext i32 %198 to i64
  %199 = load i32, i32* %i, align 4
  %idxprom426 = sext i32 %199 to i64
  %200 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %200, i32 0, i32 4
  %arrayidx427 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts, i32 0, i64 %idxprom426
  %arrayidx428 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx427, i32 0, i64 %idxprom425
  %201 = load i32, i32* %j, align 4
  %idxprom429 = sext i32 %201 to i64
  %202 = load i32, i32* %i, align 4
  %idxprom430 = sext i32 %202 to i64
  %203 = load i32, i32* %model, align 4
  %idxprom431 = sext i32 %203 to i64
  %arrayidx432 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_I, i32 0, i64 %idxprom431
  %arrayidx433 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx432, i32 0, i64 %idxprom430
  %arrayidx434 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx433, i32 0, i64 %idxprom429
  %arrayidx435 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx434, i32 0, i64 0
  %call436 = call double @XRate(%struct.BiContextType* %arrayidx428, i32* %arrayidx435)
  %204 = load double, double* %xr, align 8
  %add437 = fadd double %204, %call436
  store double %add437, double* %xr, align 8
  br label %if.end.453

if.else.438:                                      ; preds = %for.body.421
  %205 = load i32, i32* %j, align 4
  %idxprom439 = sext i32 %205 to i64
  %206 = load i32, i32* %i, align 4
  %idxprom440 = sext i32 %206 to i64
  %207 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %map_contexts441 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %207, i32 0, i32 4
  %arrayidx442 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %map_contexts441, i32 0, i64 %idxprom440
  %arrayidx443 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx442, i32 0, i64 %idxprom439
  %208 = load i32, i32* %j, align 4
  %idxprom444 = sext i32 %208 to i64
  %209 = load i32, i32* %i, align 4
  %idxprom445 = sext i32 %209 to i64
  %210 = load i32, i32* %model, align 4
  %idxprom446 = sext i32 %210 to i64
  %arrayidx447 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_MAP_P, i32 0, i64 %idxprom446
  %arrayidx448 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx447, i32 0, i64 %idxprom445
  %arrayidx449 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx448, i32 0, i64 %idxprom444
  %arrayidx450 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx449, i32 0, i64 0
  %call451 = call double @XRate(%struct.BiContextType* %arrayidx443, i32* %arrayidx450)
  %211 = load double, double* %xr, align 8
  %add452 = fadd double %211, %call451
  store double %add452, double* %xr, align 8
  br label %if.end.453

if.end.453:                                       ; preds = %if.else.438, %if.then.424
  br label %for.inc.454

for.inc.454:                                      ; preds = %if.end.453
  %212 = load i32, i32* %j, align 4
  %inc455 = add nsw i32 %212, 1
  store i32 %inc455, i32* %j, align 4
  br label %for.cond.419

for.end.456:                                      ; preds = %for.cond.419
  br label %for.inc.457

for.inc.457:                                      ; preds = %for.end.456
  %213 = load i32, i32* %i, align 4
  %inc458 = add nsw i32 %213, 1
  store i32 %inc458, i32* %i, align 4
  br label %for.cond.416

for.end.459:                                      ; preds = %for.cond.416
  store i32 0, i32* %i, align 4
  br label %for.cond.460

for.cond.460:                                     ; preds = %for.inc.501, %for.end.459
  %214 = load i32, i32* %i, align 4
  %cmp461 = icmp slt i32 %214, 10
  br i1 %cmp461, label %for.body.462, label %for.end.503

for.body.462:                                     ; preds = %for.cond.460
  store i32 0, i32* %j, align 4
  br label %for.cond.463

for.cond.463:                                     ; preds = %for.inc.498, %for.body.462
  %215 = load i32, i32* %j, align 4
  %cmp464 = icmp slt i32 %215, 15
  br i1 %cmp464, label %for.body.465, label %for.end.500

for.body.465:                                     ; preds = %for.cond.463
  %216 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type466 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %216, i32 0, i32 5
  %217 = load i32, i32* %type466, align 4
  %cmp467 = icmp eq i32 %217, 2
  br i1 %cmp467, label %if.then.468, label %if.else.482

if.then.468:                                      ; preds = %for.body.465
  %218 = load i32, i32* %j, align 4
  %idxprom469 = sext i32 %218 to i64
  %219 = load i32, i32* %i, align 4
  %idxprom470 = sext i32 %219 to i64
  %220 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %220, i32 0, i32 5
  %arrayidx471 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts, i32 0, i64 %idxprom470
  %arrayidx472 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx471, i32 0, i64 %idxprom469
  %221 = load i32, i32* %j, align 4
  %idxprom473 = sext i32 %221 to i64
  %222 = load i32, i32* %i, align 4
  %idxprom474 = sext i32 %222 to i64
  %223 = load i32, i32* %model, align 4
  %idxprom475 = sext i32 %223 to i64
  %arrayidx476 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_I, i32 0, i64 %idxprom475
  %arrayidx477 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx476, i32 0, i64 %idxprom474
  %arrayidx478 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx477, i32 0, i64 %idxprom473
  %arrayidx479 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx478, i32 0, i64 0
  %call480 = call double @XRate(%struct.BiContextType* %arrayidx472, i32* %arrayidx479)
  %224 = load double, double* %xr, align 8
  %add481 = fadd double %224, %call480
  store double %add481, double* %xr, align 8
  br label %if.end.497

if.else.482:                                      ; preds = %for.body.465
  %225 = load i32, i32* %j, align 4
  %idxprom483 = sext i32 %225 to i64
  %226 = load i32, i32* %i, align 4
  %idxprom484 = sext i32 %226 to i64
  %227 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %last_contexts485 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %227, i32 0, i32 5
  %arrayidx486 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %last_contexts485, i32 0, i64 %idxprom484
  %arrayidx487 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx486, i32 0, i64 %idxprom483
  %228 = load i32, i32* %j, align 4
  %idxprom488 = sext i32 %228 to i64
  %229 = load i32, i32* %i, align 4
  %idxprom489 = sext i32 %229 to i64
  %230 = load i32, i32* %model, align 4
  %idxprom490 = sext i32 %230 to i64
  %arrayidx491 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_LAST_P, i32 0, i64 %idxprom490
  %arrayidx492 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx491, i32 0, i64 %idxprom489
  %arrayidx493 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx492, i32 0, i64 %idxprom488
  %arrayidx494 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx493, i32 0, i64 0
  %call495 = call double @XRate(%struct.BiContextType* %arrayidx487, i32* %arrayidx494)
  %231 = load double, double* %xr, align 8
  %add496 = fadd double %231, %call495
  store double %add496, double* %xr, align 8
  br label %if.end.497

if.end.497:                                       ; preds = %if.else.482, %if.then.468
  br label %for.inc.498

for.inc.498:                                      ; preds = %if.end.497
  %232 = load i32, i32* %j, align 4
  %inc499 = add nsw i32 %232, 1
  store i32 %inc499, i32* %j, align 4
  br label %for.cond.463

for.end.500:                                      ; preds = %for.cond.463
  br label %for.inc.501

for.inc.501:                                      ; preds = %for.end.500
  %233 = load i32, i32* %i, align 4
  %inc502 = add nsw i32 %233, 1
  store i32 %inc502, i32* %i, align 4
  br label %for.cond.460

for.end.503:                                      ; preds = %for.cond.460
  store i32 0, i32* %i, align 4
  br label %for.cond.504

for.cond.504:                                     ; preds = %for.inc.545, %for.end.503
  %234 = load i32, i32* %i, align 4
  %cmp505 = icmp slt i32 %234, 10
  br i1 %cmp505, label %for.body.506, label %for.end.547

for.body.506:                                     ; preds = %for.cond.504
  store i32 0, i32* %j, align 4
  br label %for.cond.507

for.cond.507:                                     ; preds = %for.inc.542, %for.body.506
  %235 = load i32, i32* %j, align 4
  %cmp508 = icmp slt i32 %235, 5
  br i1 %cmp508, label %for.body.509, label %for.end.544

for.body.509:                                     ; preds = %for.cond.507
  %236 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type510 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %236, i32 0, i32 5
  %237 = load i32, i32* %type510, align 4
  %cmp511 = icmp eq i32 %237, 2
  br i1 %cmp511, label %if.then.512, label %if.else.526

if.then.512:                                      ; preds = %for.body.509
  %238 = load i32, i32* %j, align 4
  %idxprom513 = sext i32 %238 to i64
  %239 = load i32, i32* %i, align 4
  %idxprom514 = sext i32 %239 to i64
  %240 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %one_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %240, i32 0, i32 6
  %arrayidx515 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts, i32 0, i64 %idxprom514
  %arrayidx516 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx515, i32 0, i64 %idxprom513
  %241 = load i32, i32* %j, align 4
  %idxprom517 = sext i32 %241 to i64
  %242 = load i32, i32* %i, align 4
  %idxprom518 = sext i32 %242 to i64
  %243 = load i32, i32* %model, align 4
  %idxprom519 = sext i32 %243 to i64
  %arrayidx520 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_I, i32 0, i64 %idxprom519
  %arrayidx521 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx520, i32 0, i64 %idxprom518
  %arrayidx522 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx521, i32 0, i64 %idxprom517
  %arrayidx523 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx522, i32 0, i64 0
  %call524 = call double @XRate(%struct.BiContextType* %arrayidx516, i32* %arrayidx523)
  %244 = load double, double* %xr, align 8
  %add525 = fadd double %244, %call524
  store double %add525, double* %xr, align 8
  br label %if.end.541

if.else.526:                                      ; preds = %for.body.509
  %245 = load i32, i32* %j, align 4
  %idxprom527 = sext i32 %245 to i64
  %246 = load i32, i32* %i, align 4
  %idxprom528 = sext i32 %246 to i64
  %247 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %one_contexts529 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %247, i32 0, i32 6
  %arrayidx530 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %one_contexts529, i32 0, i64 %idxprom528
  %arrayidx531 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx530, i32 0, i64 %idxprom527
  %248 = load i32, i32* %j, align 4
  %idxprom532 = sext i32 %248 to i64
  %249 = load i32, i32* %i, align 4
  %idxprom533 = sext i32 %249 to i64
  %250 = load i32, i32* %model, align 4
  %idxprom534 = sext i32 %250 to i64
  %arrayidx535 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ONE_P, i32 0, i64 %idxprom534
  %arrayidx536 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx535, i32 0, i64 %idxprom533
  %arrayidx537 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx536, i32 0, i64 %idxprom532
  %arrayidx538 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx537, i32 0, i64 0
  %call539 = call double @XRate(%struct.BiContextType* %arrayidx531, i32* %arrayidx538)
  %251 = load double, double* %xr, align 8
  %add540 = fadd double %251, %call539
  store double %add540, double* %xr, align 8
  br label %if.end.541

if.end.541:                                       ; preds = %if.else.526, %if.then.512
  br label %for.inc.542

for.inc.542:                                      ; preds = %if.end.541
  %252 = load i32, i32* %j, align 4
  %inc543 = add nsw i32 %252, 1
  store i32 %inc543, i32* %j, align 4
  br label %for.cond.507

for.end.544:                                      ; preds = %for.cond.507
  br label %for.inc.545

for.inc.545:                                      ; preds = %for.end.544
  %253 = load i32, i32* %i, align 4
  %inc546 = add nsw i32 %253, 1
  store i32 %inc546, i32* %i, align 4
  br label %for.cond.504

for.end.547:                                      ; preds = %for.cond.504
  store i32 0, i32* %i, align 4
  br label %for.cond.548

for.cond.548:                                     ; preds = %for.inc.589, %for.end.547
  %254 = load i32, i32* %i, align 4
  %cmp549 = icmp slt i32 %254, 10
  br i1 %cmp549, label %for.body.550, label %for.end.591

for.body.550:                                     ; preds = %for.cond.548
  store i32 0, i32* %j, align 4
  br label %for.cond.551

for.cond.551:                                     ; preds = %for.inc.586, %for.body.550
  %255 = load i32, i32* %j, align 4
  %cmp552 = icmp slt i32 %255, 5
  br i1 %cmp552, label %for.body.553, label %for.end.588

for.body.553:                                     ; preds = %for.cond.551
  %256 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type554 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %256, i32 0, i32 5
  %257 = load i32, i32* %type554, align 4
  %cmp555 = icmp eq i32 %257, 2
  br i1 %cmp555, label %if.then.556, label %if.else.570

if.then.556:                                      ; preds = %for.body.553
  %258 = load i32, i32* %j, align 4
  %idxprom557 = sext i32 %258 to i64
  %259 = load i32, i32* %i, align 4
  %idxprom558 = sext i32 %259 to i64
  %260 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %abs_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %260, i32 0, i32 7
  %arrayidx559 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts, i32 0, i64 %idxprom558
  %arrayidx560 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx559, i32 0, i64 %idxprom557
  %261 = load i32, i32* %j, align 4
  %idxprom561 = sext i32 %261 to i64
  %262 = load i32, i32* %i, align 4
  %idxprom562 = sext i32 %262 to i64
  %263 = load i32, i32* %model, align 4
  %idxprom563 = sext i32 %263 to i64
  %arrayidx564 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], [1 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_I, i32 0, i64 %idxprom563
  %arrayidx565 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx564, i32 0, i64 %idxprom562
  %arrayidx566 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx565, i32 0, i64 %idxprom561
  %arrayidx567 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx566, i32 0, i64 0
  %call568 = call double @XRate(%struct.BiContextType* %arrayidx560, i32* %arrayidx567)
  %264 = load double, double* %xr, align 8
  %add569 = fadd double %264, %call568
  store double %add569, double* %xr, align 8
  br label %if.end.585

if.else.570:                                      ; preds = %for.body.553
  %265 = load i32, i32* %j, align 4
  %idxprom571 = sext i32 %265 to i64
  %266 = load i32, i32* %i, align 4
  %idxprom572 = sext i32 %266 to i64
  %267 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %abs_contexts573 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %267, i32 0, i32 7
  %arrayidx574 = getelementptr inbounds [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]]* %abs_contexts573, i32 0, i64 %idxprom572
  %arrayidx575 = getelementptr inbounds [5 x %struct.BiContextType], [5 x %struct.BiContextType]* %arrayidx574, i32 0, i64 %idxprom571
  %268 = load i32, i32* %j, align 4
  %idxprom576 = sext i32 %268 to i64
  %269 = load i32, i32* %i, align 4
  %idxprom577 = sext i32 %269 to i64
  %270 = load i32, i32* %model, align 4
  %idxprom578 = sext i32 %270 to i64
  %arrayidx579 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], [3 x [8 x [5 x [2 x i32]]]]* @INIT_ABS_P, i32 0, i64 %idxprom578
  %arrayidx580 = getelementptr inbounds [8 x [5 x [2 x i32]]], [8 x [5 x [2 x i32]]]* %arrayidx579, i32 0, i64 %idxprom577
  %arrayidx581 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %arrayidx580, i32 0, i64 %idxprom576
  %arrayidx582 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx581, i32 0, i64 0
  %call583 = call double @XRate(%struct.BiContextType* %arrayidx575, i32* %arrayidx582)
  %271 = load double, double* %xr, align 8
  %add584 = fadd double %271, %call583
  store double %add584, double* %xr, align 8
  br label %if.end.585

if.end.585:                                       ; preds = %if.else.570, %if.then.556
  br label %for.inc.586

for.inc.586:                                      ; preds = %if.end.585
  %272 = load i32, i32* %j, align 4
  %inc587 = add nsw i32 %272, 1
  store i32 %inc587, i32* %j, align 4
  br label %for.cond.551

for.end.588:                                      ; preds = %for.cond.551
  br label %for.inc.589

for.inc.589:                                      ; preds = %for.end.588
  %273 = load i32, i32* %i, align 4
  %inc590 = add nsw i32 %273, 1
  store i32 %inc590, i32* %i, align 4
  br label %for.cond.548

for.end.591:                                      ; preds = %for.cond.548
  store i32 0, i32* %i, align 4
  br label %for.cond.592

for.cond.592:                                     ; preds = %for.inc.633, %for.end.591
  %274 = load i32, i32* %i, align 4
  %cmp593 = icmp slt i32 %274, 10
  br i1 %cmp593, label %for.body.594, label %for.end.635

for.body.594:                                     ; preds = %for.cond.592
  store i32 0, i32* %j, align 4
  br label %for.cond.595

for.cond.595:                                     ; preds = %for.inc.630, %for.body.594
  %275 = load i32, i32* %j, align 4
  %cmp596 = icmp slt i32 %275, 15
  br i1 %cmp596, label %for.body.597, label %for.end.632

for.body.597:                                     ; preds = %for.cond.595
  %276 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type598 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %276, i32 0, i32 5
  %277 = load i32, i32* %type598, align 4
  %cmp599 = icmp eq i32 %277, 2
  br i1 %cmp599, label %if.then.600, label %if.else.614

if.then.600:                                      ; preds = %for.body.597
  %278 = load i32, i32* %j, align 4
  %idxprom601 = sext i32 %278 to i64
  %279 = load i32, i32* %i, align 4
  %idxprom602 = sext i32 %279 to i64
  %280 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %fld_map_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %280, i32 0, i32 8
  %arrayidx603 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts, i32 0, i64 %idxprom602
  %arrayidx604 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx603, i32 0, i64 %idxprom601
  %281 = load i32, i32* %j, align 4
  %idxprom605 = sext i32 %281 to i64
  %282 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %282 to i64
  %283 = load i32, i32* %model, align 4
  %idxprom607 = sext i32 %283 to i64
  %arrayidx608 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_I, i32 0, i64 %idxprom607
  %arrayidx609 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx608, i32 0, i64 %idxprom606
  %arrayidx610 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx609, i32 0, i64 %idxprom605
  %arrayidx611 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx610, i32 0, i64 0
  %call612 = call double @XRate(%struct.BiContextType* %arrayidx604, i32* %arrayidx611)
  %284 = load double, double* %xr, align 8
  %add613 = fadd double %284, %call612
  store double %add613, double* %xr, align 8
  br label %if.end.629

if.else.614:                                      ; preds = %for.body.597
  %285 = load i32, i32* %j, align 4
  %idxprom615 = sext i32 %285 to i64
  %286 = load i32, i32* %i, align 4
  %idxprom616 = sext i32 %286 to i64
  %287 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %fld_map_contexts617 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %287, i32 0, i32 8
  %arrayidx618 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_map_contexts617, i32 0, i64 %idxprom616
  %arrayidx619 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx618, i32 0, i64 %idxprom615
  %288 = load i32, i32* %j, align 4
  %idxprom620 = sext i32 %288 to i64
  %289 = load i32, i32* %i, align 4
  %idxprom621 = sext i32 %289 to i64
  %290 = load i32, i32* %model, align 4
  %idxprom622 = sext i32 %290 to i64
  %arrayidx623 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_MAP_P, i32 0, i64 %idxprom622
  %arrayidx624 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx623, i32 0, i64 %idxprom621
  %arrayidx625 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx624, i32 0, i64 %idxprom620
  %arrayidx626 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx625, i32 0, i64 0
  %call627 = call double @XRate(%struct.BiContextType* %arrayidx619, i32* %arrayidx626)
  %291 = load double, double* %xr, align 8
  %add628 = fadd double %291, %call627
  store double %add628, double* %xr, align 8
  br label %if.end.629

if.end.629:                                       ; preds = %if.else.614, %if.then.600
  br label %for.inc.630

for.inc.630:                                      ; preds = %if.end.629
  %292 = load i32, i32* %j, align 4
  %inc631 = add nsw i32 %292, 1
  store i32 %inc631, i32* %j, align 4
  br label %for.cond.595

for.end.632:                                      ; preds = %for.cond.595
  br label %for.inc.633

for.inc.633:                                      ; preds = %for.end.632
  %293 = load i32, i32* %i, align 4
  %inc634 = add nsw i32 %293, 1
  store i32 %inc634, i32* %i, align 4
  br label %for.cond.592

for.end.635:                                      ; preds = %for.cond.592
  store i32 0, i32* %i, align 4
  br label %for.cond.636

for.cond.636:                                     ; preds = %for.inc.677, %for.end.635
  %294 = load i32, i32* %i, align 4
  %cmp637 = icmp slt i32 %294, 10
  br i1 %cmp637, label %for.body.638, label %for.end.679

for.body.638:                                     ; preds = %for.cond.636
  store i32 0, i32* %j, align 4
  br label %for.cond.639

for.cond.639:                                     ; preds = %for.inc.674, %for.body.638
  %295 = load i32, i32* %j, align 4
  %cmp640 = icmp slt i32 %295, 15
  br i1 %cmp640, label %for.body.641, label %for.end.676

for.body.641:                                     ; preds = %for.cond.639
  %296 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type642 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %296, i32 0, i32 5
  %297 = load i32, i32* %type642, align 4
  %cmp643 = icmp eq i32 %297, 2
  br i1 %cmp643, label %if.then.644, label %if.else.658

if.then.644:                                      ; preds = %for.body.641
  %298 = load i32, i32* %j, align 4
  %idxprom645 = sext i32 %298 to i64
  %299 = load i32, i32* %i, align 4
  %idxprom646 = sext i32 %299 to i64
  %300 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %fld_last_contexts = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %300, i32 0, i32 9
  %arrayidx647 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts, i32 0, i64 %idxprom646
  %arrayidx648 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx647, i32 0, i64 %idxprom645
  %301 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %301 to i64
  %302 = load i32, i32* %i, align 4
  %idxprom650 = sext i32 %302 to i64
  %303 = load i32, i32* %model, align 4
  %idxprom651 = sext i32 %303 to i64
  %arrayidx652 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], [1 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_I, i32 0, i64 %idxprom651
  %arrayidx653 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx652, i32 0, i64 %idxprom650
  %arrayidx654 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx653, i32 0, i64 %idxprom649
  %arrayidx655 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx654, i32 0, i64 0
  %call656 = call double @XRate(%struct.BiContextType* %arrayidx648, i32* %arrayidx655)
  %304 = load double, double* %xr, align 8
  %add657 = fadd double %304, %call656
  store double %add657, double* %xr, align 8
  br label %if.end.673

if.else.658:                                      ; preds = %for.body.641
  %305 = load i32, i32* %j, align 4
  %idxprom659 = sext i32 %305 to i64
  %306 = load i32, i32* %i, align 4
  %idxprom660 = sext i32 %306 to i64
  %307 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tc.addr, align 8
  %fld_last_contexts661 = getelementptr inbounds %struct.TextureInfoContexts, %struct.TextureInfoContexts* %307, i32 0, i32 9
  %arrayidx662 = getelementptr inbounds [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]]* %fld_last_contexts661, i32 0, i64 %idxprom660
  %arrayidx663 = getelementptr inbounds [15 x %struct.BiContextType], [15 x %struct.BiContextType]* %arrayidx662, i32 0, i64 %idxprom659
  %308 = load i32, i32* %j, align 4
  %idxprom664 = sext i32 %308 to i64
  %309 = load i32, i32* %i, align 4
  %idxprom665 = sext i32 %309 to i64
  %310 = load i32, i32* %model, align 4
  %idxprom666 = sext i32 %310 to i64
  %arrayidx667 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], [3 x [8 x [15 x [2 x i32]]]]* @INIT_FLD_LAST_P, i32 0, i64 %idxprom666
  %arrayidx668 = getelementptr inbounds [8 x [15 x [2 x i32]]], [8 x [15 x [2 x i32]]]* %arrayidx667, i32 0, i64 %idxprom665
  %arrayidx669 = getelementptr inbounds [15 x [2 x i32]], [15 x [2 x i32]]* %arrayidx668, i32 0, i64 %idxprom664
  %arrayidx670 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx669, i32 0, i64 0
  %call671 = call double @XRate(%struct.BiContextType* %arrayidx663, i32* %arrayidx670)
  %311 = load double, double* %xr, align 8
  %add672 = fadd double %311, %call671
  store double %add672, double* %xr, align 8
  br label %if.end.673

if.end.673:                                       ; preds = %if.else.658, %if.then.644
  br label %for.inc.674

for.inc.674:                                      ; preds = %if.end.673
  %312 = load i32, i32* %j, align 4
  %inc675 = add nsw i32 %312, 1
  store i32 %inc675, i32* %j, align 4
  br label %for.cond.639

for.end.676:                                      ; preds = %for.cond.639
  br label %for.inc.677

for.inc.677:                                      ; preds = %for.end.676
  %313 = load i32, i32* %i, align 4
  %inc678 = add nsw i32 %313, 1
  store i32 %inc678, i32* %i, align 4
  br label %for.cond.636

for.end.679:                                      ; preds = %for.cond.636
  %314 = load double, double* %xr, align 8
  %315 = load double, double* %min_xr, align 8
  %cmp680 = fcmp olt double %314, %315
  br i1 %cmp680, label %if.then.681, label %if.end.682

if.then.681:                                      ; preds = %for.end.679
  %316 = load double, double* %xr, align 8
  store double %316, double* %min_xr, align 8
  %317 = load i32, i32* %model, align 4
  %318 = load i32*, i32** %mnumber.addr, align 8
  store i32 %317, i32* %318, align 4
  br label %if.end.682

if.end.682:                                       ; preds = %if.then.681, %for.end.679
  br label %for.inc.683

for.inc.683:                                      ; preds = %if.end.682
  %319 = load i32, i32* %model, align 4
  %inc684 = add nsw i32 %319, 1
  store i32 %inc684, i32* %model, align 4
  br label %for.cond

for.end.685:                                      ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @store_contexts() #0 {
entry:
  %frame_field = alloca i32, align 4
  %img_type = alloca i32, align 4
  %ctx_number = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %field_picture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 110
  %1 = load i32, i32* %field_picture, align 4
  store i32 %1, i32* %frame_field, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 5
  %3 = load i32, i32* %type, align 4
  store i32 %3, i32* %img_type, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 60
  %5 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %start_mb_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %5, i32 0, i32 3
  %6 = load i32, i32* %start_mb_nr, align 4
  %7 = load i32, i32* @num_mb_per_slice, align 4
  %div = sdiv i32 %6, %7
  store i32 %div, i32* %ctx_number, align 4
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %context_init_method = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 151
  %9 = load i32, i32* %context_init_method, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ctx_number, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load i32, i32* %img_type, align 4
  %idxprom1 = sext i32 %11 to i64
  %12 = load i32, i32* %frame_field, align 4
  %idxprom2 = sext i32 %12 to i64
  %13 = load i32***, i32**** @initialized, align 8
  %arrayidx = getelementptr inbounds i32**, i32*** %13, i64 %idxprom2
  %14 = load i32**, i32*** %arrayidx, align 8
  %arrayidx3 = getelementptr inbounds i32*, i32** %14, i64 %idxprom1
  %15 = load i32*, i32** %arrayidx3, align 8
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom
  store i32 1, i32* %arrayidx4, align 4
  %16 = load i32, i32* %img_type, align 4
  %idxprom5 = sext i32 %16 to i64
  %17 = load i32, i32* %frame_field, align 4
  %idxprom6 = sext i32 %17 to i64
  %18 = load i32***, i32**** @model_number, align 8
  %arrayidx7 = getelementptr inbounds i32**, i32*** %18, i64 %idxprom6
  %19 = load i32**, i32*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32*, i32** %19, i64 %idxprom5
  %20 = load i32*, i32** %arrayidx8, align 8
  %21 = load i32, i32* %ctx_number, align 4
  %idx.ext = sext i32 %21 to i64
  %add.ptr = getelementptr inbounds i32, i32* %20, i64 %idx.ext
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 60
  %23 = load %struct.Slice*, %struct.Slice** %currentSlice9, align 8
  %mot_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %23, i32 0, i32 7
  %24 = load %struct.MotionInfoContexts*, %struct.MotionInfoContexts** %mot_ctx, align 8
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 60
  %26 = load %struct.Slice*, %struct.Slice** %currentSlice10, align 8
  %tex_ctx = getelementptr inbounds %struct.Slice, %struct.Slice* %26, i32 0, i32 8
  %27 = load %struct.TextureInfoContexts*, %struct.TextureInfoContexts** %tex_ctx, align 8
  call void @GetCtxModelNumber(i32* %add.ptr, %struct.MotionInfoContexts* %24, %struct.TextureInfoContexts* %27)
  br label %if.end

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @update_field_frame_contexts(i32 %field) #0 {
entry:
  %field.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %field, i32* %field.addr, align 4
  %0 = load i32, i32* %field.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.23, %if.then
  %1 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %1, 4
  br i1 %cmp, label %for.body, label %for.end.25

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @number_of_slices, align 4
  %cmp2 = icmp slt i32 %2, %3
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %4 = load i32, i32* %i, align 4
  %shr = ashr i32 %4, 1
  %idxprom = sext i32 %shr to i64
  %5 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %5 to i64
  %6 = load i32***, i32**** @initialized, align 8
  %arrayidx = getelementptr inbounds i32**, i32*** %6, i64 1
  %7 = load i32**, i32*** %arrayidx, align 8
  %arrayidx5 = getelementptr inbounds i32*, i32** %7, i64 %idxprom4
  %8 = load i32*, i32** %arrayidx5, align 8
  %arrayidx6 = getelementptr inbounds i32, i32* %8, i64 %idxprom
  %9 = load i32, i32* %arrayidx6, align 4
  %10 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %10 to i64
  %11 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load i32***, i32**** @initialized, align 8
  %arrayidx9 = getelementptr inbounds i32**, i32*** %12, i64 0
  %13 = load i32**, i32*** %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds i32*, i32** %13, i64 %idxprom8
  %14 = load i32*, i32** %arrayidx10, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %14, i64 %idxprom7
  store i32 %9, i32* %arrayidx11, align 4
  %15 = load i32, i32* %i, align 4
  %shr12 = ashr i32 %15, 1
  %idxprom13 = sext i32 %shr12 to i64
  %16 = load i32, i32* %j, align 4
  %idxprom14 = sext i32 %16 to i64
  %17 = load i32***, i32**** @model_number, align 8
  %arrayidx15 = getelementptr inbounds i32**, i32*** %17, i64 1
  %18 = load i32**, i32*** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i32*, i32** %18, i64 %idxprom14
  %19 = load i32*, i32** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i32, i32* %19, i64 %idxprom13
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %22 = load i32, i32* %j, align 4
  %idxprom19 = sext i32 %22 to i64
  %23 = load i32***, i32**** @model_number, align 8
  %arrayidx20 = getelementptr inbounds i32**, i32*** %23, i64 0
  %24 = load i32**, i32*** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i32*, i32** %24, i64 %idxprom19
  %25 = load i32*, i32** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %25, i64 %idxprom18
  store i32 %20, i32* %arrayidx22, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.3
  %26 = load i32, i32* %i, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.23

for.inc.23:                                       ; preds = %for.end
  %27 = load i32, i32* %j, align 4
  %inc24 = add nsw i32 %27, 1
  store i32 %inc24, i32* %j, align 4
  br label %for.cond

for.end.25:                                       ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  br label %for.cond.26

for.cond.26:                                      ; preds = %for.inc.57, %if.else
  %28 = load i32, i32* %j, align 4
  %cmp27 = icmp slt i32 %28, 4
  br i1 %cmp27, label %for.body.28, label %for.end.59

for.body.28:                                      ; preds = %for.cond.26
  store i32 0, i32* %i, align 4
  br label %for.cond.29

for.cond.29:                                      ; preds = %for.inc.54, %for.body.28
  %29 = load i32, i32* %i, align 4
  %30 = load i32, i32* @number_of_slices, align 4
  %add = add nsw i32 %30, 1
  %shr30 = ashr i32 %add, 1
  %cmp31 = icmp slt i32 %29, %shr30
  br i1 %cmp31, label %for.body.32, label %for.end.56

for.body.32:                                      ; preds = %for.cond.29
  %31 = load i32, i32* %i, align 4
  %shl = shl i32 %31, 1
  %idxprom33 = sext i32 %shl to i64
  %32 = load i32, i32* %j, align 4
  %idxprom34 = sext i32 %32 to i64
  %33 = load i32***, i32**** @initialized, align 8
  %arrayidx35 = getelementptr inbounds i32**, i32*** %33, i64 0
  %34 = load i32**, i32*** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i32*, i32** %34, i64 %idxprom34
  %35 = load i32*, i32** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %35, i64 %idxprom33
  %36 = load i32, i32* %arrayidx37, align 4
  %37 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %37 to i64
  %38 = load i32, i32* %j, align 4
  %idxprom39 = sext i32 %38 to i64
  %39 = load i32***, i32**** @initialized, align 8
  %arrayidx40 = getelementptr inbounds i32**, i32*** %39, i64 1
  %40 = load i32**, i32*** %arrayidx40, align 8
  %arrayidx41 = getelementptr inbounds i32*, i32** %40, i64 %idxprom39
  %41 = load i32*, i32** %arrayidx41, align 8
  %arrayidx42 = getelementptr inbounds i32, i32* %41, i64 %idxprom38
  store i32 %36, i32* %arrayidx42, align 4
  %42 = load i32, i32* %i, align 4
  %shl43 = shl i32 %42, 1
  %idxprom44 = sext i32 %shl43 to i64
  %43 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %43 to i64
  %44 = load i32***, i32**** @model_number, align 8
  %arrayidx46 = getelementptr inbounds i32**, i32*** %44, i64 0
  %45 = load i32**, i32*** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i32*, i32** %45, i64 %idxprom45
  %46 = load i32*, i32** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i32, i32* %46, i64 %idxprom44
  %47 = load i32, i32* %arrayidx48, align 4
  %48 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %48 to i64
  %49 = load i32, i32* %j, align 4
  %idxprom50 = sext i32 %49 to i64
  %50 = load i32***, i32**** @model_number, align 8
  %arrayidx51 = getelementptr inbounds i32**, i32*** %50, i64 1
  %51 = load i32**, i32*** %arrayidx51, align 8
  %arrayidx52 = getelementptr inbounds i32*, i32** %51, i64 %idxprom50
  %52 = load i32*, i32** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i32, i32* %52, i64 %idxprom49
  store i32 %47, i32* %arrayidx53, align 4
  br label %for.inc.54

for.inc.54:                                       ; preds = %for.body.32
  %53 = load i32, i32* %i, align 4
  %inc55 = add nsw i32 %53, 1
  store i32 %inc55, i32* %i, align 4
  br label %for.cond.29

for.end.56:                                       ; preds = %for.cond.29
  br label %for.inc.57

for.inc.57:                                       ; preds = %for.end.56
  %54 = load i32, i32* %j, align 4
  %inc58 = add nsw i32 %54, 1
  store i32 %inc58, i32* %j, align 4
  br label %for.cond.26

for.end.59:                                       ; preds = %for.cond.26
  br label %if.end

if.end:                                           ; preds = %for.end.59, %for.end.25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @imin(i32 %a, i32 %b) #3 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load i32, i32* %b.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
